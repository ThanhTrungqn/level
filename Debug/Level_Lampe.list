
Level_Lampe.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001bbcc  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003110  0801bd7c  0801bd7c  0002bd7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001b2  0801ee8c  0801ee8c  0002ee8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 ExtFlashSection 00013ec0  0801f040  0801f040  0002f040  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000c  08032f00  08032f00  00042f00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000000  08032f0c  08032f0c  000758f8  2**0
                  CONTENTS
  7 .ARM          00000008  08032f0c  08032f0c  00042f0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  08032f14  08032f14  000758f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  08032f14  08032f14  00042f14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  08032f28  08032f28  00042f28  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         000000f8  20000000  08032f30  00050000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_Framebuffer 00025800  200000f8  08033028  000500f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00001714  200258f8  08058828  000758f8  2**2
                  ALLOC
 14 ._user_heap_stack 00000604  2002700c  08058828  0007700c  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000758f8  2**0
                  CONTENTS, READONLY
 16 .debug_info   000385f1  00000000  00000000  00075928  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_abbrev 00009f8e  00000000  00000000  000adf19  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_aranges 00002978  00000000  00000000  000b7ea8  2**3
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_ranges 00002608  00000000  00000000  000ba820  2**3
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_macro  0002e482  00000000  00000000  000bce28  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_line   000277cf  00000000  00000000  000eb2aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_str    000f0a8d  00000000  00000000  00112a79  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .comment      000000fa  00000000  00000000  00203506  2**0
                  CONTENTS, READONLY
 24 .debug_frame  0000b784  00000000  00000000  00203600  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200258f8 	.word	0x200258f8
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801bd64 	.word	0x0801bd64

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200258fc 	.word	0x200258fc
 80001ec:	0801bd64 	.word	0x0801bd64

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b972 	b.w	800059c <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9e08      	ldr	r6, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	4688      	mov	r8, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d14b      	bne.n	8000376 <__udivmoddi4+0xa6>
 80002de:	428a      	cmp	r2, r1
 80002e0:	4615      	mov	r5, r2
 80002e2:	d967      	bls.n	80003b4 <__udivmoddi4+0xe4>
 80002e4:	fab2 f282 	clz	r2, r2
 80002e8:	b14a      	cbz	r2, 80002fe <__udivmoddi4+0x2e>
 80002ea:	f1c2 0720 	rsb	r7, r2, #32
 80002ee:	fa01 f302 	lsl.w	r3, r1, r2
 80002f2:	fa20 f707 	lsr.w	r7, r0, r7
 80002f6:	4095      	lsls	r5, r2
 80002f8:	ea47 0803 	orr.w	r8, r7, r3
 80002fc:	4094      	lsls	r4, r2
 80002fe:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000302:	0c23      	lsrs	r3, r4, #16
 8000304:	fbb8 f7fe 	udiv	r7, r8, lr
 8000308:	fa1f fc85 	uxth.w	ip, r5
 800030c:	fb0e 8817 	mls	r8, lr, r7, r8
 8000310:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000314:	fb07 f10c 	mul.w	r1, r7, ip
 8000318:	4299      	cmp	r1, r3
 800031a:	d909      	bls.n	8000330 <__udivmoddi4+0x60>
 800031c:	18eb      	adds	r3, r5, r3
 800031e:	f107 30ff 	add.w	r0, r7, #4294967295
 8000322:	f080 811b 	bcs.w	800055c <__udivmoddi4+0x28c>
 8000326:	4299      	cmp	r1, r3
 8000328:	f240 8118 	bls.w	800055c <__udivmoddi4+0x28c>
 800032c:	3f02      	subs	r7, #2
 800032e:	442b      	add	r3, r5
 8000330:	1a5b      	subs	r3, r3, r1
 8000332:	b2a4      	uxth	r4, r4
 8000334:	fbb3 f0fe 	udiv	r0, r3, lr
 8000338:	fb0e 3310 	mls	r3, lr, r0, r3
 800033c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000340:	fb00 fc0c 	mul.w	ip, r0, ip
 8000344:	45a4      	cmp	ip, r4
 8000346:	d909      	bls.n	800035c <__udivmoddi4+0x8c>
 8000348:	192c      	adds	r4, r5, r4
 800034a:	f100 33ff 	add.w	r3, r0, #4294967295
 800034e:	f080 8107 	bcs.w	8000560 <__udivmoddi4+0x290>
 8000352:	45a4      	cmp	ip, r4
 8000354:	f240 8104 	bls.w	8000560 <__udivmoddi4+0x290>
 8000358:	3802      	subs	r0, #2
 800035a:	442c      	add	r4, r5
 800035c:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000360:	eba4 040c 	sub.w	r4, r4, ip
 8000364:	2700      	movs	r7, #0
 8000366:	b11e      	cbz	r6, 8000370 <__udivmoddi4+0xa0>
 8000368:	40d4      	lsrs	r4, r2
 800036a:	2300      	movs	r3, #0
 800036c:	e9c6 4300 	strd	r4, r3, [r6]
 8000370:	4639      	mov	r1, r7
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	428b      	cmp	r3, r1
 8000378:	d909      	bls.n	800038e <__udivmoddi4+0xbe>
 800037a:	2e00      	cmp	r6, #0
 800037c:	f000 80eb 	beq.w	8000556 <__udivmoddi4+0x286>
 8000380:	2700      	movs	r7, #0
 8000382:	e9c6 0100 	strd	r0, r1, [r6]
 8000386:	4638      	mov	r0, r7
 8000388:	4639      	mov	r1, r7
 800038a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800038e:	fab3 f783 	clz	r7, r3
 8000392:	2f00      	cmp	r7, #0
 8000394:	d147      	bne.n	8000426 <__udivmoddi4+0x156>
 8000396:	428b      	cmp	r3, r1
 8000398:	d302      	bcc.n	80003a0 <__udivmoddi4+0xd0>
 800039a:	4282      	cmp	r2, r0
 800039c:	f200 80fa 	bhi.w	8000594 <__udivmoddi4+0x2c4>
 80003a0:	1a84      	subs	r4, r0, r2
 80003a2:	eb61 0303 	sbc.w	r3, r1, r3
 80003a6:	2001      	movs	r0, #1
 80003a8:	4698      	mov	r8, r3
 80003aa:	2e00      	cmp	r6, #0
 80003ac:	d0e0      	beq.n	8000370 <__udivmoddi4+0xa0>
 80003ae:	e9c6 4800 	strd	r4, r8, [r6]
 80003b2:	e7dd      	b.n	8000370 <__udivmoddi4+0xa0>
 80003b4:	b902      	cbnz	r2, 80003b8 <__udivmoddi4+0xe8>
 80003b6:	deff      	udf	#255	; 0xff
 80003b8:	fab2 f282 	clz	r2, r2
 80003bc:	2a00      	cmp	r2, #0
 80003be:	f040 808f 	bne.w	80004e0 <__udivmoddi4+0x210>
 80003c2:	1b49      	subs	r1, r1, r5
 80003c4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80003c8:	fa1f f885 	uxth.w	r8, r5
 80003cc:	2701      	movs	r7, #1
 80003ce:	fbb1 fcfe 	udiv	ip, r1, lr
 80003d2:	0c23      	lsrs	r3, r4, #16
 80003d4:	fb0e 111c 	mls	r1, lr, ip, r1
 80003d8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80003dc:	fb08 f10c 	mul.w	r1, r8, ip
 80003e0:	4299      	cmp	r1, r3
 80003e2:	d907      	bls.n	80003f4 <__udivmoddi4+0x124>
 80003e4:	18eb      	adds	r3, r5, r3
 80003e6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003ea:	d202      	bcs.n	80003f2 <__udivmoddi4+0x122>
 80003ec:	4299      	cmp	r1, r3
 80003ee:	f200 80cd 	bhi.w	800058c <__udivmoddi4+0x2bc>
 80003f2:	4684      	mov	ip, r0
 80003f4:	1a59      	subs	r1, r3, r1
 80003f6:	b2a3      	uxth	r3, r4
 80003f8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003fc:	fb0e 1410 	mls	r4, lr, r0, r1
 8000400:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000404:	fb08 f800 	mul.w	r8, r8, r0
 8000408:	45a0      	cmp	r8, r4
 800040a:	d907      	bls.n	800041c <__udivmoddi4+0x14c>
 800040c:	192c      	adds	r4, r5, r4
 800040e:	f100 33ff 	add.w	r3, r0, #4294967295
 8000412:	d202      	bcs.n	800041a <__udivmoddi4+0x14a>
 8000414:	45a0      	cmp	r8, r4
 8000416:	f200 80b6 	bhi.w	8000586 <__udivmoddi4+0x2b6>
 800041a:	4618      	mov	r0, r3
 800041c:	eba4 0408 	sub.w	r4, r4, r8
 8000420:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000424:	e79f      	b.n	8000366 <__udivmoddi4+0x96>
 8000426:	f1c7 0c20 	rsb	ip, r7, #32
 800042a:	40bb      	lsls	r3, r7
 800042c:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000430:	ea4e 0e03 	orr.w	lr, lr, r3
 8000434:	fa01 f407 	lsl.w	r4, r1, r7
 8000438:	fa20 f50c 	lsr.w	r5, r0, ip
 800043c:	fa21 f30c 	lsr.w	r3, r1, ip
 8000440:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000444:	4325      	orrs	r5, r4
 8000446:	fbb3 f9f8 	udiv	r9, r3, r8
 800044a:	0c2c      	lsrs	r4, r5, #16
 800044c:	fb08 3319 	mls	r3, r8, r9, r3
 8000450:	fa1f fa8e 	uxth.w	sl, lr
 8000454:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000458:	fb09 f40a 	mul.w	r4, r9, sl
 800045c:	429c      	cmp	r4, r3
 800045e:	fa02 f207 	lsl.w	r2, r2, r7
 8000462:	fa00 f107 	lsl.w	r1, r0, r7
 8000466:	d90b      	bls.n	8000480 <__udivmoddi4+0x1b0>
 8000468:	eb1e 0303 	adds.w	r3, lr, r3
 800046c:	f109 30ff 	add.w	r0, r9, #4294967295
 8000470:	f080 8087 	bcs.w	8000582 <__udivmoddi4+0x2b2>
 8000474:	429c      	cmp	r4, r3
 8000476:	f240 8084 	bls.w	8000582 <__udivmoddi4+0x2b2>
 800047a:	f1a9 0902 	sub.w	r9, r9, #2
 800047e:	4473      	add	r3, lr
 8000480:	1b1b      	subs	r3, r3, r4
 8000482:	b2ad      	uxth	r5, r5
 8000484:	fbb3 f0f8 	udiv	r0, r3, r8
 8000488:	fb08 3310 	mls	r3, r8, r0, r3
 800048c:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000490:	fb00 fa0a 	mul.w	sl, r0, sl
 8000494:	45a2      	cmp	sl, r4
 8000496:	d908      	bls.n	80004aa <__udivmoddi4+0x1da>
 8000498:	eb1e 0404 	adds.w	r4, lr, r4
 800049c:	f100 33ff 	add.w	r3, r0, #4294967295
 80004a0:	d26b      	bcs.n	800057a <__udivmoddi4+0x2aa>
 80004a2:	45a2      	cmp	sl, r4
 80004a4:	d969      	bls.n	800057a <__udivmoddi4+0x2aa>
 80004a6:	3802      	subs	r0, #2
 80004a8:	4474      	add	r4, lr
 80004aa:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 80004ae:	fba0 8902 	umull	r8, r9, r0, r2
 80004b2:	eba4 040a 	sub.w	r4, r4, sl
 80004b6:	454c      	cmp	r4, r9
 80004b8:	46c2      	mov	sl, r8
 80004ba:	464b      	mov	r3, r9
 80004bc:	d354      	bcc.n	8000568 <__udivmoddi4+0x298>
 80004be:	d051      	beq.n	8000564 <__udivmoddi4+0x294>
 80004c0:	2e00      	cmp	r6, #0
 80004c2:	d069      	beq.n	8000598 <__udivmoddi4+0x2c8>
 80004c4:	ebb1 050a 	subs.w	r5, r1, sl
 80004c8:	eb64 0403 	sbc.w	r4, r4, r3
 80004cc:	fa04 fc0c 	lsl.w	ip, r4, ip
 80004d0:	40fd      	lsrs	r5, r7
 80004d2:	40fc      	lsrs	r4, r7
 80004d4:	ea4c 0505 	orr.w	r5, ip, r5
 80004d8:	e9c6 5400 	strd	r5, r4, [r6]
 80004dc:	2700      	movs	r7, #0
 80004de:	e747      	b.n	8000370 <__udivmoddi4+0xa0>
 80004e0:	f1c2 0320 	rsb	r3, r2, #32
 80004e4:	fa20 f703 	lsr.w	r7, r0, r3
 80004e8:	4095      	lsls	r5, r2
 80004ea:	fa01 f002 	lsl.w	r0, r1, r2
 80004ee:	fa21 f303 	lsr.w	r3, r1, r3
 80004f2:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80004f6:	4338      	orrs	r0, r7
 80004f8:	0c01      	lsrs	r1, r0, #16
 80004fa:	fbb3 f7fe 	udiv	r7, r3, lr
 80004fe:	fa1f f885 	uxth.w	r8, r5
 8000502:	fb0e 3317 	mls	r3, lr, r7, r3
 8000506:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800050a:	fb07 f308 	mul.w	r3, r7, r8
 800050e:	428b      	cmp	r3, r1
 8000510:	fa04 f402 	lsl.w	r4, r4, r2
 8000514:	d907      	bls.n	8000526 <__udivmoddi4+0x256>
 8000516:	1869      	adds	r1, r5, r1
 8000518:	f107 3cff 	add.w	ip, r7, #4294967295
 800051c:	d22f      	bcs.n	800057e <__udivmoddi4+0x2ae>
 800051e:	428b      	cmp	r3, r1
 8000520:	d92d      	bls.n	800057e <__udivmoddi4+0x2ae>
 8000522:	3f02      	subs	r7, #2
 8000524:	4429      	add	r1, r5
 8000526:	1acb      	subs	r3, r1, r3
 8000528:	b281      	uxth	r1, r0
 800052a:	fbb3 f0fe 	udiv	r0, r3, lr
 800052e:	fb0e 3310 	mls	r3, lr, r0, r3
 8000532:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000536:	fb00 f308 	mul.w	r3, r0, r8
 800053a:	428b      	cmp	r3, r1
 800053c:	d907      	bls.n	800054e <__udivmoddi4+0x27e>
 800053e:	1869      	adds	r1, r5, r1
 8000540:	f100 3cff 	add.w	ip, r0, #4294967295
 8000544:	d217      	bcs.n	8000576 <__udivmoddi4+0x2a6>
 8000546:	428b      	cmp	r3, r1
 8000548:	d915      	bls.n	8000576 <__udivmoddi4+0x2a6>
 800054a:	3802      	subs	r0, #2
 800054c:	4429      	add	r1, r5
 800054e:	1ac9      	subs	r1, r1, r3
 8000550:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000554:	e73b      	b.n	80003ce <__udivmoddi4+0xfe>
 8000556:	4637      	mov	r7, r6
 8000558:	4630      	mov	r0, r6
 800055a:	e709      	b.n	8000370 <__udivmoddi4+0xa0>
 800055c:	4607      	mov	r7, r0
 800055e:	e6e7      	b.n	8000330 <__udivmoddi4+0x60>
 8000560:	4618      	mov	r0, r3
 8000562:	e6fb      	b.n	800035c <__udivmoddi4+0x8c>
 8000564:	4541      	cmp	r1, r8
 8000566:	d2ab      	bcs.n	80004c0 <__udivmoddi4+0x1f0>
 8000568:	ebb8 0a02 	subs.w	sl, r8, r2
 800056c:	eb69 020e 	sbc.w	r2, r9, lr
 8000570:	3801      	subs	r0, #1
 8000572:	4613      	mov	r3, r2
 8000574:	e7a4      	b.n	80004c0 <__udivmoddi4+0x1f0>
 8000576:	4660      	mov	r0, ip
 8000578:	e7e9      	b.n	800054e <__udivmoddi4+0x27e>
 800057a:	4618      	mov	r0, r3
 800057c:	e795      	b.n	80004aa <__udivmoddi4+0x1da>
 800057e:	4667      	mov	r7, ip
 8000580:	e7d1      	b.n	8000526 <__udivmoddi4+0x256>
 8000582:	4681      	mov	r9, r0
 8000584:	e77c      	b.n	8000480 <__udivmoddi4+0x1b0>
 8000586:	3802      	subs	r0, #2
 8000588:	442c      	add	r4, r5
 800058a:	e747      	b.n	800041c <__udivmoddi4+0x14c>
 800058c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000590:	442b      	add	r3, r5
 8000592:	e72f      	b.n	80003f4 <__udivmoddi4+0x124>
 8000594:	4638      	mov	r0, r7
 8000596:	e708      	b.n	80003aa <__udivmoddi4+0xda>
 8000598:	4637      	mov	r7, r6
 800059a:	e6e9      	b.n	8000370 <__udivmoddi4+0xa0>

0800059c <__aeabi_idiv0>:
 800059c:	4770      	bx	lr
 800059e:	bf00      	nop

080005a0 <BQ25713_Init>:
#include "bq25713.h"


BQ25713_DATA BQ25713;

void BQ25713_Init(I2C_HandleTypeDef i2c_handle){
 80005a0:	b084      	sub	sp, #16
 80005a2:	b580      	push	{r7, lr}
 80005a4:	b082      	sub	sp, #8
 80005a6:	af00      	add	r7, sp, #0
 80005a8:	f107 0c10 	add.w	ip, r7, #16
 80005ac:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	//Initialize I2C Handle
	BQ25713.BQ25713_I2C = i2c_handle;
 80005b0:	4b35      	ldr	r3, [pc, #212]	; (8000688 <BQ25713_Init+0xe8>)
 80005b2:	4618      	mov	r0, r3
 80005b4:	f107 0110 	add.w	r1, r7, #16
 80005b8:	2354      	movs	r3, #84	; 0x54
 80005ba:	461a      	mov	r2, r3
 80005bc:	f01a fa90 	bl	801aae0 <memcpy>
	BQ25713.Device_Id = BQ25713_DEVICE_ID;
 80005c0:	4b31      	ldr	r3, [pc, #196]	; (8000688 <BQ25713_Init+0xe8>)
 80005c2:	2288      	movs	r2, #136	; 0x88
 80005c4:	f883 2056 	strb.w	r2, [r3, #86]	; 0x56
	BQ25713.Manufacture_Id = BQ25713_MANUFACTURE_ID;
 80005c8:	4b2f      	ldr	r3, [pc, #188]	; (8000688 <BQ25713_Init+0xe8>)
 80005ca:	2240      	movs	r2, #64	; 0x40
 80005cc:	f883 2055 	strb.w	r2, [r3, #85]	; 0x55
	BQ25713.I2C_Address = BQ25713_I2C_ADDRESS;
 80005d0:	4b2d      	ldr	r3, [pc, #180]	; (8000688 <BQ25713_Init+0xe8>)
 80005d2:	22d6      	movs	r2, #214	; 0xd6
 80005d4:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54

	HAL_GPIO_WritePin(GPIOE, GPIO_PIN_1, GPIO_PIN_SET);
 80005d8:	2201      	movs	r2, #1
 80005da:	2102      	movs	r1, #2
 80005dc:	482b      	ldr	r0, [pc, #172]	; (800068c <BQ25713_Init+0xec>)
 80005de:	f003 fcc3 	bl	8003f68 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 80005e2:	2201      	movs	r2, #1
 80005e4:	2104      	movs	r1, #4
 80005e6:	4829      	ldr	r0, [pc, #164]	; (800068c <BQ25713_Init+0xec>)
 80005e8:	f003 fcbe 	bl	8003f68 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_SET);
 80005ec:	2201      	movs	r2, #1
 80005ee:	2108      	movs	r1, #8
 80005f0:	4826      	ldr	r0, [pc, #152]	; (800068c <BQ25713_Init+0xec>)
 80005f2:	f003 fcb9 	bl	8003f68 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4, GPIO_PIN_SET);
 80005f6:	2201      	movs	r2, #1
 80005f8:	2110      	movs	r1, #16
 80005fa:	4824      	ldr	r0, [pc, #144]	; (800068c <BQ25713_Init+0xec>)
 80005fc:	f003 fcb4 	bl	8003f68 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_SET);
 8000600:	2201      	movs	r2, #1
 8000602:	2120      	movs	r1, #32
 8000604:	4821      	ldr	r0, [pc, #132]	; (800068c <BQ25713_Init+0xec>)
 8000606:	f003 fcaf 	bl	8003f68 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, GPIO_PIN_SET);
 800060a:	2201      	movs	r2, #1
 800060c:	2140      	movs	r1, #64	; 0x40
 800060e:	481f      	ldr	r0, [pc, #124]	; (800068c <BQ25713_Init+0xec>)
 8000610:	f003 fcaa 	bl	8003f68 <HAL_GPIO_WritePin>


	uint8_t data[2];
	data[0] = 0x00;     // LSB byte of 16bit đata => Fist byte
 8000614:	2300      	movs	r3, #0
 8000616:	713b      	strb	r3, [r7, #4]
	data[1] = 0x00;  	// MSB byte of 16bit data => Second byte
 8000618:	2300      	movs	r3, #0
 800061a:	717b      	strb	r3, [r7, #5]
	uint16_t value_write = 0x0000;
 800061c:	2300      	movs	r3, #0
 800061e:	80fb      	strh	r3, [r7, #6]
	//Check if this is BQ25713 driver?
	read_register_16(BQ25713_REG_MANUFACTURER_ID , data);
 8000620:	1d3b      	adds	r3, r7, #4
 8000622:	4619      	mov	r1, r3
 8000624:	202e      	movs	r0, #46	; 0x2e
 8000626:	f000 f98d 	bl	8000944 <read_register_16>
	if (( data[0] == BQ25713.Manufacture_Id) && (data[1] == BQ25713.Device_Id )){
 800062a:	793a      	ldrb	r2, [r7, #4]
 800062c:	4b16      	ldr	r3, [pc, #88]	; (8000688 <BQ25713_Init+0xe8>)
 800062e:	f893 3055 	ldrb.w	r3, [r3, #85]	; 0x55
 8000632:	429a      	cmp	r2, r3
 8000634:	d120      	bne.n	8000678 <BQ25713_Init+0xd8>
 8000636:	797a      	ldrb	r2, [r7, #5]
 8000638:	4b13      	ldr	r3, [pc, #76]	; (8000688 <BQ25713_Init+0xe8>)
 800063a:	f893 3056 	ldrb.w	r3, [r3, #86]	; 0x56
 800063e:	429a      	cmp	r2, r3
 8000640:	d11a      	bne.n	8000678 <BQ25713_Init+0xd8>

		//Set VSYSMIN = 12.288V (REG0x0D/0C),
		value_write = 0x0030;
 8000642:	2330      	movs	r3, #48	; 0x30
 8000644:	80fb      	strh	r3, [r7, #6]
		write_register_16( BQ25713_REG_MIN_SYSTEM_VOLTAGE , value_write);
 8000646:	88fb      	ldrh	r3, [r7, #6]
 8000648:	4619      	mov	r1, r3
 800064a:	200c      	movs	r0, #12
 800064c:	f000 f99c 	bl	8000988 <write_register_16>
		//SET VBAT = 16.8 V (REG0x05/04).   0xA041;
		value_write = 0x0040;
 8000650:	2340      	movs	r3, #64	; 0x40
 8000652:	80fb      	strh	r3, [r7, #6]
		write_register_16( BQ25713_REG_MAX_CHARGE_VOLTAGE , value_write);
 8000654:	88fb      	ldrh	r3, [r7, #6]
 8000656:	4619      	mov	r1, r3
 8000658:	2004      	movs	r0, #4
 800065a:	f000 f995 	bl	8000988 <write_register_16>
		read_register_16 (BQ25713_REG_MAX_CHARGE_VOLTAGE , data);
 800065e:	1d3b      	adds	r3, r7, #4
 8000660:	4619      	mov	r1, r3
 8000662:	2004      	movs	r0, #4
 8000664:	f000 f96e 	bl	8000944 <read_register_16>

		value_write = 0xFFE0;
 8000668:	f64f 73e0 	movw	r3, #65504	; 0xffe0
 800066c:	80fb      	strh	r3, [r7, #6]
		write_register_16( BQ25713_REG_ADC_OPTION , value_write);
 800066e:	88fb      	ldrh	r3, [r7, #6]
 8000670:	4619      	mov	r1, r3
 8000672:	203a      	movs	r0, #58	; 0x3a
 8000674:	f000 f988 	bl	8000988 <write_register_16>
	}
}
 8000678:	bf00      	nop
 800067a:	3708      	adds	r7, #8
 800067c:	46bd      	mov	sp, r7
 800067e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8000682:	b004      	add	sp, #16
 8000684:	4770      	bx	lr
 8000686:	bf00      	nop
 8000688:	20026bbc 	.word	0x20026bbc
 800068c:	40021000 	.word	0x40021000

08000690 <BQ25713_Default_Charge>:

void BQ25713_Default_Charge(){
 8000690:	b580      	push	{r7, lr}
 8000692:	b082      	sub	sp, #8
 8000694:	af00      	add	r7, sp, #0
	//When have charge
	//Set I_CHAGE = 0 Reg 0x02/03;
	uint16_t value_write = 0x0000;
 8000696:	2300      	movs	r3, #0
 8000698:	80fb      	strh	r3, [r7, #6]
	value_write = 0x0000;
 800069a:	2300      	movs	r3, #0
 800069c:	80fb      	strh	r3, [r7, #6]
	write_register_16( BQ25713_REG_CHARGE_CURRENT , value_write);
 800069e:	88fb      	ldrh	r3, [r7, #6]
 80006a0:	4619      	mov	r1, r3
 80006a2:	2002      	movs	r0, #2
 80006a4:	f000 f970 	bl	8000988 <write_register_16>
	//Set VSYSMIN = 12.288V (REG0x0D/0C),
	value_write = 0x0030;
 80006a8:	2330      	movs	r3, #48	; 0x30
 80006aa:	80fb      	strh	r3, [r7, #6]
	write_register_16( BQ25713_REG_MIN_SYSTEM_VOLTAGE , value_write);
 80006ac:	88fb      	ldrh	r3, [r7, #6]
 80006ae:	4619      	mov	r1, r3
 80006b0:	200c      	movs	r0, #12
 80006b2:	f000 f969 	bl	8000988 <write_register_16>
	//SET VBAT = 16.8 V (REG0x05/04).   0xA041;
	value_write = 0x0040;
 80006b6:	2340      	movs	r3, #64	; 0x40
 80006b8:	80fb      	strh	r3, [r7, #6]
	write_register_16( BQ25713_REG_MAX_CHARGE_VOLTAGE , value_write);
 80006ba:	88fb      	ldrh	r3, [r7, #6]
 80006bc:	4619      	mov	r1, r3
 80006be:	2004      	movs	r0, #4
 80006c0:	f000 f962 	bl	8000988 <write_register_16>

	uint8_t data[2];
		data[0] = 0x00;     // LSB byte of 16bit đata => Fist byte
 80006c4:	2300      	movs	r3, #0
 80006c6:	713b      	strb	r3, [r7, #4]
		data[1] = 0x00;  	// MSB byte of 16bit data => Second byte
 80006c8:	2300      	movs	r3, #0
 80006ca:	717b      	strb	r3, [r7, #5]
		read_register_16 (BQ25713_REG_MAX_CHARGE_VOLTAGE , data);
 80006cc:	1d3b      	adds	r3, r7, #4
 80006ce:	4619      	mov	r1, r3
 80006d0:	2004      	movs	r0, #4
 80006d2:	f000 f937 	bl	8000944 <read_register_16>

	//Disable ILIM_HIZ pin to set input current limit. (REG0x33/32 BIT7=0)
	value_write = 0x3702;
 80006d6:	f243 7302 	movw	r3, #14082	; 0x3702
 80006da:	80fb      	strh	r3, [r7, #6]
	write_register_16( BQ25713_REG_CHARGE_OPTION_2 , value_write);
 80006dc:	88fb      	ldrh	r3, [r7, #6]
 80006de:	4619      	mov	r1, r3
 80006e0:	2032      	movs	r0, #50	; 0x32
 80006e2:	f000 f951 	bl	8000988 <write_register_16>
	//Set I_CHAGE = 512mA Reg 0x02/03; //À faire
	value_write = 0x0004;
 80006e6:	2304      	movs	r3, #4
 80006e8:	80fb      	strh	r3, [r7, #6]
	write_register_16( BQ25713_REG_CHARGE_CURRENT , value_write);
 80006ea:	88fb      	ldrh	r3, [r7, #6]
 80006ec:	4619      	mov	r1, r3
 80006ee:	2002      	movs	r0, #2
 80006f0:	f000 f94a 	bl	8000988 <write_register_16>

}
 80006f4:	bf00      	nop
 80006f6:	3708      	adds	r7, #8
 80006f8:	46bd      	mov	sp, r7
 80006fa:	bd80      	pop	{r7, pc}

080006fc <BQ25713_Task>:

void BQ25713_Task(){
 80006fc:	b580      	push	{r7, lr}
 80006fe:	b082      	sub	sp, #8
 8000700:	af00      	add	r7, sp, #0

	uint8_t data[2];
	data[0] = 0x00;     // LSB byte of 16bit đata => Fist byte
 8000702:	2300      	movs	r3, #0
 8000704:	713b      	strb	r3, [r7, #4]
	data[1] = 0x00;  	// MSB byte of 16bit data => Second byte
 8000706:	2300      	movs	r3, #0
 8000708:	717b      	strb	r3, [r7, #5]
	read_register_16 (BQ25713_REG_ADC_VSYS_VBAT , data);
 800070a:	1d3b      	adds	r3, r7, #4
 800070c:	4619      	mov	r1, r3
 800070e:	202c      	movs	r0, #44	; 0x2c
 8000710:	f000 f918 	bl	8000944 <read_register_16>
	BQ25713.adc_vbat = (uint8_t)(data[1]*100/255);
 8000714:	797b      	ldrb	r3, [r7, #5]
 8000716:	461a      	mov	r2, r3
 8000718:	2364      	movs	r3, #100	; 0x64
 800071a:	fb03 f302 	mul.w	r3, r3, r2
 800071e:	4a80      	ldr	r2, [pc, #512]	; (8000920 <BQ25713_Task+0x224>)
 8000720:	fb82 1203 	smull	r1, r2, r2, r3
 8000724:	441a      	add	r2, r3
 8000726:	11d2      	asrs	r2, r2, #7
 8000728:	17db      	asrs	r3, r3, #31
 800072a:	1ad3      	subs	r3, r2, r3
 800072c:	b2da      	uxtb	r2, r3
 800072e:	4b7d      	ldr	r3, [pc, #500]	; (8000924 <BQ25713_Task+0x228>)
 8000730:	f883 2057 	strb.w	r2, [r3, #87]	; 0x57

	if (( BQ25713.adc_vbat >= 0)&&( BQ25713.adc_vbat < 15)){
 8000734:	4b7b      	ldr	r3, [pc, #492]	; (8000924 <BQ25713_Task+0x228>)
 8000736:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 800073a:	2b0e      	cmp	r3, #14
 800073c:	d81e      	bhi.n	800077c <BQ25713_Task+0x80>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, GPIO_PIN_RESET);
 800073e:	2200      	movs	r2, #0
 8000740:	2140      	movs	r1, #64	; 0x40
 8000742:	4879      	ldr	r0, [pc, #484]	; (8000928 <BQ25713_Task+0x22c>)
 8000744:	f003 fc10 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_SET);
 8000748:	2201      	movs	r2, #1
 800074a:	2120      	movs	r1, #32
 800074c:	4876      	ldr	r0, [pc, #472]	; (8000928 <BQ25713_Task+0x22c>)
 800074e:	f003 fc0b 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4, GPIO_PIN_SET);
 8000752:	2201      	movs	r2, #1
 8000754:	2110      	movs	r1, #16
 8000756:	4874      	ldr	r0, [pc, #464]	; (8000928 <BQ25713_Task+0x22c>)
 8000758:	f003 fc06 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_SET);
 800075c:	2201      	movs	r2, #1
 800075e:	2108      	movs	r1, #8
 8000760:	4871      	ldr	r0, [pc, #452]	; (8000928 <BQ25713_Task+0x22c>)
 8000762:	f003 fc01 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 8000766:	2201      	movs	r2, #1
 8000768:	2104      	movs	r1, #4
 800076a:	486f      	ldr	r0, [pc, #444]	; (8000928 <BQ25713_Task+0x22c>)
 800076c:	f003 fbfc 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_1, GPIO_PIN_SET);
 8000770:	2201      	movs	r2, #1
 8000772:	2102      	movs	r1, #2
 8000774:	486c      	ldr	r0, [pc, #432]	; (8000928 <BQ25713_Task+0x22c>)
 8000776:	f003 fbf7 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4, GPIO_PIN_RESET);
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_RESET);
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_RESET);
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_1, GPIO_PIN_RESET);
	}
}
 800077a:	e0cc      	b.n	8000916 <BQ25713_Task+0x21a>
	else if (( BQ25713.adc_vbat >= 15)&&( BQ25713.adc_vbat < 30)){
 800077c:	4b69      	ldr	r3, [pc, #420]	; (8000924 <BQ25713_Task+0x228>)
 800077e:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 8000782:	2b0e      	cmp	r3, #14
 8000784:	d923      	bls.n	80007ce <BQ25713_Task+0xd2>
 8000786:	4b67      	ldr	r3, [pc, #412]	; (8000924 <BQ25713_Task+0x228>)
 8000788:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 800078c:	2b1d      	cmp	r3, #29
 800078e:	d81e      	bhi.n	80007ce <BQ25713_Task+0xd2>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, GPIO_PIN_RESET);
 8000790:	2200      	movs	r2, #0
 8000792:	2140      	movs	r1, #64	; 0x40
 8000794:	4864      	ldr	r0, [pc, #400]	; (8000928 <BQ25713_Task+0x22c>)
 8000796:	f003 fbe7 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800079a:	2200      	movs	r2, #0
 800079c:	2120      	movs	r1, #32
 800079e:	4862      	ldr	r0, [pc, #392]	; (8000928 <BQ25713_Task+0x22c>)
 80007a0:	f003 fbe2 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4, GPIO_PIN_SET);
 80007a4:	2201      	movs	r2, #1
 80007a6:	2110      	movs	r1, #16
 80007a8:	485f      	ldr	r0, [pc, #380]	; (8000928 <BQ25713_Task+0x22c>)
 80007aa:	f003 fbdd 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_SET);
 80007ae:	2201      	movs	r2, #1
 80007b0:	2108      	movs	r1, #8
 80007b2:	485d      	ldr	r0, [pc, #372]	; (8000928 <BQ25713_Task+0x22c>)
 80007b4:	f003 fbd8 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 80007b8:	2201      	movs	r2, #1
 80007ba:	2104      	movs	r1, #4
 80007bc:	485a      	ldr	r0, [pc, #360]	; (8000928 <BQ25713_Task+0x22c>)
 80007be:	f003 fbd3 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_1, GPIO_PIN_SET);
 80007c2:	2201      	movs	r2, #1
 80007c4:	2102      	movs	r1, #2
 80007c6:	4858      	ldr	r0, [pc, #352]	; (8000928 <BQ25713_Task+0x22c>)
 80007c8:	f003 fbce 	bl	8003f68 <HAL_GPIO_WritePin>
 80007cc:	e0a3      	b.n	8000916 <BQ25713_Task+0x21a>
	else if (( BQ25713.adc_vbat >= 30)&&( BQ25713.adc_vbat < 50)){
 80007ce:	4b55      	ldr	r3, [pc, #340]	; (8000924 <BQ25713_Task+0x228>)
 80007d0:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 80007d4:	2b1d      	cmp	r3, #29
 80007d6:	d923      	bls.n	8000820 <BQ25713_Task+0x124>
 80007d8:	4b52      	ldr	r3, [pc, #328]	; (8000924 <BQ25713_Task+0x228>)
 80007da:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 80007de:	2b31      	cmp	r3, #49	; 0x31
 80007e0:	d81e      	bhi.n	8000820 <BQ25713_Task+0x124>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, GPIO_PIN_RESET);
 80007e2:	2200      	movs	r2, #0
 80007e4:	2140      	movs	r1, #64	; 0x40
 80007e6:	4850      	ldr	r0, [pc, #320]	; (8000928 <BQ25713_Task+0x22c>)
 80007e8:	f003 fbbe 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80007ec:	2200      	movs	r2, #0
 80007ee:	2120      	movs	r1, #32
 80007f0:	484d      	ldr	r0, [pc, #308]	; (8000928 <BQ25713_Task+0x22c>)
 80007f2:	f003 fbb9 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4, GPIO_PIN_RESET);
 80007f6:	2200      	movs	r2, #0
 80007f8:	2110      	movs	r1, #16
 80007fa:	484b      	ldr	r0, [pc, #300]	; (8000928 <BQ25713_Task+0x22c>)
 80007fc:	f003 fbb4 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_SET);
 8000800:	2201      	movs	r2, #1
 8000802:	2108      	movs	r1, #8
 8000804:	4848      	ldr	r0, [pc, #288]	; (8000928 <BQ25713_Task+0x22c>)
 8000806:	f003 fbaf 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 800080a:	2201      	movs	r2, #1
 800080c:	2104      	movs	r1, #4
 800080e:	4846      	ldr	r0, [pc, #280]	; (8000928 <BQ25713_Task+0x22c>)
 8000810:	f003 fbaa 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_1, GPIO_PIN_SET);
 8000814:	2201      	movs	r2, #1
 8000816:	2102      	movs	r1, #2
 8000818:	4843      	ldr	r0, [pc, #268]	; (8000928 <BQ25713_Task+0x22c>)
 800081a:	f003 fba5 	bl	8003f68 <HAL_GPIO_WritePin>
 800081e:	e07a      	b.n	8000916 <BQ25713_Task+0x21a>
	else if (( BQ25713.adc_vbat >= 50)&&( BQ25713.adc_vbat < 70)){
 8000820:	4b40      	ldr	r3, [pc, #256]	; (8000924 <BQ25713_Task+0x228>)
 8000822:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 8000826:	2b31      	cmp	r3, #49	; 0x31
 8000828:	d923      	bls.n	8000872 <BQ25713_Task+0x176>
 800082a:	4b3e      	ldr	r3, [pc, #248]	; (8000924 <BQ25713_Task+0x228>)
 800082c:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 8000830:	2b45      	cmp	r3, #69	; 0x45
 8000832:	d81e      	bhi.n	8000872 <BQ25713_Task+0x176>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, GPIO_PIN_RESET);
 8000834:	2200      	movs	r2, #0
 8000836:	2140      	movs	r1, #64	; 0x40
 8000838:	483b      	ldr	r0, [pc, #236]	; (8000928 <BQ25713_Task+0x22c>)
 800083a:	f003 fb95 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800083e:	2200      	movs	r2, #0
 8000840:	2120      	movs	r1, #32
 8000842:	4839      	ldr	r0, [pc, #228]	; (8000928 <BQ25713_Task+0x22c>)
 8000844:	f003 fb90 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4, GPIO_PIN_RESET);
 8000848:	2200      	movs	r2, #0
 800084a:	2110      	movs	r1, #16
 800084c:	4836      	ldr	r0, [pc, #216]	; (8000928 <BQ25713_Task+0x22c>)
 800084e:	f003 fb8b 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_RESET);
 8000852:	2200      	movs	r2, #0
 8000854:	2108      	movs	r1, #8
 8000856:	4834      	ldr	r0, [pc, #208]	; (8000928 <BQ25713_Task+0x22c>)
 8000858:	f003 fb86 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 800085c:	2201      	movs	r2, #1
 800085e:	2104      	movs	r1, #4
 8000860:	4831      	ldr	r0, [pc, #196]	; (8000928 <BQ25713_Task+0x22c>)
 8000862:	f003 fb81 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_1, GPIO_PIN_SET);
 8000866:	2201      	movs	r2, #1
 8000868:	2102      	movs	r1, #2
 800086a:	482f      	ldr	r0, [pc, #188]	; (8000928 <BQ25713_Task+0x22c>)
 800086c:	f003 fb7c 	bl	8003f68 <HAL_GPIO_WritePin>
 8000870:	e051      	b.n	8000916 <BQ25713_Task+0x21a>
	else if (( BQ25713.adc_vbat >= 70)&&( BQ25713.adc_vbat < 85)){
 8000872:	4b2c      	ldr	r3, [pc, #176]	; (8000924 <BQ25713_Task+0x228>)
 8000874:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 8000878:	2b45      	cmp	r3, #69	; 0x45
 800087a:	d923      	bls.n	80008c4 <BQ25713_Task+0x1c8>
 800087c:	4b29      	ldr	r3, [pc, #164]	; (8000924 <BQ25713_Task+0x228>)
 800087e:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 8000882:	2b54      	cmp	r3, #84	; 0x54
 8000884:	d81e      	bhi.n	80008c4 <BQ25713_Task+0x1c8>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, GPIO_PIN_RESET);
 8000886:	2200      	movs	r2, #0
 8000888:	2140      	movs	r1, #64	; 0x40
 800088a:	4827      	ldr	r0, [pc, #156]	; (8000928 <BQ25713_Task+0x22c>)
 800088c:	f003 fb6c 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8000890:	2200      	movs	r2, #0
 8000892:	2120      	movs	r1, #32
 8000894:	4824      	ldr	r0, [pc, #144]	; (8000928 <BQ25713_Task+0x22c>)
 8000896:	f003 fb67 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4, GPIO_PIN_RESET);
 800089a:	2200      	movs	r2, #0
 800089c:	2110      	movs	r1, #16
 800089e:	4822      	ldr	r0, [pc, #136]	; (8000928 <BQ25713_Task+0x22c>)
 80008a0:	f003 fb62 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_RESET);
 80008a4:	2200      	movs	r2, #0
 80008a6:	2108      	movs	r1, #8
 80008a8:	481f      	ldr	r0, [pc, #124]	; (8000928 <BQ25713_Task+0x22c>)
 80008aa:	f003 fb5d 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_RESET);
 80008ae:	2200      	movs	r2, #0
 80008b0:	2104      	movs	r1, #4
 80008b2:	481d      	ldr	r0, [pc, #116]	; (8000928 <BQ25713_Task+0x22c>)
 80008b4:	f003 fb58 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_1, GPIO_PIN_SET);
 80008b8:	2201      	movs	r2, #1
 80008ba:	2102      	movs	r1, #2
 80008bc:	481a      	ldr	r0, [pc, #104]	; (8000928 <BQ25713_Task+0x22c>)
 80008be:	f003 fb53 	bl	8003f68 <HAL_GPIO_WritePin>
 80008c2:	e028      	b.n	8000916 <BQ25713_Task+0x21a>
	else if (( BQ25713.adc_vbat >= 85)&&( BQ25713.adc_vbat <= 100)){
 80008c4:	4b17      	ldr	r3, [pc, #92]	; (8000924 <BQ25713_Task+0x228>)
 80008c6:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 80008ca:	2b54      	cmp	r3, #84	; 0x54
 80008cc:	d923      	bls.n	8000916 <BQ25713_Task+0x21a>
 80008ce:	4b15      	ldr	r3, [pc, #84]	; (8000924 <BQ25713_Task+0x228>)
 80008d0:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 80008d4:	2b64      	cmp	r3, #100	; 0x64
 80008d6:	d81e      	bhi.n	8000916 <BQ25713_Task+0x21a>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, GPIO_PIN_RESET);
 80008d8:	2200      	movs	r2, #0
 80008da:	2140      	movs	r1, #64	; 0x40
 80008dc:	4812      	ldr	r0, [pc, #72]	; (8000928 <BQ25713_Task+0x22c>)
 80008de:	f003 fb43 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80008e2:	2200      	movs	r2, #0
 80008e4:	2120      	movs	r1, #32
 80008e6:	4810      	ldr	r0, [pc, #64]	; (8000928 <BQ25713_Task+0x22c>)
 80008e8:	f003 fb3e 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4, GPIO_PIN_RESET);
 80008ec:	2200      	movs	r2, #0
 80008ee:	2110      	movs	r1, #16
 80008f0:	480d      	ldr	r0, [pc, #52]	; (8000928 <BQ25713_Task+0x22c>)
 80008f2:	f003 fb39 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_RESET);
 80008f6:	2200      	movs	r2, #0
 80008f8:	2108      	movs	r1, #8
 80008fa:	480b      	ldr	r0, [pc, #44]	; (8000928 <BQ25713_Task+0x22c>)
 80008fc:	f003 fb34 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_RESET);
 8000900:	2200      	movs	r2, #0
 8000902:	2104      	movs	r1, #4
 8000904:	4808      	ldr	r0, [pc, #32]	; (8000928 <BQ25713_Task+0x22c>)
 8000906:	f003 fb2f 	bl	8003f68 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_1, GPIO_PIN_RESET);
 800090a:	2200      	movs	r2, #0
 800090c:	2102      	movs	r1, #2
 800090e:	4806      	ldr	r0, [pc, #24]	; (8000928 <BQ25713_Task+0x22c>)
 8000910:	f003 fb2a 	bl	8003f68 <HAL_GPIO_WritePin>
}
 8000914:	e7ff      	b.n	8000916 <BQ25713_Task+0x21a>
 8000916:	bf00      	nop
 8000918:	3708      	adds	r7, #8
 800091a:	46bd      	mov	sp, r7
 800091c:	bd80      	pop	{r7, pc}
 800091e:	bf00      	nop
 8000920:	80808081 	.word	0x80808081
 8000924:	20026bbc 	.word	0x20026bbc
 8000928:	40021000 	.word	0x40021000

0800092c <BQ25713_Get_VBat>:

uint8_t BQ25713_Get_VBat(){
 800092c:	b480      	push	{r7}
 800092e:	af00      	add	r7, sp, #0
	}
	else if (( BQ25713.adc_vbat >= 95)&&( BQ25713.adc_vbat <= 100)){
		return 6;
	}
	*/
	return BQ25713.adc_vbat;
 8000930:	4b03      	ldr	r3, [pc, #12]	; (8000940 <BQ25713_Get_VBat+0x14>)
 8000932:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
}
 8000936:	4618      	mov	r0, r3
 8000938:	46bd      	mov	sp, r7
 800093a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800093e:	4770      	bx	lr
 8000940:	20026bbc 	.word	0x20026bbc

08000944 <read_register_16>:

void read_register_16(uint8_t register_pointer, uint8_t* receive_buffer)
{
 8000944:	b580      	push	{r7, lr}
 8000946:	b084      	sub	sp, #16
 8000948:	af02      	add	r7, sp, #8
 800094a:	4603      	mov	r3, r0
 800094c:	6039      	str	r1, [r7, #0]
 800094e:	71fb      	strb	r3, [r7, #7]
    // first set the register pointer to the register wanted to be read
    HAL_I2C_Master_Transmit(&BQ25713.BQ25713_I2C, BQ25713.I2C_Address, &register_pointer, 1, 100);
 8000950:	4b0c      	ldr	r3, [pc, #48]	; (8000984 <read_register_16+0x40>)
 8000952:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 8000956:	b299      	uxth	r1, r3
 8000958:	1dfa      	adds	r2, r7, #7
 800095a:	2364      	movs	r3, #100	; 0x64
 800095c:	9300      	str	r3, [sp, #0]
 800095e:	2301      	movs	r3, #1
 8000960:	4808      	ldr	r0, [pc, #32]	; (8000984 <read_register_16+0x40>)
 8000962:	f003 fc6b 	bl	800423c <HAL_I2C_Master_Transmit>
    // receive the 2 x 8bit data into the receive buffer
    HAL_I2C_Master_Receive(&BQ25713.BQ25713_I2C, BQ25713.I2C_Address, receive_buffer, 2, 100);
 8000966:	4b07      	ldr	r3, [pc, #28]	; (8000984 <read_register_16+0x40>)
 8000968:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 800096c:	b299      	uxth	r1, r3
 800096e:	2364      	movs	r3, #100	; 0x64
 8000970:	9300      	str	r3, [sp, #0]
 8000972:	2302      	movs	r3, #2
 8000974:	683a      	ldr	r2, [r7, #0]
 8000976:	4803      	ldr	r0, [pc, #12]	; (8000984 <read_register_16+0x40>)
 8000978:	f003 fd5e 	bl	8004438 <HAL_I2C_Master_Receive>
}
 800097c:	bf00      	nop
 800097e:	3708      	adds	r7, #8
 8000980:	46bd      	mov	sp, r7
 8000982:	bd80      	pop	{r7, pc}
 8000984:	20026bbc 	.word	0x20026bbc

08000988 <write_register_16>:

void write_register_16(uint8_t register_pointer, uint16_t register_value)
{
 8000988:	b580      	push	{r7, lr}
 800098a:	b086      	sub	sp, #24
 800098c:	af02      	add	r7, sp, #8
 800098e:	4603      	mov	r3, r0
 8000990:	460a      	mov	r2, r1
 8000992:	71fb      	strb	r3, [r7, #7]
 8000994:	4613      	mov	r3, r2
 8000996:	80bb      	strh	r3, [r7, #4]
    uint8_t data[3];
    data[0] = register_pointer;     // 0x0C in your example
 8000998:	79fb      	ldrb	r3, [r7, #7]
 800099a:	733b      	strb	r3, [r7, #12]
    data[1] = register_value>>8;    // MSB byte of 16bit data
 800099c:	88bb      	ldrh	r3, [r7, #4]
 800099e:	0a1b      	lsrs	r3, r3, #8
 80009a0:	b29b      	uxth	r3, r3
 80009a2:	b2db      	uxtb	r3, r3
 80009a4:	737b      	strb	r3, [r7, #13]
    data[2] = register_value;       // LSB byte of 16bit data
 80009a6:	88bb      	ldrh	r3, [r7, #4]
 80009a8:	b2db      	uxtb	r3, r3
 80009aa:	73bb      	strb	r3, [r7, #14]
    HAL_I2C_Master_Transmit(&BQ25713.BQ25713_I2C, BQ25713.I2C_Address, data, 3, 100);  // data is the start pointer of our array
 80009ac:	4b07      	ldr	r3, [pc, #28]	; (80009cc <write_register_16+0x44>)
 80009ae:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 80009b2:	b299      	uxth	r1, r3
 80009b4:	f107 020c 	add.w	r2, r7, #12
 80009b8:	2364      	movs	r3, #100	; 0x64
 80009ba:	9300      	str	r3, [sp, #0]
 80009bc:	2303      	movs	r3, #3
 80009be:	4803      	ldr	r0, [pc, #12]	; (80009cc <write_register_16+0x44>)
 80009c0:	f003 fc3c 	bl	800423c <HAL_I2C_Master_Transmit>
}
 80009c4:	bf00      	nop
 80009c6:	3710      	adds	r7, #16
 80009c8:	46bd      	mov	sp, r7
 80009ca:	bd80      	pop	{r7, pc}
 80009cc:	20026bbc 	.word	0x20026bbc

080009d0 <Lexi_Init_Data>:
#include "lexilight.h"


LEXILIGHT_DATA lexilight;

void Lexi_Init_Data() {
 80009d0:	b480      	push	{r7}
 80009d2:	af00      	add	r7, sp, #0
	lexilight.system_clock 		= SYSTEM_CLOCK_PER_SECOND;
 80009d4:	4b15      	ldr	r3, [pc, #84]	; (8000a2c <Lexi_Init_Data+0x5c>)
 80009d6:	4a16      	ldr	r2, [pc, #88]	; (8000a30 <Lexi_Init_Data+0x60>)
 80009d8:	601a      	str	r2, [r3, #0]
	lexilight.duty_min 			= LEXILIGHT_DUTY_MIN;
 80009da:	4b14      	ldr	r3, [pc, #80]	; (8000a2c <Lexi_Init_Data+0x5c>)
 80009dc:	220a      	movs	r2, #10
 80009de:	619a      	str	r2, [r3, #24]
	lexilight.duty_max 			= LEXILIGHT_DUTY_MAX;
 80009e0:	4b12      	ldr	r3, [pc, #72]	; (8000a2c <Lexi_Init_Data+0x5c>)
 80009e2:	2228      	movs	r2, #40	; 0x28
 80009e4:	615a      	str	r2, [r3, #20]
	lexilight.duty_cmd 			= LEXILIGHT_DUTY_DEFAULT;
 80009e6:	4b11      	ldr	r3, [pc, #68]	; (8000a2c <Lexi_Init_Data+0x5c>)
 80009e8:	2214      	movs	r2, #20
 80009ea:	60da      	str	r2, [r3, #12]
	lexilight.duty				= 30;
 80009ec:	4b0f      	ldr	r3, [pc, #60]	; (8000a2c <Lexi_Init_Data+0x5c>)
 80009ee:	221e      	movs	r2, #30
 80009f0:	605a      	str	r2, [r3, #4]
	lexilight.freq_max 			= LEXILIGHT_FREQUENCY_MAX;
 80009f2:	4b0e      	ldr	r3, [pc, #56]	; (8000a2c <Lexi_Init_Data+0x5c>)
 80009f4:	2278      	movs	r2, #120	; 0x78
 80009f6:	61da      	str	r2, [r3, #28]
	lexilight.freq_min 			= LEXILIGHT_FREQUENCY_MIN;
 80009f8:	4b0c      	ldr	r3, [pc, #48]	; (8000a2c <Lexi_Init_Data+0x5c>)
 80009fa:	2241      	movs	r2, #65	; 0x41
 80009fc:	621a      	str	r2, [r3, #32]
	lexilight.freq_cmd 			= LEXILIGHT_FREQUENCY_DEFAULT;
 80009fe:	4b0b      	ldr	r3, [pc, #44]	; (8000a2c <Lexi_Init_Data+0x5c>)
 8000a00:	2250      	movs	r2, #80	; 0x50
 8000a02:	611a      	str	r2, [r3, #16]
	lexilight.freq				= 90;
 8000a04:	4b09      	ldr	r3, [pc, #36]	; (8000a2c <Lexi_Init_Data+0x5c>)
 8000a06:	225a      	movs	r2, #90	; 0x5a
 8000a08:	609a      	str	r2, [r3, #8]
	lexilight.lum_level 		= LIGHT_LUM_LEVEL_0;
 8000a0a:	4b08      	ldr	r3, [pc, #32]	; (8000a2c <Lexi_Init_Data+0x5c>)
 8000a0c:	2200      	movs	r2, #0
 8000a0e:	f883 204d 	strb.w	r2, [r3, #77]	; 0x4d
	lexilight.lum_value			= 90;
 8000a12:	4b06      	ldr	r3, [pc, #24]	; (8000a2c <Lexi_Init_Data+0x5c>)
 8000a14:	225a      	movs	r2, #90	; 0x5a
 8000a16:	649a      	str	r2, [r3, #72]	; 0x48
	lexilight.state 			= LIGHT_STATE_WAIT_500_MS;
 8000a18:	4b04      	ldr	r3, [pc, #16]	; (8000a2c <Lexi_Init_Data+0x5c>)
 8000a1a:	2201      	movs	r2, #1
 8000a1c:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
}
 8000a20:	bf00      	nop
 8000a22:	46bd      	mov	sp, r7
 8000a24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a28:	4770      	bx	lr
 8000a2a:	bf00      	nop
 8000a2c:	20026c14 	.word	0x20026c14
 8000a30:	00f42400 	.word	0x00f42400

08000a34 <Lexi_Task>:


void Lexi_Task (TIM_HandleTypeDef htim_pwm_led, TIM_HandleTypeDef htim_pwm_lum_driver){
 8000a34:	b084      	sub	sp, #16
 8000a36:	b5b0      	push	{r4, r5, r7, lr}
 8000a38:	b08c      	sub	sp, #48	; 0x30
 8000a3a:	af0c      	add	r7, sp, #48	; 0x30
 8000a3c:	f107 0410 	add.w	r4, r7, #16
 8000a40:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}

	switch (lexilight.state)
 8000a44:	4b67      	ldr	r3, [pc, #412]	; (8000be4 <Lexi_Task+0x1b0>)
 8000a46:	f893 304c 	ldrb.w	r3, [r3, #76]	; 0x4c
 8000a4a:	2b07      	cmp	r3, #7
 8000a4c:	f200 80be 	bhi.w	8000bcc <Lexi_Task+0x198>
 8000a50:	a201      	add	r2, pc, #4	; (adr r2, 8000a58 <Lexi_Task+0x24>)
 8000a52:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000a56:	bf00      	nop
 8000a58:	08000a79 	.word	0x08000a79
 8000a5c:	08000a87 	.word	0x08000a87
 8000a60:	08000a99 	.word	0x08000a99
 8000a64:	08000b31 	.word	0x08000b31
 8000a68:	08000b31 	.word	0x08000b31
 8000a6c:	08000ae3 	.word	0x08000ae3
 8000a70:	08000b7f 	.word	0x08000b7f
 8000a74:	08000a79 	.word	0x08000a79
	{
		case LIGHT_STATE_ERROR:
		case LIGHT_STATE_INIT:
			Lexi_Init_Data();
 8000a78:	f7ff ffaa 	bl	80009d0 <Lexi_Init_Data>
			lexilight.state = LIGHT_STATE_WAIT_500_MS;
 8000a7c:	4b59      	ldr	r3, [pc, #356]	; (8000be4 <Lexi_Task+0x1b0>)
 8000a7e:	2201      	movs	r2, #1
 8000a80:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
			break;
 8000a84:	e0a7      	b.n	8000bd6 <Lexi_Task+0x1a2>

		case LIGHT_STATE_WAIT_500_MS:
			HAL_Delay(500);
 8000a86:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000a8a:	f002 fad9 	bl	8003040 <HAL_Delay>
			lexilight.state = LIGHT_STATE_SERVICE;
 8000a8e:	4b55      	ldr	r3, [pc, #340]	; (8000be4 <Lexi_Task+0x1b0>)
 8000a90:	2202      	movs	r2, #2
 8000a92:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
			break;
 8000a96:	e09e      	b.n	8000bd6 <Lexi_Task+0x1a2>

		case LIGHT_STATE_SERVICE:

			//Get pwm defaut or eeprom
			Lexi_DO_LED_PWM (htim_pwm_led);
 8000a98:	466d      	mov	r5, sp
 8000a9a:	f107 0420 	add.w	r4, r7, #32
 8000a9e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000aa0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000aa2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000aa4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000aa6:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000aaa:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000aae:	f107 0310 	add.w	r3, r7, #16
 8000ab2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000ab4:	f000 f89a 	bl	8000bec <Lexi_DO_LED_PWM>
			Lexi_DO_PWM_LUM_DRIVER(htim_pwm_lum_driver);
 8000ab8:	466d      	mov	r5, sp
 8000aba:	f107 0460 	add.w	r4, r7, #96	; 0x60
 8000abe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000ac0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000ac2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000ac4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000ac6:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000aca:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000ace:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000ad2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000ad4:	f000 f8ec 	bl	8000cb0 <Lexi_DO_PWM_LUM_DRIVER>
			lexilight.state = LIGHT_STATE_OFF;
 8000ad8:	4b42      	ldr	r3, [pc, #264]	; (8000be4 <Lexi_Task+0x1b0>)
 8000ada:	2206      	movs	r2, #6
 8000adc:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
			break;
 8000ae0:	e079      	b.n	8000bd6 <Lexi_Task+0x1a2>

		case LIGHT_STATE_LEXI:
			Lexi_DO_LED_PWM (htim_pwm_led);
 8000ae2:	466d      	mov	r5, sp
 8000ae4:	f107 0420 	add.w	r4, r7, #32
 8000ae8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000aea:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000aec:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000aee:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000af0:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000af4:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000af8:	f107 0310 	add.w	r3, r7, #16
 8000afc:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000afe:	f000 f875 	bl	8000bec <Lexi_DO_LED_PWM>
			Lexi_DO_PWM_LUM_DRIVER(htim_pwm_lum_driver);
 8000b02:	466d      	mov	r5, sp
 8000b04:	f107 0460 	add.w	r4, r7, #96	; 0x60
 8000b08:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000b0a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b0c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000b0e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b10:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000b14:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000b18:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000b1c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000b1e:	f000 f8c7 	bl	8000cb0 <Lexi_DO_PWM_LUM_DRIVER>
			//Turn On EN_DRIVER
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13,GPIO_PIN_SET);
 8000b22:	2201      	movs	r2, #1
 8000b24:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000b28:	482f      	ldr	r0, [pc, #188]	; (8000be8 <Lexi_Task+0x1b4>)
 8000b2a:	f003 fa1d 	bl	8003f68 <HAL_GPIO_WritePin>
			break;
 8000b2e:	e052      	b.n	8000bd6 <Lexi_Task+0x1a2>

		case LIGHT_STATE_ON:
		case LIGHT_STATE_STANDARD:
			Lexi_DO_Standard_PWM(htim_pwm_led);
 8000b30:	466d      	mov	r5, sp
 8000b32:	f107 0420 	add.w	r4, r7, #32
 8000b36:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000b38:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b3a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000b3c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b3e:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000b42:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000b46:	f107 0310 	add.w	r3, r7, #16
 8000b4a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000b4c:	f000 f898 	bl	8000c80 <Lexi_DO_Standard_PWM>
			Lexi_DO_PWM_LUM_DRIVER(htim_pwm_lum_driver);
 8000b50:	466d      	mov	r5, sp
 8000b52:	f107 0460 	add.w	r4, r7, #96	; 0x60
 8000b56:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000b58:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b5a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000b5c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b5e:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000b62:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000b66:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000b6a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000b6c:	f000 f8a0 	bl	8000cb0 <Lexi_DO_PWM_LUM_DRIVER>
			//Turn On EN_DRIVER
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13,GPIO_PIN_SET);
 8000b70:	2201      	movs	r2, #1
 8000b72:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000b76:	481c      	ldr	r0, [pc, #112]	; (8000be8 <Lexi_Task+0x1b4>)
 8000b78:	f003 f9f6 	bl	8003f68 <HAL_GPIO_WritePin>
			break;
 8000b7c:	e02b      	b.n	8000bd6 <Lexi_Task+0x1a2>

		case LIGHT_STATE_OFF:
			Lexi_DO_LED_PWM (htim_pwm_led);
 8000b7e:	466d      	mov	r5, sp
 8000b80:	f107 0420 	add.w	r4, r7, #32
 8000b84:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000b86:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b88:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000b8a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b8c:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000b90:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000b94:	f107 0310 	add.w	r3, r7, #16
 8000b98:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000b9a:	f000 f827 	bl	8000bec <Lexi_DO_LED_PWM>
			Lexi_DO_PWM_LUM_DRIVER(htim_pwm_lum_driver);
 8000b9e:	466d      	mov	r5, sp
 8000ba0:	f107 0460 	add.w	r4, r7, #96	; 0x60
 8000ba4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000ba6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000ba8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000baa:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000bac:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000bb0:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000bb4:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000bb8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000bba:	f000 f879 	bl	8000cb0 <Lexi_DO_PWM_LUM_DRIVER>
			//Turn OFF EN_DRIVER
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8000bbe:	2200      	movs	r2, #0
 8000bc0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000bc4:	4808      	ldr	r0, [pc, #32]	; (8000be8 <Lexi_Task+0x1b4>)
 8000bc6:	f003 f9cf 	bl	8003f68 <HAL_GPIO_WritePin>
			break;
 8000bca:	e004      	b.n	8000bd6 <Lexi_Task+0x1a2>
		default:
			lexilight.state = LIGHT_STATE_ERROR;
 8000bcc:	4b05      	ldr	r3, [pc, #20]	; (8000be4 <Lexi_Task+0x1b0>)
 8000bce:	2207      	movs	r2, #7
 8000bd0:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
			break;
 8000bd4:	bf00      	nop
		}
}
 8000bd6:	bf00      	nop
 8000bd8:	46bd      	mov	sp, r7
 8000bda:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8000bde:	b004      	add	sp, #16
 8000be0:	4770      	bx	lr
 8000be2:	bf00      	nop
 8000be4:	20026c14 	.word	0x20026c14
 8000be8:	40020c00 	.word	0x40020c00

08000bec <Lexi_DO_LED_PWM>:

void Lexi_DO_LED_PWM (TIM_HandleTypeDef htim){
 8000bec:	b084      	sub	sp, #16
 8000bee:	b480      	push	{r7}
 8000bf0:	b083      	sub	sp, #12
 8000bf2:	af00      	add	r7, sp, #0
 8000bf4:	f107 0c10 	add.w	ip, r7, #16
 8000bf8:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	//Check update Freq
	if ((	lexilight.freq_cmd >= lexilight.freq_min)
 8000bfc:	4b1f      	ldr	r3, [pc, #124]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000bfe:	691a      	ldr	r2, [r3, #16]
 8000c00:	4b1e      	ldr	r3, [pc, #120]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c02:	6a1b      	ldr	r3, [r3, #32]
 8000c04:	429a      	cmp	r2, r3
 8000c06:	d31d      	bcc.n	8000c44 <Lexi_DO_LED_PWM+0x58>
			&& (lexilight.freq_cmd <= lexilight.freq_max))
 8000c08:	4b1c      	ldr	r3, [pc, #112]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c0a:	691a      	ldr	r2, [r3, #16]
 8000c0c:	4b1b      	ldr	r3, [pc, #108]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c0e:	69db      	ldr	r3, [r3, #28]
 8000c10:	429a      	cmp	r2, r3
 8000c12:	d817      	bhi.n	8000c44 <Lexi_DO_LED_PWM+0x58>
			//&& (lexilight.freq != lexilight.freq_cmd))
	{
		lexilight.freq = lexilight.freq_cmd;	//Update New value of ADC Duty;
 8000c14:	4b19      	ldr	r3, [pc, #100]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c16:	691b      	ldr	r3, [r3, #16]
 8000c18:	4a18      	ldr	r2, [pc, #96]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c1a:	6093      	str	r3, [r2, #8]
		int prescaler = (uint16_t)(lexilight.system_clock/(lexilight.freq*100) - 1);
 8000c1c:	4b17      	ldr	r3, [pc, #92]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c1e:	681a      	ldr	r2, [r3, #0]
 8000c20:	4b16      	ldr	r3, [pc, #88]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c22:	689b      	ldr	r3, [r3, #8]
 8000c24:	2164      	movs	r1, #100	; 0x64
 8000c26:	fb01 f303 	mul.w	r3, r1, r3
 8000c2a:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c2e:	b29b      	uxth	r3, r3
 8000c30:	3b01      	subs	r3, #1
 8000c32:	b29b      	uxth	r3, r3
 8000c34:	607b      	str	r3, [r7, #4]
		__HAL_TIM_SET_PRESCALER(&htim, prescaler);
 8000c36:	693b      	ldr	r3, [r7, #16]
 8000c38:	687a      	ldr	r2, [r7, #4]
 8000c3a:	629a      	str	r2, [r3, #40]	; 0x28
		lexilight.freq = lexilight.freq_cmd;
 8000c3c:	4b0f      	ldr	r3, [pc, #60]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c3e:	691b      	ldr	r3, [r3, #16]
 8000c40:	4a0e      	ldr	r2, [pc, #56]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c42:	6093      	str	r3, [r2, #8]
	}

	//Check update Dutycycle
	if ((	lexilight.duty_cmd >= lexilight.duty_min)
 8000c44:	4b0d      	ldr	r3, [pc, #52]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c46:	68da      	ldr	r2, [r3, #12]
 8000c48:	4b0c      	ldr	r3, [pc, #48]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c4a:	699b      	ldr	r3, [r3, #24]
 8000c4c:	429a      	cmp	r2, r3
 8000c4e:	d30d      	bcc.n	8000c6c <Lexi_DO_LED_PWM+0x80>
			&& (lexilight.duty_cmd <= lexilight.duty_max))
 8000c50:	4b0a      	ldr	r3, [pc, #40]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c52:	68da      	ldr	r2, [r3, #12]
 8000c54:	4b09      	ldr	r3, [pc, #36]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c56:	695b      	ldr	r3, [r3, #20]
 8000c58:	429a      	cmp	r2, r3
 8000c5a:	d807      	bhi.n	8000c6c <Lexi_DO_LED_PWM+0x80>
			//&& (lexilight.duty != lexilight.duty_cmd))
	{
		lexilight.duty = lexilight.duty_cmd;
 8000c5c:	4b07      	ldr	r3, [pc, #28]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c5e:	68db      	ldr	r3, [r3, #12]
 8000c60:	4a06      	ldr	r2, [pc, #24]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c62:	6053      	str	r3, [r2, #4]
		__HAL_TIM_SET_COMPARE(&htim, TIM_CHANNEL_1,lexilight.duty);
 8000c64:	693b      	ldr	r3, [r7, #16]
 8000c66:	4a05      	ldr	r2, [pc, #20]	; (8000c7c <Lexi_DO_LED_PWM+0x90>)
 8000c68:	6852      	ldr	r2, [r2, #4]
 8000c6a:	635a      	str	r2, [r3, #52]	; 0x34
	}
}
 8000c6c:	bf00      	nop
 8000c6e:	370c      	adds	r7, #12
 8000c70:	46bd      	mov	sp, r7
 8000c72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c76:	b004      	add	sp, #16
 8000c78:	4770      	bx	lr
 8000c7a:	bf00      	nop
 8000c7c:	20026c14 	.word	0x20026c14

08000c80 <Lexi_DO_Standard_PWM>:

void Lexi_DO_Standard_PWM (TIM_HandleTypeDef htim){
 8000c80:	b084      	sub	sp, #16
 8000c82:	b480      	push	{r7}
 8000c84:	b083      	sub	sp, #12
 8000c86:	af00      	add	r7, sp, #0
 8000c88:	f107 0c10 	add.w	ip, r7, #16
 8000c8c:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
		int prescaler = 59;		//Set frequency 119 = 4KHZ
 8000c90:	233b      	movs	r3, #59	; 0x3b
 8000c92:	607b      	str	r3, [r7, #4]
		__HAL_TIM_SET_PRESCALER(&htim, prescaler);
 8000c94:	693b      	ldr	r3, [r7, #16]
 8000c96:	687a      	ldr	r2, [r7, #4]
 8000c98:	629a      	str	r2, [r3, #40]	; 0x28
		//__HAL_TIM_SET_COMPARE(&htim, TIM_CHANNEL_2, lexilight.duty);
		__HAL_TIM_SET_COMPARE(&htim, TIM_CHANNEL_1, 100);
 8000c9a:	693b      	ldr	r3, [r7, #16]
 8000c9c:	2264      	movs	r2, #100	; 0x64
 8000c9e:	635a      	str	r2, [r3, #52]	; 0x34

}
 8000ca0:	bf00      	nop
 8000ca2:	370c      	adds	r7, #12
 8000ca4:	46bd      	mov	sp, r7
 8000ca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000caa:	b004      	add	sp, #16
 8000cac:	4770      	bx	lr
	...

08000cb0 <Lexi_DO_PWM_LUM_DRIVER>:

void Lexi_DO_PWM_LUM_DRIVER (TIM_HandleTypeDef htim){
 8000cb0:	b084      	sub	sp, #16
 8000cb2:	b480      	push	{r7}
 8000cb4:	b083      	sub	sp, #12
 8000cb6:	af00      	add	r7, sp, #0
 8000cb8:	f107 0c10 	add.w	ip, r7, #16
 8000cbc:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}

	uint8_t value = lexilight.lum_value; // Value from 0 to 100;
 8000cc0:	4b06      	ldr	r3, [pc, #24]	; (8000cdc <Lexi_DO_PWM_LUM_DRIVER+0x2c>)
 8000cc2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8000cc4:	71fb      	strb	r3, [r7, #7]
	__HAL_TIM_SET_COMPARE(&htim, TIM_CHANNEL_3, value);
 8000cc6:	693b      	ldr	r3, [r7, #16]
 8000cc8:	79fa      	ldrb	r2, [r7, #7]
 8000cca:	63da      	str	r2, [r3, #60]	; 0x3c

		default:
			break;
	}
	*/
}
 8000ccc:	bf00      	nop
 8000cce:	370c      	adds	r7, #12
 8000cd0:	46bd      	mov	sp, r7
 8000cd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cd6:	b004      	add	sp, #16
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	20026c14 	.word	0x20026c14

08000ce0 <Lexi_Get_Led_State>:
	return lexilight.freq;
}
unsigned int Lexi_Get_Luminosity(){
	return lexilight.lum_value;
}
unsigned int Lexi_Get_Led_State(){
 8000ce0:	b480      	push	{r7}
 8000ce2:	af00      	add	r7, sp, #0
	if (lexilight.state == LIGHT_STATE_LEXI){
 8000ce4:	4b0f      	ldr	r3, [pc, #60]	; (8000d24 <Lexi_Get_Led_State+0x44>)
 8000ce6:	f893 304c 	ldrb.w	r3, [r3, #76]	; 0x4c
 8000cea:	2b05      	cmp	r3, #5
 8000cec:	d101      	bne.n	8000cf2 <Lexi_Get_Led_State+0x12>
		return 2;
 8000cee:	2302      	movs	r3, #2
 8000cf0:	e012      	b.n	8000d18 <Lexi_Get_Led_State+0x38>
	}
	else if ((lexilight.state == LIGHT_STATE_ON) || (lexilight.state == LIGHT_STATE_STANDARD)){
 8000cf2:	4b0c      	ldr	r3, [pc, #48]	; (8000d24 <Lexi_Get_Led_State+0x44>)
 8000cf4:	f893 304c 	ldrb.w	r3, [r3, #76]	; 0x4c
 8000cf8:	2b03      	cmp	r3, #3
 8000cfa:	d004      	beq.n	8000d06 <Lexi_Get_Led_State+0x26>
 8000cfc:	4b09      	ldr	r3, [pc, #36]	; (8000d24 <Lexi_Get_Led_State+0x44>)
 8000cfe:	f893 304c 	ldrb.w	r3, [r3, #76]	; 0x4c
 8000d02:	2b04      	cmp	r3, #4
 8000d04:	d101      	bne.n	8000d0a <Lexi_Get_Led_State+0x2a>
		return 1;
 8000d06:	2301      	movs	r3, #1
 8000d08:	e006      	b.n	8000d18 <Lexi_Get_Led_State+0x38>
	}
	else if (lexilight.state == LIGHT_STATE_OFF) {
 8000d0a:	4b06      	ldr	r3, [pc, #24]	; (8000d24 <Lexi_Get_Led_State+0x44>)
 8000d0c:	f893 304c 	ldrb.w	r3, [r3, #76]	; 0x4c
 8000d10:	2b06      	cmp	r3, #6
 8000d12:	d101      	bne.n	8000d18 <Lexi_Get_Led_State+0x38>
		return 0;
 8000d14:	2300      	movs	r3, #0
 8000d16:	e7ff      	b.n	8000d18 <Lexi_Get_Led_State+0x38>
	}
}
 8000d18:	4618      	mov	r0, r3
 8000d1a:	46bd      	mov	sp, r7
 8000d1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d20:	4770      	bx	lr
 8000d22:	bf00      	nop
 8000d24:	20026c14 	.word	0x20026c14

08000d28 <Lexi_Set_State_OFF>:
//Set function
void Lexi_Set_State_OFF (){
 8000d28:	b480      	push	{r7}
 8000d2a:	af00      	add	r7, sp, #0
	lexilight.state = LIGHT_STATE_OFF;
 8000d2c:	4b04      	ldr	r3, [pc, #16]	; (8000d40 <Lexi_Set_State_OFF+0x18>)
 8000d2e:	2206      	movs	r2, #6
 8000d30:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
}
 8000d34:	bf00      	nop
 8000d36:	46bd      	mov	sp, r7
 8000d38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d3c:	4770      	bx	lr
 8000d3e:	bf00      	nop
 8000d40:	20026c14 	.word	0x20026c14

08000d44 <Lexi_Set_State_ON>:
void Lexi_Set_State_ON (){
 8000d44:	b480      	push	{r7}
 8000d46:	af00      	add	r7, sp, #0
	lexilight.state = LIGHT_STATE_ON;
 8000d48:	4b04      	ldr	r3, [pc, #16]	; (8000d5c <Lexi_Set_State_ON+0x18>)
 8000d4a:	2203      	movs	r2, #3
 8000d4c:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
}
 8000d50:	bf00      	nop
 8000d52:	46bd      	mov	sp, r7
 8000d54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d58:	4770      	bx	lr
 8000d5a:	bf00      	nop
 8000d5c:	20026c14 	.word	0x20026c14

08000d60 <Lexi_Set_State_STANDARD>:
void Lexi_Set_State_STANDARD (){
 8000d60:	b480      	push	{r7}
 8000d62:	af00      	add	r7, sp, #0
	lexilight.state = LIGHT_STATE_STANDARD;
 8000d64:	4b04      	ldr	r3, [pc, #16]	; (8000d78 <Lexi_Set_State_STANDARD+0x18>)
 8000d66:	2204      	movs	r2, #4
 8000d68:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
}
 8000d6c:	bf00      	nop
 8000d6e:	46bd      	mov	sp, r7
 8000d70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d74:	4770      	bx	lr
 8000d76:	bf00      	nop
 8000d78:	20026c14 	.word	0x20026c14

08000d7c <Lexi_Set_State_LEXI>:
void Lexi_Set_State_LEXI (){
 8000d7c:	b480      	push	{r7}
 8000d7e:	af00      	add	r7, sp, #0
	lexilight.state = LIGHT_STATE_LEXI;
 8000d80:	4b04      	ldr	r3, [pc, #16]	; (8000d94 <Lexi_Set_State_LEXI+0x18>)
 8000d82:	2205      	movs	r2, #5
 8000d84:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
}
 8000d88:	bf00      	nop
 8000d8a:	46bd      	mov	sp, r7
 8000d8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d90:	4770      	bx	lr
 8000d92:	bf00      	nop
 8000d94:	20026c14 	.word	0x20026c14

08000d98 <Lexi_Set_Duty>:
void Lexi_Set_Duty( unsigned int value){
 8000d98:	b480      	push	{r7}
 8000d9a:	b083      	sub	sp, #12
 8000d9c:	af00      	add	r7, sp, #0
 8000d9e:	6078      	str	r0, [r7, #4]
	if (value >=40){
 8000da0:	687b      	ldr	r3, [r7, #4]
 8000da2:	2b27      	cmp	r3, #39	; 0x27
 8000da4:	d903      	bls.n	8000dae <Lexi_Set_Duty+0x16>
		lexilight.duty_cmd  = 40;
 8000da6:	4b06      	ldr	r3, [pc, #24]	; (8000dc0 <Lexi_Set_Duty+0x28>)
 8000da8:	2228      	movs	r2, #40	; 0x28
 8000daa:	60da      	str	r2, [r3, #12]
	}
	else{
		lexilight.duty_cmd  = value;
	}
}
 8000dac:	e002      	b.n	8000db4 <Lexi_Set_Duty+0x1c>
		lexilight.duty_cmd  = value;
 8000dae:	4a04      	ldr	r2, [pc, #16]	; (8000dc0 <Lexi_Set_Duty+0x28>)
 8000db0:	687b      	ldr	r3, [r7, #4]
 8000db2:	60d3      	str	r3, [r2, #12]
}
 8000db4:	bf00      	nop
 8000db6:	370c      	adds	r7, #12
 8000db8:	46bd      	mov	sp, r7
 8000dba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dbe:	4770      	bx	lr
 8000dc0:	20026c14 	.word	0x20026c14

08000dc4 <Lexi_Set_Freq>:

void Lexi_Set_Freq( unsigned int value){
 8000dc4:	b480      	push	{r7}
 8000dc6:	b083      	sub	sp, #12
 8000dc8:	af00      	add	r7, sp, #0
 8000dca:	6078      	str	r0, [r7, #4]
	if (value >=120){
 8000dcc:	687b      	ldr	r3, [r7, #4]
 8000dce:	2b77      	cmp	r3, #119	; 0x77
 8000dd0:	d903      	bls.n	8000dda <Lexi_Set_Freq+0x16>
			lexilight.freq_cmd  = 120;
 8000dd2:	4b0a      	ldr	r3, [pc, #40]	; (8000dfc <Lexi_Set_Freq+0x38>)
 8000dd4:	2278      	movs	r2, #120	; 0x78
 8000dd6:	611a      	str	r2, [r3, #16]
		lexilight.freq_cmd  = 65;
	}
	else{
		lexilight.freq_cmd  = value;
	}
}
 8000dd8:	e009      	b.n	8000dee <Lexi_Set_Freq+0x2a>
	else if (value <=65){
 8000dda:	687b      	ldr	r3, [r7, #4]
 8000ddc:	2b41      	cmp	r3, #65	; 0x41
 8000dde:	d803      	bhi.n	8000de8 <Lexi_Set_Freq+0x24>
		lexilight.freq_cmd  = 65;
 8000de0:	4b06      	ldr	r3, [pc, #24]	; (8000dfc <Lexi_Set_Freq+0x38>)
 8000de2:	2241      	movs	r2, #65	; 0x41
 8000de4:	611a      	str	r2, [r3, #16]
}
 8000de6:	e002      	b.n	8000dee <Lexi_Set_Freq+0x2a>
		lexilight.freq_cmd  = value;
 8000de8:	4a04      	ldr	r2, [pc, #16]	; (8000dfc <Lexi_Set_Freq+0x38>)
 8000dea:	687b      	ldr	r3, [r7, #4]
 8000dec:	6113      	str	r3, [r2, #16]
}
 8000dee:	bf00      	nop
 8000df0:	370c      	adds	r7, #12
 8000df2:	46bd      	mov	sp, r7
 8000df4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000df8:	4770      	bx	lr
 8000dfa:	bf00      	nop
 8000dfc:	20026c14 	.word	0x20026c14

08000e00 <Lexi_Set_Luminosity>:

void Lexi_Set_Luminosity( unsigned int value){
 8000e00:	b480      	push	{r7}
 8000e02:	b083      	sub	sp, #12
 8000e04:	af00      	add	r7, sp, #0
 8000e06:	6078      	str	r0, [r7, #4]
	lexilight.lum_value =  value;
 8000e08:	4a04      	ldr	r2, [pc, #16]	; (8000e1c <Lexi_Set_Luminosity+0x1c>)
 8000e0a:	687b      	ldr	r3, [r7, #4]
 8000e0c:	6493      	str	r3, [r2, #72]	; 0x48
}
 8000e0e:	bf00      	nop
 8000e10:	370c      	adds	r7, #12
 8000e12:	46bd      	mov	sp, r7
 8000e14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e18:	4770      	bx	lr
 8000e1a:	bf00      	nop
 8000e1c:	20026c14 	.word	0x20026c14

08000e20 <SPIx_Error>:
/* Chip Select macro definition */
#define LCD_CS_LOW()       HAL_GPIO_WritePin(CS_LCD_GPIO_Port, CS_LCD_Pin, GPIO_PIN_RESET)
#define LCD_CS_HIGH()      HAL_GPIO_WritePin(CS_LCD_GPIO_Port, CS_LCD_Pin, GPIO_PIN_SET)

static void SPIx_Error(void)
{
 8000e20:	b580      	push	{r7, lr}
 8000e22:	af00      	add	r7, sp, #0
  /* De-initialize the SPI communication BUS */
  HAL_SPI_DeInit(&hspi3);
 8000e24:	4803      	ldr	r0, [pc, #12]	; (8000e34 <SPIx_Error+0x14>)
 8000e26:	f005 fac7 	bl	80063b8 <HAL_SPI_DeInit>

  /* Re- Initialize the SPI communication BUS */
   MX_SPI3_Init();
 8000e2a:	f000 fb4b 	bl	80014c4 <MX_SPI3_Init>
}
 8000e2e:	bf00      	nop
 8000e30:	bd80      	pop	{r7, pc}
 8000e32:	bf00      	nop
 8000e34:	20026d80 	.word	0x20026d80

08000e38 <SPIx_Write>:


static void SPIx_Write(uint16_t Value)
{
 8000e38:	b580      	push	{r7, lr}
 8000e3a:	b084      	sub	sp, #16
 8000e3c:	af00      	add	r7, sp, #0
 8000e3e:	4603      	mov	r3, r0
 8000e40:	80fb      	strh	r3, [r7, #6]
  HAL_StatusTypeDef status = HAL_OK;
 8000e42:	2300      	movs	r3, #0
 8000e44:	73fb      	strb	r3, [r7, #15]

  status = HAL_SPI_Transmit(&hspi3, (uint8_t*) &Value, 2, 0x1000);
 8000e46:	1db9      	adds	r1, r7, #6
 8000e48:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000e4c:	2202      	movs	r2, #2
 8000e4e:	4807      	ldr	r0, [pc, #28]	; (8000e6c <SPIx_Write+0x34>)
 8000e50:	f005 fada 	bl	8006408 <HAL_SPI_Transmit>
 8000e54:	4603      	mov	r3, r0
 8000e56:	73fb      	strb	r3, [r7, #15]

  /* Check the communication status */
  if(status != HAL_OK)
 8000e58:	7bfb      	ldrb	r3, [r7, #15]
 8000e5a:	2b00      	cmp	r3, #0
 8000e5c:	d001      	beq.n	8000e62 <SPIx_Write+0x2a>
  {
    /* Re-Initialize the BUS */
    SPIx_Error();
 8000e5e:	f7ff ffdf 	bl	8000e20 <SPIx_Error>
  }
}
 8000e62:	bf00      	nop
 8000e64:	3710      	adds	r7, #16
 8000e66:	46bd      	mov	sp, r7
 8000e68:	bd80      	pop	{r7, pc}
 8000e6a:	bf00      	nop
 8000e6c:	20026d80 	.word	0x20026d80

08000e70 <LCD_IO_Init>:

__weak void LCD_IO_Init(void)
{
 8000e70:	b580      	push	{r7, lr}
 8000e72:	af00      	add	r7, sp, #0
   /* Set or Reset the control line */
    LCD_CS_LOW();
 8000e74:	2200      	movs	r2, #0
 8000e76:	2101      	movs	r1, #1
 8000e78:	4805      	ldr	r0, [pc, #20]	; (8000e90 <LCD_IO_Init+0x20>)
 8000e7a:	f003 f875 	bl	8003f68 <HAL_GPIO_WritePin>
    LCD_CS_HIGH();
 8000e7e:	2201      	movs	r2, #1
 8000e80:	2101      	movs	r1, #1
 8000e82:	4803      	ldr	r0, [pc, #12]	; (8000e90 <LCD_IO_Init+0x20>)
 8000e84:	f003 f870 	bl	8003f68 <HAL_GPIO_WritePin>
    MX_SPI3_Init();
 8000e88:	f000 fb1c 	bl	80014c4 <MX_SPI3_Init>
}
 8000e8c:	bf00      	nop
 8000e8e:	bd80      	pop	{r7, pc}
 8000e90:	40020c00 	.word	0x40020c00

08000e94 <LCD_IO_WriteReg>:

__weak void     LCD_IO_WriteReg(uint8_t Reg){
 8000e94:	b580      	push	{r7, lr}
 8000e96:	b084      	sub	sp, #16
 8000e98:	af00      	add	r7, sp, #0
 8000e9a:	4603      	mov	r3, r0
 8000e9c:	71fb      	strb	r3, [r7, #7]
	uint16_t data_send = 0x0000 + Reg;
 8000e9e:	79fb      	ldrb	r3, [r7, #7]
 8000ea0:	81fb      	strh	r3, [r7, #14]
	data_send <<= 7;
 8000ea2:	89fb      	ldrh	r3, [r7, #14]
 8000ea4:	01db      	lsls	r3, r3, #7
 8000ea6:	81fb      	strh	r3, [r7, #14]
	/* Reset LCD control line(/CS) and Send command */
	LCD_CS_LOW();
 8000ea8:	2200      	movs	r2, #0
 8000eaa:	2101      	movs	r1, #1
 8000eac:	4807      	ldr	r0, [pc, #28]	; (8000ecc <LCD_IO_WriteReg+0x38>)
 8000eae:	f003 f85b 	bl	8003f68 <HAL_GPIO_WritePin>
	SPIx_Write(data_send);
 8000eb2:	89fb      	ldrh	r3, [r7, #14]
 8000eb4:	4618      	mov	r0, r3
 8000eb6:	f7ff ffbf 	bl	8000e38 <SPIx_Write>

	/* Deselect: Chip Select high */
	LCD_CS_HIGH();
 8000eba:	2201      	movs	r2, #1
 8000ebc:	2101      	movs	r1, #1
 8000ebe:	4803      	ldr	r0, [pc, #12]	; (8000ecc <LCD_IO_WriteReg+0x38>)
 8000ec0:	f003 f852 	bl	8003f68 <HAL_GPIO_WritePin>
}
 8000ec4:	bf00      	nop
 8000ec6:	3710      	adds	r7, #16
 8000ec8:	46bd      	mov	sp, r7
 8000eca:	bd80      	pop	{r7, pc}
 8000ecc:	40020c00 	.word	0x40020c00

08000ed0 <LCD_IO_WriteData>:

__weak void     LCD_IO_WriteData(uint16_t RegValue){
 8000ed0:	b580      	push	{r7, lr}
 8000ed2:	b084      	sub	sp, #16
 8000ed4:	af00      	add	r7, sp, #0
 8000ed6:	4603      	mov	r3, r0
 8000ed8:	80fb      	strh	r3, [r7, #6]
	uint16_t data_send = 0x0100 + RegValue;
 8000eda:	88fb      	ldrh	r3, [r7, #6]
 8000edc:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8000ee0:	81fb      	strh	r3, [r7, #14]
	data_send <<= 7;
 8000ee2:	89fb      	ldrh	r3, [r7, #14]
 8000ee4:	01db      	lsls	r3, r3, #7
 8000ee6:	81fb      	strh	r3, [r7, #14]
	/* Reset LCD control line(/CS) and Send command */
	LCD_CS_LOW();
 8000ee8:	2200      	movs	r2, #0
 8000eea:	2101      	movs	r1, #1
 8000eec:	4807      	ldr	r0, [pc, #28]	; (8000f0c <LCD_IO_WriteData+0x3c>)
 8000eee:	f003 f83b 	bl	8003f68 <HAL_GPIO_WritePin>
	SPIx_Write(data_send);
 8000ef2:	89fb      	ldrh	r3, [r7, #14]
 8000ef4:	4618      	mov	r0, r3
 8000ef6:	f7ff ff9f 	bl	8000e38 <SPIx_Write>

	/* Deselect: Chip Select high */
	LCD_CS_HIGH();
 8000efa:	2201      	movs	r2, #1
 8000efc:	2101      	movs	r1, #1
 8000efe:	4803      	ldr	r0, [pc, #12]	; (8000f0c <LCD_IO_WriteData+0x3c>)
 8000f00:	f003 f832 	bl	8003f68 <HAL_GPIO_WritePin>
}
 8000f04:	bf00      	nop
 8000f06:	3710      	adds	r7, #16
 8000f08:	46bd      	mov	sp, r7
 8000f0a:	bd80      	pop	{r7, pc}
 8000f0c:	40020c00 	.word	0x40020c00

08000f10 <LCD_IO_Delay>:

__weak void LCD_IO_Delay(uint32_t Delay)
{
 8000f10:	b580      	push	{r7, lr}
 8000f12:	b082      	sub	sp, #8
 8000f14:	af00      	add	r7, sp, #0
 8000f16:	6078      	str	r0, [r7, #4]
  HAL_Delay(Delay);
 8000f18:	6878      	ldr	r0, [r7, #4]
 8000f1a:	f002 f891 	bl	8003040 <HAL_Delay>
}
 8000f1e:	bf00      	nop
 8000f20:	3708      	adds	r7, #8
 8000f22:	46bd      	mov	sp, r7
 8000f24:	bd80      	pop	{r7, pc}
	...

08000f28 <HAL_UART_RxCpltCallback>:
//variables need to be declared at the beginning

UART_DATA Uart_data;

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8000f28:	b580      	push	{r7, lr}
 8000f2a:	b084      	sub	sp, #16
 8000f2c:	af00      	add	r7, sp, #0
 8000f2e:	6078      	str	r0, [r7, #4]
	if (huart->Instance == UART7)  //current UART
 8000f30:	687b      	ldr	r3, [r7, #4]
 8000f32:	681b      	ldr	r3, [r3, #0]
 8000f34:	4a1e      	ldr	r2, [pc, #120]	; (8000fb0 <HAL_UART_RxCpltCallback+0x88>)
 8000f36:	4293      	cmp	r3, r2
 8000f38:	d136      	bne.n	8000fa8 <HAL_UART_RxCpltCallback+0x80>
	{
		uint8_t i;
		if (Uart_data.Rx_indx == 0)  //clear Rx_Buffer before receiving new data
 8000f3a:	4b1e      	ldr	r3, [pc, #120]	; (8000fb4 <HAL_UART_RxCpltCallback+0x8c>)
 8000f3c:	781b      	ldrb	r3, [r3, #0]
 8000f3e:	2b00      	cmp	r3, #0
 8000f40:	d10d      	bne.n	8000f5e <HAL_UART_RxCpltCallback+0x36>
		{
			for (i=0 ; i<100 ; i++) {
 8000f42:	2300      	movs	r3, #0
 8000f44:	73fb      	strb	r3, [r7, #15]
 8000f46:	e007      	b.n	8000f58 <HAL_UART_RxCpltCallback+0x30>
				Uart_data.Rx_Buffer[i]=0;
 8000f48:	7bfb      	ldrb	r3, [r7, #15]
 8000f4a:	4a1a      	ldr	r2, [pc, #104]	; (8000fb4 <HAL_UART_RxCpltCallback+0x8c>)
 8000f4c:	4413      	add	r3, r2
 8000f4e:	2200      	movs	r2, #0
 8000f50:	70da      	strb	r2, [r3, #3]
			for (i=0 ; i<100 ; i++) {
 8000f52:	7bfb      	ldrb	r3, [r7, #15]
 8000f54:	3301      	adds	r3, #1
 8000f56:	73fb      	strb	r3, [r7, #15]
 8000f58:	7bfb      	ldrb	r3, [r7, #15]
 8000f5a:	2b63      	cmp	r3, #99	; 0x63
 8000f5c:	d9f4      	bls.n	8000f48 <HAL_UART_RxCpltCallback+0x20>
			}
		}

		if ((Uart_data.Rx_data[0]!=10)&&(Uart_data.Rx_data[0]!=13)) //if received data different from ascii 13 (enter)
 8000f5e:	4b15      	ldr	r3, [pc, #84]	; (8000fb4 <HAL_UART_RxCpltCallback+0x8c>)
 8000f60:	785b      	ldrb	r3, [r3, #1]
 8000f62:	2b0a      	cmp	r3, #10
 8000f64:	d012      	beq.n	8000f8c <HAL_UART_RxCpltCallback+0x64>
 8000f66:	4b13      	ldr	r3, [pc, #76]	; (8000fb4 <HAL_UART_RxCpltCallback+0x8c>)
 8000f68:	785b      	ldrb	r3, [r3, #1]
 8000f6a:	2b0d      	cmp	r3, #13
 8000f6c:	d00e      	beq.n	8000f8c <HAL_UART_RxCpltCallback+0x64>
		{
			Uart_data.Rx_Buffer[Uart_data.Rx_indx]=Uart_data.Rx_data[0];    //add data to Rx_Buffer
 8000f6e:	4b11      	ldr	r3, [pc, #68]	; (8000fb4 <HAL_UART_RxCpltCallback+0x8c>)
 8000f70:	781b      	ldrb	r3, [r3, #0]
 8000f72:	4619      	mov	r1, r3
 8000f74:	4b0f      	ldr	r3, [pc, #60]	; (8000fb4 <HAL_UART_RxCpltCallback+0x8c>)
 8000f76:	785a      	ldrb	r2, [r3, #1]
 8000f78:	4b0e      	ldr	r3, [pc, #56]	; (8000fb4 <HAL_UART_RxCpltCallback+0x8c>)
 8000f7a:	440b      	add	r3, r1
 8000f7c:	70da      	strb	r2, [r3, #3]
			Uart_data.Rx_indx++;
 8000f7e:	4b0d      	ldr	r3, [pc, #52]	; (8000fb4 <HAL_UART_RxCpltCallback+0x8c>)
 8000f80:	781b      	ldrb	r3, [r3, #0]
 8000f82:	3301      	adds	r3, #1
 8000f84:	b2da      	uxtb	r2, r3
 8000f86:	4b0b      	ldr	r3, [pc, #44]	; (8000fb4 <HAL_UART_RxCpltCallback+0x8c>)
 8000f88:	701a      	strb	r2, [r3, #0]
 8000f8a:	e008      	b.n	8000f9e <HAL_UART_RxCpltCallback+0x76>
		}
		else            //if received data = 13
		{
			Uart_data.Rx_indx=0;
 8000f8c:	4b09      	ldr	r3, [pc, #36]	; (8000fb4 <HAL_UART_RxCpltCallback+0x8c>)
 8000f8e:	2200      	movs	r2, #0
 8000f90:	701a      	strb	r2, [r3, #0]
			Uart_data.Transfer_cplt=true;//transfer complete, data is ready to read
 8000f92:	4b08      	ldr	r3, [pc, #32]	; (8000fb4 <HAL_UART_RxCpltCallback+0x8c>)
 8000f94:	2201      	movs	r2, #1
 8000f96:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
			UART_Task();
 8000f9a:	f001 fb19 	bl	80025d0 <UART_Task>
		}
		HAL_UART_Receive_IT(&huart7, Uart_data.Rx_data, 1);   //activate UART receive interrupt every time
 8000f9e:	2201      	movs	r2, #1
 8000fa0:	4905      	ldr	r1, [pc, #20]	; (8000fb8 <HAL_UART_RxCpltCallback+0x90>)
 8000fa2:	4806      	ldr	r0, [pc, #24]	; (8000fbc <HAL_UART_RxCpltCallback+0x94>)
 8000fa4:	f006 fab8 	bl	8007518 <HAL_UART_Receive_IT>
	}
}
 8000fa8:	bf00      	nop
 8000faa:	3710      	adds	r7, #16
 8000fac:	46bd      	mov	sp, r7
 8000fae:	bd80      	pop	{r7, pc}
 8000fb0:	40007800 	.word	0x40007800
 8000fb4:	20026e94 	.word	0x20026e94
 8000fb8:	20026e95 	.word	0x20026e95
 8000fbc:	20026c64 	.word	0x20026c64

08000fc0 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback (uint16_t GPIO_Pin){
 8000fc0:	b580      	push	{r7, lr}
 8000fc2:	b082      	sub	sp, #8
 8000fc4:	af00      	add	r7, sp, #0
 8000fc6:	4603      	mov	r3, r0
 8000fc8:	80fb      	strh	r3, [r7, #6]
	//Check open Lampe
	if ( GPIO_Pin == CMD_ON_OFF_Pin){
 8000fca:	88fb      	ldrh	r3, [r7, #6]
 8000fcc:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8000fd0:	d116      	bne.n	8001000 <HAL_GPIO_EXTI_Callback+0x40>
		if(HAL_GPIO_ReadPin(CMD_ON_OFF_GPIO_Port, CMD_ON_OFF_Pin) == GPIO_PIN_RESET){
 8000fd2:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000fd6:	4813      	ldr	r0, [pc, #76]	; (8001024 <HAL_GPIO_EXTI_Callback+0x64>)
 8000fd8:	f002 ffae 	bl	8003f38 <HAL_GPIO_ReadPin>
 8000fdc:	4603      	mov	r3, r0
 8000fde:	2b00      	cmp	r3, #0
 8000fe0:	d107      	bne.n	8000ff2 <HAL_GPIO_EXTI_Callback+0x32>
			Lexi_Set_State_OFF();
 8000fe2:	f7ff fea1 	bl	8000d28 <Lexi_Set_State_OFF>
			//HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
			//Turn off bluetooth
			HAL_GPIO_WritePin(CMD_ALIM_BLE_GPIO_Port, CMD_ALIM_BLE_Pin , GPIO_PIN_SET);
 8000fe6:	2201      	movs	r2, #1
 8000fe8:	2140      	movs	r1, #64	; 0x40
 8000fea:	480e      	ldr	r0, [pc, #56]	; (8001024 <HAL_GPIO_EXTI_Callback+0x64>)
 8000fec:	f002 ffbc 	bl	8003f68 <HAL_GPIO_WritePin>
 8000ff0:	e006      	b.n	8001000 <HAL_GPIO_EXTI_Callback+0x40>
		}
		else
		{
			Lexi_Set_State_ON();
 8000ff2:	f7ff fea7 	bl	8000d44 <Lexi_Set_State_ON>
			HAL_GPIO_WritePin(CMD_ALIM_BLE_GPIO_Port, CMD_ALIM_BLE_Pin ,GPIO_PIN_RESET);
 8000ff6:	2200      	movs	r2, #0
 8000ff8:	2140      	movs	r1, #64	; 0x40
 8000ffa:	480a      	ldr	r0, [pc, #40]	; (8001024 <HAL_GPIO_EXTI_Callback+0x64>)
 8000ffc:	f002 ffb4 	bl	8003f68 <HAL_GPIO_WritePin>
			//Turn on bluetooth
		}
	}
	//Check Charge Current
	if ( GPIO_Pin == CHRG_OK_Pin){
 8001000:	88fb      	ldrh	r3, [r7, #6]
 8001002:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8001006:	d109      	bne.n	800101c <HAL_GPIO_EXTI_Callback+0x5c>
		if (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13) == GPIO_PIN_SET){
 8001008:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800100c:	4806      	ldr	r0, [pc, #24]	; (8001028 <HAL_GPIO_EXTI_Callback+0x68>)
 800100e:	f002 ff93 	bl	8003f38 <HAL_GPIO_ReadPin>
 8001012:	4603      	mov	r3, r0
 8001014:	2b01      	cmp	r3, #1
 8001016:	d101      	bne.n	800101c <HAL_GPIO_EXTI_Callback+0x5c>
			BQ25713_Default_Charge();
 8001018:	f7ff fb3a 	bl	8000690 <BQ25713_Default_Charge>
		}
	}
}
 800101c:	bf00      	nop
 800101e:	3708      	adds	r7, #8
 8001020:	46bd      	mov	sp, r7
 8001022:	bd80      	pop	{r7, pc}
 8001024:	40020c00 	.word	0x40020c00
 8001028:	40020800 	.word	0x40020800

0800102c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800102c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800102e:	b09f      	sub	sp, #124	; 0x7c
 8001030:	af1c      	add	r7, sp, #112	; 0x70
  

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001032:	f001 ff93 	bl	8002f5c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001036:	f000 f88d 	bl	8001154 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800103a:	f000 fc27 	bl	800188c <MX_GPIO_Init>
  MX_DAC_Init();
 800103e:	f000 f925 	bl	800128c <MX_DAC_Init>
  MX_LTDC_Init();
 8001042:	f000 f9bf 	bl	80013c4 <MX_LTDC_Init>
  MX_CRC_Init();
 8001046:	f000 f90d 	bl	8001264 <MX_CRC_Init>
  MX_SPI3_Init();
 800104a:	f000 fa3b 	bl	80014c4 <MX_SPI3_Init>
  MX_UART4_Init();
 800104e:	f000 fbc9 	bl	80017e4 <MX_UART4_Init>
  MX_TIM1_Init();
 8001052:	f000 fa6f 	bl	8001534 <MX_TIM1_Init>
  MX_DMA2D_Init();
 8001056:	f000 f943 	bl	80012e0 <MX_DMA2D_Init>
  MX_TIM2_Init();
 800105a:	f000 fabb 	bl	80015d4 <MX_TIM2_Init>
  MX_TIM3_Init();
 800105e:	f000 fb11 	bl	8001684 <MX_TIM3_Init>
  MX_I2C1_Init();
 8001062:	f000 f96f 	bl	8001344 <MX_I2C1_Init>
  MX_TIM4_Init();
 8001066:	f000 fb65 	bl	8001734 <MX_TIM4_Init>
  MX_UART7_Init();
 800106a:	f000 fbe5 	bl	8001838 <MX_UART7_Init>
  MX_TouchGFX_Init();
 800106e:	f007 f8a5 	bl	80081bc <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
  //HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13,GPIO_PIN_SET);
  //HAL_Delay(1000);
	Lexi_Init_Data();								//Init Data LexiLight
 8001072:	f7ff fcad 	bl	80009d0 <Lexi_Init_Data>
	HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);		//Start PWM TIM2 Channel 1 -- LED LAMPE
 8001076:	2100      	movs	r1, #0
 8001078:	482e      	ldr	r0, [pc, #184]	; (8001134 <main+0x108>)
 800107a:	f005 fc1f 	bl	80068bc <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);		//Start PWM TIM3 Channel 3 -- LED DRIVER
 800107e:	2108      	movs	r1, #8
 8001080:	482d      	ldr	r0, [pc, #180]	; (8001138 <main+0x10c>)
 8001082:	f005 fc1b 	bl	80068bc <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);		//Start PWM TIM4 Channel 1 -- LED BACKLIGHT
 8001086:	210c      	movs	r1, #12
 8001088:	482c      	ldr	r0, [pc, #176]	; (800113c <main+0x110>)
 800108a:	f005 fc17 	bl	80068bc <HAL_TIM_PWM_Start>
	HAL_TIM_Base_Start(&htim1);						//Start TIM1
 800108e:	482c      	ldr	r0, [pc, #176]	; (8001140 <main+0x114>)
 8001090:	f005 fbc5 	bl	800681e <HAL_TIM_Base_Start>

	__HAL_TIM_SET_COMPARE(&htim2 , TIM_CHANNEL_1,0);	//Set Duty = 0
 8001094:	4b27      	ldr	r3, [pc, #156]	; (8001134 <main+0x108>)
 8001096:	681b      	ldr	r3, [r3, #0]
 8001098:	2200      	movs	r2, #0
 800109a:	635a      	str	r2, [r3, #52]	; 0x34
	__HAL_TIM_SET_COMPARE(&htim3 , TIM_CHANNEL_3,0);	//Set Duty = 0
 800109c:	4b26      	ldr	r3, [pc, #152]	; (8001138 <main+0x10c>)
 800109e:	681b      	ldr	r3, [r3, #0]
 80010a0:	2200      	movs	r2, #0
 80010a2:	63da      	str	r2, [r3, #60]	; 0x3c
	__HAL_TIM_SET_COMPARE(&htim4 , TIM_CHANNEL_4,100);	//Set Duty = 0
 80010a4:	4b25      	ldr	r3, [pc, #148]	; (800113c <main+0x110>)
 80010a6:	681b      	ldr	r3, [r3, #0]
 80010a8:	2264      	movs	r2, #100	; 0x64
 80010aa:	641a      	str	r2, [r3, #64]	; 0x40
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_1, GPIO_PIN_RESET);
 80010ac:	2200      	movs	r2, #0
 80010ae:	2102      	movs	r1, #2
 80010b0:	4824      	ldr	r0, [pc, #144]	; (8001144 <main+0x118>)
 80010b2:	f002 ff59 	bl	8003f68 <HAL_GPIO_WritePin>

	HAL_UART_Receive_IT(&huart7, Uart_data.Rx_data, 1);
 80010b6:	2201      	movs	r2, #1
 80010b8:	4923      	ldr	r1, [pc, #140]	; (8001148 <main+0x11c>)
 80010ba:	4824      	ldr	r0, [pc, #144]	; (800114c <main+0x120>)
 80010bc:	f006 fa2c 	bl	8007518 <HAL_UART_Receive_IT>
	UART_Init();
 80010c0:	f001 fa72 	bl	80025a8 <UART_Init>
	BQ25713_Init( hi2c1);
 80010c4:	4c22      	ldr	r4, [pc, #136]	; (8001150 <main+0x124>)
 80010c6:	4668      	mov	r0, sp
 80010c8:	f104 0310 	add.w	r3, r4, #16
 80010cc:	2244      	movs	r2, #68	; 0x44
 80010ce:	4619      	mov	r1, r3
 80010d0:	f019 fd06 	bl	801aae0 <memcpy>
 80010d4:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80010d8:	f7ff fa62 	bl	80005a0 <BQ25713_Init>
	ST7789H2_Init();
 80010dc:	f001 fe21 	bl	8002d22 <ST7789H2_Init>
	/*
	data[0] = 0x00;
	data[1] = 0xff >> 8;
	data[2] = 0xff;
	*/
	uint8_t count =0;
 80010e0:	2300      	movs	r3, #0
 80010e2:	71fb      	strb	r3, [r7, #7]
  while (1)
  {
	  Lexi_Task (htim2, htim3);
 80010e4:	4e13      	ldr	r6, [pc, #76]	; (8001134 <main+0x108>)
 80010e6:	4b14      	ldr	r3, [pc, #80]	; (8001138 <main+0x10c>)
 80010e8:	ac0c      	add	r4, sp, #48	; 0x30
 80010ea:	461d      	mov	r5, r3
 80010ec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80010ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80010f0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80010f2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80010f4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80010f6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80010f8:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80010fc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001100:	466d      	mov	r5, sp
 8001102:	f106 0410 	add.w	r4, r6, #16
 8001106:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001108:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800110a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800110c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800110e:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8001112:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8001116:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800111a:	f7ff fc8b 	bl	8000a34 <Lexi_Task>
	  count++;
 800111e:	79fb      	ldrb	r3, [r7, #7]
 8001120:	3301      	adds	r3, #1
 8001122:	71fb      	strb	r3, [r7, #7]
	  if (count > 15){
 8001124:	79fb      	ldrb	r3, [r7, #7]
 8001126:	2b0f      	cmp	r3, #15
 8001128:	d9dc      	bls.n	80010e4 <main+0xb8>
		  BQ25713_Task();
 800112a:	f7ff fae7 	bl	80006fc <BQ25713_Task>
		  count = 0;
 800112e:	2300      	movs	r3, #0
 8001130:	71fb      	strb	r3, [r7, #7]
	  Lexi_Task (htim2, htim3);
 8001132:	e7d7      	b.n	80010e4 <main+0xb8>
 8001134:	20026fc4 	.word	0x20026fc4
 8001138:	20026d40 	.word	0x20026d40
 800113c:	20026ca4 	.word	0x20026ca4
 8001140:	20026f04 	.word	0x20026f04
 8001144:	40020c00 	.word	0x40020c00
 8001148:	20026e95 	.word	0x20026e95
 800114c:	20026c64 	.word	0x20026c64
 8001150:	20026ce4 	.word	0x20026ce4

08001154 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001154:	b580      	push	{r7, lr}
 8001156:	b0a0      	sub	sp, #128	; 0x80
 8001158:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800115a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800115e:	2230      	movs	r2, #48	; 0x30
 8001160:	2100      	movs	r1, #0
 8001162:	4618      	mov	r0, r3
 8001164:	f019 fcc7 	bl	801aaf6 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001168:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800116c:	2200      	movs	r2, #0
 800116e:	601a      	str	r2, [r3, #0]
 8001170:	605a      	str	r2, [r3, #4]
 8001172:	609a      	str	r2, [r3, #8]
 8001174:	60da      	str	r2, [r3, #12]
 8001176:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001178:	f107 030c 	add.w	r3, r7, #12
 800117c:	2230      	movs	r2, #48	; 0x30
 800117e:	2100      	movs	r1, #0
 8001180:	4618      	mov	r0, r3
 8001182:	f019 fcb8 	bl	801aaf6 <memset>

  /** Macro to configure the PLL multiplication factor 
  */
  __HAL_RCC_PLL_PLLM_CONFIG(16);
 8001186:	4b35      	ldr	r3, [pc, #212]	; (800125c <SystemClock_Config+0x108>)
 8001188:	685b      	ldr	r3, [r3, #4]
 800118a:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800118e:	4a33      	ldr	r2, [pc, #204]	; (800125c <SystemClock_Config+0x108>)
 8001190:	f043 0310 	orr.w	r3, r3, #16
 8001194:	6053      	str	r3, [r2, #4]
  /** Macro to configure the PLL clock source 
  */
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSI);
 8001196:	4b31      	ldr	r3, [pc, #196]	; (800125c <SystemClock_Config+0x108>)
 8001198:	685b      	ldr	r3, [r3, #4]
 800119a:	4a30      	ldr	r2, [pc, #192]	; (800125c <SystemClock_Config+0x108>)
 800119c:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 80011a0:	6053      	str	r3, [r2, #4]
  /** Configure the main internal regulator output voltage 
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80011a2:	2300      	movs	r3, #0
 80011a4:	60bb      	str	r3, [r7, #8]
 80011a6:	4b2d      	ldr	r3, [pc, #180]	; (800125c <SystemClock_Config+0x108>)
 80011a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011aa:	4a2c      	ldr	r2, [pc, #176]	; (800125c <SystemClock_Config+0x108>)
 80011ac:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80011b0:	6413      	str	r3, [r2, #64]	; 0x40
 80011b2:	4b2a      	ldr	r3, [pc, #168]	; (800125c <SystemClock_Config+0x108>)
 80011b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011b6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80011ba:	60bb      	str	r3, [r7, #8]
 80011bc:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 80011be:	2300      	movs	r3, #0
 80011c0:	607b      	str	r3, [r7, #4]
 80011c2:	4b27      	ldr	r3, [pc, #156]	; (8001260 <SystemClock_Config+0x10c>)
 80011c4:	681b      	ldr	r3, [r3, #0]
 80011c6:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80011ca:	4a25      	ldr	r2, [pc, #148]	; (8001260 <SystemClock_Config+0x10c>)
 80011cc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80011d0:	6013      	str	r3, [r2, #0]
 80011d2:	4b23      	ldr	r3, [pc, #140]	; (8001260 <SystemClock_Config+0x10c>)
 80011d4:	681b      	ldr	r3, [r3, #0]
 80011d6:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80011da:	607b      	str	r3, [r7, #4]
 80011dc:	687b      	ldr	r3, [r7, #4]
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80011de:	2302      	movs	r3, #2
 80011e0:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80011e2:	2301      	movs	r3, #1
 80011e4:	65fb      	str	r3, [r7, #92]	; 0x5c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80011e6:	2310      	movs	r3, #16
 80011e8:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80011ea:	2300      	movs	r3, #0
 80011ec:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80011ee:	2300      	movs	r3, #0
 80011f0:	66fb      	str	r3, [r7, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011f2:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80011f6:	4618      	mov	r0, r3
 80011f8:	f004 fa80 	bl	80056fc <HAL_RCC_OscConfig>
 80011fc:	4603      	mov	r3, r0
 80011fe:	2b00      	cmp	r3, #0
 8001200:	d001      	beq.n	8001206 <SystemClock_Config+0xb2>
  {
    Error_Handler();
 8001202:	f000 fcb5 	bl	8001b70 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001206:	230f      	movs	r3, #15
 8001208:	63fb      	str	r3, [r7, #60]	; 0x3c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 800120a:	2300      	movs	r3, #0
 800120c:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800120e:	2300      	movs	r3, #0
 8001210:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001212:	2300      	movs	r3, #0
 8001214:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001216:	2300      	movs	r3, #0
 8001218:	64fb      	str	r3, [r7, #76]	; 0x4c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 800121a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800121e:	2100      	movs	r1, #0
 8001220:	4618      	mov	r0, r3
 8001222:	f004 fcdb 	bl	8005bdc <HAL_RCC_ClockConfig>
 8001226:	4603      	mov	r3, r0
 8001228:	2b00      	cmp	r3, #0
 800122a:	d001      	beq.n	8001230 <SystemClock_Config+0xdc>
  {
    Error_Handler();
 800122c:	f000 fca0 	bl	8001b70 <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001230:	2308      	movs	r3, #8
 8001232:	60fb      	str	r3, [r7, #12]
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 100;
 8001234:	2364      	movs	r3, #100	; 0x64
 8001236:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
 8001238:	2302      	movs	r3, #2
 800123a:	627b      	str	r3, [r7, #36]	; 0x24
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 800123c:	2300      	movs	r3, #0
 800123e:	633b      	str	r3, [r7, #48]	; 0x30
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001240:	f107 030c 	add.w	r3, r7, #12
 8001244:	4618      	mov	r0, r3
 8001246:	f004 fe95 	bl	8005f74 <HAL_RCCEx_PeriphCLKConfig>
 800124a:	4603      	mov	r3, r0
 800124c:	2b00      	cmp	r3, #0
 800124e:	d001      	beq.n	8001254 <SystemClock_Config+0x100>
  {
    Error_Handler();
 8001250:	f000 fc8e 	bl	8001b70 <Error_Handler>
  }
}
 8001254:	bf00      	nop
 8001256:	3780      	adds	r7, #128	; 0x80
 8001258:	46bd      	mov	sp, r7
 800125a:	bd80      	pop	{r7, pc}
 800125c:	40023800 	.word	0x40023800
 8001260:	40007000 	.word	0x40007000

08001264 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8001264:	b580      	push	{r7, lr}
 8001266:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8001268:	4b06      	ldr	r3, [pc, #24]	; (8001284 <MX_CRC_Init+0x20>)
 800126a:	4a07      	ldr	r2, [pc, #28]	; (8001288 <MX_CRC_Init+0x24>)
 800126c:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800126e:	4805      	ldr	r0, [pc, #20]	; (8001284 <MX_CRC_Init+0x20>)
 8001270:	f002 f819 	bl	80032a6 <HAL_CRC_Init>
 8001274:	4603      	mov	r3, r0
 8001276:	2b00      	cmp	r3, #0
 8001278:	d001      	beq.n	800127e <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 800127a:	f000 fc79 	bl	8001b70 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 800127e:	bf00      	nop
 8001280:	bd80      	pop	{r7, pc}
 8001282:	bf00      	nop
 8001284:	20026d38 	.word	0x20026d38
 8001288:	40023000 	.word	0x40023000

0800128c <MX_DAC_Init>:
  * @brief DAC Initialization Function
  * @param None
  * @retval None
  */
static void MX_DAC_Init(void)
{
 800128c:	b580      	push	{r7, lr}
 800128e:	b082      	sub	sp, #8
 8001290:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN DAC_Init 0 */

  /* USER CODE END DAC_Init 0 */

  DAC_ChannelConfTypeDef sConfig = {0};
 8001292:	463b      	mov	r3, r7
 8001294:	2200      	movs	r2, #0
 8001296:	601a      	str	r2, [r3, #0]
 8001298:	605a      	str	r2, [r3, #4]
  /* USER CODE BEGIN DAC_Init 1 */

  /* USER CODE END DAC_Init 1 */
  /** DAC Initialization 
  */
  hdac.Instance = DAC;
 800129a:	4b0f      	ldr	r3, [pc, #60]	; (80012d8 <MX_DAC_Init+0x4c>)
 800129c:	4a0f      	ldr	r2, [pc, #60]	; (80012dc <MX_DAC_Init+0x50>)
 800129e:	601a      	str	r2, [r3, #0]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 80012a0:	480d      	ldr	r0, [pc, #52]	; (80012d8 <MX_DAC_Init+0x4c>)
 80012a2:	f002 f81c 	bl	80032de <HAL_DAC_Init>
 80012a6:	4603      	mov	r3, r0
 80012a8:	2b00      	cmp	r3, #0
 80012aa:	d001      	beq.n	80012b0 <MX_DAC_Init+0x24>
  {
    Error_Handler();
 80012ac:	f000 fc60 	bl	8001b70 <Error_Handler>
  }
  /** DAC channel OUT2 config 
  */
  sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 80012b0:	2300      	movs	r3, #0
 80012b2:	603b      	str	r3, [r7, #0]
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 80012b4:	2300      	movs	r3, #0
 80012b6:	607b      	str	r3, [r7, #4]
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 80012b8:	463b      	mov	r3, r7
 80012ba:	2210      	movs	r2, #16
 80012bc:	4619      	mov	r1, r3
 80012be:	4806      	ldr	r0, [pc, #24]	; (80012d8 <MX_DAC_Init+0x4c>)
 80012c0:	f002 f82f 	bl	8003322 <HAL_DAC_ConfigChannel>
 80012c4:	4603      	mov	r3, r0
 80012c6:	2b00      	cmp	r3, #0
 80012c8:	d001      	beq.n	80012ce <MX_DAC_Init+0x42>
  {
    Error_Handler();
 80012ca:	f000 fc51 	bl	8001b70 <Error_Handler>
  }
  /* USER CODE BEGIN DAC_Init 2 */

  /* USER CODE END DAC_Init 2 */

}
 80012ce:	bf00      	nop
 80012d0:	3708      	adds	r7, #8
 80012d2:	46bd      	mov	sp, r7
 80012d4:	bd80      	pop	{r7, pc}
 80012d6:	bf00      	nop
 80012d8:	20026e80 	.word	0x20026e80
 80012dc:	40007400 	.word	0x40007400

080012e0 <MX_DMA2D_Init>:
  * @brief DMA2D Initialization Function
  * @param None
  * @retval None
  */
static void MX_DMA2D_Init(void)
{
 80012e0:	b580      	push	{r7, lr}
 80012e2:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 80012e4:	4b15      	ldr	r3, [pc, #84]	; (800133c <MX_DMA2D_Init+0x5c>)
 80012e6:	4a16      	ldr	r2, [pc, #88]	; (8001340 <MX_DMA2D_Init+0x60>)
 80012e8:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 80012ea:	4b14      	ldr	r3, [pc, #80]	; (800133c <MX_DMA2D_Init+0x5c>)
 80012ec:	2200      	movs	r2, #0
 80012ee:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 80012f0:	4b12      	ldr	r3, [pc, #72]	; (800133c <MX_DMA2D_Init+0x5c>)
 80012f2:	2202      	movs	r2, #2
 80012f4:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 80012f6:	4b11      	ldr	r3, [pc, #68]	; (800133c <MX_DMA2D_Init+0x5c>)
 80012f8:	2200      	movs	r2, #0
 80012fa:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 80012fc:	4b0f      	ldr	r3, [pc, #60]	; (800133c <MX_DMA2D_Init+0x5c>)
 80012fe:	2200      	movs	r2, #0
 8001300:	629a      	str	r2, [r3, #40]	; 0x28
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001302:	4b0e      	ldr	r3, [pc, #56]	; (800133c <MX_DMA2D_Init+0x5c>)
 8001304:	2202      	movs	r2, #2
 8001306:	62da      	str	r2, [r3, #44]	; 0x2c
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8001308:	4b0c      	ldr	r3, [pc, #48]	; (800133c <MX_DMA2D_Init+0x5c>)
 800130a:	2200      	movs	r2, #0
 800130c:	631a      	str	r2, [r3, #48]	; 0x30
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800130e:	4b0b      	ldr	r3, [pc, #44]	; (800133c <MX_DMA2D_Init+0x5c>)
 8001310:	2200      	movs	r2, #0
 8001312:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001314:	4809      	ldr	r0, [pc, #36]	; (800133c <MX_DMA2D_Init+0x5c>)
 8001316:	f002 f873 	bl	8003400 <HAL_DMA2D_Init>
 800131a:	4603      	mov	r3, r0
 800131c:	2b00      	cmp	r3, #0
 800131e:	d001      	beq.n	8001324 <MX_DMA2D_Init+0x44>
  {
    Error_Handler();
 8001320:	f000 fc26 	bl	8001b70 <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001324:	2101      	movs	r1, #1
 8001326:	4805      	ldr	r0, [pc, #20]	; (800133c <MX_DMA2D_Init+0x5c>)
 8001328:	f002 fa24 	bl	8003774 <HAL_DMA2D_ConfigLayer>
 800132c:	4603      	mov	r3, r0
 800132e:	2b00      	cmp	r3, #0
 8001330:	d001      	beq.n	8001336 <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 8001332:	f000 fc1d 	bl	8001b70 <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 8001336:	bf00      	nop
 8001338:	bd80      	pop	{r7, pc}
 800133a:	bf00      	nop
 800133c:	20026f84 	.word	0x20026f84
 8001340:	4002b000 	.word	0x4002b000

08001344 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001344:	b580      	push	{r7, lr}
 8001346:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001348:	4b1b      	ldr	r3, [pc, #108]	; (80013b8 <MX_I2C1_Init+0x74>)
 800134a:	4a1c      	ldr	r2, [pc, #112]	; (80013bc <MX_I2C1_Init+0x78>)
 800134c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 800134e:	4b1a      	ldr	r3, [pc, #104]	; (80013b8 <MX_I2C1_Init+0x74>)
 8001350:	4a1b      	ldr	r2, [pc, #108]	; (80013c0 <MX_I2C1_Init+0x7c>)
 8001352:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001354:	4b18      	ldr	r3, [pc, #96]	; (80013b8 <MX_I2C1_Init+0x74>)
 8001356:	2200      	movs	r2, #0
 8001358:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 800135a:	4b17      	ldr	r3, [pc, #92]	; (80013b8 <MX_I2C1_Init+0x74>)
 800135c:	2200      	movs	r2, #0
 800135e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001360:	4b15      	ldr	r3, [pc, #84]	; (80013b8 <MX_I2C1_Init+0x74>)
 8001362:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001366:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001368:	4b13      	ldr	r3, [pc, #76]	; (80013b8 <MX_I2C1_Init+0x74>)
 800136a:	2200      	movs	r2, #0
 800136c:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 800136e:	4b12      	ldr	r3, [pc, #72]	; (80013b8 <MX_I2C1_Init+0x74>)
 8001370:	2200      	movs	r2, #0
 8001372:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001374:	4b10      	ldr	r3, [pc, #64]	; (80013b8 <MX_I2C1_Init+0x74>)
 8001376:	2200      	movs	r2, #0
 8001378:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800137a:	4b0f      	ldr	r3, [pc, #60]	; (80013b8 <MX_I2C1_Init+0x74>)
 800137c:	2200      	movs	r2, #0
 800137e:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001380:	480d      	ldr	r0, [pc, #52]	; (80013b8 <MX_I2C1_Init+0x74>)
 8001382:	f002 fe23 	bl	8003fcc <HAL_I2C_Init>
 8001386:	4603      	mov	r3, r0
 8001388:	2b00      	cmp	r3, #0
 800138a:	d001      	beq.n	8001390 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 800138c:	f000 fbf0 	bl	8001b70 <Error_Handler>
  }
  /** Configure Analogue filter 
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001390:	2100      	movs	r1, #0
 8001392:	4809      	ldr	r0, [pc, #36]	; (80013b8 <MX_I2C1_Init+0x74>)
 8001394:	f003 fda1 	bl	8004eda <HAL_I2CEx_ConfigAnalogFilter>
 8001398:	4603      	mov	r3, r0
 800139a:	2b00      	cmp	r3, #0
 800139c:	d001      	beq.n	80013a2 <MX_I2C1_Init+0x5e>
  {
    Error_Handler();
 800139e:	f000 fbe7 	bl	8001b70 <Error_Handler>
  }
  /** Configure Digital filter 
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 80013a2:	2100      	movs	r1, #0
 80013a4:	4804      	ldr	r0, [pc, #16]	; (80013b8 <MX_I2C1_Init+0x74>)
 80013a6:	f003 fdd4 	bl	8004f52 <HAL_I2CEx_ConfigDigitalFilter>
 80013aa:	4603      	mov	r3, r0
 80013ac:	2b00      	cmp	r3, #0
 80013ae:	d001      	beq.n	80013b4 <MX_I2C1_Init+0x70>
  {
    Error_Handler();
 80013b0:	f000 fbde 	bl	8001b70 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80013b4:	bf00      	nop
 80013b6:	bd80      	pop	{r7, pc}
 80013b8:	20026ce4 	.word	0x20026ce4
 80013bc:	40005400 	.word	0x40005400
 80013c0:	000186a0 	.word	0x000186a0

080013c4 <MX_LTDC_Init>:
  * @brief LTDC Initialization Function
  * @param None
  * @retval None
  */
static void MX_LTDC_Init(void)
{
 80013c4:	b580      	push	{r7, lr}
 80013c6:	b08e      	sub	sp, #56	; 0x38
 80013c8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */

  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80013ca:	1d3b      	adds	r3, r7, #4
 80013cc:	2234      	movs	r2, #52	; 0x34
 80013ce:	2100      	movs	r1, #0
 80013d0:	4618      	mov	r0, r3
 80013d2:	f019 fb90 	bl	801aaf6 <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 80013d6:	4b39      	ldr	r3, [pc, #228]	; (80014bc <MX_LTDC_Init+0xf8>)
 80013d8:	4a39      	ldr	r2, [pc, #228]	; (80014c0 <MX_LTDC_Init+0xfc>)
 80013da:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80013dc:	4b37      	ldr	r3, [pc, #220]	; (80014bc <MX_LTDC_Init+0xf8>)
 80013de:	2200      	movs	r2, #0
 80013e0:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 80013e2:	4b36      	ldr	r3, [pc, #216]	; (80014bc <MX_LTDC_Init+0xf8>)
 80013e4:	2200      	movs	r2, #0
 80013e6:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80013e8:	4b34      	ldr	r3, [pc, #208]	; (80014bc <MX_LTDC_Init+0xf8>)
 80013ea:	2200      	movs	r2, #0
 80013ec:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80013ee:	4b33      	ldr	r3, [pc, #204]	; (80014bc <MX_LTDC_Init+0xf8>)
 80013f0:	2200      	movs	r2, #0
 80013f2:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 9;
 80013f4:	4b31      	ldr	r3, [pc, #196]	; (80014bc <MX_LTDC_Init+0xf8>)
 80013f6:	2209      	movs	r2, #9
 80013f8:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 1;
 80013fa:	4b30      	ldr	r3, [pc, #192]	; (80014bc <MX_LTDC_Init+0xf8>)
 80013fc:	2201      	movs	r2, #1
 80013fe:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 29;
 8001400:	4b2e      	ldr	r3, [pc, #184]	; (80014bc <MX_LTDC_Init+0xf8>)
 8001402:	221d      	movs	r2, #29
 8001404:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 3;
 8001406:	4b2d      	ldr	r3, [pc, #180]	; (80014bc <MX_LTDC_Init+0xf8>)
 8001408:	2203      	movs	r2, #3
 800140a:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 269;
 800140c:	4b2b      	ldr	r3, [pc, #172]	; (80014bc <MX_LTDC_Init+0xf8>)
 800140e:	f240 120d 	movw	r2, #269	; 0x10d
 8001412:	625a      	str	r2, [r3, #36]	; 0x24
  hltdc.Init.AccumulatedActiveH = 323;
 8001414:	4b29      	ldr	r3, [pc, #164]	; (80014bc <MX_LTDC_Init+0xf8>)
 8001416:	f240 1243 	movw	r2, #323	; 0x143
 800141a:	629a      	str	r2, [r3, #40]	; 0x28
  hltdc.Init.TotalWidth = 279;
 800141c:	4b27      	ldr	r3, [pc, #156]	; (80014bc <MX_LTDC_Init+0xf8>)
 800141e:	f240 1217 	movw	r2, #279	; 0x117
 8001422:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc.Init.TotalHeigh = 327;
 8001424:	4b25      	ldr	r3, [pc, #148]	; (80014bc <MX_LTDC_Init+0xf8>)
 8001426:	f240 1247 	movw	r2, #327	; 0x147
 800142a:	631a      	str	r2, [r3, #48]	; 0x30
  hltdc.Init.Backcolor.Blue = 0;
 800142c:	4b23      	ldr	r3, [pc, #140]	; (80014bc <MX_LTDC_Init+0xf8>)
 800142e:	2200      	movs	r2, #0
 8001430:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8001434:	4b21      	ldr	r3, [pc, #132]	; (80014bc <MX_LTDC_Init+0xf8>)
 8001436:	2200      	movs	r2, #0
 8001438:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  hltdc.Init.Backcolor.Red = 0;
 800143c:	4b1f      	ldr	r3, [pc, #124]	; (80014bc <MX_LTDC_Init+0xf8>)
 800143e:	2200      	movs	r2, #0
 8001440:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001444:	481d      	ldr	r0, [pc, #116]	; (80014bc <MX_LTDC_Init+0xf8>)
 8001446:	f003 fdc3 	bl	8004fd0 <HAL_LTDC_Init>
 800144a:	4603      	mov	r3, r0
 800144c:	2b00      	cmp	r3, #0
 800144e:	d001      	beq.n	8001454 <MX_LTDC_Init+0x90>
  {
    Error_Handler();
 8001450:	f000 fb8e 	bl	8001b70 <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 8001454:	2300      	movs	r3, #0
 8001456:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 240;
 8001458:	23f0      	movs	r3, #240	; 0xf0
 800145a:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 800145c:	2300      	movs	r3, #0
 800145e:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 320;
 8001460:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001464:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001466:	2302      	movs	r3, #2
 8001468:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 800146a:	23ff      	movs	r3, #255	; 0xff
 800146c:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 800146e:	2300      	movs	r3, #0
 8001470:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001472:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001476:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001478:	2305      	movs	r3, #5
 800147a:	627b      	str	r3, [r7, #36]	; 0x24
  pLayerCfg.FBStartAdress = 0xD0000000;
 800147c:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
 8001480:	62bb      	str	r3, [r7, #40]	; 0x28
  pLayerCfg.ImageWidth = 240;
 8001482:	23f0      	movs	r3, #240	; 0xf0
 8001484:	62fb      	str	r3, [r7, #44]	; 0x2c
  pLayerCfg.ImageHeight = 320;
 8001486:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800148a:	633b      	str	r3, [r7, #48]	; 0x30
  pLayerCfg.Backcolor.Blue = 0;
 800148c:	2300      	movs	r3, #0
 800148e:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
  pLayerCfg.Backcolor.Green = 0;
 8001492:	2300      	movs	r3, #0
 8001494:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
  pLayerCfg.Backcolor.Red = 0;
 8001498:	2300      	movs	r3, #0
 800149a:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800149e:	1d3b      	adds	r3, r7, #4
 80014a0:	2200      	movs	r2, #0
 80014a2:	4619      	mov	r1, r3
 80014a4:	4805      	ldr	r0, [pc, #20]	; (80014bc <MX_LTDC_Init+0xf8>)
 80014a6:	f003 ff1b 	bl	80052e0 <HAL_LTDC_ConfigLayer>
 80014aa:	4603      	mov	r3, r0
 80014ac:	2b00      	cmp	r3, #0
 80014ae:	d001      	beq.n	80014b4 <MX_LTDC_Init+0xf0>
  {
    Error_Handler();
 80014b0:	f000 fb5e 	bl	8001b70 <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 80014b4:	bf00      	nop
 80014b6:	3738      	adds	r7, #56	; 0x38
 80014b8:	46bd      	mov	sp, r7
 80014ba:	bd80      	pop	{r7, pc}
 80014bc:	20026dd8 	.word	0x20026dd8
 80014c0:	40016800 	.word	0x40016800

080014c4 <MX_SPI3_Init>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 80014c4:	b580      	push	{r7, lr}
 80014c6:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 80014c8:	4b18      	ldr	r3, [pc, #96]	; (800152c <MX_SPI3_Init+0x68>)
 80014ca:	4a19      	ldr	r2, [pc, #100]	; (8001530 <MX_SPI3_Init+0x6c>)
 80014cc:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 80014ce:	4b17      	ldr	r3, [pc, #92]	; (800152c <MX_SPI3_Init+0x68>)
 80014d0:	f44f 7282 	mov.w	r2, #260	; 0x104
 80014d4:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_1LINE;
 80014d6:	4b15      	ldr	r3, [pc, #84]	; (800152c <MX_SPI3_Init+0x68>)
 80014d8:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80014dc:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 80014de:	4b13      	ldr	r3, [pc, #76]	; (800152c <MX_SPI3_Init+0x68>)
 80014e0:	2200      	movs	r2, #0
 80014e2:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 80014e4:	4b11      	ldr	r3, [pc, #68]	; (800152c <MX_SPI3_Init+0x68>)
 80014e6:	2200      	movs	r2, #0
 80014e8:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 80014ea:	4b10      	ldr	r3, [pc, #64]	; (800152c <MX_SPI3_Init+0x68>)
 80014ec:	2200      	movs	r2, #0
 80014ee:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 80014f0:	4b0e      	ldr	r3, [pc, #56]	; (800152c <MX_SPI3_Init+0x68>)
 80014f2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80014f6:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80014f8:	4b0c      	ldr	r3, [pc, #48]	; (800152c <MX_SPI3_Init+0x68>)
 80014fa:	2200      	movs	r2, #0
 80014fc:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80014fe:	4b0b      	ldr	r3, [pc, #44]	; (800152c <MX_SPI3_Init+0x68>)
 8001500:	2200      	movs	r2, #0
 8001502:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 8001504:	4b09      	ldr	r3, [pc, #36]	; (800152c <MX_SPI3_Init+0x68>)
 8001506:	2200      	movs	r2, #0
 8001508:	625a      	str	r2, [r3, #36]	; 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800150a:	4b08      	ldr	r3, [pc, #32]	; (800152c <MX_SPI3_Init+0x68>)
 800150c:	2200      	movs	r2, #0
 800150e:	629a      	str	r2, [r3, #40]	; 0x28
  hspi3.Init.CRCPolynomial = 10;
 8001510:	4b06      	ldr	r3, [pc, #24]	; (800152c <MX_SPI3_Init+0x68>)
 8001512:	220a      	movs	r2, #10
 8001514:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 8001516:	4805      	ldr	r0, [pc, #20]	; (800152c <MX_SPI3_Init+0x68>)
 8001518:	f004 feea 	bl	80062f0 <HAL_SPI_Init>
 800151c:	4603      	mov	r3, r0
 800151e:	2b00      	cmp	r3, #0
 8001520:	d001      	beq.n	8001526 <MX_SPI3_Init+0x62>
  {
    Error_Handler();
 8001522:	f000 fb25 	bl	8001b70 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 8001526:	bf00      	nop
 8001528:	bd80      	pop	{r7, pc}
 800152a:	bf00      	nop
 800152c:	20026d80 	.word	0x20026d80
 8001530:	40003c00 	.word	0x40003c00

08001534 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001534:	b580      	push	{r7, lr}
 8001536:	b086      	sub	sp, #24
 8001538:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800153a:	f107 0308 	add.w	r3, r7, #8
 800153e:	2200      	movs	r2, #0
 8001540:	601a      	str	r2, [r3, #0]
 8001542:	605a      	str	r2, [r3, #4]
 8001544:	609a      	str	r2, [r3, #8]
 8001546:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001548:	463b      	mov	r3, r7
 800154a:	2200      	movs	r2, #0
 800154c:	601a      	str	r2, [r3, #0]
 800154e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001550:	4b1e      	ldr	r3, [pc, #120]	; (80015cc <MX_TIM1_Init+0x98>)
 8001552:	4a1f      	ldr	r2, [pc, #124]	; (80015d0 <MX_TIM1_Init+0x9c>)
 8001554:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 8001556:	4b1d      	ldr	r3, [pc, #116]	; (80015cc <MX_TIM1_Init+0x98>)
 8001558:	2200      	movs	r2, #0
 800155a:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800155c:	4b1b      	ldr	r3, [pc, #108]	; (80015cc <MX_TIM1_Init+0x98>)
 800155e:	2200      	movs	r2, #0
 8001560:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 0;
 8001562:	4b1a      	ldr	r3, [pc, #104]	; (80015cc <MX_TIM1_Init+0x98>)
 8001564:	2200      	movs	r2, #0
 8001566:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001568:	4b18      	ldr	r3, [pc, #96]	; (80015cc <MX_TIM1_Init+0x98>)
 800156a:	2200      	movs	r2, #0
 800156c:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 800156e:	4b17      	ldr	r3, [pc, #92]	; (80015cc <MX_TIM1_Init+0x98>)
 8001570:	2200      	movs	r2, #0
 8001572:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001574:	4b15      	ldr	r3, [pc, #84]	; (80015cc <MX_TIM1_Init+0x98>)
 8001576:	2200      	movs	r2, #0
 8001578:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800157a:	4814      	ldr	r0, [pc, #80]	; (80015cc <MX_TIM1_Init+0x98>)
 800157c:	f005 f924 	bl	80067c8 <HAL_TIM_Base_Init>
 8001580:	4603      	mov	r3, r0
 8001582:	2b00      	cmp	r3, #0
 8001584:	d001      	beq.n	800158a <MX_TIM1_Init+0x56>
  {
    Error_Handler();
 8001586:	f000 faf3 	bl	8001b70 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800158a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800158e:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8001590:	f107 0308 	add.w	r3, r7, #8
 8001594:	4619      	mov	r1, r3
 8001596:	480d      	ldr	r0, [pc, #52]	; (80015cc <MX_TIM1_Init+0x98>)
 8001598:	f005 fa94 	bl	8006ac4 <HAL_TIM_ConfigClockSource>
 800159c:	4603      	mov	r3, r0
 800159e:	2b00      	cmp	r3, #0
 80015a0:	d001      	beq.n	80015a6 <MX_TIM1_Init+0x72>
  {
    Error_Handler();
 80015a2:	f000 fae5 	bl	8001b70 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80015a6:	2300      	movs	r3, #0
 80015a8:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80015aa:	2300      	movs	r3, #0
 80015ac:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80015ae:	463b      	mov	r3, r7
 80015b0:	4619      	mov	r1, r3
 80015b2:	4806      	ldr	r0, [pc, #24]	; (80015cc <MX_TIM1_Init+0x98>)
 80015b4:	f005 fe4e 	bl	8007254 <HAL_TIMEx_MasterConfigSynchronization>
 80015b8:	4603      	mov	r3, r0
 80015ba:	2b00      	cmp	r3, #0
 80015bc:	d001      	beq.n	80015c2 <MX_TIM1_Init+0x8e>
  {
    Error_Handler();
 80015be:	f000 fad7 	bl	8001b70 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 80015c2:	bf00      	nop
 80015c4:	3718      	adds	r7, #24
 80015c6:	46bd      	mov	sp, r7
 80015c8:	bd80      	pop	{r7, pc}
 80015ca:	bf00      	nop
 80015cc:	20026f04 	.word	0x20026f04
 80015d0:	40010000 	.word	0x40010000

080015d4 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80015d4:	b580      	push	{r7, lr}
 80015d6:	b08a      	sub	sp, #40	; 0x28
 80015d8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80015da:	f107 0320 	add.w	r3, r7, #32
 80015de:	2200      	movs	r2, #0
 80015e0:	601a      	str	r2, [r3, #0]
 80015e2:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80015e4:	1d3b      	adds	r3, r7, #4
 80015e6:	2200      	movs	r2, #0
 80015e8:	601a      	str	r2, [r3, #0]
 80015ea:	605a      	str	r2, [r3, #4]
 80015ec:	609a      	str	r2, [r3, #8]
 80015ee:	60da      	str	r2, [r3, #12]
 80015f0:	611a      	str	r2, [r3, #16]
 80015f2:	615a      	str	r2, [r3, #20]
 80015f4:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80015f6:	4b22      	ldr	r3, [pc, #136]	; (8001680 <MX_TIM2_Init+0xac>)
 80015f8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80015fc:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 119;
 80015fe:	4b20      	ldr	r3, [pc, #128]	; (8001680 <MX_TIM2_Init+0xac>)
 8001600:	2277      	movs	r2, #119	; 0x77
 8001602:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001604:	4b1e      	ldr	r3, [pc, #120]	; (8001680 <MX_TIM2_Init+0xac>)
 8001606:	2200      	movs	r2, #0
 8001608:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 100;
 800160a:	4b1d      	ldr	r3, [pc, #116]	; (8001680 <MX_TIM2_Init+0xac>)
 800160c:	2264      	movs	r2, #100	; 0x64
 800160e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001610:	4b1b      	ldr	r3, [pc, #108]	; (8001680 <MX_TIM2_Init+0xac>)
 8001612:	2200      	movs	r2, #0
 8001614:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001616:	4b1a      	ldr	r3, [pc, #104]	; (8001680 <MX_TIM2_Init+0xac>)
 8001618:	2200      	movs	r2, #0
 800161a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800161c:	4818      	ldr	r0, [pc, #96]	; (8001680 <MX_TIM2_Init+0xac>)
 800161e:	f005 f922 	bl	8006866 <HAL_TIM_PWM_Init>
 8001622:	4603      	mov	r3, r0
 8001624:	2b00      	cmp	r3, #0
 8001626:	d001      	beq.n	800162c <MX_TIM2_Init+0x58>
  {
    Error_Handler();
 8001628:	f000 faa2 	bl	8001b70 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800162c:	2300      	movs	r3, #0
 800162e:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001630:	2300      	movs	r3, #0
 8001632:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001634:	f107 0320 	add.w	r3, r7, #32
 8001638:	4619      	mov	r1, r3
 800163a:	4811      	ldr	r0, [pc, #68]	; (8001680 <MX_TIM2_Init+0xac>)
 800163c:	f005 fe0a 	bl	8007254 <HAL_TIMEx_MasterConfigSynchronization>
 8001640:	4603      	mov	r3, r0
 8001642:	2b00      	cmp	r3, #0
 8001644:	d001      	beq.n	800164a <MX_TIM2_Init+0x76>
  {
    Error_Handler();
 8001646:	f000 fa93 	bl	8001b70 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800164a:	2360      	movs	r3, #96	; 0x60
 800164c:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 800164e:	2300      	movs	r3, #0
 8001650:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001652:	2300      	movs	r3, #0
 8001654:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001656:	2300      	movs	r3, #0
 8001658:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800165a:	1d3b      	adds	r3, r7, #4
 800165c:	2200      	movs	r2, #0
 800165e:	4619      	mov	r1, r3
 8001660:	4807      	ldr	r0, [pc, #28]	; (8001680 <MX_TIM2_Init+0xac>)
 8001662:	f005 f969 	bl	8006938 <HAL_TIM_PWM_ConfigChannel>
 8001666:	4603      	mov	r3, r0
 8001668:	2b00      	cmp	r3, #0
 800166a:	d001      	beq.n	8001670 <MX_TIM2_Init+0x9c>
  {
    Error_Handler();
 800166c:	f000 fa80 	bl	8001b70 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001670:	4803      	ldr	r0, [pc, #12]	; (8001680 <MX_TIM2_Init+0xac>)
 8001672:	f000 fd57 	bl	8002124 <HAL_TIM_MspPostInit>

}
 8001676:	bf00      	nop
 8001678:	3728      	adds	r7, #40	; 0x28
 800167a:	46bd      	mov	sp, r7
 800167c:	bd80      	pop	{r7, pc}
 800167e:	bf00      	nop
 8001680:	20026fc4 	.word	0x20026fc4

08001684 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001684:	b580      	push	{r7, lr}
 8001686:	b08a      	sub	sp, #40	; 0x28
 8001688:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800168a:	f107 0320 	add.w	r3, r7, #32
 800168e:	2200      	movs	r2, #0
 8001690:	601a      	str	r2, [r3, #0]
 8001692:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001694:	1d3b      	adds	r3, r7, #4
 8001696:	2200      	movs	r2, #0
 8001698:	601a      	str	r2, [r3, #0]
 800169a:	605a      	str	r2, [r3, #4]
 800169c:	609a      	str	r2, [r3, #8]
 800169e:	60da      	str	r2, [r3, #12]
 80016a0:	611a      	str	r2, [r3, #16]
 80016a2:	615a      	str	r2, [r3, #20]
 80016a4:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80016a6:	4b21      	ldr	r3, [pc, #132]	; (800172c <MX_TIM3_Init+0xa8>)
 80016a8:	4a21      	ldr	r2, [pc, #132]	; (8001730 <MX_TIM3_Init+0xac>)
 80016aa:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 119;
 80016ac:	4b1f      	ldr	r3, [pc, #124]	; (800172c <MX_TIM3_Init+0xa8>)
 80016ae:	2277      	movs	r2, #119	; 0x77
 80016b0:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80016b2:	4b1e      	ldr	r3, [pc, #120]	; (800172c <MX_TIM3_Init+0xa8>)
 80016b4:	2200      	movs	r2, #0
 80016b6:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 100;
 80016b8:	4b1c      	ldr	r3, [pc, #112]	; (800172c <MX_TIM3_Init+0xa8>)
 80016ba:	2264      	movs	r2, #100	; 0x64
 80016bc:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80016be:	4b1b      	ldr	r3, [pc, #108]	; (800172c <MX_TIM3_Init+0xa8>)
 80016c0:	2200      	movs	r2, #0
 80016c2:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80016c4:	4b19      	ldr	r3, [pc, #100]	; (800172c <MX_TIM3_Init+0xa8>)
 80016c6:	2200      	movs	r2, #0
 80016c8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80016ca:	4818      	ldr	r0, [pc, #96]	; (800172c <MX_TIM3_Init+0xa8>)
 80016cc:	f005 f8cb 	bl	8006866 <HAL_TIM_PWM_Init>
 80016d0:	4603      	mov	r3, r0
 80016d2:	2b00      	cmp	r3, #0
 80016d4:	d001      	beq.n	80016da <MX_TIM3_Init+0x56>
  {
    Error_Handler();
 80016d6:	f000 fa4b 	bl	8001b70 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80016da:	2300      	movs	r3, #0
 80016dc:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80016de:	2300      	movs	r3, #0
 80016e0:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80016e2:	f107 0320 	add.w	r3, r7, #32
 80016e6:	4619      	mov	r1, r3
 80016e8:	4810      	ldr	r0, [pc, #64]	; (800172c <MX_TIM3_Init+0xa8>)
 80016ea:	f005 fdb3 	bl	8007254 <HAL_TIMEx_MasterConfigSynchronization>
 80016ee:	4603      	mov	r3, r0
 80016f0:	2b00      	cmp	r3, #0
 80016f2:	d001      	beq.n	80016f8 <MX_TIM3_Init+0x74>
  {
    Error_Handler();
 80016f4:	f000 fa3c 	bl	8001b70 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80016f8:	2360      	movs	r3, #96	; 0x60
 80016fa:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80016fc:	2300      	movs	r3, #0
 80016fe:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001700:	2300      	movs	r3, #0
 8001702:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001704:	2300      	movs	r3, #0
 8001706:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8001708:	1d3b      	adds	r3, r7, #4
 800170a:	2208      	movs	r2, #8
 800170c:	4619      	mov	r1, r3
 800170e:	4807      	ldr	r0, [pc, #28]	; (800172c <MX_TIM3_Init+0xa8>)
 8001710:	f005 f912 	bl	8006938 <HAL_TIM_PWM_ConfigChannel>
 8001714:	4603      	mov	r3, r0
 8001716:	2b00      	cmp	r3, #0
 8001718:	d001      	beq.n	800171e <MX_TIM3_Init+0x9a>
  {
    Error_Handler();
 800171a:	f000 fa29 	bl	8001b70 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 800171e:	4803      	ldr	r0, [pc, #12]	; (800172c <MX_TIM3_Init+0xa8>)
 8001720:	f000 fd00 	bl	8002124 <HAL_TIM_MspPostInit>

}
 8001724:	bf00      	nop
 8001726:	3728      	adds	r7, #40	; 0x28
 8001728:	46bd      	mov	sp, r7
 800172a:	bd80      	pop	{r7, pc}
 800172c:	20026d40 	.word	0x20026d40
 8001730:	40000400 	.word	0x40000400

08001734 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8001734:	b580      	push	{r7, lr}
 8001736:	b08a      	sub	sp, #40	; 0x28
 8001738:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800173a:	f107 0320 	add.w	r3, r7, #32
 800173e:	2200      	movs	r2, #0
 8001740:	601a      	str	r2, [r3, #0]
 8001742:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001744:	1d3b      	adds	r3, r7, #4
 8001746:	2200      	movs	r2, #0
 8001748:	601a      	str	r2, [r3, #0]
 800174a:	605a      	str	r2, [r3, #4]
 800174c:	609a      	str	r2, [r3, #8]
 800174e:	60da      	str	r2, [r3, #12]
 8001750:	611a      	str	r2, [r3, #16]
 8001752:	615a      	str	r2, [r3, #20]
 8001754:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8001756:	4b21      	ldr	r3, [pc, #132]	; (80017dc <MX_TIM4_Init+0xa8>)
 8001758:	4a21      	ldr	r2, [pc, #132]	; (80017e0 <MX_TIM4_Init+0xac>)
 800175a:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 119;
 800175c:	4b1f      	ldr	r3, [pc, #124]	; (80017dc <MX_TIM4_Init+0xa8>)
 800175e:	2277      	movs	r2, #119	; 0x77
 8001760:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001762:	4b1e      	ldr	r3, [pc, #120]	; (80017dc <MX_TIM4_Init+0xa8>)
 8001764:	2200      	movs	r2, #0
 8001766:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 100;
 8001768:	4b1c      	ldr	r3, [pc, #112]	; (80017dc <MX_TIM4_Init+0xa8>)
 800176a:	2264      	movs	r2, #100	; 0x64
 800176c:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800176e:	4b1b      	ldr	r3, [pc, #108]	; (80017dc <MX_TIM4_Init+0xa8>)
 8001770:	2200      	movs	r2, #0
 8001772:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001774:	4b19      	ldr	r3, [pc, #100]	; (80017dc <MX_TIM4_Init+0xa8>)
 8001776:	2200      	movs	r2, #0
 8001778:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 800177a:	4818      	ldr	r0, [pc, #96]	; (80017dc <MX_TIM4_Init+0xa8>)
 800177c:	f005 f873 	bl	8006866 <HAL_TIM_PWM_Init>
 8001780:	4603      	mov	r3, r0
 8001782:	2b00      	cmp	r3, #0
 8001784:	d001      	beq.n	800178a <MX_TIM4_Init+0x56>
  {
    Error_Handler();
 8001786:	f000 f9f3 	bl	8001b70 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800178a:	2300      	movs	r3, #0
 800178c:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800178e:	2300      	movs	r3, #0
 8001790:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001792:	f107 0320 	add.w	r3, r7, #32
 8001796:	4619      	mov	r1, r3
 8001798:	4810      	ldr	r0, [pc, #64]	; (80017dc <MX_TIM4_Init+0xa8>)
 800179a:	f005 fd5b 	bl	8007254 <HAL_TIMEx_MasterConfigSynchronization>
 800179e:	4603      	mov	r3, r0
 80017a0:	2b00      	cmp	r3, #0
 80017a2:	d001      	beq.n	80017a8 <MX_TIM4_Init+0x74>
  {
    Error_Handler();
 80017a4:	f000 f9e4 	bl	8001b70 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80017a8:	2360      	movs	r3, #96	; 0x60
 80017aa:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80017ac:	2300      	movs	r3, #0
 80017ae:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80017b0:	2300      	movs	r3, #0
 80017b2:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80017b4:	2300      	movs	r3, #0
 80017b6:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 80017b8:	1d3b      	adds	r3, r7, #4
 80017ba:	220c      	movs	r2, #12
 80017bc:	4619      	mov	r1, r3
 80017be:	4807      	ldr	r0, [pc, #28]	; (80017dc <MX_TIM4_Init+0xa8>)
 80017c0:	f005 f8ba 	bl	8006938 <HAL_TIM_PWM_ConfigChannel>
 80017c4:	4603      	mov	r3, r0
 80017c6:	2b00      	cmp	r3, #0
 80017c8:	d001      	beq.n	80017ce <MX_TIM4_Init+0x9a>
  {
    Error_Handler();
 80017ca:	f000 f9d1 	bl	8001b70 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 80017ce:	4803      	ldr	r0, [pc, #12]	; (80017dc <MX_TIM4_Init+0xa8>)
 80017d0:	f000 fca8 	bl	8002124 <HAL_TIM_MspPostInit>

}
 80017d4:	bf00      	nop
 80017d6:	3728      	adds	r7, #40	; 0x28
 80017d8:	46bd      	mov	sp, r7
 80017da:	bd80      	pop	{r7, pc}
 80017dc:	20026ca4 	.word	0x20026ca4
 80017e0:	40000800 	.word	0x40000800

080017e4 <MX_UART4_Init>:
  * @brief UART4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART4_Init(void)
{
 80017e4:	b580      	push	{r7, lr}
 80017e6:	af00      	add	r7, sp, #0
  /* USER CODE END UART4_Init 0 */

  /* USER CODE BEGIN UART4_Init 1 */

  /* USER CODE END UART4_Init 1 */
  huart4.Instance = UART4;
 80017e8:	4b11      	ldr	r3, [pc, #68]	; (8001830 <MX_UART4_Init+0x4c>)
 80017ea:	4a12      	ldr	r2, [pc, #72]	; (8001834 <MX_UART4_Init+0x50>)
 80017ec:	601a      	str	r2, [r3, #0]
  huart4.Init.BaudRate = 115200;
 80017ee:	4b10      	ldr	r3, [pc, #64]	; (8001830 <MX_UART4_Init+0x4c>)
 80017f0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80017f4:	605a      	str	r2, [r3, #4]
  huart4.Init.WordLength = UART_WORDLENGTH_8B;
 80017f6:	4b0e      	ldr	r3, [pc, #56]	; (8001830 <MX_UART4_Init+0x4c>)
 80017f8:	2200      	movs	r2, #0
 80017fa:	609a      	str	r2, [r3, #8]
  huart4.Init.StopBits = UART_STOPBITS_1;
 80017fc:	4b0c      	ldr	r3, [pc, #48]	; (8001830 <MX_UART4_Init+0x4c>)
 80017fe:	2200      	movs	r2, #0
 8001800:	60da      	str	r2, [r3, #12]
  huart4.Init.Parity = UART_PARITY_NONE;
 8001802:	4b0b      	ldr	r3, [pc, #44]	; (8001830 <MX_UART4_Init+0x4c>)
 8001804:	2200      	movs	r2, #0
 8001806:	611a      	str	r2, [r3, #16]
  huart4.Init.Mode = UART_MODE_TX_RX;
 8001808:	4b09      	ldr	r3, [pc, #36]	; (8001830 <MX_UART4_Init+0x4c>)
 800180a:	220c      	movs	r2, #12
 800180c:	615a      	str	r2, [r3, #20]
  huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800180e:	4b08      	ldr	r3, [pc, #32]	; (8001830 <MX_UART4_Init+0x4c>)
 8001810:	2200      	movs	r2, #0
 8001812:	619a      	str	r2, [r3, #24]
  huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 8001814:	4b06      	ldr	r3, [pc, #24]	; (8001830 <MX_UART4_Init+0x4c>)
 8001816:	2200      	movs	r2, #0
 8001818:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart4) != HAL_OK)
 800181a:	4805      	ldr	r0, [pc, #20]	; (8001830 <MX_UART4_Init+0x4c>)
 800181c:	f005 fd96 	bl	800734c <HAL_UART_Init>
 8001820:	4603      	mov	r3, r0
 8001822:	2b00      	cmp	r3, #0
 8001824:	d001      	beq.n	800182a <MX_UART4_Init+0x46>
  {
    Error_Handler();
 8001826:	f000 f9a3 	bl	8001b70 <Error_Handler>
  }
  /* USER CODE BEGIN UART4_Init 2 */

  /* USER CODE END UART4_Init 2 */

}
 800182a:	bf00      	nop
 800182c:	bd80      	pop	{r7, pc}
 800182e:	bf00      	nop
 8001830:	20026f44 	.word	0x20026f44
 8001834:	40004c00 	.word	0x40004c00

08001838 <MX_UART7_Init>:
  * @brief UART7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART7_Init(void)
{
 8001838:	b580      	push	{r7, lr}
 800183a:	af00      	add	r7, sp, #0
  /* USER CODE END UART7_Init 0 */

  /* USER CODE BEGIN UART7_Init 1 */

  /* USER CODE END UART7_Init 1 */
  huart7.Instance = UART7;
 800183c:	4b11      	ldr	r3, [pc, #68]	; (8001884 <MX_UART7_Init+0x4c>)
 800183e:	4a12      	ldr	r2, [pc, #72]	; (8001888 <MX_UART7_Init+0x50>)
 8001840:	601a      	str	r2, [r3, #0]
  huart7.Init.BaudRate = 9600;
 8001842:	4b10      	ldr	r3, [pc, #64]	; (8001884 <MX_UART7_Init+0x4c>)
 8001844:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8001848:	605a      	str	r2, [r3, #4]
  huart7.Init.WordLength = UART_WORDLENGTH_8B;
 800184a:	4b0e      	ldr	r3, [pc, #56]	; (8001884 <MX_UART7_Init+0x4c>)
 800184c:	2200      	movs	r2, #0
 800184e:	609a      	str	r2, [r3, #8]
  huart7.Init.StopBits = UART_STOPBITS_1;
 8001850:	4b0c      	ldr	r3, [pc, #48]	; (8001884 <MX_UART7_Init+0x4c>)
 8001852:	2200      	movs	r2, #0
 8001854:	60da      	str	r2, [r3, #12]
  huart7.Init.Parity = UART_PARITY_NONE;
 8001856:	4b0b      	ldr	r3, [pc, #44]	; (8001884 <MX_UART7_Init+0x4c>)
 8001858:	2200      	movs	r2, #0
 800185a:	611a      	str	r2, [r3, #16]
  huart7.Init.Mode = UART_MODE_TX_RX;
 800185c:	4b09      	ldr	r3, [pc, #36]	; (8001884 <MX_UART7_Init+0x4c>)
 800185e:	220c      	movs	r2, #12
 8001860:	615a      	str	r2, [r3, #20]
  huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001862:	4b08      	ldr	r3, [pc, #32]	; (8001884 <MX_UART7_Init+0x4c>)
 8001864:	2200      	movs	r2, #0
 8001866:	619a      	str	r2, [r3, #24]
  huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 8001868:	4b06      	ldr	r3, [pc, #24]	; (8001884 <MX_UART7_Init+0x4c>)
 800186a:	2200      	movs	r2, #0
 800186c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart7) != HAL_OK)
 800186e:	4805      	ldr	r0, [pc, #20]	; (8001884 <MX_UART7_Init+0x4c>)
 8001870:	f005 fd6c 	bl	800734c <HAL_UART_Init>
 8001874:	4603      	mov	r3, r0
 8001876:	2b00      	cmp	r3, #0
 8001878:	d001      	beq.n	800187e <MX_UART7_Init+0x46>
  {
    Error_Handler();
 800187a:	f000 f979 	bl	8001b70 <Error_Handler>
  }
  /* USER CODE BEGIN UART7_Init 2 */

  /* USER CODE END UART7_Init 2 */

}
 800187e:	bf00      	nop
 8001880:	bd80      	pop	{r7, pc}
 8001882:	bf00      	nop
 8001884:	20026c64 	.word	0x20026c64
 8001888:	40007800 	.word	0x40007800

0800188c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800188c:	b580      	push	{r7, lr}
 800188e:	b08c      	sub	sp, #48	; 0x30
 8001890:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001892:	f107 031c 	add.w	r3, r7, #28
 8001896:	2200      	movs	r2, #0
 8001898:	601a      	str	r2, [r3, #0]
 800189a:	605a      	str	r2, [r3, #4]
 800189c:	609a      	str	r2, [r3, #8]
 800189e:	60da      	str	r2, [r3, #12]
 80018a0:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80018a2:	2300      	movs	r3, #0
 80018a4:	61bb      	str	r3, [r7, #24]
 80018a6:	4baa      	ldr	r3, [pc, #680]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 80018a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018aa:	4aa9      	ldr	r2, [pc, #676]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 80018ac:	f043 0310 	orr.w	r3, r3, #16
 80018b0:	6313      	str	r3, [r2, #48]	; 0x30
 80018b2:	4ba7      	ldr	r3, [pc, #668]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 80018b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018b6:	f003 0310 	and.w	r3, r3, #16
 80018ba:	61bb      	str	r3, [r7, #24]
 80018bc:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80018be:	2300      	movs	r3, #0
 80018c0:	617b      	str	r3, [r7, #20]
 80018c2:	4ba3      	ldr	r3, [pc, #652]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 80018c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018c6:	4aa2      	ldr	r2, [pc, #648]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 80018c8:	f043 0304 	orr.w	r3, r3, #4
 80018cc:	6313      	str	r3, [r2, #48]	; 0x30
 80018ce:	4ba0      	ldr	r3, [pc, #640]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 80018d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018d2:	f003 0304 	and.w	r3, r3, #4
 80018d6:	617b      	str	r3, [r7, #20]
 80018d8:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80018da:	2300      	movs	r3, #0
 80018dc:	613b      	str	r3, [r7, #16]
 80018de:	4b9c      	ldr	r3, [pc, #624]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 80018e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018e2:	4a9b      	ldr	r2, [pc, #620]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 80018e4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80018e8:	6313      	str	r3, [r2, #48]	; 0x30
 80018ea:	4b99      	ldr	r3, [pc, #612]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 80018ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018ee:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80018f2:	613b      	str	r3, [r7, #16]
 80018f4:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80018f6:	2300      	movs	r3, #0
 80018f8:	60fb      	str	r3, [r7, #12]
 80018fa:	4b95      	ldr	r3, [pc, #596]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 80018fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018fe:	4a94      	ldr	r2, [pc, #592]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 8001900:	f043 0301 	orr.w	r3, r3, #1
 8001904:	6313      	str	r3, [r2, #48]	; 0x30
 8001906:	4b92      	ldr	r3, [pc, #584]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 8001908:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800190a:	f003 0301 	and.w	r3, r3, #1
 800190e:	60fb      	str	r3, [r7, #12]
 8001910:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001912:	2300      	movs	r3, #0
 8001914:	60bb      	str	r3, [r7, #8]
 8001916:	4b8e      	ldr	r3, [pc, #568]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 8001918:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800191a:	4a8d      	ldr	r2, [pc, #564]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 800191c:	f043 0302 	orr.w	r3, r3, #2
 8001920:	6313      	str	r3, [r2, #48]	; 0x30
 8001922:	4b8b      	ldr	r3, [pc, #556]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 8001924:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001926:	f003 0302 	and.w	r3, r3, #2
 800192a:	60bb      	str	r3, [r7, #8]
 800192c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800192e:	2300      	movs	r3, #0
 8001930:	607b      	str	r3, [r7, #4]
 8001932:	4b87      	ldr	r3, [pc, #540]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 8001934:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001936:	4a86      	ldr	r2, [pc, #536]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 8001938:	f043 0308 	orr.w	r3, r3, #8
 800193c:	6313      	str	r3, [r2, #48]	; 0x30
 800193e:	4b84      	ldr	r3, [pc, #528]	; (8001b50 <MX_GPIO_Init+0x2c4>)
 8001940:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001942:	f003 0308 	and.w	r3, r3, #8
 8001946:	607b      	str	r3, [r7, #4]
 8001948:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, CMD_LED2_Pin|CMD_LED3_Pin|CMD_LED4_Pin|CMD_LED5_Pin 
 800194a:	2200      	movs	r2, #0
 800194c:	217e      	movs	r1, #126	; 0x7e
 800194e:	4881      	ldr	r0, [pc, #516]	; (8001b54 <MX_GPIO_Init+0x2c8>)
 8001950:	f002 fb0a 	bl	8003f68 <HAL_GPIO_WritePin>
                          |CMD_LED6_Pin|CMD_LED1_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, EN_OTG_Pin|SHDN_CONTROL_Pin|ALIM_CLE_USB_Pin, GPIO_PIN_RESET);
 8001954:	2200      	movs	r2, #0
 8001956:	f648 0110 	movw	r1, #34832	; 0x8810
 800195a:	487f      	ldr	r0, [pc, #508]	; (8001b58 <MX_GPIO_Init+0x2cc>)
 800195c:	f002 fb04 	bl	8003f68 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_RESET);
 8001960:	2200      	movs	r2, #0
 8001962:	2104      	movs	r1, #4
 8001964:	487d      	ldr	r0, [pc, #500]	; (8001b5c <MX_GPIO_Init+0x2d0>)
 8001966:	f002 faff 	bl	8003f68 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, TP_RESET_Pin|EN_DRIVER_Pin|CS_LCD_Pin|CMD_ALIM_LCD_Pin 
 800196a:	2200      	movs	r2, #0
 800196c:	f242 21c3 	movw	r1, #8899	; 0x22c3
 8001970:	487b      	ldr	r0, [pc, #492]	; (8001b60 <MX_GPIO_Init+0x2d4>)
 8001972:	f002 faf9 	bl	8003f68 <HAL_GPIO_WritePin>
                          |CMD_ALIM_BLE_Pin|CS_FLASH_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(CMD_WP_MEM_GPIO_Port, CMD_WP_MEM_Pin, GPIO_PIN_RESET);
 8001976:	2200      	movs	r2, #0
 8001978:	2120      	movs	r1, #32
 800197a:	487a      	ldr	r0, [pc, #488]	; (8001b64 <MX_GPIO_Init+0x2d8>)
 800197c:	f002 faf4 	bl	8003f68 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : CMD_LED2_Pin CMD_LED3_Pin CMD_LED4_Pin CMD_LED5_Pin 
                           CMD_LED6_Pin CMD_LED1_Pin */
  GPIO_InitStruct.Pin = CMD_LED2_Pin|CMD_LED3_Pin|CMD_LED4_Pin|CMD_LED5_Pin 
 8001980:	237e      	movs	r3, #126	; 0x7e
 8001982:	61fb      	str	r3, [r7, #28]
                          |CMD_LED6_Pin|CMD_LED1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001984:	2301      	movs	r3, #1
 8001986:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001988:	2300      	movs	r3, #0
 800198a:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800198c:	2300      	movs	r3, #0
 800198e:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001990:	f107 031c 	add.w	r3, r7, #28
 8001994:	4619      	mov	r1, r3
 8001996:	486f      	ldr	r0, [pc, #444]	; (8001b54 <MX_GPIO_Init+0x2c8>)
 8001998:	f002 f81a 	bl	80039d0 <HAL_GPIO_Init>

  /*Configure GPIO pins : CHRG_OK_Pin CMPOUT_Pin */
  GPIO_InitStruct.Pin = CHRG_OK_Pin|CMPOUT_Pin;
 800199c:	f242 0302 	movw	r3, #8194	; 0x2002
 80019a0:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80019a2:	4b71      	ldr	r3, [pc, #452]	; (8001b68 <MX_GPIO_Init+0x2dc>)
 80019a4:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019a6:	2300      	movs	r3, #0
 80019a8:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019aa:	f107 031c 	add.w	r3, r7, #28
 80019ae:	4619      	mov	r1, r3
 80019b0:	4869      	ldr	r0, [pc, #420]	; (8001b58 <MX_GPIO_Init+0x2cc>)
 80019b2:	f002 f80d 	bl	80039d0 <HAL_GPIO_Init>

  /*Configure GPIO pin : PROCHOT_Pin */
  GPIO_InitStruct.Pin = PROCHOT_Pin;
 80019b6:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80019ba:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80019bc:	2300      	movs	r3, #0
 80019be:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019c0:	2300      	movs	r3, #0
 80019c2:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(PROCHOT_GPIO_Port, &GPIO_InitStruct);
 80019c4:	f107 031c 	add.w	r3, r7, #28
 80019c8:	4619      	mov	r1, r3
 80019ca:	4863      	ldr	r0, [pc, #396]	; (8001b58 <MX_GPIO_Init+0x2cc>)
 80019cc:	f002 f800 	bl	80039d0 <HAL_GPIO_Init>

  /*Configure GPIO pins : EN_OTG_Pin SHDN_CONTROL_Pin ALIM_CLE_USB_Pin */
  GPIO_InitStruct.Pin = EN_OTG_Pin|SHDN_CONTROL_Pin|ALIM_CLE_USB_Pin;
 80019d0:	f648 0310 	movw	r3, #34832	; 0x8810
 80019d4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80019d6:	2301      	movs	r3, #1
 80019d8:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019da:	2300      	movs	r3, #0
 80019dc:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019de:	2300      	movs	r3, #0
 80019e0:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019e2:	f107 031c 	add.w	r3, r7, #28
 80019e6:	4619      	mov	r1, r3
 80019e8:	485b      	ldr	r0, [pc, #364]	; (8001b58 <MX_GPIO_Init+0x2cc>)
 80019ea:	f001 fff1 	bl	80039d0 <HAL_GPIO_Init>

  /*Configure GPIO pin : LCD_RESET_Pin */
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
 80019ee:	2304      	movs	r3, #4
 80019f0:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80019f2:	2301      	movs	r3, #1
 80019f4:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019f6:	2300      	movs	r3, #0
 80019f8:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019fa:	2300      	movs	r3, #0
 80019fc:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
 80019fe:	f107 031c 	add.w	r3, r7, #28
 8001a02:	4619      	mov	r1, r3
 8001a04:	4855      	ldr	r0, [pc, #340]	; (8001b5c <MX_GPIO_Init+0x2d0>)
 8001a06:	f001 ffe3 	bl	80039d0 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001a0a:	2380      	movs	r3, #128	; 0x80
 8001a0c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a0e:	2302      	movs	r3, #2
 8001a10:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a12:	2300      	movs	r3, #0
 8001a14:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a16:	2303      	movs	r3, #3
 8001a18:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8001a1a:	2305      	movs	r3, #5
 8001a1c:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a1e:	f107 031c 	add.w	r3, r7, #28
 8001a22:	4619      	mov	r1, r3
 8001a24:	484d      	ldr	r0, [pc, #308]	; (8001b5c <MX_GPIO_Init+0x2d0>)
 8001a26:	f001 ffd3 	bl	80039d0 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB14 PB15 */
  GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8001a2a:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8001a2e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a30:	2302      	movs	r3, #2
 8001a32:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a34:	2300      	movs	r3, #0
 8001a36:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a38:	2303      	movs	r3, #3
 8001a3a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 8001a3c:	230c      	movs	r3, #12
 8001a3e:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a40:	f107 031c 	add.w	r3, r7, #28
 8001a44:	4619      	mov	r1, r3
 8001a46:	4847      	ldr	r0, [pc, #284]	; (8001b64 <MX_GPIO_Init+0x2d8>)
 8001a48:	f001 ffc2 	bl	80039d0 <HAL_GPIO_Init>

  /*Configure GPIO pins : TP_RESET_Pin EN_DRIVER_Pin CS_LCD_Pin CMD_ALIM_LCD_Pin 
                           CMD_ALIM_BLE_Pin CS_FLASH_Pin */
  GPIO_InitStruct.Pin = TP_RESET_Pin|EN_DRIVER_Pin|CS_LCD_Pin|CMD_ALIM_LCD_Pin 
 8001a4c:	f242 23c3 	movw	r3, #8899	; 0x22c3
 8001a50:	61fb      	str	r3, [r7, #28]
                          |CMD_ALIM_BLE_Pin|CS_FLASH_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a52:	2301      	movs	r3, #1
 8001a54:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a56:	2300      	movs	r3, #0
 8001a58:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a5a:	2300      	movs	r3, #0
 8001a5c:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a5e:	f107 031c 	add.w	r3, r7, #28
 8001a62:	4619      	mov	r1, r3
 8001a64:	483e      	ldr	r0, [pc, #248]	; (8001b60 <MX_GPIO_Init+0x2d4>)
 8001a66:	f001 ffb3 	bl	80039d0 <HAL_GPIO_Init>

  /*Configure GPIO pins : TP_INT_Pin FLT_Pin */
  GPIO_InitStruct.Pin = TP_INT_Pin|FLT_Pin;
 8001a6a:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 8001a6e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001a70:	4b3d      	ldr	r3, [pc, #244]	; (8001b68 <MX_GPIO_Init+0x2dc>)
 8001a72:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a74:	2300      	movs	r3, #0
 8001a76:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a78:	f107 031c 	add.w	r3, r7, #28
 8001a7c:	4619      	mov	r1, r3
 8001a7e:	4838      	ldr	r0, [pc, #224]	; (8001b60 <MX_GPIO_Init+0x2d4>)
 8001a80:	f001 ffa6 	bl	80039d0 <HAL_GPIO_Init>

  /*Configure GPIO pin : CMD_ON_OFF_Pin */
  GPIO_InitStruct.Pin = CMD_ON_OFF_Pin;
 8001a84:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001a88:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8001a8a:	4b38      	ldr	r3, [pc, #224]	; (8001b6c <MX_GPIO_Init+0x2e0>)
 8001a8c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a8e:	2300      	movs	r3, #0
 8001a90:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(CMD_ON_OFF_GPIO_Port, &GPIO_InitStruct);
 8001a92:	f107 031c 	add.w	r3, r7, #28
 8001a96:	4619      	mov	r1, r3
 8001a98:	4831      	ldr	r0, [pc, #196]	; (8001b60 <MX_GPIO_Init+0x2d4>)
 8001a9a:	f001 ff99 	bl	80039d0 <HAL_GPIO_Init>

  /*Configure GPIO pin : PC9 */
  GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001a9e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001aa2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001aa4:	2312      	movs	r3, #18
 8001aa6:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001aa8:	2301      	movs	r3, #1
 8001aaa:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001aac:	2303      	movs	r3, #3
 8001aae:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ab0:	2304      	movs	r3, #4
 8001ab2:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ab4:	f107 031c 	add.w	r3, r7, #28
 8001ab8:	4619      	mov	r1, r3
 8001aba:	4827      	ldr	r0, [pc, #156]	; (8001b58 <MX_GPIO_Init+0x2cc>)
 8001abc:	f001 ff88 	bl	80039d0 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ac0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001ac4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001ac6:	2312      	movs	r3, #18
 8001ac8:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001aca:	2301      	movs	r3, #1
 8001acc:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ace:	2303      	movs	r3, #3
 8001ad0:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ad2:	2304      	movs	r3, #4
 8001ad4:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ad6:	f107 031c 	add.w	r3, r7, #28
 8001ada:	4619      	mov	r1, r3
 8001adc:	481f      	ldr	r0, [pc, #124]	; (8001b5c <MX_GPIO_Init+0x2d0>)
 8001ade:	f001 ff77 	bl	80039d0 <HAL_GPIO_Init>

  /*Configure GPIO pins : POWER_OK3_Pin POWER_OK2_Pin */
  GPIO_InitStruct.Pin = POWER_OK3_Pin|POWER_OK2_Pin;
 8001ae2:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8001ae6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001ae8:	2300      	movs	r3, #0
 8001aea:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001aec:	2300      	movs	r3, #0
 8001aee:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001af0:	f107 031c 	add.w	r3, r7, #28
 8001af4:	4619      	mov	r1, r3
 8001af6:	4819      	ldr	r0, [pc, #100]	; (8001b5c <MX_GPIO_Init+0x2d0>)
 8001af8:	f001 ff6a 	bl	80039d0 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB3 PB4 */
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4;
 8001afc:	2318      	movs	r3, #24
 8001afe:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b00:	2302      	movs	r3, #2
 8001b02:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b04:	2300      	movs	r3, #0
 8001b06:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b08:	2303      	movs	r3, #3
 8001b0a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8001b0c:	2305      	movs	r3, #5
 8001b0e:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b10:	f107 031c 	add.w	r3, r7, #28
 8001b14:	4619      	mov	r1, r3
 8001b16:	4813      	ldr	r0, [pc, #76]	; (8001b64 <MX_GPIO_Init+0x2d8>)
 8001b18:	f001 ff5a 	bl	80039d0 <HAL_GPIO_Init>

  /*Configure GPIO pin : CMD_WP_MEM_Pin */
  GPIO_InitStruct.Pin = CMD_WP_MEM_Pin;
 8001b1c:	2320      	movs	r3, #32
 8001b1e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001b20:	2301      	movs	r3, #1
 8001b22:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b24:	2300      	movs	r3, #0
 8001b26:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b28:	2300      	movs	r3, #0
 8001b2a:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(CMD_WP_MEM_GPIO_Port, &GPIO_InitStruct);
 8001b2c:	f107 031c 	add.w	r3, r7, #28
 8001b30:	4619      	mov	r1, r3
 8001b32:	480c      	ldr	r0, [pc, #48]	; (8001b64 <MX_GPIO_Init+0x2d8>)
 8001b34:	f001 ff4c 	bl	80039d0 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8001b38:	2200      	movs	r2, #0
 8001b3a:	2100      	movs	r1, #0
 8001b3c:	2028      	movs	r0, #40	; 0x28
 8001b3e:	f001 fb7c 	bl	800323a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001b42:	2028      	movs	r0, #40	; 0x28
 8001b44:	f001 fb95 	bl	8003272 <HAL_NVIC_EnableIRQ>

}
 8001b48:	bf00      	nop
 8001b4a:	3730      	adds	r7, #48	; 0x30
 8001b4c:	46bd      	mov	sp, r7
 8001b4e:	bd80      	pop	{r7, pc}
 8001b50:	40023800 	.word	0x40023800
 8001b54:	40021000 	.word	0x40021000
 8001b58:	40020800 	.word	0x40020800
 8001b5c:	40020000 	.word	0x40020000
 8001b60:	40020c00 	.word	0x40020c00
 8001b64:	40020400 	.word	0x40020400
 8001b68:	10110000 	.word	0x10110000
 8001b6c:	10310000 	.word	0x10310000

08001b70 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001b70:	b480      	push	{r7}
 8001b72:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001b74:	bf00      	nop
 8001b76:	46bd      	mov	sp, r7
 8001b78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b7c:	4770      	bx	lr
	...

08001b80 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                            /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b80:	b480      	push	{r7}
 8001b82:	b083      	sub	sp, #12
 8001b84:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b86:	2300      	movs	r3, #0
 8001b88:	607b      	str	r3, [r7, #4]
 8001b8a:	4b10      	ldr	r3, [pc, #64]	; (8001bcc <HAL_MspInit+0x4c>)
 8001b8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001b8e:	4a0f      	ldr	r2, [pc, #60]	; (8001bcc <HAL_MspInit+0x4c>)
 8001b90:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001b94:	6453      	str	r3, [r2, #68]	; 0x44
 8001b96:	4b0d      	ldr	r3, [pc, #52]	; (8001bcc <HAL_MspInit+0x4c>)
 8001b98:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001b9a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001b9e:	607b      	str	r3, [r7, #4]
 8001ba0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001ba2:	2300      	movs	r3, #0
 8001ba4:	603b      	str	r3, [r7, #0]
 8001ba6:	4b09      	ldr	r3, [pc, #36]	; (8001bcc <HAL_MspInit+0x4c>)
 8001ba8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001baa:	4a08      	ldr	r2, [pc, #32]	; (8001bcc <HAL_MspInit+0x4c>)
 8001bac:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001bb0:	6413      	str	r3, [r2, #64]	; 0x40
 8001bb2:	4b06      	ldr	r3, [pc, #24]	; (8001bcc <HAL_MspInit+0x4c>)
 8001bb4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001bb6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001bba:	603b      	str	r3, [r7, #0]
 8001bbc:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001bbe:	bf00      	nop
 8001bc0:	370c      	adds	r7, #12
 8001bc2:	46bd      	mov	sp, r7
 8001bc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bc8:	4770      	bx	lr
 8001bca:	bf00      	nop
 8001bcc:	40023800 	.word	0x40023800

08001bd0 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8001bd0:	b480      	push	{r7}
 8001bd2:	b085      	sub	sp, #20
 8001bd4:	af00      	add	r7, sp, #0
 8001bd6:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001bd8:	687b      	ldr	r3, [r7, #4]
 8001bda:	681b      	ldr	r3, [r3, #0]
 8001bdc:	4a0b      	ldr	r2, [pc, #44]	; (8001c0c <HAL_CRC_MspInit+0x3c>)
 8001bde:	4293      	cmp	r3, r2
 8001be0:	d10d      	bne.n	8001bfe <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001be2:	2300      	movs	r3, #0
 8001be4:	60fb      	str	r3, [r7, #12]
 8001be6:	4b0a      	ldr	r3, [pc, #40]	; (8001c10 <HAL_CRC_MspInit+0x40>)
 8001be8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bea:	4a09      	ldr	r2, [pc, #36]	; (8001c10 <HAL_CRC_MspInit+0x40>)
 8001bec:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001bf0:	6313      	str	r3, [r2, #48]	; 0x30
 8001bf2:	4b07      	ldr	r3, [pc, #28]	; (8001c10 <HAL_CRC_MspInit+0x40>)
 8001bf4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bf6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001bfa:	60fb      	str	r3, [r7, #12]
 8001bfc:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001bfe:	bf00      	nop
 8001c00:	3714      	adds	r7, #20
 8001c02:	46bd      	mov	sp, r7
 8001c04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c08:	4770      	bx	lr
 8001c0a:	bf00      	nop
 8001c0c:	40023000 	.word	0x40023000
 8001c10:	40023800 	.word	0x40023800

08001c14 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001c14:	b580      	push	{r7, lr}
 8001c16:	b08a      	sub	sp, #40	; 0x28
 8001c18:	af00      	add	r7, sp, #0
 8001c1a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c1c:	f107 0314 	add.w	r3, r7, #20
 8001c20:	2200      	movs	r2, #0
 8001c22:	601a      	str	r2, [r3, #0]
 8001c24:	605a      	str	r2, [r3, #4]
 8001c26:	609a      	str	r2, [r3, #8]
 8001c28:	60da      	str	r2, [r3, #12]
 8001c2a:	611a      	str	r2, [r3, #16]
  if(hdac->Instance==DAC)
 8001c2c:	687b      	ldr	r3, [r7, #4]
 8001c2e:	681b      	ldr	r3, [r3, #0]
 8001c30:	4a17      	ldr	r2, [pc, #92]	; (8001c90 <HAL_DAC_MspInit+0x7c>)
 8001c32:	4293      	cmp	r3, r2
 8001c34:	d127      	bne.n	8001c86 <HAL_DAC_MspInit+0x72>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001c36:	2300      	movs	r3, #0
 8001c38:	613b      	str	r3, [r7, #16]
 8001c3a:	4b16      	ldr	r3, [pc, #88]	; (8001c94 <HAL_DAC_MspInit+0x80>)
 8001c3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c3e:	4a15      	ldr	r2, [pc, #84]	; (8001c94 <HAL_DAC_MspInit+0x80>)
 8001c40:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8001c44:	6413      	str	r3, [r2, #64]	; 0x40
 8001c46:	4b13      	ldr	r3, [pc, #76]	; (8001c94 <HAL_DAC_MspInit+0x80>)
 8001c48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c4a:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8001c4e:	613b      	str	r3, [r7, #16]
 8001c50:	693b      	ldr	r3, [r7, #16]
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c52:	2300      	movs	r3, #0
 8001c54:	60fb      	str	r3, [r7, #12]
 8001c56:	4b0f      	ldr	r3, [pc, #60]	; (8001c94 <HAL_DAC_MspInit+0x80>)
 8001c58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c5a:	4a0e      	ldr	r2, [pc, #56]	; (8001c94 <HAL_DAC_MspInit+0x80>)
 8001c5c:	f043 0301 	orr.w	r3, r3, #1
 8001c60:	6313      	str	r3, [r2, #48]	; 0x30
 8001c62:	4b0c      	ldr	r3, [pc, #48]	; (8001c94 <HAL_DAC_MspInit+0x80>)
 8001c64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c66:	f003 0301 	and.w	r3, r3, #1
 8001c6a:	60fb      	str	r3, [r7, #12]
 8001c6c:	68fb      	ldr	r3, [r7, #12]
    /**DAC GPIO Configuration    
    PA5     ------> DAC_OUT2 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 8001c6e:	2320      	movs	r3, #32
 8001c70:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c72:	2303      	movs	r3, #3
 8001c74:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c76:	2300      	movs	r3, #0
 8001c78:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c7a:	f107 0314 	add.w	r3, r7, #20
 8001c7e:	4619      	mov	r1, r3
 8001c80:	4805      	ldr	r0, [pc, #20]	; (8001c98 <HAL_DAC_MspInit+0x84>)
 8001c82:	f001 fea5 	bl	80039d0 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001c86:	bf00      	nop
 8001c88:	3728      	adds	r7, #40	; 0x28
 8001c8a:	46bd      	mov	sp, r7
 8001c8c:	bd80      	pop	{r7, pc}
 8001c8e:	bf00      	nop
 8001c90:	40007400 	.word	0x40007400
 8001c94:	40023800 	.word	0x40023800
 8001c98:	40020000 	.word	0x40020000

08001c9c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001c9c:	b480      	push	{r7}
 8001c9e:	b085      	sub	sp, #20
 8001ca0:	af00      	add	r7, sp, #0
 8001ca2:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	681b      	ldr	r3, [r3, #0]
 8001ca8:	4a0b      	ldr	r2, [pc, #44]	; (8001cd8 <HAL_DMA2D_MspInit+0x3c>)
 8001caa:	4293      	cmp	r3, r2
 8001cac:	d10d      	bne.n	8001cca <HAL_DMA2D_MspInit+0x2e>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001cae:	2300      	movs	r3, #0
 8001cb0:	60fb      	str	r3, [r7, #12]
 8001cb2:	4b0a      	ldr	r3, [pc, #40]	; (8001cdc <HAL_DMA2D_MspInit+0x40>)
 8001cb4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cb6:	4a09      	ldr	r2, [pc, #36]	; (8001cdc <HAL_DMA2D_MspInit+0x40>)
 8001cb8:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cbc:	6313      	str	r3, [r2, #48]	; 0x30
 8001cbe:	4b07      	ldr	r3, [pc, #28]	; (8001cdc <HAL_DMA2D_MspInit+0x40>)
 8001cc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cc2:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001cc6:	60fb      	str	r3, [r7, #12]
 8001cc8:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001cca:	bf00      	nop
 8001ccc:	3714      	adds	r7, #20
 8001cce:	46bd      	mov	sp, r7
 8001cd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cd4:	4770      	bx	lr
 8001cd6:	bf00      	nop
 8001cd8:	4002b000 	.word	0x4002b000
 8001cdc:	40023800 	.word	0x40023800

08001ce0 <HAL_DMA2D_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001ce0:	b480      	push	{r7}
 8001ce2:	b083      	sub	sp, #12
 8001ce4:	af00      	add	r7, sp, #0
 8001ce6:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	681b      	ldr	r3, [r3, #0]
 8001cec:	4a07      	ldr	r2, [pc, #28]	; (8001d0c <HAL_DMA2D_MspDeInit+0x2c>)
 8001cee:	4293      	cmp	r3, r2
 8001cf0:	d105      	bne.n	8001cfe <HAL_DMA2D_MspDeInit+0x1e>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 8001cf2:	4b07      	ldr	r3, [pc, #28]	; (8001d10 <HAL_DMA2D_MspDeInit+0x30>)
 8001cf4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cf6:	4a06      	ldr	r2, [pc, #24]	; (8001d10 <HAL_DMA2D_MspDeInit+0x30>)
 8001cf8:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001cfc:	6313      	str	r3, [r2, #48]	; 0x30
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 8001cfe:	bf00      	nop
 8001d00:	370c      	adds	r7, #12
 8001d02:	46bd      	mov	sp, r7
 8001d04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d08:	4770      	bx	lr
 8001d0a:	bf00      	nop
 8001d0c:	4002b000 	.word	0x4002b000
 8001d10:	40023800 	.word	0x40023800

08001d14 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001d14:	b580      	push	{r7, lr}
 8001d16:	b08a      	sub	sp, #40	; 0x28
 8001d18:	af00      	add	r7, sp, #0
 8001d1a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d1c:	f107 0314 	add.w	r3, r7, #20
 8001d20:	2200      	movs	r2, #0
 8001d22:	601a      	str	r2, [r3, #0]
 8001d24:	605a      	str	r2, [r3, #4]
 8001d26:	609a      	str	r2, [r3, #8]
 8001d28:	60da      	str	r2, [r3, #12]
 8001d2a:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8001d2c:	687b      	ldr	r3, [r7, #4]
 8001d2e:	681b      	ldr	r3, [r3, #0]
 8001d30:	4a19      	ldr	r2, [pc, #100]	; (8001d98 <HAL_I2C_MspInit+0x84>)
 8001d32:	4293      	cmp	r3, r2
 8001d34:	d12b      	bne.n	8001d8e <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */
  
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d36:	2300      	movs	r3, #0
 8001d38:	613b      	str	r3, [r7, #16]
 8001d3a:	4b18      	ldr	r3, [pc, #96]	; (8001d9c <HAL_I2C_MspInit+0x88>)
 8001d3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d3e:	4a17      	ldr	r2, [pc, #92]	; (8001d9c <HAL_I2C_MspInit+0x88>)
 8001d40:	f043 0302 	orr.w	r3, r3, #2
 8001d44:	6313      	str	r3, [r2, #48]	; 0x30
 8001d46:	4b15      	ldr	r3, [pc, #84]	; (8001d9c <HAL_I2C_MspInit+0x88>)
 8001d48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d4a:	f003 0302 	and.w	r3, r3, #2
 8001d4e:	613b      	str	r3, [r7, #16]
 8001d50:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration    
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001d52:	23c0      	movs	r3, #192	; 0xc0
 8001d54:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001d56:	2312      	movs	r3, #18
 8001d58:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001d5a:	2301      	movs	r3, #1
 8001d5c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d5e:	2303      	movs	r3, #3
 8001d60:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001d62:	2304      	movs	r3, #4
 8001d64:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d66:	f107 0314 	add.w	r3, r7, #20
 8001d6a:	4619      	mov	r1, r3
 8001d6c:	480c      	ldr	r0, [pc, #48]	; (8001da0 <HAL_I2C_MspInit+0x8c>)
 8001d6e:	f001 fe2f 	bl	80039d0 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001d72:	2300      	movs	r3, #0
 8001d74:	60fb      	str	r3, [r7, #12]
 8001d76:	4b09      	ldr	r3, [pc, #36]	; (8001d9c <HAL_I2C_MspInit+0x88>)
 8001d78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d7a:	4a08      	ldr	r2, [pc, #32]	; (8001d9c <HAL_I2C_MspInit+0x88>)
 8001d7c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001d80:	6413      	str	r3, [r2, #64]	; 0x40
 8001d82:	4b06      	ldr	r3, [pc, #24]	; (8001d9c <HAL_I2C_MspInit+0x88>)
 8001d84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d86:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001d8a:	60fb      	str	r3, [r7, #12]
 8001d8c:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001d8e:	bf00      	nop
 8001d90:	3728      	adds	r7, #40	; 0x28
 8001d92:	46bd      	mov	sp, r7
 8001d94:	bd80      	pop	{r7, pc}
 8001d96:	bf00      	nop
 8001d98:	40005400 	.word	0x40005400
 8001d9c:	40023800 	.word	0x40023800
 8001da0:	40020400 	.word	0x40020400

08001da4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001da4:	b580      	push	{r7, lr}
 8001da6:	b08e      	sub	sp, #56	; 0x38
 8001da8:	af00      	add	r7, sp, #0
 8001daa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dac:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001db0:	2200      	movs	r2, #0
 8001db2:	601a      	str	r2, [r3, #0]
 8001db4:	605a      	str	r2, [r3, #4]
 8001db6:	609a      	str	r2, [r3, #8]
 8001db8:	60da      	str	r2, [r3, #12]
 8001dba:	611a      	str	r2, [r3, #16]
  if(hltdc->Instance==LTDC)
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	681b      	ldr	r3, [r3, #0]
 8001dc0:	4a67      	ldr	r2, [pc, #412]	; (8001f60 <HAL_LTDC_MspInit+0x1bc>)
 8001dc2:	4293      	cmp	r3, r2
 8001dc4:	f040 80c8 	bne.w	8001f58 <HAL_LTDC_MspInit+0x1b4>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001dc8:	2300      	movs	r3, #0
 8001dca:	623b      	str	r3, [r7, #32]
 8001dcc:	4b65      	ldr	r3, [pc, #404]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001dce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001dd0:	4a64      	ldr	r2, [pc, #400]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001dd2:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001dd6:	6453      	str	r3, [r2, #68]	; 0x44
 8001dd8:	4b62      	ldr	r3, [pc, #392]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001dda:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001ddc:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001de0:	623b      	str	r3, [r7, #32]
 8001de2:	6a3b      	ldr	r3, [r7, #32]
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001de4:	2300      	movs	r3, #0
 8001de6:	61fb      	str	r3, [r7, #28]
 8001de8:	4b5e      	ldr	r3, [pc, #376]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001dea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dec:	4a5d      	ldr	r2, [pc, #372]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001dee:	f043 0301 	orr.w	r3, r3, #1
 8001df2:	6313      	str	r3, [r2, #48]	; 0x30
 8001df4:	4b5b      	ldr	r3, [pc, #364]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001df6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001df8:	f003 0301 	and.w	r3, r3, #1
 8001dfc:	61fb      	str	r3, [r7, #28]
 8001dfe:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001e00:	2300      	movs	r3, #0
 8001e02:	61bb      	str	r3, [r7, #24]
 8001e04:	4b57      	ldr	r3, [pc, #348]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001e06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e08:	4a56      	ldr	r2, [pc, #344]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001e0a:	f043 0302 	orr.w	r3, r3, #2
 8001e0e:	6313      	str	r3, [r2, #48]	; 0x30
 8001e10:	4b54      	ldr	r3, [pc, #336]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001e12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e14:	f003 0302 	and.w	r3, r3, #2
 8001e18:	61bb      	str	r3, [r7, #24]
 8001e1a:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8001e1c:	2300      	movs	r3, #0
 8001e1e:	617b      	str	r3, [r7, #20]
 8001e20:	4b50      	ldr	r3, [pc, #320]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001e22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e24:	4a4f      	ldr	r2, [pc, #316]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001e26:	f043 0310 	orr.w	r3, r3, #16
 8001e2a:	6313      	str	r3, [r2, #48]	; 0x30
 8001e2c:	4b4d      	ldr	r3, [pc, #308]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001e2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e30:	f003 0310 	and.w	r3, r3, #16
 8001e34:	617b      	str	r3, [r7, #20]
 8001e36:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e38:	2300      	movs	r3, #0
 8001e3a:	613b      	str	r3, [r7, #16]
 8001e3c:	4b49      	ldr	r3, [pc, #292]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001e3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e40:	4a48      	ldr	r2, [pc, #288]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001e42:	f043 0308 	orr.w	r3, r3, #8
 8001e46:	6313      	str	r3, [r2, #48]	; 0x30
 8001e48:	4b46      	ldr	r3, [pc, #280]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001e4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e4c:	f003 0308 	and.w	r3, r3, #8
 8001e50:	613b      	str	r3, [r7, #16]
 8001e52:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e54:	2300      	movs	r3, #0
 8001e56:	60fb      	str	r3, [r7, #12]
 8001e58:	4b42      	ldr	r3, [pc, #264]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001e5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e5c:	4a41      	ldr	r2, [pc, #260]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001e5e:	f043 0304 	orr.w	r3, r3, #4
 8001e62:	6313      	str	r3, [r2, #48]	; 0x30
 8001e64:	4b3f      	ldr	r3, [pc, #252]	; (8001f64 <HAL_LTDC_MspInit+0x1c0>)
 8001e66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e68:	f003 0304 	and.w	r3, r3, #4
 8001e6c:	60fb      	str	r3, [r7, #12]
 8001e6e:	68fb      	ldr	r3, [r7, #12]
    PA12     ------> LTDC_R5
    PD3     ------> LTDC_G7
    PB8     ------> LTDC_B6
    PB9     ------> LTDC_B7 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11 
 8001e70:	f641 0358 	movw	r3, #6232	; 0x1858
 8001e74:	627b      	str	r3, [r7, #36]	; 0x24
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e76:	2302      	movs	r3, #2
 8001e78:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e7a:	2300      	movs	r3, #0
 8001e7c:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e7e:	2300      	movs	r3, #0
 8001e80:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e82:	230e      	movs	r3, #14
 8001e84:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e86:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001e8a:	4619      	mov	r1, r3
 8001e8c:	4836      	ldr	r0, [pc, #216]	; (8001f68 <HAL_LTDC_MspInit+0x1c4>)
 8001e8e:	f001 fd9f 	bl	80039d0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e92:	2303      	movs	r3, #3
 8001e94:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e96:	2302      	movs	r3, #2
 8001e98:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e9a:	2300      	movs	r3, #0
 8001e9c:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e9e:	2300      	movs	r3, #0
 8001ea0:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001ea2:	2309      	movs	r3, #9
 8001ea4:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ea6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001eaa:	4619      	mov	r1, r3
 8001eac:	482f      	ldr	r0, [pc, #188]	; (8001f6c <HAL_LTDC_MspInit+0x1c8>)
 8001eae:	f001 fd8f 	bl	80039d0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 8001eb2:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 8001eb6:	627b      	str	r3, [r7, #36]	; 0x24
                          |GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eb8:	2302      	movs	r3, #2
 8001eba:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ebc:	2300      	movs	r3, #0
 8001ebe:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ec0:	2300      	movs	r3, #0
 8001ec2:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ec4:	230e      	movs	r3, #14
 8001ec6:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ec8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001ecc:	4619      	mov	r1, r3
 8001ece:	4828      	ldr	r0, [pc, #160]	; (8001f70 <HAL_LTDC_MspInit+0x1cc>)
 8001ed0:	f001 fd7e 	bl	80039d0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001ed4:	f44f 6370 	mov.w	r3, #3840	; 0xf00
 8001ed8:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eda:	2302      	movs	r3, #2
 8001edc:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ede:	2300      	movs	r3, #0
 8001ee0:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ee2:	2300      	movs	r3, #0
 8001ee4:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ee6:	230e      	movs	r3, #14
 8001ee8:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001eea:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001eee:	4619      	mov	r1, r3
 8001ef0:	481e      	ldr	r0, [pc, #120]	; (8001f6c <HAL_LTDC_MspInit+0x1c8>)
 8001ef2:	f001 fd6d 	bl	80039d0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_3;
 8001ef6:	f44f 6381 	mov.w	r3, #1032	; 0x408
 8001efa:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001efc:	2302      	movs	r3, #2
 8001efe:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f00:	2300      	movs	r3, #0
 8001f02:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f04:	2300      	movs	r3, #0
 8001f06:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f08:	230e      	movs	r3, #14
 8001f0a:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f0c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001f10:	4619      	mov	r1, r3
 8001f12:	4818      	ldr	r0, [pc, #96]	; (8001f74 <HAL_LTDC_MspInit+0x1d0>)
 8001f14:	f001 fd5c 	bl	80039d0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001f18:	23c0      	movs	r3, #192	; 0xc0
 8001f1a:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f1c:	2302      	movs	r3, #2
 8001f1e:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f20:	2300      	movs	r3, #0
 8001f22:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f24:	2300      	movs	r3, #0
 8001f26:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f28:	230e      	movs	r3, #14
 8001f2a:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f2c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001f30:	4619      	mov	r1, r3
 8001f32:	4811      	ldr	r0, [pc, #68]	; (8001f78 <HAL_LTDC_MspInit+0x1d4>)
 8001f34:	f001 fd4c 	bl	80039d0 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 0, 0);
 8001f38:	2200      	movs	r2, #0
 8001f3a:	2100      	movs	r1, #0
 8001f3c:	2058      	movs	r0, #88	; 0x58
 8001f3e:	f001 f97c 	bl	800323a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001f42:	2058      	movs	r0, #88	; 0x58
 8001f44:	f001 f995 	bl	8003272 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(LTDC_ER_IRQn, 0, 0);
 8001f48:	2200      	movs	r2, #0
 8001f4a:	2100      	movs	r1, #0
 8001f4c:	2059      	movs	r0, #89	; 0x59
 8001f4e:	f001 f974 	bl	800323a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_ER_IRQn);
 8001f52:	2059      	movs	r0, #89	; 0x59
 8001f54:	f001 f98d 	bl	8003272 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001f58:	bf00      	nop
 8001f5a:	3738      	adds	r7, #56	; 0x38
 8001f5c:	46bd      	mov	sp, r7
 8001f5e:	bd80      	pop	{r7, pc}
 8001f60:	40016800 	.word	0x40016800
 8001f64:	40023800 	.word	0x40023800
 8001f68:	40020000 	.word	0x40020000
 8001f6c:	40020400 	.word	0x40020400
 8001f70:	40021000 	.word	0x40021000
 8001f74:	40020c00 	.word	0x40020c00
 8001f78:	40020800 	.word	0x40020800

08001f7c <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001f7c:	b580      	push	{r7, lr}
 8001f7e:	b08a      	sub	sp, #40	; 0x28
 8001f80:	af00      	add	r7, sp, #0
 8001f82:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f84:	f107 0314 	add.w	r3, r7, #20
 8001f88:	2200      	movs	r2, #0
 8001f8a:	601a      	str	r2, [r3, #0]
 8001f8c:	605a      	str	r2, [r3, #4]
 8001f8e:	609a      	str	r2, [r3, #8]
 8001f90:	60da      	str	r2, [r3, #12]
 8001f92:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI3)
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	4a19      	ldr	r2, [pc, #100]	; (8002000 <HAL_SPI_MspInit+0x84>)
 8001f9a:	4293      	cmp	r3, r2
 8001f9c:	d12c      	bne.n	8001ff8 <HAL_SPI_MspInit+0x7c>
  {
  /* USER CODE BEGIN SPI3_MspInit 0 */

  /* USER CODE END SPI3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI3_CLK_ENABLE();
 8001f9e:	2300      	movs	r3, #0
 8001fa0:	613b      	str	r3, [r7, #16]
 8001fa2:	4b18      	ldr	r3, [pc, #96]	; (8002004 <HAL_SPI_MspInit+0x88>)
 8001fa4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001fa6:	4a17      	ldr	r2, [pc, #92]	; (8002004 <HAL_SPI_MspInit+0x88>)
 8001fa8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001fac:	6413      	str	r3, [r2, #64]	; 0x40
 8001fae:	4b15      	ldr	r3, [pc, #84]	; (8002004 <HAL_SPI_MspInit+0x88>)
 8001fb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001fb2:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8001fb6:	613b      	str	r3, [r7, #16]
 8001fb8:	693b      	ldr	r3, [r7, #16]
  
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001fba:	2300      	movs	r3, #0
 8001fbc:	60fb      	str	r3, [r7, #12]
 8001fbe:	4b11      	ldr	r3, [pc, #68]	; (8002004 <HAL_SPI_MspInit+0x88>)
 8001fc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fc2:	4a10      	ldr	r2, [pc, #64]	; (8002004 <HAL_SPI_MspInit+0x88>)
 8001fc4:	f043 0304 	orr.w	r3, r3, #4
 8001fc8:	6313      	str	r3, [r2, #48]	; 0x30
 8001fca:	4b0e      	ldr	r3, [pc, #56]	; (8002004 <HAL_SPI_MspInit+0x88>)
 8001fcc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fce:	f003 0304 	and.w	r3, r3, #4
 8001fd2:	60fb      	str	r3, [r7, #12]
 8001fd4:	68fb      	ldr	r3, [r7, #12]
    /**SPI3 GPIO Configuration    
    PC10     ------> SPI3_SCK
    PC12     ------> SPI3_MOSI 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001fd6:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8001fda:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fdc:	2302      	movs	r3, #2
 8001fde:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fe0:	2300      	movs	r3, #0
 8001fe2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fe4:	2303      	movs	r3, #3
 8001fe6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 8001fe8:	2306      	movs	r3, #6
 8001fea:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fec:	f107 0314 	add.w	r3, r7, #20
 8001ff0:	4619      	mov	r1, r3
 8001ff2:	4805      	ldr	r0, [pc, #20]	; (8002008 <HAL_SPI_MspInit+0x8c>)
 8001ff4:	f001 fcec 	bl	80039d0 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI3_MspInit 1 */

  /* USER CODE END SPI3_MspInit 1 */
  }

}
 8001ff8:	bf00      	nop
 8001ffa:	3728      	adds	r7, #40	; 0x28
 8001ffc:	46bd      	mov	sp, r7
 8001ffe:	bd80      	pop	{r7, pc}
 8002000:	40003c00 	.word	0x40003c00
 8002004:	40023800 	.word	0x40023800
 8002008:	40020800 	.word	0x40020800

0800200c <HAL_SPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspDeInit(SPI_HandleTypeDef* hspi)
{
 800200c:	b580      	push	{r7, lr}
 800200e:	b082      	sub	sp, #8
 8002010:	af00      	add	r7, sp, #0
 8002012:	6078      	str	r0, [r7, #4]
  if(hspi->Instance==SPI3)
 8002014:	687b      	ldr	r3, [r7, #4]
 8002016:	681b      	ldr	r3, [r3, #0]
 8002018:	4a08      	ldr	r2, [pc, #32]	; (800203c <HAL_SPI_MspDeInit+0x30>)
 800201a:	4293      	cmp	r3, r2
 800201c:	d10a      	bne.n	8002034 <HAL_SPI_MspDeInit+0x28>
  {
  /* USER CODE BEGIN SPI3_MspDeInit 0 */

  /* USER CODE END SPI3_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_SPI3_CLK_DISABLE();
 800201e:	4b08      	ldr	r3, [pc, #32]	; (8002040 <HAL_SPI_MspDeInit+0x34>)
 8002020:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002022:	4a07      	ldr	r2, [pc, #28]	; (8002040 <HAL_SPI_MspDeInit+0x34>)
 8002024:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8002028:	6413      	str	r3, [r2, #64]	; 0x40
  
    /**SPI3 GPIO Configuration    
    PC10     ------> SPI3_SCK
    PC12     ------> SPI3_MOSI 
    */
    HAL_GPIO_DeInit(GPIOC, GPIO_PIN_10|GPIO_PIN_12);
 800202a:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 800202e:	4805      	ldr	r0, [pc, #20]	; (8002044 <HAL_SPI_MspDeInit+0x38>)
 8002030:	f001 fe78 	bl	8003d24 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN SPI3_MspDeInit 1 */

  /* USER CODE END SPI3_MspDeInit 1 */
  }

}
 8002034:	bf00      	nop
 8002036:	3708      	adds	r7, #8
 8002038:	46bd      	mov	sp, r7
 800203a:	bd80      	pop	{r7, pc}
 800203c:	40003c00 	.word	0x40003c00
 8002040:	40023800 	.word	0x40023800
 8002044:	40020800 	.word	0x40020800

08002048 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002048:	b480      	push	{r7}
 800204a:	b085      	sub	sp, #20
 800204c:	af00      	add	r7, sp, #0
 800204e:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	681b      	ldr	r3, [r3, #0]
 8002054:	4a0b      	ldr	r2, [pc, #44]	; (8002084 <HAL_TIM_Base_MspInit+0x3c>)
 8002056:	4293      	cmp	r3, r2
 8002058:	d10d      	bne.n	8002076 <HAL_TIM_Base_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800205a:	2300      	movs	r3, #0
 800205c:	60fb      	str	r3, [r7, #12]
 800205e:	4b0a      	ldr	r3, [pc, #40]	; (8002088 <HAL_TIM_Base_MspInit+0x40>)
 8002060:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002062:	4a09      	ldr	r2, [pc, #36]	; (8002088 <HAL_TIM_Base_MspInit+0x40>)
 8002064:	f043 0301 	orr.w	r3, r3, #1
 8002068:	6453      	str	r3, [r2, #68]	; 0x44
 800206a:	4b07      	ldr	r3, [pc, #28]	; (8002088 <HAL_TIM_Base_MspInit+0x40>)
 800206c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800206e:	f003 0301 	and.w	r3, r3, #1
 8002072:	60fb      	str	r3, [r7, #12]
 8002074:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 8002076:	bf00      	nop
 8002078:	3714      	adds	r7, #20
 800207a:	46bd      	mov	sp, r7
 800207c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002080:	4770      	bx	lr
 8002082:	bf00      	nop
 8002084:	40010000 	.word	0x40010000
 8002088:	40023800 	.word	0x40023800

0800208c <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 800208c:	b480      	push	{r7}
 800208e:	b087      	sub	sp, #28
 8002090:	af00      	add	r7, sp, #0
 8002092:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM2)
 8002094:	687b      	ldr	r3, [r7, #4]
 8002096:	681b      	ldr	r3, [r3, #0]
 8002098:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800209c:	d10e      	bne.n	80020bc <HAL_TIM_PWM_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 800209e:	2300      	movs	r3, #0
 80020a0:	617b      	str	r3, [r7, #20]
 80020a2:	4b1d      	ldr	r3, [pc, #116]	; (8002118 <HAL_TIM_PWM_MspInit+0x8c>)
 80020a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020a6:	4a1c      	ldr	r2, [pc, #112]	; (8002118 <HAL_TIM_PWM_MspInit+0x8c>)
 80020a8:	f043 0301 	orr.w	r3, r3, #1
 80020ac:	6413      	str	r3, [r2, #64]	; 0x40
 80020ae:	4b1a      	ldr	r3, [pc, #104]	; (8002118 <HAL_TIM_PWM_MspInit+0x8c>)
 80020b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020b2:	f003 0301 	and.w	r3, r3, #1
 80020b6:	617b      	str	r3, [r7, #20]
 80020b8:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 80020ba:	e026      	b.n	800210a <HAL_TIM_PWM_MspInit+0x7e>
  else if(htim_pwm->Instance==TIM3)
 80020bc:	687b      	ldr	r3, [r7, #4]
 80020be:	681b      	ldr	r3, [r3, #0]
 80020c0:	4a16      	ldr	r2, [pc, #88]	; (800211c <HAL_TIM_PWM_MspInit+0x90>)
 80020c2:	4293      	cmp	r3, r2
 80020c4:	d10e      	bne.n	80020e4 <HAL_TIM_PWM_MspInit+0x58>
    __HAL_RCC_TIM3_CLK_ENABLE();
 80020c6:	2300      	movs	r3, #0
 80020c8:	613b      	str	r3, [r7, #16]
 80020ca:	4b13      	ldr	r3, [pc, #76]	; (8002118 <HAL_TIM_PWM_MspInit+0x8c>)
 80020cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020ce:	4a12      	ldr	r2, [pc, #72]	; (8002118 <HAL_TIM_PWM_MspInit+0x8c>)
 80020d0:	f043 0302 	orr.w	r3, r3, #2
 80020d4:	6413      	str	r3, [r2, #64]	; 0x40
 80020d6:	4b10      	ldr	r3, [pc, #64]	; (8002118 <HAL_TIM_PWM_MspInit+0x8c>)
 80020d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020da:	f003 0302 	and.w	r3, r3, #2
 80020de:	613b      	str	r3, [r7, #16]
 80020e0:	693b      	ldr	r3, [r7, #16]
}
 80020e2:	e012      	b.n	800210a <HAL_TIM_PWM_MspInit+0x7e>
  else if(htim_pwm->Instance==TIM4)
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	681b      	ldr	r3, [r3, #0]
 80020e8:	4a0d      	ldr	r2, [pc, #52]	; (8002120 <HAL_TIM_PWM_MspInit+0x94>)
 80020ea:	4293      	cmp	r3, r2
 80020ec:	d10d      	bne.n	800210a <HAL_TIM_PWM_MspInit+0x7e>
    __HAL_RCC_TIM4_CLK_ENABLE();
 80020ee:	2300      	movs	r3, #0
 80020f0:	60fb      	str	r3, [r7, #12]
 80020f2:	4b09      	ldr	r3, [pc, #36]	; (8002118 <HAL_TIM_PWM_MspInit+0x8c>)
 80020f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020f6:	4a08      	ldr	r2, [pc, #32]	; (8002118 <HAL_TIM_PWM_MspInit+0x8c>)
 80020f8:	f043 0304 	orr.w	r3, r3, #4
 80020fc:	6413      	str	r3, [r2, #64]	; 0x40
 80020fe:	4b06      	ldr	r3, [pc, #24]	; (8002118 <HAL_TIM_PWM_MspInit+0x8c>)
 8002100:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002102:	f003 0304 	and.w	r3, r3, #4
 8002106:	60fb      	str	r3, [r7, #12]
 8002108:	68fb      	ldr	r3, [r7, #12]
}
 800210a:	bf00      	nop
 800210c:	371c      	adds	r7, #28
 800210e:	46bd      	mov	sp, r7
 8002110:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002114:	4770      	bx	lr
 8002116:	bf00      	nop
 8002118:	40023800 	.word	0x40023800
 800211c:	40000400 	.word	0x40000400
 8002120:	40000800 	.word	0x40000800

08002124 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002124:	b580      	push	{r7, lr}
 8002126:	b08a      	sub	sp, #40	; 0x28
 8002128:	af00      	add	r7, sp, #0
 800212a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800212c:	f107 0314 	add.w	r3, r7, #20
 8002130:	2200      	movs	r2, #0
 8002132:	601a      	str	r2, [r3, #0]
 8002134:	605a      	str	r2, [r3, #4]
 8002136:	609a      	str	r2, [r3, #8]
 8002138:	60da      	str	r2, [r3, #12]
 800213a:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	681b      	ldr	r3, [r3, #0]
 8002140:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002144:	d11f      	bne.n	8002186 <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002146:	2300      	movs	r3, #0
 8002148:	613b      	str	r3, [r7, #16]
 800214a:	4b35      	ldr	r3, [pc, #212]	; (8002220 <HAL_TIM_MspPostInit+0xfc>)
 800214c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800214e:	4a34      	ldr	r2, [pc, #208]	; (8002220 <HAL_TIM_MspPostInit+0xfc>)
 8002150:	f043 0301 	orr.w	r3, r3, #1
 8002154:	6313      	str	r3, [r2, #48]	; 0x30
 8002156:	4b32      	ldr	r3, [pc, #200]	; (8002220 <HAL_TIM_MspPostInit+0xfc>)
 8002158:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800215a:	f003 0301 	and.w	r3, r3, #1
 800215e:	613b      	str	r3, [r7, #16]
 8002160:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration    
    PA15     ------> TIM2_CH1 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_15;
 8002162:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002166:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002168:	2302      	movs	r3, #2
 800216a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800216c:	2300      	movs	r3, #0
 800216e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002170:	2300      	movs	r3, #0
 8002172:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8002174:	2301      	movs	r3, #1
 8002176:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002178:	f107 0314 	add.w	r3, r7, #20
 800217c:	4619      	mov	r1, r3
 800217e:	4829      	ldr	r0, [pc, #164]	; (8002224 <HAL_TIM_MspPostInit+0x100>)
 8002180:	f001 fc26 	bl	80039d0 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 8002184:	e048      	b.n	8002218 <HAL_TIM_MspPostInit+0xf4>
  else if(htim->Instance==TIM3)
 8002186:	687b      	ldr	r3, [r7, #4]
 8002188:	681b      	ldr	r3, [r3, #0]
 800218a:	4a27      	ldr	r2, [pc, #156]	; (8002228 <HAL_TIM_MspPostInit+0x104>)
 800218c:	4293      	cmp	r3, r2
 800218e:	d11f      	bne.n	80021d0 <HAL_TIM_MspPostInit+0xac>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002190:	2300      	movs	r3, #0
 8002192:	60fb      	str	r3, [r7, #12]
 8002194:	4b22      	ldr	r3, [pc, #136]	; (8002220 <HAL_TIM_MspPostInit+0xfc>)
 8002196:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002198:	4a21      	ldr	r2, [pc, #132]	; (8002220 <HAL_TIM_MspPostInit+0xfc>)
 800219a:	f043 0304 	orr.w	r3, r3, #4
 800219e:	6313      	str	r3, [r2, #48]	; 0x30
 80021a0:	4b1f      	ldr	r3, [pc, #124]	; (8002220 <HAL_TIM_MspPostInit+0xfc>)
 80021a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021a4:	f003 0304 	and.w	r3, r3, #4
 80021a8:	60fb      	str	r3, [r7, #12]
 80021aa:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80021ac:	f44f 7380 	mov.w	r3, #256	; 0x100
 80021b0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021b2:	2302      	movs	r3, #2
 80021b4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021b6:	2300      	movs	r3, #0
 80021b8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021ba:	2300      	movs	r3, #0
 80021bc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 80021be:	2302      	movs	r3, #2
 80021c0:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021c2:	f107 0314 	add.w	r3, r7, #20
 80021c6:	4619      	mov	r1, r3
 80021c8:	4818      	ldr	r0, [pc, #96]	; (800222c <HAL_TIM_MspPostInit+0x108>)
 80021ca:	f001 fc01 	bl	80039d0 <HAL_GPIO_Init>
}
 80021ce:	e023      	b.n	8002218 <HAL_TIM_MspPostInit+0xf4>
  else if(htim->Instance==TIM4)
 80021d0:	687b      	ldr	r3, [r7, #4]
 80021d2:	681b      	ldr	r3, [r3, #0]
 80021d4:	4a16      	ldr	r2, [pc, #88]	; (8002230 <HAL_TIM_MspPostInit+0x10c>)
 80021d6:	4293      	cmp	r3, r2
 80021d8:	d11e      	bne.n	8002218 <HAL_TIM_MspPostInit+0xf4>
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80021da:	2300      	movs	r3, #0
 80021dc:	60bb      	str	r3, [r7, #8]
 80021de:	4b10      	ldr	r3, [pc, #64]	; (8002220 <HAL_TIM_MspPostInit+0xfc>)
 80021e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021e2:	4a0f      	ldr	r2, [pc, #60]	; (8002220 <HAL_TIM_MspPostInit+0xfc>)
 80021e4:	f043 0308 	orr.w	r3, r3, #8
 80021e8:	6313      	str	r3, [r2, #48]	; 0x30
 80021ea:	4b0d      	ldr	r3, [pc, #52]	; (8002220 <HAL_TIM_MspPostInit+0xfc>)
 80021ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021ee:	f003 0308 	and.w	r3, r3, #8
 80021f2:	60bb      	str	r3, [r7, #8]
 80021f4:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_15;
 80021f6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80021fa:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021fc:	2302      	movs	r3, #2
 80021fe:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002200:	2300      	movs	r3, #0
 8002202:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002204:	2300      	movs	r3, #0
 8002206:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8002208:	2302      	movs	r3, #2
 800220a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800220c:	f107 0314 	add.w	r3, r7, #20
 8002210:	4619      	mov	r1, r3
 8002212:	4808      	ldr	r0, [pc, #32]	; (8002234 <HAL_TIM_MspPostInit+0x110>)
 8002214:	f001 fbdc 	bl	80039d0 <HAL_GPIO_Init>
}
 8002218:	bf00      	nop
 800221a:	3728      	adds	r7, #40	; 0x28
 800221c:	46bd      	mov	sp, r7
 800221e:	bd80      	pop	{r7, pc}
 8002220:	40023800 	.word	0x40023800
 8002224:	40020000 	.word	0x40020000
 8002228:	40000400 	.word	0x40000400
 800222c:	40020800 	.word	0x40020800
 8002230:	40000800 	.word	0x40000800
 8002234:	40020c00 	.word	0x40020c00

08002238 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002238:	b580      	push	{r7, lr}
 800223a:	b08c      	sub	sp, #48	; 0x30
 800223c:	af00      	add	r7, sp, #0
 800223e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002240:	f107 031c 	add.w	r3, r7, #28
 8002244:	2200      	movs	r2, #0
 8002246:	601a      	str	r2, [r3, #0]
 8002248:	605a      	str	r2, [r3, #4]
 800224a:	609a      	str	r2, [r3, #8]
 800224c:	60da      	str	r2, [r3, #12]
 800224e:	611a      	str	r2, [r3, #16]
  if(huart->Instance==UART4)
 8002250:	687b      	ldr	r3, [r7, #4]
 8002252:	681b      	ldr	r3, [r3, #0]
 8002254:	4a36      	ldr	r2, [pc, #216]	; (8002330 <HAL_UART_MspInit+0xf8>)
 8002256:	4293      	cmp	r3, r2
 8002258:	d12c      	bne.n	80022b4 <HAL_UART_MspInit+0x7c>
  {
  /* USER CODE BEGIN UART4_MspInit 0 */

  /* USER CODE END UART4_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_UART4_CLK_ENABLE();
 800225a:	2300      	movs	r3, #0
 800225c:	61bb      	str	r3, [r7, #24]
 800225e:	4b35      	ldr	r3, [pc, #212]	; (8002334 <HAL_UART_MspInit+0xfc>)
 8002260:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002262:	4a34      	ldr	r2, [pc, #208]	; (8002334 <HAL_UART_MspInit+0xfc>)
 8002264:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8002268:	6413      	str	r3, [r2, #64]	; 0x40
 800226a:	4b32      	ldr	r3, [pc, #200]	; (8002334 <HAL_UART_MspInit+0xfc>)
 800226c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800226e:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8002272:	61bb      	str	r3, [r7, #24]
 8002274:	69bb      	ldr	r3, [r7, #24]
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002276:	2300      	movs	r3, #0
 8002278:	617b      	str	r3, [r7, #20]
 800227a:	4b2e      	ldr	r3, [pc, #184]	; (8002334 <HAL_UART_MspInit+0xfc>)
 800227c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800227e:	4a2d      	ldr	r2, [pc, #180]	; (8002334 <HAL_UART_MspInit+0xfc>)
 8002280:	f043 0301 	orr.w	r3, r3, #1
 8002284:	6313      	str	r3, [r2, #48]	; 0x30
 8002286:	4b2b      	ldr	r3, [pc, #172]	; (8002334 <HAL_UART_MspInit+0xfc>)
 8002288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800228a:	f003 0301 	and.w	r3, r3, #1
 800228e:	617b      	str	r3, [r7, #20]
 8002290:	697b      	ldr	r3, [r7, #20]
    /**UART4 GPIO Configuration    
    PA0/WKUP     ------> UART4_TX
    PA1     ------> UART4_RX 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002292:	2303      	movs	r3, #3
 8002294:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002296:	2302      	movs	r3, #2
 8002298:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800229a:	2301      	movs	r3, #1
 800229c:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800229e:	2303      	movs	r3, #3
 80022a0:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
 80022a2:	2308      	movs	r3, #8
 80022a4:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022a6:	f107 031c 	add.w	r3, r7, #28
 80022aa:	4619      	mov	r1, r3
 80022ac:	4822      	ldr	r0, [pc, #136]	; (8002338 <HAL_UART_MspInit+0x100>)
 80022ae:	f001 fb8f 	bl	80039d0 <HAL_GPIO_Init>
  /* USER CODE BEGIN UART7_MspInit 1 */

  /* USER CODE END UART7_MspInit 1 */
  }

}
 80022b2:	e039      	b.n	8002328 <HAL_UART_MspInit+0xf0>
  else if(huart->Instance==UART7)
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	681b      	ldr	r3, [r3, #0]
 80022b8:	4a20      	ldr	r2, [pc, #128]	; (800233c <HAL_UART_MspInit+0x104>)
 80022ba:	4293      	cmp	r3, r2
 80022bc:	d134      	bne.n	8002328 <HAL_UART_MspInit+0xf0>
    __HAL_RCC_UART7_CLK_ENABLE();
 80022be:	2300      	movs	r3, #0
 80022c0:	613b      	str	r3, [r7, #16]
 80022c2:	4b1c      	ldr	r3, [pc, #112]	; (8002334 <HAL_UART_MspInit+0xfc>)
 80022c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022c6:	4a1b      	ldr	r2, [pc, #108]	; (8002334 <HAL_UART_MspInit+0xfc>)
 80022c8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80022cc:	6413      	str	r3, [r2, #64]	; 0x40
 80022ce:	4b19      	ldr	r3, [pc, #100]	; (8002334 <HAL_UART_MspInit+0xfc>)
 80022d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022d2:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 80022d6:	613b      	str	r3, [r7, #16]
 80022d8:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 80022da:	2300      	movs	r3, #0
 80022dc:	60fb      	str	r3, [r7, #12]
 80022de:	4b15      	ldr	r3, [pc, #84]	; (8002334 <HAL_UART_MspInit+0xfc>)
 80022e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022e2:	4a14      	ldr	r2, [pc, #80]	; (8002334 <HAL_UART_MspInit+0xfc>)
 80022e4:	f043 0310 	orr.w	r3, r3, #16
 80022e8:	6313      	str	r3, [r2, #48]	; 0x30
 80022ea:	4b12      	ldr	r3, [pc, #72]	; (8002334 <HAL_UART_MspInit+0xfc>)
 80022ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022ee:	f003 0310 	and.w	r3, r3, #16
 80022f2:	60fb      	str	r3, [r7, #12]
 80022f4:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8;
 80022f6:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80022fa:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022fc:	2302      	movs	r3, #2
 80022fe:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002300:	2301      	movs	r3, #1
 8002302:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002304:	2303      	movs	r3, #3
 8002306:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 8002308:	2308      	movs	r3, #8
 800230a:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800230c:	f107 031c 	add.w	r3, r7, #28
 8002310:	4619      	mov	r1, r3
 8002312:	480b      	ldr	r0, [pc, #44]	; (8002340 <HAL_UART_MspInit+0x108>)
 8002314:	f001 fb5c 	bl	80039d0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(UART7_IRQn, 5, 0);
 8002318:	2200      	movs	r2, #0
 800231a:	2105      	movs	r1, #5
 800231c:	2052      	movs	r0, #82	; 0x52
 800231e:	f000 ff8c 	bl	800323a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART7_IRQn);
 8002322:	2052      	movs	r0, #82	; 0x52
 8002324:	f000 ffa5 	bl	8003272 <HAL_NVIC_EnableIRQ>
}
 8002328:	bf00      	nop
 800232a:	3730      	adds	r7, #48	; 0x30
 800232c:	46bd      	mov	sp, r7
 800232e:	bd80      	pop	{r7, pc}
 8002330:	40004c00 	.word	0x40004c00
 8002334:	40023800 	.word	0x40023800
 8002338:	40020000 	.word	0x40020000
 800233c:	40007800 	.word	0x40007800
 8002340:	40021000 	.word	0x40021000

08002344 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002344:	b480      	push	{r7}
 8002346:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002348:	bf00      	nop
 800234a:	46bd      	mov	sp, r7
 800234c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002350:	4770      	bx	lr

08002352 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002352:	b480      	push	{r7}
 8002354:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002356:	e7fe      	b.n	8002356 <HardFault_Handler+0x4>

08002358 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002358:	b480      	push	{r7}
 800235a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800235c:	e7fe      	b.n	800235c <MemManage_Handler+0x4>

0800235e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800235e:	b480      	push	{r7}
 8002360:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002362:	e7fe      	b.n	8002362 <BusFault_Handler+0x4>

08002364 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002364:	b480      	push	{r7}
 8002366:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002368:	e7fe      	b.n	8002368 <UsageFault_Handler+0x4>

0800236a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800236a:	b480      	push	{r7}
 800236c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800236e:	bf00      	nop
 8002370:	46bd      	mov	sp, r7
 8002372:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002376:	4770      	bx	lr

08002378 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002378:	b480      	push	{r7}
 800237a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800237c:	bf00      	nop
 800237e:	46bd      	mov	sp, r7
 8002380:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002384:	4770      	bx	lr

08002386 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002386:	b480      	push	{r7}
 8002388:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800238a:	bf00      	nop
 800238c:	46bd      	mov	sp, r7
 800238e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002392:	4770      	bx	lr

08002394 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002394:	b580      	push	{r7, lr}
 8002396:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002398:	f000 fe32 	bl	8003000 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800239c:	bf00      	nop
 800239e:	bd80      	pop	{r7, pc}

080023a0 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 80023a0:	b580      	push	{r7, lr}
 80023a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_11);
 80023a4:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80023a8:	f001 fdf8 	bl	8003f9c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_12);
 80023ac:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 80023b0:	f001 fdf4 	bl	8003f9c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 80023b4:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 80023b8:	f001 fdf0 	bl	8003f9c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_14);
 80023bc:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80023c0:	f001 fdec 	bl	8003f9c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 80023c4:	bf00      	nop
 80023c6:	bd80      	pop	{r7, pc}

080023c8 <UART7_IRQHandler>:

/**
  * @brief This function handles UART7 global interrupt.
  */
void UART7_IRQHandler(void)
{
 80023c8:	b580      	push	{r7, lr}
 80023ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UART7_IRQn 0 */

  /* USER CODE END UART7_IRQn 0 */
  HAL_UART_IRQHandler(&huart7);
 80023cc:	4802      	ldr	r0, [pc, #8]	; (80023d8 <UART7_IRQHandler+0x10>)
 80023ce:	f005 f8f9 	bl	80075c4 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN UART7_IRQn 1 */

  /* USER CODE END UART7_IRQn 1 */
}
 80023d2:	bf00      	nop
 80023d4:	bd80      	pop	{r7, pc}
 80023d6:	bf00      	nop
 80023d8:	20026c64 	.word	0x20026c64

080023dc <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 80023dc:	b580      	push	{r7, lr}
 80023de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80023e0:	4802      	ldr	r0, [pc, #8]	; (80023ec <LTDC_IRQHandler+0x10>)
 80023e2:	f002 fec5 	bl	8005170 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 80023e6:	bf00      	nop
 80023e8:	bd80      	pop	{r7, pc}
 80023ea:	bf00      	nop
 80023ec:	20026dd8 	.word	0x20026dd8

080023f0 <LTDC_ER_IRQHandler>:

/**
  * @brief This function handles LTDC global error interrupt.
  */
void LTDC_ER_IRQHandler(void)
{
 80023f0:	b580      	push	{r7, lr}
 80023f2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_ER_IRQn 0 */

  /* USER CODE END LTDC_ER_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80023f4:	4802      	ldr	r0, [pc, #8]	; (8002400 <LTDC_ER_IRQHandler+0x10>)
 80023f6:	f002 febb 	bl	8005170 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_ER_IRQn 1 */

  /* USER CODE END LTDC_ER_IRQn 1 */
}
 80023fa:	bf00      	nop
 80023fc:	bd80      	pop	{r7, pc}
 80023fe:	bf00      	nop
 8002400:	20026dd8 	.word	0x20026dd8

08002404 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002404:	b480      	push	{r7}
 8002406:	af00      	add	r7, sp, #0
	return 1;
 8002408:	2301      	movs	r3, #1
}
 800240a:	4618      	mov	r0, r3
 800240c:	46bd      	mov	sp, r7
 800240e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002412:	4770      	bx	lr

08002414 <_kill>:

int _kill(int pid, int sig)
{
 8002414:	b580      	push	{r7, lr}
 8002416:	b082      	sub	sp, #8
 8002418:	af00      	add	r7, sp, #0
 800241a:	6078      	str	r0, [r7, #4]
 800241c:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 800241e:	f018 fb13 	bl	801aa48 <__errno>
 8002422:	4602      	mov	r2, r0
 8002424:	2316      	movs	r3, #22
 8002426:	6013      	str	r3, [r2, #0]
	return -1;
 8002428:	f04f 33ff 	mov.w	r3, #4294967295
}
 800242c:	4618      	mov	r0, r3
 800242e:	3708      	adds	r7, #8
 8002430:	46bd      	mov	sp, r7
 8002432:	bd80      	pop	{r7, pc}

08002434 <_exit>:

void _exit (int status)
{
 8002434:	b580      	push	{r7, lr}
 8002436:	b082      	sub	sp, #8
 8002438:	af00      	add	r7, sp, #0
 800243a:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800243c:	f04f 31ff 	mov.w	r1, #4294967295
 8002440:	6878      	ldr	r0, [r7, #4]
 8002442:	f7ff ffe7 	bl	8002414 <_kill>
	while (1) {}		/* Make sure we hang here */
 8002446:	e7fe      	b.n	8002446 <_exit+0x12>

08002448 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002448:	b580      	push	{r7, lr}
 800244a:	b086      	sub	sp, #24
 800244c:	af00      	add	r7, sp, #0
 800244e:	60f8      	str	r0, [r7, #12]
 8002450:	60b9      	str	r1, [r7, #8]
 8002452:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002454:	2300      	movs	r3, #0
 8002456:	617b      	str	r3, [r7, #20]
 8002458:	e00a      	b.n	8002470 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800245a:	f3af 8000 	nop.w
 800245e:	4601      	mov	r1, r0
 8002460:	68bb      	ldr	r3, [r7, #8]
 8002462:	1c5a      	adds	r2, r3, #1
 8002464:	60ba      	str	r2, [r7, #8]
 8002466:	b2ca      	uxtb	r2, r1
 8002468:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800246a:	697b      	ldr	r3, [r7, #20]
 800246c:	3301      	adds	r3, #1
 800246e:	617b      	str	r3, [r7, #20]
 8002470:	697a      	ldr	r2, [r7, #20]
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	429a      	cmp	r2, r3
 8002476:	dbf0      	blt.n	800245a <_read+0x12>
	}

return len;
 8002478:	687b      	ldr	r3, [r7, #4]
}
 800247a:	4618      	mov	r0, r3
 800247c:	3718      	adds	r7, #24
 800247e:	46bd      	mov	sp, r7
 8002480:	bd80      	pop	{r7, pc}

08002482 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002482:	b580      	push	{r7, lr}
 8002484:	b086      	sub	sp, #24
 8002486:	af00      	add	r7, sp, #0
 8002488:	60f8      	str	r0, [r7, #12]
 800248a:	60b9      	str	r1, [r7, #8]
 800248c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800248e:	2300      	movs	r3, #0
 8002490:	617b      	str	r3, [r7, #20]
 8002492:	e009      	b.n	80024a8 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8002494:	68bb      	ldr	r3, [r7, #8]
 8002496:	1c5a      	adds	r2, r3, #1
 8002498:	60ba      	str	r2, [r7, #8]
 800249a:	781b      	ldrb	r3, [r3, #0]
 800249c:	4618      	mov	r0, r3
 800249e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80024a2:	697b      	ldr	r3, [r7, #20]
 80024a4:	3301      	adds	r3, #1
 80024a6:	617b      	str	r3, [r7, #20]
 80024a8:	697a      	ldr	r2, [r7, #20]
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	429a      	cmp	r2, r3
 80024ae:	dbf1      	blt.n	8002494 <_write+0x12>
	}
	return len;
 80024b0:	687b      	ldr	r3, [r7, #4]
}
 80024b2:	4618      	mov	r0, r3
 80024b4:	3718      	adds	r7, #24
 80024b6:	46bd      	mov	sp, r7
 80024b8:	bd80      	pop	{r7, pc}

080024ba <_close>:

int _close(int file)
{
 80024ba:	b480      	push	{r7}
 80024bc:	b083      	sub	sp, #12
 80024be:	af00      	add	r7, sp, #0
 80024c0:	6078      	str	r0, [r7, #4]
	return -1;
 80024c2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80024c6:	4618      	mov	r0, r3
 80024c8:	370c      	adds	r7, #12
 80024ca:	46bd      	mov	sp, r7
 80024cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024d0:	4770      	bx	lr

080024d2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80024d2:	b480      	push	{r7}
 80024d4:	b083      	sub	sp, #12
 80024d6:	af00      	add	r7, sp, #0
 80024d8:	6078      	str	r0, [r7, #4]
 80024da:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80024dc:	683b      	ldr	r3, [r7, #0]
 80024de:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80024e2:	605a      	str	r2, [r3, #4]
	return 0;
 80024e4:	2300      	movs	r3, #0
}
 80024e6:	4618      	mov	r0, r3
 80024e8:	370c      	adds	r7, #12
 80024ea:	46bd      	mov	sp, r7
 80024ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024f0:	4770      	bx	lr

080024f2 <_isatty>:

int _isatty(int file)
{
 80024f2:	b480      	push	{r7}
 80024f4:	b083      	sub	sp, #12
 80024f6:	af00      	add	r7, sp, #0
 80024f8:	6078      	str	r0, [r7, #4]
	return 1;
 80024fa:	2301      	movs	r3, #1
}
 80024fc:	4618      	mov	r0, r3
 80024fe:	370c      	adds	r7, #12
 8002500:	46bd      	mov	sp, r7
 8002502:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002506:	4770      	bx	lr

08002508 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002508:	b480      	push	{r7}
 800250a:	b085      	sub	sp, #20
 800250c:	af00      	add	r7, sp, #0
 800250e:	60f8      	str	r0, [r7, #12]
 8002510:	60b9      	str	r1, [r7, #8]
 8002512:	607a      	str	r2, [r7, #4]
	return 0;
 8002514:	2300      	movs	r3, #0
}
 8002516:	4618      	mov	r0, r3
 8002518:	3714      	adds	r7, #20
 800251a:	46bd      	mov	sp, r7
 800251c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002520:	4770      	bx	lr
	...

08002524 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8002524:	b580      	push	{r7, lr}
 8002526:	b084      	sub	sp, #16
 8002528:	af00      	add	r7, sp, #0
 800252a:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800252c:	4b11      	ldr	r3, [pc, #68]	; (8002574 <_sbrk+0x50>)
 800252e:	681b      	ldr	r3, [r3, #0]
 8002530:	2b00      	cmp	r3, #0
 8002532:	d102      	bne.n	800253a <_sbrk+0x16>
		heap_end = &end;
 8002534:	4b0f      	ldr	r3, [pc, #60]	; (8002574 <_sbrk+0x50>)
 8002536:	4a10      	ldr	r2, [pc, #64]	; (8002578 <_sbrk+0x54>)
 8002538:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800253a:	4b0e      	ldr	r3, [pc, #56]	; (8002574 <_sbrk+0x50>)
 800253c:	681b      	ldr	r3, [r3, #0]
 800253e:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8002540:	4b0c      	ldr	r3, [pc, #48]	; (8002574 <_sbrk+0x50>)
 8002542:	681a      	ldr	r2, [r3, #0]
 8002544:	687b      	ldr	r3, [r7, #4]
 8002546:	4413      	add	r3, r2
 8002548:	466a      	mov	r2, sp
 800254a:	4293      	cmp	r3, r2
 800254c:	d907      	bls.n	800255e <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800254e:	f018 fa7b 	bl	801aa48 <__errno>
 8002552:	4602      	mov	r2, r0
 8002554:	230c      	movs	r3, #12
 8002556:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 8002558:	f04f 33ff 	mov.w	r3, #4294967295
 800255c:	e006      	b.n	800256c <_sbrk+0x48>
	}

	heap_end += incr;
 800255e:	4b05      	ldr	r3, [pc, #20]	; (8002574 <_sbrk+0x50>)
 8002560:	681a      	ldr	r2, [r3, #0]
 8002562:	687b      	ldr	r3, [r7, #4]
 8002564:	4413      	add	r3, r2
 8002566:	4a03      	ldr	r2, [pc, #12]	; (8002574 <_sbrk+0x50>)
 8002568:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800256a:	68fb      	ldr	r3, [r7, #12]
}
 800256c:	4618      	mov	r0, r3
 800256e:	3710      	adds	r7, #16
 8002570:	46bd      	mov	sp, r7
 8002572:	bd80      	pop	{r7, pc}
 8002574:	20025914 	.word	0x20025914
 8002578:	20027010 	.word	0x20027010

0800257c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800257c:	b480      	push	{r7}
 800257e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002580:	4b08      	ldr	r3, [pc, #32]	; (80025a4 <SystemInit+0x28>)
 8002582:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002586:	4a07      	ldr	r2, [pc, #28]	; (80025a4 <SystemInit+0x28>)
 8002588:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800258c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8002590:	4b04      	ldr	r3, [pc, #16]	; (80025a4 <SystemInit+0x28>)
 8002592:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8002596:	609a      	str	r2, [r3, #8]
#endif
}
 8002598:	bf00      	nop
 800259a:	46bd      	mov	sp, r7
 800259c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025a0:	4770      	bx	lr
 80025a2:	bf00      	nop
 80025a4:	e000ed00 	.word	0xe000ed00

080025a8 <UART_Init>:
		HAL_UART_Receive_IT(&huart5, Uart_data.Rx_data, 1);   //activate UART receive interrupt every time
	}
}
*/
//UART MAIN TASK
void UART_Init(){
 80025a8:	b580      	push	{r7, lr}
 80025aa:	af00      	add	r7, sp, #0
	//HAL_UART_Receive_IT(&huart5, Rx_data, 1);
	UART_Reset_CMD();
 80025ac:	f000 f966 	bl	800287c <UART_Reset_CMD>
	Uart_data.Uart_cmd_duty= 10;
 80025b0:	4b06      	ldr	r3, [pc, #24]	; (80025cc <UART_Init+0x24>)
 80025b2:	220a      	movs	r2, #10
 80025b4:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
	Uart_data.Uart_cmd_freq= 25;
 80025b8:	4b04      	ldr	r3, [pc, #16]	; (80025cc <UART_Init+0x24>)
 80025ba:	2219      	movs	r2, #25
 80025bc:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
	Uart_data.Uart_cmd_lum = 50;
 80025c0:	4b02      	ldr	r3, [pc, #8]	; (80025cc <UART_Init+0x24>)
 80025c2:	2232      	movs	r2, #50	; 0x32
 80025c4:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
}
 80025c8:	bf00      	nop
 80025ca:	bd80      	pop	{r7, pc}
 80025cc:	20026e94 	.word	0x20026e94

080025d0 <UART_Task>:

void UART_Task(){
 80025d0:	b580      	push	{r7, lr}
 80025d2:	b082      	sub	sp, #8
 80025d4:	af00      	add	r7, sp, #0
	if (Uart_data.Transfer_cplt)
 80025d6:	4b9e      	ldr	r3, [pc, #632]	; (8002850 <UART_Task+0x280>)
 80025d8:	f893 3067 	ldrb.w	r3, [r3, #103]	; 0x67
 80025dc:	2b00      	cmp	r3, #0
 80025de:	f000 8147 	beq.w	8002870 <UART_Task+0x2a0>
	{
		//Check data reveive here
		//freq=xyz
		if 	((  Uart_data.Rx_Buffer[0]  == 'f')
 80025e2:	4b9b      	ldr	r3, [pc, #620]	; (8002850 <UART_Task+0x280>)
 80025e4:	78db      	ldrb	r3, [r3, #3]
 80025e6:	2b66      	cmp	r3, #102	; 0x66
 80025e8:	d129      	bne.n	800263e <UART_Task+0x6e>
			&& (Uart_data.Rx_Buffer[1]  == 'r')
 80025ea:	4b99      	ldr	r3, [pc, #612]	; (8002850 <UART_Task+0x280>)
 80025ec:	791b      	ldrb	r3, [r3, #4]
 80025ee:	2b72      	cmp	r3, #114	; 0x72
 80025f0:	d125      	bne.n	800263e <UART_Task+0x6e>
			&& (Uart_data.Rx_Buffer[2]  == 'e')
 80025f2:	4b97      	ldr	r3, [pc, #604]	; (8002850 <UART_Task+0x280>)
 80025f4:	795b      	ldrb	r3, [r3, #5]
 80025f6:	2b65      	cmp	r3, #101	; 0x65
 80025f8:	d121      	bne.n	800263e <UART_Task+0x6e>
			&& (Uart_data.Rx_Buffer[3]  == 'q'))
 80025fa:	4b95      	ldr	r3, [pc, #596]	; (8002850 <UART_Task+0x280>)
 80025fc:	799b      	ldrb	r3, [r3, #6]
 80025fe:	2b71      	cmp	r3, #113	; 0x71
 8002600:	d11d      	bne.n	800263e <UART_Task+0x6e>
		{
			uint8_t value = (Uart_data.Rx_Buffer[4] - '0')*10 + (Uart_data.Rx_Buffer[5] - '0');
 8002602:	4b93      	ldr	r3, [pc, #588]	; (8002850 <UART_Task+0x280>)
 8002604:	79db      	ldrb	r3, [r3, #7]
 8002606:	461a      	mov	r2, r3
 8002608:	0092      	lsls	r2, r2, #2
 800260a:	4413      	add	r3, r2
 800260c:	005b      	lsls	r3, r3, #1
 800260e:	b2da      	uxtb	r2, r3
 8002610:	4b8f      	ldr	r3, [pc, #572]	; (8002850 <UART_Task+0x280>)
 8002612:	7a1b      	ldrb	r3, [r3, #8]
 8002614:	4413      	add	r3, r2
 8002616:	b2db      	uxtb	r3, r3
 8002618:	3b10      	subs	r3, #16
 800261a:	71bb      	strb	r3, [r7, #6]
			if ((value >=0) && (value <=50)){
 800261c:	79bb      	ldrb	r3, [r7, #6]
 800261e:	2b32      	cmp	r3, #50	; 0x32
 8002620:	d808      	bhi.n	8002634 <UART_Task+0x64>
				Uart_data.Uart_cmd_freq = value;
 8002622:	4a8b      	ldr	r2, [pc, #556]	; (8002850 <UART_Task+0x280>)
 8002624:	79bb      	ldrb	r3, [r7, #6]
 8002626:	f882 306b 	strb.w	r3, [r2, #107]	; 0x6b
				Uart_data.Uart_cmd = UART_CMD_FREQ;
 800262a:	4b89      	ldr	r3, [pc, #548]	; (8002850 <UART_Task+0x280>)
 800262c:	2200      	movs	r2, #0
 800262e:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
		{
 8002632:	e117      	b.n	8002864 <UART_Task+0x294>
			}
			else{
				Uart_data.Uart_cmd = UART_CMD_FREQ_ERROR;
 8002634:	4b86      	ldr	r3, [pc, #536]	; (8002850 <UART_Task+0x280>)
 8002636:	2201      	movs	r2, #1
 8002638:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
		{
 800263c:	e112      	b.n	8002864 <UART_Task+0x294>
			}
		}
		//duty=xyz
		else if		((  Uart_data.Rx_Buffer[0]  == 'd')
 800263e:	4b84      	ldr	r3, [pc, #528]	; (8002850 <UART_Task+0x280>)
 8002640:	78db      	ldrb	r3, [r3, #3]
 8002642:	2b64      	cmp	r3, #100	; 0x64
 8002644:	d129      	bne.n	800269a <UART_Task+0xca>
					&& (Uart_data.Rx_Buffer[1]  == 'u')
 8002646:	4b82      	ldr	r3, [pc, #520]	; (8002850 <UART_Task+0x280>)
 8002648:	791b      	ldrb	r3, [r3, #4]
 800264a:	2b75      	cmp	r3, #117	; 0x75
 800264c:	d125      	bne.n	800269a <UART_Task+0xca>
					&& (Uart_data.Rx_Buffer[2]  == 't')
 800264e:	4b80      	ldr	r3, [pc, #512]	; (8002850 <UART_Task+0x280>)
 8002650:	795b      	ldrb	r3, [r3, #5]
 8002652:	2b74      	cmp	r3, #116	; 0x74
 8002654:	d121      	bne.n	800269a <UART_Task+0xca>
					&& (Uart_data.Rx_Buffer[3]  == 'y'))
 8002656:	4b7e      	ldr	r3, [pc, #504]	; (8002850 <UART_Task+0x280>)
 8002658:	799b      	ldrb	r3, [r3, #6]
 800265a:	2b79      	cmp	r3, #121	; 0x79
 800265c:	d11d      	bne.n	800269a <UART_Task+0xca>
		{
			uint8_t value =(Uart_data.Rx_Buffer[4] - '0')*10 + (Uart_data.Rx_Buffer[5] - '0');
 800265e:	4b7c      	ldr	r3, [pc, #496]	; (8002850 <UART_Task+0x280>)
 8002660:	79db      	ldrb	r3, [r3, #7]
 8002662:	461a      	mov	r2, r3
 8002664:	0092      	lsls	r2, r2, #2
 8002666:	4413      	add	r3, r2
 8002668:	005b      	lsls	r3, r3, #1
 800266a:	b2da      	uxtb	r2, r3
 800266c:	4b78      	ldr	r3, [pc, #480]	; (8002850 <UART_Task+0x280>)
 800266e:	7a1b      	ldrb	r3, [r3, #8]
 8002670:	4413      	add	r3, r2
 8002672:	b2db      	uxtb	r3, r3
 8002674:	3b10      	subs	r3, #16
 8002676:	717b      	strb	r3, [r7, #5]
			if ((value >=0) && (value <=50)){
 8002678:	797b      	ldrb	r3, [r7, #5]
 800267a:	2b32      	cmp	r3, #50	; 0x32
 800267c:	d808      	bhi.n	8002690 <UART_Task+0xc0>
				Uart_data.Uart_cmd_duty = value;
 800267e:	4a74      	ldr	r2, [pc, #464]	; (8002850 <UART_Task+0x280>)
 8002680:	797b      	ldrb	r3, [r7, #5]
 8002682:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
				Uart_data.Uart_cmd = UART_CMD_DUTY;
 8002686:	4b72      	ldr	r3, [pc, #456]	; (8002850 <UART_Task+0x280>)
 8002688:	2202      	movs	r2, #2
 800268a:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
		{
 800268e:	e0e9      	b.n	8002864 <UART_Task+0x294>
			}
			else{
				Uart_data.Uart_cmd = UART_CMD_DUTY_ERROR;
 8002690:	4b6f      	ldr	r3, [pc, #444]	; (8002850 <UART_Task+0x280>)
 8002692:	2203      	movs	r2, #3
 8002694:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
		{
 8002698:	e0e4      	b.n	8002864 <UART_Task+0x294>
			}
		}
		//lum=xyz
		else if		((  Uart_data.Rx_Buffer[0]  == 'l')
 800269a:	4b6d      	ldr	r3, [pc, #436]	; (8002850 <UART_Task+0x280>)
 800269c:	78db      	ldrb	r3, [r3, #3]
 800269e:	2b6c      	cmp	r3, #108	; 0x6c
 80026a0:	d158      	bne.n	8002754 <UART_Task+0x184>
					&& (Uart_data.Rx_Buffer[1]  == 'u')
 80026a2:	4b6b      	ldr	r3, [pc, #428]	; (8002850 <UART_Task+0x280>)
 80026a4:	791b      	ldrb	r3, [r3, #4]
 80026a6:	2b75      	cmp	r3, #117	; 0x75
 80026a8:	d154      	bne.n	8002754 <UART_Task+0x184>
					&& (Uart_data.Rx_Buffer[2]  == 'm'))
 80026aa:	4b69      	ldr	r3, [pc, #420]	; (8002850 <UART_Task+0x280>)
 80026ac:	795b      	ldrb	r3, [r3, #5]
 80026ae:	2b6d      	cmp	r3, #109	; 0x6d
 80026b0:	d150      	bne.n	8002754 <UART_Task+0x184>
		{
			uint8_t value = 0;
 80026b2:	2300      	movs	r3, #0
 80026b4:	71fb      	strb	r3, [r7, #7]
			if (Uart_data.Rx_Buffer[6] ==  '\0'){
 80026b6:	4b66      	ldr	r3, [pc, #408]	; (8002850 <UART_Task+0x280>)
 80026b8:	7a5b      	ldrb	r3, [r3, #9]
 80026ba:	2b00      	cmp	r3, #0
 80026bc:	d139      	bne.n	8002732 <UART_Task+0x162>
				if (Uart_data.Rx_Buffer[5] ==  '\0'){
 80026be:	4b64      	ldr	r3, [pc, #400]	; (8002850 <UART_Task+0x280>)
 80026c0:	7a1b      	ldrb	r3, [r3, #8]
 80026c2:	2b00      	cmp	r3, #0
 80026c4:	d11a      	bne.n	80026fc <UART_Task+0x12c>
					if (Uart_data.Rx_Buffer[4] ==  '\0'){
 80026c6:	4b62      	ldr	r3, [pc, #392]	; (8002850 <UART_Task+0x280>)
 80026c8:	79db      	ldrb	r3, [r3, #7]
 80026ca:	2b00      	cmp	r3, #0
 80026cc:	d108      	bne.n	80026e0 <UART_Task+0x110>
						if (Uart_data.Rx_Buffer[3] !=  '\0'){
 80026ce:	4b60      	ldr	r3, [pc, #384]	; (8002850 <UART_Task+0x280>)
 80026d0:	799b      	ldrb	r3, [r3, #6]
 80026d2:	2b00      	cmp	r3, #0
 80026d4:	d02d      	beq.n	8002732 <UART_Task+0x162>
							value = (Uart_data.Rx_Buffer[3] - '0');
 80026d6:	4b5e      	ldr	r3, [pc, #376]	; (8002850 <UART_Task+0x280>)
 80026d8:	799b      	ldrb	r3, [r3, #6]
 80026da:	3b30      	subs	r3, #48	; 0x30
 80026dc:	71fb      	strb	r3, [r7, #7]
 80026de:	e028      	b.n	8002732 <UART_Task+0x162>
						}
					}
					else
					{
						value = (Uart_data.Rx_Buffer[3] - '0')*10 + (Uart_data.Rx_Buffer[4] - '0');
 80026e0:	4b5b      	ldr	r3, [pc, #364]	; (8002850 <UART_Task+0x280>)
 80026e2:	799b      	ldrb	r3, [r3, #6]
 80026e4:	461a      	mov	r2, r3
 80026e6:	0092      	lsls	r2, r2, #2
 80026e8:	4413      	add	r3, r2
 80026ea:	005b      	lsls	r3, r3, #1
 80026ec:	b2da      	uxtb	r2, r3
 80026ee:	4b58      	ldr	r3, [pc, #352]	; (8002850 <UART_Task+0x280>)
 80026f0:	79db      	ldrb	r3, [r3, #7]
 80026f2:	4413      	add	r3, r2
 80026f4:	b2db      	uxtb	r3, r3
 80026f6:	3b10      	subs	r3, #16
 80026f8:	71fb      	strb	r3, [r7, #7]
 80026fa:	e01a      	b.n	8002732 <UART_Task+0x162>
					}
				}
				else
				{
					value = (Uart_data.Rx_Buffer[3] - '0')*100 + (Uart_data.Rx_Buffer[4] - '0')*10 + (Uart_data.Rx_Buffer[5] - '0');
 80026fc:	4b54      	ldr	r3, [pc, #336]	; (8002850 <UART_Task+0x280>)
 80026fe:	799b      	ldrb	r3, [r3, #6]
 8002700:	461a      	mov	r2, r3
 8002702:	0092      	lsls	r2, r2, #2
 8002704:	4413      	add	r3, r2
 8002706:	461a      	mov	r2, r3
 8002708:	0091      	lsls	r1, r2, #2
 800270a:	461a      	mov	r2, r3
 800270c:	460b      	mov	r3, r1
 800270e:	4413      	add	r3, r2
 8002710:	009b      	lsls	r3, r3, #2
 8002712:	b2da      	uxtb	r2, r3
 8002714:	4b4e      	ldr	r3, [pc, #312]	; (8002850 <UART_Task+0x280>)
 8002716:	79db      	ldrb	r3, [r3, #7]
 8002718:	4619      	mov	r1, r3
 800271a:	0089      	lsls	r1, r1, #2
 800271c:	440b      	add	r3, r1
 800271e:	005b      	lsls	r3, r3, #1
 8002720:	b2db      	uxtb	r3, r3
 8002722:	4413      	add	r3, r2
 8002724:	b2da      	uxtb	r2, r3
 8002726:	4b4a      	ldr	r3, [pc, #296]	; (8002850 <UART_Task+0x280>)
 8002728:	7a1b      	ldrb	r3, [r3, #8]
 800272a:	4413      	add	r3, r2
 800272c:	b2db      	uxtb	r3, r3
 800272e:	3330      	adds	r3, #48	; 0x30
 8002730:	71fb      	strb	r3, [r7, #7]
				}
			}
			if ((value >=0) && (value <=100)){
 8002732:	79fb      	ldrb	r3, [r7, #7]
 8002734:	2b64      	cmp	r3, #100	; 0x64
 8002736:	d808      	bhi.n	800274a <UART_Task+0x17a>
				Uart_data.Uart_cmd_lum = value;
 8002738:	4a45      	ldr	r2, [pc, #276]	; (8002850 <UART_Task+0x280>)
 800273a:	79fb      	ldrb	r3, [r7, #7]
 800273c:	f882 306c 	strb.w	r3, [r2, #108]	; 0x6c
				Uart_data.Uart_cmd = UART_CMD_LUMINOSITY;
 8002740:	4b43      	ldr	r3, [pc, #268]	; (8002850 <UART_Task+0x280>)
 8002742:	2204      	movs	r2, #4
 8002744:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
		{
 8002748:	e08c      	b.n	8002864 <UART_Task+0x294>
			}
			else{
				Uart_data.Uart_cmd = UART_CMD_LUMINOSITY_ERROR;
 800274a:	4b41      	ldr	r3, [pc, #260]	; (8002850 <UART_Task+0x280>)
 800274c:	2205      	movs	r2, #5
 800274e:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
		{
 8002752:	e087      	b.n	8002864 <UART_Task+0x294>
			}
		}
		else if		((  Uart_data.Rx_Buffer[0]  == 'l')
 8002754:	4b3e      	ldr	r3, [pc, #248]	; (8002850 <UART_Task+0x280>)
 8002756:	78db      	ldrb	r3, [r3, #3]
 8002758:	2b6c      	cmp	r3, #108	; 0x6c
 800275a:	d124      	bne.n	80027a6 <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[1]  == 'e')
 800275c:	4b3c      	ldr	r3, [pc, #240]	; (8002850 <UART_Task+0x280>)
 800275e:	791b      	ldrb	r3, [r3, #4]
 8002760:	2b65      	cmp	r3, #101	; 0x65
 8002762:	d120      	bne.n	80027a6 <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[2]  == 'x')
 8002764:	4b3a      	ldr	r3, [pc, #232]	; (8002850 <UART_Task+0x280>)
 8002766:	795b      	ldrb	r3, [r3, #5]
 8002768:	2b78      	cmp	r3, #120	; 0x78
 800276a:	d11c      	bne.n	80027a6 <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[3]  == 'i')
 800276c:	4b38      	ldr	r3, [pc, #224]	; (8002850 <UART_Task+0x280>)
 800276e:	799b      	ldrb	r3, [r3, #6]
 8002770:	2b69      	cmp	r3, #105	; 0x69
 8002772:	d118      	bne.n	80027a6 <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[4]  == 'l')
 8002774:	4b36      	ldr	r3, [pc, #216]	; (8002850 <UART_Task+0x280>)
 8002776:	79db      	ldrb	r3, [r3, #7]
 8002778:	2b6c      	cmp	r3, #108	; 0x6c
 800277a:	d114      	bne.n	80027a6 <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[5]  == 'i')
 800277c:	4b34      	ldr	r3, [pc, #208]	; (8002850 <UART_Task+0x280>)
 800277e:	7a1b      	ldrb	r3, [r3, #8]
 8002780:	2b69      	cmp	r3, #105	; 0x69
 8002782:	d110      	bne.n	80027a6 <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[6]  == 'g')
 8002784:	4b32      	ldr	r3, [pc, #200]	; (8002850 <UART_Task+0x280>)
 8002786:	7a5b      	ldrb	r3, [r3, #9]
 8002788:	2b67      	cmp	r3, #103	; 0x67
 800278a:	d10c      	bne.n	80027a6 <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[7]  == 'h')
 800278c:	4b30      	ldr	r3, [pc, #192]	; (8002850 <UART_Task+0x280>)
 800278e:	7a9b      	ldrb	r3, [r3, #10]
 8002790:	2b68      	cmp	r3, #104	; 0x68
 8002792:	d108      	bne.n	80027a6 <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[8]  == 't'))
 8002794:	4b2e      	ldr	r3, [pc, #184]	; (8002850 <UART_Task+0x280>)
 8002796:	7adb      	ldrb	r3, [r3, #11]
 8002798:	2b74      	cmp	r3, #116	; 0x74
 800279a:	d104      	bne.n	80027a6 <UART_Task+0x1d6>
		{
			Uart_data.Uart_cmd = UART_CMD_LEXI_MODE;
 800279c:	4b2c      	ldr	r3, [pc, #176]	; (8002850 <UART_Task+0x280>)
 800279e:	2206      	movs	r2, #6
 80027a0:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 80027a4:	e05e      	b.n	8002864 <UART_Task+0x294>
		}
		else if		((  Uart_data.Rx_Buffer[0]  == 'n')
 80027a6:	4b2a      	ldr	r3, [pc, #168]	; (8002850 <UART_Task+0x280>)
 80027a8:	78db      	ldrb	r3, [r3, #3]
 80027aa:	2b6e      	cmp	r3, #110	; 0x6e
 80027ac:	d118      	bne.n	80027e0 <UART_Task+0x210>
					&& (Uart_data.Rx_Buffer[1]  == 'o')
 80027ae:	4b28      	ldr	r3, [pc, #160]	; (8002850 <UART_Task+0x280>)
 80027b0:	791b      	ldrb	r3, [r3, #4]
 80027b2:	2b6f      	cmp	r3, #111	; 0x6f
 80027b4:	d114      	bne.n	80027e0 <UART_Task+0x210>
					&& (Uart_data.Rx_Buffer[2]  == 'r')
 80027b6:	4b26      	ldr	r3, [pc, #152]	; (8002850 <UART_Task+0x280>)
 80027b8:	795b      	ldrb	r3, [r3, #5]
 80027ba:	2b72      	cmp	r3, #114	; 0x72
 80027bc:	d110      	bne.n	80027e0 <UART_Task+0x210>
					&& (Uart_data.Rx_Buffer[3]  == 'm')
 80027be:	4b24      	ldr	r3, [pc, #144]	; (8002850 <UART_Task+0x280>)
 80027c0:	799b      	ldrb	r3, [r3, #6]
 80027c2:	2b6d      	cmp	r3, #109	; 0x6d
 80027c4:	d10c      	bne.n	80027e0 <UART_Task+0x210>
					&& (Uart_data.Rx_Buffer[4]  == 'a')
 80027c6:	4b22      	ldr	r3, [pc, #136]	; (8002850 <UART_Task+0x280>)
 80027c8:	79db      	ldrb	r3, [r3, #7]
 80027ca:	2b61      	cmp	r3, #97	; 0x61
 80027cc:	d108      	bne.n	80027e0 <UART_Task+0x210>
					&& (Uart_data.Rx_Buffer[5]  == 'l'))
 80027ce:	4b20      	ldr	r3, [pc, #128]	; (8002850 <UART_Task+0x280>)
 80027d0:	7a1b      	ldrb	r3, [r3, #8]
 80027d2:	2b6c      	cmp	r3, #108	; 0x6c
 80027d4:	d104      	bne.n	80027e0 <UART_Task+0x210>
		{
			Uart_data.Uart_cmd = UART_CMD_NORMAL_MODE;
 80027d6:	4b1e      	ldr	r3, [pc, #120]	; (8002850 <UART_Task+0x280>)
 80027d8:	2207      	movs	r2, #7
 80027da:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 80027de:	e041      	b.n	8002864 <UART_Task+0x294>
		}
		else if		((  Uart_data.Rx_Buffer[0]  == 'o')
 80027e0:	4b1b      	ldr	r3, [pc, #108]	; (8002850 <UART_Task+0x280>)
 80027e2:	78db      	ldrb	r3, [r3, #3]
 80027e4:	2b6f      	cmp	r3, #111	; 0x6f
 80027e6:	d108      	bne.n	80027fa <UART_Task+0x22a>
					&& (Uart_data.Rx_Buffer[1]  == 'n'))
 80027e8:	4b19      	ldr	r3, [pc, #100]	; (8002850 <UART_Task+0x280>)
 80027ea:	791b      	ldrb	r3, [r3, #4]
 80027ec:	2b6e      	cmp	r3, #110	; 0x6e
 80027ee:	d104      	bne.n	80027fa <UART_Task+0x22a>
		{
			Uart_data.Uart_cmd = UART_CMD_NORMAL_MODE;
 80027f0:	4b17      	ldr	r3, [pc, #92]	; (8002850 <UART_Task+0x280>)
 80027f2:	2207      	movs	r2, #7
 80027f4:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 80027f8:	e034      	b.n	8002864 <UART_Task+0x294>
		}
		else if		((  Uart_data.Rx_Buffer[0]  == 'o')
 80027fa:	4b15      	ldr	r3, [pc, #84]	; (8002850 <UART_Task+0x280>)
 80027fc:	78db      	ldrb	r3, [r3, #3]
 80027fe:	2b6f      	cmp	r3, #111	; 0x6f
 8002800:	d10c      	bne.n	800281c <UART_Task+0x24c>
					&& (Uart_data.Rx_Buffer[1]  == 'f')
 8002802:	4b13      	ldr	r3, [pc, #76]	; (8002850 <UART_Task+0x280>)
 8002804:	791b      	ldrb	r3, [r3, #4]
 8002806:	2b66      	cmp	r3, #102	; 0x66
 8002808:	d108      	bne.n	800281c <UART_Task+0x24c>
					&& (Uart_data.Rx_Buffer[2]  == 'f'))
 800280a:	4b11      	ldr	r3, [pc, #68]	; (8002850 <UART_Task+0x280>)
 800280c:	795b      	ldrb	r3, [r3, #5]
 800280e:	2b66      	cmp	r3, #102	; 0x66
 8002810:	d104      	bne.n	800281c <UART_Task+0x24c>
		{
			Uart_data.Uart_cmd = UART_CMD_OFF_MODE;
 8002812:	4b0f      	ldr	r3, [pc, #60]	; (8002850 <UART_Task+0x280>)
 8002814:	2208      	movs	r2, #8
 8002816:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 800281a:	e023      	b.n	8002864 <UART_Task+0x294>
		}
		else if		((  Uart_data.Rx_Buffer[0]  == 's')
 800281c:	4b0c      	ldr	r3, [pc, #48]	; (8002850 <UART_Task+0x280>)
 800281e:	78db      	ldrb	r3, [r3, #3]
 8002820:	2b73      	cmp	r3, #115	; 0x73
 8002822:	d117      	bne.n	8002854 <UART_Task+0x284>
					&& (Uart_data.Rx_Buffer[1]  == 't')
 8002824:	4b0a      	ldr	r3, [pc, #40]	; (8002850 <UART_Task+0x280>)
 8002826:	791b      	ldrb	r3, [r3, #4]
 8002828:	2b74      	cmp	r3, #116	; 0x74
 800282a:	d113      	bne.n	8002854 <UART_Task+0x284>
					&& (Uart_data.Rx_Buffer[2]  == 'a')
 800282c:	4b08      	ldr	r3, [pc, #32]	; (8002850 <UART_Task+0x280>)
 800282e:	795b      	ldrb	r3, [r3, #5]
 8002830:	2b61      	cmp	r3, #97	; 0x61
 8002832:	d10f      	bne.n	8002854 <UART_Task+0x284>
					&& (Uart_data.Rx_Buffer[3]  == 't')
 8002834:	4b06      	ldr	r3, [pc, #24]	; (8002850 <UART_Task+0x280>)
 8002836:	799b      	ldrb	r3, [r3, #6]
 8002838:	2b74      	cmp	r3, #116	; 0x74
 800283a:	d10b      	bne.n	8002854 <UART_Task+0x284>
					&& (Uart_data.Rx_Buffer[4]  == 'e'))
 800283c:	4b04      	ldr	r3, [pc, #16]	; (8002850 <UART_Task+0x280>)
 800283e:	79db      	ldrb	r3, [r3, #7]
 8002840:	2b65      	cmp	r3, #101	; 0x65
 8002842:	d107      	bne.n	8002854 <UART_Task+0x284>
		{
			Uart_data.Uart_cmd = UART_CMD_STATE;
 8002844:	4b02      	ldr	r3, [pc, #8]	; (8002850 <UART_Task+0x280>)
 8002846:	220a      	movs	r2, #10
 8002848:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 800284c:	e00a      	b.n	8002864 <UART_Task+0x294>
 800284e:	bf00      	nop
 8002850:	20026e94 	.word	0x20026e94
		}
		else{
			Uart_data.Uart_cmd = UART_CMD_ERROR;
 8002854:	4b08      	ldr	r3, [pc, #32]	; (8002878 <UART_Task+0x2a8>)
 8002856:	220c      	movs	r2, #12
 8002858:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
			Uart_data.Uart_cmd_value = 0;
 800285c:	4b06      	ldr	r3, [pc, #24]	; (8002878 <UART_Task+0x2a8>)
 800285e:	2200      	movs	r2, #0
 8002860:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
		}
		UART_Send_CMD();
 8002864:	f000 f81c 	bl	80028a0 <UART_Send_CMD>
		Uart_data.Transfer_cplt = false;
 8002868:	4b03      	ldr	r3, [pc, #12]	; (8002878 <UART_Task+0x2a8>)
 800286a:	2200      	movs	r2, #0
 800286c:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
	}
}
 8002870:	bf00      	nop
 8002872:	3708      	adds	r7, #8
 8002874:	46bd      	mov	sp, r7
 8002876:	bd80      	pop	{r7, pc}
 8002878:	20026e94 	.word	0x20026e94

0800287c <UART_Reset_CMD>:
void UART_Reset_CMD(){
 800287c:	b480      	push	{r7}
 800287e:	af00      	add	r7, sp, #0
	Uart_data.Uart_cmd = UART_WAIT_CMD;
 8002880:	4b06      	ldr	r3, [pc, #24]	; (800289c <UART_Reset_CMD+0x20>)
 8002882:	220b      	movs	r2, #11
 8002884:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
	Uart_data.Uart_cmd_value = 0;
 8002888:	4b04      	ldr	r3, [pc, #16]	; (800289c <UART_Reset_CMD+0x20>)
 800288a:	2200      	movs	r2, #0
 800288c:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
}
 8002890:	bf00      	nop
 8002892:	46bd      	mov	sp, r7
 8002894:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002898:	4770      	bx	lr
 800289a:	bf00      	nop
 800289c:	20026e94 	.word	0x20026e94

080028a0 <UART_Send_CMD>:
void UART_Send_CMD(){
 80028a0:	b5b0      	push	{r4, r5, r7, lr}
 80028a2:	b09a      	sub	sp, #104	; 0x68
 80028a4:	af00      	add	r7, sp, #0
	//uint8_t i = 0;
	uint8_t buffer[100];
	uint8_t len;
	switch (Uart_data.Uart_cmd)
 80028a6:	4bb3      	ldr	r3, [pc, #716]	; (8002b74 <UART_Send_CMD+0x2d4>)
 80028a8:	f893 3068 	ldrb.w	r3, [r3, #104]	; 0x68
 80028ac:	2b0a      	cmp	r3, #10
 80028ae:	f200 81f4 	bhi.w	8002c9a <UART_Send_CMD+0x3fa>
 80028b2:	a201      	add	r2, pc, #4	; (adr r2, 80028b8 <UART_Send_CMD+0x18>)
 80028b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80028b8:	080028e5 	.word	0x080028e5
 80028bc:	0800293b 	.word	0x0800293b
 80028c0:	08002971 	.word	0x08002971
 80028c4:	080029c7 	.word	0x080029c7
 80028c8:	080029fd 	.word	0x080029fd
 80028cc:	08002a49 	.word	0x08002a49
 80028d0:	08002ab5 	.word	0x08002ab5
 80028d4:	08002a7f 	.word	0x08002a7f
 80028d8:	08002aeb 	.word	0x08002aeb
 80028dc:	08002c9b 	.word	0x08002c9b
 80028e0:	08002b21 	.word	0x08002b21
	{
		case UART_CMD_FREQ:
			if (( Uart_data.Uart_cmd_freq>= 0 ) && ( Uart_data.Uart_cmd_freq <= 50)){
 80028e4:	4ba3      	ldr	r3, [pc, #652]	; (8002b74 <UART_Send_CMD+0x2d4>)
 80028e6:	f893 306b 	ldrb.w	r3, [r3, #107]	; 0x6b
 80028ea:	2b32      	cmp	r3, #50	; 0x32
 80028ec:	f200 81d7 	bhi.w	8002c9e <UART_Send_CMD+0x3fe>
				uint8_t value = Uart_data.Uart_cmd_freq + 65;
 80028f0:	4ba0      	ldr	r3, [pc, #640]	; (8002b74 <UART_Send_CMD+0x2d4>)
 80028f2:	f893 306b 	ldrb.w	r3, [r3, #107]	; 0x6b
 80028f6:	3341      	adds	r3, #65	; 0x41
 80028f8:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
				Lexi_Set_Freq(value);
 80028fc:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 8002900:	4618      	mov	r0, r3
 8002902:	f7fe fa5f 	bl	8000dc4 <Lexi_Set_Freq>
				sprintf(buffer,"New Freq %i\r\n",Uart_data.Uart_cmd_freq);
 8002906:	4b9b      	ldr	r3, [pc, #620]	; (8002b74 <UART_Send_CMD+0x2d4>)
 8002908:	f893 306b 	ldrb.w	r3, [r3, #107]	; 0x6b
 800290c:	461a      	mov	r2, r3
 800290e:	463b      	mov	r3, r7
 8002910:	4999      	ldr	r1, [pc, #612]	; (8002b78 <UART_Send_CMD+0x2d8>)
 8002912:	4618      	mov	r0, r3
 8002914:	f018 fcbc 	bl	801b290 <siprintf>
				len=strlen(buffer);
 8002918:	463b      	mov	r3, r7
 800291a:	4618      	mov	r0, r3
 800291c:	f7fd fc68 	bl	80001f0 <strlen>
 8002920:	4603      	mov	r3, r0
 8002922:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
				HAL_UART_Transmit(&huart7, buffer, len, 1000);
 8002926:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 800292a:	b29a      	uxth	r2, r3
 800292c:	4639      	mov	r1, r7
 800292e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002932:	4892      	ldr	r0, [pc, #584]	; (8002b7c <UART_Send_CMD+0x2dc>)
 8002934:	f004 fd57 	bl	80073e6 <HAL_UART_Transmit>
			}
			break;
 8002938:	e1b1      	b.n	8002c9e <UART_Send_CMD+0x3fe>

		case UART_CMD_FREQ_ERROR:
			sprintf(buffer,"Freq must be 00 to 50\r\n");
 800293a:	463b      	mov	r3, r7
 800293c:	4a90      	ldr	r2, [pc, #576]	; (8002b80 <UART_Send_CMD+0x2e0>)
 800293e:	461c      	mov	r4, r3
 8002940:	4615      	mov	r5, r2
 8002942:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002944:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002946:	e895 0003 	ldmia.w	r5, {r0, r1}
 800294a:	e884 0003 	stmia.w	r4, {r0, r1}
			len=strlen(buffer);
 800294e:	463b      	mov	r3, r7
 8002950:	4618      	mov	r0, r3
 8002952:	f7fd fc4d 	bl	80001f0 <strlen>
 8002956:	4603      	mov	r3, r0
 8002958:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
			HAL_UART_Transmit(&huart7, buffer, len, 1000);
 800295c:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8002960:	b29a      	uxth	r2, r3
 8002962:	4639      	mov	r1, r7
 8002964:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002968:	4884      	ldr	r0, [pc, #528]	; (8002b7c <UART_Send_CMD+0x2dc>)
 800296a:	f004 fd3c 	bl	80073e6 <HAL_UART_Transmit>
			break;
 800296e:	e19b      	b.n	8002ca8 <UART_Send_CMD+0x408>

		case UART_CMD_DUTY:
			if (( Uart_data.Uart_cmd_duty>= 0 ) && ( Uart_data.Uart_cmd_duty <= 50)){
 8002970:	4b80      	ldr	r3, [pc, #512]	; (8002b74 <UART_Send_CMD+0x2d4>)
 8002972:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 8002976:	2b32      	cmp	r3, #50	; 0x32
 8002978:	f200 8193 	bhi.w	8002ca2 <UART_Send_CMD+0x402>
				uint8_t value = Uart_data.Uart_cmd_duty + 10;
 800297c:	4b7d      	ldr	r3, [pc, #500]	; (8002b74 <UART_Send_CMD+0x2d4>)
 800297e:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 8002982:	330a      	adds	r3, #10
 8002984:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
				Lexi_Set_Duty(value);
 8002988:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 800298c:	4618      	mov	r0, r3
 800298e:	f7fe fa03 	bl	8000d98 <Lexi_Set_Duty>
				sprintf(buffer,"New Duty %i \r\n",Uart_data.Uart_cmd_duty);
 8002992:	4b78      	ldr	r3, [pc, #480]	; (8002b74 <UART_Send_CMD+0x2d4>)
 8002994:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 8002998:	461a      	mov	r2, r3
 800299a:	463b      	mov	r3, r7
 800299c:	4979      	ldr	r1, [pc, #484]	; (8002b84 <UART_Send_CMD+0x2e4>)
 800299e:	4618      	mov	r0, r3
 80029a0:	f018 fc76 	bl	801b290 <siprintf>
				len=strlen(buffer);
 80029a4:	463b      	mov	r3, r7
 80029a6:	4618      	mov	r0, r3
 80029a8:	f7fd fc22 	bl	80001f0 <strlen>
 80029ac:	4603      	mov	r3, r0
 80029ae:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
				HAL_UART_Transmit(&huart7, buffer, len, 1000);
 80029b2:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 80029b6:	b29a      	uxth	r2, r3
 80029b8:	4639      	mov	r1, r7
 80029ba:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80029be:	486f      	ldr	r0, [pc, #444]	; (8002b7c <UART_Send_CMD+0x2dc>)
 80029c0:	f004 fd11 	bl	80073e6 <HAL_UART_Transmit>
			}
			break;
 80029c4:	e16d      	b.n	8002ca2 <UART_Send_CMD+0x402>

		case UART_CMD_DUTY_ERROR:
			sprintf(buffer,"Duty must be 00 to 50\r\n");
 80029c6:	463b      	mov	r3, r7
 80029c8:	4a6f      	ldr	r2, [pc, #444]	; (8002b88 <UART_Send_CMD+0x2e8>)
 80029ca:	461c      	mov	r4, r3
 80029cc:	4615      	mov	r5, r2
 80029ce:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80029d0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80029d2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80029d6:	e884 0003 	stmia.w	r4, {r0, r1}
			len=strlen(buffer);
 80029da:	463b      	mov	r3, r7
 80029dc:	4618      	mov	r0, r3
 80029de:	f7fd fc07 	bl	80001f0 <strlen>
 80029e2:	4603      	mov	r3, r0
 80029e4:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
			HAL_UART_Transmit(&huart7, buffer, len, 1000);
 80029e8:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 80029ec:	b29a      	uxth	r2, r3
 80029ee:	4639      	mov	r1, r7
 80029f0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80029f4:	4861      	ldr	r0, [pc, #388]	; (8002b7c <UART_Send_CMD+0x2dc>)
 80029f6:	f004 fcf6 	bl	80073e6 <HAL_UART_Transmit>
			break;
 80029fa:	e155      	b.n	8002ca8 <UART_Send_CMD+0x408>

		case UART_CMD_LUMINOSITY:
			if ((Uart_data.Uart_cmd_lum <= 100)&& (Uart_data.Uart_cmd_lum >= 0)){
 80029fc:	4b5d      	ldr	r3, [pc, #372]	; (8002b74 <UART_Send_CMD+0x2d4>)
 80029fe:	f893 306c 	ldrb.w	r3, [r3, #108]	; 0x6c
 8002a02:	2b64      	cmp	r3, #100	; 0x64
 8002a04:	f200 814f 	bhi.w	8002ca6 <UART_Send_CMD+0x406>
				Lexi_Set_Luminosity(Uart_data.Uart_cmd_lum);
 8002a08:	4b5a      	ldr	r3, [pc, #360]	; (8002b74 <UART_Send_CMD+0x2d4>)
 8002a0a:	f893 306c 	ldrb.w	r3, [r3, #108]	; 0x6c
 8002a0e:	4618      	mov	r0, r3
 8002a10:	f7fe f9f6 	bl	8000e00 <Lexi_Set_Luminosity>
				sprintf(buffer,"New Luminosity %i\r\n",Uart_data.Uart_cmd_lum);
 8002a14:	4b57      	ldr	r3, [pc, #348]	; (8002b74 <UART_Send_CMD+0x2d4>)
 8002a16:	f893 306c 	ldrb.w	r3, [r3, #108]	; 0x6c
 8002a1a:	461a      	mov	r2, r3
 8002a1c:	463b      	mov	r3, r7
 8002a1e:	495b      	ldr	r1, [pc, #364]	; (8002b8c <UART_Send_CMD+0x2ec>)
 8002a20:	4618      	mov	r0, r3
 8002a22:	f018 fc35 	bl	801b290 <siprintf>
				len=strlen(buffer);
 8002a26:	463b      	mov	r3, r7
 8002a28:	4618      	mov	r0, r3
 8002a2a:	f7fd fbe1 	bl	80001f0 <strlen>
 8002a2e:	4603      	mov	r3, r0
 8002a30:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
				HAL_UART_Transmit(&huart7, buffer, len, 1000);
 8002a34:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8002a38:	b29a      	uxth	r2, r3
 8002a3a:	4639      	mov	r1, r7
 8002a3c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002a40:	484e      	ldr	r0, [pc, #312]	; (8002b7c <UART_Send_CMD+0x2dc>)
 8002a42:	f004 fcd0 	bl	80073e6 <HAL_UART_Transmit>
			}
			break;
 8002a46:	e12e      	b.n	8002ca6 <UART_Send_CMD+0x406>

		case UART_CMD_LUMINOSITY_ERROR:
			sprintf(buffer,"Luminosity must be 0, 1, 2 \r\n");
 8002a48:	463b      	mov	r3, r7
 8002a4a:	4a51      	ldr	r2, [pc, #324]	; (8002b90 <UART_Send_CMD+0x2f0>)
 8002a4c:	461c      	mov	r4, r3
 8002a4e:	4615      	mov	r5, r2
 8002a50:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a52:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002a54:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002a58:	c407      	stmia	r4!, {r0, r1, r2}
 8002a5a:	8023      	strh	r3, [r4, #0]
			len=strlen(buffer);
 8002a5c:	463b      	mov	r3, r7
 8002a5e:	4618      	mov	r0, r3
 8002a60:	f7fd fbc6 	bl	80001f0 <strlen>
 8002a64:	4603      	mov	r3, r0
 8002a66:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
			HAL_UART_Transmit(&huart7, buffer, len, 1000);
 8002a6a:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8002a6e:	b29a      	uxth	r2, r3
 8002a70:	4639      	mov	r1, r7
 8002a72:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002a76:	4841      	ldr	r0, [pc, #260]	; (8002b7c <UART_Send_CMD+0x2dc>)
 8002a78:	f004 fcb5 	bl	80073e6 <HAL_UART_Transmit>
			break;
 8002a7c:	e114      	b.n	8002ca8 <UART_Send_CMD+0x408>

		case UART_CMD_NORMAL_MODE:
			Lexi_Set_State_STANDARD();
 8002a7e:	f7fe f96f 	bl	8000d60 <Lexi_Set_State_STANDARD>
			sprintf(buffer,"Light Mode Normal\r\n");
 8002a82:	463b      	mov	r3, r7
 8002a84:	4a43      	ldr	r2, [pc, #268]	; (8002b94 <UART_Send_CMD+0x2f4>)
 8002a86:	461c      	mov	r4, r3
 8002a88:	4615      	mov	r5, r2
 8002a8a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a8c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002a8e:	682b      	ldr	r3, [r5, #0]
 8002a90:	6023      	str	r3, [r4, #0]
			len=strlen(buffer);
 8002a92:	463b      	mov	r3, r7
 8002a94:	4618      	mov	r0, r3
 8002a96:	f7fd fbab 	bl	80001f0 <strlen>
 8002a9a:	4603      	mov	r3, r0
 8002a9c:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
			HAL_UART_Transmit(&huart7, buffer, len, 1000);
 8002aa0:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8002aa4:	b29a      	uxth	r2, r3
 8002aa6:	4639      	mov	r1, r7
 8002aa8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002aac:	4833      	ldr	r0, [pc, #204]	; (8002b7c <UART_Send_CMD+0x2dc>)
 8002aae:	f004 fc9a 	bl	80073e6 <HAL_UART_Transmit>
			break;
 8002ab2:	e0f9      	b.n	8002ca8 <UART_Send_CMD+0x408>

		case UART_CMD_LEXI_MODE:
			Lexi_Set_State_LEXI();
 8002ab4:	f7fe f962 	bl	8000d7c <Lexi_Set_State_LEXI>
			sprintf(buffer,"Light Mode Lexi\r\n");
 8002ab8:	463b      	mov	r3, r7
 8002aba:	4a37      	ldr	r2, [pc, #220]	; (8002b98 <UART_Send_CMD+0x2f8>)
 8002abc:	461c      	mov	r4, r3
 8002abe:	4615      	mov	r5, r2
 8002ac0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002ac2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002ac4:	682b      	ldr	r3, [r5, #0]
 8002ac6:	8023      	strh	r3, [r4, #0]
			len=strlen(buffer);
 8002ac8:	463b      	mov	r3, r7
 8002aca:	4618      	mov	r0, r3
 8002acc:	f7fd fb90 	bl	80001f0 <strlen>
 8002ad0:	4603      	mov	r3, r0
 8002ad2:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
			HAL_UART_Transmit(&huart7, buffer, len, 1000);
 8002ad6:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8002ada:	b29a      	uxth	r2, r3
 8002adc:	4639      	mov	r1, r7
 8002ade:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002ae2:	4826      	ldr	r0, [pc, #152]	; (8002b7c <UART_Send_CMD+0x2dc>)
 8002ae4:	f004 fc7f 	bl	80073e6 <HAL_UART_Transmit>
			break;
 8002ae8:	e0de      	b.n	8002ca8 <UART_Send_CMD+0x408>

		case UART_CMD_OFF_MODE:
			Lexi_Set_State_OFF();
 8002aea:	f7fe f91d 	bl	8000d28 <Lexi_Set_State_OFF>
			sprintf(buffer,"Light Mode Off\r\n");
 8002aee:	463b      	mov	r3, r7
 8002af0:	4a2a      	ldr	r2, [pc, #168]	; (8002b9c <UART_Send_CMD+0x2fc>)
 8002af2:	461c      	mov	r4, r3
 8002af4:	4615      	mov	r5, r2
 8002af6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002af8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002afa:	682b      	ldr	r3, [r5, #0]
 8002afc:	7023      	strb	r3, [r4, #0]
			len=strlen(buffer);
 8002afe:	463b      	mov	r3, r7
 8002b00:	4618      	mov	r0, r3
 8002b02:	f7fd fb75 	bl	80001f0 <strlen>
 8002b06:	4603      	mov	r3, r0
 8002b08:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
			HAL_UART_Transmit(&huart7, buffer, len, 1000);
 8002b0c:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8002b10:	b29a      	uxth	r2, r3
 8002b12:	4639      	mov	r1, r7
 8002b14:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002b18:	4818      	ldr	r0, [pc, #96]	; (8002b7c <UART_Send_CMD+0x2dc>)
 8002b1a:	f004 fc64 	bl	80073e6 <HAL_UART_Transmit>
			break;
 8002b1e:	e0c3      	b.n	8002ca8 <UART_Send_CMD+0x408>

		case UART_CMD_STATE:
			sprintf(buffer,"-- State ");
 8002b20:	463b      	mov	r3, r7
 8002b22:	4a1f      	ldr	r2, [pc, #124]	; (8002ba0 <UART_Send_CMD+0x300>)
 8002b24:	ca07      	ldmia	r2, {r0, r1, r2}
 8002b26:	c303      	stmia	r3!, {r0, r1}
 8002b28:	801a      	strh	r2, [r3, #0]
			if ( Lexi_Get_Led_State() == 1){
 8002b2a:	f7fe f8d9 	bl	8000ce0 <Lexi_Get_Led_State>
 8002b2e:	4603      	mov	r3, r0
 8002b30:	2b01      	cmp	r3, #1
 8002b32:	d13b      	bne.n	8002bac <UART_Send_CMD+0x30c>
				sprintf(buffer + strlen(buffer),"- LED NORMAL ");
 8002b34:	463b      	mov	r3, r7
 8002b36:	4618      	mov	r0, r3
 8002b38:	f7fd fb5a 	bl	80001f0 <strlen>
 8002b3c:	4602      	mov	r2, r0
 8002b3e:	463b      	mov	r3, r7
 8002b40:	4413      	add	r3, r2
 8002b42:	4a18      	ldr	r2, [pc, #96]	; (8002ba4 <UART_Send_CMD+0x304>)
 8002b44:	461c      	mov	r4, r3
 8002b46:	4613      	mov	r3, r2
 8002b48:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002b4a:	6020      	str	r0, [r4, #0]
 8002b4c:	6061      	str	r1, [r4, #4]
 8002b4e:	60a2      	str	r2, [r4, #8]
 8002b50:	881b      	ldrh	r3, [r3, #0]
 8002b52:	81a3      	strh	r3, [r4, #12]
				sprintf(buffer + strlen(buffer),"- Luminosity: %i ", Uart_data.Uart_cmd_lum);
 8002b54:	463b      	mov	r3, r7
 8002b56:	4618      	mov	r0, r3
 8002b58:	f7fd fb4a 	bl	80001f0 <strlen>
 8002b5c:	4602      	mov	r2, r0
 8002b5e:	463b      	mov	r3, r7
 8002b60:	1898      	adds	r0, r3, r2
 8002b62:	4b04      	ldr	r3, [pc, #16]	; (8002b74 <UART_Send_CMD+0x2d4>)
 8002b64:	f893 306c 	ldrb.w	r3, [r3, #108]	; 0x6c
 8002b68:	461a      	mov	r2, r3
 8002b6a:	490f      	ldr	r1, [pc, #60]	; (8002ba8 <UART_Send_CMD+0x308>)
 8002b6c:	f018 fb90 	bl	801b290 <siprintf>
 8002b70:	e073      	b.n	8002c5a <UART_Send_CMD+0x3ba>
 8002b72:	bf00      	nop
 8002b74:	20026e94 	.word	0x20026e94
 8002b78:	0801bd7c 	.word	0x0801bd7c
 8002b7c:	20026c64 	.word	0x20026c64
 8002b80:	0801bd8c 	.word	0x0801bd8c
 8002b84:	0801bda4 	.word	0x0801bda4
 8002b88:	0801bdb4 	.word	0x0801bdb4
 8002b8c:	0801bdcc 	.word	0x0801bdcc
 8002b90:	0801bde0 	.word	0x0801bde0
 8002b94:	0801be00 	.word	0x0801be00
 8002b98:	0801be14 	.word	0x0801be14
 8002b9c:	0801be28 	.word	0x0801be28
 8002ba0:	0801be3c 	.word	0x0801be3c
 8002ba4:	0801be48 	.word	0x0801be48
 8002ba8:	0801be58 	.word	0x0801be58
			}
			else if ( Lexi_Get_Led_State() == 2){
 8002bac:	f7fe f898 	bl	8000ce0 <Lexi_Get_Led_State>
 8002bb0:	4603      	mov	r3, r0
 8002bb2:	2b02      	cmp	r3, #2
 8002bb4:	d13b      	bne.n	8002c2e <UART_Send_CMD+0x38e>
				sprintf(buffer + strlen(buffer),"- LED LEXI MODE ");
 8002bb6:	463b      	mov	r3, r7
 8002bb8:	4618      	mov	r0, r3
 8002bba:	f7fd fb19 	bl	80001f0 <strlen>
 8002bbe:	4602      	mov	r2, r0
 8002bc0:	463b      	mov	r3, r7
 8002bc2:	4413      	add	r3, r2
 8002bc4:	4a3a      	ldr	r2, [pc, #232]	; (8002cb0 <UART_Send_CMD+0x410>)
 8002bc6:	461d      	mov	r5, r3
 8002bc8:	4614      	mov	r4, r2
 8002bca:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002bcc:	6028      	str	r0, [r5, #0]
 8002bce:	6069      	str	r1, [r5, #4]
 8002bd0:	60aa      	str	r2, [r5, #8]
 8002bd2:	60eb      	str	r3, [r5, #12]
 8002bd4:	7823      	ldrb	r3, [r4, #0]
 8002bd6:	742b      	strb	r3, [r5, #16]
				sprintf(buffer + strlen(buffer),"- Duty : %i " , Uart_data.Uart_cmd_duty );
 8002bd8:	463b      	mov	r3, r7
 8002bda:	4618      	mov	r0, r3
 8002bdc:	f7fd fb08 	bl	80001f0 <strlen>
 8002be0:	4602      	mov	r2, r0
 8002be2:	463b      	mov	r3, r7
 8002be4:	1898      	adds	r0, r3, r2
 8002be6:	4b33      	ldr	r3, [pc, #204]	; (8002cb4 <UART_Send_CMD+0x414>)
 8002be8:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 8002bec:	461a      	mov	r2, r3
 8002bee:	4932      	ldr	r1, [pc, #200]	; (8002cb8 <UART_Send_CMD+0x418>)
 8002bf0:	f018 fb4e 	bl	801b290 <siprintf>
				sprintf(buffer + strlen(buffer),"- Frequency : %i " , Uart_data.Uart_cmd_freq );
 8002bf4:	463b      	mov	r3, r7
 8002bf6:	4618      	mov	r0, r3
 8002bf8:	f7fd fafa 	bl	80001f0 <strlen>
 8002bfc:	4602      	mov	r2, r0
 8002bfe:	463b      	mov	r3, r7
 8002c00:	1898      	adds	r0, r3, r2
 8002c02:	4b2c      	ldr	r3, [pc, #176]	; (8002cb4 <UART_Send_CMD+0x414>)
 8002c04:	f893 306b 	ldrb.w	r3, [r3, #107]	; 0x6b
 8002c08:	461a      	mov	r2, r3
 8002c0a:	492c      	ldr	r1, [pc, #176]	; (8002cbc <UART_Send_CMD+0x41c>)
 8002c0c:	f018 fb40 	bl	801b290 <siprintf>
				sprintf(buffer + strlen(buffer),"- Luminosity : %i ", Uart_data.Uart_cmd_lum );
 8002c10:	463b      	mov	r3, r7
 8002c12:	4618      	mov	r0, r3
 8002c14:	f7fd faec 	bl	80001f0 <strlen>
 8002c18:	4602      	mov	r2, r0
 8002c1a:	463b      	mov	r3, r7
 8002c1c:	1898      	adds	r0, r3, r2
 8002c1e:	4b25      	ldr	r3, [pc, #148]	; (8002cb4 <UART_Send_CMD+0x414>)
 8002c20:	f893 306c 	ldrb.w	r3, [r3, #108]	; 0x6c
 8002c24:	461a      	mov	r2, r3
 8002c26:	4926      	ldr	r1, [pc, #152]	; (8002cc0 <UART_Send_CMD+0x420>)
 8002c28:	f018 fb32 	bl	801b290 <siprintf>
 8002c2c:	e015      	b.n	8002c5a <UART_Send_CMD+0x3ba>
			}
			else if ( Lexi_Get_Led_State() == 0){
 8002c2e:	f7fe f857 	bl	8000ce0 <Lexi_Get_Led_State>
 8002c32:	4603      	mov	r3, r0
 8002c34:	2b00      	cmp	r3, #0
 8002c36:	d110      	bne.n	8002c5a <UART_Send_CMD+0x3ba>
				sprintf(buffer + strlen(buffer),"- LED OFF ");
 8002c38:	463b      	mov	r3, r7
 8002c3a:	4618      	mov	r0, r3
 8002c3c:	f7fd fad8 	bl	80001f0 <strlen>
 8002c40:	4602      	mov	r2, r0
 8002c42:	463b      	mov	r3, r7
 8002c44:	4413      	add	r3, r2
 8002c46:	491f      	ldr	r1, [pc, #124]	; (8002cc4 <UART_Send_CMD+0x424>)
 8002c48:	461a      	mov	r2, r3
 8002c4a:	460b      	mov	r3, r1
 8002c4c:	cb03      	ldmia	r3!, {r0, r1}
 8002c4e:	6010      	str	r0, [r2, #0]
 8002c50:	6051      	str	r1, [r2, #4]
 8002c52:	8819      	ldrh	r1, [r3, #0]
 8002c54:	789b      	ldrb	r3, [r3, #2]
 8002c56:	8111      	strh	r1, [r2, #8]
 8002c58:	7293      	strb	r3, [r2, #10]
			}
			sprintf(buffer + strlen(buffer),"- Battery level: %i \r\n", BQ25713_Get_VBat());
 8002c5a:	463b      	mov	r3, r7
 8002c5c:	4618      	mov	r0, r3
 8002c5e:	f7fd fac7 	bl	80001f0 <strlen>
 8002c62:	4602      	mov	r2, r0
 8002c64:	463b      	mov	r3, r7
 8002c66:	189c      	adds	r4, r3, r2
 8002c68:	f7fd fe60 	bl	800092c <BQ25713_Get_VBat>
 8002c6c:	4603      	mov	r3, r0
 8002c6e:	461a      	mov	r2, r3
 8002c70:	4915      	ldr	r1, [pc, #84]	; (8002cc8 <UART_Send_CMD+0x428>)
 8002c72:	4620      	mov	r0, r4
 8002c74:	f018 fb0c 	bl	801b290 <siprintf>
			len=strlen(buffer);
 8002c78:	463b      	mov	r3, r7
 8002c7a:	4618      	mov	r0, r3
 8002c7c:	f7fd fab8 	bl	80001f0 <strlen>
 8002c80:	4603      	mov	r3, r0
 8002c82:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
			HAL_UART_Transmit(&huart7, buffer, len, 2000);
 8002c86:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8002c8a:	b29a      	uxth	r2, r3
 8002c8c:	4639      	mov	r1, r7
 8002c8e:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
 8002c92:	480e      	ldr	r0, [pc, #56]	; (8002ccc <UART_Send_CMD+0x42c>)
 8002c94:	f004 fba7 	bl	80073e6 <HAL_UART_Transmit>
			break;
 8002c98:	e006      	b.n	8002ca8 <UART_Send_CMD+0x408>

		default:
			break;
 8002c9a:	bf00      	nop
 8002c9c:	e004      	b.n	8002ca8 <UART_Send_CMD+0x408>
			break;
 8002c9e:	bf00      	nop
 8002ca0:	e002      	b.n	8002ca8 <UART_Send_CMD+0x408>
			break;
 8002ca2:	bf00      	nop
 8002ca4:	e000      	b.n	8002ca8 <UART_Send_CMD+0x408>
			break;
 8002ca6:	bf00      	nop
	}
}
 8002ca8:	bf00      	nop
 8002caa:	3768      	adds	r7, #104	; 0x68
 8002cac:	46bd      	mov	sp, r7
 8002cae:	bdb0      	pop	{r4, r5, r7, pc}
 8002cb0:	0801be6c 	.word	0x0801be6c
 8002cb4:	20026e94 	.word	0x20026e94
 8002cb8:	0801be80 	.word	0x0801be80
 8002cbc:	0801be90 	.word	0x0801be90
 8002cc0:	0801bea4 	.word	0x0801bea4
 8002cc4:	0801beb8 	.word	0x0801beb8
 8002cc8:	0801bec4 	.word	0x0801bec4
 8002ccc:	20026c64 	.word	0x20026c64

08002cd0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8002cd0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002d08 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8002cd4:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8002cd6:	e003      	b.n	8002ce0 <LoopCopyDataInit>

08002cd8 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8002cd8:	4b0c      	ldr	r3, [pc, #48]	; (8002d0c <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8002cda:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8002cdc:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8002cde:	3104      	adds	r1, #4

08002ce0 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8002ce0:	480b      	ldr	r0, [pc, #44]	; (8002d10 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8002ce2:	4b0c      	ldr	r3, [pc, #48]	; (8002d14 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8002ce4:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8002ce6:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8002ce8:	d3f6      	bcc.n	8002cd8 <CopyDataInit>
  ldr  r2, =_sbss
 8002cea:	4a0b      	ldr	r2, [pc, #44]	; (8002d18 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8002cec:	e002      	b.n	8002cf4 <LoopFillZerobss>

08002cee <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8002cee:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8002cf0:	f842 3b04 	str.w	r3, [r2], #4

08002cf4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8002cf4:	4b09      	ldr	r3, [pc, #36]	; (8002d1c <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8002cf6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8002cf8:	d3f9      	bcc.n	8002cee <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8002cfa:	f7ff fc3f 	bl	800257c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8002cfe:	f017 febb 	bl	801aa78 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8002d02:	f7fe f993 	bl	800102c <main>
  bx  lr    
 8002d06:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8002d08:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8002d0c:	08032f30 	.word	0x08032f30
  ldr  r0, =_sdata
 8002d10:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8002d14:	200000f8 	.word	0x200000f8
  ldr  r2, =_sbss
 8002d18:	200258f8 	.word	0x200258f8
  ldr  r3, = _ebss
 8002d1c:	2002700c 	.word	0x2002700c

08002d20 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8002d20:	e7fe      	b.n	8002d20 <ADC_IRQHandler>

08002d22 <ST7789H2_Init>:
  * @brief  Initialize the st7789h2 LCD Component.
  * @param  None
  * @retval None
  */
void ST7789H2_Init(void)
{
 8002d22:	b580      	push	{r7, lr}
 8002d24:	b084      	sub	sp, #16
 8002d26:	af00      	add	r7, sp, #0
  uint8_t   parameter[14];
  
  /* Initialize st7789h2 low level bus layer ----------------------------------*/
  LCD_IO_Init();
 8002d28:	f7fe f8a2 	bl	8000e70 <LCD_IO_Init>
  /* Sleep In Command */ 
  ST7789H2_WriteReg(ST7789H2_SLEEP_IN, (uint8_t*)NULL, 0); 
 8002d2c:	2200      	movs	r2, #0
 8002d2e:	2100      	movs	r1, #0
 8002d30:	2010      	movs	r0, #16
 8002d32:	f000 f8f0 	bl	8002f16 <ST7789H2_WriteReg>
  /* Wait for 10ms */
  LCD_IO_Delay(10);  
 8002d36:	200a      	movs	r0, #10
 8002d38:	f7fe f8ea 	bl	8000f10 <LCD_IO_Delay>
  
  /* SW Reset Command */
  ST7789H2_WriteReg(0x01, (uint8_t*)NULL, 0); 
 8002d3c:	2200      	movs	r2, #0
 8002d3e:	2100      	movs	r1, #0
 8002d40:	2001      	movs	r0, #1
 8002d42:	f000 f8e8 	bl	8002f16 <ST7789H2_WriteReg>
  /* Wait for 200ms */
  LCD_IO_Delay(200);
 8002d46:	20c8      	movs	r0, #200	; 0xc8
 8002d48:	f7fe f8e2 	bl	8000f10 <LCD_IO_Delay>
  
  /* Sleep Out Command */
  ST7789H2_WriteReg(ST7789H2_SLEEP_OUT, (uint8_t*)NULL, 0); 
 8002d4c:	2200      	movs	r2, #0
 8002d4e:	2100      	movs	r1, #0
 8002d50:	2011      	movs	r0, #17
 8002d52:	f000 f8e0 	bl	8002f16 <ST7789H2_WriteReg>
  /* Wait for 120ms */
  LCD_IO_Delay(120); 
 8002d56:	2078      	movs	r0, #120	; 0x78
 8002d58:	f7fe f8da 	bl	8000f10 <LCD_IO_Delay>

  /* Normal display for Driver Down side */
  parameter[0] = 0x00;     
 8002d5c:	2300      	movs	r3, #0
 8002d5e:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_NORMAL_DISPLAY, parameter, 1);
 8002d60:	463b      	mov	r3, r7
 8002d62:	2201      	movs	r2, #1
 8002d64:	4619      	mov	r1, r3
 8002d66:	2036      	movs	r0, #54	; 0x36
 8002d68:	f000 f8d5 	bl	8002f16 <ST7789H2_WriteReg>
 
  /* Color mode 16bits/pixel */
  parameter[0] = 0x05;     
 8002d6c:	2305      	movs	r3, #5
 8002d6e:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_COLOR_MODE, parameter, 1);
 8002d70:	463b      	mov	r3, r7
 8002d72:	2201      	movs	r2, #1
 8002d74:	4619      	mov	r1, r3
 8002d76:	203a      	movs	r0, #58	; 0x3a
 8002d78:	f000 f8cd 	bl	8002f16 <ST7789H2_WriteReg>
  
  /* Display inversion On */
  ST7789H2_WriteReg(ST7789H2_DISPLAY_INVERSION, (uint8_t*)NULL, 0);     
 8002d7c:	2200      	movs	r2, #0
 8002d7e:	2100      	movs	r1, #0
 8002d80:	2021      	movs	r0, #33	; 0x21
 8002d82:	f000 f8c8 	bl	8002f16 <ST7789H2_WriteReg>
  
  /* Set Column address CASET */  
  parameter[0] = 0x00;
 8002d86:	2300      	movs	r3, #0
 8002d88:	703b      	strb	r3, [r7, #0]
  parameter[1] = 0x00;
 8002d8a:	2300      	movs	r3, #0
 8002d8c:	707b      	strb	r3, [r7, #1]
  parameter[2] = 0x00;
 8002d8e:	2300      	movs	r3, #0
 8002d90:	70bb      	strb	r3, [r7, #2]
  parameter[3] = 0xEF;
 8002d92:	23ef      	movs	r3, #239	; 0xef
 8002d94:	70fb      	strb	r3, [r7, #3]
  ST7789H2_WriteReg(ST7789H2_CASET, parameter, 4);
 8002d96:	463b      	mov	r3, r7
 8002d98:	2204      	movs	r2, #4
 8002d9a:	4619      	mov	r1, r3
 8002d9c:	202a      	movs	r0, #42	; 0x2a
 8002d9e:	f000 f8ba 	bl	8002f16 <ST7789H2_WriteReg>
  /* Set Row address RASET */  
  parameter[0] = 0x00;
 8002da2:	2300      	movs	r3, #0
 8002da4:	703b      	strb	r3, [r7, #0]
  parameter[1] = 0x00;
 8002da6:	2300      	movs	r3, #0
 8002da8:	707b      	strb	r3, [r7, #1]
  parameter[2] = 0x00;
 8002daa:	2300      	movs	r3, #0
 8002dac:	70bb      	strb	r3, [r7, #2]
  parameter[3] = 0xEF;
 8002dae:	23ef      	movs	r3, #239	; 0xef
 8002db0:	70fb      	strb	r3, [r7, #3]
  ST7789H2_WriteReg(ST7789H2_RASET, parameter, 4);
 8002db2:	463b      	mov	r3, r7
 8002db4:	2204      	movs	r2, #4
 8002db6:	4619      	mov	r1, r3
 8002db8:	202b      	movs	r0, #43	; 0x2b
 8002dba:	f000 f8ac 	bl	8002f16 <ST7789H2_WriteReg>

  /*--------------- ST7789H2 Frame rate setting -------------------------------*/
  /* PORCH control setting */      
  parameter[0] = 0x0C;
 8002dbe:	230c      	movs	r3, #12
 8002dc0:	703b      	strb	r3, [r7, #0]
  parameter[1] = 0x0C;
 8002dc2:	230c      	movs	r3, #12
 8002dc4:	707b      	strb	r3, [r7, #1]
  parameter[2] = 0x00;
 8002dc6:	2300      	movs	r3, #0
 8002dc8:	70bb      	strb	r3, [r7, #2]
  parameter[3] = 0x33;
 8002dca:	2333      	movs	r3, #51	; 0x33
 8002dcc:	70fb      	strb	r3, [r7, #3]
  parameter[4] = 0x33; 
 8002dce:	2333      	movs	r3, #51	; 0x33
 8002dd0:	713b      	strb	r3, [r7, #4]
  ST7789H2_WriteReg(ST7789H2_PORCH_CTRL, parameter, 5);
 8002dd2:	463b      	mov	r3, r7
 8002dd4:	2205      	movs	r2, #5
 8002dd6:	4619      	mov	r1, r3
 8002dd8:	20b2      	movs	r0, #178	; 0xb2
 8002dda:	f000 f89c 	bl	8002f16 <ST7789H2_WriteReg>
  
  /* GATE control setting */
  parameter[0] = 0x35; 
 8002dde:	2335      	movs	r3, #53	; 0x35
 8002de0:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_GATE_CTRL, parameter, 1);
 8002de2:	463b      	mov	r3, r7
 8002de4:	2201      	movs	r2, #1
 8002de6:	4619      	mov	r1, r3
 8002de8:	20b7      	movs	r0, #183	; 0xb7
 8002dea:	f000 f894 	bl	8002f16 <ST7789H2_WriteReg>
  
  /*--------------- ST7789H2 Power setting ------------------------------------*/
  /* VCOM setting */ 
  parameter[0] = 0x1F; 
 8002dee:	231f      	movs	r3, #31
 8002df0:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_VCOM_SET, parameter, 1); 
 8002df2:	463b      	mov	r3, r7
 8002df4:	2201      	movs	r2, #1
 8002df6:	4619      	mov	r1, r3
 8002df8:	20bb      	movs	r0, #187	; 0xbb
 8002dfa:	f000 f88c 	bl	8002f16 <ST7789H2_WriteReg>
  
  /* LCM Control setting */ 
  parameter[0] = 0x2C; 
 8002dfe:	232c      	movs	r3, #44	; 0x2c
 8002e00:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_LCM_CTRL, parameter, 1);
 8002e02:	463b      	mov	r3, r7
 8002e04:	2201      	movs	r2, #1
 8002e06:	4619      	mov	r1, r3
 8002e08:	20c0      	movs	r0, #192	; 0xc0
 8002e0a:	f000 f884 	bl	8002f16 <ST7789H2_WriteReg>
  
  /* VDV and VRH Command Enable */ 
  parameter[0] = 0x01;
 8002e0e:	2301      	movs	r3, #1
 8002e10:	703b      	strb	r3, [r7, #0]
  parameter[1] = 0xC3;
 8002e12:	23c3      	movs	r3, #195	; 0xc3
 8002e14:	707b      	strb	r3, [r7, #1]
  ST7789H2_WriteReg(ST7789H2_VDV_VRH_EN, parameter, 2);
 8002e16:	463b      	mov	r3, r7
 8002e18:	2202      	movs	r2, #2
 8002e1a:	4619      	mov	r1, r3
 8002e1c:	20c2      	movs	r0, #194	; 0xc2
 8002e1e:	f000 f87a 	bl	8002f16 <ST7789H2_WriteReg>
  
  /* VDV Set */ 
  parameter[0] = 0x20; 
 8002e22:	2320      	movs	r3, #32
 8002e24:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_VDV_SET, parameter, 1); 
 8002e26:	463b      	mov	r3, r7
 8002e28:	2201      	movs	r2, #1
 8002e2a:	4619      	mov	r1, r3
 8002e2c:	20c4      	movs	r0, #196	; 0xc4
 8002e2e:	f000 f872 	bl	8002f16 <ST7789H2_WriteReg>
  
  /* Frame Rate Control in normal mode */ 
  parameter[0] = 0x0F; 
 8002e32:	230f      	movs	r3, #15
 8002e34:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_FR_CTRL, parameter, 1); 
 8002e36:	463b      	mov	r3, r7
 8002e38:	2201      	movs	r2, #1
 8002e3a:	4619      	mov	r1, r3
 8002e3c:	20c6      	movs	r0, #198	; 0xc6
 8002e3e:	f000 f86a 	bl	8002f16 <ST7789H2_WriteReg>
  
  /* Power Control */     
  parameter[0] = 0xA4;
 8002e42:	23a4      	movs	r3, #164	; 0xa4
 8002e44:	703b      	strb	r3, [r7, #0]
  parameter[1] = 0xA1;
 8002e46:	23a1      	movs	r3, #161	; 0xa1
 8002e48:	707b      	strb	r3, [r7, #1]
  ST7789H2_WriteReg(ST7789H2_POWER_CTRL, parameter, 1); 
 8002e4a:	463b      	mov	r3, r7
 8002e4c:	2201      	movs	r2, #1
 8002e4e:	4619      	mov	r1, r3
 8002e50:	20d0      	movs	r0, #208	; 0xd0
 8002e52:	f000 f860 	bl	8002f16 <ST7789H2_WriteReg>
  
  /*--------------- ST7789H2 Gamma setting ------------------------------------*/
  /* Positive Voltage Gamma Control */ 
  parameter[0] = 0xD0;
 8002e56:	23d0      	movs	r3, #208	; 0xd0
 8002e58:	703b      	strb	r3, [r7, #0]
  parameter[1] = 0x08;
 8002e5a:	2308      	movs	r3, #8
 8002e5c:	707b      	strb	r3, [r7, #1]
  parameter[2] = 0x11;
 8002e5e:	2311      	movs	r3, #17
 8002e60:	70bb      	strb	r3, [r7, #2]
  parameter[3] = 0x08;
 8002e62:	2308      	movs	r3, #8
 8002e64:	70fb      	strb	r3, [r7, #3]
  parameter[4] = 0x0C;
 8002e66:	230c      	movs	r3, #12
 8002e68:	713b      	strb	r3, [r7, #4]
  parameter[5] = 0x15;
 8002e6a:	2315      	movs	r3, #21
 8002e6c:	717b      	strb	r3, [r7, #5]
  parameter[6] = 0x39;
 8002e6e:	2339      	movs	r3, #57	; 0x39
 8002e70:	71bb      	strb	r3, [r7, #6]
  parameter[7] = 0x33;
 8002e72:	2333      	movs	r3, #51	; 0x33
 8002e74:	71fb      	strb	r3, [r7, #7]
  parameter[8] = 0x50;
 8002e76:	2350      	movs	r3, #80	; 0x50
 8002e78:	723b      	strb	r3, [r7, #8]
  parameter[9] = 0x36;
 8002e7a:	2336      	movs	r3, #54	; 0x36
 8002e7c:	727b      	strb	r3, [r7, #9]
  parameter[10] = 0x13;
 8002e7e:	2313      	movs	r3, #19
 8002e80:	72bb      	strb	r3, [r7, #10]
  parameter[11] = 0x14;
 8002e82:	2314      	movs	r3, #20
 8002e84:	72fb      	strb	r3, [r7, #11]
  parameter[12] = 0x29;
 8002e86:	2329      	movs	r3, #41	; 0x29
 8002e88:	733b      	strb	r3, [r7, #12]
  parameter[13] = 0x2D;
 8002e8a:	232d      	movs	r3, #45	; 0x2d
 8002e8c:	737b      	strb	r3, [r7, #13]
  ST7789H2_WriteReg(ST7789H2_PV_GAMMA_CTRL, parameter, 14); 
 8002e8e:	463b      	mov	r3, r7
 8002e90:	220e      	movs	r2, #14
 8002e92:	4619      	mov	r1, r3
 8002e94:	20e0      	movs	r0, #224	; 0xe0
 8002e96:	f000 f83e 	bl	8002f16 <ST7789H2_WriteReg>
  
  /* Negative Voltage Gamma Control */     
  parameter[0] = 0xD0;
 8002e9a:	23d0      	movs	r3, #208	; 0xd0
 8002e9c:	703b      	strb	r3, [r7, #0]
  parameter[1] = 0x08;
 8002e9e:	2308      	movs	r3, #8
 8002ea0:	707b      	strb	r3, [r7, #1]
  parameter[2] = 0x10;
 8002ea2:	2310      	movs	r3, #16
 8002ea4:	70bb      	strb	r3, [r7, #2]
  parameter[3] = 0x08;
 8002ea6:	2308      	movs	r3, #8
 8002ea8:	70fb      	strb	r3, [r7, #3]
  parameter[4] = 0x06;
 8002eaa:	2306      	movs	r3, #6
 8002eac:	713b      	strb	r3, [r7, #4]
  parameter[5] = 0x06;
 8002eae:	2306      	movs	r3, #6
 8002eb0:	717b      	strb	r3, [r7, #5]
  parameter[6] = 0x39;
 8002eb2:	2339      	movs	r3, #57	; 0x39
 8002eb4:	71bb      	strb	r3, [r7, #6]
  parameter[7] = 0x44;
 8002eb6:	2344      	movs	r3, #68	; 0x44
 8002eb8:	71fb      	strb	r3, [r7, #7]
  parameter[8] = 0x51;
 8002eba:	2351      	movs	r3, #81	; 0x51
 8002ebc:	723b      	strb	r3, [r7, #8]
  parameter[9] = 0x0B;
 8002ebe:	230b      	movs	r3, #11
 8002ec0:	727b      	strb	r3, [r7, #9]
  parameter[10] = 0x16;
 8002ec2:	2316      	movs	r3, #22
 8002ec4:	72bb      	strb	r3, [r7, #10]
  parameter[11] = 0x14;
 8002ec6:	2314      	movs	r3, #20
 8002ec8:	72fb      	strb	r3, [r7, #11]
  parameter[12] = 0x2F;
 8002eca:	232f      	movs	r3, #47	; 0x2f
 8002ecc:	733b      	strb	r3, [r7, #12]
  parameter[13] = 0x31;
 8002ece:	2331      	movs	r3, #49	; 0x31
 8002ed0:	737b      	strb	r3, [r7, #13]
  ST7789H2_WriteReg(ST7789H2_NV_GAMMA_CTRL, parameter, 14); 
 8002ed2:	463b      	mov	r3, r7
 8002ed4:	220e      	movs	r2, #14
 8002ed6:	4619      	mov	r1, r3
 8002ed8:	20e1      	movs	r0, #225	; 0xe1
 8002eda:	f000 f81c 	bl	8002f16 <ST7789H2_WriteReg>
  
  /* Display ON command */
  ST7789H2_DisplayOn();  
 8002ede:	f000 f80c 	bl	8002efa <ST7789H2_DisplayOn>
  
  /* Tearing Effect Line On: Option (00h:VSYNC Interface OFF, 01h:VSYNC Interface ON) */
  parameter[0] = 0x00;     
 8002ee2:	2300      	movs	r3, #0
 8002ee4:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_TEARING_EFFECT, parameter, 1);
 8002ee6:	463b      	mov	r3, r7
 8002ee8:	2201      	movs	r2, #1
 8002eea:	4619      	mov	r1, r3
 8002eec:	2035      	movs	r0, #53	; 0x35
 8002eee:	f000 f812 	bl	8002f16 <ST7789H2_WriteReg>

}
 8002ef2:	bf00      	nop
 8002ef4:	3710      	adds	r7, #16
 8002ef6:	46bd      	mov	sp, r7
 8002ef8:	bd80      	pop	{r7, pc}

08002efa <ST7789H2_DisplayOn>:
  * @brief  Enables the Display.
  * @param  None
  * @retval None
  */
void ST7789H2_DisplayOn(void)
{
 8002efa:	b580      	push	{r7, lr}
 8002efc:	af00      	add	r7, sp, #0
  /* Display ON command */
  ST7789H2_WriteReg(ST7789H2_DISPLAY_ON, (uint8_t*)NULL, 0);
 8002efe:	2200      	movs	r2, #0
 8002f00:	2100      	movs	r1, #0
 8002f02:	2029      	movs	r0, #41	; 0x29
 8002f04:	f000 f807 	bl	8002f16 <ST7789H2_WriteReg>

  /* Sleep Out command */
  ST7789H2_WriteReg(ST7789H2_SLEEP_OUT, (uint8_t*)NULL, 0);
 8002f08:	2200      	movs	r2, #0
 8002f0a:	2100      	movs	r1, #0
 8002f0c:	2011      	movs	r0, #17
 8002f0e:	f000 f802 	bl	8002f16 <ST7789H2_WriteReg>
}
 8002f12:	bf00      	nop
 8002f14:	bd80      	pop	{r7, pc}

08002f16 <ST7789H2_WriteReg>:
  * @param  Parameters: pointer on parameters value (if command uses one or several parameters).
  * @param  NbParameters: number of command parameters (0 if no parameter)
  * @retval None
  */
void ST7789H2_WriteReg(uint8_t Command, uint8_t *Parameters, uint8_t NbParameters)
{
 8002f16:	b580      	push	{r7, lr}
 8002f18:	b084      	sub	sp, #16
 8002f1a:	af00      	add	r7, sp, #0
 8002f1c:	4603      	mov	r3, r0
 8002f1e:	6039      	str	r1, [r7, #0]
 8002f20:	71fb      	strb	r3, [r7, #7]
 8002f22:	4613      	mov	r3, r2
 8002f24:	71bb      	strb	r3, [r7, #6]
  uint8_t   i;

  /* Send command */
  LCD_IO_WriteReg(Command);
 8002f26:	79fb      	ldrb	r3, [r7, #7]
 8002f28:	4618      	mov	r0, r3
 8002f2a:	f7fd ffb3 	bl	8000e94 <LCD_IO_WriteReg>
  
  /* Send command's parameters if any */
  for (i=0; i<NbParameters; i++)
 8002f2e:	2300      	movs	r3, #0
 8002f30:	73fb      	strb	r3, [r7, #15]
 8002f32:	e00a      	b.n	8002f4a <ST7789H2_WriteReg+0x34>
  {
    LCD_IO_WriteData(Parameters[i]);
 8002f34:	7bfb      	ldrb	r3, [r7, #15]
 8002f36:	683a      	ldr	r2, [r7, #0]
 8002f38:	4413      	add	r3, r2
 8002f3a:	781b      	ldrb	r3, [r3, #0]
 8002f3c:	b29b      	uxth	r3, r3
 8002f3e:	4618      	mov	r0, r3
 8002f40:	f7fd ffc6 	bl	8000ed0 <LCD_IO_WriteData>
  for (i=0; i<NbParameters; i++)
 8002f44:	7bfb      	ldrb	r3, [r7, #15]
 8002f46:	3301      	adds	r3, #1
 8002f48:	73fb      	strb	r3, [r7, #15]
 8002f4a:	7bfa      	ldrb	r2, [r7, #15]
 8002f4c:	79bb      	ldrb	r3, [r7, #6]
 8002f4e:	429a      	cmp	r2, r3
 8002f50:	d3f0      	bcc.n	8002f34 <ST7789H2_WriteReg+0x1e>
  }
}
 8002f52:	bf00      	nop
 8002f54:	3710      	adds	r7, #16
 8002f56:	46bd      	mov	sp, r7
 8002f58:	bd80      	pop	{r7, pc}
	...

08002f5c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002f5c:	b580      	push	{r7, lr}
 8002f5e:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8002f60:	4b0e      	ldr	r3, [pc, #56]	; (8002f9c <HAL_Init+0x40>)
 8002f62:	681b      	ldr	r3, [r3, #0]
 8002f64:	4a0d      	ldr	r2, [pc, #52]	; (8002f9c <HAL_Init+0x40>)
 8002f66:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002f6a:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8002f6c:	4b0b      	ldr	r3, [pc, #44]	; (8002f9c <HAL_Init+0x40>)
 8002f6e:	681b      	ldr	r3, [r3, #0]
 8002f70:	4a0a      	ldr	r2, [pc, #40]	; (8002f9c <HAL_Init+0x40>)
 8002f72:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002f76:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002f78:	4b08      	ldr	r3, [pc, #32]	; (8002f9c <HAL_Init+0x40>)
 8002f7a:	681b      	ldr	r3, [r3, #0]
 8002f7c:	4a07      	ldr	r2, [pc, #28]	; (8002f9c <HAL_Init+0x40>)
 8002f7e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002f82:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8002f84:	2003      	movs	r0, #3
 8002f86:	f000 f94d 	bl	8003224 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8002f8a:	2000      	movs	r0, #0
 8002f8c:	f000 f808 	bl	8002fa0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8002f90:	f7fe fdf6 	bl	8001b80 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8002f94:	2300      	movs	r3, #0
}
 8002f96:	4618      	mov	r0, r3
 8002f98:	bd80      	pop	{r7, pc}
 8002f9a:	bf00      	nop
 8002f9c:	40023c00 	.word	0x40023c00

08002fa0 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002fa0:	b580      	push	{r7, lr}
 8002fa2:	b082      	sub	sp, #8
 8002fa4:	af00      	add	r7, sp, #0
 8002fa6:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002fa8:	4b12      	ldr	r3, [pc, #72]	; (8002ff4 <HAL_InitTick+0x54>)
 8002faa:	681a      	ldr	r2, [r3, #0]
 8002fac:	4b12      	ldr	r3, [pc, #72]	; (8002ff8 <HAL_InitTick+0x58>)
 8002fae:	781b      	ldrb	r3, [r3, #0]
 8002fb0:	4619      	mov	r1, r3
 8002fb2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002fb6:	fbb3 f3f1 	udiv	r3, r3, r1
 8002fba:	fbb2 f3f3 	udiv	r3, r2, r3
 8002fbe:	4618      	mov	r0, r3
 8002fc0:	f000 f965 	bl	800328e <HAL_SYSTICK_Config>
 8002fc4:	4603      	mov	r3, r0
 8002fc6:	2b00      	cmp	r3, #0
 8002fc8:	d001      	beq.n	8002fce <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8002fca:	2301      	movs	r3, #1
 8002fcc:	e00e      	b.n	8002fec <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	2b0f      	cmp	r3, #15
 8002fd2:	d80a      	bhi.n	8002fea <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002fd4:	2200      	movs	r2, #0
 8002fd6:	6879      	ldr	r1, [r7, #4]
 8002fd8:	f04f 30ff 	mov.w	r0, #4294967295
 8002fdc:	f000 f92d 	bl	800323a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002fe0:	4a06      	ldr	r2, [pc, #24]	; (8002ffc <HAL_InitTick+0x5c>)
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8002fe6:	2300      	movs	r3, #0
 8002fe8:	e000      	b.n	8002fec <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8002fea:	2301      	movs	r3, #1
}
 8002fec:	4618      	mov	r0, r3
 8002fee:	3708      	adds	r7, #8
 8002ff0:	46bd      	mov	sp, r7
 8002ff2:	bd80      	pop	{r7, pc}
 8002ff4:	20000004 	.word	0x20000004
 8002ff8:	2000000c 	.word	0x2000000c
 8002ffc:	20000008 	.word	0x20000008

08003000 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8003000:	b480      	push	{r7}
 8003002:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8003004:	4b06      	ldr	r3, [pc, #24]	; (8003020 <HAL_IncTick+0x20>)
 8003006:	781b      	ldrb	r3, [r3, #0]
 8003008:	461a      	mov	r2, r3
 800300a:	4b06      	ldr	r3, [pc, #24]	; (8003024 <HAL_IncTick+0x24>)
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	4413      	add	r3, r2
 8003010:	4a04      	ldr	r2, [pc, #16]	; (8003024 <HAL_IncTick+0x24>)
 8003012:	6013      	str	r3, [r2, #0]
}
 8003014:	bf00      	nop
 8003016:	46bd      	mov	sp, r7
 8003018:	f85d 7b04 	ldr.w	r7, [sp], #4
 800301c:	4770      	bx	lr
 800301e:	bf00      	nop
 8003020:	2000000c 	.word	0x2000000c
 8003024:	20027004 	.word	0x20027004

08003028 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8003028:	b480      	push	{r7}
 800302a:	af00      	add	r7, sp, #0
  return uwTick;
 800302c:	4b03      	ldr	r3, [pc, #12]	; (800303c <HAL_GetTick+0x14>)
 800302e:	681b      	ldr	r3, [r3, #0]
}
 8003030:	4618      	mov	r0, r3
 8003032:	46bd      	mov	sp, r7
 8003034:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003038:	4770      	bx	lr
 800303a:	bf00      	nop
 800303c:	20027004 	.word	0x20027004

08003040 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003040:	b580      	push	{r7, lr}
 8003042:	b084      	sub	sp, #16
 8003044:	af00      	add	r7, sp, #0
 8003046:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8003048:	f7ff ffee 	bl	8003028 <HAL_GetTick>
 800304c:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003052:	68fb      	ldr	r3, [r7, #12]
 8003054:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003058:	d005      	beq.n	8003066 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 800305a:	4b09      	ldr	r3, [pc, #36]	; (8003080 <HAL_Delay+0x40>)
 800305c:	781b      	ldrb	r3, [r3, #0]
 800305e:	461a      	mov	r2, r3
 8003060:	68fb      	ldr	r3, [r7, #12]
 8003062:	4413      	add	r3, r2
 8003064:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003066:	bf00      	nop
 8003068:	f7ff ffde 	bl	8003028 <HAL_GetTick>
 800306c:	4602      	mov	r2, r0
 800306e:	68bb      	ldr	r3, [r7, #8]
 8003070:	1ad3      	subs	r3, r2, r3
 8003072:	68fa      	ldr	r2, [r7, #12]
 8003074:	429a      	cmp	r2, r3
 8003076:	d8f7      	bhi.n	8003068 <HAL_Delay+0x28>
  {
  }
}
 8003078:	bf00      	nop
 800307a:	3710      	adds	r7, #16
 800307c:	46bd      	mov	sp, r7
 800307e:	bd80      	pop	{r7, pc}
 8003080:	2000000c 	.word	0x2000000c

08003084 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003084:	b480      	push	{r7}
 8003086:	b085      	sub	sp, #20
 8003088:	af00      	add	r7, sp, #0
 800308a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	f003 0307 	and.w	r3, r3, #7
 8003092:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003094:	4b0c      	ldr	r3, [pc, #48]	; (80030c8 <__NVIC_SetPriorityGrouping+0x44>)
 8003096:	68db      	ldr	r3, [r3, #12]
 8003098:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800309a:	68ba      	ldr	r2, [r7, #8]
 800309c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80030a0:	4013      	ands	r3, r2
 80030a2:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80030a4:	68fb      	ldr	r3, [r7, #12]
 80030a6:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80030a8:	68bb      	ldr	r3, [r7, #8]
 80030aa:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80030ac:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80030b0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80030b4:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80030b6:	4a04      	ldr	r2, [pc, #16]	; (80030c8 <__NVIC_SetPriorityGrouping+0x44>)
 80030b8:	68bb      	ldr	r3, [r7, #8]
 80030ba:	60d3      	str	r3, [r2, #12]
}
 80030bc:	bf00      	nop
 80030be:	3714      	adds	r7, #20
 80030c0:	46bd      	mov	sp, r7
 80030c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030c6:	4770      	bx	lr
 80030c8:	e000ed00 	.word	0xe000ed00

080030cc <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80030cc:	b480      	push	{r7}
 80030ce:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80030d0:	4b04      	ldr	r3, [pc, #16]	; (80030e4 <__NVIC_GetPriorityGrouping+0x18>)
 80030d2:	68db      	ldr	r3, [r3, #12]
 80030d4:	0a1b      	lsrs	r3, r3, #8
 80030d6:	f003 0307 	and.w	r3, r3, #7
}
 80030da:	4618      	mov	r0, r3
 80030dc:	46bd      	mov	sp, r7
 80030de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030e2:	4770      	bx	lr
 80030e4:	e000ed00 	.word	0xe000ed00

080030e8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80030e8:	b480      	push	{r7}
 80030ea:	b083      	sub	sp, #12
 80030ec:	af00      	add	r7, sp, #0
 80030ee:	4603      	mov	r3, r0
 80030f0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80030f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80030f6:	2b00      	cmp	r3, #0
 80030f8:	db0b      	blt.n	8003112 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80030fa:	79fb      	ldrb	r3, [r7, #7]
 80030fc:	f003 021f 	and.w	r2, r3, #31
 8003100:	4907      	ldr	r1, [pc, #28]	; (8003120 <__NVIC_EnableIRQ+0x38>)
 8003102:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003106:	095b      	lsrs	r3, r3, #5
 8003108:	2001      	movs	r0, #1
 800310a:	fa00 f202 	lsl.w	r2, r0, r2
 800310e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8003112:	bf00      	nop
 8003114:	370c      	adds	r7, #12
 8003116:	46bd      	mov	sp, r7
 8003118:	f85d 7b04 	ldr.w	r7, [sp], #4
 800311c:	4770      	bx	lr
 800311e:	bf00      	nop
 8003120:	e000e100 	.word	0xe000e100

08003124 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003124:	b480      	push	{r7}
 8003126:	b083      	sub	sp, #12
 8003128:	af00      	add	r7, sp, #0
 800312a:	4603      	mov	r3, r0
 800312c:	6039      	str	r1, [r7, #0]
 800312e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003130:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003134:	2b00      	cmp	r3, #0
 8003136:	db0a      	blt.n	800314e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003138:	683b      	ldr	r3, [r7, #0]
 800313a:	b2da      	uxtb	r2, r3
 800313c:	490c      	ldr	r1, [pc, #48]	; (8003170 <__NVIC_SetPriority+0x4c>)
 800313e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003142:	0112      	lsls	r2, r2, #4
 8003144:	b2d2      	uxtb	r2, r2
 8003146:	440b      	add	r3, r1
 8003148:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800314c:	e00a      	b.n	8003164 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800314e:	683b      	ldr	r3, [r7, #0]
 8003150:	b2da      	uxtb	r2, r3
 8003152:	4908      	ldr	r1, [pc, #32]	; (8003174 <__NVIC_SetPriority+0x50>)
 8003154:	79fb      	ldrb	r3, [r7, #7]
 8003156:	f003 030f 	and.w	r3, r3, #15
 800315a:	3b04      	subs	r3, #4
 800315c:	0112      	lsls	r2, r2, #4
 800315e:	b2d2      	uxtb	r2, r2
 8003160:	440b      	add	r3, r1
 8003162:	761a      	strb	r2, [r3, #24]
}
 8003164:	bf00      	nop
 8003166:	370c      	adds	r7, #12
 8003168:	46bd      	mov	sp, r7
 800316a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800316e:	4770      	bx	lr
 8003170:	e000e100 	.word	0xe000e100
 8003174:	e000ed00 	.word	0xe000ed00

08003178 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8003178:	b480      	push	{r7}
 800317a:	b089      	sub	sp, #36	; 0x24
 800317c:	af00      	add	r7, sp, #0
 800317e:	60f8      	str	r0, [r7, #12]
 8003180:	60b9      	str	r1, [r7, #8]
 8003182:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8003184:	68fb      	ldr	r3, [r7, #12]
 8003186:	f003 0307 	and.w	r3, r3, #7
 800318a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800318c:	69fb      	ldr	r3, [r7, #28]
 800318e:	f1c3 0307 	rsb	r3, r3, #7
 8003192:	2b04      	cmp	r3, #4
 8003194:	bf28      	it	cs
 8003196:	2304      	movcs	r3, #4
 8003198:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800319a:	69fb      	ldr	r3, [r7, #28]
 800319c:	3304      	adds	r3, #4
 800319e:	2b06      	cmp	r3, #6
 80031a0:	d902      	bls.n	80031a8 <NVIC_EncodePriority+0x30>
 80031a2:	69fb      	ldr	r3, [r7, #28]
 80031a4:	3b03      	subs	r3, #3
 80031a6:	e000      	b.n	80031aa <NVIC_EncodePriority+0x32>
 80031a8:	2300      	movs	r3, #0
 80031aa:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80031ac:	f04f 32ff 	mov.w	r2, #4294967295
 80031b0:	69bb      	ldr	r3, [r7, #24]
 80031b2:	fa02 f303 	lsl.w	r3, r2, r3
 80031b6:	43da      	mvns	r2, r3
 80031b8:	68bb      	ldr	r3, [r7, #8]
 80031ba:	401a      	ands	r2, r3
 80031bc:	697b      	ldr	r3, [r7, #20]
 80031be:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80031c0:	f04f 31ff 	mov.w	r1, #4294967295
 80031c4:	697b      	ldr	r3, [r7, #20]
 80031c6:	fa01 f303 	lsl.w	r3, r1, r3
 80031ca:	43d9      	mvns	r1, r3
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80031d0:	4313      	orrs	r3, r2
         );
}
 80031d2:	4618      	mov	r0, r3
 80031d4:	3724      	adds	r7, #36	; 0x24
 80031d6:	46bd      	mov	sp, r7
 80031d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031dc:	4770      	bx	lr
	...

080031e0 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80031e0:	b580      	push	{r7, lr}
 80031e2:	b082      	sub	sp, #8
 80031e4:	af00      	add	r7, sp, #0
 80031e6:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	3b01      	subs	r3, #1
 80031ec:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80031f0:	d301      	bcc.n	80031f6 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 80031f2:	2301      	movs	r3, #1
 80031f4:	e00f      	b.n	8003216 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80031f6:	4a0a      	ldr	r2, [pc, #40]	; (8003220 <SysTick_Config+0x40>)
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	3b01      	subs	r3, #1
 80031fc:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80031fe:	210f      	movs	r1, #15
 8003200:	f04f 30ff 	mov.w	r0, #4294967295
 8003204:	f7ff ff8e 	bl	8003124 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003208:	4b05      	ldr	r3, [pc, #20]	; (8003220 <SysTick_Config+0x40>)
 800320a:	2200      	movs	r2, #0
 800320c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800320e:	4b04      	ldr	r3, [pc, #16]	; (8003220 <SysTick_Config+0x40>)
 8003210:	2207      	movs	r2, #7
 8003212:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003214:	2300      	movs	r3, #0
}
 8003216:	4618      	mov	r0, r3
 8003218:	3708      	adds	r7, #8
 800321a:	46bd      	mov	sp, r7
 800321c:	bd80      	pop	{r7, pc}
 800321e:	bf00      	nop
 8003220:	e000e010 	.word	0xe000e010

08003224 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003224:	b580      	push	{r7, lr}
 8003226:	b082      	sub	sp, #8
 8003228:	af00      	add	r7, sp, #0
 800322a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 800322c:	6878      	ldr	r0, [r7, #4]
 800322e:	f7ff ff29 	bl	8003084 <__NVIC_SetPriorityGrouping>
}
 8003232:	bf00      	nop
 8003234:	3708      	adds	r7, #8
 8003236:	46bd      	mov	sp, r7
 8003238:	bd80      	pop	{r7, pc}

0800323a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800323a:	b580      	push	{r7, lr}
 800323c:	b086      	sub	sp, #24
 800323e:	af00      	add	r7, sp, #0
 8003240:	4603      	mov	r3, r0
 8003242:	60b9      	str	r1, [r7, #8]
 8003244:	607a      	str	r2, [r7, #4]
 8003246:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8003248:	2300      	movs	r3, #0
 800324a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 800324c:	f7ff ff3e 	bl	80030cc <__NVIC_GetPriorityGrouping>
 8003250:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8003252:	687a      	ldr	r2, [r7, #4]
 8003254:	68b9      	ldr	r1, [r7, #8]
 8003256:	6978      	ldr	r0, [r7, #20]
 8003258:	f7ff ff8e 	bl	8003178 <NVIC_EncodePriority>
 800325c:	4602      	mov	r2, r0
 800325e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003262:	4611      	mov	r1, r2
 8003264:	4618      	mov	r0, r3
 8003266:	f7ff ff5d 	bl	8003124 <__NVIC_SetPriority>
}
 800326a:	bf00      	nop
 800326c:	3718      	adds	r7, #24
 800326e:	46bd      	mov	sp, r7
 8003270:	bd80      	pop	{r7, pc}

08003272 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003272:	b580      	push	{r7, lr}
 8003274:	b082      	sub	sp, #8
 8003276:	af00      	add	r7, sp, #0
 8003278:	4603      	mov	r3, r0
 800327a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 800327c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003280:	4618      	mov	r0, r3
 8003282:	f7ff ff31 	bl	80030e8 <__NVIC_EnableIRQ>
}
 8003286:	bf00      	nop
 8003288:	3708      	adds	r7, #8
 800328a:	46bd      	mov	sp, r7
 800328c:	bd80      	pop	{r7, pc}

0800328e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800328e:	b580      	push	{r7, lr}
 8003290:	b082      	sub	sp, #8
 8003292:	af00      	add	r7, sp, #0
 8003294:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8003296:	6878      	ldr	r0, [r7, #4]
 8003298:	f7ff ffa2 	bl	80031e0 <SysTick_Config>
 800329c:	4603      	mov	r3, r0
}
 800329e:	4618      	mov	r0, r3
 80032a0:	3708      	adds	r7, #8
 80032a2:	46bd      	mov	sp, r7
 80032a4:	bd80      	pop	{r7, pc}

080032a6 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80032a6:	b580      	push	{r7, lr}
 80032a8:	b082      	sub	sp, #8
 80032aa:	af00      	add	r7, sp, #0
 80032ac:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	2b00      	cmp	r3, #0
 80032b2:	d101      	bne.n	80032b8 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 80032b4:	2301      	movs	r3, #1
 80032b6:	e00e      	b.n	80032d6 <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	795b      	ldrb	r3, [r3, #5]
 80032bc:	b2db      	uxtb	r3, r3
 80032be:	2b00      	cmp	r3, #0
 80032c0:	d105      	bne.n	80032ce <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	2200      	movs	r2, #0
 80032c6:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80032c8:	6878      	ldr	r0, [r7, #4]
 80032ca:	f7fe fc81 	bl	8001bd0 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	2201      	movs	r2, #1
 80032d2:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 80032d4:	2300      	movs	r3, #0
}
 80032d6:	4618      	mov	r0, r3
 80032d8:	3708      	adds	r7, #8
 80032da:	46bd      	mov	sp, r7
 80032dc:	bd80      	pop	{r7, pc}

080032de <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 80032de:	b580      	push	{r7, lr}
 80032e0:	b082      	sub	sp, #8
 80032e2:	af00      	add	r7, sp, #0
 80032e4:	6078      	str	r0, [r7, #4]
  /* Check DAC handle */
  if(hdac == NULL)
 80032e6:	687b      	ldr	r3, [r7, #4]
 80032e8:	2b00      	cmp	r3, #0
 80032ea:	d101      	bne.n	80032f0 <HAL_DAC_Init+0x12>
  {
     return HAL_ERROR;
 80032ec:	2301      	movs	r3, #1
 80032ee:	e014      	b.n	800331a <HAL_DAC_Init+0x3c>
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	791b      	ldrb	r3, [r3, #4]
 80032f4:	b2db      	uxtb	r3, r3
 80032f6:	2b00      	cmp	r3, #0
 80032f8:	d105      	bne.n	8003306 <HAL_DAC_Init+0x28>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	2200      	movs	r2, #0
 80032fe:	715a      	strb	r2, [r3, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 8003300:	6878      	ldr	r0, [r7, #4]
 8003302:	f7fe fc87 	bl	8001c14 <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	2202      	movs	r2, #2
 800330a:	711a      	strb	r2, [r3, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	2200      	movs	r2, #0
 8003310:	611a      	str	r2, [r3, #16]
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	2201      	movs	r2, #1
 8003316:	711a      	strb	r2, [r3, #4]
  
  /* Return function status */
  return HAL_OK;
 8003318:	2300      	movs	r3, #0
}
 800331a:	4618      	mov	r0, r3
 800331c:	3708      	adds	r7, #8
 800331e:	46bd      	mov	sp, r7
 8003320:	bd80      	pop	{r7, pc}

08003322 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 8003322:	b480      	push	{r7}
 8003324:	b087      	sub	sp, #28
 8003326:	af00      	add	r7, sp, #0
 8003328:	60f8      	str	r0, [r7, #12]
 800332a:	60b9      	str	r1, [r7, #8]
 800332c:	607a      	str	r2, [r7, #4]
  uint32_t tmpreg1 = 0U, tmpreg2 = 0U;
 800332e:	2300      	movs	r3, #0
 8003330:	617b      	str	r3, [r7, #20]
 8003332:	2300      	movs	r3, #0
 8003334:	613b      	str	r3, [r7, #16]
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 8003336:	68fb      	ldr	r3, [r7, #12]
 8003338:	795b      	ldrb	r3, [r3, #5]
 800333a:	2b01      	cmp	r3, #1
 800333c:	d101      	bne.n	8003342 <HAL_DAC_ConfigChannel+0x20>
 800333e:	2302      	movs	r3, #2
 8003340:	e036      	b.n	80033b0 <HAL_DAC_ConfigChannel+0x8e>
 8003342:	68fb      	ldr	r3, [r7, #12]
 8003344:	2201      	movs	r2, #1
 8003346:	715a      	strb	r2, [r3, #5]
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 8003348:	68fb      	ldr	r3, [r7, #12]
 800334a:	2202      	movs	r2, #2
 800334c:	711a      	strb	r2, [r3, #4]
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 800334e:	68fb      	ldr	r3, [r7, #12]
 8003350:	681b      	ldr	r3, [r3, #0]
 8003352:	681b      	ldr	r3, [r3, #0]
 8003354:	617b      	str	r3, [r7, #20]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 8003356:	f640 72fe 	movw	r2, #4094	; 0xffe
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	fa02 f303 	lsl.w	r3, r2, r3
 8003360:	43db      	mvns	r3, r3
 8003362:	697a      	ldr	r2, [r7, #20]
 8003364:	4013      	ands	r3, r2
 8003366:	617b      	str	r3, [r7, #20]
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 8003368:	68bb      	ldr	r3, [r7, #8]
 800336a:	681a      	ldr	r2, [r3, #0]
 800336c:	68bb      	ldr	r3, [r7, #8]
 800336e:	685b      	ldr	r3, [r3, #4]
 8003370:	4313      	orrs	r3, r2
 8003372:	613b      	str	r3, [r7, #16]
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 8003374:	693a      	ldr	r2, [r7, #16]
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	fa02 f303 	lsl.w	r3, r2, r3
 800337c:	697a      	ldr	r2, [r7, #20]
 800337e:	4313      	orrs	r3, r2
 8003380:	617b      	str	r3, [r7, #20]
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 8003382:	68fb      	ldr	r3, [r7, #12]
 8003384:	681b      	ldr	r3, [r3, #0]
 8003386:	697a      	ldr	r2, [r7, #20]
 8003388:	601a      	str	r2, [r3, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 800338a:	68fb      	ldr	r3, [r7, #12]
 800338c:	681b      	ldr	r3, [r3, #0]
 800338e:	6819      	ldr	r1, [r3, #0]
 8003390:	22c0      	movs	r2, #192	; 0xc0
 8003392:	687b      	ldr	r3, [r7, #4]
 8003394:	fa02 f303 	lsl.w	r3, r2, r3
 8003398:	43da      	mvns	r2, r3
 800339a:	68fb      	ldr	r3, [r7, #12]
 800339c:	681b      	ldr	r3, [r3, #0]
 800339e:	400a      	ands	r2, r1
 80033a0:	601a      	str	r2, [r3, #0]
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80033a2:	68fb      	ldr	r3, [r7, #12]
 80033a4:	2201      	movs	r2, #1
 80033a6:	711a      	strb	r2, [r3, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80033a8:	68fb      	ldr	r3, [r7, #12]
 80033aa:	2200      	movs	r2, #0
 80033ac:	715a      	strb	r2, [r3, #5]
  
  /* Return function status */
  return HAL_OK;
 80033ae:	2300      	movs	r3, #0
}
 80033b0:	4618      	mov	r0, r3
 80033b2:	371c      	adds	r7, #28
 80033b4:	46bd      	mov	sp, r7
 80033b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033ba:	4770      	bx	lr

080033bc <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 80033bc:	b480      	push	{r7}
 80033be:	b083      	sub	sp, #12
 80033c0:	af00      	add	r7, sp, #0
 80033c2:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80033ca:	b2db      	uxtb	r3, r3
 80033cc:	2b02      	cmp	r3, #2
 80033ce:	d004      	beq.n	80033da <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	2280      	movs	r2, #128	; 0x80
 80033d4:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 80033d6:	2301      	movs	r3, #1
 80033d8:	e00c      	b.n	80033f4 <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 80033da:	687b      	ldr	r3, [r7, #4]
 80033dc:	2205      	movs	r2, #5
 80033de:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	681b      	ldr	r3, [r3, #0]
 80033e6:	681a      	ldr	r2, [r3, #0]
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	681b      	ldr	r3, [r3, #0]
 80033ec:	f022 0201 	bic.w	r2, r2, #1
 80033f0:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 80033f2:	2300      	movs	r3, #0
}
 80033f4:	4618      	mov	r0, r3
 80033f6:	370c      	adds	r7, #12
 80033f8:	46bd      	mov	sp, r7
 80033fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033fe:	4770      	bx	lr

08003400 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8003400:	b580      	push	{r7, lr}
 8003402:	b082      	sub	sp, #8
 8003404:	af00      	add	r7, sp, #0
 8003406:	6078      	str	r0, [r7, #4]
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	2b00      	cmp	r3, #0
 800340c:	d101      	bne.n	8003412 <HAL_DMA2D_Init+0x12>
  {
     return HAL_ERROR;
 800340e:	2301      	movs	r3, #1
 8003410:	e03b      	b.n	800348a <HAL_DMA2D_Init+0x8a>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8003418:	b2db      	uxtb	r3, r3
 800341a:	2b00      	cmp	r3, #0
 800341c:	d106      	bne.n	800342c <HAL_DMA2D_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800341e:	687b      	ldr	r3, [r7, #4]
 8003420:	2200      	movs	r2, #0
 8003422:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8003426:	6878      	ldr	r0, [r7, #4]
 8003428:	f7fe fc38 	bl	8001c9c <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800342c:	687b      	ldr	r3, [r7, #4]
 800342e:	2202      	movs	r2, #2
 8003430:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003434:	687b      	ldr	r3, [r7, #4]
 8003436:	681b      	ldr	r3, [r3, #0]
 8003438:	681b      	ldr	r3, [r3, #0]
 800343a:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	685a      	ldr	r2, [r3, #4]
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	681b      	ldr	r3, [r3, #0]
 8003446:	430a      	orrs	r2, r1
 8003448:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	681b      	ldr	r3, [r3, #0]
 800344e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003450:	f023 0107 	bic.w	r1, r3, #7
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	689a      	ldr	r2, [r3, #8]
 8003458:	687b      	ldr	r3, [r7, #4]
 800345a:	681b      	ldr	r3, [r3, #0]
 800345c:	430a      	orrs	r2, r1
 800345e:	635a      	str	r2, [r3, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8003460:	687b      	ldr	r3, [r7, #4]
 8003462:	681b      	ldr	r3, [r3, #0]
 8003464:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003466:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800346a:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800346e:	687a      	ldr	r2, [r7, #4]
 8003470:	68d1      	ldr	r1, [r2, #12]
 8003472:	687a      	ldr	r2, [r7, #4]
 8003474:	6812      	ldr	r2, [r2, #0]
 8003476:	430b      	orrs	r3, r1
 8003478:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800347a:	687b      	ldr	r3, [r7, #4]
 800347c:	2200      	movs	r2, #0
 800347e:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	2201      	movs	r2, #1
 8003484:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  return HAL_OK;
 8003488:	2300      	movs	r3, #0
}
 800348a:	4618      	mov	r0, r3
 800348c:	3708      	adds	r7, #8
 800348e:	46bd      	mov	sp, r7
 8003490:	bd80      	pop	{r7, pc}
	...

08003494 <HAL_DMA2D_DeInit>:
  *                 the configuration information for the DMA2D.
  * @retval None
  */

HAL_StatusTypeDef HAL_DMA2D_DeInit(DMA2D_HandleTypeDef *hdma2d)
{
 8003494:	b580      	push	{r7, lr}
 8003496:	b082      	sub	sp, #8
 8003498:	af00      	add	r7, sp, #0
 800349a:	6078      	str	r0, [r7, #4]

  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	2b00      	cmp	r3, #0
 80034a0:	d101      	bne.n	80034a6 <HAL_DMA2D_DeInit+0x12>
  {
     return HAL_ERROR;
 80034a2:	2301      	movs	r3, #1
 80034a4:	e05f      	b.n	8003566 <HAL_DMA2D_DeInit+0xd2>
  }

  /* Before aborting any DMA2D transfer or CLUT loading, check
     first whether or not DMA2D clock is enabled */
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 80034a6:	4b32      	ldr	r3, [pc, #200]	; (8003570 <HAL_DMA2D_DeInit+0xdc>)
 80034a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034aa:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80034ae:	2b00      	cmp	r3, #0
 80034b0:	d02e      	beq.n	8003510 <HAL_DMA2D_DeInit+0x7c>
  {
    /* Abort DMA2D transfer if any */
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 80034b2:	687b      	ldr	r3, [r7, #4]
 80034b4:	681b      	ldr	r3, [r3, #0]
 80034b6:	681b      	ldr	r3, [r3, #0]
 80034b8:	f003 0301 	and.w	r3, r3, #1
 80034bc:	2b01      	cmp	r3, #1
 80034be:	d107      	bne.n	80034d0 <HAL_DMA2D_DeInit+0x3c>
    {
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 80034c0:	6878      	ldr	r0, [r7, #4]
 80034c2:	f000 f8c1 	bl	8003648 <HAL_DMA2D_Abort>
 80034c6:	4603      	mov	r3, r0
 80034c8:	2b00      	cmp	r3, #0
 80034ca:	d021      	beq.n	8003510 <HAL_DMA2D_DeInit+0x7c>
      {
        /* Issue when aborting DMA2D transfer */
        return HAL_ERROR;
 80034cc:	2301      	movs	r3, #1
 80034ce:	e04a      	b.n	8003566 <HAL_DMA2D_DeInit+0xd2>
      }
    }
    else
    {
      /* Abort background CLUT loading if any */
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	681b      	ldr	r3, [r3, #0]
 80034d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80034d6:	f003 0320 	and.w	r3, r3, #32
 80034da:	2b20      	cmp	r3, #32
 80034dc:	d108      	bne.n	80034f0 <HAL_DMA2D_DeInit+0x5c>
      {
        if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 0U) != HAL_OK)
 80034de:	2100      	movs	r1, #0
 80034e0:	6878      	ldr	r0, [r7, #4]
 80034e2:	f000 f8f7 	bl	80036d4 <HAL_DMA2D_CLUTLoading_Abort>
 80034e6:	4603      	mov	r3, r0
 80034e8:	2b00      	cmp	r3, #0
 80034ea:	d011      	beq.n	8003510 <HAL_DMA2D_DeInit+0x7c>
        {
          /* Issue when aborting background CLUT loading */
          return HAL_ERROR;
 80034ec:	2301      	movs	r3, #1
 80034ee:	e03a      	b.n	8003566 <HAL_DMA2D_DeInit+0xd2>
        }
      }
      else
      {
        /* Abort foreground CLUT loading if any */
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 80034f0:	687b      	ldr	r3, [r7, #4]
 80034f2:	681b      	ldr	r3, [r3, #0]
 80034f4:	69db      	ldr	r3, [r3, #28]
 80034f6:	f003 0320 	and.w	r3, r3, #32
 80034fa:	2b20      	cmp	r3, #32
 80034fc:	d108      	bne.n	8003510 <HAL_DMA2D_DeInit+0x7c>
        {
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 80034fe:	2101      	movs	r1, #1
 8003500:	6878      	ldr	r0, [r7, #4]
 8003502:	f000 f8e7 	bl	80036d4 <HAL_DMA2D_CLUTLoading_Abort>
 8003506:	4603      	mov	r3, r0
 8003508:	2b00      	cmp	r3, #0
 800350a:	d001      	beq.n	8003510 <HAL_DMA2D_DeInit+0x7c>
          {
            /* Issue when aborting foreground CLUT loading */
            return HAL_ERROR;
 800350c:	2301      	movs	r3, #1
 800350e:	e02a      	b.n	8003566 <HAL_DMA2D_DeInit+0xd2>
      }
    }
  }

  /* Reset DMA2D control registers*/
  hdma2d->Instance->CR       =    0U;
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	681b      	ldr	r3, [r3, #0]
 8003514:	2200      	movs	r2, #0
 8003516:	601a      	str	r2, [r3, #0]
  hdma2d->Instance->IFCR     = 0x3FU;
 8003518:	687b      	ldr	r3, [r7, #4]
 800351a:	681b      	ldr	r3, [r3, #0]
 800351c:	223f      	movs	r2, #63	; 0x3f
 800351e:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	681b      	ldr	r3, [r3, #0]
 8003524:	2200      	movs	r2, #0
 8003526:	611a      	str	r2, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	2200      	movs	r2, #0
 800352e:	619a      	str	r2, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	681b      	ldr	r3, [r3, #0]
 8003534:	2200      	movs	r2, #0
 8003536:	61da      	str	r2, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	681b      	ldr	r3, [r3, #0]
 800353c:	2200      	movs	r2, #0
 800353e:	625a      	str	r2, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 8003540:	687b      	ldr	r3, [r7, #4]
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	2200      	movs	r2, #0
 8003546:	635a      	str	r2, [r3, #52]	; 0x34
    /* DeInit the low level hardware */
    hdma2d->MspDeInitCallback(hdma2d);

#else
  /* Carry on with de-initialization of low level hardware */
  HAL_DMA2D_MspDeInit(hdma2d);
 8003548:	6878      	ldr	r0, [r7, #4]
 800354a:	f7fe fbc9 	bl	8001ce0 <HAL_DMA2D_MspDeInit>
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	2200      	movs	r2, #0
 8003552:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	2200      	movs	r2, #0
 8003558:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Release Lock */
  __HAL_UNLOCK(hdma2d);
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	2200      	movs	r2, #0
 8003560:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8003564:	2300      	movs	r3, #0
}
 8003566:	4618      	mov	r0, r3
 8003568:	3708      	adds	r7, #8
 800356a:	46bd      	mov	sp, r7
 800356c:	bd80      	pop	{r7, pc}
 800356e:	bf00      	nop
 8003570:	40023800 	.word	0x40023800

08003574 <HAL_DMA2D_Start_IT>:
  * @param  Width      The width of data to be transferred from source to destination (expressed in number of pixels per line).
  * @param  Height     The height of data to be transferred from source to destination (expressed in number of lines).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Start_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width,  uint32_t Height)
{
 8003574:	b580      	push	{r7, lr}
 8003576:	b086      	sub	sp, #24
 8003578:	af02      	add	r7, sp, #8
 800357a:	60f8      	str	r0, [r7, #12]
 800357c:	60b9      	str	r1, [r7, #8]
 800357e:	607a      	str	r2, [r7, #4]
 8003580:	603b      	str	r3, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DMA2D_LINE(Height));
  assert_param(IS_DMA2D_PIXEL(Width));

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003582:	68fb      	ldr	r3, [r7, #12]
 8003584:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8003588:	2b01      	cmp	r3, #1
 800358a:	d101      	bne.n	8003590 <HAL_DMA2D_Start_IT+0x1c>
 800358c:	2302      	movs	r3, #2
 800358e:	e020      	b.n	80035d2 <HAL_DMA2D_Start_IT+0x5e>
 8003590:	68fb      	ldr	r3, [r7, #12]
 8003592:	2201      	movs	r2, #1
 8003594:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003598:	68fb      	ldr	r3, [r7, #12]
 800359a:	2202      	movs	r2, #2
 800359c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Configure the source, destination address and the data size */
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 80035a0:	69bb      	ldr	r3, [r7, #24]
 80035a2:	9300      	str	r3, [sp, #0]
 80035a4:	683b      	ldr	r3, [r7, #0]
 80035a6:	687a      	ldr	r2, [r7, #4]
 80035a8:	68b9      	ldr	r1, [r7, #8]
 80035aa:	68f8      	ldr	r0, [r7, #12]
 80035ac:	f000 f974 	bl	8003898 <DMA2D_SetConfig>

  /* Enable the transfer complete, transfer error and configuration error interrupts */
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80035b0:	68fb      	ldr	r3, [r7, #12]
 80035b2:	681b      	ldr	r3, [r3, #0]
 80035b4:	681a      	ldr	r2, [r3, #0]
 80035b6:	68fb      	ldr	r3, [r7, #12]
 80035b8:	681b      	ldr	r3, [r3, #0]
 80035ba:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 80035be:	601a      	str	r2, [r3, #0]

  /* Enable the Peripheral */
  __HAL_DMA2D_ENABLE(hdma2d);
 80035c0:	68fb      	ldr	r3, [r7, #12]
 80035c2:	681b      	ldr	r3, [r3, #0]
 80035c4:	681a      	ldr	r2, [r3, #0]
 80035c6:	68fb      	ldr	r3, [r7, #12]
 80035c8:	681b      	ldr	r3, [r3, #0]
 80035ca:	f042 0201 	orr.w	r2, r2, #1
 80035ce:	601a      	str	r2, [r3, #0]

  return HAL_OK;
 80035d0:	2300      	movs	r3, #0
}
 80035d2:	4618      	mov	r0, r3
 80035d4:	3710      	adds	r7, #16
 80035d6:	46bd      	mov	sp, r7
 80035d8:	bd80      	pop	{r7, pc}

080035da <HAL_DMA2D_BlendingStart_IT>:
  * @param  Width       The width of data to be transferred from source to destination (expressed in number of pixels per line).
  * @param  Height      The height of data to be transferred from source to destination (expressed in number of lines).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_BlendingStart_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uint32_t  SrcAddress2, uint32_t DstAddress, uint32_t Width,  uint32_t Height)
{
 80035da:	b580      	push	{r7, lr}
 80035dc:	b086      	sub	sp, #24
 80035de:	af02      	add	r7, sp, #8
 80035e0:	60f8      	str	r0, [r7, #12]
 80035e2:	60b9      	str	r1, [r7, #8]
 80035e4:	607a      	str	r2, [r7, #4]
 80035e6:	603b      	str	r3, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DMA2D_LINE(Height));
  assert_param(IS_DMA2D_PIXEL(Width));

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80035e8:	68fb      	ldr	r3, [r7, #12]
 80035ea:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80035ee:	2b01      	cmp	r3, #1
 80035f0:	d101      	bne.n	80035f6 <HAL_DMA2D_BlendingStart_IT+0x1c>
 80035f2:	2302      	movs	r3, #2
 80035f4:	e024      	b.n	8003640 <HAL_DMA2D_BlendingStart_IT+0x66>
 80035f6:	68fb      	ldr	r3, [r7, #12]
 80035f8:	2201      	movs	r2, #1
 80035fa:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80035fe:	68fb      	ldr	r3, [r7, #12]
 8003600:	2202      	movs	r2, #2
 8003602:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Configure DMA2D Stream source2 address */
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8003606:	68fb      	ldr	r3, [r7, #12]
 8003608:	681b      	ldr	r3, [r3, #0]
 800360a:	687a      	ldr	r2, [r7, #4]
 800360c:	615a      	str	r2, [r3, #20]

  /* Configure the source, destination address and the data size */
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 800360e:	69fb      	ldr	r3, [r7, #28]
 8003610:	9300      	str	r3, [sp, #0]
 8003612:	69bb      	ldr	r3, [r7, #24]
 8003614:	683a      	ldr	r2, [r7, #0]
 8003616:	68b9      	ldr	r1, [r7, #8]
 8003618:	68f8      	ldr	r0, [r7, #12]
 800361a:	f000 f93d 	bl	8003898 <DMA2D_SetConfig>

  /* Enable the transfer complete, transfer error and configuration error interrupts */
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 800361e:	68fb      	ldr	r3, [r7, #12]
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	681a      	ldr	r2, [r3, #0]
 8003624:	68fb      	ldr	r3, [r7, #12]
 8003626:	681b      	ldr	r3, [r3, #0]
 8003628:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 800362c:	601a      	str	r2, [r3, #0]

  /* Enable the Peripheral */
  __HAL_DMA2D_ENABLE(hdma2d);
 800362e:	68fb      	ldr	r3, [r7, #12]
 8003630:	681b      	ldr	r3, [r3, #0]
 8003632:	681a      	ldr	r2, [r3, #0]
 8003634:	68fb      	ldr	r3, [r7, #12]
 8003636:	681b      	ldr	r3, [r3, #0]
 8003638:	f042 0201 	orr.w	r2, r2, #1
 800363c:	601a      	str	r2, [r3, #0]

  return HAL_OK;
 800363e:	2300      	movs	r3, #0
}
 8003640:	4618      	mov	r0, r3
 8003642:	3710      	adds	r7, #16
 8003644:	46bd      	mov	sp, r7
 8003646:	bd80      	pop	{r7, pc}

08003648 <HAL_DMA2D_Abort>:
  * @param  hdma2d  pointer to a DMA2D_HandleTypeDef structure that contains
  *                  the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Abort(DMA2D_HandleTypeDef *hdma2d)
{
 8003648:	b580      	push	{r7, lr}
 800364a:	b084      	sub	sp, #16
 800364c:	af00      	add	r7, sp, #0
 800364e:	6078      	str	r0, [r7, #4]

  /* Abort the DMA2D transfer */
  /* START bit is reset to make sure not to set it again, in the event the HW clears it
     between the register read and the register write by the CPU (writing 0 has no
     effect on START bitvalue) */
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8003650:	687b      	ldr	r3, [r7, #4]
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	681b      	ldr	r3, [r3, #0]
 8003656:	f023 0205 	bic.w	r2, r3, #5
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	681b      	ldr	r3, [r3, #0]
 800365e:	f042 0204 	orr.w	r2, r2, #4
 8003662:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8003664:	f7ff fce0 	bl	8003028 <HAL_GetTick>
 8003668:	60f8      	str	r0, [r7, #12]

  /* Check if the DMA2D is effectively disabled */
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 800366a:	e017      	b.n	800369c <HAL_DMA2D_Abort+0x54>
  {
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 800366c:	f7ff fcdc 	bl	8003028 <HAL_GetTick>
 8003670:	4602      	mov	r2, r0
 8003672:	68fb      	ldr	r3, [r7, #12]
 8003674:	1ad3      	subs	r3, r2, r3
 8003676:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800367a:	d90f      	bls.n	800369c <HAL_DMA2D_Abort+0x54>
    {
      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003680:	f043 0220 	orr.w	r2, r3, #32
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change the DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8003688:	687b      	ldr	r3, [r7, #4]
 800368a:	2203      	movs	r2, #3
 800368c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003690:	687b      	ldr	r3, [r7, #4]
 8003692:	2200      	movs	r2, #0
 8003694:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      return HAL_TIMEOUT;
 8003698:	2303      	movs	r3, #3
 800369a:	e017      	b.n	80036cc <HAL_DMA2D_Abort+0x84>
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	681b      	ldr	r3, [r3, #0]
 80036a0:	681b      	ldr	r3, [r3, #0]
 80036a2:	f003 0301 	and.w	r3, r3, #1
 80036a6:	2b00      	cmp	r3, #0
 80036a8:	d1e0      	bne.n	800366c <HAL_DMA2D_Abort+0x24>
    }
  }

  /* Disable the Transfer Complete, Transfer Error and Configuration Error interrupts */
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80036aa:	687b      	ldr	r3, [r7, #4]
 80036ac:	681b      	ldr	r3, [r3, #0]
 80036ae:	681a      	ldr	r2, [r3, #0]
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	681b      	ldr	r3, [r3, #0]
 80036b4:	f422 520c 	bic.w	r2, r2, #8960	; 0x2300
 80036b8:	601a      	str	r2, [r3, #0]

  /* Change the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	2201      	movs	r2, #1
 80036be:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process Unlocked */
  __HAL_UNLOCK(hdma2d);
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	2200      	movs	r2, #0
 80036c6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 80036ca:	2300      	movs	r3, #0
}
 80036cc:	4618      	mov	r0, r3
 80036ce:	3710      	adds	r7, #16
 80036d0:	46bd      	mov	sp, r7
 80036d2:	bd80      	pop	{r7, pc}

080036d4 <HAL_DMA2D_CLUTLoading_Abort>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Abort(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80036d4:	b580      	push	{r7, lr}
 80036d6:	b084      	sub	sp, #16
 80036d8:	af00      	add	r7, sp, #0
 80036da:	6078      	str	r0, [r7, #4]
 80036dc:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 80036de:	687b      	ldr	r3, [r7, #4]
 80036e0:	681b      	ldr	r3, [r3, #0]
 80036e2:	3324      	adds	r3, #36	; 0x24
 80036e4:	60fb      	str	r3, [r7, #12]

  /* Abort the CLUT loading */
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 80036e6:	687b      	ldr	r3, [r7, #4]
 80036e8:	681b      	ldr	r3, [r3, #0]
 80036ea:	681a      	ldr	r2, [r3, #0]
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	681b      	ldr	r3, [r3, #0]
 80036f0:	f042 0204 	orr.w	r2, r2, #4
 80036f4:	601a      	str	r2, [r3, #0]

  /* If foreground CLUT loading is considered, update local variables */
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 80036f6:	683b      	ldr	r3, [r7, #0]
 80036f8:	2b01      	cmp	r3, #1
 80036fa:	d103      	bne.n	8003704 <HAL_DMA2D_CLUTLoading_Abort+0x30>
  {
    reg  = &(hdma2d->Instance->FGPFCCR);
 80036fc:	687b      	ldr	r3, [r7, #4]
 80036fe:	681b      	ldr	r3, [r3, #0]
 8003700:	331c      	adds	r3, #28
 8003702:	60fb      	str	r3, [r7, #12]
  }


  /* Get tick */
  tickstart = HAL_GetTick();
 8003704:	f7ff fc90 	bl	8003028 <HAL_GetTick>
 8003708:	60b8      	str	r0, [r7, #8]

  /* Check if the CLUT loading is aborted */
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 800370a:	e017      	b.n	800373c <HAL_DMA2D_CLUTLoading_Abort+0x68>
  {
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 800370c:	f7ff fc8c 	bl	8003028 <HAL_GetTick>
 8003710:	4602      	mov	r2, r0
 8003712:	68bb      	ldr	r3, [r7, #8]
 8003714:	1ad3      	subs	r3, r2, r3
 8003716:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800371a:	d90f      	bls.n	800373c <HAL_DMA2D_CLUTLoading_Abort+0x68>
    {
      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003720:	f043 0220 	orr.w	r2, r3, #32
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change the DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8003728:	687b      	ldr	r3, [r7, #4]
 800372a:	2203      	movs	r2, #3
 800372c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	2200      	movs	r2, #0
 8003734:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      return HAL_TIMEOUT;
 8003738:	2303      	movs	r3, #3
 800373a:	e016      	b.n	800376a <HAL_DMA2D_CLUTLoading_Abort+0x96>
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 800373c:	68fb      	ldr	r3, [r7, #12]
 800373e:	681b      	ldr	r3, [r3, #0]
 8003740:	f003 0320 	and.w	r3, r3, #32
 8003744:	2b00      	cmp	r3, #0
 8003746:	d1e1      	bne.n	800370c <HAL_DMA2D_CLUTLoading_Abort+0x38>
    }
  }

  /* Disable the CLUT Transfer Complete, Transfer Error, Configuration Error and CLUT Access Error interrupts */
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 8003748:	687b      	ldr	r3, [r7, #4]
 800374a:	681b      	ldr	r3, [r3, #0]
 800374c:	681a      	ldr	r2, [r3, #0]
 800374e:	687b      	ldr	r3, [r7, #4]
 8003750:	681b      	ldr	r3, [r3, #0]
 8003752:	f422 5264 	bic.w	r2, r2, #14592	; 0x3900
 8003756:	601a      	str	r2, [r3, #0]

  /* Change the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003758:	687b      	ldr	r3, [r7, #4]
 800375a:	2201      	movs	r2, #1
 800375c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process Unlocked */
  __HAL_UNLOCK(hdma2d);
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	2200      	movs	r2, #0
 8003764:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8003768:	2300      	movs	r3, #0
}
 800376a:	4618      	mov	r0, r3
 800376c:	3710      	adds	r7, #16
 800376e:	46bd      	mov	sp, r7
 8003770:	bd80      	pop	{r7, pc}
	...

08003774 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003774:	b480      	push	{r7}
 8003776:	b087      	sub	sp, #28
 8003778:	af00      	add	r7, sp, #0
 800377a:	6078      	str	r0, [r7, #4]
 800377c:	6039      	str	r1, [r7, #0]
  uint32_t regMask, regValue;

  /* Check the parameters */
  assert_param(IS_DMA2D_LAYER(LayerIdx));
  assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
  if(hdma2d->Init.Mode != DMA2D_R2M)
 800377e:	687b      	ldr	r3, [r7, #4]
 8003780:	685b      	ldr	r3, [r3, #4]
 8003782:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800378c:	2b01      	cmp	r3, #1
 800378e:	d101      	bne.n	8003794 <HAL_DMA2D_ConfigLayer+0x20>
 8003790:	2302      	movs	r3, #2
 8003792:	e079      	b.n	8003888 <HAL_DMA2D_ConfigLayer+0x114>
 8003794:	687b      	ldr	r3, [r7, #4]
 8003796:	2201      	movs	r2, #1
 8003798:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800379c:	687b      	ldr	r3, [r7, #4]
 800379e:	2202      	movs	r2, #2
 80037a0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 80037a4:	683b      	ldr	r3, [r7, #0]
 80037a6:	011b      	lsls	r3, r3, #4
 80037a8:	3318      	adds	r3, #24
 80037aa:	687a      	ldr	r2, [r7, #4]
 80037ac:	4413      	add	r3, r2
 80037ae:	613b      	str	r3, [r7, #16]

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80037b0:	693b      	ldr	r3, [r7, #16]
 80037b2:	685a      	ldr	r2, [r3, #4]
 80037b4:	693b      	ldr	r3, [r7, #16]
 80037b6:	689b      	ldr	r3, [r3, #8]
 80037b8:	041b      	lsls	r3, r3, #16
 80037ba:	4313      	orrs	r3, r2
 80037bc:	617b      	str	r3, [r7, #20]
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
 80037be:	4b35      	ldr	r3, [pc, #212]	; (8003894 <HAL_DMA2D_ConfigLayer+0x120>)
 80037c0:	60fb      	str	r3, [r7, #12]


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80037c2:	693b      	ldr	r3, [r7, #16]
 80037c4:	685b      	ldr	r3, [r3, #4]
 80037c6:	2b0a      	cmp	r3, #10
 80037c8:	d003      	beq.n	80037d2 <HAL_DMA2D_ConfigLayer+0x5e>
 80037ca:	693b      	ldr	r3, [r7, #16]
 80037cc:	685b      	ldr	r3, [r3, #4]
 80037ce:	2b09      	cmp	r3, #9
 80037d0:	d107      	bne.n	80037e2 <HAL_DMA2D_ConfigLayer+0x6e>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80037d2:	693b      	ldr	r3, [r7, #16]
 80037d4:	68db      	ldr	r3, [r3, #12]
 80037d6:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80037da:	697a      	ldr	r2, [r7, #20]
 80037dc:	4313      	orrs	r3, r2
 80037de:	617b      	str	r3, [r7, #20]
 80037e0:	e005      	b.n	80037ee <HAL_DMA2D_ConfigLayer+0x7a>
  }
  else
  {
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80037e2:	693b      	ldr	r3, [r7, #16]
 80037e4:	68db      	ldr	r3, [r3, #12]
 80037e6:	061b      	lsls	r3, r3, #24
 80037e8:	697a      	ldr	r2, [r7, #20]
 80037ea:	4313      	orrs	r3, r2
 80037ec:	617b      	str	r3, [r7, #20]
  }

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80037ee:	683b      	ldr	r3, [r7, #0]
 80037f0:	2b00      	cmp	r3, #0
 80037f2:	d120      	bne.n	8003836 <HAL_DMA2D_ConfigLayer+0xc2>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	681b      	ldr	r3, [r3, #0]
 80037f8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80037fa:	68fb      	ldr	r3, [r7, #12]
 80037fc:	43db      	mvns	r3, r3
 80037fe:	ea02 0103 	and.w	r1, r2, r3
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	697a      	ldr	r2, [r7, #20]
 8003808:	430a      	orrs	r2, r1
 800380a:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	681b      	ldr	r3, [r3, #0]
 8003810:	693a      	ldr	r2, [r7, #16]
 8003812:	6812      	ldr	r2, [r2, #0]
 8003814:	619a      	str	r2, [r3, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003816:	693b      	ldr	r3, [r7, #16]
 8003818:	685b      	ldr	r3, [r3, #4]
 800381a:	2b0a      	cmp	r3, #10
 800381c:	d003      	beq.n	8003826 <HAL_DMA2D_ConfigLayer+0xb2>
 800381e:	693b      	ldr	r3, [r7, #16]
 8003820:	685b      	ldr	r3, [r3, #4]
 8003822:	2b09      	cmp	r3, #9
 8003824:	d127      	bne.n	8003876 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8003826:	693b      	ldr	r3, [r7, #16]
 8003828:	68da      	ldr	r2, [r3, #12]
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	681b      	ldr	r3, [r3, #0]
 800382e:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003832:	629a      	str	r2, [r3, #40]	; 0x28
 8003834:	e01f      	b.n	8003876 <HAL_DMA2D_ConfigLayer+0x102>
  else
  {


     /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	681b      	ldr	r3, [r3, #0]
 800383a:	69da      	ldr	r2, [r3, #28]
 800383c:	68fb      	ldr	r3, [r7, #12]
 800383e:	43db      	mvns	r3, r3
 8003840:	ea02 0103 	and.w	r1, r2, r3
 8003844:	687b      	ldr	r3, [r7, #4]
 8003846:	681b      	ldr	r3, [r3, #0]
 8003848:	697a      	ldr	r2, [r7, #20]
 800384a:	430a      	orrs	r2, r1
 800384c:	61da      	str	r2, [r3, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	681b      	ldr	r3, [r3, #0]
 8003852:	693a      	ldr	r2, [r7, #16]
 8003854:	6812      	ldr	r2, [r2, #0]
 8003856:	611a      	str	r2, [r3, #16]

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003858:	693b      	ldr	r3, [r7, #16]
 800385a:	685b      	ldr	r3, [r3, #4]
 800385c:	2b0a      	cmp	r3, #10
 800385e:	d003      	beq.n	8003868 <HAL_DMA2D_ConfigLayer+0xf4>
 8003860:	693b      	ldr	r3, [r7, #16]
 8003862:	685b      	ldr	r3, [r3, #4]
 8003864:	2b09      	cmp	r3, #9
 8003866:	d106      	bne.n	8003876 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8003868:	693b      	ldr	r3, [r7, #16]
 800386a:	68da      	ldr	r2, [r3, #12]
 800386c:	687b      	ldr	r3, [r7, #4]
 800386e:	681b      	ldr	r3, [r3, #0]
 8003870:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003874:	621a      	str	r2, [r3, #32]
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	2201      	movs	r2, #1
 800387a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	2200      	movs	r2, #0
 8003882:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8003886:	2300      	movs	r3, #0
}
 8003888:	4618      	mov	r0, r3
 800388a:	371c      	adds	r7, #28
 800388c:	46bd      	mov	sp, r7
 800388e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003892:	4770      	bx	lr
 8003894:	ff03000f 	.word	0xff03000f

08003898 <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 8003898:	b480      	push	{r7}
 800389a:	b08b      	sub	sp, #44	; 0x2c
 800389c:	af00      	add	r7, sp, #0
 800389e:	60f8      	str	r0, [r7, #12]
 80038a0:	60b9      	str	r1, [r7, #8]
 80038a2:	607a      	str	r2, [r7, #4]
 80038a4:	603b      	str	r3, [r7, #0]
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 80038a6:	68fb      	ldr	r3, [r7, #12]
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80038ac:	f003 4140 	and.w	r1, r3, #3221225472	; 0xc0000000
 80038b0:	683b      	ldr	r3, [r7, #0]
 80038b2:	041a      	lsls	r2, r3, #16
 80038b4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80038b6:	431a      	orrs	r2, r3
 80038b8:	68fb      	ldr	r3, [r7, #12]
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	430a      	orrs	r2, r1
 80038be:	645a      	str	r2, [r3, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 80038c0:	68fb      	ldr	r3, [r7, #12]
 80038c2:	681b      	ldr	r3, [r3, #0]
 80038c4:	687a      	ldr	r2, [r7, #4]
 80038c6:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 80038c8:	68fb      	ldr	r3, [r7, #12]
 80038ca:	685b      	ldr	r3, [r3, #4]
 80038cc:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80038d0:	d174      	bne.n	80039bc <DMA2D_SetConfig+0x124>
  {
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 80038d2:	68bb      	ldr	r3, [r7, #8]
 80038d4:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80038d8:	623b      	str	r3, [r7, #32]
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 80038da:	68bb      	ldr	r3, [r7, #8]
 80038dc:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 80038e0:	61fb      	str	r3, [r7, #28]
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 80038e2:	68bb      	ldr	r3, [r7, #8]
 80038e4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80038e8:	61bb      	str	r3, [r7, #24]
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 80038ea:	68bb      	ldr	r3, [r7, #8]
 80038ec:	b2db      	uxtb	r3, r3
 80038ee:	617b      	str	r3, [r7, #20]

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 80038f0:	68fb      	ldr	r3, [r7, #12]
 80038f2:	689b      	ldr	r3, [r3, #8]
 80038f4:	2b00      	cmp	r3, #0
 80038f6:	d108      	bne.n	800390a <DMA2D_SetConfig+0x72>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
 80038f8:	69ba      	ldr	r2, [r7, #24]
 80038fa:	69fb      	ldr	r3, [r7, #28]
 80038fc:	431a      	orrs	r2, r3
 80038fe:	6a3b      	ldr	r3, [r7, #32]
 8003900:	4313      	orrs	r3, r2
 8003902:	697a      	ldr	r2, [r7, #20]
 8003904:	4313      	orrs	r3, r2
 8003906:	627b      	str	r3, [r7, #36]	; 0x24
 8003908:	e053      	b.n	80039b2 <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 800390a:	68fb      	ldr	r3, [r7, #12]
 800390c:	689b      	ldr	r3, [r3, #8]
 800390e:	2b01      	cmp	r3, #1
 8003910:	d106      	bne.n	8003920 <DMA2D_SetConfig+0x88>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 8003912:	69ba      	ldr	r2, [r7, #24]
 8003914:	69fb      	ldr	r3, [r7, #28]
 8003916:	4313      	orrs	r3, r2
 8003918:	697a      	ldr	r2, [r7, #20]
 800391a:	4313      	orrs	r3, r2
 800391c:	627b      	str	r3, [r7, #36]	; 0x24
 800391e:	e048      	b.n	80039b2 <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8003920:	68fb      	ldr	r3, [r7, #12]
 8003922:	689b      	ldr	r3, [r3, #8]
 8003924:	2b02      	cmp	r3, #2
 8003926:	d111      	bne.n	800394c <DMA2D_SetConfig+0xb4>
    {
      tmp2 = (tmp2 >> 19U);
 8003928:	69fb      	ldr	r3, [r7, #28]
 800392a:	0cdb      	lsrs	r3, r3, #19
 800392c:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 10U);
 800392e:	69bb      	ldr	r3, [r7, #24]
 8003930:	0a9b      	lsrs	r3, r3, #10
 8003932:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 3U );
 8003934:	697b      	ldr	r3, [r7, #20]
 8003936:	08db      	lsrs	r3, r3, #3
 8003938:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 800393a:	69bb      	ldr	r3, [r7, #24]
 800393c:	015a      	lsls	r2, r3, #5
 800393e:	69fb      	ldr	r3, [r7, #28]
 8003940:	02db      	lsls	r3, r3, #11
 8003942:	4313      	orrs	r3, r2
 8003944:	697a      	ldr	r2, [r7, #20]
 8003946:	4313      	orrs	r3, r2
 8003948:	627b      	str	r3, [r7, #36]	; 0x24
 800394a:	e032      	b.n	80039b2 <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 800394c:	68fb      	ldr	r3, [r7, #12]
 800394e:	689b      	ldr	r3, [r3, #8]
 8003950:	2b03      	cmp	r3, #3
 8003952:	d117      	bne.n	8003984 <DMA2D_SetConfig+0xec>
    {
      tmp1 = (tmp1 >> 31U);
 8003954:	6a3b      	ldr	r3, [r7, #32]
 8003956:	0fdb      	lsrs	r3, r3, #31
 8003958:	623b      	str	r3, [r7, #32]
      tmp2 = (tmp2 >> 19U);
 800395a:	69fb      	ldr	r3, [r7, #28]
 800395c:	0cdb      	lsrs	r3, r3, #19
 800395e:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 11U);
 8003960:	69bb      	ldr	r3, [r7, #24]
 8003962:	0adb      	lsrs	r3, r3, #11
 8003964:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 3U );
 8003966:	697b      	ldr	r3, [r7, #20]
 8003968:	08db      	lsrs	r3, r3, #3
 800396a:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 800396c:	69bb      	ldr	r3, [r7, #24]
 800396e:	015a      	lsls	r2, r3, #5
 8003970:	69fb      	ldr	r3, [r7, #28]
 8003972:	029b      	lsls	r3, r3, #10
 8003974:	431a      	orrs	r2, r3
 8003976:	6a3b      	ldr	r3, [r7, #32]
 8003978:	03db      	lsls	r3, r3, #15
 800397a:	4313      	orrs	r3, r2
 800397c:	697a      	ldr	r2, [r7, #20]
 800397e:	4313      	orrs	r3, r2
 8003980:	627b      	str	r3, [r7, #36]	; 0x24
 8003982:	e016      	b.n	80039b2 <DMA2D_SetConfig+0x11a>
    }
    else /* Dhdma2d->Init.ColorMode = DMA2D_OUTPUT_ARGB4444 */
    {
      tmp1 = (tmp1 >> 28U);
 8003984:	6a3b      	ldr	r3, [r7, #32]
 8003986:	0f1b      	lsrs	r3, r3, #28
 8003988:	623b      	str	r3, [r7, #32]
      tmp2 = (tmp2 >> 20U);
 800398a:	69fb      	ldr	r3, [r7, #28]
 800398c:	0d1b      	lsrs	r3, r3, #20
 800398e:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 12U);
 8003990:	69bb      	ldr	r3, [r7, #24]
 8003992:	0b1b      	lsrs	r3, r3, #12
 8003994:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 4U );
 8003996:	697b      	ldr	r3, [r7, #20]
 8003998:	091b      	lsrs	r3, r3, #4
 800399a:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 800399c:	69bb      	ldr	r3, [r7, #24]
 800399e:	011a      	lsls	r2, r3, #4
 80039a0:	69fb      	ldr	r3, [r7, #28]
 80039a2:	021b      	lsls	r3, r3, #8
 80039a4:	431a      	orrs	r2, r3
 80039a6:	6a3b      	ldr	r3, [r7, #32]
 80039a8:	031b      	lsls	r3, r3, #12
 80039aa:	4313      	orrs	r3, r2
 80039ac:	697a      	ldr	r2, [r7, #20]
 80039ae:	4313      	orrs	r3, r2
 80039b0:	627b      	str	r3, [r7, #36]	; 0x24
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 80039b2:	68fb      	ldr	r3, [r7, #12]
 80039b4:	681b      	ldr	r3, [r3, #0]
 80039b6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80039b8:	639a      	str	r2, [r3, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 80039ba:	e003      	b.n	80039c4 <DMA2D_SetConfig+0x12c>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 80039bc:	68fb      	ldr	r3, [r7, #12]
 80039be:	681b      	ldr	r3, [r3, #0]
 80039c0:	68ba      	ldr	r2, [r7, #8]
 80039c2:	60da      	str	r2, [r3, #12]
}
 80039c4:	bf00      	nop
 80039c6:	372c      	adds	r7, #44	; 0x2c
 80039c8:	46bd      	mov	sp, r7
 80039ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039ce:	4770      	bx	lr

080039d0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80039d0:	b480      	push	{r7}
 80039d2:	b089      	sub	sp, #36	; 0x24
 80039d4:	af00      	add	r7, sp, #0
 80039d6:	6078      	str	r0, [r7, #4]
 80039d8:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 80039da:	2300      	movs	r3, #0
 80039dc:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 80039de:	2300      	movs	r3, #0
 80039e0:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 80039e2:	2300      	movs	r3, #0
 80039e4:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 80039e6:	2300      	movs	r3, #0
 80039e8:	61fb      	str	r3, [r7, #28]
 80039ea:	e177      	b.n	8003cdc <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 80039ec:	2201      	movs	r2, #1
 80039ee:	69fb      	ldr	r3, [r7, #28]
 80039f0:	fa02 f303 	lsl.w	r3, r2, r3
 80039f4:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80039f6:	683b      	ldr	r3, [r7, #0]
 80039f8:	681b      	ldr	r3, [r3, #0]
 80039fa:	697a      	ldr	r2, [r7, #20]
 80039fc:	4013      	ands	r3, r2
 80039fe:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8003a00:	693a      	ldr	r2, [r7, #16]
 8003a02:	697b      	ldr	r3, [r7, #20]
 8003a04:	429a      	cmp	r2, r3
 8003a06:	f040 8166 	bne.w	8003cd6 <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003a0a:	683b      	ldr	r3, [r7, #0]
 8003a0c:	685b      	ldr	r3, [r3, #4]
 8003a0e:	2b01      	cmp	r3, #1
 8003a10:	d00b      	beq.n	8003a2a <HAL_GPIO_Init+0x5a>
 8003a12:	683b      	ldr	r3, [r7, #0]
 8003a14:	685b      	ldr	r3, [r3, #4]
 8003a16:	2b02      	cmp	r3, #2
 8003a18:	d007      	beq.n	8003a2a <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003a1a:	683b      	ldr	r3, [r7, #0]
 8003a1c:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003a1e:	2b11      	cmp	r3, #17
 8003a20:	d003      	beq.n	8003a2a <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003a22:	683b      	ldr	r3, [r7, #0]
 8003a24:	685b      	ldr	r3, [r3, #4]
 8003a26:	2b12      	cmp	r3, #18
 8003a28:	d130      	bne.n	8003a8c <HAL_GPIO_Init+0xbc>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8003a2a:	687b      	ldr	r3, [r7, #4]
 8003a2c:	689b      	ldr	r3, [r3, #8]
 8003a2e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003a30:	69fb      	ldr	r3, [r7, #28]
 8003a32:	005b      	lsls	r3, r3, #1
 8003a34:	2203      	movs	r2, #3
 8003a36:	fa02 f303 	lsl.w	r3, r2, r3
 8003a3a:	43db      	mvns	r3, r3
 8003a3c:	69ba      	ldr	r2, [r7, #24]
 8003a3e:	4013      	ands	r3, r2
 8003a40:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003a42:	683b      	ldr	r3, [r7, #0]
 8003a44:	68da      	ldr	r2, [r3, #12]
 8003a46:	69fb      	ldr	r3, [r7, #28]
 8003a48:	005b      	lsls	r3, r3, #1
 8003a4a:	fa02 f303 	lsl.w	r3, r2, r3
 8003a4e:	69ba      	ldr	r2, [r7, #24]
 8003a50:	4313      	orrs	r3, r2
 8003a52:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	69ba      	ldr	r2, [r7, #24]
 8003a58:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003a5a:	687b      	ldr	r3, [r7, #4]
 8003a5c:	685b      	ldr	r3, [r3, #4]
 8003a5e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003a60:	2201      	movs	r2, #1
 8003a62:	69fb      	ldr	r3, [r7, #28]
 8003a64:	fa02 f303 	lsl.w	r3, r2, r3
 8003a68:	43db      	mvns	r3, r3
 8003a6a:	69ba      	ldr	r2, [r7, #24]
 8003a6c:	4013      	ands	r3, r2
 8003a6e:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8003a70:	683b      	ldr	r3, [r7, #0]
 8003a72:	685b      	ldr	r3, [r3, #4]
 8003a74:	091b      	lsrs	r3, r3, #4
 8003a76:	f003 0201 	and.w	r2, r3, #1
 8003a7a:	69fb      	ldr	r3, [r7, #28]
 8003a7c:	fa02 f303 	lsl.w	r3, r2, r3
 8003a80:	69ba      	ldr	r2, [r7, #24]
 8003a82:	4313      	orrs	r3, r2
 8003a84:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8003a86:	687b      	ldr	r3, [r7, #4]
 8003a88:	69ba      	ldr	r2, [r7, #24]
 8003a8a:	605a      	str	r2, [r3, #4]
       }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8003a8c:	687b      	ldr	r3, [r7, #4]
 8003a8e:	68db      	ldr	r3, [r3, #12]
 8003a90:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8003a92:	69fb      	ldr	r3, [r7, #28]
 8003a94:	005b      	lsls	r3, r3, #1
 8003a96:	2203      	movs	r2, #3
 8003a98:	fa02 f303 	lsl.w	r3, r2, r3
 8003a9c:	43db      	mvns	r3, r3
 8003a9e:	69ba      	ldr	r2, [r7, #24]
 8003aa0:	4013      	ands	r3, r2
 8003aa2:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003aa4:	683b      	ldr	r3, [r7, #0]
 8003aa6:	689a      	ldr	r2, [r3, #8]
 8003aa8:	69fb      	ldr	r3, [r7, #28]
 8003aaa:	005b      	lsls	r3, r3, #1
 8003aac:	fa02 f303 	lsl.w	r3, r2, r3
 8003ab0:	69ba      	ldr	r2, [r7, #24]
 8003ab2:	4313      	orrs	r3, r2
 8003ab4:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	69ba      	ldr	r2, [r7, #24]
 8003aba:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003abc:	683b      	ldr	r3, [r7, #0]
 8003abe:	685b      	ldr	r3, [r3, #4]
 8003ac0:	2b02      	cmp	r3, #2
 8003ac2:	d003      	beq.n	8003acc <HAL_GPIO_Init+0xfc>
 8003ac4:	683b      	ldr	r3, [r7, #0]
 8003ac6:	685b      	ldr	r3, [r3, #4]
 8003ac8:	2b12      	cmp	r3, #18
 8003aca:	d123      	bne.n	8003b14 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8003acc:	69fb      	ldr	r3, [r7, #28]
 8003ace:	08da      	lsrs	r2, r3, #3
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	3208      	adds	r2, #8
 8003ad4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003ad8:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003ada:	69fb      	ldr	r3, [r7, #28]
 8003adc:	f003 0307 	and.w	r3, r3, #7
 8003ae0:	009b      	lsls	r3, r3, #2
 8003ae2:	220f      	movs	r2, #15
 8003ae4:	fa02 f303 	lsl.w	r3, r2, r3
 8003ae8:	43db      	mvns	r3, r3
 8003aea:	69ba      	ldr	r2, [r7, #24]
 8003aec:	4013      	ands	r3, r2
 8003aee:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8003af0:	683b      	ldr	r3, [r7, #0]
 8003af2:	691a      	ldr	r2, [r3, #16]
 8003af4:	69fb      	ldr	r3, [r7, #28]
 8003af6:	f003 0307 	and.w	r3, r3, #7
 8003afa:	009b      	lsls	r3, r3, #2
 8003afc:	fa02 f303 	lsl.w	r3, r2, r3
 8003b00:	69ba      	ldr	r2, [r7, #24]
 8003b02:	4313      	orrs	r3, r2
 8003b04:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8003b06:	69fb      	ldr	r3, [r7, #28]
 8003b08:	08da      	lsrs	r2, r3, #3
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	3208      	adds	r2, #8
 8003b0e:	69b9      	ldr	r1, [r7, #24]
 8003b10:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8003b14:	687b      	ldr	r3, [r7, #4]
 8003b16:	681b      	ldr	r3, [r3, #0]
 8003b18:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8003b1a:	69fb      	ldr	r3, [r7, #28]
 8003b1c:	005b      	lsls	r3, r3, #1
 8003b1e:	2203      	movs	r2, #3
 8003b20:	fa02 f303 	lsl.w	r3, r2, r3
 8003b24:	43db      	mvns	r3, r3
 8003b26:	69ba      	ldr	r2, [r7, #24]
 8003b28:	4013      	ands	r3, r2
 8003b2a:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003b2c:	683b      	ldr	r3, [r7, #0]
 8003b2e:	685b      	ldr	r3, [r3, #4]
 8003b30:	f003 0203 	and.w	r2, r3, #3
 8003b34:	69fb      	ldr	r3, [r7, #28]
 8003b36:	005b      	lsls	r3, r3, #1
 8003b38:	fa02 f303 	lsl.w	r3, r2, r3
 8003b3c:	69ba      	ldr	r2, [r7, #24]
 8003b3e:	4313      	orrs	r3, r2
 8003b40:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8003b42:	687b      	ldr	r3, [r7, #4]
 8003b44:	69ba      	ldr	r2, [r7, #24]
 8003b46:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8003b48:	683b      	ldr	r3, [r7, #0]
 8003b4a:	685b      	ldr	r3, [r3, #4]
 8003b4c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003b50:	2b00      	cmp	r3, #0
 8003b52:	f000 80c0 	beq.w	8003cd6 <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003b56:	2300      	movs	r3, #0
 8003b58:	60fb      	str	r3, [r7, #12]
 8003b5a:	4b65      	ldr	r3, [pc, #404]	; (8003cf0 <HAL_GPIO_Init+0x320>)
 8003b5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003b5e:	4a64      	ldr	r2, [pc, #400]	; (8003cf0 <HAL_GPIO_Init+0x320>)
 8003b60:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003b64:	6453      	str	r3, [r2, #68]	; 0x44
 8003b66:	4b62      	ldr	r3, [pc, #392]	; (8003cf0 <HAL_GPIO_Init+0x320>)
 8003b68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003b6a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003b6e:	60fb      	str	r3, [r7, #12]
 8003b70:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8003b72:	4a60      	ldr	r2, [pc, #384]	; (8003cf4 <HAL_GPIO_Init+0x324>)
 8003b74:	69fb      	ldr	r3, [r7, #28]
 8003b76:	089b      	lsrs	r3, r3, #2
 8003b78:	3302      	adds	r3, #2
 8003b7a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003b7e:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003b80:	69fb      	ldr	r3, [r7, #28]
 8003b82:	f003 0303 	and.w	r3, r3, #3
 8003b86:	009b      	lsls	r3, r3, #2
 8003b88:	220f      	movs	r2, #15
 8003b8a:	fa02 f303 	lsl.w	r3, r2, r3
 8003b8e:	43db      	mvns	r3, r3
 8003b90:	69ba      	ldr	r2, [r7, #24]
 8003b92:	4013      	ands	r3, r2
 8003b94:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003b96:	687b      	ldr	r3, [r7, #4]
 8003b98:	4a57      	ldr	r2, [pc, #348]	; (8003cf8 <HAL_GPIO_Init+0x328>)
 8003b9a:	4293      	cmp	r3, r2
 8003b9c:	d037      	beq.n	8003c0e <HAL_GPIO_Init+0x23e>
 8003b9e:	687b      	ldr	r3, [r7, #4]
 8003ba0:	4a56      	ldr	r2, [pc, #344]	; (8003cfc <HAL_GPIO_Init+0x32c>)
 8003ba2:	4293      	cmp	r3, r2
 8003ba4:	d031      	beq.n	8003c0a <HAL_GPIO_Init+0x23a>
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	4a55      	ldr	r2, [pc, #340]	; (8003d00 <HAL_GPIO_Init+0x330>)
 8003baa:	4293      	cmp	r3, r2
 8003bac:	d02b      	beq.n	8003c06 <HAL_GPIO_Init+0x236>
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	4a54      	ldr	r2, [pc, #336]	; (8003d04 <HAL_GPIO_Init+0x334>)
 8003bb2:	4293      	cmp	r3, r2
 8003bb4:	d025      	beq.n	8003c02 <HAL_GPIO_Init+0x232>
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	4a53      	ldr	r2, [pc, #332]	; (8003d08 <HAL_GPIO_Init+0x338>)
 8003bba:	4293      	cmp	r3, r2
 8003bbc:	d01f      	beq.n	8003bfe <HAL_GPIO_Init+0x22e>
 8003bbe:	687b      	ldr	r3, [r7, #4]
 8003bc0:	4a52      	ldr	r2, [pc, #328]	; (8003d0c <HAL_GPIO_Init+0x33c>)
 8003bc2:	4293      	cmp	r3, r2
 8003bc4:	d019      	beq.n	8003bfa <HAL_GPIO_Init+0x22a>
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	4a51      	ldr	r2, [pc, #324]	; (8003d10 <HAL_GPIO_Init+0x340>)
 8003bca:	4293      	cmp	r3, r2
 8003bcc:	d013      	beq.n	8003bf6 <HAL_GPIO_Init+0x226>
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	4a50      	ldr	r2, [pc, #320]	; (8003d14 <HAL_GPIO_Init+0x344>)
 8003bd2:	4293      	cmp	r3, r2
 8003bd4:	d00d      	beq.n	8003bf2 <HAL_GPIO_Init+0x222>
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	4a4f      	ldr	r2, [pc, #316]	; (8003d18 <HAL_GPIO_Init+0x348>)
 8003bda:	4293      	cmp	r3, r2
 8003bdc:	d007      	beq.n	8003bee <HAL_GPIO_Init+0x21e>
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	4a4e      	ldr	r2, [pc, #312]	; (8003d1c <HAL_GPIO_Init+0x34c>)
 8003be2:	4293      	cmp	r3, r2
 8003be4:	d101      	bne.n	8003bea <HAL_GPIO_Init+0x21a>
 8003be6:	2309      	movs	r3, #9
 8003be8:	e012      	b.n	8003c10 <HAL_GPIO_Init+0x240>
 8003bea:	230a      	movs	r3, #10
 8003bec:	e010      	b.n	8003c10 <HAL_GPIO_Init+0x240>
 8003bee:	2308      	movs	r3, #8
 8003bf0:	e00e      	b.n	8003c10 <HAL_GPIO_Init+0x240>
 8003bf2:	2307      	movs	r3, #7
 8003bf4:	e00c      	b.n	8003c10 <HAL_GPIO_Init+0x240>
 8003bf6:	2306      	movs	r3, #6
 8003bf8:	e00a      	b.n	8003c10 <HAL_GPIO_Init+0x240>
 8003bfa:	2305      	movs	r3, #5
 8003bfc:	e008      	b.n	8003c10 <HAL_GPIO_Init+0x240>
 8003bfe:	2304      	movs	r3, #4
 8003c00:	e006      	b.n	8003c10 <HAL_GPIO_Init+0x240>
 8003c02:	2303      	movs	r3, #3
 8003c04:	e004      	b.n	8003c10 <HAL_GPIO_Init+0x240>
 8003c06:	2302      	movs	r3, #2
 8003c08:	e002      	b.n	8003c10 <HAL_GPIO_Init+0x240>
 8003c0a:	2301      	movs	r3, #1
 8003c0c:	e000      	b.n	8003c10 <HAL_GPIO_Init+0x240>
 8003c0e:	2300      	movs	r3, #0
 8003c10:	69fa      	ldr	r2, [r7, #28]
 8003c12:	f002 0203 	and.w	r2, r2, #3
 8003c16:	0092      	lsls	r2, r2, #2
 8003c18:	4093      	lsls	r3, r2
 8003c1a:	69ba      	ldr	r2, [r7, #24]
 8003c1c:	4313      	orrs	r3, r2
 8003c1e:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8003c20:	4934      	ldr	r1, [pc, #208]	; (8003cf4 <HAL_GPIO_Init+0x324>)
 8003c22:	69fb      	ldr	r3, [r7, #28]
 8003c24:	089b      	lsrs	r3, r3, #2
 8003c26:	3302      	adds	r3, #2
 8003c28:	69ba      	ldr	r2, [r7, #24]
 8003c2a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003c2e:	4b3c      	ldr	r3, [pc, #240]	; (8003d20 <HAL_GPIO_Init+0x350>)
 8003c30:	681b      	ldr	r3, [r3, #0]
 8003c32:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003c34:	693b      	ldr	r3, [r7, #16]
 8003c36:	43db      	mvns	r3, r3
 8003c38:	69ba      	ldr	r2, [r7, #24]
 8003c3a:	4013      	ands	r3, r2
 8003c3c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8003c3e:	683b      	ldr	r3, [r7, #0]
 8003c40:	685b      	ldr	r3, [r3, #4]
 8003c42:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003c46:	2b00      	cmp	r3, #0
 8003c48:	d003      	beq.n	8003c52 <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 8003c4a:	69ba      	ldr	r2, [r7, #24]
 8003c4c:	693b      	ldr	r3, [r7, #16]
 8003c4e:	4313      	orrs	r3, r2
 8003c50:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8003c52:	4a33      	ldr	r2, [pc, #204]	; (8003d20 <HAL_GPIO_Init+0x350>)
 8003c54:	69bb      	ldr	r3, [r7, #24]
 8003c56:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8003c58:	4b31      	ldr	r3, [pc, #196]	; (8003d20 <HAL_GPIO_Init+0x350>)
 8003c5a:	685b      	ldr	r3, [r3, #4]
 8003c5c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003c5e:	693b      	ldr	r3, [r7, #16]
 8003c60:	43db      	mvns	r3, r3
 8003c62:	69ba      	ldr	r2, [r7, #24]
 8003c64:	4013      	ands	r3, r2
 8003c66:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8003c68:	683b      	ldr	r3, [r7, #0]
 8003c6a:	685b      	ldr	r3, [r3, #4]
 8003c6c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003c70:	2b00      	cmp	r3, #0
 8003c72:	d003      	beq.n	8003c7c <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 8003c74:	69ba      	ldr	r2, [r7, #24]
 8003c76:	693b      	ldr	r3, [r7, #16]
 8003c78:	4313      	orrs	r3, r2
 8003c7a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8003c7c:	4a28      	ldr	r2, [pc, #160]	; (8003d20 <HAL_GPIO_Init+0x350>)
 8003c7e:	69bb      	ldr	r3, [r7, #24]
 8003c80:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003c82:	4b27      	ldr	r3, [pc, #156]	; (8003d20 <HAL_GPIO_Init+0x350>)
 8003c84:	689b      	ldr	r3, [r3, #8]
 8003c86:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003c88:	693b      	ldr	r3, [r7, #16]
 8003c8a:	43db      	mvns	r3, r3
 8003c8c:	69ba      	ldr	r2, [r7, #24]
 8003c8e:	4013      	ands	r3, r2
 8003c90:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8003c92:	683b      	ldr	r3, [r7, #0]
 8003c94:	685b      	ldr	r3, [r3, #4]
 8003c96:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003c9a:	2b00      	cmp	r3, #0
 8003c9c:	d003      	beq.n	8003ca6 <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 8003c9e:	69ba      	ldr	r2, [r7, #24]
 8003ca0:	693b      	ldr	r3, [r7, #16]
 8003ca2:	4313      	orrs	r3, r2
 8003ca4:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8003ca6:	4a1e      	ldr	r2, [pc, #120]	; (8003d20 <HAL_GPIO_Init+0x350>)
 8003ca8:	69bb      	ldr	r3, [r7, #24]
 8003caa:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8003cac:	4b1c      	ldr	r3, [pc, #112]	; (8003d20 <HAL_GPIO_Init+0x350>)
 8003cae:	68db      	ldr	r3, [r3, #12]
 8003cb0:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003cb2:	693b      	ldr	r3, [r7, #16]
 8003cb4:	43db      	mvns	r3, r3
 8003cb6:	69ba      	ldr	r2, [r7, #24]
 8003cb8:	4013      	ands	r3, r2
 8003cba:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8003cbc:	683b      	ldr	r3, [r7, #0]
 8003cbe:	685b      	ldr	r3, [r3, #4]
 8003cc0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003cc4:	2b00      	cmp	r3, #0
 8003cc6:	d003      	beq.n	8003cd0 <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 8003cc8:	69ba      	ldr	r2, [r7, #24]
 8003cca:	693b      	ldr	r3, [r7, #16]
 8003ccc:	4313      	orrs	r3, r2
 8003cce:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8003cd0:	4a13      	ldr	r2, [pc, #76]	; (8003d20 <HAL_GPIO_Init+0x350>)
 8003cd2:	69bb      	ldr	r3, [r7, #24]
 8003cd4:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003cd6:	69fb      	ldr	r3, [r7, #28]
 8003cd8:	3301      	adds	r3, #1
 8003cda:	61fb      	str	r3, [r7, #28]
 8003cdc:	69fb      	ldr	r3, [r7, #28]
 8003cde:	2b0f      	cmp	r3, #15
 8003ce0:	f67f ae84 	bls.w	80039ec <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8003ce4:	bf00      	nop
 8003ce6:	3724      	adds	r7, #36	; 0x24
 8003ce8:	46bd      	mov	sp, r7
 8003cea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cee:	4770      	bx	lr
 8003cf0:	40023800 	.word	0x40023800
 8003cf4:	40013800 	.word	0x40013800
 8003cf8:	40020000 	.word	0x40020000
 8003cfc:	40020400 	.word	0x40020400
 8003d00:	40020800 	.word	0x40020800
 8003d04:	40020c00 	.word	0x40020c00
 8003d08:	40021000 	.word	0x40021000
 8003d0c:	40021400 	.word	0x40021400
 8003d10:	40021800 	.word	0x40021800
 8003d14:	40021c00 	.word	0x40021c00
 8003d18:	40022000 	.word	0x40022000
 8003d1c:	40022400 	.word	0x40022400
 8003d20:	40013c00 	.word	0x40013c00

08003d24 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8003d24:	b480      	push	{r7}
 8003d26:	b087      	sub	sp, #28
 8003d28:	af00      	add	r7, sp, #0
 8003d2a:	6078      	str	r0, [r7, #4]
 8003d2c:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8003d2e:	2300      	movs	r3, #0
 8003d30:	613b      	str	r3, [r7, #16]
  uint32_t iocurrent = 0x00U;
 8003d32:	2300      	movs	r3, #0
 8003d34:	60fb      	str	r3, [r7, #12]
  uint32_t tmp = 0x00U;
 8003d36:	2300      	movs	r3, #0
 8003d38:	60bb      	str	r3, [r7, #8]

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  
  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003d3a:	2300      	movs	r3, #0
 8003d3c:	617b      	str	r3, [r7, #20]
 8003d3e:	e0d9      	b.n	8003ef4 <HAL_GPIO_DeInit+0x1d0>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8003d40:	2201      	movs	r2, #1
 8003d42:	697b      	ldr	r3, [r7, #20]
 8003d44:	fa02 f303 	lsl.w	r3, r2, r3
 8003d48:	613b      	str	r3, [r7, #16]
    /* Get the current IO position */
    iocurrent = (GPIO_Pin) & ioposition;
 8003d4a:	683a      	ldr	r2, [r7, #0]
 8003d4c:	693b      	ldr	r3, [r7, #16]
 8003d4e:	4013      	ands	r3, r2
 8003d50:	60fb      	str	r3, [r7, #12]

    if(iocurrent == ioposition)
 8003d52:	68fa      	ldr	r2, [r7, #12]
 8003d54:	693b      	ldr	r3, [r7, #16]
 8003d56:	429a      	cmp	r2, r3
 8003d58:	f040 80c9 	bne.w	8003eee <HAL_GPIO_DeInit+0x1ca>
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2U];
 8003d5c:	4a6a      	ldr	r2, [pc, #424]	; (8003f08 <HAL_GPIO_DeInit+0x1e4>)
 8003d5e:	697b      	ldr	r3, [r7, #20]
 8003d60:	089b      	lsrs	r3, r3, #2
 8003d62:	3302      	adds	r3, #2
 8003d64:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003d68:	60bb      	str	r3, [r7, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8003d6a:	697b      	ldr	r3, [r7, #20]
 8003d6c:	f003 0303 	and.w	r3, r3, #3
 8003d70:	009b      	lsls	r3, r3, #2
 8003d72:	220f      	movs	r2, #15
 8003d74:	fa02 f303 	lsl.w	r3, r2, r3
 8003d78:	68ba      	ldr	r2, [r7, #8]
 8003d7a:	4013      	ands	r3, r2
 8003d7c:	60bb      	str	r3, [r7, #8]
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8003d7e:	687b      	ldr	r3, [r7, #4]
 8003d80:	4a62      	ldr	r2, [pc, #392]	; (8003f0c <HAL_GPIO_DeInit+0x1e8>)
 8003d82:	4293      	cmp	r3, r2
 8003d84:	d037      	beq.n	8003df6 <HAL_GPIO_DeInit+0xd2>
 8003d86:	687b      	ldr	r3, [r7, #4]
 8003d88:	4a61      	ldr	r2, [pc, #388]	; (8003f10 <HAL_GPIO_DeInit+0x1ec>)
 8003d8a:	4293      	cmp	r3, r2
 8003d8c:	d031      	beq.n	8003df2 <HAL_GPIO_DeInit+0xce>
 8003d8e:	687b      	ldr	r3, [r7, #4]
 8003d90:	4a60      	ldr	r2, [pc, #384]	; (8003f14 <HAL_GPIO_DeInit+0x1f0>)
 8003d92:	4293      	cmp	r3, r2
 8003d94:	d02b      	beq.n	8003dee <HAL_GPIO_DeInit+0xca>
 8003d96:	687b      	ldr	r3, [r7, #4]
 8003d98:	4a5f      	ldr	r2, [pc, #380]	; (8003f18 <HAL_GPIO_DeInit+0x1f4>)
 8003d9a:	4293      	cmp	r3, r2
 8003d9c:	d025      	beq.n	8003dea <HAL_GPIO_DeInit+0xc6>
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	4a5e      	ldr	r2, [pc, #376]	; (8003f1c <HAL_GPIO_DeInit+0x1f8>)
 8003da2:	4293      	cmp	r3, r2
 8003da4:	d01f      	beq.n	8003de6 <HAL_GPIO_DeInit+0xc2>
 8003da6:	687b      	ldr	r3, [r7, #4]
 8003da8:	4a5d      	ldr	r2, [pc, #372]	; (8003f20 <HAL_GPIO_DeInit+0x1fc>)
 8003daa:	4293      	cmp	r3, r2
 8003dac:	d019      	beq.n	8003de2 <HAL_GPIO_DeInit+0xbe>
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	4a5c      	ldr	r2, [pc, #368]	; (8003f24 <HAL_GPIO_DeInit+0x200>)
 8003db2:	4293      	cmp	r3, r2
 8003db4:	d013      	beq.n	8003dde <HAL_GPIO_DeInit+0xba>
 8003db6:	687b      	ldr	r3, [r7, #4]
 8003db8:	4a5b      	ldr	r2, [pc, #364]	; (8003f28 <HAL_GPIO_DeInit+0x204>)
 8003dba:	4293      	cmp	r3, r2
 8003dbc:	d00d      	beq.n	8003dda <HAL_GPIO_DeInit+0xb6>
 8003dbe:	687b      	ldr	r3, [r7, #4]
 8003dc0:	4a5a      	ldr	r2, [pc, #360]	; (8003f2c <HAL_GPIO_DeInit+0x208>)
 8003dc2:	4293      	cmp	r3, r2
 8003dc4:	d007      	beq.n	8003dd6 <HAL_GPIO_DeInit+0xb2>
 8003dc6:	687b      	ldr	r3, [r7, #4]
 8003dc8:	4a59      	ldr	r2, [pc, #356]	; (8003f30 <HAL_GPIO_DeInit+0x20c>)
 8003dca:	4293      	cmp	r3, r2
 8003dcc:	d101      	bne.n	8003dd2 <HAL_GPIO_DeInit+0xae>
 8003dce:	2309      	movs	r3, #9
 8003dd0:	e012      	b.n	8003df8 <HAL_GPIO_DeInit+0xd4>
 8003dd2:	230a      	movs	r3, #10
 8003dd4:	e010      	b.n	8003df8 <HAL_GPIO_DeInit+0xd4>
 8003dd6:	2308      	movs	r3, #8
 8003dd8:	e00e      	b.n	8003df8 <HAL_GPIO_DeInit+0xd4>
 8003dda:	2307      	movs	r3, #7
 8003ddc:	e00c      	b.n	8003df8 <HAL_GPIO_DeInit+0xd4>
 8003dde:	2306      	movs	r3, #6
 8003de0:	e00a      	b.n	8003df8 <HAL_GPIO_DeInit+0xd4>
 8003de2:	2305      	movs	r3, #5
 8003de4:	e008      	b.n	8003df8 <HAL_GPIO_DeInit+0xd4>
 8003de6:	2304      	movs	r3, #4
 8003de8:	e006      	b.n	8003df8 <HAL_GPIO_DeInit+0xd4>
 8003dea:	2303      	movs	r3, #3
 8003dec:	e004      	b.n	8003df8 <HAL_GPIO_DeInit+0xd4>
 8003dee:	2302      	movs	r3, #2
 8003df0:	e002      	b.n	8003df8 <HAL_GPIO_DeInit+0xd4>
 8003df2:	2301      	movs	r3, #1
 8003df4:	e000      	b.n	8003df8 <HAL_GPIO_DeInit+0xd4>
 8003df6:	2300      	movs	r3, #0
 8003df8:	697a      	ldr	r2, [r7, #20]
 8003dfa:	f002 0203 	and.w	r2, r2, #3
 8003dfe:	0092      	lsls	r2, r2, #2
 8003e00:	4093      	lsls	r3, r2
 8003e02:	68ba      	ldr	r2, [r7, #8]
 8003e04:	429a      	cmp	r2, r3
 8003e06:	d132      	bne.n	8003e6e <HAL_GPIO_DeInit+0x14a>
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8003e08:	4b4a      	ldr	r3, [pc, #296]	; (8003f34 <HAL_GPIO_DeInit+0x210>)
 8003e0a:	681a      	ldr	r2, [r3, #0]
 8003e0c:	68fb      	ldr	r3, [r7, #12]
 8003e0e:	43db      	mvns	r3, r3
 8003e10:	4948      	ldr	r1, [pc, #288]	; (8003f34 <HAL_GPIO_DeInit+0x210>)
 8003e12:	4013      	ands	r3, r2
 8003e14:	600b      	str	r3, [r1, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8003e16:	4b47      	ldr	r3, [pc, #284]	; (8003f34 <HAL_GPIO_DeInit+0x210>)
 8003e18:	685a      	ldr	r2, [r3, #4]
 8003e1a:	68fb      	ldr	r3, [r7, #12]
 8003e1c:	43db      	mvns	r3, r3
 8003e1e:	4945      	ldr	r1, [pc, #276]	; (8003f34 <HAL_GPIO_DeInit+0x210>)
 8003e20:	4013      	ands	r3, r2
 8003e22:	604b      	str	r3, [r1, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8003e24:	4b43      	ldr	r3, [pc, #268]	; (8003f34 <HAL_GPIO_DeInit+0x210>)
 8003e26:	689a      	ldr	r2, [r3, #8]
 8003e28:	68fb      	ldr	r3, [r7, #12]
 8003e2a:	43db      	mvns	r3, r3
 8003e2c:	4941      	ldr	r1, [pc, #260]	; (8003f34 <HAL_GPIO_DeInit+0x210>)
 8003e2e:	4013      	ands	r3, r2
 8003e30:	608b      	str	r3, [r1, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8003e32:	4b40      	ldr	r3, [pc, #256]	; (8003f34 <HAL_GPIO_DeInit+0x210>)
 8003e34:	68da      	ldr	r2, [r3, #12]
 8003e36:	68fb      	ldr	r3, [r7, #12]
 8003e38:	43db      	mvns	r3, r3
 8003e3a:	493e      	ldr	r1, [pc, #248]	; (8003f34 <HAL_GPIO_DeInit+0x210>)
 8003e3c:	4013      	ands	r3, r2
 8003e3e:	60cb      	str	r3, [r1, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
 8003e40:	697b      	ldr	r3, [r7, #20]
 8003e42:	f003 0303 	and.w	r3, r3, #3
 8003e46:	009b      	lsls	r3, r3, #2
 8003e48:	220f      	movs	r2, #15
 8003e4a:	fa02 f303 	lsl.w	r3, r2, r3
 8003e4e:	60bb      	str	r3, [r7, #8]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8003e50:	4a2d      	ldr	r2, [pc, #180]	; (8003f08 <HAL_GPIO_DeInit+0x1e4>)
 8003e52:	697b      	ldr	r3, [r7, #20]
 8003e54:	089b      	lsrs	r3, r3, #2
 8003e56:	3302      	adds	r3, #2
 8003e58:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8003e5c:	68bb      	ldr	r3, [r7, #8]
 8003e5e:	43da      	mvns	r2, r3
 8003e60:	4829      	ldr	r0, [pc, #164]	; (8003f08 <HAL_GPIO_DeInit+0x1e4>)
 8003e62:	697b      	ldr	r3, [r7, #20]
 8003e64:	089b      	lsrs	r3, r3, #2
 8003e66:	400a      	ands	r2, r1
 8003e68:	3302      	adds	r3, #2
 8003e6a:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	681a      	ldr	r2, [r3, #0]
 8003e72:	697b      	ldr	r3, [r7, #20]
 8003e74:	005b      	lsls	r3, r3, #1
 8003e76:	2103      	movs	r1, #3
 8003e78:	fa01 f303 	lsl.w	r3, r1, r3
 8003e7c:	43db      	mvns	r3, r3
 8003e7e:	401a      	ands	r2, r3
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	601a      	str	r2, [r3, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003e84:	697b      	ldr	r3, [r7, #20]
 8003e86:	08da      	lsrs	r2, r3, #3
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	3208      	adds	r2, #8
 8003e8c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003e90:	697b      	ldr	r3, [r7, #20]
 8003e92:	f003 0307 	and.w	r3, r3, #7
 8003e96:	009b      	lsls	r3, r3, #2
 8003e98:	220f      	movs	r2, #15
 8003e9a:	fa02 f303 	lsl.w	r3, r2, r3
 8003e9e:	43db      	mvns	r3, r3
 8003ea0:	697a      	ldr	r2, [r7, #20]
 8003ea2:	08d2      	lsrs	r2, r2, #3
 8003ea4:	4019      	ands	r1, r3
 8003ea6:	687b      	ldr	r3, [r7, #4]
 8003ea8:	3208      	adds	r2, #8
 8003eaa:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8003eae:	687b      	ldr	r3, [r7, #4]
 8003eb0:	68da      	ldr	r2, [r3, #12]
 8003eb2:	697b      	ldr	r3, [r7, #20]
 8003eb4:	005b      	lsls	r3, r3, #1
 8003eb6:	2103      	movs	r1, #3
 8003eb8:	fa01 f303 	lsl.w	r3, r1, r3
 8003ebc:	43db      	mvns	r3, r3
 8003ebe:	401a      	ands	r2, r3
 8003ec0:	687b      	ldr	r3, [r7, #4]
 8003ec2:	60da      	str	r2, [r3, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	685a      	ldr	r2, [r3, #4]
 8003ec8:	2101      	movs	r1, #1
 8003eca:	697b      	ldr	r3, [r7, #20]
 8003ecc:	fa01 f303 	lsl.w	r3, r1, r3
 8003ed0:	43db      	mvns	r3, r3
 8003ed2:	401a      	ands	r2, r3
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	605a      	str	r2, [r3, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003ed8:	687b      	ldr	r3, [r7, #4]
 8003eda:	689a      	ldr	r2, [r3, #8]
 8003edc:	697b      	ldr	r3, [r7, #20]
 8003ede:	005b      	lsls	r3, r3, #1
 8003ee0:	2103      	movs	r1, #3
 8003ee2:	fa01 f303 	lsl.w	r3, r1, r3
 8003ee6:	43db      	mvns	r3, r3
 8003ee8:	401a      	ands	r2, r3
 8003eea:	687b      	ldr	r3, [r7, #4]
 8003eec:	609a      	str	r2, [r3, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003eee:	697b      	ldr	r3, [r7, #20]
 8003ef0:	3301      	adds	r3, #1
 8003ef2:	617b      	str	r3, [r7, #20]
 8003ef4:	697b      	ldr	r3, [r7, #20]
 8003ef6:	2b0f      	cmp	r3, #15
 8003ef8:	f67f af22 	bls.w	8003d40 <HAL_GPIO_DeInit+0x1c>
    }
  }
}
 8003efc:	bf00      	nop
 8003efe:	371c      	adds	r7, #28
 8003f00:	46bd      	mov	sp, r7
 8003f02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f06:	4770      	bx	lr
 8003f08:	40013800 	.word	0x40013800
 8003f0c:	40020000 	.word	0x40020000
 8003f10:	40020400 	.word	0x40020400
 8003f14:	40020800 	.word	0x40020800
 8003f18:	40020c00 	.word	0x40020c00
 8003f1c:	40021000 	.word	0x40021000
 8003f20:	40021400 	.word	0x40021400
 8003f24:	40021800 	.word	0x40021800
 8003f28:	40021c00 	.word	0x40021c00
 8003f2c:	40022000 	.word	0x40022000
 8003f30:	40022400 	.word	0x40022400
 8003f34:	40013c00 	.word	0x40013c00

08003f38 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8003f38:	b480      	push	{r7}
 8003f3a:	b085      	sub	sp, #20
 8003f3c:	af00      	add	r7, sp, #0
 8003f3e:	6078      	str	r0, [r7, #4]
 8003f40:	460b      	mov	r3, r1
 8003f42:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8003f44:	687b      	ldr	r3, [r7, #4]
 8003f46:	691a      	ldr	r2, [r3, #16]
 8003f48:	887b      	ldrh	r3, [r7, #2]
 8003f4a:	4013      	ands	r3, r2
 8003f4c:	2b00      	cmp	r3, #0
 8003f4e:	d002      	beq.n	8003f56 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 8003f50:	2301      	movs	r3, #1
 8003f52:	73fb      	strb	r3, [r7, #15]
 8003f54:	e001      	b.n	8003f5a <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 8003f56:	2300      	movs	r3, #0
 8003f58:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 8003f5a:	7bfb      	ldrb	r3, [r7, #15]
}
 8003f5c:	4618      	mov	r0, r3
 8003f5e:	3714      	adds	r7, #20
 8003f60:	46bd      	mov	sp, r7
 8003f62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f66:	4770      	bx	lr

08003f68 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8003f68:	b480      	push	{r7}
 8003f6a:	b083      	sub	sp, #12
 8003f6c:	af00      	add	r7, sp, #0
 8003f6e:	6078      	str	r0, [r7, #4]
 8003f70:	460b      	mov	r3, r1
 8003f72:	807b      	strh	r3, [r7, #2]
 8003f74:	4613      	mov	r3, r2
 8003f76:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8003f78:	787b      	ldrb	r3, [r7, #1]
 8003f7a:	2b00      	cmp	r3, #0
 8003f7c:	d003      	beq.n	8003f86 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8003f7e:	887a      	ldrh	r2, [r7, #2]
 8003f80:	687b      	ldr	r3, [r7, #4]
 8003f82:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8003f84:	e003      	b.n	8003f8e <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8003f86:	887b      	ldrh	r3, [r7, #2]
 8003f88:	041a      	lsls	r2, r3, #16
 8003f8a:	687b      	ldr	r3, [r7, #4]
 8003f8c:	619a      	str	r2, [r3, #24]
}
 8003f8e:	bf00      	nop
 8003f90:	370c      	adds	r7, #12
 8003f92:	46bd      	mov	sp, r7
 8003f94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f98:	4770      	bx	lr
	...

08003f9c <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8003f9c:	b580      	push	{r7, lr}
 8003f9e:	b082      	sub	sp, #8
 8003fa0:	af00      	add	r7, sp, #0
 8003fa2:	4603      	mov	r3, r0
 8003fa4:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8003fa6:	4b08      	ldr	r3, [pc, #32]	; (8003fc8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003fa8:	695a      	ldr	r2, [r3, #20]
 8003faa:	88fb      	ldrh	r3, [r7, #6]
 8003fac:	4013      	ands	r3, r2
 8003fae:	2b00      	cmp	r3, #0
 8003fb0:	d006      	beq.n	8003fc0 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8003fb2:	4a05      	ldr	r2, [pc, #20]	; (8003fc8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003fb4:	88fb      	ldrh	r3, [r7, #6]
 8003fb6:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8003fb8:	88fb      	ldrh	r3, [r7, #6]
 8003fba:	4618      	mov	r0, r3
 8003fbc:	f7fd f800 	bl	8000fc0 <HAL_GPIO_EXTI_Callback>
  }
}
 8003fc0:	bf00      	nop
 8003fc2:	3708      	adds	r7, #8
 8003fc4:	46bd      	mov	sp, r7
 8003fc6:	bd80      	pop	{r7, pc}
 8003fc8:	40013c00 	.word	0x40013c00

08003fcc <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8003fcc:	b580      	push	{r7, lr}
 8003fce:	b084      	sub	sp, #16
 8003fd0:	af00      	add	r7, sp, #0
 8003fd2:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8003fd4:	687b      	ldr	r3, [r7, #4]
 8003fd6:	2b00      	cmp	r3, #0
 8003fd8:	d101      	bne.n	8003fde <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8003fda:	2301      	movs	r3, #1
 8003fdc:	e11f      	b.n	800421e <HAL_I2C_Init+0x252>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8003fde:	687b      	ldr	r3, [r7, #4]
 8003fe0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003fe4:	b2db      	uxtb	r3, r3
 8003fe6:	2b00      	cmp	r3, #0
 8003fe8:	d106      	bne.n	8003ff8 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	2200      	movs	r2, #0
 8003fee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 8003ff2:	6878      	ldr	r0, [r7, #4]
 8003ff4:	f7fd fe8e 	bl	8001d14 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8003ff8:	687b      	ldr	r3, [r7, #4]
 8003ffa:	2224      	movs	r2, #36	; 0x24
 8003ffc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8004000:	687b      	ldr	r3, [r7, #4]
 8004002:	681b      	ldr	r3, [r3, #0]
 8004004:	681a      	ldr	r2, [r3, #0]
 8004006:	687b      	ldr	r3, [r7, #4]
 8004008:	681b      	ldr	r3, [r3, #0]
 800400a:	f022 0201 	bic.w	r2, r2, #1
 800400e:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004010:	687b      	ldr	r3, [r7, #4]
 8004012:	681b      	ldr	r3, [r3, #0]
 8004014:	681a      	ldr	r2, [r3, #0]
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	681b      	ldr	r3, [r3, #0]
 800401a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800401e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8004020:	687b      	ldr	r3, [r7, #4]
 8004022:	681b      	ldr	r3, [r3, #0]
 8004024:	681a      	ldr	r2, [r3, #0]
 8004026:	687b      	ldr	r3, [r7, #4]
 8004028:	681b      	ldr	r3, [r3, #0]
 800402a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800402e:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004030:	f001 ff78 	bl	8005f24 <HAL_RCC_GetPCLK1Freq>
 8004034:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004036:	687b      	ldr	r3, [r7, #4]
 8004038:	685b      	ldr	r3, [r3, #4]
 800403a:	4a7b      	ldr	r2, [pc, #492]	; (8004228 <HAL_I2C_Init+0x25c>)
 800403c:	4293      	cmp	r3, r2
 800403e:	d807      	bhi.n	8004050 <HAL_I2C_Init+0x84>
 8004040:	68fb      	ldr	r3, [r7, #12]
 8004042:	4a7a      	ldr	r2, [pc, #488]	; (800422c <HAL_I2C_Init+0x260>)
 8004044:	4293      	cmp	r3, r2
 8004046:	bf94      	ite	ls
 8004048:	2301      	movls	r3, #1
 800404a:	2300      	movhi	r3, #0
 800404c:	b2db      	uxtb	r3, r3
 800404e:	e006      	b.n	800405e <HAL_I2C_Init+0x92>
 8004050:	68fb      	ldr	r3, [r7, #12]
 8004052:	4a77      	ldr	r2, [pc, #476]	; (8004230 <HAL_I2C_Init+0x264>)
 8004054:	4293      	cmp	r3, r2
 8004056:	bf94      	ite	ls
 8004058:	2301      	movls	r3, #1
 800405a:	2300      	movhi	r3, #0
 800405c:	b2db      	uxtb	r3, r3
 800405e:	2b00      	cmp	r3, #0
 8004060:	d001      	beq.n	8004066 <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 8004062:	2301      	movs	r3, #1
 8004064:	e0db      	b.n	800421e <HAL_I2C_Init+0x252>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 8004066:	68fb      	ldr	r3, [r7, #12]
 8004068:	4a72      	ldr	r2, [pc, #456]	; (8004234 <HAL_I2C_Init+0x268>)
 800406a:	fba2 2303 	umull	r2, r3, r2, r3
 800406e:	0c9b      	lsrs	r3, r3, #18
 8004070:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004072:	687b      	ldr	r3, [r7, #4]
 8004074:	681b      	ldr	r3, [r3, #0]
 8004076:	685b      	ldr	r3, [r3, #4]
 8004078:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 800407c:	687b      	ldr	r3, [r7, #4]
 800407e:	681b      	ldr	r3, [r3, #0]
 8004080:	68ba      	ldr	r2, [r7, #8]
 8004082:	430a      	orrs	r2, r1
 8004084:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004086:	687b      	ldr	r3, [r7, #4]
 8004088:	681b      	ldr	r3, [r3, #0]
 800408a:	6a1b      	ldr	r3, [r3, #32]
 800408c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8004090:	687b      	ldr	r3, [r7, #4]
 8004092:	685b      	ldr	r3, [r3, #4]
 8004094:	4a64      	ldr	r2, [pc, #400]	; (8004228 <HAL_I2C_Init+0x25c>)
 8004096:	4293      	cmp	r3, r2
 8004098:	d802      	bhi.n	80040a0 <HAL_I2C_Init+0xd4>
 800409a:	68bb      	ldr	r3, [r7, #8]
 800409c:	3301      	adds	r3, #1
 800409e:	e009      	b.n	80040b4 <HAL_I2C_Init+0xe8>
 80040a0:	68bb      	ldr	r3, [r7, #8]
 80040a2:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80040a6:	fb02 f303 	mul.w	r3, r2, r3
 80040aa:	4a63      	ldr	r2, [pc, #396]	; (8004238 <HAL_I2C_Init+0x26c>)
 80040ac:	fba2 2303 	umull	r2, r3, r2, r3
 80040b0:	099b      	lsrs	r3, r3, #6
 80040b2:	3301      	adds	r3, #1
 80040b4:	687a      	ldr	r2, [r7, #4]
 80040b6:	6812      	ldr	r2, [r2, #0]
 80040b8:	430b      	orrs	r3, r1
 80040ba:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80040bc:	687b      	ldr	r3, [r7, #4]
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	69db      	ldr	r3, [r3, #28]
 80040c2:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 80040c6:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80040ca:	687b      	ldr	r3, [r7, #4]
 80040cc:	685b      	ldr	r3, [r3, #4]
 80040ce:	4956      	ldr	r1, [pc, #344]	; (8004228 <HAL_I2C_Init+0x25c>)
 80040d0:	428b      	cmp	r3, r1
 80040d2:	d80d      	bhi.n	80040f0 <HAL_I2C_Init+0x124>
 80040d4:	68fb      	ldr	r3, [r7, #12]
 80040d6:	1e59      	subs	r1, r3, #1
 80040d8:	687b      	ldr	r3, [r7, #4]
 80040da:	685b      	ldr	r3, [r3, #4]
 80040dc:	005b      	lsls	r3, r3, #1
 80040de:	fbb1 f3f3 	udiv	r3, r1, r3
 80040e2:	3301      	adds	r3, #1
 80040e4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80040e8:	2b04      	cmp	r3, #4
 80040ea:	bf38      	it	cc
 80040ec:	2304      	movcc	r3, #4
 80040ee:	e04f      	b.n	8004190 <HAL_I2C_Init+0x1c4>
 80040f0:	687b      	ldr	r3, [r7, #4]
 80040f2:	689b      	ldr	r3, [r3, #8]
 80040f4:	2b00      	cmp	r3, #0
 80040f6:	d111      	bne.n	800411c <HAL_I2C_Init+0x150>
 80040f8:	68fb      	ldr	r3, [r7, #12]
 80040fa:	1e58      	subs	r0, r3, #1
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	6859      	ldr	r1, [r3, #4]
 8004100:	460b      	mov	r3, r1
 8004102:	005b      	lsls	r3, r3, #1
 8004104:	440b      	add	r3, r1
 8004106:	fbb0 f3f3 	udiv	r3, r0, r3
 800410a:	3301      	adds	r3, #1
 800410c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004110:	2b00      	cmp	r3, #0
 8004112:	bf0c      	ite	eq
 8004114:	2301      	moveq	r3, #1
 8004116:	2300      	movne	r3, #0
 8004118:	b2db      	uxtb	r3, r3
 800411a:	e012      	b.n	8004142 <HAL_I2C_Init+0x176>
 800411c:	68fb      	ldr	r3, [r7, #12]
 800411e:	1e58      	subs	r0, r3, #1
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	6859      	ldr	r1, [r3, #4]
 8004124:	460b      	mov	r3, r1
 8004126:	009b      	lsls	r3, r3, #2
 8004128:	440b      	add	r3, r1
 800412a:	0099      	lsls	r1, r3, #2
 800412c:	440b      	add	r3, r1
 800412e:	fbb0 f3f3 	udiv	r3, r0, r3
 8004132:	3301      	adds	r3, #1
 8004134:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004138:	2b00      	cmp	r3, #0
 800413a:	bf0c      	ite	eq
 800413c:	2301      	moveq	r3, #1
 800413e:	2300      	movne	r3, #0
 8004140:	b2db      	uxtb	r3, r3
 8004142:	2b00      	cmp	r3, #0
 8004144:	d001      	beq.n	800414a <HAL_I2C_Init+0x17e>
 8004146:	2301      	movs	r3, #1
 8004148:	e022      	b.n	8004190 <HAL_I2C_Init+0x1c4>
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	689b      	ldr	r3, [r3, #8]
 800414e:	2b00      	cmp	r3, #0
 8004150:	d10e      	bne.n	8004170 <HAL_I2C_Init+0x1a4>
 8004152:	68fb      	ldr	r3, [r7, #12]
 8004154:	1e58      	subs	r0, r3, #1
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	6859      	ldr	r1, [r3, #4]
 800415a:	460b      	mov	r3, r1
 800415c:	005b      	lsls	r3, r3, #1
 800415e:	440b      	add	r3, r1
 8004160:	fbb0 f3f3 	udiv	r3, r0, r3
 8004164:	3301      	adds	r3, #1
 8004166:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800416a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800416e:	e00f      	b.n	8004190 <HAL_I2C_Init+0x1c4>
 8004170:	68fb      	ldr	r3, [r7, #12]
 8004172:	1e58      	subs	r0, r3, #1
 8004174:	687b      	ldr	r3, [r7, #4]
 8004176:	6859      	ldr	r1, [r3, #4]
 8004178:	460b      	mov	r3, r1
 800417a:	009b      	lsls	r3, r3, #2
 800417c:	440b      	add	r3, r1
 800417e:	0099      	lsls	r1, r3, #2
 8004180:	440b      	add	r3, r1
 8004182:	fbb0 f3f3 	udiv	r3, r0, r3
 8004186:	3301      	adds	r3, #1
 8004188:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800418c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004190:	6879      	ldr	r1, [r7, #4]
 8004192:	6809      	ldr	r1, [r1, #0]
 8004194:	4313      	orrs	r3, r2
 8004196:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004198:	687b      	ldr	r3, [r7, #4]
 800419a:	681b      	ldr	r3, [r3, #0]
 800419c:	681b      	ldr	r3, [r3, #0]
 800419e:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 80041a2:	687b      	ldr	r3, [r7, #4]
 80041a4:	69da      	ldr	r2, [r3, #28]
 80041a6:	687b      	ldr	r3, [r7, #4]
 80041a8:	6a1b      	ldr	r3, [r3, #32]
 80041aa:	431a      	orrs	r2, r3
 80041ac:	687b      	ldr	r3, [r7, #4]
 80041ae:	681b      	ldr	r3, [r3, #0]
 80041b0:	430a      	orrs	r2, r1
 80041b2:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80041b4:	687b      	ldr	r3, [r7, #4]
 80041b6:	681b      	ldr	r3, [r3, #0]
 80041b8:	689b      	ldr	r3, [r3, #8]
 80041ba:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 80041be:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80041c2:	687a      	ldr	r2, [r7, #4]
 80041c4:	6911      	ldr	r1, [r2, #16]
 80041c6:	687a      	ldr	r2, [r7, #4]
 80041c8:	68d2      	ldr	r2, [r2, #12]
 80041ca:	4311      	orrs	r1, r2
 80041cc:	687a      	ldr	r2, [r7, #4]
 80041ce:	6812      	ldr	r2, [r2, #0]
 80041d0:	430b      	orrs	r3, r1
 80041d2:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	681b      	ldr	r3, [r3, #0]
 80041d8:	68db      	ldr	r3, [r3, #12]
 80041da:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 80041de:	687b      	ldr	r3, [r7, #4]
 80041e0:	695a      	ldr	r2, [r3, #20]
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	699b      	ldr	r3, [r3, #24]
 80041e6:	431a      	orrs	r2, r3
 80041e8:	687b      	ldr	r3, [r7, #4]
 80041ea:	681b      	ldr	r3, [r3, #0]
 80041ec:	430a      	orrs	r2, r1
 80041ee:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	681b      	ldr	r3, [r3, #0]
 80041f4:	681a      	ldr	r2, [r3, #0]
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	681b      	ldr	r3, [r3, #0]
 80041fa:	f042 0201 	orr.w	r2, r2, #1
 80041fe:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	2200      	movs	r2, #0
 8004204:	641a      	str	r2, [r3, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004206:	687b      	ldr	r3, [r7, #4]
 8004208:	2220      	movs	r2, #32
 800420a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800420e:	687b      	ldr	r3, [r7, #4]
 8004210:	2200      	movs	r2, #0
 8004212:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	2200      	movs	r2, #0
 8004218:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 800421c:	2300      	movs	r3, #0
}
 800421e:	4618      	mov	r0, r3
 8004220:	3710      	adds	r7, #16
 8004222:	46bd      	mov	sp, r7
 8004224:	bd80      	pop	{r7, pc}
 8004226:	bf00      	nop
 8004228:	000186a0 	.word	0x000186a0
 800422c:	001e847f 	.word	0x001e847f
 8004230:	003d08ff 	.word	0x003d08ff
 8004234:	431bde83 	.word	0x431bde83
 8004238:	10624dd3 	.word	0x10624dd3

0800423c <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800423c:	b580      	push	{r7, lr}
 800423e:	b088      	sub	sp, #32
 8004240:	af02      	add	r7, sp, #8
 8004242:	60f8      	str	r0, [r7, #12]
 8004244:	607a      	str	r2, [r7, #4]
 8004246:	461a      	mov	r2, r3
 8004248:	460b      	mov	r3, r1
 800424a:	817b      	strh	r3, [r7, #10]
 800424c:	4613      	mov	r3, r2
 800424e:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8004250:	f7fe feea 	bl	8003028 <HAL_GetTick>
 8004254:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004256:	68fb      	ldr	r3, [r7, #12]
 8004258:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800425c:	b2db      	uxtb	r3, r3
 800425e:	2b20      	cmp	r3, #32
 8004260:	f040 80e0 	bne.w	8004424 <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004264:	697b      	ldr	r3, [r7, #20]
 8004266:	9300      	str	r3, [sp, #0]
 8004268:	2319      	movs	r3, #25
 800426a:	2201      	movs	r2, #1
 800426c:	4970      	ldr	r1, [pc, #448]	; (8004430 <HAL_I2C_Master_Transmit+0x1f4>)
 800426e:	68f8      	ldr	r0, [r7, #12]
 8004270:	f000 fc56 	bl	8004b20 <I2C_WaitOnFlagUntilTimeout>
 8004274:	4603      	mov	r3, r0
 8004276:	2b00      	cmp	r3, #0
 8004278:	d001      	beq.n	800427e <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 800427a:	2302      	movs	r3, #2
 800427c:	e0d3      	b.n	8004426 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800427e:	68fb      	ldr	r3, [r7, #12]
 8004280:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004284:	2b01      	cmp	r3, #1
 8004286:	d101      	bne.n	800428c <HAL_I2C_Master_Transmit+0x50>
 8004288:	2302      	movs	r3, #2
 800428a:	e0cc      	b.n	8004426 <HAL_I2C_Master_Transmit+0x1ea>
 800428c:	68fb      	ldr	r3, [r7, #12]
 800428e:	2201      	movs	r2, #1
 8004290:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004294:	68fb      	ldr	r3, [r7, #12]
 8004296:	681b      	ldr	r3, [r3, #0]
 8004298:	681b      	ldr	r3, [r3, #0]
 800429a:	f003 0301 	and.w	r3, r3, #1
 800429e:	2b01      	cmp	r3, #1
 80042a0:	d007      	beq.n	80042b2 <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 80042a2:	68fb      	ldr	r3, [r7, #12]
 80042a4:	681b      	ldr	r3, [r3, #0]
 80042a6:	681a      	ldr	r2, [r3, #0]
 80042a8:	68fb      	ldr	r3, [r7, #12]
 80042aa:	681b      	ldr	r3, [r3, #0]
 80042ac:	f042 0201 	orr.w	r2, r2, #1
 80042b0:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80042b2:	68fb      	ldr	r3, [r7, #12]
 80042b4:	681b      	ldr	r3, [r3, #0]
 80042b6:	681a      	ldr	r2, [r3, #0]
 80042b8:	68fb      	ldr	r3, [r7, #12]
 80042ba:	681b      	ldr	r3, [r3, #0]
 80042bc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80042c0:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 80042c2:	68fb      	ldr	r3, [r7, #12]
 80042c4:	2221      	movs	r2, #33	; 0x21
 80042c6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 80042ca:	68fb      	ldr	r3, [r7, #12]
 80042cc:	2210      	movs	r2, #16
 80042ce:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 80042d2:	68fb      	ldr	r3, [r7, #12]
 80042d4:	2200      	movs	r2, #0
 80042d6:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 80042d8:	68fb      	ldr	r3, [r7, #12]
 80042da:	687a      	ldr	r2, [r7, #4]
 80042dc:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 80042de:	68fb      	ldr	r3, [r7, #12]
 80042e0:	893a      	ldrh	r2, [r7, #8]
 80042e2:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80042e4:	68fb      	ldr	r3, [r7, #12]
 80042e6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80042e8:	b29a      	uxth	r2, r3
 80042ea:	68fb      	ldr	r3, [r7, #12]
 80042ec:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80042ee:	68fb      	ldr	r3, [r7, #12]
 80042f0:	4a50      	ldr	r2, [pc, #320]	; (8004434 <HAL_I2C_Master_Transmit+0x1f8>)
 80042f2:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80042f4:	8979      	ldrh	r1, [r7, #10]
 80042f6:	697b      	ldr	r3, [r7, #20]
 80042f8:	6a3a      	ldr	r2, [r7, #32]
 80042fa:	68f8      	ldr	r0, [r7, #12]
 80042fc:	f000 fac2 	bl	8004884 <I2C_MasterRequestWrite>
 8004300:	4603      	mov	r3, r0
 8004302:	2b00      	cmp	r3, #0
 8004304:	d001      	beq.n	800430a <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 8004306:	2301      	movs	r3, #1
 8004308:	e08d      	b.n	8004426 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800430a:	2300      	movs	r3, #0
 800430c:	613b      	str	r3, [r7, #16]
 800430e:	68fb      	ldr	r3, [r7, #12]
 8004310:	681b      	ldr	r3, [r3, #0]
 8004312:	695b      	ldr	r3, [r3, #20]
 8004314:	613b      	str	r3, [r7, #16]
 8004316:	68fb      	ldr	r3, [r7, #12]
 8004318:	681b      	ldr	r3, [r3, #0]
 800431a:	699b      	ldr	r3, [r3, #24]
 800431c:	613b      	str	r3, [r7, #16]
 800431e:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 8004320:	e066      	b.n	80043f0 <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004322:	697a      	ldr	r2, [r7, #20]
 8004324:	6a39      	ldr	r1, [r7, #32]
 8004326:	68f8      	ldr	r0, [r7, #12]
 8004328:	f000 fcd0 	bl	8004ccc <I2C_WaitOnTXEFlagUntilTimeout>
 800432c:	4603      	mov	r3, r0
 800432e:	2b00      	cmp	r3, #0
 8004330:	d00d      	beq.n	800434e <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004332:	68fb      	ldr	r3, [r7, #12]
 8004334:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004336:	2b04      	cmp	r3, #4
 8004338:	d107      	bne.n	800434a <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800433a:	68fb      	ldr	r3, [r7, #12]
 800433c:	681b      	ldr	r3, [r3, #0]
 800433e:	681a      	ldr	r2, [r3, #0]
 8004340:	68fb      	ldr	r3, [r7, #12]
 8004342:	681b      	ldr	r3, [r3, #0]
 8004344:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004348:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 800434a:	2301      	movs	r3, #1
 800434c:	e06b      	b.n	8004426 <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800434e:	68fb      	ldr	r3, [r7, #12]
 8004350:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004352:	781a      	ldrb	r2, [r3, #0]
 8004354:	68fb      	ldr	r3, [r7, #12]
 8004356:	681b      	ldr	r3, [r3, #0]
 8004358:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 800435a:	68fb      	ldr	r3, [r7, #12]
 800435c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800435e:	1c5a      	adds	r2, r3, #1
 8004360:	68fb      	ldr	r3, [r7, #12]
 8004362:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferCount--;
 8004364:	68fb      	ldr	r3, [r7, #12]
 8004366:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004368:	b29b      	uxth	r3, r3
 800436a:	3b01      	subs	r3, #1
 800436c:	b29a      	uxth	r2, r3
 800436e:	68fb      	ldr	r3, [r7, #12]
 8004370:	855a      	strh	r2, [r3, #42]	; 0x2a
      hi2c->XferSize--;
 8004372:	68fb      	ldr	r3, [r7, #12]
 8004374:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004376:	3b01      	subs	r3, #1
 8004378:	b29a      	uxth	r2, r3
 800437a:	68fb      	ldr	r3, [r7, #12]
 800437c:	851a      	strh	r2, [r3, #40]	; 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800437e:	68fb      	ldr	r3, [r7, #12]
 8004380:	681b      	ldr	r3, [r3, #0]
 8004382:	695b      	ldr	r3, [r3, #20]
 8004384:	f003 0304 	and.w	r3, r3, #4
 8004388:	2b04      	cmp	r3, #4
 800438a:	d11b      	bne.n	80043c4 <HAL_I2C_Master_Transmit+0x188>
 800438c:	68fb      	ldr	r3, [r7, #12]
 800438e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004390:	2b00      	cmp	r3, #0
 8004392:	d017      	beq.n	80043c4 <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004394:	68fb      	ldr	r3, [r7, #12]
 8004396:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004398:	781a      	ldrb	r2, [r3, #0]
 800439a:	68fb      	ldr	r3, [r7, #12]
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 80043a0:	68fb      	ldr	r3, [r7, #12]
 80043a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043a4:	1c5a      	adds	r2, r3, #1
 80043a6:	68fb      	ldr	r3, [r7, #12]
 80043a8:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferCount--;
 80043aa:	68fb      	ldr	r3, [r7, #12]
 80043ac:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80043ae:	b29b      	uxth	r3, r3
 80043b0:	3b01      	subs	r3, #1
 80043b2:	b29a      	uxth	r2, r3
 80043b4:	68fb      	ldr	r3, [r7, #12]
 80043b6:	855a      	strh	r2, [r3, #42]	; 0x2a
        hi2c->XferSize--;
 80043b8:	68fb      	ldr	r3, [r7, #12]
 80043ba:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80043bc:	3b01      	subs	r3, #1
 80043be:	b29a      	uxth	r2, r3
 80043c0:	68fb      	ldr	r3, [r7, #12]
 80043c2:	851a      	strh	r2, [r3, #40]	; 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80043c4:	697a      	ldr	r2, [r7, #20]
 80043c6:	6a39      	ldr	r1, [r7, #32]
 80043c8:	68f8      	ldr	r0, [r7, #12]
 80043ca:	f000 fcc0 	bl	8004d4e <I2C_WaitOnBTFFlagUntilTimeout>
 80043ce:	4603      	mov	r3, r0
 80043d0:	2b00      	cmp	r3, #0
 80043d2:	d00d      	beq.n	80043f0 <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80043d4:	68fb      	ldr	r3, [r7, #12]
 80043d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043d8:	2b04      	cmp	r3, #4
 80043da:	d107      	bne.n	80043ec <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80043dc:	68fb      	ldr	r3, [r7, #12]
 80043de:	681b      	ldr	r3, [r3, #0]
 80043e0:	681a      	ldr	r2, [r3, #0]
 80043e2:	68fb      	ldr	r3, [r7, #12]
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80043ea:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 80043ec:	2301      	movs	r3, #1
 80043ee:	e01a      	b.n	8004426 <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 80043f0:	68fb      	ldr	r3, [r7, #12]
 80043f2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80043f4:	2b00      	cmp	r3, #0
 80043f6:	d194      	bne.n	8004322 <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80043f8:	68fb      	ldr	r3, [r7, #12]
 80043fa:	681b      	ldr	r3, [r3, #0]
 80043fc:	681a      	ldr	r2, [r3, #0]
 80043fe:	68fb      	ldr	r3, [r7, #12]
 8004400:	681b      	ldr	r3, [r3, #0]
 8004402:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004406:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004408:	68fb      	ldr	r3, [r7, #12]
 800440a:	2220      	movs	r2, #32
 800440c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004410:	68fb      	ldr	r3, [r7, #12]
 8004412:	2200      	movs	r2, #0
 8004414:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004418:	68fb      	ldr	r3, [r7, #12]
 800441a:	2200      	movs	r2, #0
 800441c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8004420:	2300      	movs	r3, #0
 8004422:	e000      	b.n	8004426 <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 8004424:	2302      	movs	r3, #2
  }
}
 8004426:	4618      	mov	r0, r3
 8004428:	3718      	adds	r7, #24
 800442a:	46bd      	mov	sp, r7
 800442c:	bd80      	pop	{r7, pc}
 800442e:	bf00      	nop
 8004430:	00100002 	.word	0x00100002
 8004434:	ffff0000 	.word	0xffff0000

08004438 <HAL_I2C_Master_Receive>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004438:	b580      	push	{r7, lr}
 800443a:	b08c      	sub	sp, #48	; 0x30
 800443c:	af02      	add	r7, sp, #8
 800443e:	60f8      	str	r0, [r7, #12]
 8004440:	607a      	str	r2, [r7, #4]
 8004442:	461a      	mov	r2, r3
 8004444:	460b      	mov	r3, r1
 8004446:	817b      	strh	r3, [r7, #10]
 8004448:	4613      	mov	r3, r2
 800444a:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 800444c:	f7fe fdec 	bl	8003028 <HAL_GetTick>
 8004450:	6278      	str	r0, [r7, #36]	; 0x24

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004452:	68fb      	ldr	r3, [r7, #12]
 8004454:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004458:	b2db      	uxtb	r3, r3
 800445a:	2b20      	cmp	r3, #32
 800445c:	f040 820b 	bne.w	8004876 <HAL_I2C_Master_Receive+0x43e>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004460:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004462:	9300      	str	r3, [sp, #0]
 8004464:	2319      	movs	r3, #25
 8004466:	2201      	movs	r2, #1
 8004468:	497c      	ldr	r1, [pc, #496]	; (800465c <HAL_I2C_Master_Receive+0x224>)
 800446a:	68f8      	ldr	r0, [r7, #12]
 800446c:	f000 fb58 	bl	8004b20 <I2C_WaitOnFlagUntilTimeout>
 8004470:	4603      	mov	r3, r0
 8004472:	2b00      	cmp	r3, #0
 8004474:	d001      	beq.n	800447a <HAL_I2C_Master_Receive+0x42>
    {
      return HAL_BUSY;
 8004476:	2302      	movs	r3, #2
 8004478:	e1fe      	b.n	8004878 <HAL_I2C_Master_Receive+0x440>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800447a:	68fb      	ldr	r3, [r7, #12]
 800447c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004480:	2b01      	cmp	r3, #1
 8004482:	d101      	bne.n	8004488 <HAL_I2C_Master_Receive+0x50>
 8004484:	2302      	movs	r3, #2
 8004486:	e1f7      	b.n	8004878 <HAL_I2C_Master_Receive+0x440>
 8004488:	68fb      	ldr	r3, [r7, #12]
 800448a:	2201      	movs	r2, #1
 800448c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004490:	68fb      	ldr	r3, [r7, #12]
 8004492:	681b      	ldr	r3, [r3, #0]
 8004494:	681b      	ldr	r3, [r3, #0]
 8004496:	f003 0301 	and.w	r3, r3, #1
 800449a:	2b01      	cmp	r3, #1
 800449c:	d007      	beq.n	80044ae <HAL_I2C_Master_Receive+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800449e:	68fb      	ldr	r3, [r7, #12]
 80044a0:	681b      	ldr	r3, [r3, #0]
 80044a2:	681a      	ldr	r2, [r3, #0]
 80044a4:	68fb      	ldr	r3, [r7, #12]
 80044a6:	681b      	ldr	r3, [r3, #0]
 80044a8:	f042 0201 	orr.w	r2, r2, #1
 80044ac:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80044ae:	68fb      	ldr	r3, [r7, #12]
 80044b0:	681b      	ldr	r3, [r3, #0]
 80044b2:	681a      	ldr	r2, [r3, #0]
 80044b4:	68fb      	ldr	r3, [r7, #12]
 80044b6:	681b      	ldr	r3, [r3, #0]
 80044b8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80044bc:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 80044be:	68fb      	ldr	r3, [r7, #12]
 80044c0:	2222      	movs	r2, #34	; 0x22
 80044c2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 80044c6:	68fb      	ldr	r3, [r7, #12]
 80044c8:	2210      	movs	r2, #16
 80044ca:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 80044ce:	68fb      	ldr	r3, [r7, #12]
 80044d0:	2200      	movs	r2, #0
 80044d2:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 80044d4:	68fb      	ldr	r3, [r7, #12]
 80044d6:	687a      	ldr	r2, [r7, #4]
 80044d8:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 80044da:	68fb      	ldr	r3, [r7, #12]
 80044dc:	893a      	ldrh	r2, [r7, #8]
 80044de:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80044e0:	68fb      	ldr	r3, [r7, #12]
 80044e2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80044e4:	b29a      	uxth	r2, r3
 80044e6:	68fb      	ldr	r3, [r7, #12]
 80044e8:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80044ea:	68fb      	ldr	r3, [r7, #12]
 80044ec:	4a5c      	ldr	r2, [pc, #368]	; (8004660 <HAL_I2C_Master_Receive+0x228>)
 80044ee:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestRead(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80044f0:	8979      	ldrh	r1, [r7, #10]
 80044f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80044f4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80044f6:	68f8      	ldr	r0, [r7, #12]
 80044f8:	f000 fa46 	bl	8004988 <I2C_MasterRequestRead>
 80044fc:	4603      	mov	r3, r0
 80044fe:	2b00      	cmp	r3, #0
 8004500:	d001      	beq.n	8004506 <HAL_I2C_Master_Receive+0xce>
    {
      return HAL_ERROR;
 8004502:	2301      	movs	r3, #1
 8004504:	e1b8      	b.n	8004878 <HAL_I2C_Master_Receive+0x440>
    }

    if (hi2c->XferSize == 0U)
 8004506:	68fb      	ldr	r3, [r7, #12]
 8004508:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800450a:	2b00      	cmp	r3, #0
 800450c:	d113      	bne.n	8004536 <HAL_I2C_Master_Receive+0xfe>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800450e:	2300      	movs	r3, #0
 8004510:	623b      	str	r3, [r7, #32]
 8004512:	68fb      	ldr	r3, [r7, #12]
 8004514:	681b      	ldr	r3, [r3, #0]
 8004516:	695b      	ldr	r3, [r3, #20]
 8004518:	623b      	str	r3, [r7, #32]
 800451a:	68fb      	ldr	r3, [r7, #12]
 800451c:	681b      	ldr	r3, [r3, #0]
 800451e:	699b      	ldr	r3, [r3, #24]
 8004520:	623b      	str	r3, [r7, #32]
 8004522:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004524:	68fb      	ldr	r3, [r7, #12]
 8004526:	681b      	ldr	r3, [r3, #0]
 8004528:	681a      	ldr	r2, [r3, #0]
 800452a:	68fb      	ldr	r3, [r7, #12]
 800452c:	681b      	ldr	r3, [r3, #0]
 800452e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004532:	601a      	str	r2, [r3, #0]
 8004534:	e18c      	b.n	8004850 <HAL_I2C_Master_Receive+0x418>
    }
    else if (hi2c->XferSize == 1U)
 8004536:	68fb      	ldr	r3, [r7, #12]
 8004538:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800453a:	2b01      	cmp	r3, #1
 800453c:	d11b      	bne.n	8004576 <HAL_I2C_Master_Receive+0x13e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800453e:	68fb      	ldr	r3, [r7, #12]
 8004540:	681b      	ldr	r3, [r3, #0]
 8004542:	681a      	ldr	r2, [r3, #0]
 8004544:	68fb      	ldr	r3, [r7, #12]
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800454c:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800454e:	2300      	movs	r3, #0
 8004550:	61fb      	str	r3, [r7, #28]
 8004552:	68fb      	ldr	r3, [r7, #12]
 8004554:	681b      	ldr	r3, [r3, #0]
 8004556:	695b      	ldr	r3, [r3, #20]
 8004558:	61fb      	str	r3, [r7, #28]
 800455a:	68fb      	ldr	r3, [r7, #12]
 800455c:	681b      	ldr	r3, [r3, #0]
 800455e:	699b      	ldr	r3, [r3, #24]
 8004560:	61fb      	str	r3, [r7, #28]
 8004562:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004564:	68fb      	ldr	r3, [r7, #12]
 8004566:	681b      	ldr	r3, [r3, #0]
 8004568:	681a      	ldr	r2, [r3, #0]
 800456a:	68fb      	ldr	r3, [r7, #12]
 800456c:	681b      	ldr	r3, [r3, #0]
 800456e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004572:	601a      	str	r2, [r3, #0]
 8004574:	e16c      	b.n	8004850 <HAL_I2C_Master_Receive+0x418>
    }
    else if (hi2c->XferSize == 2U)
 8004576:	68fb      	ldr	r3, [r7, #12]
 8004578:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800457a:	2b02      	cmp	r3, #2
 800457c:	d11b      	bne.n	80045b6 <HAL_I2C_Master_Receive+0x17e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800457e:	68fb      	ldr	r3, [r7, #12]
 8004580:	681b      	ldr	r3, [r3, #0]
 8004582:	681a      	ldr	r2, [r3, #0]
 8004584:	68fb      	ldr	r3, [r7, #12]
 8004586:	681b      	ldr	r3, [r3, #0]
 8004588:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800458c:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800458e:	68fb      	ldr	r3, [r7, #12]
 8004590:	681b      	ldr	r3, [r3, #0]
 8004592:	681a      	ldr	r2, [r3, #0]
 8004594:	68fb      	ldr	r3, [r7, #12]
 8004596:	681b      	ldr	r3, [r3, #0]
 8004598:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800459c:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800459e:	2300      	movs	r3, #0
 80045a0:	61bb      	str	r3, [r7, #24]
 80045a2:	68fb      	ldr	r3, [r7, #12]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	695b      	ldr	r3, [r3, #20]
 80045a8:	61bb      	str	r3, [r7, #24]
 80045aa:	68fb      	ldr	r3, [r7, #12]
 80045ac:	681b      	ldr	r3, [r3, #0]
 80045ae:	699b      	ldr	r3, [r3, #24]
 80045b0:	61bb      	str	r3, [r7, #24]
 80045b2:	69bb      	ldr	r3, [r7, #24]
 80045b4:	e14c      	b.n	8004850 <HAL_I2C_Master_Receive+0x418>
    }
    else
    {
      /* Enable Acknowledge */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80045b6:	68fb      	ldr	r3, [r7, #12]
 80045b8:	681b      	ldr	r3, [r3, #0]
 80045ba:	681a      	ldr	r2, [r3, #0]
 80045bc:	68fb      	ldr	r3, [r7, #12]
 80045be:	681b      	ldr	r3, [r3, #0]
 80045c0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80045c4:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80045c6:	2300      	movs	r3, #0
 80045c8:	617b      	str	r3, [r7, #20]
 80045ca:	68fb      	ldr	r3, [r7, #12]
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	695b      	ldr	r3, [r3, #20]
 80045d0:	617b      	str	r3, [r7, #20]
 80045d2:	68fb      	ldr	r3, [r7, #12]
 80045d4:	681b      	ldr	r3, [r3, #0]
 80045d6:	699b      	ldr	r3, [r3, #24]
 80045d8:	617b      	str	r3, [r7, #20]
 80045da:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 80045dc:	e138      	b.n	8004850 <HAL_I2C_Master_Receive+0x418>
    {
      if (hi2c->XferSize <= 3U)
 80045de:	68fb      	ldr	r3, [r7, #12]
 80045e0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80045e2:	2b03      	cmp	r3, #3
 80045e4:	f200 80f1 	bhi.w	80047ca <HAL_I2C_Master_Receive+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 80045e8:	68fb      	ldr	r3, [r7, #12]
 80045ea:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80045ec:	2b01      	cmp	r3, #1
 80045ee:	d123      	bne.n	8004638 <HAL_I2C_Master_Receive+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80045f0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80045f2:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80045f4:	68f8      	ldr	r0, [r7, #12]
 80045f6:	f000 fbeb 	bl	8004dd0 <I2C_WaitOnRXNEFlagUntilTimeout>
 80045fa:	4603      	mov	r3, r0
 80045fc:	2b00      	cmp	r3, #0
 80045fe:	d001      	beq.n	8004604 <HAL_I2C_Master_Receive+0x1cc>
          {
            return HAL_ERROR;
 8004600:	2301      	movs	r3, #1
 8004602:	e139      	b.n	8004878 <HAL_I2C_Master_Receive+0x440>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004604:	68fb      	ldr	r3, [r7, #12]
 8004606:	681b      	ldr	r3, [r3, #0]
 8004608:	691a      	ldr	r2, [r3, #16]
 800460a:	68fb      	ldr	r3, [r7, #12]
 800460c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800460e:	b2d2      	uxtb	r2, r2
 8004610:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004612:	68fb      	ldr	r3, [r7, #12]
 8004614:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004616:	1c5a      	adds	r2, r3, #1
 8004618:	68fb      	ldr	r3, [r7, #12]
 800461a:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 800461c:	68fb      	ldr	r3, [r7, #12]
 800461e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004620:	3b01      	subs	r3, #1
 8004622:	b29a      	uxth	r2, r3
 8004624:	68fb      	ldr	r3, [r7, #12]
 8004626:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8004628:	68fb      	ldr	r3, [r7, #12]
 800462a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800462c:	b29b      	uxth	r3, r3
 800462e:	3b01      	subs	r3, #1
 8004630:	b29a      	uxth	r2, r3
 8004632:	68fb      	ldr	r3, [r7, #12]
 8004634:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004636:	e10b      	b.n	8004850 <HAL_I2C_Master_Receive+0x418>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 8004638:	68fb      	ldr	r3, [r7, #12]
 800463a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800463c:	2b02      	cmp	r3, #2
 800463e:	d14e      	bne.n	80046de <HAL_I2C_Master_Receive+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004640:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004642:	9300      	str	r3, [sp, #0]
 8004644:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004646:	2200      	movs	r2, #0
 8004648:	4906      	ldr	r1, [pc, #24]	; (8004664 <HAL_I2C_Master_Receive+0x22c>)
 800464a:	68f8      	ldr	r0, [r7, #12]
 800464c:	f000 fa68 	bl	8004b20 <I2C_WaitOnFlagUntilTimeout>
 8004650:	4603      	mov	r3, r0
 8004652:	2b00      	cmp	r3, #0
 8004654:	d008      	beq.n	8004668 <HAL_I2C_Master_Receive+0x230>
          {
            return HAL_ERROR;
 8004656:	2301      	movs	r3, #1
 8004658:	e10e      	b.n	8004878 <HAL_I2C_Master_Receive+0x440>
 800465a:	bf00      	nop
 800465c:	00100002 	.word	0x00100002
 8004660:	ffff0000 	.word	0xffff0000
 8004664:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004668:	68fb      	ldr	r3, [r7, #12]
 800466a:	681b      	ldr	r3, [r3, #0]
 800466c:	681a      	ldr	r2, [r3, #0]
 800466e:	68fb      	ldr	r3, [r7, #12]
 8004670:	681b      	ldr	r3, [r3, #0]
 8004672:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004676:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004678:	68fb      	ldr	r3, [r7, #12]
 800467a:	681b      	ldr	r3, [r3, #0]
 800467c:	691a      	ldr	r2, [r3, #16]
 800467e:	68fb      	ldr	r3, [r7, #12]
 8004680:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004682:	b2d2      	uxtb	r2, r2
 8004684:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004686:	68fb      	ldr	r3, [r7, #12]
 8004688:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800468a:	1c5a      	adds	r2, r3, #1
 800468c:	68fb      	ldr	r3, [r7, #12]
 800468e:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004690:	68fb      	ldr	r3, [r7, #12]
 8004692:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004694:	3b01      	subs	r3, #1
 8004696:	b29a      	uxth	r2, r3
 8004698:	68fb      	ldr	r3, [r7, #12]
 800469a:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 800469c:	68fb      	ldr	r3, [r7, #12]
 800469e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80046a0:	b29b      	uxth	r3, r3
 80046a2:	3b01      	subs	r3, #1
 80046a4:	b29a      	uxth	r2, r3
 80046a6:	68fb      	ldr	r3, [r7, #12]
 80046a8:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80046aa:	68fb      	ldr	r3, [r7, #12]
 80046ac:	681b      	ldr	r3, [r3, #0]
 80046ae:	691a      	ldr	r2, [r3, #16]
 80046b0:	68fb      	ldr	r3, [r7, #12]
 80046b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046b4:	b2d2      	uxtb	r2, r2
 80046b6:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80046b8:	68fb      	ldr	r3, [r7, #12]
 80046ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046bc:	1c5a      	adds	r2, r3, #1
 80046be:	68fb      	ldr	r3, [r7, #12]
 80046c0:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80046c2:	68fb      	ldr	r3, [r7, #12]
 80046c4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80046c6:	3b01      	subs	r3, #1
 80046c8:	b29a      	uxth	r2, r3
 80046ca:	68fb      	ldr	r3, [r7, #12]
 80046cc:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80046ce:	68fb      	ldr	r3, [r7, #12]
 80046d0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80046d2:	b29b      	uxth	r3, r3
 80046d4:	3b01      	subs	r3, #1
 80046d6:	b29a      	uxth	r2, r3
 80046d8:	68fb      	ldr	r3, [r7, #12]
 80046da:	855a      	strh	r2, [r3, #42]	; 0x2a
 80046dc:	e0b8      	b.n	8004850 <HAL_I2C_Master_Receive+0x418>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80046de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80046e0:	9300      	str	r3, [sp, #0]
 80046e2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80046e4:	2200      	movs	r2, #0
 80046e6:	4966      	ldr	r1, [pc, #408]	; (8004880 <HAL_I2C_Master_Receive+0x448>)
 80046e8:	68f8      	ldr	r0, [r7, #12]
 80046ea:	f000 fa19 	bl	8004b20 <I2C_WaitOnFlagUntilTimeout>
 80046ee:	4603      	mov	r3, r0
 80046f0:	2b00      	cmp	r3, #0
 80046f2:	d001      	beq.n	80046f8 <HAL_I2C_Master_Receive+0x2c0>
          {
            return HAL_ERROR;
 80046f4:	2301      	movs	r3, #1
 80046f6:	e0bf      	b.n	8004878 <HAL_I2C_Master_Receive+0x440>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80046f8:	68fb      	ldr	r3, [r7, #12]
 80046fa:	681b      	ldr	r3, [r3, #0]
 80046fc:	681a      	ldr	r2, [r3, #0]
 80046fe:	68fb      	ldr	r3, [r7, #12]
 8004700:	681b      	ldr	r3, [r3, #0]
 8004702:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004706:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004708:	68fb      	ldr	r3, [r7, #12]
 800470a:	681b      	ldr	r3, [r3, #0]
 800470c:	691a      	ldr	r2, [r3, #16]
 800470e:	68fb      	ldr	r3, [r7, #12]
 8004710:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004712:	b2d2      	uxtb	r2, r2
 8004714:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004716:	68fb      	ldr	r3, [r7, #12]
 8004718:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800471a:	1c5a      	adds	r2, r3, #1
 800471c:	68fb      	ldr	r3, [r7, #12]
 800471e:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004720:	68fb      	ldr	r3, [r7, #12]
 8004722:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004724:	3b01      	subs	r3, #1
 8004726:	b29a      	uxth	r2, r3
 8004728:	68fb      	ldr	r3, [r7, #12]
 800472a:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 800472c:	68fb      	ldr	r3, [r7, #12]
 800472e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004730:	b29b      	uxth	r3, r3
 8004732:	3b01      	subs	r3, #1
 8004734:	b29a      	uxth	r2, r3
 8004736:	68fb      	ldr	r3, [r7, #12]
 8004738:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800473a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800473c:	9300      	str	r3, [sp, #0]
 800473e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004740:	2200      	movs	r2, #0
 8004742:	494f      	ldr	r1, [pc, #316]	; (8004880 <HAL_I2C_Master_Receive+0x448>)
 8004744:	68f8      	ldr	r0, [r7, #12]
 8004746:	f000 f9eb 	bl	8004b20 <I2C_WaitOnFlagUntilTimeout>
 800474a:	4603      	mov	r3, r0
 800474c:	2b00      	cmp	r3, #0
 800474e:	d001      	beq.n	8004754 <HAL_I2C_Master_Receive+0x31c>
          {
            return HAL_ERROR;
 8004750:	2301      	movs	r3, #1
 8004752:	e091      	b.n	8004878 <HAL_I2C_Master_Receive+0x440>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004754:	68fb      	ldr	r3, [r7, #12]
 8004756:	681b      	ldr	r3, [r3, #0]
 8004758:	681a      	ldr	r2, [r3, #0]
 800475a:	68fb      	ldr	r3, [r7, #12]
 800475c:	681b      	ldr	r3, [r3, #0]
 800475e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004762:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004764:	68fb      	ldr	r3, [r7, #12]
 8004766:	681b      	ldr	r3, [r3, #0]
 8004768:	691a      	ldr	r2, [r3, #16]
 800476a:	68fb      	ldr	r3, [r7, #12]
 800476c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800476e:	b2d2      	uxtb	r2, r2
 8004770:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004772:	68fb      	ldr	r3, [r7, #12]
 8004774:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004776:	1c5a      	adds	r2, r3, #1
 8004778:	68fb      	ldr	r3, [r7, #12]
 800477a:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 800477c:	68fb      	ldr	r3, [r7, #12]
 800477e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004780:	3b01      	subs	r3, #1
 8004782:	b29a      	uxth	r2, r3
 8004784:	68fb      	ldr	r3, [r7, #12]
 8004786:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8004788:	68fb      	ldr	r3, [r7, #12]
 800478a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800478c:	b29b      	uxth	r3, r3
 800478e:	3b01      	subs	r3, #1
 8004790:	b29a      	uxth	r2, r3
 8004792:	68fb      	ldr	r3, [r7, #12]
 8004794:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004796:	68fb      	ldr	r3, [r7, #12]
 8004798:	681b      	ldr	r3, [r3, #0]
 800479a:	691a      	ldr	r2, [r3, #16]
 800479c:	68fb      	ldr	r3, [r7, #12]
 800479e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047a0:	b2d2      	uxtb	r2, r2
 80047a2:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80047a4:	68fb      	ldr	r3, [r7, #12]
 80047a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047a8:	1c5a      	adds	r2, r3, #1
 80047aa:	68fb      	ldr	r3, [r7, #12]
 80047ac:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80047ae:	68fb      	ldr	r3, [r7, #12]
 80047b0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80047b2:	3b01      	subs	r3, #1
 80047b4:	b29a      	uxth	r2, r3
 80047b6:	68fb      	ldr	r3, [r7, #12]
 80047b8:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80047ba:	68fb      	ldr	r3, [r7, #12]
 80047bc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80047be:	b29b      	uxth	r3, r3
 80047c0:	3b01      	subs	r3, #1
 80047c2:	b29a      	uxth	r2, r3
 80047c4:	68fb      	ldr	r3, [r7, #12]
 80047c6:	855a      	strh	r2, [r3, #42]	; 0x2a
 80047c8:	e042      	b.n	8004850 <HAL_I2C_Master_Receive+0x418>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80047ca:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80047cc:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80047ce:	68f8      	ldr	r0, [r7, #12]
 80047d0:	f000 fafe 	bl	8004dd0 <I2C_WaitOnRXNEFlagUntilTimeout>
 80047d4:	4603      	mov	r3, r0
 80047d6:	2b00      	cmp	r3, #0
 80047d8:	d001      	beq.n	80047de <HAL_I2C_Master_Receive+0x3a6>
        {
          return HAL_ERROR;
 80047da:	2301      	movs	r3, #1
 80047dc:	e04c      	b.n	8004878 <HAL_I2C_Master_Receive+0x440>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80047de:	68fb      	ldr	r3, [r7, #12]
 80047e0:	681b      	ldr	r3, [r3, #0]
 80047e2:	691a      	ldr	r2, [r3, #16]
 80047e4:	68fb      	ldr	r3, [r7, #12]
 80047e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047e8:	b2d2      	uxtb	r2, r2
 80047ea:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 80047ec:	68fb      	ldr	r3, [r7, #12]
 80047ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047f0:	1c5a      	adds	r2, r3, #1
 80047f2:	68fb      	ldr	r3, [r7, #12]
 80047f4:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 80047f6:	68fb      	ldr	r3, [r7, #12]
 80047f8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80047fa:	3b01      	subs	r3, #1
 80047fc:	b29a      	uxth	r2, r3
 80047fe:	68fb      	ldr	r3, [r7, #12]
 8004800:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 8004802:	68fb      	ldr	r3, [r7, #12]
 8004804:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004806:	b29b      	uxth	r3, r3
 8004808:	3b01      	subs	r3, #1
 800480a:	b29a      	uxth	r2, r3
 800480c:	68fb      	ldr	r3, [r7, #12]
 800480e:	855a      	strh	r2, [r3, #42]	; 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004810:	68fb      	ldr	r3, [r7, #12]
 8004812:	681b      	ldr	r3, [r3, #0]
 8004814:	695b      	ldr	r3, [r3, #20]
 8004816:	f003 0304 	and.w	r3, r3, #4
 800481a:	2b04      	cmp	r3, #4
 800481c:	d118      	bne.n	8004850 <HAL_I2C_Master_Receive+0x418>
        {
          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800481e:	68fb      	ldr	r3, [r7, #12]
 8004820:	681b      	ldr	r3, [r3, #0]
 8004822:	691a      	ldr	r2, [r3, #16]
 8004824:	68fb      	ldr	r3, [r7, #12]
 8004826:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004828:	b2d2      	uxtb	r2, r2
 800482a:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800482c:	68fb      	ldr	r3, [r7, #12]
 800482e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004830:	1c5a      	adds	r2, r3, #1
 8004832:	68fb      	ldr	r3, [r7, #12]
 8004834:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004836:	68fb      	ldr	r3, [r7, #12]
 8004838:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800483a:	3b01      	subs	r3, #1
 800483c:	b29a      	uxth	r2, r3
 800483e:	68fb      	ldr	r3, [r7, #12]
 8004840:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8004842:	68fb      	ldr	r3, [r7, #12]
 8004844:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004846:	b29b      	uxth	r3, r3
 8004848:	3b01      	subs	r3, #1
 800484a:	b29a      	uxth	r2, r3
 800484c:	68fb      	ldr	r3, [r7, #12]
 800484e:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8004850:	68fb      	ldr	r3, [r7, #12]
 8004852:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004854:	2b00      	cmp	r3, #0
 8004856:	f47f aec2 	bne.w	80045de <HAL_I2C_Master_Receive+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 800485a:	68fb      	ldr	r3, [r7, #12]
 800485c:	2220      	movs	r2, #32
 800485e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004862:	68fb      	ldr	r3, [r7, #12]
 8004864:	2200      	movs	r2, #0
 8004866:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800486a:	68fb      	ldr	r3, [r7, #12]
 800486c:	2200      	movs	r2, #0
 800486e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8004872:	2300      	movs	r3, #0
 8004874:	e000      	b.n	8004878 <HAL_I2C_Master_Receive+0x440>
  }
  else
  {
    return HAL_BUSY;
 8004876:	2302      	movs	r3, #2
  }
}
 8004878:	4618      	mov	r0, r3
 800487a:	3728      	adds	r7, #40	; 0x28
 800487c:	46bd      	mov	sp, r7
 800487e:	bd80      	pop	{r7, pc}
 8004880:	00010004 	.word	0x00010004

08004884 <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8004884:	b580      	push	{r7, lr}
 8004886:	b088      	sub	sp, #32
 8004888:	af02      	add	r7, sp, #8
 800488a:	60f8      	str	r0, [r7, #12]
 800488c:	607a      	str	r2, [r7, #4]
 800488e:	603b      	str	r3, [r7, #0]
 8004890:	460b      	mov	r3, r1
 8004892:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8004894:	68fb      	ldr	r3, [r7, #12]
 8004896:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004898:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 800489a:	697b      	ldr	r3, [r7, #20]
 800489c:	2b08      	cmp	r3, #8
 800489e:	d006      	beq.n	80048ae <I2C_MasterRequestWrite+0x2a>
 80048a0:	697b      	ldr	r3, [r7, #20]
 80048a2:	2b01      	cmp	r3, #1
 80048a4:	d003      	beq.n	80048ae <I2C_MasterRequestWrite+0x2a>
 80048a6:	697b      	ldr	r3, [r7, #20]
 80048a8:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80048ac:	d108      	bne.n	80048c0 <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80048ae:	68fb      	ldr	r3, [r7, #12]
 80048b0:	681b      	ldr	r3, [r3, #0]
 80048b2:	681a      	ldr	r2, [r3, #0]
 80048b4:	68fb      	ldr	r3, [r7, #12]
 80048b6:	681b      	ldr	r3, [r3, #0]
 80048b8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80048bc:	601a      	str	r2, [r3, #0]
 80048be:	e00b      	b.n	80048d8 <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 80048c0:	68fb      	ldr	r3, [r7, #12]
 80048c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80048c4:	2b12      	cmp	r3, #18
 80048c6:	d107      	bne.n	80048d8 <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80048c8:	68fb      	ldr	r3, [r7, #12]
 80048ca:	681b      	ldr	r3, [r3, #0]
 80048cc:	681a      	ldr	r2, [r3, #0]
 80048ce:	68fb      	ldr	r3, [r7, #12]
 80048d0:	681b      	ldr	r3, [r3, #0]
 80048d2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80048d6:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80048d8:	683b      	ldr	r3, [r7, #0]
 80048da:	9300      	str	r3, [sp, #0]
 80048dc:	687b      	ldr	r3, [r7, #4]
 80048de:	2200      	movs	r2, #0
 80048e0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80048e4:	68f8      	ldr	r0, [r7, #12]
 80048e6:	f000 f91b 	bl	8004b20 <I2C_WaitOnFlagUntilTimeout>
 80048ea:	4603      	mov	r3, r0
 80048ec:	2b00      	cmp	r3, #0
 80048ee:	d00c      	beq.n	800490a <I2C_MasterRequestWrite+0x86>
  {
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80048f0:	68fb      	ldr	r3, [r7, #12]
 80048f2:	681b      	ldr	r3, [r3, #0]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80048fa:	2b00      	cmp	r3, #0
 80048fc:	d003      	beq.n	8004906 <I2C_MasterRequestWrite+0x82>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80048fe:	68fb      	ldr	r3, [r7, #12]
 8004900:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004904:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8004906:	2303      	movs	r3, #3
 8004908:	e035      	b.n	8004976 <I2C_MasterRequestWrite+0xf2>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800490a:	68fb      	ldr	r3, [r7, #12]
 800490c:	691b      	ldr	r3, [r3, #16]
 800490e:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8004912:	d108      	bne.n	8004926 <I2C_MasterRequestWrite+0xa2>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004914:	897b      	ldrh	r3, [r7, #10]
 8004916:	b2db      	uxtb	r3, r3
 8004918:	461a      	mov	r2, r3
 800491a:	68fb      	ldr	r3, [r7, #12]
 800491c:	681b      	ldr	r3, [r3, #0]
 800491e:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8004922:	611a      	str	r2, [r3, #16]
 8004924:	e01b      	b.n	800495e <I2C_MasterRequestWrite+0xda>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004926:	897b      	ldrh	r3, [r7, #10]
 8004928:	11db      	asrs	r3, r3, #7
 800492a:	b2db      	uxtb	r3, r3
 800492c:	f003 0306 	and.w	r3, r3, #6
 8004930:	b2db      	uxtb	r3, r3
 8004932:	f063 030f 	orn	r3, r3, #15
 8004936:	b2da      	uxtb	r2, r3
 8004938:	68fb      	ldr	r3, [r7, #12]
 800493a:	681b      	ldr	r3, [r3, #0]
 800493c:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 800493e:	683b      	ldr	r3, [r7, #0]
 8004940:	687a      	ldr	r2, [r7, #4]
 8004942:	490f      	ldr	r1, [pc, #60]	; (8004980 <I2C_MasterRequestWrite+0xfc>)
 8004944:	68f8      	ldr	r0, [r7, #12]
 8004946:	f000 f942 	bl	8004bce <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800494a:	4603      	mov	r3, r0
 800494c:	2b00      	cmp	r3, #0
 800494e:	d001      	beq.n	8004954 <I2C_MasterRequestWrite+0xd0>
    {
      return HAL_ERROR;
 8004950:	2301      	movs	r3, #1
 8004952:	e010      	b.n	8004976 <I2C_MasterRequestWrite+0xf2>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004954:	897b      	ldrh	r3, [r7, #10]
 8004956:	b2da      	uxtb	r2, r3
 8004958:	68fb      	ldr	r3, [r7, #12]
 800495a:	681b      	ldr	r3, [r3, #0]
 800495c:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800495e:	683b      	ldr	r3, [r7, #0]
 8004960:	687a      	ldr	r2, [r7, #4]
 8004962:	4908      	ldr	r1, [pc, #32]	; (8004984 <I2C_MasterRequestWrite+0x100>)
 8004964:	68f8      	ldr	r0, [r7, #12]
 8004966:	f000 f932 	bl	8004bce <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800496a:	4603      	mov	r3, r0
 800496c:	2b00      	cmp	r3, #0
 800496e:	d001      	beq.n	8004974 <I2C_MasterRequestWrite+0xf0>
  {
    return HAL_ERROR;
 8004970:	2301      	movs	r3, #1
 8004972:	e000      	b.n	8004976 <I2C_MasterRequestWrite+0xf2>
  }

  return HAL_OK;
 8004974:	2300      	movs	r3, #0
}
 8004976:	4618      	mov	r0, r3
 8004978:	3718      	adds	r7, #24
 800497a:	46bd      	mov	sp, r7
 800497c:	bd80      	pop	{r7, pc}
 800497e:	bf00      	nop
 8004980:	00010008 	.word	0x00010008
 8004984:	00010002 	.word	0x00010002

08004988 <I2C_MasterRequestRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8004988:	b580      	push	{r7, lr}
 800498a:	b088      	sub	sp, #32
 800498c:	af02      	add	r7, sp, #8
 800498e:	60f8      	str	r0, [r7, #12]
 8004990:	607a      	str	r2, [r7, #4]
 8004992:	603b      	str	r3, [r7, #0]
 8004994:	460b      	mov	r3, r1
 8004996:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8004998:	68fb      	ldr	r3, [r7, #12]
 800499a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800499c:	617b      	str	r3, [r7, #20]

  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800499e:	68fb      	ldr	r3, [r7, #12]
 80049a0:	681b      	ldr	r3, [r3, #0]
 80049a2:	681a      	ldr	r2, [r3, #0]
 80049a4:	68fb      	ldr	r3, [r7, #12]
 80049a6:	681b      	ldr	r3, [r3, #0]
 80049a8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80049ac:	601a      	str	r2, [r3, #0]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 80049ae:	697b      	ldr	r3, [r7, #20]
 80049b0:	2b08      	cmp	r3, #8
 80049b2:	d006      	beq.n	80049c2 <I2C_MasterRequestRead+0x3a>
 80049b4:	697b      	ldr	r3, [r7, #20]
 80049b6:	2b01      	cmp	r3, #1
 80049b8:	d003      	beq.n	80049c2 <I2C_MasterRequestRead+0x3a>
 80049ba:	697b      	ldr	r3, [r7, #20]
 80049bc:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80049c0:	d108      	bne.n	80049d4 <I2C_MasterRequestRead+0x4c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80049c2:	68fb      	ldr	r3, [r7, #12]
 80049c4:	681b      	ldr	r3, [r3, #0]
 80049c6:	681a      	ldr	r2, [r3, #0]
 80049c8:	68fb      	ldr	r3, [r7, #12]
 80049ca:	681b      	ldr	r3, [r3, #0]
 80049cc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80049d0:	601a      	str	r2, [r3, #0]
 80049d2:	e00b      	b.n	80049ec <I2C_MasterRequestRead+0x64>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 80049d4:	68fb      	ldr	r3, [r7, #12]
 80049d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80049d8:	2b11      	cmp	r3, #17
 80049da:	d107      	bne.n	80049ec <I2C_MasterRequestRead+0x64>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80049dc:	68fb      	ldr	r3, [r7, #12]
 80049de:	681b      	ldr	r3, [r3, #0]
 80049e0:	681a      	ldr	r2, [r3, #0]
 80049e2:	68fb      	ldr	r3, [r7, #12]
 80049e4:	681b      	ldr	r3, [r3, #0]
 80049e6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80049ea:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80049ec:	683b      	ldr	r3, [r7, #0]
 80049ee:	9300      	str	r3, [sp, #0]
 80049f0:	687b      	ldr	r3, [r7, #4]
 80049f2:	2200      	movs	r2, #0
 80049f4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80049f8:	68f8      	ldr	r0, [r7, #12]
 80049fa:	f000 f891 	bl	8004b20 <I2C_WaitOnFlagUntilTimeout>
 80049fe:	4603      	mov	r3, r0
 8004a00:	2b00      	cmp	r3, #0
 8004a02:	d00c      	beq.n	8004a1e <I2C_MasterRequestRead+0x96>
  {
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8004a04:	68fb      	ldr	r3, [r7, #12]
 8004a06:	681b      	ldr	r3, [r3, #0]
 8004a08:	681b      	ldr	r3, [r3, #0]
 8004a0a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004a0e:	2b00      	cmp	r3, #0
 8004a10:	d003      	beq.n	8004a1a <I2C_MasterRequestRead+0x92>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004a12:	68fb      	ldr	r3, [r7, #12]
 8004a14:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004a18:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8004a1a:	2303      	movs	r3, #3
 8004a1c:	e078      	b.n	8004b10 <I2C_MasterRequestRead+0x188>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004a1e:	68fb      	ldr	r3, [r7, #12]
 8004a20:	691b      	ldr	r3, [r3, #16]
 8004a22:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8004a26:	d108      	bne.n	8004a3a <I2C_MasterRequestRead+0xb2>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004a28:	897b      	ldrh	r3, [r7, #10]
 8004a2a:	b2db      	uxtb	r3, r3
 8004a2c:	f043 0301 	orr.w	r3, r3, #1
 8004a30:	b2da      	uxtb	r2, r3
 8004a32:	68fb      	ldr	r3, [r7, #12]
 8004a34:	681b      	ldr	r3, [r3, #0]
 8004a36:	611a      	str	r2, [r3, #16]
 8004a38:	e05e      	b.n	8004af8 <I2C_MasterRequestRead+0x170>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004a3a:	897b      	ldrh	r3, [r7, #10]
 8004a3c:	11db      	asrs	r3, r3, #7
 8004a3e:	b2db      	uxtb	r3, r3
 8004a40:	f003 0306 	and.w	r3, r3, #6
 8004a44:	b2db      	uxtb	r3, r3
 8004a46:	f063 030f 	orn	r3, r3, #15
 8004a4a:	b2da      	uxtb	r2, r3
 8004a4c:	68fb      	ldr	r3, [r7, #12]
 8004a4e:	681b      	ldr	r3, [r3, #0]
 8004a50:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8004a52:	683b      	ldr	r3, [r7, #0]
 8004a54:	687a      	ldr	r2, [r7, #4]
 8004a56:	4930      	ldr	r1, [pc, #192]	; (8004b18 <I2C_MasterRequestRead+0x190>)
 8004a58:	68f8      	ldr	r0, [r7, #12]
 8004a5a:	f000 f8b8 	bl	8004bce <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004a5e:	4603      	mov	r3, r0
 8004a60:	2b00      	cmp	r3, #0
 8004a62:	d001      	beq.n	8004a68 <I2C_MasterRequestRead+0xe0>
    {
      return HAL_ERROR;
 8004a64:	2301      	movs	r3, #1
 8004a66:	e053      	b.n	8004b10 <I2C_MasterRequestRead+0x188>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004a68:	897b      	ldrh	r3, [r7, #10]
 8004a6a:	b2da      	uxtb	r2, r3
 8004a6c:	68fb      	ldr	r3, [r7, #12]
 8004a6e:	681b      	ldr	r3, [r3, #0]
 8004a70:	611a      	str	r2, [r3, #16]

    /* Wait until ADDR flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004a72:	683b      	ldr	r3, [r7, #0]
 8004a74:	687a      	ldr	r2, [r7, #4]
 8004a76:	4929      	ldr	r1, [pc, #164]	; (8004b1c <I2C_MasterRequestRead+0x194>)
 8004a78:	68f8      	ldr	r0, [r7, #12]
 8004a7a:	f000 f8a8 	bl	8004bce <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004a7e:	4603      	mov	r3, r0
 8004a80:	2b00      	cmp	r3, #0
 8004a82:	d001      	beq.n	8004a88 <I2C_MasterRequestRead+0x100>
    {
      return HAL_ERROR;
 8004a84:	2301      	movs	r3, #1
 8004a86:	e043      	b.n	8004b10 <I2C_MasterRequestRead+0x188>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004a88:	2300      	movs	r3, #0
 8004a8a:	613b      	str	r3, [r7, #16]
 8004a8c:	68fb      	ldr	r3, [r7, #12]
 8004a8e:	681b      	ldr	r3, [r3, #0]
 8004a90:	695b      	ldr	r3, [r3, #20]
 8004a92:	613b      	str	r3, [r7, #16]
 8004a94:	68fb      	ldr	r3, [r7, #12]
 8004a96:	681b      	ldr	r3, [r3, #0]
 8004a98:	699b      	ldr	r3, [r3, #24]
 8004a9a:	613b      	str	r3, [r7, #16]
 8004a9c:	693b      	ldr	r3, [r7, #16]

    /* Generate Restart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004a9e:	68fb      	ldr	r3, [r7, #12]
 8004aa0:	681b      	ldr	r3, [r3, #0]
 8004aa2:	681a      	ldr	r2, [r3, #0]
 8004aa4:	68fb      	ldr	r3, [r7, #12]
 8004aa6:	681b      	ldr	r3, [r3, #0]
 8004aa8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004aac:	601a      	str	r2, [r3, #0]

    /* Wait until SB flag is set */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004aae:	683b      	ldr	r3, [r7, #0]
 8004ab0:	9300      	str	r3, [sp, #0]
 8004ab2:	687b      	ldr	r3, [r7, #4]
 8004ab4:	2200      	movs	r2, #0
 8004ab6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8004aba:	68f8      	ldr	r0, [r7, #12]
 8004abc:	f000 f830 	bl	8004b20 <I2C_WaitOnFlagUntilTimeout>
 8004ac0:	4603      	mov	r3, r0
 8004ac2:	2b00      	cmp	r3, #0
 8004ac4:	d00c      	beq.n	8004ae0 <I2C_MasterRequestRead+0x158>
    {
      if (hi2c->Instance->CR1 & I2C_CR1_START)
 8004ac6:	68fb      	ldr	r3, [r7, #12]
 8004ac8:	681b      	ldr	r3, [r3, #0]
 8004aca:	681b      	ldr	r3, [r3, #0]
 8004acc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004ad0:	2b00      	cmp	r3, #0
 8004ad2:	d003      	beq.n	8004adc <I2C_MasterRequestRead+0x154>
      {
        hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004ad4:	68fb      	ldr	r3, [r7, #12]
 8004ad6:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004ada:	641a      	str	r2, [r3, #64]	; 0x40
      }
      return HAL_TIMEOUT;
 8004adc:	2303      	movs	r3, #3
 8004ade:	e017      	b.n	8004b10 <I2C_MasterRequestRead+0x188>
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 8004ae0:	897b      	ldrh	r3, [r7, #10]
 8004ae2:	11db      	asrs	r3, r3, #7
 8004ae4:	b2db      	uxtb	r3, r3
 8004ae6:	f003 0306 	and.w	r3, r3, #6
 8004aea:	b2db      	uxtb	r3, r3
 8004aec:	f063 030e 	orn	r3, r3, #14
 8004af0:	b2da      	uxtb	r2, r3
 8004af2:	68fb      	ldr	r3, [r7, #12]
 8004af4:	681b      	ldr	r3, [r3, #0]
 8004af6:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004af8:	683b      	ldr	r3, [r7, #0]
 8004afa:	687a      	ldr	r2, [r7, #4]
 8004afc:	4907      	ldr	r1, [pc, #28]	; (8004b1c <I2C_MasterRequestRead+0x194>)
 8004afe:	68f8      	ldr	r0, [r7, #12]
 8004b00:	f000 f865 	bl	8004bce <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004b04:	4603      	mov	r3, r0
 8004b06:	2b00      	cmp	r3, #0
 8004b08:	d001      	beq.n	8004b0e <I2C_MasterRequestRead+0x186>
  {
    return HAL_ERROR;
 8004b0a:	2301      	movs	r3, #1
 8004b0c:	e000      	b.n	8004b10 <I2C_MasterRequestRead+0x188>
  }

  return HAL_OK;
 8004b0e:	2300      	movs	r3, #0
}
 8004b10:	4618      	mov	r0, r3
 8004b12:	3718      	adds	r7, #24
 8004b14:	46bd      	mov	sp, r7
 8004b16:	bd80      	pop	{r7, pc}
 8004b18:	00010008 	.word	0x00010008
 8004b1c:	00010002 	.word	0x00010002

08004b20 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 8004b20:	b580      	push	{r7, lr}
 8004b22:	b084      	sub	sp, #16
 8004b24:	af00      	add	r7, sp, #0
 8004b26:	60f8      	str	r0, [r7, #12]
 8004b28:	60b9      	str	r1, [r7, #8]
 8004b2a:	603b      	str	r3, [r7, #0]
 8004b2c:	4613      	mov	r3, r2
 8004b2e:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004b30:	e025      	b.n	8004b7e <I2C_WaitOnFlagUntilTimeout+0x5e>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004b32:	683b      	ldr	r3, [r7, #0]
 8004b34:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004b38:	d021      	beq.n	8004b7e <I2C_WaitOnFlagUntilTimeout+0x5e>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004b3a:	f7fe fa75 	bl	8003028 <HAL_GetTick>
 8004b3e:	4602      	mov	r2, r0
 8004b40:	69bb      	ldr	r3, [r7, #24]
 8004b42:	1ad3      	subs	r3, r2, r3
 8004b44:	683a      	ldr	r2, [r7, #0]
 8004b46:	429a      	cmp	r2, r3
 8004b48:	d302      	bcc.n	8004b50 <I2C_WaitOnFlagUntilTimeout+0x30>
 8004b4a:	683b      	ldr	r3, [r7, #0]
 8004b4c:	2b00      	cmp	r3, #0
 8004b4e:	d116      	bne.n	8004b7e <I2C_WaitOnFlagUntilTimeout+0x5e>
      {
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004b50:	68fb      	ldr	r3, [r7, #12]
 8004b52:	2200      	movs	r2, #0
 8004b54:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004b56:	68fb      	ldr	r3, [r7, #12]
 8004b58:	2220      	movs	r2, #32
 8004b5a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004b5e:	68fb      	ldr	r3, [r7, #12]
 8004b60:	2200      	movs	r2, #0
 8004b62:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004b66:	68fb      	ldr	r3, [r7, #12]
 8004b68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b6a:	f043 0220 	orr.w	r2, r3, #32
 8004b6e:	68fb      	ldr	r3, [r7, #12]
 8004b70:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004b72:	68fb      	ldr	r3, [r7, #12]
 8004b74:	2200      	movs	r2, #0
 8004b76:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8004b7a:	2301      	movs	r3, #1
 8004b7c:	e023      	b.n	8004bc6 <I2C_WaitOnFlagUntilTimeout+0xa6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004b7e:	68bb      	ldr	r3, [r7, #8]
 8004b80:	0c1b      	lsrs	r3, r3, #16
 8004b82:	b2db      	uxtb	r3, r3
 8004b84:	2b01      	cmp	r3, #1
 8004b86:	d10d      	bne.n	8004ba4 <I2C_WaitOnFlagUntilTimeout+0x84>
 8004b88:	68fb      	ldr	r3, [r7, #12]
 8004b8a:	681b      	ldr	r3, [r3, #0]
 8004b8c:	695b      	ldr	r3, [r3, #20]
 8004b8e:	43da      	mvns	r2, r3
 8004b90:	68bb      	ldr	r3, [r7, #8]
 8004b92:	4013      	ands	r3, r2
 8004b94:	b29b      	uxth	r3, r3
 8004b96:	2b00      	cmp	r3, #0
 8004b98:	bf0c      	ite	eq
 8004b9a:	2301      	moveq	r3, #1
 8004b9c:	2300      	movne	r3, #0
 8004b9e:	b2db      	uxtb	r3, r3
 8004ba0:	461a      	mov	r2, r3
 8004ba2:	e00c      	b.n	8004bbe <I2C_WaitOnFlagUntilTimeout+0x9e>
 8004ba4:	68fb      	ldr	r3, [r7, #12]
 8004ba6:	681b      	ldr	r3, [r3, #0]
 8004ba8:	699b      	ldr	r3, [r3, #24]
 8004baa:	43da      	mvns	r2, r3
 8004bac:	68bb      	ldr	r3, [r7, #8]
 8004bae:	4013      	ands	r3, r2
 8004bb0:	b29b      	uxth	r3, r3
 8004bb2:	2b00      	cmp	r3, #0
 8004bb4:	bf0c      	ite	eq
 8004bb6:	2301      	moveq	r3, #1
 8004bb8:	2300      	movne	r3, #0
 8004bba:	b2db      	uxtb	r3, r3
 8004bbc:	461a      	mov	r2, r3
 8004bbe:	79fb      	ldrb	r3, [r7, #7]
 8004bc0:	429a      	cmp	r2, r3
 8004bc2:	d0b6      	beq.n	8004b32 <I2C_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8004bc4:	2300      	movs	r3, #0
}
 8004bc6:	4618      	mov	r0, r3
 8004bc8:	3710      	adds	r7, #16
 8004bca:	46bd      	mov	sp, r7
 8004bcc:	bd80      	pop	{r7, pc}

08004bce <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 8004bce:	b580      	push	{r7, lr}
 8004bd0:	b084      	sub	sp, #16
 8004bd2:	af00      	add	r7, sp, #0
 8004bd4:	60f8      	str	r0, [r7, #12]
 8004bd6:	60b9      	str	r1, [r7, #8]
 8004bd8:	607a      	str	r2, [r7, #4]
 8004bda:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004bdc:	e051      	b.n	8004c82 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004bde:	68fb      	ldr	r3, [r7, #12]
 8004be0:	681b      	ldr	r3, [r3, #0]
 8004be2:	695b      	ldr	r3, [r3, #20]
 8004be4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004be8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004bec:	d123      	bne.n	8004c36 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004bee:	68fb      	ldr	r3, [r7, #12]
 8004bf0:	681b      	ldr	r3, [r3, #0]
 8004bf2:	681a      	ldr	r2, [r3, #0]
 8004bf4:	68fb      	ldr	r3, [r7, #12]
 8004bf6:	681b      	ldr	r3, [r3, #0]
 8004bf8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004bfc:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004bfe:	68fb      	ldr	r3, [r7, #12]
 8004c00:	681b      	ldr	r3, [r3, #0]
 8004c02:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8004c06:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8004c08:	68fb      	ldr	r3, [r7, #12]
 8004c0a:	2200      	movs	r2, #0
 8004c0c:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004c0e:	68fb      	ldr	r3, [r7, #12]
 8004c10:	2220      	movs	r2, #32
 8004c12:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004c16:	68fb      	ldr	r3, [r7, #12]
 8004c18:	2200      	movs	r2, #0
 8004c1a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004c1e:	68fb      	ldr	r3, [r7, #12]
 8004c20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c22:	f043 0204 	orr.w	r2, r3, #4
 8004c26:	68fb      	ldr	r3, [r7, #12]
 8004c28:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8004c2a:	68fb      	ldr	r3, [r7, #12]
 8004c2c:	2200      	movs	r2, #0
 8004c2e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 8004c32:	2301      	movs	r3, #1
 8004c34:	e046      	b.n	8004cc4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004c36:	687b      	ldr	r3, [r7, #4]
 8004c38:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004c3c:	d021      	beq.n	8004c82 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004c3e:	f7fe f9f3 	bl	8003028 <HAL_GetTick>
 8004c42:	4602      	mov	r2, r0
 8004c44:	683b      	ldr	r3, [r7, #0]
 8004c46:	1ad3      	subs	r3, r2, r3
 8004c48:	687a      	ldr	r2, [r7, #4]
 8004c4a:	429a      	cmp	r2, r3
 8004c4c:	d302      	bcc.n	8004c54 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8004c4e:	687b      	ldr	r3, [r7, #4]
 8004c50:	2b00      	cmp	r3, #0
 8004c52:	d116      	bne.n	8004c82 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004c54:	68fb      	ldr	r3, [r7, #12]
 8004c56:	2200      	movs	r2, #0
 8004c58:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004c5a:	68fb      	ldr	r3, [r7, #12]
 8004c5c:	2220      	movs	r2, #32
 8004c5e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004c62:	68fb      	ldr	r3, [r7, #12]
 8004c64:	2200      	movs	r2, #0
 8004c66:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004c6a:	68fb      	ldr	r3, [r7, #12]
 8004c6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c6e:	f043 0220 	orr.w	r2, r3, #32
 8004c72:	68fb      	ldr	r3, [r7, #12]
 8004c74:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004c76:	68fb      	ldr	r3, [r7, #12]
 8004c78:	2200      	movs	r2, #0
 8004c7a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8004c7e:	2301      	movs	r3, #1
 8004c80:	e020      	b.n	8004cc4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004c82:	68bb      	ldr	r3, [r7, #8]
 8004c84:	0c1b      	lsrs	r3, r3, #16
 8004c86:	b2db      	uxtb	r3, r3
 8004c88:	2b01      	cmp	r3, #1
 8004c8a:	d10c      	bne.n	8004ca6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8004c8c:	68fb      	ldr	r3, [r7, #12]
 8004c8e:	681b      	ldr	r3, [r3, #0]
 8004c90:	695b      	ldr	r3, [r3, #20]
 8004c92:	43da      	mvns	r2, r3
 8004c94:	68bb      	ldr	r3, [r7, #8]
 8004c96:	4013      	ands	r3, r2
 8004c98:	b29b      	uxth	r3, r3
 8004c9a:	2b00      	cmp	r3, #0
 8004c9c:	bf14      	ite	ne
 8004c9e:	2301      	movne	r3, #1
 8004ca0:	2300      	moveq	r3, #0
 8004ca2:	b2db      	uxtb	r3, r3
 8004ca4:	e00b      	b.n	8004cbe <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8004ca6:	68fb      	ldr	r3, [r7, #12]
 8004ca8:	681b      	ldr	r3, [r3, #0]
 8004caa:	699b      	ldr	r3, [r3, #24]
 8004cac:	43da      	mvns	r2, r3
 8004cae:	68bb      	ldr	r3, [r7, #8]
 8004cb0:	4013      	ands	r3, r2
 8004cb2:	b29b      	uxth	r3, r3
 8004cb4:	2b00      	cmp	r3, #0
 8004cb6:	bf14      	ite	ne
 8004cb8:	2301      	movne	r3, #1
 8004cba:	2300      	moveq	r3, #0
 8004cbc:	b2db      	uxtb	r3, r3
 8004cbe:	2b00      	cmp	r3, #0
 8004cc0:	d18d      	bne.n	8004bde <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
      }
    }
  }
  return HAL_OK;
 8004cc2:	2300      	movs	r3, #0
}
 8004cc4:	4618      	mov	r0, r3
 8004cc6:	3710      	adds	r7, #16
 8004cc8:	46bd      	mov	sp, r7
 8004cca:	bd80      	pop	{r7, pc}

08004ccc <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004ccc:	b580      	push	{r7, lr}
 8004cce:	b084      	sub	sp, #16
 8004cd0:	af00      	add	r7, sp, #0
 8004cd2:	60f8      	str	r0, [r7, #12]
 8004cd4:	60b9      	str	r1, [r7, #8]
 8004cd6:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004cd8:	e02d      	b.n	8004d36 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004cda:	68f8      	ldr	r0, [r7, #12]
 8004cdc:	f000 f8ce 	bl	8004e7c <I2C_IsAcknowledgeFailed>
 8004ce0:	4603      	mov	r3, r0
 8004ce2:	2b00      	cmp	r3, #0
 8004ce4:	d001      	beq.n	8004cea <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8004ce6:	2301      	movs	r3, #1
 8004ce8:	e02d      	b.n	8004d46 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004cea:	68bb      	ldr	r3, [r7, #8]
 8004cec:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004cf0:	d021      	beq.n	8004d36 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004cf2:	f7fe f999 	bl	8003028 <HAL_GetTick>
 8004cf6:	4602      	mov	r2, r0
 8004cf8:	687b      	ldr	r3, [r7, #4]
 8004cfa:	1ad3      	subs	r3, r2, r3
 8004cfc:	68ba      	ldr	r2, [r7, #8]
 8004cfe:	429a      	cmp	r2, r3
 8004d00:	d302      	bcc.n	8004d08 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8004d02:	68bb      	ldr	r3, [r7, #8]
 8004d04:	2b00      	cmp	r3, #0
 8004d06:	d116      	bne.n	8004d36 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004d08:	68fb      	ldr	r3, [r7, #12]
 8004d0a:	2200      	movs	r2, #0
 8004d0c:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004d0e:	68fb      	ldr	r3, [r7, #12]
 8004d10:	2220      	movs	r2, #32
 8004d12:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004d16:	68fb      	ldr	r3, [r7, #12]
 8004d18:	2200      	movs	r2, #0
 8004d1a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004d1e:	68fb      	ldr	r3, [r7, #12]
 8004d20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004d22:	f043 0220 	orr.w	r2, r3, #32
 8004d26:	68fb      	ldr	r3, [r7, #12]
 8004d28:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004d2a:	68fb      	ldr	r3, [r7, #12]
 8004d2c:	2200      	movs	r2, #0
 8004d2e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8004d32:	2301      	movs	r3, #1
 8004d34:	e007      	b.n	8004d46 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004d36:	68fb      	ldr	r3, [r7, #12]
 8004d38:	681b      	ldr	r3, [r3, #0]
 8004d3a:	695b      	ldr	r3, [r3, #20]
 8004d3c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004d40:	2b80      	cmp	r3, #128	; 0x80
 8004d42:	d1ca      	bne.n	8004cda <I2C_WaitOnTXEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8004d44:	2300      	movs	r3, #0
}
 8004d46:	4618      	mov	r0, r3
 8004d48:	3710      	adds	r7, #16
 8004d4a:	46bd      	mov	sp, r7
 8004d4c:	bd80      	pop	{r7, pc}

08004d4e <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004d4e:	b580      	push	{r7, lr}
 8004d50:	b084      	sub	sp, #16
 8004d52:	af00      	add	r7, sp, #0
 8004d54:	60f8      	str	r0, [r7, #12]
 8004d56:	60b9      	str	r1, [r7, #8]
 8004d58:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004d5a:	e02d      	b.n	8004db8 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004d5c:	68f8      	ldr	r0, [r7, #12]
 8004d5e:	f000 f88d 	bl	8004e7c <I2C_IsAcknowledgeFailed>
 8004d62:	4603      	mov	r3, r0
 8004d64:	2b00      	cmp	r3, #0
 8004d66:	d001      	beq.n	8004d6c <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8004d68:	2301      	movs	r3, #1
 8004d6a:	e02d      	b.n	8004dc8 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004d6c:	68bb      	ldr	r3, [r7, #8]
 8004d6e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004d72:	d021      	beq.n	8004db8 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004d74:	f7fe f958 	bl	8003028 <HAL_GetTick>
 8004d78:	4602      	mov	r2, r0
 8004d7a:	687b      	ldr	r3, [r7, #4]
 8004d7c:	1ad3      	subs	r3, r2, r3
 8004d7e:	68ba      	ldr	r2, [r7, #8]
 8004d80:	429a      	cmp	r2, r3
 8004d82:	d302      	bcc.n	8004d8a <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8004d84:	68bb      	ldr	r3, [r7, #8]
 8004d86:	2b00      	cmp	r3, #0
 8004d88:	d116      	bne.n	8004db8 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004d8a:	68fb      	ldr	r3, [r7, #12]
 8004d8c:	2200      	movs	r2, #0
 8004d8e:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004d90:	68fb      	ldr	r3, [r7, #12]
 8004d92:	2220      	movs	r2, #32
 8004d94:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004d98:	68fb      	ldr	r3, [r7, #12]
 8004d9a:	2200      	movs	r2, #0
 8004d9c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004da0:	68fb      	ldr	r3, [r7, #12]
 8004da2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004da4:	f043 0220 	orr.w	r2, r3, #32
 8004da8:	68fb      	ldr	r3, [r7, #12]
 8004daa:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004dac:	68fb      	ldr	r3, [r7, #12]
 8004dae:	2200      	movs	r2, #0
 8004db0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8004db4:	2301      	movs	r3, #1
 8004db6:	e007      	b.n	8004dc8 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004db8:	68fb      	ldr	r3, [r7, #12]
 8004dba:	681b      	ldr	r3, [r3, #0]
 8004dbc:	695b      	ldr	r3, [r3, #20]
 8004dbe:	f003 0304 	and.w	r3, r3, #4
 8004dc2:	2b04      	cmp	r3, #4
 8004dc4:	d1ca      	bne.n	8004d5c <I2C_WaitOnBTFFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8004dc6:	2300      	movs	r3, #0
}
 8004dc8:	4618      	mov	r0, r3
 8004dca:	3710      	adds	r7, #16
 8004dcc:	46bd      	mov	sp, r7
 8004dce:	bd80      	pop	{r7, pc}

08004dd0 <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004dd0:	b580      	push	{r7, lr}
 8004dd2:	b084      	sub	sp, #16
 8004dd4:	af00      	add	r7, sp, #0
 8004dd6:	60f8      	str	r0, [r7, #12]
 8004dd8:	60b9      	str	r1, [r7, #8]
 8004dda:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004ddc:	e042      	b.n	8004e64 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004dde:	68fb      	ldr	r3, [r7, #12]
 8004de0:	681b      	ldr	r3, [r3, #0]
 8004de2:	695b      	ldr	r3, [r3, #20]
 8004de4:	f003 0310 	and.w	r3, r3, #16
 8004de8:	2b10      	cmp	r3, #16
 8004dea:	d119      	bne.n	8004e20 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004dec:	68fb      	ldr	r3, [r7, #12]
 8004dee:	681b      	ldr	r3, [r3, #0]
 8004df0:	f06f 0210 	mvn.w	r2, #16
 8004df4:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8004df6:	68fb      	ldr	r3, [r7, #12]
 8004df8:	2200      	movs	r2, #0
 8004dfa:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004dfc:	68fb      	ldr	r3, [r7, #12]
 8004dfe:	2220      	movs	r2, #32
 8004e00:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004e04:	68fb      	ldr	r3, [r7, #12]
 8004e06:	2200      	movs	r2, #0
 8004e08:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004e0c:	68fb      	ldr	r3, [r7, #12]
 8004e0e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004e10:	68fb      	ldr	r3, [r7, #12]
 8004e12:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8004e14:	68fb      	ldr	r3, [r7, #12]
 8004e16:	2200      	movs	r2, #0
 8004e18:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 8004e1c:	2301      	movs	r3, #1
 8004e1e:	e029      	b.n	8004e74 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004e20:	f7fe f902 	bl	8003028 <HAL_GetTick>
 8004e24:	4602      	mov	r2, r0
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	1ad3      	subs	r3, r2, r3
 8004e2a:	68ba      	ldr	r2, [r7, #8]
 8004e2c:	429a      	cmp	r2, r3
 8004e2e:	d302      	bcc.n	8004e36 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8004e30:	68bb      	ldr	r3, [r7, #8]
 8004e32:	2b00      	cmp	r3, #0
 8004e34:	d116      	bne.n	8004e64 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
    {
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004e36:	68fb      	ldr	r3, [r7, #12]
 8004e38:	2200      	movs	r2, #0
 8004e3a:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004e3c:	68fb      	ldr	r3, [r7, #12]
 8004e3e:	2220      	movs	r2, #32
 8004e40:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004e44:	68fb      	ldr	r3, [r7, #12]
 8004e46:	2200      	movs	r2, #0
 8004e48:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004e4c:	68fb      	ldr	r3, [r7, #12]
 8004e4e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e50:	f043 0220 	orr.w	r2, r3, #32
 8004e54:	68fb      	ldr	r3, [r7, #12]
 8004e56:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8004e58:	68fb      	ldr	r3, [r7, #12]
 8004e5a:	2200      	movs	r2, #0
 8004e5c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 8004e60:	2301      	movs	r3, #1
 8004e62:	e007      	b.n	8004e74 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004e64:	68fb      	ldr	r3, [r7, #12]
 8004e66:	681b      	ldr	r3, [r3, #0]
 8004e68:	695b      	ldr	r3, [r3, #20]
 8004e6a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004e6e:	2b40      	cmp	r3, #64	; 0x40
 8004e70:	d1b5      	bne.n	8004dde <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
    }
  }
  return HAL_OK;
 8004e72:	2300      	movs	r3, #0
}
 8004e74:	4618      	mov	r0, r3
 8004e76:	3710      	adds	r7, #16
 8004e78:	46bd      	mov	sp, r7
 8004e7a:	bd80      	pop	{r7, pc}

08004e7c <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 8004e7c:	b480      	push	{r7}
 8004e7e:	b083      	sub	sp, #12
 8004e80:	af00      	add	r7, sp, #0
 8004e82:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004e84:	687b      	ldr	r3, [r7, #4]
 8004e86:	681b      	ldr	r3, [r3, #0]
 8004e88:	695b      	ldr	r3, [r3, #20]
 8004e8a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004e8e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004e92:	d11b      	bne.n	8004ecc <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	681b      	ldr	r3, [r3, #0]
 8004e98:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8004e9c:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	2200      	movs	r2, #0
 8004ea2:	631a      	str	r2, [r3, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	2220      	movs	r2, #32
 8004ea8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	2200      	movs	r2, #0
 8004eb0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004eb8:	f043 0204 	orr.w	r2, r3, #4
 8004ebc:	687b      	ldr	r3, [r7, #4]
 8004ebe:	641a      	str	r2, [r3, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004ec0:	687b      	ldr	r3, [r7, #4]
 8004ec2:	2200      	movs	r2, #0
 8004ec4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_ERROR;
 8004ec8:	2301      	movs	r3, #1
 8004eca:	e000      	b.n	8004ece <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 8004ecc:	2300      	movs	r3, #0
}
 8004ece:	4618      	mov	r0, r3
 8004ed0:	370c      	adds	r7, #12
 8004ed2:	46bd      	mov	sp, r7
 8004ed4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ed8:	4770      	bx	lr

08004eda <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8004eda:	b480      	push	{r7}
 8004edc:	b083      	sub	sp, #12
 8004ede:	af00      	add	r7, sp, #0
 8004ee0:	6078      	str	r0, [r7, #4]
 8004ee2:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004eea:	b2db      	uxtb	r3, r3
 8004eec:	2b20      	cmp	r3, #32
 8004eee:	d129      	bne.n	8004f44 <HAL_I2CEx_ConfigAnalogFilter+0x6a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004ef0:	687b      	ldr	r3, [r7, #4]
 8004ef2:	2224      	movs	r2, #36	; 0x24
 8004ef4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004ef8:	687b      	ldr	r3, [r7, #4]
 8004efa:	681b      	ldr	r3, [r3, #0]
 8004efc:	681a      	ldr	r2, [r3, #0]
 8004efe:	687b      	ldr	r3, [r7, #4]
 8004f00:	681b      	ldr	r3, [r3, #0]
 8004f02:	f022 0201 	bic.w	r2, r2, #1
 8004f06:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8004f08:	687b      	ldr	r3, [r7, #4]
 8004f0a:	681b      	ldr	r3, [r3, #0]
 8004f0c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	681b      	ldr	r3, [r3, #0]
 8004f12:	f022 0210 	bic.w	r2, r2, #16
 8004f16:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8004f18:	687b      	ldr	r3, [r7, #4]
 8004f1a:	681b      	ldr	r3, [r3, #0]
 8004f1c:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004f1e:	687b      	ldr	r3, [r7, #4]
 8004f20:	681b      	ldr	r3, [r3, #0]
 8004f22:	683a      	ldr	r2, [r7, #0]
 8004f24:	430a      	orrs	r2, r1
 8004f26:	625a      	str	r2, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	681b      	ldr	r3, [r3, #0]
 8004f2c:	681a      	ldr	r2, [r3, #0]
 8004f2e:	687b      	ldr	r3, [r7, #4]
 8004f30:	681b      	ldr	r3, [r3, #0]
 8004f32:	f042 0201 	orr.w	r2, r2, #1
 8004f36:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	2220      	movs	r2, #32
 8004f3c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    return HAL_OK;
 8004f40:	2300      	movs	r3, #0
 8004f42:	e000      	b.n	8004f46 <HAL_I2CEx_ConfigAnalogFilter+0x6c>
  }
  else
  {
    return HAL_BUSY;
 8004f44:	2302      	movs	r3, #2
  }
}
 8004f46:	4618      	mov	r0, r3
 8004f48:	370c      	adds	r7, #12
 8004f4a:	46bd      	mov	sp, r7
 8004f4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f50:	4770      	bx	lr

08004f52 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8004f52:	b480      	push	{r7}
 8004f54:	b085      	sub	sp, #20
 8004f56:	af00      	add	r7, sp, #0
 8004f58:	6078      	str	r0, [r7, #4]
 8004f5a:	6039      	str	r1, [r7, #0]
  uint16_t tmpreg = 0;
 8004f5c:	2300      	movs	r3, #0
 8004f5e:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004f66:	b2db      	uxtb	r3, r3
 8004f68:	2b20      	cmp	r3, #32
 8004f6a:	d12a      	bne.n	8004fc2 <HAL_I2CEx_ConfigDigitalFilter+0x70>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004f6c:	687b      	ldr	r3, [r7, #4]
 8004f6e:	2224      	movs	r2, #36	; 0x24
 8004f70:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004f74:	687b      	ldr	r3, [r7, #4]
 8004f76:	681b      	ldr	r3, [r3, #0]
 8004f78:	681a      	ldr	r2, [r3, #0]
 8004f7a:	687b      	ldr	r3, [r7, #4]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	f022 0201 	bic.w	r2, r2, #1
 8004f82:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f8a:	81fb      	strh	r3, [r7, #14]

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8004f8c:	89fb      	ldrh	r3, [r7, #14]
 8004f8e:	f023 030f 	bic.w	r3, r3, #15
 8004f92:	81fb      	strh	r3, [r7, #14]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8004f94:	683b      	ldr	r3, [r7, #0]
 8004f96:	b29a      	uxth	r2, r3
 8004f98:	89fb      	ldrh	r3, [r7, #14]
 8004f9a:	4313      	orrs	r3, r2
 8004f9c:	81fb      	strh	r3, [r7, #14]

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8004f9e:	687b      	ldr	r3, [r7, #4]
 8004fa0:	681b      	ldr	r3, [r3, #0]
 8004fa2:	89fa      	ldrh	r2, [r7, #14]
 8004fa4:	625a      	str	r2, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004fa6:	687b      	ldr	r3, [r7, #4]
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	681a      	ldr	r2, [r3, #0]
 8004fac:	687b      	ldr	r3, [r7, #4]
 8004fae:	681b      	ldr	r3, [r3, #0]
 8004fb0:	f042 0201 	orr.w	r2, r2, #1
 8004fb4:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004fb6:	687b      	ldr	r3, [r7, #4]
 8004fb8:	2220      	movs	r2, #32
 8004fba:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    return HAL_OK;
 8004fbe:	2300      	movs	r3, #0
 8004fc0:	e000      	b.n	8004fc4 <HAL_I2CEx_ConfigDigitalFilter+0x72>
  }
  else
  {
    return HAL_BUSY;
 8004fc2:	2302      	movs	r3, #2
  }
}
 8004fc4:	4618      	mov	r0, r3
 8004fc6:	3714      	adds	r7, #20
 8004fc8:	46bd      	mov	sp, r7
 8004fca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fce:	4770      	bx	lr

08004fd0 <HAL_LTDC_Init>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
 8004fd0:	b580      	push	{r7, lr}
 8004fd2:	b084      	sub	sp, #16
 8004fd4:	af00      	add	r7, sp, #0
 8004fd6:	6078      	str	r0, [r7, #4]
  uint32_t tmp, tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 8004fd8:	687b      	ldr	r3, [r7, #4]
 8004fda:	2b00      	cmp	r3, #0
 8004fdc:	d101      	bne.n	8004fe2 <HAL_LTDC_Init+0x12>
  {
    return HAL_ERROR;
 8004fde:	2301      	movs	r3, #1
 8004fe0:	e0bf      	b.n	8005162 <HAL_LTDC_Init+0x192>
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8004fe2:	687b      	ldr	r3, [r7, #4]
 8004fe4:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8004fe8:	b2db      	uxtb	r3, r3
 8004fea:	2b00      	cmp	r3, #0
 8004fec:	d106      	bne.n	8004ffc <HAL_LTDC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hltdc->Lock = HAL_UNLOCKED;
 8004fee:	687b      	ldr	r3, [r7, #4]
 8004ff0:	2200      	movs	r2, #0
 8004ff2:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
    /* Init the low level hardware */
    HAL_LTDC_MspInit(hltdc);
 8004ff6:	6878      	ldr	r0, [r7, #4]
 8004ff8:	f7fc fed4 	bl	8001da4 <HAL_LTDC_MspInit>
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004ffc:	687b      	ldr	r3, [r7, #4]
 8004ffe:	2202      	movs	r2, #2
 8005000:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005004:	687b      	ldr	r3, [r7, #4]
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	699a      	ldr	r2, [r3, #24]
 800500a:	687b      	ldr	r3, [r7, #4]
 800500c:	681b      	ldr	r3, [r3, #0]
 800500e:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005012:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	681b      	ldr	r3, [r3, #0]
 8005018:	6999      	ldr	r1, [r3, #24]
 800501a:	687b      	ldr	r3, [r7, #4]
 800501c:	685a      	ldr	r2, [r3, #4]
 800501e:	687b      	ldr	r3, [r7, #4]
 8005020:	689b      	ldr	r3, [r3, #8]
 8005022:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005024:	687b      	ldr	r3, [r7, #4]
 8005026:	68db      	ldr	r3, [r3, #12]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005028:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800502a:	687b      	ldr	r3, [r7, #4]
 800502c:	691b      	ldr	r3, [r3, #16]
 800502e:	431a      	orrs	r2, r3
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	681b      	ldr	r3, [r3, #0]
 8005034:	430a      	orrs	r2, r1
 8005036:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005038:	687b      	ldr	r3, [r7, #4]
 800503a:	681b      	ldr	r3, [r3, #0]
 800503c:	6899      	ldr	r1, [r3, #8]
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	681a      	ldr	r2, [r3, #0]
 8005042:	4b4a      	ldr	r3, [pc, #296]	; (800516c <HAL_LTDC_Init+0x19c>)
 8005044:	400b      	ands	r3, r1
 8005046:	6093      	str	r3, [r2, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005048:	687b      	ldr	r3, [r7, #4]
 800504a:	695b      	ldr	r3, [r3, #20]
 800504c:	041b      	lsls	r3, r3, #16
 800504e:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005050:	687b      	ldr	r3, [r7, #4]
 8005052:	681b      	ldr	r3, [r3, #0]
 8005054:	6899      	ldr	r1, [r3, #8]
 8005056:	687b      	ldr	r3, [r7, #4]
 8005058:	699a      	ldr	r2, [r3, #24]
 800505a:	68fb      	ldr	r3, [r7, #12]
 800505c:	431a      	orrs	r2, r3
 800505e:	687b      	ldr	r3, [r7, #4]
 8005060:	681b      	ldr	r3, [r3, #0]
 8005062:	430a      	orrs	r2, r1
 8005064:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	681b      	ldr	r3, [r3, #0]
 800506a:	68d9      	ldr	r1, [r3, #12]
 800506c:	687b      	ldr	r3, [r7, #4]
 800506e:	681a      	ldr	r2, [r3, #0]
 8005070:	4b3e      	ldr	r3, [pc, #248]	; (800516c <HAL_LTDC_Init+0x19c>)
 8005072:	400b      	ands	r3, r1
 8005074:	60d3      	str	r3, [r2, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005076:	687b      	ldr	r3, [r7, #4]
 8005078:	69db      	ldr	r3, [r3, #28]
 800507a:	041b      	lsls	r3, r3, #16
 800507c:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800507e:	687b      	ldr	r3, [r7, #4]
 8005080:	681b      	ldr	r3, [r3, #0]
 8005082:	68d9      	ldr	r1, [r3, #12]
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	6a1a      	ldr	r2, [r3, #32]
 8005088:	68fb      	ldr	r3, [r7, #12]
 800508a:	431a      	orrs	r2, r3
 800508c:	687b      	ldr	r3, [r7, #4]
 800508e:	681b      	ldr	r3, [r3, #0]
 8005090:	430a      	orrs	r2, r1
 8005092:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005094:	687b      	ldr	r3, [r7, #4]
 8005096:	681b      	ldr	r3, [r3, #0]
 8005098:	6919      	ldr	r1, [r3, #16]
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	681a      	ldr	r2, [r3, #0]
 800509e:	4b33      	ldr	r3, [pc, #204]	; (800516c <HAL_LTDC_Init+0x19c>)
 80050a0:	400b      	ands	r3, r1
 80050a2:	6113      	str	r3, [r2, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80050a4:	687b      	ldr	r3, [r7, #4]
 80050a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050a8:	041b      	lsls	r3, r3, #16
 80050aa:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80050ac:	687b      	ldr	r3, [r7, #4]
 80050ae:	681b      	ldr	r3, [r3, #0]
 80050b0:	6919      	ldr	r1, [r3, #16]
 80050b2:	687b      	ldr	r3, [r7, #4]
 80050b4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80050b6:	68fb      	ldr	r3, [r7, #12]
 80050b8:	431a      	orrs	r2, r3
 80050ba:	687b      	ldr	r3, [r7, #4]
 80050bc:	681b      	ldr	r3, [r3, #0]
 80050be:	430a      	orrs	r2, r1
 80050c0:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80050c2:	687b      	ldr	r3, [r7, #4]
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	6959      	ldr	r1, [r3, #20]
 80050c8:	687b      	ldr	r3, [r7, #4]
 80050ca:	681a      	ldr	r2, [r3, #0]
 80050cc:	4b27      	ldr	r3, [pc, #156]	; (800516c <HAL_LTDC_Init+0x19c>)
 80050ce:	400b      	ands	r3, r1
 80050d0:	6153      	str	r3, [r2, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80050d6:	041b      	lsls	r3, r3, #16
 80050d8:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	681b      	ldr	r3, [r3, #0]
 80050de:	6959      	ldr	r1, [r3, #20]
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80050e4:	68fb      	ldr	r3, [r7, #12]
 80050e6:	431a      	orrs	r2, r3
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	430a      	orrs	r2, r1
 80050ee:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80050f0:	687b      	ldr	r3, [r7, #4]
 80050f2:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80050f6:	021b      	lsls	r3, r3, #8
 80050f8:	60fb      	str	r3, [r7, #12]
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80050fa:	687b      	ldr	r3, [r7, #4]
 80050fc:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 8005100:	041b      	lsls	r3, r3, #16
 8005102:	60bb      	str	r3, [r7, #8]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800510a:	687b      	ldr	r3, [r7, #4]
 800510c:	681b      	ldr	r3, [r3, #0]
 800510e:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 8005112:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	681b      	ldr	r3, [r3, #0]
 8005118:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800511a:	68ba      	ldr	r2, [r7, #8]
 800511c:	68fb      	ldr	r3, [r7, #12]
 800511e:	4313      	orrs	r3, r2
 8005120:	687a      	ldr	r2, [r7, #4]
 8005122:	f892 2034 	ldrb.w	r2, [r2, #52]	; 0x34
 8005126:	431a      	orrs	r2, r3
 8005128:	687b      	ldr	r3, [r7, #4]
 800512a:	681b      	ldr	r3, [r3, #0]
 800512c:	430a      	orrs	r2, r1
 800512e:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005130:	687b      	ldr	r3, [r7, #4]
 8005132:	681b      	ldr	r3, [r3, #0]
 8005134:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	681b      	ldr	r3, [r3, #0]
 800513a:	f042 0206 	orr.w	r2, r2, #6
 800513e:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	681b      	ldr	r3, [r3, #0]
 8005144:	699a      	ldr	r2, [r3, #24]
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	f042 0201 	orr.w	r2, r2, #1
 800514e:	619a      	str	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005150:	687b      	ldr	r3, [r7, #4]
 8005152:	2200      	movs	r2, #0
 8005154:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8005158:	687b      	ldr	r3, [r7, #4]
 800515a:	2201      	movs	r2, #1
 800515c:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  return HAL_OK;
 8005160:	2300      	movs	r3, #0
}
 8005162:	4618      	mov	r0, r3
 8005164:	3710      	adds	r7, #16
 8005166:	46bd      	mov	sp, r7
 8005168:	bd80      	pop	{r7, pc}
 800516a:	bf00      	nop
 800516c:	f000f800 	.word	0xf000f800

08005170 <HAL_LTDC_IRQHandler>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
 8005170:	b580      	push	{r7, lr}
 8005172:	b084      	sub	sp, #16
 8005174:	af00      	add	r7, sp, #0
 8005176:	6078      	str	r0, [r7, #4]
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005178:	687b      	ldr	r3, [r7, #4]
 800517a:	681b      	ldr	r3, [r3, #0]
 800517c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800517e:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	681b      	ldr	r3, [r3, #0]
 8005184:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005186:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005188:	68fb      	ldr	r3, [r7, #12]
 800518a:	f003 0304 	and.w	r3, r3, #4
 800518e:	2b00      	cmp	r3, #0
 8005190:	d023      	beq.n	80051da <HAL_LTDC_IRQHandler+0x6a>
 8005192:	68bb      	ldr	r3, [r7, #8]
 8005194:	f003 0304 	and.w	r3, r3, #4
 8005198:	2b00      	cmp	r3, #0
 800519a:	d01e      	beq.n	80051da <HAL_LTDC_IRQHandler+0x6a>
  {
    /* Disable the transfer Error interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	681b      	ldr	r3, [r3, #0]
 80051a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80051a2:	687b      	ldr	r3, [r7, #4]
 80051a4:	681b      	ldr	r3, [r3, #0]
 80051a6:	f022 0204 	bic.w	r2, r2, #4
 80051aa:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the transfer error flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80051ac:	687b      	ldr	r3, [r7, #4]
 80051ae:	681b      	ldr	r3, [r3, #0]
 80051b0:	2204      	movs	r2, #4
 80051b2:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80051b4:	687b      	ldr	r3, [r7, #4]
 80051b6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80051ba:	f043 0201 	orr.w	r2, r3, #1
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	2204      	movs	r2, #4
 80051c8:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	2200      	movs	r2, #0
 80051d0:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 80051d4:	6878      	ldr	r0, [r7, #4]
 80051d6:	f000 f86f 	bl	80052b8 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80051da:	68fb      	ldr	r3, [r7, #12]
 80051dc:	f003 0302 	and.w	r3, r3, #2
 80051e0:	2b00      	cmp	r3, #0
 80051e2:	d023      	beq.n	800522c <HAL_LTDC_IRQHandler+0xbc>
 80051e4:	68bb      	ldr	r3, [r7, #8]
 80051e6:	f003 0302 	and.w	r3, r3, #2
 80051ea:	2b00      	cmp	r3, #0
 80051ec:	d01e      	beq.n	800522c <HAL_LTDC_IRQHandler+0xbc>
  {
    /* Disable the FIFO underrun interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80051ee:	687b      	ldr	r3, [r7, #4]
 80051f0:	681b      	ldr	r3, [r3, #0]
 80051f2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80051f4:	687b      	ldr	r3, [r7, #4]
 80051f6:	681b      	ldr	r3, [r3, #0]
 80051f8:	f022 0202 	bic.w	r2, r2, #2
 80051fc:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the FIFO underrun flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	681b      	ldr	r3, [r3, #0]
 8005202:	2202      	movs	r2, #2
 8005204:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005206:	687b      	ldr	r3, [r7, #4]
 8005208:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800520c:	f043 0202 	orr.w	r2, r3, #2
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005216:	687b      	ldr	r3, [r7, #4]
 8005218:	2204      	movs	r2, #4
 800521a:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 800521e:	687b      	ldr	r3, [r7, #4]
 8005220:	2200      	movs	r2, #0
 8005222:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8005226:	6878      	ldr	r0, [r7, #4]
 8005228:	f000 f846 	bl	80052b8 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800522c:	68fb      	ldr	r3, [r7, #12]
 800522e:	f003 0301 	and.w	r3, r3, #1
 8005232:	2b00      	cmp	r3, #0
 8005234:	d01b      	beq.n	800526e <HAL_LTDC_IRQHandler+0xfe>
 8005236:	68bb      	ldr	r3, [r7, #8]
 8005238:	f003 0301 	and.w	r3, r3, #1
 800523c:	2b00      	cmp	r3, #0
 800523e:	d016      	beq.n	800526e <HAL_LTDC_IRQHandler+0xfe>
  {
    /* Disable the Line interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005240:	687b      	ldr	r3, [r7, #4]
 8005242:	681b      	ldr	r3, [r3, #0]
 8005244:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	681b      	ldr	r3, [r3, #0]
 800524a:	f022 0201 	bic.w	r2, r2, #1
 800524e:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the Line interrupt flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005250:	687b      	ldr	r3, [r7, #4]
 8005252:	681b      	ldr	r3, [r3, #0]
 8005254:	2201      	movs	r2, #1
 8005256:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8005258:	687b      	ldr	r3, [r7, #4]
 800525a:	2201      	movs	r2, #1
 800525c:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8005260:	687b      	ldr	r3, [r7, #4]
 8005262:	2200      	movs	r2, #0
 8005264:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered Line Event callback */
    hltdc->LineEventCallback(hltdc);
#else
    /*Call Legacy Line Event callback */
    HAL_LTDC_LineEventCallback(hltdc);
 8005268:	6878      	ldr	r0, [r7, #4]
 800526a:	f006 fba7 	bl	800b9bc <HAL_LTDC_LineEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800526e:	68fb      	ldr	r3, [r7, #12]
 8005270:	f003 0308 	and.w	r3, r3, #8
 8005274:	2b00      	cmp	r3, #0
 8005276:	d01b      	beq.n	80052b0 <HAL_LTDC_IRQHandler+0x140>
 8005278:	68bb      	ldr	r3, [r7, #8]
 800527a:	f003 0308 	and.w	r3, r3, #8
 800527e:	2b00      	cmp	r3, #0
 8005280:	d016      	beq.n	80052b0 <HAL_LTDC_IRQHandler+0x140>
  {
    /* Disable the register reload interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005282:	687b      	ldr	r3, [r7, #4]
 8005284:	681b      	ldr	r3, [r3, #0]
 8005286:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005288:	687b      	ldr	r3, [r7, #4]
 800528a:	681b      	ldr	r3, [r3, #0]
 800528c:	f022 0208 	bic.w	r2, r2, #8
 8005290:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the register reload flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	681b      	ldr	r3, [r3, #0]
 8005296:	2208      	movs	r2, #8
 8005298:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	2201      	movs	r2, #1
 800529e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	2200      	movs	r2, #0
 80052a6:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered reload Event callback */
    hltdc->ReloadEventCallback(hltdc);
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
 80052aa:	6878      	ldr	r0, [r7, #4]
 80052ac:	f000 f80e 	bl	80052cc <HAL_LTDC_ReloadEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 80052b0:	bf00      	nop
 80052b2:	3710      	adds	r7, #16
 80052b4:	46bd      	mov	sp, r7
 80052b6:	bd80      	pop	{r7, pc}

080052b8 <HAL_LTDC_ErrorCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
{
 80052b8:	b480      	push	{r7}
 80052ba:	b083      	sub	sp, #12
 80052bc:	af00      	add	r7, sp, #0
 80052be:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ErrorCallback could be implemented in the user file
   */
}
 80052c0:	bf00      	nop
 80052c2:	370c      	adds	r7, #12
 80052c4:	46bd      	mov	sp, r7
 80052c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052ca:	4770      	bx	lr

080052cc <HAL_LTDC_ReloadEventCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
{
 80052cc:	b480      	push	{r7}
 80052ce:	b083      	sub	sp, #12
 80052d0:	af00      	add	r7, sp, #0
 80052d2:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ReloadEvenCallback could be implemented in the user file
   */
}
 80052d4:	bf00      	nop
 80052d6:	370c      	adds	r7, #12
 80052d8:	46bd      	mov	sp, r7
 80052da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052de:	4770      	bx	lr

080052e0 <HAL_LTDC_ConfigLayer>:
  *                    This parameter can be one of the following values:
  *                    LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80052e0:	b5b0      	push	{r4, r5, r7, lr}
 80052e2:	b084      	sub	sp, #16
 80052e4:	af00      	add	r7, sp, #0
 80052e6:	60f8      	str	r0, [r7, #12]
 80052e8:	60b9      	str	r1, [r7, #8]
 80052ea:	607a      	str	r2, [r7, #4]
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 80052ec:	68fb      	ldr	r3, [r7, #12]
 80052ee:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 80052f2:	2b01      	cmp	r3, #1
 80052f4:	d101      	bne.n	80052fa <HAL_LTDC_ConfigLayer+0x1a>
 80052f6:	2302      	movs	r3, #2
 80052f8:	e02c      	b.n	8005354 <HAL_LTDC_ConfigLayer+0x74>
 80052fa:	68fb      	ldr	r3, [r7, #12]
 80052fc:	2201      	movs	r2, #1
 80052fe:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005302:	68fb      	ldr	r3, [r7, #12]
 8005304:	2202      	movs	r2, #2
 8005306:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800530a:	68fa      	ldr	r2, [r7, #12]
 800530c:	687b      	ldr	r3, [r7, #4]
 800530e:	2134      	movs	r1, #52	; 0x34
 8005310:	fb01 f303 	mul.w	r3, r1, r3
 8005314:	4413      	add	r3, r2
 8005316:	f103 0238 	add.w	r2, r3, #56	; 0x38
 800531a:	68bb      	ldr	r3, [r7, #8]
 800531c:	4614      	mov	r4, r2
 800531e:	461d      	mov	r5, r3
 8005320:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005322:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005324:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005326:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005328:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800532a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800532c:	682b      	ldr	r3, [r5, #0]
 800532e:	6023      	str	r3, [r4, #0]

  /* Configure the LTDC Layer */
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005330:	687a      	ldr	r2, [r7, #4]
 8005332:	68b9      	ldr	r1, [r7, #8]
 8005334:	68f8      	ldr	r0, [r7, #12]
 8005336:	f000 f849 	bl	80053cc <LTDC_SetConfig>

  /* Set the Immediate Reload type */
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800533a:	68fb      	ldr	r3, [r7, #12]
 800533c:	681b      	ldr	r3, [r3, #0]
 800533e:	2201      	movs	r2, #1
 8005340:	625a      	str	r2, [r3, #36]	; 0x24

  /* Initialize the LTDC state*/
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005342:	68fb      	ldr	r3, [r7, #12]
 8005344:	2201      	movs	r2, #1
 8005346:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 800534a:	68fb      	ldr	r3, [r7, #12]
 800534c:	2200      	movs	r2, #0
 800534e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 8005352:	2300      	movs	r3, #0
}
 8005354:	4618      	mov	r0, r3
 8005356:	3710      	adds	r7, #16
 8005358:	46bd      	mov	sp, r7
 800535a:	bdb0      	pop	{r4, r5, r7, pc}

0800535c <HAL_LTDC_ProgramLineEvent>:
  * @param  Line    Line Interrupt Position.
  * @note   User application may resort to HAL_LTDC_LineEventCallback() at line interrupt generation.
  * @retval  HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ProgramLineEvent(LTDC_HandleTypeDef *hltdc, uint32_t Line)
{
 800535c:	b480      	push	{r7}
 800535e:	b083      	sub	sp, #12
 8005360:	af00      	add	r7, sp, #0
 8005362:	6078      	str	r0, [r7, #4]
 8005364:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_LTDC_LIPOS(Line));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8005366:	687b      	ldr	r3, [r7, #4]
 8005368:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 800536c:	2b01      	cmp	r3, #1
 800536e:	d101      	bne.n	8005374 <HAL_LTDC_ProgramLineEvent+0x18>
 8005370:	2302      	movs	r3, #2
 8005372:	e023      	b.n	80053bc <HAL_LTDC_ProgramLineEvent+0x60>
 8005374:	687b      	ldr	r3, [r7, #4]
 8005376:	2201      	movs	r2, #1
 8005378:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800537c:	687b      	ldr	r3, [r7, #4]
 800537e:	2202      	movs	r2, #2
 8005380:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Disable the Line interrupt */
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800538a:	687b      	ldr	r3, [r7, #4]
 800538c:	681b      	ldr	r3, [r3, #0]
 800538e:	f022 0201 	bic.w	r2, r2, #1
 8005392:	635a      	str	r2, [r3, #52]	; 0x34

  /* Set the Line Interrupt position */
  LTDC->LIPCR = (uint32_t)Line;
 8005394:	4a0c      	ldr	r2, [pc, #48]	; (80053c8 <HAL_LTDC_ProgramLineEvent+0x6c>)
 8005396:	683b      	ldr	r3, [r7, #0]
 8005398:	6413      	str	r3, [r2, #64]	; 0x40

  /* Enable the Line interrupt */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	681b      	ldr	r3, [r3, #0]
 800539e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80053a0:	687b      	ldr	r3, [r7, #4]
 80053a2:	681b      	ldr	r3, [r3, #0]
 80053a4:	f042 0201 	orr.w	r2, r2, #1
 80053a8:	635a      	str	r2, [r3, #52]	; 0x34

  /* Change the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 80053aa:	687b      	ldr	r3, [r7, #4]
 80053ac:	2201      	movs	r2, #1
 80053ae:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 80053b2:	687b      	ldr	r3, [r7, #4]
 80053b4:	2200      	movs	r2, #0
 80053b6:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 80053ba:	2300      	movs	r3, #0
}
 80053bc:	4618      	mov	r0, r3
 80053be:	370c      	adds	r7, #12
 80053c0:	46bd      	mov	sp, r7
 80053c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053c6:	4770      	bx	lr
 80053c8:	40016800 	.word	0x40016800

080053cc <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80053cc:	b480      	push	{r7}
 80053ce:	b089      	sub	sp, #36	; 0x24
 80053d0:	af00      	add	r7, sp, #0
 80053d2:	60f8      	str	r0, [r7, #12]
 80053d4:	60b9      	str	r1, [r7, #8]
 80053d6:	607a      	str	r2, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80053d8:	68bb      	ldr	r3, [r7, #8]
 80053da:	685a      	ldr	r2, [r3, #4]
 80053dc:	68fb      	ldr	r3, [r7, #12]
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	68db      	ldr	r3, [r3, #12]
 80053e2:	0c1b      	lsrs	r3, r3, #16
 80053e4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80053e8:	4413      	add	r3, r2
 80053ea:	041b      	lsls	r3, r3, #16
 80053ec:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80053ee:	68fb      	ldr	r3, [r7, #12]
 80053f0:	681b      	ldr	r3, [r3, #0]
 80053f2:	461a      	mov	r2, r3
 80053f4:	687b      	ldr	r3, [r7, #4]
 80053f6:	01db      	lsls	r3, r3, #7
 80053f8:	4413      	add	r3, r2
 80053fa:	3384      	adds	r3, #132	; 0x84
 80053fc:	685b      	ldr	r3, [r3, #4]
 80053fe:	68fa      	ldr	r2, [r7, #12]
 8005400:	6812      	ldr	r2, [r2, #0]
 8005402:	4611      	mov	r1, r2
 8005404:	687a      	ldr	r2, [r7, #4]
 8005406:	01d2      	lsls	r2, r2, #7
 8005408:	440a      	add	r2, r1
 800540a:	3284      	adds	r2, #132	; 0x84
 800540c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8005410:	6053      	str	r3, [r2, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005412:	68bb      	ldr	r3, [r7, #8]
 8005414:	681a      	ldr	r2, [r3, #0]
 8005416:	68fb      	ldr	r3, [r7, #12]
 8005418:	681b      	ldr	r3, [r3, #0]
 800541a:	68db      	ldr	r3, [r3, #12]
 800541c:	0c1b      	lsrs	r3, r3, #16
 800541e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005422:	4413      	add	r3, r2
 8005424:	1c5a      	adds	r2, r3, #1
 8005426:	68fb      	ldr	r3, [r7, #12]
 8005428:	681b      	ldr	r3, [r3, #0]
 800542a:	4619      	mov	r1, r3
 800542c:	687b      	ldr	r3, [r7, #4]
 800542e:	01db      	lsls	r3, r3, #7
 8005430:	440b      	add	r3, r1
 8005432:	3384      	adds	r3, #132	; 0x84
 8005434:	4619      	mov	r1, r3
 8005436:	69fb      	ldr	r3, [r7, #28]
 8005438:	4313      	orrs	r3, r2
 800543a:	604b      	str	r3, [r1, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800543c:	68bb      	ldr	r3, [r7, #8]
 800543e:	68da      	ldr	r2, [r3, #12]
 8005440:	68fb      	ldr	r3, [r7, #12]
 8005442:	681b      	ldr	r3, [r3, #0]
 8005444:	68db      	ldr	r3, [r3, #12]
 8005446:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800544a:	4413      	add	r3, r2
 800544c:	041b      	lsls	r3, r3, #16
 800544e:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005450:	68fb      	ldr	r3, [r7, #12]
 8005452:	681b      	ldr	r3, [r3, #0]
 8005454:	461a      	mov	r2, r3
 8005456:	687b      	ldr	r3, [r7, #4]
 8005458:	01db      	lsls	r3, r3, #7
 800545a:	4413      	add	r3, r2
 800545c:	3384      	adds	r3, #132	; 0x84
 800545e:	689b      	ldr	r3, [r3, #8]
 8005460:	68fa      	ldr	r2, [r7, #12]
 8005462:	6812      	ldr	r2, [r2, #0]
 8005464:	4611      	mov	r1, r2
 8005466:	687a      	ldr	r2, [r7, #4]
 8005468:	01d2      	lsls	r2, r2, #7
 800546a:	440a      	add	r2, r1
 800546c:	3284      	adds	r2, #132	; 0x84
 800546e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8005472:	6093      	str	r3, [r2, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005474:	68bb      	ldr	r3, [r7, #8]
 8005476:	689a      	ldr	r2, [r3, #8]
 8005478:	68fb      	ldr	r3, [r7, #12]
 800547a:	681b      	ldr	r3, [r3, #0]
 800547c:	68db      	ldr	r3, [r3, #12]
 800547e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005482:	4413      	add	r3, r2
 8005484:	1c5a      	adds	r2, r3, #1
 8005486:	68fb      	ldr	r3, [r7, #12]
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	4619      	mov	r1, r3
 800548c:	687b      	ldr	r3, [r7, #4]
 800548e:	01db      	lsls	r3, r3, #7
 8005490:	440b      	add	r3, r1
 8005492:	3384      	adds	r3, #132	; 0x84
 8005494:	4619      	mov	r1, r3
 8005496:	69fb      	ldr	r3, [r7, #28]
 8005498:	4313      	orrs	r3, r2
 800549a:	608b      	str	r3, [r1, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800549c:	68fb      	ldr	r3, [r7, #12]
 800549e:	681b      	ldr	r3, [r3, #0]
 80054a0:	461a      	mov	r2, r3
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	01db      	lsls	r3, r3, #7
 80054a6:	4413      	add	r3, r2
 80054a8:	3384      	adds	r3, #132	; 0x84
 80054aa:	691b      	ldr	r3, [r3, #16]
 80054ac:	68fa      	ldr	r2, [r7, #12]
 80054ae:	6812      	ldr	r2, [r2, #0]
 80054b0:	4611      	mov	r1, r2
 80054b2:	687a      	ldr	r2, [r7, #4]
 80054b4:	01d2      	lsls	r2, r2, #7
 80054b6:	440a      	add	r2, r1
 80054b8:	3284      	adds	r2, #132	; 0x84
 80054ba:	f023 0307 	bic.w	r3, r3, #7
 80054be:	6113      	str	r3, [r2, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80054c0:	68fb      	ldr	r3, [r7, #12]
 80054c2:	681b      	ldr	r3, [r3, #0]
 80054c4:	461a      	mov	r2, r3
 80054c6:	687b      	ldr	r3, [r7, #4]
 80054c8:	01db      	lsls	r3, r3, #7
 80054ca:	4413      	add	r3, r2
 80054cc:	3384      	adds	r3, #132	; 0x84
 80054ce:	461a      	mov	r2, r3
 80054d0:	68bb      	ldr	r3, [r7, #8]
 80054d2:	691b      	ldr	r3, [r3, #16]
 80054d4:	6113      	str	r3, [r2, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80054d6:	68bb      	ldr	r3, [r7, #8]
 80054d8:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 80054dc:	021b      	lsls	r3, r3, #8
 80054de:	61fb      	str	r3, [r7, #28]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80054e0:	68bb      	ldr	r3, [r7, #8]
 80054e2:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 80054e6:	041b      	lsls	r3, r3, #16
 80054e8:	61bb      	str	r3, [r7, #24]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80054ea:	68bb      	ldr	r3, [r7, #8]
 80054ec:	699b      	ldr	r3, [r3, #24]
 80054ee:	061b      	lsls	r3, r3, #24
 80054f0:	617b      	str	r3, [r7, #20]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80054f2:	68fb      	ldr	r3, [r7, #12]
 80054f4:	681b      	ldr	r3, [r3, #0]
 80054f6:	461a      	mov	r2, r3
 80054f8:	687b      	ldr	r3, [r7, #4]
 80054fa:	01db      	lsls	r3, r3, #7
 80054fc:	4413      	add	r3, r2
 80054fe:	3384      	adds	r3, #132	; 0x84
 8005500:	699b      	ldr	r3, [r3, #24]
 8005502:	68fb      	ldr	r3, [r7, #12]
 8005504:	681b      	ldr	r3, [r3, #0]
 8005506:	461a      	mov	r2, r3
 8005508:	687b      	ldr	r3, [r7, #4]
 800550a:	01db      	lsls	r3, r3, #7
 800550c:	4413      	add	r3, r2
 800550e:	3384      	adds	r3, #132	; 0x84
 8005510:	461a      	mov	r2, r3
 8005512:	2300      	movs	r3, #0
 8005514:	6193      	str	r3, [r2, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005516:	68bb      	ldr	r3, [r7, #8]
 8005518:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 800551c:	461a      	mov	r2, r3
 800551e:	69fb      	ldr	r3, [r7, #28]
 8005520:	431a      	orrs	r2, r3
 8005522:	69bb      	ldr	r3, [r7, #24]
 8005524:	431a      	orrs	r2, r3
 8005526:	68fb      	ldr	r3, [r7, #12]
 8005528:	681b      	ldr	r3, [r3, #0]
 800552a:	4619      	mov	r1, r3
 800552c:	687b      	ldr	r3, [r7, #4]
 800552e:	01db      	lsls	r3, r3, #7
 8005530:	440b      	add	r3, r1
 8005532:	3384      	adds	r3, #132	; 0x84
 8005534:	4619      	mov	r1, r3
 8005536:	697b      	ldr	r3, [r7, #20]
 8005538:	4313      	orrs	r3, r2
 800553a:	618b      	str	r3, [r1, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800553c:	68fb      	ldr	r3, [r7, #12]
 800553e:	681b      	ldr	r3, [r3, #0]
 8005540:	461a      	mov	r2, r3
 8005542:	687b      	ldr	r3, [r7, #4]
 8005544:	01db      	lsls	r3, r3, #7
 8005546:	4413      	add	r3, r2
 8005548:	3384      	adds	r3, #132	; 0x84
 800554a:	695b      	ldr	r3, [r3, #20]
 800554c:	68fa      	ldr	r2, [r7, #12]
 800554e:	6812      	ldr	r2, [r2, #0]
 8005550:	4611      	mov	r1, r2
 8005552:	687a      	ldr	r2, [r7, #4]
 8005554:	01d2      	lsls	r2, r2, #7
 8005556:	440a      	add	r2, r1
 8005558:	3284      	adds	r2, #132	; 0x84
 800555a:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800555e:	6153      	str	r3, [r2, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005560:	68fb      	ldr	r3, [r7, #12]
 8005562:	681b      	ldr	r3, [r3, #0]
 8005564:	461a      	mov	r2, r3
 8005566:	687b      	ldr	r3, [r7, #4]
 8005568:	01db      	lsls	r3, r3, #7
 800556a:	4413      	add	r3, r2
 800556c:	3384      	adds	r3, #132	; 0x84
 800556e:	461a      	mov	r2, r3
 8005570:	68bb      	ldr	r3, [r7, #8]
 8005572:	695b      	ldr	r3, [r3, #20]
 8005574:	6153      	str	r3, [r2, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005576:	68fb      	ldr	r3, [r7, #12]
 8005578:	681b      	ldr	r3, [r3, #0]
 800557a:	461a      	mov	r2, r3
 800557c:	687b      	ldr	r3, [r7, #4]
 800557e:	01db      	lsls	r3, r3, #7
 8005580:	4413      	add	r3, r2
 8005582:	3384      	adds	r3, #132	; 0x84
 8005584:	69db      	ldr	r3, [r3, #28]
 8005586:	68fa      	ldr	r2, [r7, #12]
 8005588:	6812      	ldr	r2, [r2, #0]
 800558a:	4611      	mov	r1, r2
 800558c:	687a      	ldr	r2, [r7, #4]
 800558e:	01d2      	lsls	r2, r2, #7
 8005590:	440a      	add	r2, r1
 8005592:	3284      	adds	r2, #132	; 0x84
 8005594:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8005598:	f023 0307 	bic.w	r3, r3, #7
 800559c:	61d3      	str	r3, [r2, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800559e:	68bb      	ldr	r3, [r7, #8]
 80055a0:	69da      	ldr	r2, [r3, #28]
 80055a2:	68bb      	ldr	r3, [r7, #8]
 80055a4:	6a1b      	ldr	r3, [r3, #32]
 80055a6:	68f9      	ldr	r1, [r7, #12]
 80055a8:	6809      	ldr	r1, [r1, #0]
 80055aa:	4608      	mov	r0, r1
 80055ac:	6879      	ldr	r1, [r7, #4]
 80055ae:	01c9      	lsls	r1, r1, #7
 80055b0:	4401      	add	r1, r0
 80055b2:	3184      	adds	r1, #132	; 0x84
 80055b4:	4313      	orrs	r3, r2
 80055b6:	61cb      	str	r3, [r1, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80055b8:	68fb      	ldr	r3, [r7, #12]
 80055ba:	681b      	ldr	r3, [r3, #0]
 80055bc:	461a      	mov	r2, r3
 80055be:	687b      	ldr	r3, [r7, #4]
 80055c0:	01db      	lsls	r3, r3, #7
 80055c2:	4413      	add	r3, r2
 80055c4:	3384      	adds	r3, #132	; 0x84
 80055c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80055c8:	68fb      	ldr	r3, [r7, #12]
 80055ca:	681b      	ldr	r3, [r3, #0]
 80055cc:	461a      	mov	r2, r3
 80055ce:	687b      	ldr	r3, [r7, #4]
 80055d0:	01db      	lsls	r3, r3, #7
 80055d2:	4413      	add	r3, r2
 80055d4:	3384      	adds	r3, #132	; 0x84
 80055d6:	461a      	mov	r2, r3
 80055d8:	2300      	movs	r3, #0
 80055da:	6293      	str	r3, [r2, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80055dc:	68fb      	ldr	r3, [r7, #12]
 80055de:	681b      	ldr	r3, [r3, #0]
 80055e0:	461a      	mov	r2, r3
 80055e2:	687b      	ldr	r3, [r7, #4]
 80055e4:	01db      	lsls	r3, r3, #7
 80055e6:	4413      	add	r3, r2
 80055e8:	3384      	adds	r3, #132	; 0x84
 80055ea:	461a      	mov	r2, r3
 80055ec:	68bb      	ldr	r3, [r7, #8]
 80055ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055f0:	6293      	str	r3, [r2, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80055f2:	68bb      	ldr	r3, [r7, #8]
 80055f4:	691b      	ldr	r3, [r3, #16]
 80055f6:	2b00      	cmp	r3, #0
 80055f8:	d102      	bne.n	8005600 <LTDC_SetConfig+0x234>
  {
    tmp = 4U;
 80055fa:	2304      	movs	r3, #4
 80055fc:	61fb      	str	r3, [r7, #28]
 80055fe:	e01b      	b.n	8005638 <LTDC_SetConfig+0x26c>
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005600:	68bb      	ldr	r3, [r7, #8]
 8005602:	691b      	ldr	r3, [r3, #16]
 8005604:	2b01      	cmp	r3, #1
 8005606:	d102      	bne.n	800560e <LTDC_SetConfig+0x242>
  {
    tmp = 3U;
 8005608:	2303      	movs	r3, #3
 800560a:	61fb      	str	r3, [r7, #28]
 800560c:	e014      	b.n	8005638 <LTDC_SetConfig+0x26c>
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800560e:	68bb      	ldr	r3, [r7, #8]
 8005610:	691b      	ldr	r3, [r3, #16]
 8005612:	2b04      	cmp	r3, #4
 8005614:	d00b      	beq.n	800562e <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8005616:	68bb      	ldr	r3, [r7, #8]
 8005618:	691b      	ldr	r3, [r3, #16]
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800561a:	2b02      	cmp	r3, #2
 800561c:	d007      	beq.n	800562e <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 800561e:	68bb      	ldr	r3, [r7, #8]
 8005620:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8005622:	2b03      	cmp	r3, #3
 8005624:	d003      	beq.n	800562e <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
 8005626:	68bb      	ldr	r3, [r7, #8]
 8005628:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 800562a:	2b07      	cmp	r3, #7
 800562c:	d102      	bne.n	8005634 <LTDC_SetConfig+0x268>
  {
    tmp = 2U;
 800562e:	2302      	movs	r3, #2
 8005630:	61fb      	str	r3, [r7, #28]
 8005632:	e001      	b.n	8005638 <LTDC_SetConfig+0x26c>
  }
  else
  {
    tmp = 1U;
 8005634:	2301      	movs	r3, #1
 8005636:	61fb      	str	r3, [r7, #28]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005638:	68fb      	ldr	r3, [r7, #12]
 800563a:	681b      	ldr	r3, [r3, #0]
 800563c:	461a      	mov	r2, r3
 800563e:	687b      	ldr	r3, [r7, #4]
 8005640:	01db      	lsls	r3, r3, #7
 8005642:	4413      	add	r3, r2
 8005644:	3384      	adds	r3, #132	; 0x84
 8005646:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005648:	68fa      	ldr	r2, [r7, #12]
 800564a:	6812      	ldr	r2, [r2, #0]
 800564c:	4611      	mov	r1, r2
 800564e:	687a      	ldr	r2, [r7, #4]
 8005650:	01d2      	lsls	r2, r2, #7
 8005652:	440a      	add	r2, r1
 8005654:	3284      	adds	r2, #132	; 0x84
 8005656:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800565a:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800565c:	68bb      	ldr	r3, [r7, #8]
 800565e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005660:	69fa      	ldr	r2, [r7, #28]
 8005662:	fb02 f303 	mul.w	r3, r2, r3
 8005666:	041a      	lsls	r2, r3, #16
 8005668:	68bb      	ldr	r3, [r7, #8]
 800566a:	6859      	ldr	r1, [r3, #4]
 800566c:	68bb      	ldr	r3, [r7, #8]
 800566e:	681b      	ldr	r3, [r3, #0]
 8005670:	1acb      	subs	r3, r1, r3
 8005672:	69f9      	ldr	r1, [r7, #28]
 8005674:	fb01 f303 	mul.w	r3, r1, r3
 8005678:	3303      	adds	r3, #3
 800567a:	68f9      	ldr	r1, [r7, #12]
 800567c:	6809      	ldr	r1, [r1, #0]
 800567e:	4608      	mov	r0, r1
 8005680:	6879      	ldr	r1, [r7, #4]
 8005682:	01c9      	lsls	r1, r1, #7
 8005684:	4401      	add	r1, r0
 8005686:	3184      	adds	r1, #132	; 0x84
 8005688:	4313      	orrs	r3, r2
 800568a:	62cb      	str	r3, [r1, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800568c:	68fb      	ldr	r3, [r7, #12]
 800568e:	681b      	ldr	r3, [r3, #0]
 8005690:	461a      	mov	r2, r3
 8005692:	687b      	ldr	r3, [r7, #4]
 8005694:	01db      	lsls	r3, r3, #7
 8005696:	4413      	add	r3, r2
 8005698:	3384      	adds	r3, #132	; 0x84
 800569a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800569c:	68fa      	ldr	r2, [r7, #12]
 800569e:	6812      	ldr	r2, [r2, #0]
 80056a0:	4611      	mov	r1, r2
 80056a2:	687a      	ldr	r2, [r7, #4]
 80056a4:	01d2      	lsls	r2, r2, #7
 80056a6:	440a      	add	r2, r1
 80056a8:	3284      	adds	r2, #132	; 0x84
 80056aa:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80056ae:	f023 0307 	bic.w	r3, r3, #7
 80056b2:	6313      	str	r3, [r2, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80056b4:	68fb      	ldr	r3, [r7, #12]
 80056b6:	681b      	ldr	r3, [r3, #0]
 80056b8:	461a      	mov	r2, r3
 80056ba:	687b      	ldr	r3, [r7, #4]
 80056bc:	01db      	lsls	r3, r3, #7
 80056be:	4413      	add	r3, r2
 80056c0:	3384      	adds	r3, #132	; 0x84
 80056c2:	461a      	mov	r2, r3
 80056c4:	68bb      	ldr	r3, [r7, #8]
 80056c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80056c8:	6313      	str	r3, [r2, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80056ca:	68fb      	ldr	r3, [r7, #12]
 80056cc:	681b      	ldr	r3, [r3, #0]
 80056ce:	461a      	mov	r2, r3
 80056d0:	687b      	ldr	r3, [r7, #4]
 80056d2:	01db      	lsls	r3, r3, #7
 80056d4:	4413      	add	r3, r2
 80056d6:	3384      	adds	r3, #132	; 0x84
 80056d8:	681b      	ldr	r3, [r3, #0]
 80056da:	68fa      	ldr	r2, [r7, #12]
 80056dc:	6812      	ldr	r2, [r2, #0]
 80056de:	4611      	mov	r1, r2
 80056e0:	687a      	ldr	r2, [r7, #4]
 80056e2:	01d2      	lsls	r2, r2, #7
 80056e4:	440a      	add	r2, r1
 80056e6:	3284      	adds	r2, #132	; 0x84
 80056e8:	f043 0301 	orr.w	r3, r3, #1
 80056ec:	6013      	str	r3, [r2, #0]
}
 80056ee:	bf00      	nop
 80056f0:	3724      	adds	r7, #36	; 0x24
 80056f2:	46bd      	mov	sp, r7
 80056f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056f8:	4770      	bx	lr
	...

080056fc <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80056fc:	b580      	push	{r7, lr}
 80056fe:	b086      	sub	sp, #24
 8005700:	af00      	add	r7, sp, #0
 8005702:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8005704:	687b      	ldr	r3, [r7, #4]
 8005706:	2b00      	cmp	r3, #0
 8005708:	d101      	bne.n	800570e <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 800570a:	2301      	movs	r3, #1
 800570c:	e25b      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	681b      	ldr	r3, [r3, #0]
 8005712:	f003 0301 	and.w	r3, r3, #1
 8005716:	2b00      	cmp	r3, #0
 8005718:	d075      	beq.n	8005806 <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800571a:	4ba3      	ldr	r3, [pc, #652]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 800571c:	689b      	ldr	r3, [r3, #8]
 800571e:	f003 030c 	and.w	r3, r3, #12
 8005722:	2b04      	cmp	r3, #4
 8005724:	d00c      	beq.n	8005740 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005726:	4ba0      	ldr	r3, [pc, #640]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 8005728:	689b      	ldr	r3, [r3, #8]
 800572a:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800572e:	2b08      	cmp	r3, #8
 8005730:	d112      	bne.n	8005758 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005732:	4b9d      	ldr	r3, [pc, #628]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 8005734:	685b      	ldr	r3, [r3, #4]
 8005736:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800573a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800573e:	d10b      	bne.n	8005758 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005740:	4b99      	ldr	r3, [pc, #612]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 8005742:	681b      	ldr	r3, [r3, #0]
 8005744:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005748:	2b00      	cmp	r3, #0
 800574a:	d05b      	beq.n	8005804 <HAL_RCC_OscConfig+0x108>
 800574c:	687b      	ldr	r3, [r7, #4]
 800574e:	685b      	ldr	r3, [r3, #4]
 8005750:	2b00      	cmp	r3, #0
 8005752:	d157      	bne.n	8005804 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8005754:	2301      	movs	r3, #1
 8005756:	e236      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005758:	687b      	ldr	r3, [r7, #4]
 800575a:	685b      	ldr	r3, [r3, #4]
 800575c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005760:	d106      	bne.n	8005770 <HAL_RCC_OscConfig+0x74>
 8005762:	4b91      	ldr	r3, [pc, #580]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 8005764:	681b      	ldr	r3, [r3, #0]
 8005766:	4a90      	ldr	r2, [pc, #576]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 8005768:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800576c:	6013      	str	r3, [r2, #0]
 800576e:	e01d      	b.n	80057ac <HAL_RCC_OscConfig+0xb0>
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	685b      	ldr	r3, [r3, #4]
 8005774:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8005778:	d10c      	bne.n	8005794 <HAL_RCC_OscConfig+0x98>
 800577a:	4b8b      	ldr	r3, [pc, #556]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 800577c:	681b      	ldr	r3, [r3, #0]
 800577e:	4a8a      	ldr	r2, [pc, #552]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 8005780:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005784:	6013      	str	r3, [r2, #0]
 8005786:	4b88      	ldr	r3, [pc, #544]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 8005788:	681b      	ldr	r3, [r3, #0]
 800578a:	4a87      	ldr	r2, [pc, #540]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 800578c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005790:	6013      	str	r3, [r2, #0]
 8005792:	e00b      	b.n	80057ac <HAL_RCC_OscConfig+0xb0>
 8005794:	4b84      	ldr	r3, [pc, #528]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 8005796:	681b      	ldr	r3, [r3, #0]
 8005798:	4a83      	ldr	r2, [pc, #524]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 800579a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800579e:	6013      	str	r3, [r2, #0]
 80057a0:	4b81      	ldr	r3, [pc, #516]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 80057a2:	681b      	ldr	r3, [r3, #0]
 80057a4:	4a80      	ldr	r2, [pc, #512]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 80057a6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80057aa:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	685b      	ldr	r3, [r3, #4]
 80057b0:	2b00      	cmp	r3, #0
 80057b2:	d013      	beq.n	80057dc <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80057b4:	f7fd fc38 	bl	8003028 <HAL_GetTick>
 80057b8:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80057ba:	e008      	b.n	80057ce <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80057bc:	f7fd fc34 	bl	8003028 <HAL_GetTick>
 80057c0:	4602      	mov	r2, r0
 80057c2:	693b      	ldr	r3, [r7, #16]
 80057c4:	1ad3      	subs	r3, r2, r3
 80057c6:	2b64      	cmp	r3, #100	; 0x64
 80057c8:	d901      	bls.n	80057ce <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 80057ca:	2303      	movs	r3, #3
 80057cc:	e1fb      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80057ce:	4b76      	ldr	r3, [pc, #472]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 80057d0:	681b      	ldr	r3, [r3, #0]
 80057d2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80057d6:	2b00      	cmp	r3, #0
 80057d8:	d0f0      	beq.n	80057bc <HAL_RCC_OscConfig+0xc0>
 80057da:	e014      	b.n	8005806 <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80057dc:	f7fd fc24 	bl	8003028 <HAL_GetTick>
 80057e0:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80057e2:	e008      	b.n	80057f6 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80057e4:	f7fd fc20 	bl	8003028 <HAL_GetTick>
 80057e8:	4602      	mov	r2, r0
 80057ea:	693b      	ldr	r3, [r7, #16]
 80057ec:	1ad3      	subs	r3, r2, r3
 80057ee:	2b64      	cmp	r3, #100	; 0x64
 80057f0:	d901      	bls.n	80057f6 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 80057f2:	2303      	movs	r3, #3
 80057f4:	e1e7      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80057f6:	4b6c      	ldr	r3, [pc, #432]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 80057f8:	681b      	ldr	r3, [r3, #0]
 80057fa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80057fe:	2b00      	cmp	r3, #0
 8005800:	d1f0      	bne.n	80057e4 <HAL_RCC_OscConfig+0xe8>
 8005802:	e000      	b.n	8005806 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005804:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005806:	687b      	ldr	r3, [r7, #4]
 8005808:	681b      	ldr	r3, [r3, #0]
 800580a:	f003 0302 	and.w	r3, r3, #2
 800580e:	2b00      	cmp	r3, #0
 8005810:	d063      	beq.n	80058da <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005812:	4b65      	ldr	r3, [pc, #404]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 8005814:	689b      	ldr	r3, [r3, #8]
 8005816:	f003 030c 	and.w	r3, r3, #12
 800581a:	2b00      	cmp	r3, #0
 800581c:	d00b      	beq.n	8005836 <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800581e:	4b62      	ldr	r3, [pc, #392]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 8005820:	689b      	ldr	r3, [r3, #8]
 8005822:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005826:	2b08      	cmp	r3, #8
 8005828:	d11c      	bne.n	8005864 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800582a:	4b5f      	ldr	r3, [pc, #380]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 800582c:	685b      	ldr	r3, [r3, #4]
 800582e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005832:	2b00      	cmp	r3, #0
 8005834:	d116      	bne.n	8005864 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005836:	4b5c      	ldr	r3, [pc, #368]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 8005838:	681b      	ldr	r3, [r3, #0]
 800583a:	f003 0302 	and.w	r3, r3, #2
 800583e:	2b00      	cmp	r3, #0
 8005840:	d005      	beq.n	800584e <HAL_RCC_OscConfig+0x152>
 8005842:	687b      	ldr	r3, [r7, #4]
 8005844:	68db      	ldr	r3, [r3, #12]
 8005846:	2b01      	cmp	r3, #1
 8005848:	d001      	beq.n	800584e <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 800584a:	2301      	movs	r3, #1
 800584c:	e1bb      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800584e:	4b56      	ldr	r3, [pc, #344]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 8005850:	681b      	ldr	r3, [r3, #0]
 8005852:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005856:	687b      	ldr	r3, [r7, #4]
 8005858:	691b      	ldr	r3, [r3, #16]
 800585a:	00db      	lsls	r3, r3, #3
 800585c:	4952      	ldr	r1, [pc, #328]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 800585e:	4313      	orrs	r3, r2
 8005860:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005862:	e03a      	b.n	80058da <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	68db      	ldr	r3, [r3, #12]
 8005868:	2b00      	cmp	r3, #0
 800586a:	d020      	beq.n	80058ae <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800586c:	4b4f      	ldr	r3, [pc, #316]	; (80059ac <HAL_RCC_OscConfig+0x2b0>)
 800586e:	2201      	movs	r2, #1
 8005870:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005872:	f7fd fbd9 	bl	8003028 <HAL_GetTick>
 8005876:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005878:	e008      	b.n	800588c <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800587a:	f7fd fbd5 	bl	8003028 <HAL_GetTick>
 800587e:	4602      	mov	r2, r0
 8005880:	693b      	ldr	r3, [r7, #16]
 8005882:	1ad3      	subs	r3, r2, r3
 8005884:	2b02      	cmp	r3, #2
 8005886:	d901      	bls.n	800588c <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8005888:	2303      	movs	r3, #3
 800588a:	e19c      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800588c:	4b46      	ldr	r3, [pc, #280]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 800588e:	681b      	ldr	r3, [r3, #0]
 8005890:	f003 0302 	and.w	r3, r3, #2
 8005894:	2b00      	cmp	r3, #0
 8005896:	d0f0      	beq.n	800587a <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005898:	4b43      	ldr	r3, [pc, #268]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 800589a:	681b      	ldr	r3, [r3, #0]
 800589c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80058a0:	687b      	ldr	r3, [r7, #4]
 80058a2:	691b      	ldr	r3, [r3, #16]
 80058a4:	00db      	lsls	r3, r3, #3
 80058a6:	4940      	ldr	r1, [pc, #256]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 80058a8:	4313      	orrs	r3, r2
 80058aa:	600b      	str	r3, [r1, #0]
 80058ac:	e015      	b.n	80058da <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80058ae:	4b3f      	ldr	r3, [pc, #252]	; (80059ac <HAL_RCC_OscConfig+0x2b0>)
 80058b0:	2200      	movs	r2, #0
 80058b2:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80058b4:	f7fd fbb8 	bl	8003028 <HAL_GetTick>
 80058b8:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80058ba:	e008      	b.n	80058ce <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80058bc:	f7fd fbb4 	bl	8003028 <HAL_GetTick>
 80058c0:	4602      	mov	r2, r0
 80058c2:	693b      	ldr	r3, [r7, #16]
 80058c4:	1ad3      	subs	r3, r2, r3
 80058c6:	2b02      	cmp	r3, #2
 80058c8:	d901      	bls.n	80058ce <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 80058ca:	2303      	movs	r3, #3
 80058cc:	e17b      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80058ce:	4b36      	ldr	r3, [pc, #216]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 80058d0:	681b      	ldr	r3, [r3, #0]
 80058d2:	f003 0302 	and.w	r3, r3, #2
 80058d6:	2b00      	cmp	r3, #0
 80058d8:	d1f0      	bne.n	80058bc <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80058da:	687b      	ldr	r3, [r7, #4]
 80058dc:	681b      	ldr	r3, [r3, #0]
 80058de:	f003 0308 	and.w	r3, r3, #8
 80058e2:	2b00      	cmp	r3, #0
 80058e4:	d030      	beq.n	8005948 <HAL_RCC_OscConfig+0x24c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80058e6:	687b      	ldr	r3, [r7, #4]
 80058e8:	695b      	ldr	r3, [r3, #20]
 80058ea:	2b00      	cmp	r3, #0
 80058ec:	d016      	beq.n	800591c <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80058ee:	4b30      	ldr	r3, [pc, #192]	; (80059b0 <HAL_RCC_OscConfig+0x2b4>)
 80058f0:	2201      	movs	r2, #1
 80058f2:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80058f4:	f7fd fb98 	bl	8003028 <HAL_GetTick>
 80058f8:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80058fa:	e008      	b.n	800590e <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80058fc:	f7fd fb94 	bl	8003028 <HAL_GetTick>
 8005900:	4602      	mov	r2, r0
 8005902:	693b      	ldr	r3, [r7, #16]
 8005904:	1ad3      	subs	r3, r2, r3
 8005906:	2b02      	cmp	r3, #2
 8005908:	d901      	bls.n	800590e <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 800590a:	2303      	movs	r3, #3
 800590c:	e15b      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800590e:	4b26      	ldr	r3, [pc, #152]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 8005910:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005912:	f003 0302 	and.w	r3, r3, #2
 8005916:	2b00      	cmp	r3, #0
 8005918:	d0f0      	beq.n	80058fc <HAL_RCC_OscConfig+0x200>
 800591a:	e015      	b.n	8005948 <HAL_RCC_OscConfig+0x24c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 800591c:	4b24      	ldr	r3, [pc, #144]	; (80059b0 <HAL_RCC_OscConfig+0x2b4>)
 800591e:	2200      	movs	r2, #0
 8005920:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8005922:	f7fd fb81 	bl	8003028 <HAL_GetTick>
 8005926:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005928:	e008      	b.n	800593c <HAL_RCC_OscConfig+0x240>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800592a:	f7fd fb7d 	bl	8003028 <HAL_GetTick>
 800592e:	4602      	mov	r2, r0
 8005930:	693b      	ldr	r3, [r7, #16]
 8005932:	1ad3      	subs	r3, r2, r3
 8005934:	2b02      	cmp	r3, #2
 8005936:	d901      	bls.n	800593c <HAL_RCC_OscConfig+0x240>
        {
          return HAL_TIMEOUT;
 8005938:	2303      	movs	r3, #3
 800593a:	e144      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800593c:	4b1a      	ldr	r3, [pc, #104]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 800593e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005940:	f003 0302 	and.w	r3, r3, #2
 8005944:	2b00      	cmp	r3, #0
 8005946:	d1f0      	bne.n	800592a <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	f003 0304 	and.w	r3, r3, #4
 8005950:	2b00      	cmp	r3, #0
 8005952:	f000 80a0 	beq.w	8005a96 <HAL_RCC_OscConfig+0x39a>
  {
    FlagStatus       pwrclkchanged = RESET;
 8005956:	2300      	movs	r3, #0
 8005958:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800595a:	4b13      	ldr	r3, [pc, #76]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 800595c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800595e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005962:	2b00      	cmp	r3, #0
 8005964:	d10f      	bne.n	8005986 <HAL_RCC_OscConfig+0x28a>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8005966:	2300      	movs	r3, #0
 8005968:	60bb      	str	r3, [r7, #8]
 800596a:	4b0f      	ldr	r3, [pc, #60]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 800596c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800596e:	4a0e      	ldr	r2, [pc, #56]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 8005970:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005974:	6413      	str	r3, [r2, #64]	; 0x40
 8005976:	4b0c      	ldr	r3, [pc, #48]	; (80059a8 <HAL_RCC_OscConfig+0x2ac>)
 8005978:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800597a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800597e:	60bb      	str	r3, [r7, #8]
 8005980:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8005982:	2301      	movs	r3, #1
 8005984:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005986:	4b0b      	ldr	r3, [pc, #44]	; (80059b4 <HAL_RCC_OscConfig+0x2b8>)
 8005988:	681b      	ldr	r3, [r3, #0]
 800598a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800598e:	2b00      	cmp	r3, #0
 8005990:	d121      	bne.n	80059d6 <HAL_RCC_OscConfig+0x2da>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005992:	4b08      	ldr	r3, [pc, #32]	; (80059b4 <HAL_RCC_OscConfig+0x2b8>)
 8005994:	681b      	ldr	r3, [r3, #0]
 8005996:	4a07      	ldr	r2, [pc, #28]	; (80059b4 <HAL_RCC_OscConfig+0x2b8>)
 8005998:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800599c:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 800599e:	f7fd fb43 	bl	8003028 <HAL_GetTick>
 80059a2:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80059a4:	e011      	b.n	80059ca <HAL_RCC_OscConfig+0x2ce>
 80059a6:	bf00      	nop
 80059a8:	40023800 	.word	0x40023800
 80059ac:	42470000 	.word	0x42470000
 80059b0:	42470e80 	.word	0x42470e80
 80059b4:	40007000 	.word	0x40007000
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80059b8:	f7fd fb36 	bl	8003028 <HAL_GetTick>
 80059bc:	4602      	mov	r2, r0
 80059be:	693b      	ldr	r3, [r7, #16]
 80059c0:	1ad3      	subs	r3, r2, r3
 80059c2:	2b02      	cmp	r3, #2
 80059c4:	d901      	bls.n	80059ca <HAL_RCC_OscConfig+0x2ce>
        {
          return HAL_TIMEOUT;
 80059c6:	2303      	movs	r3, #3
 80059c8:	e0fd      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80059ca:	4b81      	ldr	r3, [pc, #516]	; (8005bd0 <HAL_RCC_OscConfig+0x4d4>)
 80059cc:	681b      	ldr	r3, [r3, #0]
 80059ce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80059d2:	2b00      	cmp	r3, #0
 80059d4:	d0f0      	beq.n	80059b8 <HAL_RCC_OscConfig+0x2bc>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80059d6:	687b      	ldr	r3, [r7, #4]
 80059d8:	689b      	ldr	r3, [r3, #8]
 80059da:	2b01      	cmp	r3, #1
 80059dc:	d106      	bne.n	80059ec <HAL_RCC_OscConfig+0x2f0>
 80059de:	4b7d      	ldr	r3, [pc, #500]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 80059e0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80059e2:	4a7c      	ldr	r2, [pc, #496]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 80059e4:	f043 0301 	orr.w	r3, r3, #1
 80059e8:	6713      	str	r3, [r2, #112]	; 0x70
 80059ea:	e01c      	b.n	8005a26 <HAL_RCC_OscConfig+0x32a>
 80059ec:	687b      	ldr	r3, [r7, #4]
 80059ee:	689b      	ldr	r3, [r3, #8]
 80059f0:	2b05      	cmp	r3, #5
 80059f2:	d10c      	bne.n	8005a0e <HAL_RCC_OscConfig+0x312>
 80059f4:	4b77      	ldr	r3, [pc, #476]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 80059f6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80059f8:	4a76      	ldr	r2, [pc, #472]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 80059fa:	f043 0304 	orr.w	r3, r3, #4
 80059fe:	6713      	str	r3, [r2, #112]	; 0x70
 8005a00:	4b74      	ldr	r3, [pc, #464]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005a02:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005a04:	4a73      	ldr	r2, [pc, #460]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005a06:	f043 0301 	orr.w	r3, r3, #1
 8005a0a:	6713      	str	r3, [r2, #112]	; 0x70
 8005a0c:	e00b      	b.n	8005a26 <HAL_RCC_OscConfig+0x32a>
 8005a0e:	4b71      	ldr	r3, [pc, #452]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005a10:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005a12:	4a70      	ldr	r2, [pc, #448]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005a14:	f023 0301 	bic.w	r3, r3, #1
 8005a18:	6713      	str	r3, [r2, #112]	; 0x70
 8005a1a:	4b6e      	ldr	r3, [pc, #440]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005a1c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005a1e:	4a6d      	ldr	r2, [pc, #436]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005a20:	f023 0304 	bic.w	r3, r3, #4
 8005a24:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	689b      	ldr	r3, [r3, #8]
 8005a2a:	2b00      	cmp	r3, #0
 8005a2c:	d015      	beq.n	8005a5a <HAL_RCC_OscConfig+0x35e>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005a2e:	f7fd fafb 	bl	8003028 <HAL_GetTick>
 8005a32:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005a34:	e00a      	b.n	8005a4c <HAL_RCC_OscConfig+0x350>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005a36:	f7fd faf7 	bl	8003028 <HAL_GetTick>
 8005a3a:	4602      	mov	r2, r0
 8005a3c:	693b      	ldr	r3, [r7, #16]
 8005a3e:	1ad3      	subs	r3, r2, r3
 8005a40:	f241 3288 	movw	r2, #5000	; 0x1388
 8005a44:	4293      	cmp	r3, r2
 8005a46:	d901      	bls.n	8005a4c <HAL_RCC_OscConfig+0x350>
        {
          return HAL_TIMEOUT;
 8005a48:	2303      	movs	r3, #3
 8005a4a:	e0bc      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005a4c:	4b61      	ldr	r3, [pc, #388]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005a4e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005a50:	f003 0302 	and.w	r3, r3, #2
 8005a54:	2b00      	cmp	r3, #0
 8005a56:	d0ee      	beq.n	8005a36 <HAL_RCC_OscConfig+0x33a>
 8005a58:	e014      	b.n	8005a84 <HAL_RCC_OscConfig+0x388>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8005a5a:	f7fd fae5 	bl	8003028 <HAL_GetTick>
 8005a5e:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005a60:	e00a      	b.n	8005a78 <HAL_RCC_OscConfig+0x37c>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005a62:	f7fd fae1 	bl	8003028 <HAL_GetTick>
 8005a66:	4602      	mov	r2, r0
 8005a68:	693b      	ldr	r3, [r7, #16]
 8005a6a:	1ad3      	subs	r3, r2, r3
 8005a6c:	f241 3288 	movw	r2, #5000	; 0x1388
 8005a70:	4293      	cmp	r3, r2
 8005a72:	d901      	bls.n	8005a78 <HAL_RCC_OscConfig+0x37c>
        {
          return HAL_TIMEOUT;
 8005a74:	2303      	movs	r3, #3
 8005a76:	e0a6      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005a78:	4b56      	ldr	r3, [pc, #344]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005a7a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005a7c:	f003 0302 	and.w	r3, r3, #2
 8005a80:	2b00      	cmp	r3, #0
 8005a82:	d1ee      	bne.n	8005a62 <HAL_RCC_OscConfig+0x366>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8005a84:	7dfb      	ldrb	r3, [r7, #23]
 8005a86:	2b01      	cmp	r3, #1
 8005a88:	d105      	bne.n	8005a96 <HAL_RCC_OscConfig+0x39a>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8005a8a:	4b52      	ldr	r3, [pc, #328]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005a8c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a8e:	4a51      	ldr	r2, [pc, #324]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005a90:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005a94:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005a96:	687b      	ldr	r3, [r7, #4]
 8005a98:	699b      	ldr	r3, [r3, #24]
 8005a9a:	2b00      	cmp	r3, #0
 8005a9c:	f000 8092 	beq.w	8005bc4 <HAL_RCC_OscConfig+0x4c8>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005aa0:	4b4c      	ldr	r3, [pc, #304]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005aa2:	689b      	ldr	r3, [r3, #8]
 8005aa4:	f003 030c 	and.w	r3, r3, #12
 8005aa8:	2b08      	cmp	r3, #8
 8005aaa:	d05c      	beq.n	8005b66 <HAL_RCC_OscConfig+0x46a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005aac:	687b      	ldr	r3, [r7, #4]
 8005aae:	699b      	ldr	r3, [r3, #24]
 8005ab0:	2b02      	cmp	r3, #2
 8005ab2:	d141      	bne.n	8005b38 <HAL_RCC_OscConfig+0x43c>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005ab4:	4b48      	ldr	r3, [pc, #288]	; (8005bd8 <HAL_RCC_OscConfig+0x4dc>)
 8005ab6:	2200      	movs	r2, #0
 8005ab8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005aba:	f7fd fab5 	bl	8003028 <HAL_GetTick>
 8005abe:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005ac0:	e008      	b.n	8005ad4 <HAL_RCC_OscConfig+0x3d8>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005ac2:	f7fd fab1 	bl	8003028 <HAL_GetTick>
 8005ac6:	4602      	mov	r2, r0
 8005ac8:	693b      	ldr	r3, [r7, #16]
 8005aca:	1ad3      	subs	r3, r2, r3
 8005acc:	2b02      	cmp	r3, #2
 8005ace:	d901      	bls.n	8005ad4 <HAL_RCC_OscConfig+0x3d8>
          {
            return HAL_TIMEOUT;
 8005ad0:	2303      	movs	r3, #3
 8005ad2:	e078      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005ad4:	4b3f      	ldr	r3, [pc, #252]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005ad6:	681b      	ldr	r3, [r3, #0]
 8005ad8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005adc:	2b00      	cmp	r3, #0
 8005ade:	d1f0      	bne.n	8005ac2 <HAL_RCC_OscConfig+0x3c6>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005ae0:	687b      	ldr	r3, [r7, #4]
 8005ae2:	69da      	ldr	r2, [r3, #28]
 8005ae4:	687b      	ldr	r3, [r7, #4]
 8005ae6:	6a1b      	ldr	r3, [r3, #32]
 8005ae8:	431a      	orrs	r2, r3
 8005aea:	687b      	ldr	r3, [r7, #4]
 8005aec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005aee:	019b      	lsls	r3, r3, #6
 8005af0:	431a      	orrs	r2, r3
 8005af2:	687b      	ldr	r3, [r7, #4]
 8005af4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005af6:	085b      	lsrs	r3, r3, #1
 8005af8:	3b01      	subs	r3, #1
 8005afa:	041b      	lsls	r3, r3, #16
 8005afc:	431a      	orrs	r2, r3
 8005afe:	687b      	ldr	r3, [r7, #4]
 8005b00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005b02:	061b      	lsls	r3, r3, #24
 8005b04:	4933      	ldr	r1, [pc, #204]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005b06:	4313      	orrs	r3, r2
 8005b08:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8005b0a:	4b33      	ldr	r3, [pc, #204]	; (8005bd8 <HAL_RCC_OscConfig+0x4dc>)
 8005b0c:	2201      	movs	r2, #1
 8005b0e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005b10:	f7fd fa8a 	bl	8003028 <HAL_GetTick>
 8005b14:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005b16:	e008      	b.n	8005b2a <HAL_RCC_OscConfig+0x42e>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005b18:	f7fd fa86 	bl	8003028 <HAL_GetTick>
 8005b1c:	4602      	mov	r2, r0
 8005b1e:	693b      	ldr	r3, [r7, #16]
 8005b20:	1ad3      	subs	r3, r2, r3
 8005b22:	2b02      	cmp	r3, #2
 8005b24:	d901      	bls.n	8005b2a <HAL_RCC_OscConfig+0x42e>
          {
            return HAL_TIMEOUT;
 8005b26:	2303      	movs	r3, #3
 8005b28:	e04d      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005b2a:	4b2a      	ldr	r3, [pc, #168]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005b2c:	681b      	ldr	r3, [r3, #0]
 8005b2e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005b32:	2b00      	cmp	r3, #0
 8005b34:	d0f0      	beq.n	8005b18 <HAL_RCC_OscConfig+0x41c>
 8005b36:	e045      	b.n	8005bc4 <HAL_RCC_OscConfig+0x4c8>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005b38:	4b27      	ldr	r3, [pc, #156]	; (8005bd8 <HAL_RCC_OscConfig+0x4dc>)
 8005b3a:	2200      	movs	r2, #0
 8005b3c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005b3e:	f7fd fa73 	bl	8003028 <HAL_GetTick>
 8005b42:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005b44:	e008      	b.n	8005b58 <HAL_RCC_OscConfig+0x45c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005b46:	f7fd fa6f 	bl	8003028 <HAL_GetTick>
 8005b4a:	4602      	mov	r2, r0
 8005b4c:	693b      	ldr	r3, [r7, #16]
 8005b4e:	1ad3      	subs	r3, r2, r3
 8005b50:	2b02      	cmp	r3, #2
 8005b52:	d901      	bls.n	8005b58 <HAL_RCC_OscConfig+0x45c>
          {
            return HAL_TIMEOUT;
 8005b54:	2303      	movs	r3, #3
 8005b56:	e036      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005b58:	4b1e      	ldr	r3, [pc, #120]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005b5a:	681b      	ldr	r3, [r3, #0]
 8005b5c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005b60:	2b00      	cmp	r3, #0
 8005b62:	d1f0      	bne.n	8005b46 <HAL_RCC_OscConfig+0x44a>
 8005b64:	e02e      	b.n	8005bc4 <HAL_RCC_OscConfig+0x4c8>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	699b      	ldr	r3, [r3, #24]
 8005b6a:	2b01      	cmp	r3, #1
 8005b6c:	d101      	bne.n	8005b72 <HAL_RCC_OscConfig+0x476>
      {
        return HAL_ERROR;
 8005b6e:	2301      	movs	r3, #1
 8005b70:	e029      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8005b72:	4b18      	ldr	r3, [pc, #96]	; (8005bd4 <HAL_RCC_OscConfig+0x4d8>)
 8005b74:	689b      	ldr	r3, [r3, #8]
 8005b76:	60fb      	str	r3, [r7, #12]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005b78:	68fb      	ldr	r3, [r7, #12]
 8005b7a:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	69db      	ldr	r3, [r3, #28]
 8005b82:	429a      	cmp	r2, r3
 8005b84:	d11c      	bne.n	8005bc0 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005b86:	68fb      	ldr	r3, [r7, #12]
 8005b88:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8005b8c:	687b      	ldr	r3, [r7, #4]
 8005b8e:	6a1b      	ldr	r3, [r3, #32]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005b90:	429a      	cmp	r2, r3
 8005b92:	d115      	bne.n	8005bc0 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8005b94:	68fa      	ldr	r2, [r7, #12]
 8005b96:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8005b9a:	4013      	ands	r3, r2
 8005b9c:	687a      	ldr	r2, [r7, #4]
 8005b9e:	6a52      	ldr	r2, [r2, #36]	; 0x24
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005ba0:	4293      	cmp	r3, r2
 8005ba2:	d10d      	bne.n	8005bc0 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8005ba4:	68fb      	ldr	r3, [r7, #12]
 8005ba6:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8005baa:	687b      	ldr	r3, [r7, #4]
 8005bac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8005bae:	429a      	cmp	r2, r3
 8005bb0:	d106      	bne.n	8005bc0 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8005bb2:	68fb      	ldr	r3, [r7, #12]
 8005bb4:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8005bb8:	687b      	ldr	r3, [r7, #4]
 8005bba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8005bbc:	429a      	cmp	r2, r3
 8005bbe:	d001      	beq.n	8005bc4 <HAL_RCC_OscConfig+0x4c8>
        {
          return HAL_ERROR;
 8005bc0:	2301      	movs	r3, #1
 8005bc2:	e000      	b.n	8005bc6 <HAL_RCC_OscConfig+0x4ca>
        }
      }
    }
  }
  return HAL_OK;
 8005bc4:	2300      	movs	r3, #0
}
 8005bc6:	4618      	mov	r0, r3
 8005bc8:	3718      	adds	r7, #24
 8005bca:	46bd      	mov	sp, r7
 8005bcc:	bd80      	pop	{r7, pc}
 8005bce:	bf00      	nop
 8005bd0:	40007000 	.word	0x40007000
 8005bd4:	40023800 	.word	0x40023800
 8005bd8:	42470060 	.word	0x42470060

08005bdc <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8005bdc:	b580      	push	{r7, lr}
 8005bde:	b084      	sub	sp, #16
 8005be0:	af00      	add	r7, sp, #0
 8005be2:	6078      	str	r0, [r7, #4]
 8005be4:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8005be6:	687b      	ldr	r3, [r7, #4]
 8005be8:	2b00      	cmp	r3, #0
 8005bea:	d101      	bne.n	8005bf0 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8005bec:	2301      	movs	r3, #1
 8005bee:	e0cc      	b.n	8005d8a <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8005bf0:	4b68      	ldr	r3, [pc, #416]	; (8005d94 <HAL_RCC_ClockConfig+0x1b8>)
 8005bf2:	681b      	ldr	r3, [r3, #0]
 8005bf4:	f003 030f 	and.w	r3, r3, #15
 8005bf8:	683a      	ldr	r2, [r7, #0]
 8005bfa:	429a      	cmp	r2, r3
 8005bfc:	d90c      	bls.n	8005c18 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005bfe:	4b65      	ldr	r3, [pc, #404]	; (8005d94 <HAL_RCC_ClockConfig+0x1b8>)
 8005c00:	683a      	ldr	r2, [r7, #0]
 8005c02:	b2d2      	uxtb	r2, r2
 8005c04:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005c06:	4b63      	ldr	r3, [pc, #396]	; (8005d94 <HAL_RCC_ClockConfig+0x1b8>)
 8005c08:	681b      	ldr	r3, [r3, #0]
 8005c0a:	f003 030f 	and.w	r3, r3, #15
 8005c0e:	683a      	ldr	r2, [r7, #0]
 8005c10:	429a      	cmp	r2, r3
 8005c12:	d001      	beq.n	8005c18 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8005c14:	2301      	movs	r3, #1
 8005c16:	e0b8      	b.n	8005d8a <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	681b      	ldr	r3, [r3, #0]
 8005c1c:	f003 0302 	and.w	r3, r3, #2
 8005c20:	2b00      	cmp	r3, #0
 8005c22:	d020      	beq.n	8005c66 <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005c24:	687b      	ldr	r3, [r7, #4]
 8005c26:	681b      	ldr	r3, [r3, #0]
 8005c28:	f003 0304 	and.w	r3, r3, #4
 8005c2c:	2b00      	cmp	r3, #0
 8005c2e:	d005      	beq.n	8005c3c <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005c30:	4b59      	ldr	r3, [pc, #356]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005c32:	689b      	ldr	r3, [r3, #8]
 8005c34:	4a58      	ldr	r2, [pc, #352]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005c36:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8005c3a:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005c3c:	687b      	ldr	r3, [r7, #4]
 8005c3e:	681b      	ldr	r3, [r3, #0]
 8005c40:	f003 0308 	and.w	r3, r3, #8
 8005c44:	2b00      	cmp	r3, #0
 8005c46:	d005      	beq.n	8005c54 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005c48:	4b53      	ldr	r3, [pc, #332]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005c4a:	689b      	ldr	r3, [r3, #8]
 8005c4c:	4a52      	ldr	r2, [pc, #328]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005c4e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8005c52:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005c54:	4b50      	ldr	r3, [pc, #320]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005c56:	689b      	ldr	r3, [r3, #8]
 8005c58:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8005c5c:	687b      	ldr	r3, [r7, #4]
 8005c5e:	689b      	ldr	r3, [r3, #8]
 8005c60:	494d      	ldr	r1, [pc, #308]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005c62:	4313      	orrs	r3, r2
 8005c64:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005c66:	687b      	ldr	r3, [r7, #4]
 8005c68:	681b      	ldr	r3, [r3, #0]
 8005c6a:	f003 0301 	and.w	r3, r3, #1
 8005c6e:	2b00      	cmp	r3, #0
 8005c70:	d044      	beq.n	8005cfc <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005c72:	687b      	ldr	r3, [r7, #4]
 8005c74:	685b      	ldr	r3, [r3, #4]
 8005c76:	2b01      	cmp	r3, #1
 8005c78:	d107      	bne.n	8005c8a <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005c7a:	4b47      	ldr	r3, [pc, #284]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005c7c:	681b      	ldr	r3, [r3, #0]
 8005c7e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005c82:	2b00      	cmp	r3, #0
 8005c84:	d119      	bne.n	8005cba <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8005c86:	2301      	movs	r3, #1
 8005c88:	e07f      	b.n	8005d8a <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005c8a:	687b      	ldr	r3, [r7, #4]
 8005c8c:	685b      	ldr	r3, [r3, #4]
 8005c8e:	2b02      	cmp	r3, #2
 8005c90:	d003      	beq.n	8005c9a <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8005c92:	687b      	ldr	r3, [r7, #4]
 8005c94:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005c96:	2b03      	cmp	r3, #3
 8005c98:	d107      	bne.n	8005caa <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005c9a:	4b3f      	ldr	r3, [pc, #252]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005c9c:	681b      	ldr	r3, [r3, #0]
 8005c9e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005ca2:	2b00      	cmp	r3, #0
 8005ca4:	d109      	bne.n	8005cba <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8005ca6:	2301      	movs	r3, #1
 8005ca8:	e06f      	b.n	8005d8a <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005caa:	4b3b      	ldr	r3, [pc, #236]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005cac:	681b      	ldr	r3, [r3, #0]
 8005cae:	f003 0302 	and.w	r3, r3, #2
 8005cb2:	2b00      	cmp	r3, #0
 8005cb4:	d101      	bne.n	8005cba <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8005cb6:	2301      	movs	r3, #1
 8005cb8:	e067      	b.n	8005d8a <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005cba:	4b37      	ldr	r3, [pc, #220]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005cbc:	689b      	ldr	r3, [r3, #8]
 8005cbe:	f023 0203 	bic.w	r2, r3, #3
 8005cc2:	687b      	ldr	r3, [r7, #4]
 8005cc4:	685b      	ldr	r3, [r3, #4]
 8005cc6:	4934      	ldr	r1, [pc, #208]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005cc8:	4313      	orrs	r3, r2
 8005cca:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8005ccc:	f7fd f9ac 	bl	8003028 <HAL_GetTick>
 8005cd0:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005cd2:	e00a      	b.n	8005cea <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005cd4:	f7fd f9a8 	bl	8003028 <HAL_GetTick>
 8005cd8:	4602      	mov	r2, r0
 8005cda:	68fb      	ldr	r3, [r7, #12]
 8005cdc:	1ad3      	subs	r3, r2, r3
 8005cde:	f241 3288 	movw	r2, #5000	; 0x1388
 8005ce2:	4293      	cmp	r3, r2
 8005ce4:	d901      	bls.n	8005cea <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8005ce6:	2303      	movs	r3, #3
 8005ce8:	e04f      	b.n	8005d8a <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005cea:	4b2b      	ldr	r3, [pc, #172]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005cec:	689b      	ldr	r3, [r3, #8]
 8005cee:	f003 020c 	and.w	r2, r3, #12
 8005cf2:	687b      	ldr	r3, [r7, #4]
 8005cf4:	685b      	ldr	r3, [r3, #4]
 8005cf6:	009b      	lsls	r3, r3, #2
 8005cf8:	429a      	cmp	r2, r3
 8005cfa:	d1eb      	bne.n	8005cd4 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8005cfc:	4b25      	ldr	r3, [pc, #148]	; (8005d94 <HAL_RCC_ClockConfig+0x1b8>)
 8005cfe:	681b      	ldr	r3, [r3, #0]
 8005d00:	f003 030f 	and.w	r3, r3, #15
 8005d04:	683a      	ldr	r2, [r7, #0]
 8005d06:	429a      	cmp	r2, r3
 8005d08:	d20c      	bcs.n	8005d24 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005d0a:	4b22      	ldr	r3, [pc, #136]	; (8005d94 <HAL_RCC_ClockConfig+0x1b8>)
 8005d0c:	683a      	ldr	r2, [r7, #0]
 8005d0e:	b2d2      	uxtb	r2, r2
 8005d10:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005d12:	4b20      	ldr	r3, [pc, #128]	; (8005d94 <HAL_RCC_ClockConfig+0x1b8>)
 8005d14:	681b      	ldr	r3, [r3, #0]
 8005d16:	f003 030f 	and.w	r3, r3, #15
 8005d1a:	683a      	ldr	r2, [r7, #0]
 8005d1c:	429a      	cmp	r2, r3
 8005d1e:	d001      	beq.n	8005d24 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8005d20:	2301      	movs	r3, #1
 8005d22:	e032      	b.n	8005d8a <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005d24:	687b      	ldr	r3, [r7, #4]
 8005d26:	681b      	ldr	r3, [r3, #0]
 8005d28:	f003 0304 	and.w	r3, r3, #4
 8005d2c:	2b00      	cmp	r3, #0
 8005d2e:	d008      	beq.n	8005d42 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005d30:	4b19      	ldr	r3, [pc, #100]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005d32:	689b      	ldr	r3, [r3, #8]
 8005d34:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8005d38:	687b      	ldr	r3, [r7, #4]
 8005d3a:	68db      	ldr	r3, [r3, #12]
 8005d3c:	4916      	ldr	r1, [pc, #88]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005d3e:	4313      	orrs	r3, r2
 8005d40:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005d42:	687b      	ldr	r3, [r7, #4]
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	f003 0308 	and.w	r3, r3, #8
 8005d4a:	2b00      	cmp	r3, #0
 8005d4c:	d009      	beq.n	8005d62 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005d4e:	4b12      	ldr	r3, [pc, #72]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005d50:	689b      	ldr	r3, [r3, #8]
 8005d52:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8005d56:	687b      	ldr	r3, [r7, #4]
 8005d58:	691b      	ldr	r3, [r3, #16]
 8005d5a:	00db      	lsls	r3, r3, #3
 8005d5c:	490e      	ldr	r1, [pc, #56]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005d5e:	4313      	orrs	r3, r2
 8005d60:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8005d62:	f000 f821 	bl	8005da8 <HAL_RCC_GetSysClockFreq>
 8005d66:	4601      	mov	r1, r0
 8005d68:	4b0b      	ldr	r3, [pc, #44]	; (8005d98 <HAL_RCC_ClockConfig+0x1bc>)
 8005d6a:	689b      	ldr	r3, [r3, #8]
 8005d6c:	091b      	lsrs	r3, r3, #4
 8005d6e:	f003 030f 	and.w	r3, r3, #15
 8005d72:	4a0a      	ldr	r2, [pc, #40]	; (8005d9c <HAL_RCC_ClockConfig+0x1c0>)
 8005d74:	5cd3      	ldrb	r3, [r2, r3]
 8005d76:	fa21 f303 	lsr.w	r3, r1, r3
 8005d7a:	4a09      	ldr	r2, [pc, #36]	; (8005da0 <HAL_RCC_ClockConfig+0x1c4>)
 8005d7c:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 8005d7e:	4b09      	ldr	r3, [pc, #36]	; (8005da4 <HAL_RCC_ClockConfig+0x1c8>)
 8005d80:	681b      	ldr	r3, [r3, #0]
 8005d82:	4618      	mov	r0, r3
 8005d84:	f7fd f90c 	bl	8002fa0 <HAL_InitTick>

  return HAL_OK;
 8005d88:	2300      	movs	r3, #0
}
 8005d8a:	4618      	mov	r0, r3
 8005d8c:	3710      	adds	r7, #16
 8005d8e:	46bd      	mov	sp, r7
 8005d90:	bd80      	pop	{r7, pc}
 8005d92:	bf00      	nop
 8005d94:	40023c00 	.word	0x40023c00
 8005d98:	40023800 	.word	0x40023800
 8005d9c:	0801c20c 	.word	0x0801c20c
 8005da0:	20000004 	.word	0x20000004
 8005da4:	20000008 	.word	0x20000008

08005da8 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8005da8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005daa:	b085      	sub	sp, #20
 8005dac:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 8005dae:	2300      	movs	r3, #0
 8005db0:	607b      	str	r3, [r7, #4]
 8005db2:	2300      	movs	r3, #0
 8005db4:	60fb      	str	r3, [r7, #12]
 8005db6:	2300      	movs	r3, #0
 8005db8:	603b      	str	r3, [r7, #0]
  uint32_t sysclockfreq = 0U;
 8005dba:	2300      	movs	r3, #0
 8005dbc:	60bb      	str	r3, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005dbe:	4b50      	ldr	r3, [pc, #320]	; (8005f00 <HAL_RCC_GetSysClockFreq+0x158>)
 8005dc0:	689b      	ldr	r3, [r3, #8]
 8005dc2:	f003 030c 	and.w	r3, r3, #12
 8005dc6:	2b04      	cmp	r3, #4
 8005dc8:	d007      	beq.n	8005dda <HAL_RCC_GetSysClockFreq+0x32>
 8005dca:	2b08      	cmp	r3, #8
 8005dcc:	d008      	beq.n	8005de0 <HAL_RCC_GetSysClockFreq+0x38>
 8005dce:	2b00      	cmp	r3, #0
 8005dd0:	f040 808d 	bne.w	8005eee <HAL_RCC_GetSysClockFreq+0x146>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8005dd4:	4b4b      	ldr	r3, [pc, #300]	; (8005f04 <HAL_RCC_GetSysClockFreq+0x15c>)
 8005dd6:	60bb      	str	r3, [r7, #8]
       break;
 8005dd8:	e08c      	b.n	8005ef4 <HAL_RCC_GetSysClockFreq+0x14c>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8005dda:	4b4b      	ldr	r3, [pc, #300]	; (8005f08 <HAL_RCC_GetSysClockFreq+0x160>)
 8005ddc:	60bb      	str	r3, [r7, #8]
      break;
 8005dde:	e089      	b.n	8005ef4 <HAL_RCC_GetSysClockFreq+0x14c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005de0:	4b47      	ldr	r3, [pc, #284]	; (8005f00 <HAL_RCC_GetSysClockFreq+0x158>)
 8005de2:	685b      	ldr	r3, [r3, #4]
 8005de4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8005de8:	607b      	str	r3, [r7, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005dea:	4b45      	ldr	r3, [pc, #276]	; (8005f00 <HAL_RCC_GetSysClockFreq+0x158>)
 8005dec:	685b      	ldr	r3, [r3, #4]
 8005dee:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005df2:	2b00      	cmp	r3, #0
 8005df4:	d023      	beq.n	8005e3e <HAL_RCC_GetSysClockFreq+0x96>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005df6:	4b42      	ldr	r3, [pc, #264]	; (8005f00 <HAL_RCC_GetSysClockFreq+0x158>)
 8005df8:	685b      	ldr	r3, [r3, #4]
 8005dfa:	099b      	lsrs	r3, r3, #6
 8005dfc:	f04f 0400 	mov.w	r4, #0
 8005e00:	f240 11ff 	movw	r1, #511	; 0x1ff
 8005e04:	f04f 0200 	mov.w	r2, #0
 8005e08:	ea03 0501 	and.w	r5, r3, r1
 8005e0c:	ea04 0602 	and.w	r6, r4, r2
 8005e10:	4a3d      	ldr	r2, [pc, #244]	; (8005f08 <HAL_RCC_GetSysClockFreq+0x160>)
 8005e12:	fb02 f106 	mul.w	r1, r2, r6
 8005e16:	2200      	movs	r2, #0
 8005e18:	fb02 f205 	mul.w	r2, r2, r5
 8005e1c:	440a      	add	r2, r1
 8005e1e:	493a      	ldr	r1, [pc, #232]	; (8005f08 <HAL_RCC_GetSysClockFreq+0x160>)
 8005e20:	fba5 0101 	umull	r0, r1, r5, r1
 8005e24:	1853      	adds	r3, r2, r1
 8005e26:	4619      	mov	r1, r3
 8005e28:	687b      	ldr	r3, [r7, #4]
 8005e2a:	f04f 0400 	mov.w	r4, #0
 8005e2e:	461a      	mov	r2, r3
 8005e30:	4623      	mov	r3, r4
 8005e32:	f7fa fa35 	bl	80002a0 <__aeabi_uldivmod>
 8005e36:	4603      	mov	r3, r0
 8005e38:	460c      	mov	r4, r1
 8005e3a:	60fb      	str	r3, [r7, #12]
 8005e3c:	e049      	b.n	8005ed2 <HAL_RCC_GetSysClockFreq+0x12a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005e3e:	4b30      	ldr	r3, [pc, #192]	; (8005f00 <HAL_RCC_GetSysClockFreq+0x158>)
 8005e40:	685b      	ldr	r3, [r3, #4]
 8005e42:	099b      	lsrs	r3, r3, #6
 8005e44:	f04f 0400 	mov.w	r4, #0
 8005e48:	f240 11ff 	movw	r1, #511	; 0x1ff
 8005e4c:	f04f 0200 	mov.w	r2, #0
 8005e50:	ea03 0501 	and.w	r5, r3, r1
 8005e54:	ea04 0602 	and.w	r6, r4, r2
 8005e58:	4629      	mov	r1, r5
 8005e5a:	4632      	mov	r2, r6
 8005e5c:	f04f 0300 	mov.w	r3, #0
 8005e60:	f04f 0400 	mov.w	r4, #0
 8005e64:	0154      	lsls	r4, r2, #5
 8005e66:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8005e6a:	014b      	lsls	r3, r1, #5
 8005e6c:	4619      	mov	r1, r3
 8005e6e:	4622      	mov	r2, r4
 8005e70:	1b49      	subs	r1, r1, r5
 8005e72:	eb62 0206 	sbc.w	r2, r2, r6
 8005e76:	f04f 0300 	mov.w	r3, #0
 8005e7a:	f04f 0400 	mov.w	r4, #0
 8005e7e:	0194      	lsls	r4, r2, #6
 8005e80:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8005e84:	018b      	lsls	r3, r1, #6
 8005e86:	1a5b      	subs	r3, r3, r1
 8005e88:	eb64 0402 	sbc.w	r4, r4, r2
 8005e8c:	f04f 0100 	mov.w	r1, #0
 8005e90:	f04f 0200 	mov.w	r2, #0
 8005e94:	00e2      	lsls	r2, r4, #3
 8005e96:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8005e9a:	00d9      	lsls	r1, r3, #3
 8005e9c:	460b      	mov	r3, r1
 8005e9e:	4614      	mov	r4, r2
 8005ea0:	195b      	adds	r3, r3, r5
 8005ea2:	eb44 0406 	adc.w	r4, r4, r6
 8005ea6:	f04f 0100 	mov.w	r1, #0
 8005eaa:	f04f 0200 	mov.w	r2, #0
 8005eae:	02a2      	lsls	r2, r4, #10
 8005eb0:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 8005eb4:	0299      	lsls	r1, r3, #10
 8005eb6:	460b      	mov	r3, r1
 8005eb8:	4614      	mov	r4, r2
 8005eba:	4618      	mov	r0, r3
 8005ebc:	4621      	mov	r1, r4
 8005ebe:	687b      	ldr	r3, [r7, #4]
 8005ec0:	f04f 0400 	mov.w	r4, #0
 8005ec4:	461a      	mov	r2, r3
 8005ec6:	4623      	mov	r3, r4
 8005ec8:	f7fa f9ea 	bl	80002a0 <__aeabi_uldivmod>
 8005ecc:	4603      	mov	r3, r0
 8005ece:	460c      	mov	r4, r1
 8005ed0:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8005ed2:	4b0b      	ldr	r3, [pc, #44]	; (8005f00 <HAL_RCC_GetSysClockFreq+0x158>)
 8005ed4:	685b      	ldr	r3, [r3, #4]
 8005ed6:	0c1b      	lsrs	r3, r3, #16
 8005ed8:	f003 0303 	and.w	r3, r3, #3
 8005edc:	3301      	adds	r3, #1
 8005ede:	005b      	lsls	r3, r3, #1
 8005ee0:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco/pllp;
 8005ee2:	68fa      	ldr	r2, [r7, #12]
 8005ee4:	683b      	ldr	r3, [r7, #0]
 8005ee6:	fbb2 f3f3 	udiv	r3, r2, r3
 8005eea:	60bb      	str	r3, [r7, #8]
      break;
 8005eec:	e002      	b.n	8005ef4 <HAL_RCC_GetSysClockFreq+0x14c>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8005eee:	4b05      	ldr	r3, [pc, #20]	; (8005f04 <HAL_RCC_GetSysClockFreq+0x15c>)
 8005ef0:	60bb      	str	r3, [r7, #8]
      break;
 8005ef2:	bf00      	nop
    }
  }
  return sysclockfreq;
 8005ef4:	68bb      	ldr	r3, [r7, #8]
}
 8005ef6:	4618      	mov	r0, r3
 8005ef8:	3714      	adds	r7, #20
 8005efa:	46bd      	mov	sp, r7
 8005efc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005efe:	bf00      	nop
 8005f00:	40023800 	.word	0x40023800
 8005f04:	00f42400 	.word	0x00f42400
 8005f08:	017d7840 	.word	0x017d7840

08005f0c <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8005f0c:	b480      	push	{r7}
 8005f0e:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8005f10:	4b03      	ldr	r3, [pc, #12]	; (8005f20 <HAL_RCC_GetHCLKFreq+0x14>)
 8005f12:	681b      	ldr	r3, [r3, #0]
}
 8005f14:	4618      	mov	r0, r3
 8005f16:	46bd      	mov	sp, r7
 8005f18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f1c:	4770      	bx	lr
 8005f1e:	bf00      	nop
 8005f20:	20000004 	.word	0x20000004

08005f24 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8005f24:	b580      	push	{r7, lr}
 8005f26:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8005f28:	f7ff fff0 	bl	8005f0c <HAL_RCC_GetHCLKFreq>
 8005f2c:	4601      	mov	r1, r0
 8005f2e:	4b05      	ldr	r3, [pc, #20]	; (8005f44 <HAL_RCC_GetPCLK1Freq+0x20>)
 8005f30:	689b      	ldr	r3, [r3, #8]
 8005f32:	0a9b      	lsrs	r3, r3, #10
 8005f34:	f003 0307 	and.w	r3, r3, #7
 8005f38:	4a03      	ldr	r2, [pc, #12]	; (8005f48 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005f3a:	5cd3      	ldrb	r3, [r2, r3]
 8005f3c:	fa21 f303 	lsr.w	r3, r1, r3
}
 8005f40:	4618      	mov	r0, r3
 8005f42:	bd80      	pop	{r7, pc}
 8005f44:	40023800 	.word	0x40023800
 8005f48:	0801c21c 	.word	0x0801c21c

08005f4c <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8005f4c:	b580      	push	{r7, lr}
 8005f4e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8005f50:	f7ff ffdc 	bl	8005f0c <HAL_RCC_GetHCLKFreq>
 8005f54:	4601      	mov	r1, r0
 8005f56:	4b05      	ldr	r3, [pc, #20]	; (8005f6c <HAL_RCC_GetPCLK2Freq+0x20>)
 8005f58:	689b      	ldr	r3, [r3, #8]
 8005f5a:	0b5b      	lsrs	r3, r3, #13
 8005f5c:	f003 0307 	and.w	r3, r3, #7
 8005f60:	4a03      	ldr	r2, [pc, #12]	; (8005f70 <HAL_RCC_GetPCLK2Freq+0x24>)
 8005f62:	5cd3      	ldrb	r3, [r2, r3]
 8005f64:	fa21 f303 	lsr.w	r3, r1, r3
}
 8005f68:	4618      	mov	r0, r3
 8005f6a:	bd80      	pop	{r7, pc}
 8005f6c:	40023800 	.word	0x40023800
 8005f70:	0801c21c 	.word	0x0801c21c

08005f74 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8005f74:	b580      	push	{r7, lr}
 8005f76:	b086      	sub	sp, #24
 8005f78:	af00      	add	r7, sp, #0
 8005f7a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 8005f7c:	2300      	movs	r3, #0
 8005f7e:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg1 = 0U;
 8005f80:	2300      	movs	r3, #0
 8005f82:	613b      	str	r3, [r7, #16]

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005f84:	687b      	ldr	r3, [r7, #4]
 8005f86:	681b      	ldr	r3, [r3, #0]
 8005f88:	f003 0301 	and.w	r3, r3, #1
 8005f8c:	2b00      	cmp	r3, #0
 8005f8e:	d10b      	bne.n	8005fa8 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005f90:	687b      	ldr	r3, [r7, #4]
 8005f92:	681b      	ldr	r3, [r3, #0]
 8005f94:	f003 0302 	and.w	r3, r3, #2
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005f98:	2b00      	cmp	r3, #0
 8005f9a:	d105      	bne.n	8005fa8 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8005f9c:	687b      	ldr	r3, [r7, #4]
 8005f9e:	681b      	ldr	r3, [r3, #0]
 8005fa0:	f003 0340 	and.w	r3, r3, #64	; 0x40
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005fa4:	2b00      	cmp	r3, #0
 8005fa6:	d075      	beq.n	8006094 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* check for Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8005fa8:	4bad      	ldr	r3, [pc, #692]	; (8006260 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8005faa:	2200      	movs	r2, #0
 8005fac:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8005fae:	f7fd f83b 	bl	8003028 <HAL_GetTick>
 8005fb2:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005fb4:	e008      	b.n	8005fc8 <HAL_RCCEx_PeriphCLKConfig+0x54>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005fb6:	f7fd f837 	bl	8003028 <HAL_GetTick>
 8005fba:	4602      	mov	r2, r0
 8005fbc:	697b      	ldr	r3, [r7, #20]
 8005fbe:	1ad3      	subs	r3, r2, r3
 8005fc0:	2b02      	cmp	r3, #2
 8005fc2:	d901      	bls.n	8005fc8 <HAL_RCCEx_PeriphCLKConfig+0x54>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8005fc4:	2303      	movs	r3, #3
 8005fc6:	e18b      	b.n	80062e0 <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005fc8:	4ba6      	ldr	r3, [pc, #664]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8005fca:	681b      	ldr	r3, [r3, #0]
 8005fcc:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005fd0:	2b00      	cmp	r3, #0
 8005fd2:	d1f0      	bne.n	8005fb6 <HAL_RCCEx_PeriphCLKConfig+0x42>
    }

    /*---------------------------- I2S configuration -------------------------*/
    /* In Case of I2S Clock Configuration through PLLI2S, PLLI2SR must be added
      only for I2S configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005fd4:	687b      	ldr	r3, [r7, #4]
 8005fd6:	681b      	ldr	r3, [r3, #0]
 8005fd8:	f003 0301 	and.w	r3, r3, #1
 8005fdc:	2b00      	cmp	r3, #0
 8005fde:	d009      	beq.n	8005ff4 <HAL_RCCEx_PeriphCLKConfig+0x80>
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8005fe0:	687b      	ldr	r3, [r7, #4]
 8005fe2:	685b      	ldr	r3, [r3, #4]
 8005fe4:	019a      	lsls	r2, r3, #6
 8005fe6:	687b      	ldr	r3, [r7, #4]
 8005fe8:	689b      	ldr	r3, [r3, #8]
 8005fea:	071b      	lsls	r3, r3, #28
 8005fec:	499d      	ldr	r1, [pc, #628]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8005fee:	4313      	orrs	r3, r2
 8005ff0:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLI2S, PLLI2SQ and PLLI2S_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8005ff4:	687b      	ldr	r3, [r7, #4]
 8005ff6:	681b      	ldr	r3, [r3, #0]
 8005ff8:	f003 0302 	and.w	r3, r3, #2
 8005ffc:	2b00      	cmp	r3, #0
 8005ffe:	d01f      	beq.n	8006040 <HAL_RCCEx_PeriphCLKConfig+0xcc>
      /* Check the PLLI2S division factors */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SR value from PLLI2SCFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006000:	4b98      	ldr	r3, [pc, #608]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006002:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006006:	0f1b      	lsrs	r3, r3, #28
 8006008:	f003 0307 	and.w	r3, r3, #7
 800600c:	613b      	str	r3, [r7, #16]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800600e:	687b      	ldr	r3, [r7, #4]
 8006010:	685b      	ldr	r3, [r3, #4]
 8006012:	019a      	lsls	r2, r3, #6
 8006014:	687b      	ldr	r3, [r7, #4]
 8006016:	68db      	ldr	r3, [r3, #12]
 8006018:	061b      	lsls	r3, r3, #24
 800601a:	431a      	orrs	r2, r3
 800601c:	693b      	ldr	r3, [r7, #16]
 800601e:	071b      	lsls	r3, r3, #28
 8006020:	4990      	ldr	r1, [pc, #576]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006022:	4313      	orrs	r3, r2
 8006024:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006028:	4b8e      	ldr	r3, [pc, #568]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800602a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800602e:	f023 021f 	bic.w	r2, r3, #31
 8006032:	687b      	ldr	r3, [r7, #4]
 8006034:	69db      	ldr	r3, [r3, #28]
 8006036:	3b01      	subs	r3, #1
 8006038:	498a      	ldr	r1, [pc, #552]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800603a:	4313      	orrs	r3, r2
 800603c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006040:	687b      	ldr	r3, [r7, #4]
 8006042:	681b      	ldr	r3, [r3, #0]
 8006044:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006048:	2b00      	cmp	r3, #0
 800604a:	d00d      	beq.n	8006068 <HAL_RCCEx_PeriphCLKConfig+0xf4>
      /* Check for Parameters */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Configure the PLLI2S multiplication and division factors */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800604c:	687b      	ldr	r3, [r7, #4]
 800604e:	685b      	ldr	r3, [r3, #4]
 8006050:	019a      	lsls	r2, r3, #6
 8006052:	687b      	ldr	r3, [r7, #4]
 8006054:	68db      	ldr	r3, [r3, #12]
 8006056:	061b      	lsls	r3, r3, #24
 8006058:	431a      	orrs	r2, r3
 800605a:	687b      	ldr	r3, [r7, #4]
 800605c:	689b      	ldr	r3, [r3, #8]
 800605e:	071b      	lsls	r3, r3, #28
 8006060:	4980      	ldr	r1, [pc, #512]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006062:	4313      	orrs	r3, r2
 8006064:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8006068:	4b7d      	ldr	r3, [pc, #500]	; (8006260 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 800606a:	2201      	movs	r2, #1
 800606c:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 800606e:	f7fc ffdb 	bl	8003028 <HAL_GetTick>
 8006072:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006074:	e008      	b.n	8006088 <HAL_RCCEx_PeriphCLKConfig+0x114>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006076:	f7fc ffd7 	bl	8003028 <HAL_GetTick>
 800607a:	4602      	mov	r2, r0
 800607c:	697b      	ldr	r3, [r7, #20]
 800607e:	1ad3      	subs	r3, r2, r3
 8006080:	2b02      	cmp	r3, #2
 8006082:	d901      	bls.n	8006088 <HAL_RCCEx_PeriphCLKConfig+0x114>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8006084:	2303      	movs	r3, #3
 8006086:	e12b      	b.n	80062e0 <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006088:	4b76      	ldr	r3, [pc, #472]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800608a:	681b      	ldr	r3, [r3, #0]
 800608c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8006090:	2b00      	cmp	r3, #0
 8006092:	d0f0      	beq.n	8006076 <HAL_RCCEx_PeriphCLKConfig+0x102>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006094:	687b      	ldr	r3, [r7, #4]
 8006096:	681b      	ldr	r3, [r3, #0]
 8006098:	f003 0304 	and.w	r3, r3, #4
 800609c:	2b00      	cmp	r3, #0
 800609e:	d105      	bne.n	80060ac <HAL_RCCEx_PeriphCLKConfig+0x138>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC))
 80060a0:	687b      	ldr	r3, [r7, #4]
 80060a2:	681b      	ldr	r3, [r3, #0]
 80060a4:	f003 0308 	and.w	r3, r3, #8
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80060a8:	2b00      	cmp	r3, #0
 80060aa:	d079      	beq.n	80061a0 <HAL_RCCEx_PeriphCLKConfig+0x22c>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80060ac:	4b6e      	ldr	r3, [pc, #440]	; (8006268 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 80060ae:	2200      	movs	r2, #0
 80060b0:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80060b2:	f7fc ffb9 	bl	8003028 <HAL_GetTick>
 80060b6:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80060b8:	e008      	b.n	80060cc <HAL_RCCEx_PeriphCLKConfig+0x158>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80060ba:	f7fc ffb5 	bl	8003028 <HAL_GetTick>
 80060be:	4602      	mov	r2, r0
 80060c0:	697b      	ldr	r3, [r7, #20]
 80060c2:	1ad3      	subs	r3, r2, r3
 80060c4:	2b02      	cmp	r3, #2
 80060c6:	d901      	bls.n	80060cc <HAL_RCCEx_PeriphCLKConfig+0x158>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 80060c8:	2303      	movs	r3, #3
 80060ca:	e109      	b.n	80062e0 <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80060cc:	4b65      	ldr	r3, [pc, #404]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80060ce:	681b      	ldr	r3, [r3, #0]
 80060d0:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80060d4:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80060d8:	d0ef      	beq.n	80060ba <HAL_RCCEx_PeriphCLKConfig+0x146>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80060da:	687b      	ldr	r3, [r7, #4]
 80060dc:	681b      	ldr	r3, [r3, #0]
 80060de:	f003 0304 	and.w	r3, r3, #4
 80060e2:	2b00      	cmp	r3, #0
 80060e4:	d020      	beq.n	8006128 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80060e6:	4b5f      	ldr	r3, [pc, #380]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80060e8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80060ec:	0f1b      	lsrs	r3, r3, #28
 80060ee:	f003 0307 	and.w	r3, r3, #7
 80060f2:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80060f4:	687b      	ldr	r3, [r7, #4]
 80060f6:	691b      	ldr	r3, [r3, #16]
 80060f8:	019a      	lsls	r2, r3, #6
 80060fa:	687b      	ldr	r3, [r7, #4]
 80060fc:	695b      	ldr	r3, [r3, #20]
 80060fe:	061b      	lsls	r3, r3, #24
 8006100:	431a      	orrs	r2, r3
 8006102:	693b      	ldr	r3, [r7, #16]
 8006104:	071b      	lsls	r3, r3, #28
 8006106:	4957      	ldr	r1, [pc, #348]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006108:	4313      	orrs	r3, r2
 800610a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800610e:	4b55      	ldr	r3, [pc, #340]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006110:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006114:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8006118:	687b      	ldr	r3, [r7, #4]
 800611a:	6a1b      	ldr	r3, [r3, #32]
 800611c:	3b01      	subs	r3, #1
 800611e:	021b      	lsls	r3, r3, #8
 8006120:	4950      	ldr	r1, [pc, #320]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006122:	4313      	orrs	r3, r2
 8006124:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006128:	687b      	ldr	r3, [r7, #4]
 800612a:	681b      	ldr	r3, [r3, #0]
 800612c:	f003 0308 	and.w	r3, r3, #8
 8006130:	2b00      	cmp	r3, #0
 8006132:	d01e      	beq.n	8006172 <HAL_RCCEx_PeriphCLKConfig+0x1fe>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006134:	4b4b      	ldr	r3, [pc, #300]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006136:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800613a:	0e1b      	lsrs	r3, r3, #24
 800613c:	f003 030f 	and.w	r3, r3, #15
 8006140:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006142:	687b      	ldr	r3, [r7, #4]
 8006144:	691b      	ldr	r3, [r3, #16]
 8006146:	019a      	lsls	r2, r3, #6
 8006148:	693b      	ldr	r3, [r7, #16]
 800614a:	061b      	lsls	r3, r3, #24
 800614c:	431a      	orrs	r2, r3
 800614e:	687b      	ldr	r3, [r7, #4]
 8006150:	699b      	ldr	r3, [r3, #24]
 8006152:	071b      	lsls	r3, r3, #28
 8006154:	4943      	ldr	r1, [pc, #268]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006156:	4313      	orrs	r3, r2
 8006158:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800615c:	4b41      	ldr	r3, [pc, #260]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800615e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006162:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8006166:	687b      	ldr	r3, [r7, #4]
 8006168:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800616a:	493e      	ldr	r1, [pc, #248]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800616c:	4313      	orrs	r3, r2
 800616e:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006172:	4b3d      	ldr	r3, [pc, #244]	; (8006268 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8006174:	2201      	movs	r2, #1
 8006176:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8006178:	f7fc ff56 	bl	8003028 <HAL_GetTick>
 800617c:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800617e:	e008      	b.n	8006192 <HAL_RCCEx_PeriphCLKConfig+0x21e>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006180:	f7fc ff52 	bl	8003028 <HAL_GetTick>
 8006184:	4602      	mov	r2, r0
 8006186:	697b      	ldr	r3, [r7, #20]
 8006188:	1ad3      	subs	r3, r2, r3
 800618a:	2b02      	cmp	r3, #2
 800618c:	d901      	bls.n	8006192 <HAL_RCCEx_PeriphCLKConfig+0x21e>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 800618e:	2303      	movs	r3, #3
 8006190:	e0a6      	b.n	80062e0 <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006192:	4b34      	ldr	r3, [pc, #208]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006194:	681b      	ldr	r3, [r3, #0]
 8006196:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800619a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800619e:	d1ef      	bne.n	8006180 <HAL_RCCEx_PeriphCLKConfig+0x20c>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80061a0:	687b      	ldr	r3, [r7, #4]
 80061a2:	681b      	ldr	r3, [r3, #0]
 80061a4:	f003 0320 	and.w	r3, r3, #32
 80061a8:	2b00      	cmp	r3, #0
 80061aa:	f000 808d 	beq.w	80062c8 <HAL_RCCEx_PeriphCLKConfig+0x354>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80061ae:	2300      	movs	r3, #0
 80061b0:	60fb      	str	r3, [r7, #12]
 80061b2:	4b2c      	ldr	r3, [pc, #176]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80061b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80061b6:	4a2b      	ldr	r2, [pc, #172]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80061b8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80061bc:	6413      	str	r3, [r2, #64]	; 0x40
 80061be:	4b29      	ldr	r3, [pc, #164]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80061c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80061c2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80061c6:	60fb      	str	r3, [r7, #12]
 80061c8:	68fb      	ldr	r3, [r7, #12]

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80061ca:	4b28      	ldr	r3, [pc, #160]	; (800626c <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 80061cc:	681b      	ldr	r3, [r3, #0]
 80061ce:	4a27      	ldr	r2, [pc, #156]	; (800626c <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 80061d0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80061d4:	6013      	str	r3, [r2, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 80061d6:	f7fc ff27 	bl	8003028 <HAL_GetTick>
 80061da:	6178      	str	r0, [r7, #20]

    while((PWR->CR & PWR_CR_DBP) == RESET)
 80061dc:	e008      	b.n	80061f0 <HAL_RCCEx_PeriphCLKConfig+0x27c>
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 80061de:	f7fc ff23 	bl	8003028 <HAL_GetTick>
 80061e2:	4602      	mov	r2, r0
 80061e4:	697b      	ldr	r3, [r7, #20]
 80061e6:	1ad3      	subs	r3, r2, r3
 80061e8:	2b02      	cmp	r3, #2
 80061ea:	d901      	bls.n	80061f0 <HAL_RCCEx_PeriphCLKConfig+0x27c>
      {
        return HAL_TIMEOUT;
 80061ec:	2303      	movs	r3, #3
 80061ee:	e077      	b.n	80062e0 <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 80061f0:	4b1e      	ldr	r3, [pc, #120]	; (800626c <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 80061f2:	681b      	ldr	r3, [r3, #0]
 80061f4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80061f8:	2b00      	cmp	r3, #0
 80061fa:	d0f0      	beq.n	80061de <HAL_RCCEx_PeriphCLKConfig+0x26a>
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80061fc:	4b19      	ldr	r3, [pc, #100]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80061fe:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006200:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006204:	613b      	str	r3, [r7, #16]
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006206:	693b      	ldr	r3, [r7, #16]
 8006208:	2b00      	cmp	r3, #0
 800620a:	d039      	beq.n	8006280 <HAL_RCCEx_PeriphCLKConfig+0x30c>
 800620c:	687b      	ldr	r3, [r7, #4]
 800620e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006210:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006214:	693a      	ldr	r2, [r7, #16]
 8006216:	429a      	cmp	r2, r3
 8006218:	d032      	beq.n	8006280 <HAL_RCCEx_PeriphCLKConfig+0x30c>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800621a:	4b12      	ldr	r3, [pc, #72]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800621c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800621e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006222:	613b      	str	r3, [r7, #16]
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8006224:	4b12      	ldr	r3, [pc, #72]	; (8006270 <HAL_RCCEx_PeriphCLKConfig+0x2fc>)
 8006226:	2201      	movs	r2, #1
 8006228:	601a      	str	r2, [r3, #0]
      __HAL_RCC_BACKUPRESET_RELEASE();
 800622a:	4b11      	ldr	r3, [pc, #68]	; (8006270 <HAL_RCCEx_PeriphCLKConfig+0x2fc>)
 800622c:	2200      	movs	r2, #0
 800622e:	601a      	str	r2, [r3, #0]
      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg1;
 8006230:	4a0c      	ldr	r2, [pc, #48]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006232:	693b      	ldr	r3, [r7, #16]
 8006234:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006236:	4b0b      	ldr	r3, [pc, #44]	; (8006264 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006238:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800623a:	f003 0301 	and.w	r3, r3, #1
 800623e:	2b01      	cmp	r3, #1
 8006240:	d11e      	bne.n	8006280 <HAL_RCCEx_PeriphCLKConfig+0x30c>
      {
        /* Get tick */
        tickstart = HAL_GetTick();
 8006242:	f7fc fef1 	bl	8003028 <HAL_GetTick>
 8006246:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006248:	e014      	b.n	8006274 <HAL_RCCEx_PeriphCLKConfig+0x300>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800624a:	f7fc feed 	bl	8003028 <HAL_GetTick>
 800624e:	4602      	mov	r2, r0
 8006250:	697b      	ldr	r3, [r7, #20]
 8006252:	1ad3      	subs	r3, r2, r3
 8006254:	f241 3288 	movw	r2, #5000	; 0x1388
 8006258:	4293      	cmp	r3, r2
 800625a:	d90b      	bls.n	8006274 <HAL_RCCEx_PeriphCLKConfig+0x300>
          {
            return HAL_TIMEOUT;
 800625c:	2303      	movs	r3, #3
 800625e:	e03f      	b.n	80062e0 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8006260:	42470068 	.word	0x42470068
 8006264:	40023800 	.word	0x40023800
 8006268:	42470070 	.word	0x42470070
 800626c:	40007000 	.word	0x40007000
 8006270:	42470e40 	.word	0x42470e40
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006274:	4b1c      	ldr	r3, [pc, #112]	; (80062e8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006276:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006278:	f003 0302 	and.w	r3, r3, #2
 800627c:	2b00      	cmp	r3, #0
 800627e:	d0e4      	beq.n	800624a <HAL_RCCEx_PeriphCLKConfig+0x2d6>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006280:	687b      	ldr	r3, [r7, #4]
 8006282:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006284:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006288:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800628c:	d10d      	bne.n	80062aa <HAL_RCCEx_PeriphCLKConfig+0x336>
 800628e:	4b16      	ldr	r3, [pc, #88]	; (80062e8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006290:	689b      	ldr	r3, [r3, #8]
 8006292:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8006296:	687b      	ldr	r3, [r7, #4]
 8006298:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800629a:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 800629e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80062a2:	4911      	ldr	r1, [pc, #68]	; (80062e8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80062a4:	4313      	orrs	r3, r2
 80062a6:	608b      	str	r3, [r1, #8]
 80062a8:	e005      	b.n	80062b6 <HAL_RCCEx_PeriphCLKConfig+0x342>
 80062aa:	4b0f      	ldr	r3, [pc, #60]	; (80062e8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80062ac:	689b      	ldr	r3, [r3, #8]
 80062ae:	4a0e      	ldr	r2, [pc, #56]	; (80062e8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80062b0:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 80062b4:	6093      	str	r3, [r2, #8]
 80062b6:	4b0c      	ldr	r3, [pc, #48]	; (80062e8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80062b8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80062ba:	687b      	ldr	r3, [r7, #4]
 80062bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80062be:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80062c2:	4909      	ldr	r1, [pc, #36]	; (80062e8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80062c4:	4313      	orrs	r3, r2
 80062c6:	670b      	str	r3, [r1, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80062c8:	687b      	ldr	r3, [r7, #4]
 80062ca:	681b      	ldr	r3, [r3, #0]
 80062cc:	f003 0310 	and.w	r3, r3, #16
 80062d0:	2b00      	cmp	r3, #0
 80062d2:	d004      	beq.n	80062de <HAL_RCCEx_PeriphCLKConfig+0x36a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80062d4:	687b      	ldr	r3, [r7, #4]
 80062d6:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
 80062da:	4b04      	ldr	r3, [pc, #16]	; (80062ec <HAL_RCCEx_PeriphCLKConfig+0x378>)
 80062dc:	601a      	str	r2, [r3, #0]
  }
  return HAL_OK;
 80062de:	2300      	movs	r3, #0
}
 80062e0:	4618      	mov	r0, r3
 80062e2:	3718      	adds	r7, #24
 80062e4:	46bd      	mov	sp, r7
 80062e6:	bd80      	pop	{r7, pc}
 80062e8:	40023800 	.word	0x40023800
 80062ec:	424711e0 	.word	0x424711e0

080062f0 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 80062f0:	b580      	push	{r7, lr}
 80062f2:	b082      	sub	sp, #8
 80062f4:	af00      	add	r7, sp, #0
 80062f6:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 80062f8:	687b      	ldr	r3, [r7, #4]
 80062fa:	2b00      	cmp	r3, #0
 80062fc:	d101      	bne.n	8006302 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 80062fe:	2301      	movs	r3, #1
 8006300:	e056      	b.n	80063b0 <HAL_SPI_Init+0xc0>
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8006302:	687b      	ldr	r3, [r7, #4]
 8006304:	2200      	movs	r2, #0
 8006306:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8006308:	687b      	ldr	r3, [r7, #4]
 800630a:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800630e:	b2db      	uxtb	r3, r3
 8006310:	2b00      	cmp	r3, #0
 8006312:	d106      	bne.n	8006322 <HAL_SPI_Init+0x32>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8006314:	687b      	ldr	r3, [r7, #4]
 8006316:	2200      	movs	r2, #0
 8006318:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 800631c:	6878      	ldr	r0, [r7, #4]
 800631e:	f7fb fe2d 	bl	8001f7c <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8006322:	687b      	ldr	r3, [r7, #4]
 8006324:	2202      	movs	r2, #2
 8006326:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800632a:	687b      	ldr	r3, [r7, #4]
 800632c:	681b      	ldr	r3, [r3, #0]
 800632e:	681a      	ldr	r2, [r3, #0]
 8006330:	687b      	ldr	r3, [r7, #4]
 8006332:	681b      	ldr	r3, [r3, #0]
 8006334:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006338:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 800633a:	687b      	ldr	r3, [r7, #4]
 800633c:	685a      	ldr	r2, [r3, #4]
 800633e:	687b      	ldr	r3, [r7, #4]
 8006340:	689b      	ldr	r3, [r3, #8]
 8006342:	431a      	orrs	r2, r3
 8006344:	687b      	ldr	r3, [r7, #4]
 8006346:	68db      	ldr	r3, [r3, #12]
 8006348:	431a      	orrs	r2, r3
 800634a:	687b      	ldr	r3, [r7, #4]
 800634c:	691b      	ldr	r3, [r3, #16]
 800634e:	431a      	orrs	r2, r3
 8006350:	687b      	ldr	r3, [r7, #4]
 8006352:	695b      	ldr	r3, [r3, #20]
 8006354:	431a      	orrs	r2, r3
 8006356:	687b      	ldr	r3, [r7, #4]
 8006358:	699b      	ldr	r3, [r3, #24]
 800635a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800635e:	431a      	orrs	r2, r3
 8006360:	687b      	ldr	r3, [r7, #4]
 8006362:	69db      	ldr	r3, [r3, #28]
 8006364:	431a      	orrs	r2, r3
 8006366:	687b      	ldr	r3, [r7, #4]
 8006368:	6a1b      	ldr	r3, [r3, #32]
 800636a:	ea42 0103 	orr.w	r1, r2, r3
 800636e:	687b      	ldr	r3, [r7, #4]
 8006370:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8006372:	687b      	ldr	r3, [r7, #4]
 8006374:	681b      	ldr	r3, [r3, #0]
 8006376:	430a      	orrs	r2, r1
 8006378:	601a      	str	r2, [r3, #0]
                                  hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & SPI_CR1_SSM) |
                                  hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.CRCCalculation));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 800637a:	687b      	ldr	r3, [r7, #4]
 800637c:	699b      	ldr	r3, [r3, #24]
 800637e:	0c1b      	lsrs	r3, r3, #16
 8006380:	f003 0104 	and.w	r1, r3, #4
 8006384:	687b      	ldr	r3, [r7, #4]
 8006386:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006388:	687b      	ldr	r3, [r7, #4]
 800638a:	681b      	ldr	r3, [r3, #0]
 800638c:	430a      	orrs	r2, r1
 800638e:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006390:	687b      	ldr	r3, [r7, #4]
 8006392:	681b      	ldr	r3, [r3, #0]
 8006394:	69da      	ldr	r2, [r3, #28]
 8006396:	687b      	ldr	r3, [r7, #4]
 8006398:	681b      	ldr	r3, [r3, #0]
 800639a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800639e:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80063a0:	687b      	ldr	r3, [r7, #4]
 80063a2:	2200      	movs	r2, #0
 80063a4:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80063a6:	687b      	ldr	r3, [r7, #4]
 80063a8:	2201      	movs	r2, #1
 80063aa:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 80063ae:	2300      	movs	r3, #0
}
 80063b0:	4618      	mov	r0, r3
 80063b2:	3708      	adds	r7, #8
 80063b4:	46bd      	mov	sp, r7
 80063b6:	bd80      	pop	{r7, pc}

080063b8 <HAL_SPI_DeInit>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
{
 80063b8:	b580      	push	{r7, lr}
 80063ba:	b082      	sub	sp, #8
 80063bc:	af00      	add	r7, sp, #0
 80063be:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 80063c0:	687b      	ldr	r3, [r7, #4]
 80063c2:	2b00      	cmp	r3, #0
 80063c4:	d101      	bne.n	80063ca <HAL_SPI_DeInit+0x12>
  {
    return HAL_ERROR;
 80063c6:	2301      	movs	r3, #1
 80063c8:	e01a      	b.n	8006400 <HAL_SPI_DeInit+0x48>
  }

  /* Check SPI Instance parameter */
  assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));

  hspi->State = HAL_SPI_STATE_BUSY;
 80063ca:	687b      	ldr	r3, [r7, #4]
 80063cc:	2202      	movs	r2, #2
 80063ce:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the SPI Peripheral Clock */
  __HAL_SPI_DISABLE(hspi);
 80063d2:	687b      	ldr	r3, [r7, #4]
 80063d4:	681b      	ldr	r3, [r3, #0]
 80063d6:	681a      	ldr	r2, [r3, #0]
 80063d8:	687b      	ldr	r3, [r7, #4]
 80063da:	681b      	ldr	r3, [r3, #0]
 80063dc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80063e0:	601a      	str	r2, [r3, #0]

  /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
  hspi->MspDeInitCallback(hspi);
#else
  /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
  HAL_SPI_MspDeInit(hspi);
 80063e2:	6878      	ldr	r0, [r7, #4]
 80063e4:	f7fb fe12 	bl	800200c <HAL_SPI_MspDeInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80063e8:	687b      	ldr	r3, [r7, #4]
 80063ea:	2200      	movs	r2, #0
 80063ec:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State = HAL_SPI_STATE_RESET;
 80063ee:	687b      	ldr	r3, [r7, #4]
 80063f0:	2200      	movs	r2, #0
 80063f2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Release Lock */
  __HAL_UNLOCK(hspi);
 80063f6:	687b      	ldr	r3, [r7, #4]
 80063f8:	2200      	movs	r2, #0
 80063fa:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  return HAL_OK;
 80063fe:	2300      	movs	r3, #0
}
 8006400:	4618      	mov	r0, r3
 8006402:	3708      	adds	r7, #8
 8006404:	46bd      	mov	sp, r7
 8006406:	bd80      	pop	{r7, pc}

08006408 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8006408:	b580      	push	{r7, lr}
 800640a:	b088      	sub	sp, #32
 800640c:	af00      	add	r7, sp, #0
 800640e:	60f8      	str	r0, [r7, #12]
 8006410:	60b9      	str	r1, [r7, #8]
 8006412:	603b      	str	r3, [r7, #0]
 8006414:	4613      	mov	r3, r2
 8006416:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8006418:	2300      	movs	r3, #0
 800641a:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 800641c:	68fb      	ldr	r3, [r7, #12]
 800641e:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8006422:	2b01      	cmp	r3, #1
 8006424:	d101      	bne.n	800642a <HAL_SPI_Transmit+0x22>
 8006426:	2302      	movs	r3, #2
 8006428:	e11e      	b.n	8006668 <HAL_SPI_Transmit+0x260>
 800642a:	68fb      	ldr	r3, [r7, #12]
 800642c:	2201      	movs	r2, #1
 800642e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006432:	f7fc fdf9 	bl	8003028 <HAL_GetTick>
 8006436:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 8006438:	88fb      	ldrh	r3, [r7, #6]
 800643a:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 800643c:	68fb      	ldr	r3, [r7, #12]
 800643e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006442:	b2db      	uxtb	r3, r3
 8006444:	2b01      	cmp	r3, #1
 8006446:	d002      	beq.n	800644e <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 8006448:	2302      	movs	r3, #2
 800644a:	77fb      	strb	r3, [r7, #31]
    goto error;
 800644c:	e103      	b.n	8006656 <HAL_SPI_Transmit+0x24e>
  }

  if ((pData == NULL) || (Size == 0U))
 800644e:	68bb      	ldr	r3, [r7, #8]
 8006450:	2b00      	cmp	r3, #0
 8006452:	d002      	beq.n	800645a <HAL_SPI_Transmit+0x52>
 8006454:	88fb      	ldrh	r3, [r7, #6]
 8006456:	2b00      	cmp	r3, #0
 8006458:	d102      	bne.n	8006460 <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 800645a:	2301      	movs	r3, #1
 800645c:	77fb      	strb	r3, [r7, #31]
    goto error;
 800645e:	e0fa      	b.n	8006656 <HAL_SPI_Transmit+0x24e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006460:	68fb      	ldr	r3, [r7, #12]
 8006462:	2203      	movs	r2, #3
 8006464:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006468:	68fb      	ldr	r3, [r7, #12]
 800646a:	2200      	movs	r2, #0
 800646c:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800646e:	68fb      	ldr	r3, [r7, #12]
 8006470:	68ba      	ldr	r2, [r7, #8]
 8006472:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 8006474:	68fb      	ldr	r3, [r7, #12]
 8006476:	88fa      	ldrh	r2, [r7, #6]
 8006478:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 800647a:	68fb      	ldr	r3, [r7, #12]
 800647c:	88fa      	ldrh	r2, [r7, #6]
 800647e:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006480:	68fb      	ldr	r3, [r7, #12]
 8006482:	2200      	movs	r2, #0
 8006484:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 8006486:	68fb      	ldr	r3, [r7, #12]
 8006488:	2200      	movs	r2, #0
 800648a:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800648c:	68fb      	ldr	r3, [r7, #12]
 800648e:	2200      	movs	r2, #0
 8006490:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 8006492:	68fb      	ldr	r3, [r7, #12]
 8006494:	2200      	movs	r2, #0
 8006496:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 8006498:	68fb      	ldr	r3, [r7, #12]
 800649a:	2200      	movs	r2, #0
 800649c:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800649e:	68fb      	ldr	r3, [r7, #12]
 80064a0:	689b      	ldr	r3, [r3, #8]
 80064a2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80064a6:	d107      	bne.n	80064b8 <HAL_SPI_Transmit+0xb0>
  {
    SPI_1LINE_TX(hspi);
 80064a8:	68fb      	ldr	r3, [r7, #12]
 80064aa:	681b      	ldr	r3, [r3, #0]
 80064ac:	681a      	ldr	r2, [r3, #0]
 80064ae:	68fb      	ldr	r3, [r7, #12]
 80064b0:	681b      	ldr	r3, [r3, #0]
 80064b2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80064b6:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80064b8:	68fb      	ldr	r3, [r7, #12]
 80064ba:	681b      	ldr	r3, [r3, #0]
 80064bc:	681b      	ldr	r3, [r3, #0]
 80064be:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80064c2:	2b40      	cmp	r3, #64	; 0x40
 80064c4:	d007      	beq.n	80064d6 <HAL_SPI_Transmit+0xce>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80064c6:	68fb      	ldr	r3, [r7, #12]
 80064c8:	681b      	ldr	r3, [r3, #0]
 80064ca:	681a      	ldr	r2, [r3, #0]
 80064cc:	68fb      	ldr	r3, [r7, #12]
 80064ce:	681b      	ldr	r3, [r3, #0]
 80064d0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80064d4:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80064d6:	68fb      	ldr	r3, [r7, #12]
 80064d8:	68db      	ldr	r3, [r3, #12]
 80064da:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80064de:	d14b      	bne.n	8006578 <HAL_SPI_Transmit+0x170>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80064e0:	68fb      	ldr	r3, [r7, #12]
 80064e2:	685b      	ldr	r3, [r3, #4]
 80064e4:	2b00      	cmp	r3, #0
 80064e6:	d002      	beq.n	80064ee <HAL_SPI_Transmit+0xe6>
 80064e8:	8afb      	ldrh	r3, [r7, #22]
 80064ea:	2b01      	cmp	r3, #1
 80064ec:	d13e      	bne.n	800656c <HAL_SPI_Transmit+0x164>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80064ee:	68fb      	ldr	r3, [r7, #12]
 80064f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064f2:	881a      	ldrh	r2, [r3, #0]
 80064f4:	68fb      	ldr	r3, [r7, #12]
 80064f6:	681b      	ldr	r3, [r3, #0]
 80064f8:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80064fa:	68fb      	ldr	r3, [r7, #12]
 80064fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064fe:	1c9a      	adds	r2, r3, #2
 8006500:	68fb      	ldr	r3, [r7, #12]
 8006502:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8006504:	68fb      	ldr	r3, [r7, #12]
 8006506:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006508:	b29b      	uxth	r3, r3
 800650a:	3b01      	subs	r3, #1
 800650c:	b29a      	uxth	r2, r3
 800650e:	68fb      	ldr	r3, [r7, #12]
 8006510:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8006512:	e02b      	b.n	800656c <HAL_SPI_Transmit+0x164>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006514:	68fb      	ldr	r3, [r7, #12]
 8006516:	681b      	ldr	r3, [r3, #0]
 8006518:	689b      	ldr	r3, [r3, #8]
 800651a:	f003 0302 	and.w	r3, r3, #2
 800651e:	2b02      	cmp	r3, #2
 8006520:	d112      	bne.n	8006548 <HAL_SPI_Transmit+0x140>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006522:	68fb      	ldr	r3, [r7, #12]
 8006524:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006526:	881a      	ldrh	r2, [r3, #0]
 8006528:	68fb      	ldr	r3, [r7, #12]
 800652a:	681b      	ldr	r3, [r3, #0]
 800652c:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800652e:	68fb      	ldr	r3, [r7, #12]
 8006530:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006532:	1c9a      	adds	r2, r3, #2
 8006534:	68fb      	ldr	r3, [r7, #12]
 8006536:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8006538:	68fb      	ldr	r3, [r7, #12]
 800653a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800653c:	b29b      	uxth	r3, r3
 800653e:	3b01      	subs	r3, #1
 8006540:	b29a      	uxth	r2, r3
 8006542:	68fb      	ldr	r3, [r7, #12]
 8006544:	86da      	strh	r2, [r3, #54]	; 0x36
 8006546:	e011      	b.n	800656c <HAL_SPI_Transmit+0x164>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006548:	f7fc fd6e 	bl	8003028 <HAL_GetTick>
 800654c:	4602      	mov	r2, r0
 800654e:	69bb      	ldr	r3, [r7, #24]
 8006550:	1ad3      	subs	r3, r2, r3
 8006552:	683a      	ldr	r2, [r7, #0]
 8006554:	429a      	cmp	r2, r3
 8006556:	d803      	bhi.n	8006560 <HAL_SPI_Transmit+0x158>
 8006558:	683b      	ldr	r3, [r7, #0]
 800655a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800655e:	d102      	bne.n	8006566 <HAL_SPI_Transmit+0x15e>
 8006560:	683b      	ldr	r3, [r7, #0]
 8006562:	2b00      	cmp	r3, #0
 8006564:	d102      	bne.n	800656c <HAL_SPI_Transmit+0x164>
        {
          errorcode = HAL_TIMEOUT;
 8006566:	2303      	movs	r3, #3
 8006568:	77fb      	strb	r3, [r7, #31]
          goto error;
 800656a:	e074      	b.n	8006656 <HAL_SPI_Transmit+0x24e>
    while (hspi->TxXferCount > 0U)
 800656c:	68fb      	ldr	r3, [r7, #12]
 800656e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006570:	b29b      	uxth	r3, r3
 8006572:	2b00      	cmp	r3, #0
 8006574:	d1ce      	bne.n	8006514 <HAL_SPI_Transmit+0x10c>
 8006576:	e04c      	b.n	8006612 <HAL_SPI_Transmit+0x20a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006578:	68fb      	ldr	r3, [r7, #12]
 800657a:	685b      	ldr	r3, [r3, #4]
 800657c:	2b00      	cmp	r3, #0
 800657e:	d002      	beq.n	8006586 <HAL_SPI_Transmit+0x17e>
 8006580:	8afb      	ldrh	r3, [r7, #22]
 8006582:	2b01      	cmp	r3, #1
 8006584:	d140      	bne.n	8006608 <HAL_SPI_Transmit+0x200>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006586:	68fb      	ldr	r3, [r7, #12]
 8006588:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800658a:	68fb      	ldr	r3, [r7, #12]
 800658c:	681b      	ldr	r3, [r3, #0]
 800658e:	330c      	adds	r3, #12
 8006590:	7812      	ldrb	r2, [r2, #0]
 8006592:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006594:	68fb      	ldr	r3, [r7, #12]
 8006596:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006598:	1c5a      	adds	r2, r3, #1
 800659a:	68fb      	ldr	r3, [r7, #12]
 800659c:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 800659e:	68fb      	ldr	r3, [r7, #12]
 80065a0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80065a2:	b29b      	uxth	r3, r3
 80065a4:	3b01      	subs	r3, #1
 80065a6:	b29a      	uxth	r2, r3
 80065a8:	68fb      	ldr	r3, [r7, #12]
 80065aa:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 80065ac:	e02c      	b.n	8006608 <HAL_SPI_Transmit+0x200>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80065ae:	68fb      	ldr	r3, [r7, #12]
 80065b0:	681b      	ldr	r3, [r3, #0]
 80065b2:	689b      	ldr	r3, [r3, #8]
 80065b4:	f003 0302 	and.w	r3, r3, #2
 80065b8:	2b02      	cmp	r3, #2
 80065ba:	d113      	bne.n	80065e4 <HAL_SPI_Transmit+0x1dc>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80065bc:	68fb      	ldr	r3, [r7, #12]
 80065be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80065c0:	68fb      	ldr	r3, [r7, #12]
 80065c2:	681b      	ldr	r3, [r3, #0]
 80065c4:	330c      	adds	r3, #12
 80065c6:	7812      	ldrb	r2, [r2, #0]
 80065c8:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80065ca:	68fb      	ldr	r3, [r7, #12]
 80065cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80065ce:	1c5a      	adds	r2, r3, #1
 80065d0:	68fb      	ldr	r3, [r7, #12]
 80065d2:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 80065d4:	68fb      	ldr	r3, [r7, #12]
 80065d6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80065d8:	b29b      	uxth	r3, r3
 80065da:	3b01      	subs	r3, #1
 80065dc:	b29a      	uxth	r2, r3
 80065de:	68fb      	ldr	r3, [r7, #12]
 80065e0:	86da      	strh	r2, [r3, #54]	; 0x36
 80065e2:	e011      	b.n	8006608 <HAL_SPI_Transmit+0x200>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80065e4:	f7fc fd20 	bl	8003028 <HAL_GetTick>
 80065e8:	4602      	mov	r2, r0
 80065ea:	69bb      	ldr	r3, [r7, #24]
 80065ec:	1ad3      	subs	r3, r2, r3
 80065ee:	683a      	ldr	r2, [r7, #0]
 80065f0:	429a      	cmp	r2, r3
 80065f2:	d803      	bhi.n	80065fc <HAL_SPI_Transmit+0x1f4>
 80065f4:	683b      	ldr	r3, [r7, #0]
 80065f6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80065fa:	d102      	bne.n	8006602 <HAL_SPI_Transmit+0x1fa>
 80065fc:	683b      	ldr	r3, [r7, #0]
 80065fe:	2b00      	cmp	r3, #0
 8006600:	d102      	bne.n	8006608 <HAL_SPI_Transmit+0x200>
        {
          errorcode = HAL_TIMEOUT;
 8006602:	2303      	movs	r3, #3
 8006604:	77fb      	strb	r3, [r7, #31]
          goto error;
 8006606:	e026      	b.n	8006656 <HAL_SPI_Transmit+0x24e>
    while (hspi->TxXferCount > 0U)
 8006608:	68fb      	ldr	r3, [r7, #12]
 800660a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800660c:	b29b      	uxth	r3, r3
 800660e:	2b00      	cmp	r3, #0
 8006610:	d1cd      	bne.n	80065ae <HAL_SPI_Transmit+0x1a6>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006612:	69ba      	ldr	r2, [r7, #24]
 8006614:	6839      	ldr	r1, [r7, #0]
 8006616:	68f8      	ldr	r0, [r7, #12]
 8006618:	f000 f894 	bl	8006744 <SPI_EndRxTxTransaction>
 800661c:	4603      	mov	r3, r0
 800661e:	2b00      	cmp	r3, #0
 8006620:	d002      	beq.n	8006628 <HAL_SPI_Transmit+0x220>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006622:	68fb      	ldr	r3, [r7, #12]
 8006624:	2220      	movs	r2, #32
 8006626:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006628:	68fb      	ldr	r3, [r7, #12]
 800662a:	689b      	ldr	r3, [r3, #8]
 800662c:	2b00      	cmp	r3, #0
 800662e:	d10a      	bne.n	8006646 <HAL_SPI_Transmit+0x23e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006630:	2300      	movs	r3, #0
 8006632:	613b      	str	r3, [r7, #16]
 8006634:	68fb      	ldr	r3, [r7, #12]
 8006636:	681b      	ldr	r3, [r3, #0]
 8006638:	68db      	ldr	r3, [r3, #12]
 800663a:	613b      	str	r3, [r7, #16]
 800663c:	68fb      	ldr	r3, [r7, #12]
 800663e:	681b      	ldr	r3, [r3, #0]
 8006640:	689b      	ldr	r3, [r3, #8]
 8006642:	613b      	str	r3, [r7, #16]
 8006644:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006646:	68fb      	ldr	r3, [r7, #12]
 8006648:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800664a:	2b00      	cmp	r3, #0
 800664c:	d002      	beq.n	8006654 <HAL_SPI_Transmit+0x24c>
  {
    errorcode = HAL_ERROR;
 800664e:	2301      	movs	r3, #1
 8006650:	77fb      	strb	r3, [r7, #31]
 8006652:	e000      	b.n	8006656 <HAL_SPI_Transmit+0x24e>
  }

error:
 8006654:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 8006656:	68fb      	ldr	r3, [r7, #12]
 8006658:	2201      	movs	r2, #1
 800665a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 800665e:	68fb      	ldr	r3, [r7, #12]
 8006660:	2200      	movs	r2, #0
 8006662:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8006666:	7ffb      	ldrb	r3, [r7, #31]
}
 8006668:	4618      	mov	r0, r3
 800666a:	3720      	adds	r7, #32
 800666c:	46bd      	mov	sp, r7
 800666e:	bd80      	pop	{r7, pc}

08006670 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006670:	b580      	push	{r7, lr}
 8006672:	b084      	sub	sp, #16
 8006674:	af00      	add	r7, sp, #0
 8006676:	60f8      	str	r0, [r7, #12]
 8006678:	60b9      	str	r1, [r7, #8]
 800667a:	603b      	str	r3, [r7, #0]
 800667c:	4613      	mov	r3, r2
 800667e:	71fb      	strb	r3, [r7, #7]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006680:	e04c      	b.n	800671c <SPI_WaitFlagStateUntilTimeout+0xac>
  {
    if (Timeout != HAL_MAX_DELAY)
 8006682:	683b      	ldr	r3, [r7, #0]
 8006684:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006688:	d048      	beq.n	800671c <SPI_WaitFlagStateUntilTimeout+0xac>
    {
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 800668a:	f7fc fccd 	bl	8003028 <HAL_GetTick>
 800668e:	4602      	mov	r2, r0
 8006690:	69bb      	ldr	r3, [r7, #24]
 8006692:	1ad3      	subs	r3, r2, r3
 8006694:	683a      	ldr	r2, [r7, #0]
 8006696:	429a      	cmp	r2, r3
 8006698:	d902      	bls.n	80066a0 <SPI_WaitFlagStateUntilTimeout+0x30>
 800669a:	683b      	ldr	r3, [r7, #0]
 800669c:	2b00      	cmp	r3, #0
 800669e:	d13d      	bne.n	800671c <SPI_WaitFlagStateUntilTimeout+0xac>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
        on both master and slave sides in order to resynchronize the master
        and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 80066a0:	68fb      	ldr	r3, [r7, #12]
 80066a2:	681b      	ldr	r3, [r3, #0]
 80066a4:	685a      	ldr	r2, [r3, #4]
 80066a6:	68fb      	ldr	r3, [r7, #12]
 80066a8:	681b      	ldr	r3, [r3, #0]
 80066aa:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80066ae:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80066b0:	68fb      	ldr	r3, [r7, #12]
 80066b2:	685b      	ldr	r3, [r3, #4]
 80066b4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80066b8:	d111      	bne.n	80066de <SPI_WaitFlagStateUntilTimeout+0x6e>
 80066ba:	68fb      	ldr	r3, [r7, #12]
 80066bc:	689b      	ldr	r3, [r3, #8]
 80066be:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80066c2:	d004      	beq.n	80066ce <SPI_WaitFlagStateUntilTimeout+0x5e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80066c4:	68fb      	ldr	r3, [r7, #12]
 80066c6:	689b      	ldr	r3, [r3, #8]
 80066c8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80066cc:	d107      	bne.n	80066de <SPI_WaitFlagStateUntilTimeout+0x6e>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 80066ce:	68fb      	ldr	r3, [r7, #12]
 80066d0:	681b      	ldr	r3, [r3, #0]
 80066d2:	681a      	ldr	r2, [r3, #0]
 80066d4:	68fb      	ldr	r3, [r7, #12]
 80066d6:	681b      	ldr	r3, [r3, #0]
 80066d8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80066dc:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80066de:	68fb      	ldr	r3, [r7, #12]
 80066e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80066e2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80066e6:	d10f      	bne.n	8006708 <SPI_WaitFlagStateUntilTimeout+0x98>
        {
          SPI_RESET_CRC(hspi);
 80066e8:	68fb      	ldr	r3, [r7, #12]
 80066ea:	681b      	ldr	r3, [r3, #0]
 80066ec:	681a      	ldr	r2, [r3, #0]
 80066ee:	68fb      	ldr	r3, [r7, #12]
 80066f0:	681b      	ldr	r3, [r3, #0]
 80066f2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80066f6:	601a      	str	r2, [r3, #0]
 80066f8:	68fb      	ldr	r3, [r7, #12]
 80066fa:	681b      	ldr	r3, [r3, #0]
 80066fc:	681a      	ldr	r2, [r3, #0]
 80066fe:	68fb      	ldr	r3, [r7, #12]
 8006700:	681b      	ldr	r3, [r3, #0]
 8006702:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006706:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8006708:	68fb      	ldr	r3, [r7, #12]
 800670a:	2201      	movs	r2, #1
 800670c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8006710:	68fb      	ldr	r3, [r7, #12]
 8006712:	2200      	movs	r2, #0
 8006714:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 8006718:	2303      	movs	r3, #3
 800671a:	e00f      	b.n	800673c <SPI_WaitFlagStateUntilTimeout+0xcc>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800671c:	68fb      	ldr	r3, [r7, #12]
 800671e:	681b      	ldr	r3, [r3, #0]
 8006720:	689a      	ldr	r2, [r3, #8]
 8006722:	68bb      	ldr	r3, [r7, #8]
 8006724:	4013      	ands	r3, r2
 8006726:	68ba      	ldr	r2, [r7, #8]
 8006728:	429a      	cmp	r2, r3
 800672a:	bf0c      	ite	eq
 800672c:	2301      	moveq	r3, #1
 800672e:	2300      	movne	r3, #0
 8006730:	b2db      	uxtb	r3, r3
 8006732:	461a      	mov	r2, r3
 8006734:	79fb      	ldrb	r3, [r7, #7]
 8006736:	429a      	cmp	r2, r3
 8006738:	d1a3      	bne.n	8006682 <SPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }

  return HAL_OK;
 800673a:	2300      	movs	r3, #0
}
 800673c:	4618      	mov	r0, r3
 800673e:	3710      	adds	r7, #16
 8006740:	46bd      	mov	sp, r7
 8006742:	bd80      	pop	{r7, pc}

08006744 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006744:	b580      	push	{r7, lr}
 8006746:	b088      	sub	sp, #32
 8006748:	af02      	add	r7, sp, #8
 800674a:	60f8      	str	r0, [r7, #12]
 800674c:	60b9      	str	r1, [r7, #8]
 800674e:	607a      	str	r2, [r7, #4]
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006750:	4b1b      	ldr	r3, [pc, #108]	; (80067c0 <SPI_EndRxTxTransaction+0x7c>)
 8006752:	681b      	ldr	r3, [r3, #0]
 8006754:	4a1b      	ldr	r2, [pc, #108]	; (80067c4 <SPI_EndRxTxTransaction+0x80>)
 8006756:	fba2 2303 	umull	r2, r3, r2, r3
 800675a:	0d5b      	lsrs	r3, r3, #21
 800675c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006760:	fb02 f303 	mul.w	r3, r2, r3
 8006764:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006766:	68fb      	ldr	r3, [r7, #12]
 8006768:	685b      	ldr	r3, [r3, #4]
 800676a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800676e:	d112      	bne.n	8006796 <SPI_EndRxTxTransaction+0x52>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006770:	687b      	ldr	r3, [r7, #4]
 8006772:	9300      	str	r3, [sp, #0]
 8006774:	68bb      	ldr	r3, [r7, #8]
 8006776:	2200      	movs	r2, #0
 8006778:	2180      	movs	r1, #128	; 0x80
 800677a:	68f8      	ldr	r0, [r7, #12]
 800677c:	f7ff ff78 	bl	8006670 <SPI_WaitFlagStateUntilTimeout>
 8006780:	4603      	mov	r3, r0
 8006782:	2b00      	cmp	r3, #0
 8006784:	d016      	beq.n	80067b4 <SPI_EndRxTxTransaction+0x70>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006786:	68fb      	ldr	r3, [r7, #12]
 8006788:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800678a:	f043 0220 	orr.w	r2, r3, #32
 800678e:	68fb      	ldr	r3, [r7, #12]
 8006790:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8006792:	2303      	movs	r3, #3
 8006794:	e00f      	b.n	80067b6 <SPI_EndRxTxTransaction+0x72>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8006796:	697b      	ldr	r3, [r7, #20]
 8006798:	2b00      	cmp	r3, #0
 800679a:	d00a      	beq.n	80067b2 <SPI_EndRxTxTransaction+0x6e>
      {
        break;
      }
      count--;
 800679c:	697b      	ldr	r3, [r7, #20]
 800679e:	3b01      	subs	r3, #1
 80067a0:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 80067a2:	68fb      	ldr	r3, [r7, #12]
 80067a4:	681b      	ldr	r3, [r3, #0]
 80067a6:	689b      	ldr	r3, [r3, #8]
 80067a8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80067ac:	2b80      	cmp	r3, #128	; 0x80
 80067ae:	d0f2      	beq.n	8006796 <SPI_EndRxTxTransaction+0x52>
 80067b0:	e000      	b.n	80067b4 <SPI_EndRxTxTransaction+0x70>
        break;
 80067b2:	bf00      	nop
  }

  return HAL_OK;
 80067b4:	2300      	movs	r3, #0
}
 80067b6:	4618      	mov	r0, r3
 80067b8:	3718      	adds	r7, #24
 80067ba:	46bd      	mov	sp, r7
 80067bc:	bd80      	pop	{r7, pc}
 80067be:	bf00      	nop
 80067c0:	20000004 	.word	0x20000004
 80067c4:	165e9f81 	.word	0x165e9f81

080067c8 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 80067c8:	b580      	push	{r7, lr}
 80067ca:	b082      	sub	sp, #8
 80067cc:	af00      	add	r7, sp, #0
 80067ce:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 80067d0:	687b      	ldr	r3, [r7, #4]
 80067d2:	2b00      	cmp	r3, #0
 80067d4:	d101      	bne.n	80067da <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 80067d6:	2301      	movs	r3, #1
 80067d8:	e01d      	b.n	8006816 <HAL_TIM_Base_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 80067da:	687b      	ldr	r3, [r7, #4]
 80067dc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80067e0:	b2db      	uxtb	r3, r3
 80067e2:	2b00      	cmp	r3, #0
 80067e4:	d106      	bne.n	80067f4 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 80067e6:	687b      	ldr	r3, [r7, #4]
 80067e8:	2200      	movs	r2, #0
 80067ea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 80067ee:	6878      	ldr	r0, [r7, #4]
 80067f0:	f7fb fc2a 	bl	8002048 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80067f4:	687b      	ldr	r3, [r7, #4]
 80067f6:	2202      	movs	r2, #2
 80067f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80067fc:	687b      	ldr	r3, [r7, #4]
 80067fe:	681a      	ldr	r2, [r3, #0]
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	3304      	adds	r3, #4
 8006804:	4619      	mov	r1, r3
 8006806:	4610      	mov	r0, r2
 8006808:	f000 fa14 	bl	8006c34 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 800680c:	687b      	ldr	r3, [r7, #4]
 800680e:	2201      	movs	r2, #1
 8006810:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8006814:	2300      	movs	r3, #0
}
 8006816:	4618      	mov	r0, r3
 8006818:	3708      	adds	r7, #8
 800681a:	46bd      	mov	sp, r7
 800681c:	bd80      	pop	{r7, pc}

0800681e <HAL_TIM_Base_Start>:
  * @brief  Starts the TIM Base generation.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start(TIM_HandleTypeDef *htim)
{
 800681e:	b480      	push	{r7}
 8006820:	b085      	sub	sp, #20
 8006822:	af00      	add	r7, sp, #0
 8006824:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006826:	687b      	ldr	r3, [r7, #4]
 8006828:	2202      	movs	r2, #2
 800682a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800682e:	687b      	ldr	r3, [r7, #4]
 8006830:	681b      	ldr	r3, [r3, #0]
 8006832:	689b      	ldr	r3, [r3, #8]
 8006834:	f003 0307 	and.w	r3, r3, #7
 8006838:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800683a:	68fb      	ldr	r3, [r7, #12]
 800683c:	2b06      	cmp	r3, #6
 800683e:	d007      	beq.n	8006850 <HAL_TIM_Base_Start+0x32>
  {
    __HAL_TIM_ENABLE(htim);
 8006840:	687b      	ldr	r3, [r7, #4]
 8006842:	681b      	ldr	r3, [r3, #0]
 8006844:	681a      	ldr	r2, [r3, #0]
 8006846:	687b      	ldr	r3, [r7, #4]
 8006848:	681b      	ldr	r3, [r3, #0]
 800684a:	f042 0201 	orr.w	r2, r2, #1
 800684e:	601a      	str	r2, [r3, #0]
  }

  /* Change the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8006850:	687b      	ldr	r3, [r7, #4]
 8006852:	2201      	movs	r2, #1
 8006854:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Return function status */
  return HAL_OK;
 8006858:	2300      	movs	r3, #0
}
 800685a:	4618      	mov	r0, r3
 800685c:	3714      	adds	r7, #20
 800685e:	46bd      	mov	sp, r7
 8006860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006864:	4770      	bx	lr

08006866 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 8006866:	b580      	push	{r7, lr}
 8006868:	b082      	sub	sp, #8
 800686a:	af00      	add	r7, sp, #0
 800686c:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800686e:	687b      	ldr	r3, [r7, #4]
 8006870:	2b00      	cmp	r3, #0
 8006872:	d101      	bne.n	8006878 <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 8006874:	2301      	movs	r3, #1
 8006876:	e01d      	b.n	80068b4 <HAL_TIM_PWM_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8006878:	687b      	ldr	r3, [r7, #4]
 800687a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800687e:	b2db      	uxtb	r3, r3
 8006880:	2b00      	cmp	r3, #0
 8006882:	d106      	bne.n	8006892 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	2200      	movs	r2, #0
 8006888:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 800688c:	6878      	ldr	r0, [r7, #4]
 800688e:	f7fb fbfd 	bl	800208c <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006892:	687b      	ldr	r3, [r7, #4]
 8006894:	2202      	movs	r2, #2
 8006896:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800689a:	687b      	ldr	r3, [r7, #4]
 800689c:	681a      	ldr	r2, [r3, #0]
 800689e:	687b      	ldr	r3, [r7, #4]
 80068a0:	3304      	adds	r3, #4
 80068a2:	4619      	mov	r1, r3
 80068a4:	4610      	mov	r0, r2
 80068a6:	f000 f9c5 	bl	8006c34 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80068aa:	687b      	ldr	r3, [r7, #4]
 80068ac:	2201      	movs	r2, #1
 80068ae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 80068b2:	2300      	movs	r3, #0
}
 80068b4:	4618      	mov	r0, r3
 80068b6:	3708      	adds	r7, #8
 80068b8:	46bd      	mov	sp, r7
 80068ba:	bd80      	pop	{r7, pc}

080068bc <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 80068bc:	b580      	push	{r7, lr}
 80068be:	b084      	sub	sp, #16
 80068c0:	af00      	add	r7, sp, #0
 80068c2:	6078      	str	r0, [r7, #4]
 80068c4:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 80068c6:	687b      	ldr	r3, [r7, #4]
 80068c8:	681b      	ldr	r3, [r3, #0]
 80068ca:	2201      	movs	r2, #1
 80068cc:	6839      	ldr	r1, [r7, #0]
 80068ce:	4618      	mov	r0, r3
 80068d0:	f000 fc9a 	bl	8007208 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 80068d4:	687b      	ldr	r3, [r7, #4]
 80068d6:	681b      	ldr	r3, [r3, #0]
 80068d8:	4a15      	ldr	r2, [pc, #84]	; (8006930 <HAL_TIM_PWM_Start+0x74>)
 80068da:	4293      	cmp	r3, r2
 80068dc:	d004      	beq.n	80068e8 <HAL_TIM_PWM_Start+0x2c>
 80068de:	687b      	ldr	r3, [r7, #4]
 80068e0:	681b      	ldr	r3, [r3, #0]
 80068e2:	4a14      	ldr	r2, [pc, #80]	; (8006934 <HAL_TIM_PWM_Start+0x78>)
 80068e4:	4293      	cmp	r3, r2
 80068e6:	d101      	bne.n	80068ec <HAL_TIM_PWM_Start+0x30>
 80068e8:	2301      	movs	r3, #1
 80068ea:	e000      	b.n	80068ee <HAL_TIM_PWM_Start+0x32>
 80068ec:	2300      	movs	r3, #0
 80068ee:	2b00      	cmp	r3, #0
 80068f0:	d007      	beq.n	8006902 <HAL_TIM_PWM_Start+0x46>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 80068f2:	687b      	ldr	r3, [r7, #4]
 80068f4:	681b      	ldr	r3, [r3, #0]
 80068f6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80068f8:	687b      	ldr	r3, [r7, #4]
 80068fa:	681b      	ldr	r3, [r3, #0]
 80068fc:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006900:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006902:	687b      	ldr	r3, [r7, #4]
 8006904:	681b      	ldr	r3, [r3, #0]
 8006906:	689b      	ldr	r3, [r3, #8]
 8006908:	f003 0307 	and.w	r3, r3, #7
 800690c:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800690e:	68fb      	ldr	r3, [r7, #12]
 8006910:	2b06      	cmp	r3, #6
 8006912:	d007      	beq.n	8006924 <HAL_TIM_PWM_Start+0x68>
  {
    __HAL_TIM_ENABLE(htim);
 8006914:	687b      	ldr	r3, [r7, #4]
 8006916:	681b      	ldr	r3, [r3, #0]
 8006918:	681a      	ldr	r2, [r3, #0]
 800691a:	687b      	ldr	r3, [r7, #4]
 800691c:	681b      	ldr	r3, [r3, #0]
 800691e:	f042 0201 	orr.w	r2, r2, #1
 8006922:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8006924:	2300      	movs	r3, #0
}
 8006926:	4618      	mov	r0, r3
 8006928:	3710      	adds	r7, #16
 800692a:	46bd      	mov	sp, r7
 800692c:	bd80      	pop	{r7, pc}
 800692e:	bf00      	nop
 8006930:	40010000 	.word	0x40010000
 8006934:	40010400 	.word	0x40010400

08006938 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 8006938:	b580      	push	{r7, lr}
 800693a:	b084      	sub	sp, #16
 800693c:	af00      	add	r7, sp, #0
 800693e:	60f8      	str	r0, [r7, #12]
 8006940:	60b9      	str	r1, [r7, #8]
 8006942:	607a      	str	r2, [r7, #4]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 8006944:	68fb      	ldr	r3, [r7, #12]
 8006946:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800694a:	2b01      	cmp	r3, #1
 800694c:	d101      	bne.n	8006952 <HAL_TIM_PWM_ConfigChannel+0x1a>
 800694e:	2302      	movs	r3, #2
 8006950:	e0b4      	b.n	8006abc <HAL_TIM_PWM_ConfigChannel+0x184>
 8006952:	68fb      	ldr	r3, [r7, #12]
 8006954:	2201      	movs	r2, #1
 8006956:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 800695a:	68fb      	ldr	r3, [r7, #12]
 800695c:	2202      	movs	r2, #2
 800695e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  switch (Channel)
 8006962:	687b      	ldr	r3, [r7, #4]
 8006964:	2b0c      	cmp	r3, #12
 8006966:	f200 809f 	bhi.w	8006aa8 <HAL_TIM_PWM_ConfigChannel+0x170>
 800696a:	a201      	add	r2, pc, #4	; (adr r2, 8006970 <HAL_TIM_PWM_ConfigChannel+0x38>)
 800696c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006970:	080069a5 	.word	0x080069a5
 8006974:	08006aa9 	.word	0x08006aa9
 8006978:	08006aa9 	.word	0x08006aa9
 800697c:	08006aa9 	.word	0x08006aa9
 8006980:	080069e5 	.word	0x080069e5
 8006984:	08006aa9 	.word	0x08006aa9
 8006988:	08006aa9 	.word	0x08006aa9
 800698c:	08006aa9 	.word	0x08006aa9
 8006990:	08006a27 	.word	0x08006a27
 8006994:	08006aa9 	.word	0x08006aa9
 8006998:	08006aa9 	.word	0x08006aa9
 800699c:	08006aa9 	.word	0x08006aa9
 80069a0:	08006a67 	.word	0x08006a67
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 80069a4:	68fb      	ldr	r3, [r7, #12]
 80069a6:	681b      	ldr	r3, [r3, #0]
 80069a8:	68b9      	ldr	r1, [r7, #8]
 80069aa:	4618      	mov	r0, r3
 80069ac:	f000 f9e2 	bl	8006d74 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 80069b0:	68fb      	ldr	r3, [r7, #12]
 80069b2:	681b      	ldr	r3, [r3, #0]
 80069b4:	699a      	ldr	r2, [r3, #24]
 80069b6:	68fb      	ldr	r3, [r7, #12]
 80069b8:	681b      	ldr	r3, [r3, #0]
 80069ba:	f042 0208 	orr.w	r2, r2, #8
 80069be:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 80069c0:	68fb      	ldr	r3, [r7, #12]
 80069c2:	681b      	ldr	r3, [r3, #0]
 80069c4:	699a      	ldr	r2, [r3, #24]
 80069c6:	68fb      	ldr	r3, [r7, #12]
 80069c8:	681b      	ldr	r3, [r3, #0]
 80069ca:	f022 0204 	bic.w	r2, r2, #4
 80069ce:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 80069d0:	68fb      	ldr	r3, [r7, #12]
 80069d2:	681b      	ldr	r3, [r3, #0]
 80069d4:	6999      	ldr	r1, [r3, #24]
 80069d6:	68bb      	ldr	r3, [r7, #8]
 80069d8:	691a      	ldr	r2, [r3, #16]
 80069da:	68fb      	ldr	r3, [r7, #12]
 80069dc:	681b      	ldr	r3, [r3, #0]
 80069de:	430a      	orrs	r2, r1
 80069e0:	619a      	str	r2, [r3, #24]
      break;
 80069e2:	e062      	b.n	8006aaa <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 80069e4:	68fb      	ldr	r3, [r7, #12]
 80069e6:	681b      	ldr	r3, [r3, #0]
 80069e8:	68b9      	ldr	r1, [r7, #8]
 80069ea:	4618      	mov	r0, r3
 80069ec:	f000 fa32 	bl	8006e54 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 80069f0:	68fb      	ldr	r3, [r7, #12]
 80069f2:	681b      	ldr	r3, [r3, #0]
 80069f4:	699a      	ldr	r2, [r3, #24]
 80069f6:	68fb      	ldr	r3, [r7, #12]
 80069f8:	681b      	ldr	r3, [r3, #0]
 80069fa:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80069fe:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8006a00:	68fb      	ldr	r3, [r7, #12]
 8006a02:	681b      	ldr	r3, [r3, #0]
 8006a04:	699a      	ldr	r2, [r3, #24]
 8006a06:	68fb      	ldr	r3, [r7, #12]
 8006a08:	681b      	ldr	r3, [r3, #0]
 8006a0a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006a0e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8006a10:	68fb      	ldr	r3, [r7, #12]
 8006a12:	681b      	ldr	r3, [r3, #0]
 8006a14:	6999      	ldr	r1, [r3, #24]
 8006a16:	68bb      	ldr	r3, [r7, #8]
 8006a18:	691b      	ldr	r3, [r3, #16]
 8006a1a:	021a      	lsls	r2, r3, #8
 8006a1c:	68fb      	ldr	r3, [r7, #12]
 8006a1e:	681b      	ldr	r3, [r3, #0]
 8006a20:	430a      	orrs	r2, r1
 8006a22:	619a      	str	r2, [r3, #24]
      break;
 8006a24:	e041      	b.n	8006aaa <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8006a26:	68fb      	ldr	r3, [r7, #12]
 8006a28:	681b      	ldr	r3, [r3, #0]
 8006a2a:	68b9      	ldr	r1, [r7, #8]
 8006a2c:	4618      	mov	r0, r3
 8006a2e:	f000 fa87 	bl	8006f40 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8006a32:	68fb      	ldr	r3, [r7, #12]
 8006a34:	681b      	ldr	r3, [r3, #0]
 8006a36:	69da      	ldr	r2, [r3, #28]
 8006a38:	68fb      	ldr	r3, [r7, #12]
 8006a3a:	681b      	ldr	r3, [r3, #0]
 8006a3c:	f042 0208 	orr.w	r2, r2, #8
 8006a40:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8006a42:	68fb      	ldr	r3, [r7, #12]
 8006a44:	681b      	ldr	r3, [r3, #0]
 8006a46:	69da      	ldr	r2, [r3, #28]
 8006a48:	68fb      	ldr	r3, [r7, #12]
 8006a4a:	681b      	ldr	r3, [r3, #0]
 8006a4c:	f022 0204 	bic.w	r2, r2, #4
 8006a50:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8006a52:	68fb      	ldr	r3, [r7, #12]
 8006a54:	681b      	ldr	r3, [r3, #0]
 8006a56:	69d9      	ldr	r1, [r3, #28]
 8006a58:	68bb      	ldr	r3, [r7, #8]
 8006a5a:	691a      	ldr	r2, [r3, #16]
 8006a5c:	68fb      	ldr	r3, [r7, #12]
 8006a5e:	681b      	ldr	r3, [r3, #0]
 8006a60:	430a      	orrs	r2, r1
 8006a62:	61da      	str	r2, [r3, #28]
      break;
 8006a64:	e021      	b.n	8006aaa <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8006a66:	68fb      	ldr	r3, [r7, #12]
 8006a68:	681b      	ldr	r3, [r3, #0]
 8006a6a:	68b9      	ldr	r1, [r7, #8]
 8006a6c:	4618      	mov	r0, r3
 8006a6e:	f000 fadb 	bl	8007028 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8006a72:	68fb      	ldr	r3, [r7, #12]
 8006a74:	681b      	ldr	r3, [r3, #0]
 8006a76:	69da      	ldr	r2, [r3, #28]
 8006a78:	68fb      	ldr	r3, [r7, #12]
 8006a7a:	681b      	ldr	r3, [r3, #0]
 8006a7c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006a80:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8006a82:	68fb      	ldr	r3, [r7, #12]
 8006a84:	681b      	ldr	r3, [r3, #0]
 8006a86:	69da      	ldr	r2, [r3, #28]
 8006a88:	68fb      	ldr	r3, [r7, #12]
 8006a8a:	681b      	ldr	r3, [r3, #0]
 8006a8c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006a90:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8006a92:	68fb      	ldr	r3, [r7, #12]
 8006a94:	681b      	ldr	r3, [r3, #0]
 8006a96:	69d9      	ldr	r1, [r3, #28]
 8006a98:	68bb      	ldr	r3, [r7, #8]
 8006a9a:	691b      	ldr	r3, [r3, #16]
 8006a9c:	021a      	lsls	r2, r3, #8
 8006a9e:	68fb      	ldr	r3, [r7, #12]
 8006aa0:	681b      	ldr	r3, [r3, #0]
 8006aa2:	430a      	orrs	r2, r1
 8006aa4:	61da      	str	r2, [r3, #28]
      break;
 8006aa6:	e000      	b.n	8006aaa <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      break;
 8006aa8:	bf00      	nop
  }

  htim->State = HAL_TIM_STATE_READY;
 8006aaa:	68fb      	ldr	r3, [r7, #12]
 8006aac:	2201      	movs	r2, #1
 8006aae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8006ab2:	68fb      	ldr	r3, [r7, #12]
 8006ab4:	2200      	movs	r2, #0
 8006ab6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8006aba:	2300      	movs	r3, #0
}
 8006abc:	4618      	mov	r0, r3
 8006abe:	3710      	adds	r7, #16
 8006ac0:	46bd      	mov	sp, r7
 8006ac2:	bd80      	pop	{r7, pc}

08006ac4 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 8006ac4:	b580      	push	{r7, lr}
 8006ac6:	b084      	sub	sp, #16
 8006ac8:	af00      	add	r7, sp, #0
 8006aca:	6078      	str	r0, [r7, #4]
 8006acc:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 8006ace:	687b      	ldr	r3, [r7, #4]
 8006ad0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006ad4:	2b01      	cmp	r3, #1
 8006ad6:	d101      	bne.n	8006adc <HAL_TIM_ConfigClockSource+0x18>
 8006ad8:	2302      	movs	r3, #2
 8006ada:	e0a6      	b.n	8006c2a <HAL_TIM_ConfigClockSource+0x166>
 8006adc:	687b      	ldr	r3, [r7, #4]
 8006ade:	2201      	movs	r2, #1
 8006ae0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8006ae4:	687b      	ldr	r3, [r7, #4]
 8006ae6:	2202      	movs	r2, #2
 8006ae8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8006aec:	687b      	ldr	r3, [r7, #4]
 8006aee:	681b      	ldr	r3, [r3, #0]
 8006af0:	689b      	ldr	r3, [r3, #8]
 8006af2:	60fb      	str	r3, [r7, #12]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8006af4:	68fb      	ldr	r3, [r7, #12]
 8006af6:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8006afa:	60fb      	str	r3, [r7, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8006afc:	68fb      	ldr	r3, [r7, #12]
 8006afe:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006b02:	60fb      	str	r3, [r7, #12]
  htim->Instance->SMCR = tmpsmcr;
 8006b04:	687b      	ldr	r3, [r7, #4]
 8006b06:	681b      	ldr	r3, [r3, #0]
 8006b08:	68fa      	ldr	r2, [r7, #12]
 8006b0a:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8006b0c:	683b      	ldr	r3, [r7, #0]
 8006b0e:	681b      	ldr	r3, [r3, #0]
 8006b10:	2b40      	cmp	r3, #64	; 0x40
 8006b12:	d067      	beq.n	8006be4 <HAL_TIM_ConfigClockSource+0x120>
 8006b14:	2b40      	cmp	r3, #64	; 0x40
 8006b16:	d80b      	bhi.n	8006b30 <HAL_TIM_ConfigClockSource+0x6c>
 8006b18:	2b10      	cmp	r3, #16
 8006b1a:	d073      	beq.n	8006c04 <HAL_TIM_ConfigClockSource+0x140>
 8006b1c:	2b10      	cmp	r3, #16
 8006b1e:	d802      	bhi.n	8006b26 <HAL_TIM_ConfigClockSource+0x62>
 8006b20:	2b00      	cmp	r3, #0
 8006b22:	d06f      	beq.n	8006c04 <HAL_TIM_ConfigClockSource+0x140>
      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
      break;
    }

    default:
      break;
 8006b24:	e078      	b.n	8006c18 <HAL_TIM_ConfigClockSource+0x154>
  switch (sClockSourceConfig->ClockSource)
 8006b26:	2b20      	cmp	r3, #32
 8006b28:	d06c      	beq.n	8006c04 <HAL_TIM_ConfigClockSource+0x140>
 8006b2a:	2b30      	cmp	r3, #48	; 0x30
 8006b2c:	d06a      	beq.n	8006c04 <HAL_TIM_ConfigClockSource+0x140>
      break;
 8006b2e:	e073      	b.n	8006c18 <HAL_TIM_ConfigClockSource+0x154>
  switch (sClockSourceConfig->ClockSource)
 8006b30:	2b70      	cmp	r3, #112	; 0x70
 8006b32:	d00d      	beq.n	8006b50 <HAL_TIM_ConfigClockSource+0x8c>
 8006b34:	2b70      	cmp	r3, #112	; 0x70
 8006b36:	d804      	bhi.n	8006b42 <HAL_TIM_ConfigClockSource+0x7e>
 8006b38:	2b50      	cmp	r3, #80	; 0x50
 8006b3a:	d033      	beq.n	8006ba4 <HAL_TIM_ConfigClockSource+0xe0>
 8006b3c:	2b60      	cmp	r3, #96	; 0x60
 8006b3e:	d041      	beq.n	8006bc4 <HAL_TIM_ConfigClockSource+0x100>
      break;
 8006b40:	e06a      	b.n	8006c18 <HAL_TIM_ConfigClockSource+0x154>
  switch (sClockSourceConfig->ClockSource)
 8006b42:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006b46:	d066      	beq.n	8006c16 <HAL_TIM_ConfigClockSource+0x152>
 8006b48:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006b4c:	d017      	beq.n	8006b7e <HAL_TIM_ConfigClockSource+0xba>
      break;
 8006b4e:	e063      	b.n	8006c18 <HAL_TIM_ConfigClockSource+0x154>
      TIM_ETR_SetConfig(htim->Instance,
 8006b50:	687b      	ldr	r3, [r7, #4]
 8006b52:	6818      	ldr	r0, [r3, #0]
 8006b54:	683b      	ldr	r3, [r7, #0]
 8006b56:	6899      	ldr	r1, [r3, #8]
 8006b58:	683b      	ldr	r3, [r7, #0]
 8006b5a:	685a      	ldr	r2, [r3, #4]
 8006b5c:	683b      	ldr	r3, [r7, #0]
 8006b5e:	68db      	ldr	r3, [r3, #12]
 8006b60:	f000 fb32 	bl	80071c8 <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 8006b64:	687b      	ldr	r3, [r7, #4]
 8006b66:	681b      	ldr	r3, [r3, #0]
 8006b68:	689b      	ldr	r3, [r3, #8]
 8006b6a:	60fb      	str	r3, [r7, #12]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8006b6c:	68fb      	ldr	r3, [r7, #12]
 8006b6e:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8006b72:	60fb      	str	r3, [r7, #12]
      htim->Instance->SMCR = tmpsmcr;
 8006b74:	687b      	ldr	r3, [r7, #4]
 8006b76:	681b      	ldr	r3, [r3, #0]
 8006b78:	68fa      	ldr	r2, [r7, #12]
 8006b7a:	609a      	str	r2, [r3, #8]
      break;
 8006b7c:	e04c      	b.n	8006c18 <HAL_TIM_ConfigClockSource+0x154>
      TIM_ETR_SetConfig(htim->Instance,
 8006b7e:	687b      	ldr	r3, [r7, #4]
 8006b80:	6818      	ldr	r0, [r3, #0]
 8006b82:	683b      	ldr	r3, [r7, #0]
 8006b84:	6899      	ldr	r1, [r3, #8]
 8006b86:	683b      	ldr	r3, [r7, #0]
 8006b88:	685a      	ldr	r2, [r3, #4]
 8006b8a:	683b      	ldr	r3, [r7, #0]
 8006b8c:	68db      	ldr	r3, [r3, #12]
 8006b8e:	f000 fb1b 	bl	80071c8 <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8006b92:	687b      	ldr	r3, [r7, #4]
 8006b94:	681b      	ldr	r3, [r3, #0]
 8006b96:	689a      	ldr	r2, [r3, #8]
 8006b98:	687b      	ldr	r3, [r7, #4]
 8006b9a:	681b      	ldr	r3, [r3, #0]
 8006b9c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8006ba0:	609a      	str	r2, [r3, #8]
      break;
 8006ba2:	e039      	b.n	8006c18 <HAL_TIM_ConfigClockSource+0x154>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8006ba4:	687b      	ldr	r3, [r7, #4]
 8006ba6:	6818      	ldr	r0, [r3, #0]
 8006ba8:	683b      	ldr	r3, [r7, #0]
 8006baa:	6859      	ldr	r1, [r3, #4]
 8006bac:	683b      	ldr	r3, [r7, #0]
 8006bae:	68db      	ldr	r3, [r3, #12]
 8006bb0:	461a      	mov	r2, r3
 8006bb2:	f000 fa8f 	bl	80070d4 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8006bb6:	687b      	ldr	r3, [r7, #4]
 8006bb8:	681b      	ldr	r3, [r3, #0]
 8006bba:	2150      	movs	r1, #80	; 0x50
 8006bbc:	4618      	mov	r0, r3
 8006bbe:	f000 fae8 	bl	8007192 <TIM_ITRx_SetConfig>
      break;
 8006bc2:	e029      	b.n	8006c18 <HAL_TIM_ConfigClockSource+0x154>
      TIM_TI2_ConfigInputStage(htim->Instance,
 8006bc4:	687b      	ldr	r3, [r7, #4]
 8006bc6:	6818      	ldr	r0, [r3, #0]
 8006bc8:	683b      	ldr	r3, [r7, #0]
 8006bca:	6859      	ldr	r1, [r3, #4]
 8006bcc:	683b      	ldr	r3, [r7, #0]
 8006bce:	68db      	ldr	r3, [r3, #12]
 8006bd0:	461a      	mov	r2, r3
 8006bd2:	f000 faae 	bl	8007132 <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8006bd6:	687b      	ldr	r3, [r7, #4]
 8006bd8:	681b      	ldr	r3, [r3, #0]
 8006bda:	2160      	movs	r1, #96	; 0x60
 8006bdc:	4618      	mov	r0, r3
 8006bde:	f000 fad8 	bl	8007192 <TIM_ITRx_SetConfig>
      break;
 8006be2:	e019      	b.n	8006c18 <HAL_TIM_ConfigClockSource+0x154>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8006be4:	687b      	ldr	r3, [r7, #4]
 8006be6:	6818      	ldr	r0, [r3, #0]
 8006be8:	683b      	ldr	r3, [r7, #0]
 8006bea:	6859      	ldr	r1, [r3, #4]
 8006bec:	683b      	ldr	r3, [r7, #0]
 8006bee:	68db      	ldr	r3, [r3, #12]
 8006bf0:	461a      	mov	r2, r3
 8006bf2:	f000 fa6f 	bl	80070d4 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8006bf6:	687b      	ldr	r3, [r7, #4]
 8006bf8:	681b      	ldr	r3, [r3, #0]
 8006bfa:	2140      	movs	r1, #64	; 0x40
 8006bfc:	4618      	mov	r0, r3
 8006bfe:	f000 fac8 	bl	8007192 <TIM_ITRx_SetConfig>
      break;
 8006c02:	e009      	b.n	8006c18 <HAL_TIM_ConfigClockSource+0x154>
      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 8006c04:	687b      	ldr	r3, [r7, #4]
 8006c06:	681a      	ldr	r2, [r3, #0]
 8006c08:	683b      	ldr	r3, [r7, #0]
 8006c0a:	681b      	ldr	r3, [r3, #0]
 8006c0c:	4619      	mov	r1, r3
 8006c0e:	4610      	mov	r0, r2
 8006c10:	f000 fabf 	bl	8007192 <TIM_ITRx_SetConfig>
      break;
 8006c14:	e000      	b.n	8006c18 <HAL_TIM_ConfigClockSource+0x154>
      break;
 8006c16:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 8006c18:	687b      	ldr	r3, [r7, #4]
 8006c1a:	2201      	movs	r2, #1
 8006c1c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8006c20:	687b      	ldr	r3, [r7, #4]
 8006c22:	2200      	movs	r2, #0
 8006c24:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8006c28:	2300      	movs	r3, #0
}
 8006c2a:	4618      	mov	r0, r3
 8006c2c:	3710      	adds	r7, #16
 8006c2e:	46bd      	mov	sp, r7
 8006c30:	bd80      	pop	{r7, pc}
	...

08006c34 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 8006c34:	b480      	push	{r7}
 8006c36:	b085      	sub	sp, #20
 8006c38:	af00      	add	r7, sp, #0
 8006c3a:	6078      	str	r0, [r7, #4]
 8006c3c:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 8006c3e:	687b      	ldr	r3, [r7, #4]
 8006c40:	681b      	ldr	r3, [r3, #0]
 8006c42:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	4a40      	ldr	r2, [pc, #256]	; (8006d48 <TIM_Base_SetConfig+0x114>)
 8006c48:	4293      	cmp	r3, r2
 8006c4a:	d013      	beq.n	8006c74 <TIM_Base_SetConfig+0x40>
 8006c4c:	687b      	ldr	r3, [r7, #4]
 8006c4e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006c52:	d00f      	beq.n	8006c74 <TIM_Base_SetConfig+0x40>
 8006c54:	687b      	ldr	r3, [r7, #4]
 8006c56:	4a3d      	ldr	r2, [pc, #244]	; (8006d4c <TIM_Base_SetConfig+0x118>)
 8006c58:	4293      	cmp	r3, r2
 8006c5a:	d00b      	beq.n	8006c74 <TIM_Base_SetConfig+0x40>
 8006c5c:	687b      	ldr	r3, [r7, #4]
 8006c5e:	4a3c      	ldr	r2, [pc, #240]	; (8006d50 <TIM_Base_SetConfig+0x11c>)
 8006c60:	4293      	cmp	r3, r2
 8006c62:	d007      	beq.n	8006c74 <TIM_Base_SetConfig+0x40>
 8006c64:	687b      	ldr	r3, [r7, #4]
 8006c66:	4a3b      	ldr	r2, [pc, #236]	; (8006d54 <TIM_Base_SetConfig+0x120>)
 8006c68:	4293      	cmp	r3, r2
 8006c6a:	d003      	beq.n	8006c74 <TIM_Base_SetConfig+0x40>
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	4a3a      	ldr	r2, [pc, #232]	; (8006d58 <TIM_Base_SetConfig+0x124>)
 8006c70:	4293      	cmp	r3, r2
 8006c72:	d108      	bne.n	8006c86 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006c74:	68fb      	ldr	r3, [r7, #12]
 8006c76:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006c7a:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 8006c7c:	683b      	ldr	r3, [r7, #0]
 8006c7e:	685b      	ldr	r3, [r3, #4]
 8006c80:	68fa      	ldr	r2, [r7, #12]
 8006c82:	4313      	orrs	r3, r2
 8006c84:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006c86:	687b      	ldr	r3, [r7, #4]
 8006c88:	4a2f      	ldr	r2, [pc, #188]	; (8006d48 <TIM_Base_SetConfig+0x114>)
 8006c8a:	4293      	cmp	r3, r2
 8006c8c:	d02b      	beq.n	8006ce6 <TIM_Base_SetConfig+0xb2>
 8006c8e:	687b      	ldr	r3, [r7, #4]
 8006c90:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006c94:	d027      	beq.n	8006ce6 <TIM_Base_SetConfig+0xb2>
 8006c96:	687b      	ldr	r3, [r7, #4]
 8006c98:	4a2c      	ldr	r2, [pc, #176]	; (8006d4c <TIM_Base_SetConfig+0x118>)
 8006c9a:	4293      	cmp	r3, r2
 8006c9c:	d023      	beq.n	8006ce6 <TIM_Base_SetConfig+0xb2>
 8006c9e:	687b      	ldr	r3, [r7, #4]
 8006ca0:	4a2b      	ldr	r2, [pc, #172]	; (8006d50 <TIM_Base_SetConfig+0x11c>)
 8006ca2:	4293      	cmp	r3, r2
 8006ca4:	d01f      	beq.n	8006ce6 <TIM_Base_SetConfig+0xb2>
 8006ca6:	687b      	ldr	r3, [r7, #4]
 8006ca8:	4a2a      	ldr	r2, [pc, #168]	; (8006d54 <TIM_Base_SetConfig+0x120>)
 8006caa:	4293      	cmp	r3, r2
 8006cac:	d01b      	beq.n	8006ce6 <TIM_Base_SetConfig+0xb2>
 8006cae:	687b      	ldr	r3, [r7, #4]
 8006cb0:	4a29      	ldr	r2, [pc, #164]	; (8006d58 <TIM_Base_SetConfig+0x124>)
 8006cb2:	4293      	cmp	r3, r2
 8006cb4:	d017      	beq.n	8006ce6 <TIM_Base_SetConfig+0xb2>
 8006cb6:	687b      	ldr	r3, [r7, #4]
 8006cb8:	4a28      	ldr	r2, [pc, #160]	; (8006d5c <TIM_Base_SetConfig+0x128>)
 8006cba:	4293      	cmp	r3, r2
 8006cbc:	d013      	beq.n	8006ce6 <TIM_Base_SetConfig+0xb2>
 8006cbe:	687b      	ldr	r3, [r7, #4]
 8006cc0:	4a27      	ldr	r2, [pc, #156]	; (8006d60 <TIM_Base_SetConfig+0x12c>)
 8006cc2:	4293      	cmp	r3, r2
 8006cc4:	d00f      	beq.n	8006ce6 <TIM_Base_SetConfig+0xb2>
 8006cc6:	687b      	ldr	r3, [r7, #4]
 8006cc8:	4a26      	ldr	r2, [pc, #152]	; (8006d64 <TIM_Base_SetConfig+0x130>)
 8006cca:	4293      	cmp	r3, r2
 8006ccc:	d00b      	beq.n	8006ce6 <TIM_Base_SetConfig+0xb2>
 8006cce:	687b      	ldr	r3, [r7, #4]
 8006cd0:	4a25      	ldr	r2, [pc, #148]	; (8006d68 <TIM_Base_SetConfig+0x134>)
 8006cd2:	4293      	cmp	r3, r2
 8006cd4:	d007      	beq.n	8006ce6 <TIM_Base_SetConfig+0xb2>
 8006cd6:	687b      	ldr	r3, [r7, #4]
 8006cd8:	4a24      	ldr	r2, [pc, #144]	; (8006d6c <TIM_Base_SetConfig+0x138>)
 8006cda:	4293      	cmp	r3, r2
 8006cdc:	d003      	beq.n	8006ce6 <TIM_Base_SetConfig+0xb2>
 8006cde:	687b      	ldr	r3, [r7, #4]
 8006ce0:	4a23      	ldr	r2, [pc, #140]	; (8006d70 <TIM_Base_SetConfig+0x13c>)
 8006ce2:	4293      	cmp	r3, r2
 8006ce4:	d108      	bne.n	8006cf8 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8006ce6:	68fb      	ldr	r3, [r7, #12]
 8006ce8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006cec:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006cee:	683b      	ldr	r3, [r7, #0]
 8006cf0:	68db      	ldr	r3, [r3, #12]
 8006cf2:	68fa      	ldr	r2, [r7, #12]
 8006cf4:	4313      	orrs	r3, r2
 8006cf6:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006cf8:	68fb      	ldr	r3, [r7, #12]
 8006cfa:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8006cfe:	683b      	ldr	r3, [r7, #0]
 8006d00:	695b      	ldr	r3, [r3, #20]
 8006d02:	4313      	orrs	r3, r2
 8006d04:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8006d06:	687b      	ldr	r3, [r7, #4]
 8006d08:	68fa      	ldr	r2, [r7, #12]
 8006d0a:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006d0c:	683b      	ldr	r3, [r7, #0]
 8006d0e:	689a      	ldr	r2, [r3, #8]
 8006d10:	687b      	ldr	r3, [r7, #4]
 8006d12:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006d14:	683b      	ldr	r3, [r7, #0]
 8006d16:	681a      	ldr	r2, [r3, #0]
 8006d18:	687b      	ldr	r3, [r7, #4]
 8006d1a:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006d1c:	687b      	ldr	r3, [r7, #4]
 8006d1e:	4a0a      	ldr	r2, [pc, #40]	; (8006d48 <TIM_Base_SetConfig+0x114>)
 8006d20:	4293      	cmp	r3, r2
 8006d22:	d003      	beq.n	8006d2c <TIM_Base_SetConfig+0xf8>
 8006d24:	687b      	ldr	r3, [r7, #4]
 8006d26:	4a0c      	ldr	r2, [pc, #48]	; (8006d58 <TIM_Base_SetConfig+0x124>)
 8006d28:	4293      	cmp	r3, r2
 8006d2a:	d103      	bne.n	8006d34 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006d2c:	683b      	ldr	r3, [r7, #0]
 8006d2e:	691a      	ldr	r2, [r3, #16]
 8006d30:	687b      	ldr	r3, [r7, #4]
 8006d32:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006d34:	687b      	ldr	r3, [r7, #4]
 8006d36:	2201      	movs	r2, #1
 8006d38:	615a      	str	r2, [r3, #20]
}
 8006d3a:	bf00      	nop
 8006d3c:	3714      	adds	r7, #20
 8006d3e:	46bd      	mov	sp, r7
 8006d40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d44:	4770      	bx	lr
 8006d46:	bf00      	nop
 8006d48:	40010000 	.word	0x40010000
 8006d4c:	40000400 	.word	0x40000400
 8006d50:	40000800 	.word	0x40000800
 8006d54:	40000c00 	.word	0x40000c00
 8006d58:	40010400 	.word	0x40010400
 8006d5c:	40014000 	.word	0x40014000
 8006d60:	40014400 	.word	0x40014400
 8006d64:	40014800 	.word	0x40014800
 8006d68:	40001800 	.word	0x40001800
 8006d6c:	40001c00 	.word	0x40001c00
 8006d70:	40002000 	.word	0x40002000

08006d74 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8006d74:	b480      	push	{r7}
 8006d76:	b087      	sub	sp, #28
 8006d78:	af00      	add	r7, sp, #0
 8006d7a:	6078      	str	r0, [r7, #4]
 8006d7c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8006d7e:	687b      	ldr	r3, [r7, #4]
 8006d80:	6a1b      	ldr	r3, [r3, #32]
 8006d82:	f023 0201 	bic.w	r2, r3, #1
 8006d86:	687b      	ldr	r3, [r7, #4]
 8006d88:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8006d8a:	687b      	ldr	r3, [r7, #4]
 8006d8c:	6a1b      	ldr	r3, [r3, #32]
 8006d8e:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8006d90:	687b      	ldr	r3, [r7, #4]
 8006d92:	685b      	ldr	r3, [r3, #4]
 8006d94:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8006d96:	687b      	ldr	r3, [r7, #4]
 8006d98:	699b      	ldr	r3, [r3, #24]
 8006d9a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8006d9c:	68fb      	ldr	r3, [r7, #12]
 8006d9e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006da2:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8006da4:	68fb      	ldr	r3, [r7, #12]
 8006da6:	f023 0303 	bic.w	r3, r3, #3
 8006daa:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8006dac:	683b      	ldr	r3, [r7, #0]
 8006dae:	681b      	ldr	r3, [r3, #0]
 8006db0:	68fa      	ldr	r2, [r7, #12]
 8006db2:	4313      	orrs	r3, r2
 8006db4:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8006db6:	697b      	ldr	r3, [r7, #20]
 8006db8:	f023 0302 	bic.w	r3, r3, #2
 8006dbc:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8006dbe:	683b      	ldr	r3, [r7, #0]
 8006dc0:	689b      	ldr	r3, [r3, #8]
 8006dc2:	697a      	ldr	r2, [r7, #20]
 8006dc4:	4313      	orrs	r3, r2
 8006dc6:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8006dc8:	687b      	ldr	r3, [r7, #4]
 8006dca:	4a20      	ldr	r2, [pc, #128]	; (8006e4c <TIM_OC1_SetConfig+0xd8>)
 8006dcc:	4293      	cmp	r3, r2
 8006dce:	d003      	beq.n	8006dd8 <TIM_OC1_SetConfig+0x64>
 8006dd0:	687b      	ldr	r3, [r7, #4]
 8006dd2:	4a1f      	ldr	r2, [pc, #124]	; (8006e50 <TIM_OC1_SetConfig+0xdc>)
 8006dd4:	4293      	cmp	r3, r2
 8006dd6:	d10c      	bne.n	8006df2 <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8006dd8:	697b      	ldr	r3, [r7, #20]
 8006dda:	f023 0308 	bic.w	r3, r3, #8
 8006dde:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8006de0:	683b      	ldr	r3, [r7, #0]
 8006de2:	68db      	ldr	r3, [r3, #12]
 8006de4:	697a      	ldr	r2, [r7, #20]
 8006de6:	4313      	orrs	r3, r2
 8006de8:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8006dea:	697b      	ldr	r3, [r7, #20]
 8006dec:	f023 0304 	bic.w	r3, r3, #4
 8006df0:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006df2:	687b      	ldr	r3, [r7, #4]
 8006df4:	4a15      	ldr	r2, [pc, #84]	; (8006e4c <TIM_OC1_SetConfig+0xd8>)
 8006df6:	4293      	cmp	r3, r2
 8006df8:	d003      	beq.n	8006e02 <TIM_OC1_SetConfig+0x8e>
 8006dfa:	687b      	ldr	r3, [r7, #4]
 8006dfc:	4a14      	ldr	r2, [pc, #80]	; (8006e50 <TIM_OC1_SetConfig+0xdc>)
 8006dfe:	4293      	cmp	r3, r2
 8006e00:	d111      	bne.n	8006e26 <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 8006e02:	693b      	ldr	r3, [r7, #16]
 8006e04:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006e08:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8006e0a:	693b      	ldr	r3, [r7, #16]
 8006e0c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006e10:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 8006e12:	683b      	ldr	r3, [r7, #0]
 8006e14:	695b      	ldr	r3, [r3, #20]
 8006e16:	693a      	ldr	r2, [r7, #16]
 8006e18:	4313      	orrs	r3, r2
 8006e1a:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8006e1c:	683b      	ldr	r3, [r7, #0]
 8006e1e:	699b      	ldr	r3, [r3, #24]
 8006e20:	693a      	ldr	r2, [r7, #16]
 8006e22:	4313      	orrs	r3, r2
 8006e24:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8006e26:	687b      	ldr	r3, [r7, #4]
 8006e28:	693a      	ldr	r2, [r7, #16]
 8006e2a:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8006e2c:	687b      	ldr	r3, [r7, #4]
 8006e2e:	68fa      	ldr	r2, [r7, #12]
 8006e30:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8006e32:	683b      	ldr	r3, [r7, #0]
 8006e34:	685a      	ldr	r2, [r3, #4]
 8006e36:	687b      	ldr	r3, [r7, #4]
 8006e38:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006e3a:	687b      	ldr	r3, [r7, #4]
 8006e3c:	697a      	ldr	r2, [r7, #20]
 8006e3e:	621a      	str	r2, [r3, #32]
}
 8006e40:	bf00      	nop
 8006e42:	371c      	adds	r7, #28
 8006e44:	46bd      	mov	sp, r7
 8006e46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e4a:	4770      	bx	lr
 8006e4c:	40010000 	.word	0x40010000
 8006e50:	40010400 	.word	0x40010400

08006e54 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8006e54:	b480      	push	{r7}
 8006e56:	b087      	sub	sp, #28
 8006e58:	af00      	add	r7, sp, #0
 8006e5a:	6078      	str	r0, [r7, #4]
 8006e5c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8006e5e:	687b      	ldr	r3, [r7, #4]
 8006e60:	6a1b      	ldr	r3, [r3, #32]
 8006e62:	f023 0210 	bic.w	r2, r3, #16
 8006e66:	687b      	ldr	r3, [r7, #4]
 8006e68:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8006e6a:	687b      	ldr	r3, [r7, #4]
 8006e6c:	6a1b      	ldr	r3, [r3, #32]
 8006e6e:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8006e70:	687b      	ldr	r3, [r7, #4]
 8006e72:	685b      	ldr	r3, [r3, #4]
 8006e74:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8006e76:	687b      	ldr	r3, [r7, #4]
 8006e78:	699b      	ldr	r3, [r3, #24]
 8006e7a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8006e7c:	68fb      	ldr	r3, [r7, #12]
 8006e7e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006e82:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8006e84:	68fb      	ldr	r3, [r7, #12]
 8006e86:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006e8a:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8006e8c:	683b      	ldr	r3, [r7, #0]
 8006e8e:	681b      	ldr	r3, [r3, #0]
 8006e90:	021b      	lsls	r3, r3, #8
 8006e92:	68fa      	ldr	r2, [r7, #12]
 8006e94:	4313      	orrs	r3, r2
 8006e96:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8006e98:	697b      	ldr	r3, [r7, #20]
 8006e9a:	f023 0320 	bic.w	r3, r3, #32
 8006e9e:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8006ea0:	683b      	ldr	r3, [r7, #0]
 8006ea2:	689b      	ldr	r3, [r3, #8]
 8006ea4:	011b      	lsls	r3, r3, #4
 8006ea6:	697a      	ldr	r2, [r7, #20]
 8006ea8:	4313      	orrs	r3, r2
 8006eaa:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8006eac:	687b      	ldr	r3, [r7, #4]
 8006eae:	4a22      	ldr	r2, [pc, #136]	; (8006f38 <TIM_OC2_SetConfig+0xe4>)
 8006eb0:	4293      	cmp	r3, r2
 8006eb2:	d003      	beq.n	8006ebc <TIM_OC2_SetConfig+0x68>
 8006eb4:	687b      	ldr	r3, [r7, #4]
 8006eb6:	4a21      	ldr	r2, [pc, #132]	; (8006f3c <TIM_OC2_SetConfig+0xe8>)
 8006eb8:	4293      	cmp	r3, r2
 8006eba:	d10d      	bne.n	8006ed8 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8006ebc:	697b      	ldr	r3, [r7, #20]
 8006ebe:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006ec2:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8006ec4:	683b      	ldr	r3, [r7, #0]
 8006ec6:	68db      	ldr	r3, [r3, #12]
 8006ec8:	011b      	lsls	r3, r3, #4
 8006eca:	697a      	ldr	r2, [r7, #20]
 8006ecc:	4313      	orrs	r3, r2
 8006ece:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8006ed0:	697b      	ldr	r3, [r7, #20]
 8006ed2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006ed6:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006ed8:	687b      	ldr	r3, [r7, #4]
 8006eda:	4a17      	ldr	r2, [pc, #92]	; (8006f38 <TIM_OC2_SetConfig+0xe4>)
 8006edc:	4293      	cmp	r3, r2
 8006ede:	d003      	beq.n	8006ee8 <TIM_OC2_SetConfig+0x94>
 8006ee0:	687b      	ldr	r3, [r7, #4]
 8006ee2:	4a16      	ldr	r2, [pc, #88]	; (8006f3c <TIM_OC2_SetConfig+0xe8>)
 8006ee4:	4293      	cmp	r3, r2
 8006ee6:	d113      	bne.n	8006f10 <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8006ee8:	693b      	ldr	r3, [r7, #16]
 8006eea:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006eee:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8006ef0:	693b      	ldr	r3, [r7, #16]
 8006ef2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006ef6:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8006ef8:	683b      	ldr	r3, [r7, #0]
 8006efa:	695b      	ldr	r3, [r3, #20]
 8006efc:	009b      	lsls	r3, r3, #2
 8006efe:	693a      	ldr	r2, [r7, #16]
 8006f00:	4313      	orrs	r3, r2
 8006f02:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8006f04:	683b      	ldr	r3, [r7, #0]
 8006f06:	699b      	ldr	r3, [r3, #24]
 8006f08:	009b      	lsls	r3, r3, #2
 8006f0a:	693a      	ldr	r2, [r7, #16]
 8006f0c:	4313      	orrs	r3, r2
 8006f0e:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	693a      	ldr	r2, [r7, #16]
 8006f14:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8006f16:	687b      	ldr	r3, [r7, #4]
 8006f18:	68fa      	ldr	r2, [r7, #12]
 8006f1a:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8006f1c:	683b      	ldr	r3, [r7, #0]
 8006f1e:	685a      	ldr	r2, [r3, #4]
 8006f20:	687b      	ldr	r3, [r7, #4]
 8006f22:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006f24:	687b      	ldr	r3, [r7, #4]
 8006f26:	697a      	ldr	r2, [r7, #20]
 8006f28:	621a      	str	r2, [r3, #32]
}
 8006f2a:	bf00      	nop
 8006f2c:	371c      	adds	r7, #28
 8006f2e:	46bd      	mov	sp, r7
 8006f30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f34:	4770      	bx	lr
 8006f36:	bf00      	nop
 8006f38:	40010000 	.word	0x40010000
 8006f3c:	40010400 	.word	0x40010400

08006f40 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8006f40:	b480      	push	{r7}
 8006f42:	b087      	sub	sp, #28
 8006f44:	af00      	add	r7, sp, #0
 8006f46:	6078      	str	r0, [r7, #4]
 8006f48:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8006f4a:	687b      	ldr	r3, [r7, #4]
 8006f4c:	6a1b      	ldr	r3, [r3, #32]
 8006f4e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8006f52:	687b      	ldr	r3, [r7, #4]
 8006f54:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8006f56:	687b      	ldr	r3, [r7, #4]
 8006f58:	6a1b      	ldr	r3, [r3, #32]
 8006f5a:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8006f5c:	687b      	ldr	r3, [r7, #4]
 8006f5e:	685b      	ldr	r3, [r3, #4]
 8006f60:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8006f62:	687b      	ldr	r3, [r7, #4]
 8006f64:	69db      	ldr	r3, [r3, #28]
 8006f66:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 8006f68:	68fb      	ldr	r3, [r7, #12]
 8006f6a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006f6e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8006f70:	68fb      	ldr	r3, [r7, #12]
 8006f72:	f023 0303 	bic.w	r3, r3, #3
 8006f76:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8006f78:	683b      	ldr	r3, [r7, #0]
 8006f7a:	681b      	ldr	r3, [r3, #0]
 8006f7c:	68fa      	ldr	r2, [r7, #12]
 8006f7e:	4313      	orrs	r3, r2
 8006f80:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8006f82:	697b      	ldr	r3, [r7, #20]
 8006f84:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006f88:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8006f8a:	683b      	ldr	r3, [r7, #0]
 8006f8c:	689b      	ldr	r3, [r3, #8]
 8006f8e:	021b      	lsls	r3, r3, #8
 8006f90:	697a      	ldr	r2, [r7, #20]
 8006f92:	4313      	orrs	r3, r2
 8006f94:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8006f96:	687b      	ldr	r3, [r7, #4]
 8006f98:	4a21      	ldr	r2, [pc, #132]	; (8007020 <TIM_OC3_SetConfig+0xe0>)
 8006f9a:	4293      	cmp	r3, r2
 8006f9c:	d003      	beq.n	8006fa6 <TIM_OC3_SetConfig+0x66>
 8006f9e:	687b      	ldr	r3, [r7, #4]
 8006fa0:	4a20      	ldr	r2, [pc, #128]	; (8007024 <TIM_OC3_SetConfig+0xe4>)
 8006fa2:	4293      	cmp	r3, r2
 8006fa4:	d10d      	bne.n	8006fc2 <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8006fa6:	697b      	ldr	r3, [r7, #20]
 8006fa8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006fac:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8006fae:	683b      	ldr	r3, [r7, #0]
 8006fb0:	68db      	ldr	r3, [r3, #12]
 8006fb2:	021b      	lsls	r3, r3, #8
 8006fb4:	697a      	ldr	r2, [r7, #20]
 8006fb6:	4313      	orrs	r3, r2
 8006fb8:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8006fba:	697b      	ldr	r3, [r7, #20]
 8006fbc:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006fc0:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006fc2:	687b      	ldr	r3, [r7, #4]
 8006fc4:	4a16      	ldr	r2, [pc, #88]	; (8007020 <TIM_OC3_SetConfig+0xe0>)
 8006fc6:	4293      	cmp	r3, r2
 8006fc8:	d003      	beq.n	8006fd2 <TIM_OC3_SetConfig+0x92>
 8006fca:	687b      	ldr	r3, [r7, #4]
 8006fcc:	4a15      	ldr	r2, [pc, #84]	; (8007024 <TIM_OC3_SetConfig+0xe4>)
 8006fce:	4293      	cmp	r3, r2
 8006fd0:	d113      	bne.n	8006ffa <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8006fd2:	693b      	ldr	r3, [r7, #16]
 8006fd4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006fd8:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8006fda:	693b      	ldr	r3, [r7, #16]
 8006fdc:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006fe0:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8006fe2:	683b      	ldr	r3, [r7, #0]
 8006fe4:	695b      	ldr	r3, [r3, #20]
 8006fe6:	011b      	lsls	r3, r3, #4
 8006fe8:	693a      	ldr	r2, [r7, #16]
 8006fea:	4313      	orrs	r3, r2
 8006fec:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8006fee:	683b      	ldr	r3, [r7, #0]
 8006ff0:	699b      	ldr	r3, [r3, #24]
 8006ff2:	011b      	lsls	r3, r3, #4
 8006ff4:	693a      	ldr	r2, [r7, #16]
 8006ff6:	4313      	orrs	r3, r2
 8006ff8:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8006ffa:	687b      	ldr	r3, [r7, #4]
 8006ffc:	693a      	ldr	r2, [r7, #16]
 8006ffe:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8007000:	687b      	ldr	r3, [r7, #4]
 8007002:	68fa      	ldr	r2, [r7, #12]
 8007004:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8007006:	683b      	ldr	r3, [r7, #0]
 8007008:	685a      	ldr	r2, [r3, #4]
 800700a:	687b      	ldr	r3, [r7, #4]
 800700c:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800700e:	687b      	ldr	r3, [r7, #4]
 8007010:	697a      	ldr	r2, [r7, #20]
 8007012:	621a      	str	r2, [r3, #32]
}
 8007014:	bf00      	nop
 8007016:	371c      	adds	r7, #28
 8007018:	46bd      	mov	sp, r7
 800701a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800701e:	4770      	bx	lr
 8007020:	40010000 	.word	0x40010000
 8007024:	40010400 	.word	0x40010400

08007028 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8007028:	b480      	push	{r7}
 800702a:	b087      	sub	sp, #28
 800702c:	af00      	add	r7, sp, #0
 800702e:	6078      	str	r0, [r7, #4]
 8007030:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8007032:	687b      	ldr	r3, [r7, #4]
 8007034:	6a1b      	ldr	r3, [r3, #32]
 8007036:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800703a:	687b      	ldr	r3, [r7, #4]
 800703c:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800703e:	687b      	ldr	r3, [r7, #4]
 8007040:	6a1b      	ldr	r3, [r3, #32]
 8007042:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007044:	687b      	ldr	r3, [r7, #4]
 8007046:	685b      	ldr	r3, [r3, #4]
 8007048:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800704a:	687b      	ldr	r3, [r7, #4]
 800704c:	69db      	ldr	r3, [r3, #28]
 800704e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8007050:	68fb      	ldr	r3, [r7, #12]
 8007052:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007056:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8007058:	68fb      	ldr	r3, [r7, #12]
 800705a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800705e:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007060:	683b      	ldr	r3, [r7, #0]
 8007062:	681b      	ldr	r3, [r3, #0]
 8007064:	021b      	lsls	r3, r3, #8
 8007066:	68fa      	ldr	r2, [r7, #12]
 8007068:	4313      	orrs	r3, r2
 800706a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 800706c:	693b      	ldr	r3, [r7, #16]
 800706e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8007072:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8007074:	683b      	ldr	r3, [r7, #0]
 8007076:	689b      	ldr	r3, [r3, #8]
 8007078:	031b      	lsls	r3, r3, #12
 800707a:	693a      	ldr	r2, [r7, #16]
 800707c:	4313      	orrs	r3, r2
 800707e:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007080:	687b      	ldr	r3, [r7, #4]
 8007082:	4a12      	ldr	r2, [pc, #72]	; (80070cc <TIM_OC4_SetConfig+0xa4>)
 8007084:	4293      	cmp	r3, r2
 8007086:	d003      	beq.n	8007090 <TIM_OC4_SetConfig+0x68>
 8007088:	687b      	ldr	r3, [r7, #4]
 800708a:	4a11      	ldr	r2, [pc, #68]	; (80070d0 <TIM_OC4_SetConfig+0xa8>)
 800708c:	4293      	cmp	r3, r2
 800708e:	d109      	bne.n	80070a4 <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8007090:	697b      	ldr	r3, [r7, #20]
 8007092:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8007096:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8007098:	683b      	ldr	r3, [r7, #0]
 800709a:	695b      	ldr	r3, [r3, #20]
 800709c:	019b      	lsls	r3, r3, #6
 800709e:	697a      	ldr	r2, [r7, #20]
 80070a0:	4313      	orrs	r3, r2
 80070a2:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80070a4:	687b      	ldr	r3, [r7, #4]
 80070a6:	697a      	ldr	r2, [r7, #20]
 80070a8:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 80070aa:	687b      	ldr	r3, [r7, #4]
 80070ac:	68fa      	ldr	r2, [r7, #12]
 80070ae:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 80070b0:	683b      	ldr	r3, [r7, #0]
 80070b2:	685a      	ldr	r2, [r3, #4]
 80070b4:	687b      	ldr	r3, [r7, #4]
 80070b6:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80070b8:	687b      	ldr	r3, [r7, #4]
 80070ba:	693a      	ldr	r2, [r7, #16]
 80070bc:	621a      	str	r2, [r3, #32]
}
 80070be:	bf00      	nop
 80070c0:	371c      	adds	r7, #28
 80070c2:	46bd      	mov	sp, r7
 80070c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070c8:	4770      	bx	lr
 80070ca:	bf00      	nop
 80070cc:	40010000 	.word	0x40010000
 80070d0:	40010400 	.word	0x40010400

080070d4 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 80070d4:	b480      	push	{r7}
 80070d6:	b087      	sub	sp, #28
 80070d8:	af00      	add	r7, sp, #0
 80070da:	60f8      	str	r0, [r7, #12]
 80070dc:	60b9      	str	r1, [r7, #8]
 80070de:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 80070e0:	68fb      	ldr	r3, [r7, #12]
 80070e2:	6a1b      	ldr	r3, [r3, #32]
 80070e4:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80070e6:	68fb      	ldr	r3, [r7, #12]
 80070e8:	6a1b      	ldr	r3, [r3, #32]
 80070ea:	f023 0201 	bic.w	r2, r3, #1
 80070ee:	68fb      	ldr	r3, [r7, #12]
 80070f0:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80070f2:	68fb      	ldr	r3, [r7, #12]
 80070f4:	699b      	ldr	r3, [r3, #24]
 80070f6:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 80070f8:	693b      	ldr	r3, [r7, #16]
 80070fa:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80070fe:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007100:	687b      	ldr	r3, [r7, #4]
 8007102:	011b      	lsls	r3, r3, #4
 8007104:	693a      	ldr	r2, [r7, #16]
 8007106:	4313      	orrs	r3, r2
 8007108:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800710a:	697b      	ldr	r3, [r7, #20]
 800710c:	f023 030a 	bic.w	r3, r3, #10
 8007110:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8007112:	697a      	ldr	r2, [r7, #20]
 8007114:	68bb      	ldr	r3, [r7, #8]
 8007116:	4313      	orrs	r3, r2
 8007118:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800711a:	68fb      	ldr	r3, [r7, #12]
 800711c:	693a      	ldr	r2, [r7, #16]
 800711e:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007120:	68fb      	ldr	r3, [r7, #12]
 8007122:	697a      	ldr	r2, [r7, #20]
 8007124:	621a      	str	r2, [r3, #32]
}
 8007126:	bf00      	nop
 8007128:	371c      	adds	r7, #28
 800712a:	46bd      	mov	sp, r7
 800712c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007130:	4770      	bx	lr

08007132 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007132:	b480      	push	{r7}
 8007134:	b087      	sub	sp, #28
 8007136:	af00      	add	r7, sp, #0
 8007138:	60f8      	str	r0, [r7, #12]
 800713a:	60b9      	str	r1, [r7, #8]
 800713c:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800713e:	68fb      	ldr	r3, [r7, #12]
 8007140:	6a1b      	ldr	r3, [r3, #32]
 8007142:	f023 0210 	bic.w	r2, r3, #16
 8007146:	68fb      	ldr	r3, [r7, #12]
 8007148:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800714a:	68fb      	ldr	r3, [r7, #12]
 800714c:	699b      	ldr	r3, [r3, #24]
 800714e:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8007150:	68fb      	ldr	r3, [r7, #12]
 8007152:	6a1b      	ldr	r3, [r3, #32]
 8007154:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8007156:	697b      	ldr	r3, [r7, #20]
 8007158:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800715c:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800715e:	687b      	ldr	r3, [r7, #4]
 8007160:	031b      	lsls	r3, r3, #12
 8007162:	697a      	ldr	r2, [r7, #20]
 8007164:	4313      	orrs	r3, r2
 8007166:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8007168:	693b      	ldr	r3, [r7, #16]
 800716a:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800716e:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 8007170:	68bb      	ldr	r3, [r7, #8]
 8007172:	011b      	lsls	r3, r3, #4
 8007174:	693a      	ldr	r2, [r7, #16]
 8007176:	4313      	orrs	r3, r2
 8007178:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 800717a:	68fb      	ldr	r3, [r7, #12]
 800717c:	697a      	ldr	r2, [r7, #20]
 800717e:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007180:	68fb      	ldr	r3, [r7, #12]
 8007182:	693a      	ldr	r2, [r7, #16]
 8007184:	621a      	str	r2, [r3, #32]
}
 8007186:	bf00      	nop
 8007188:	371c      	adds	r7, #28
 800718a:	46bd      	mov	sp, r7
 800718c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007190:	4770      	bx	lr

08007192 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8007192:	b480      	push	{r7}
 8007194:	b085      	sub	sp, #20
 8007196:	af00      	add	r7, sp, #0
 8007198:	6078      	str	r0, [r7, #4]
 800719a:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800719c:	687b      	ldr	r3, [r7, #4]
 800719e:	689b      	ldr	r3, [r3, #8]
 80071a0:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 80071a2:	68fb      	ldr	r3, [r7, #12]
 80071a4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80071a8:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80071aa:	683a      	ldr	r2, [r7, #0]
 80071ac:	68fb      	ldr	r3, [r7, #12]
 80071ae:	4313      	orrs	r3, r2
 80071b0:	f043 0307 	orr.w	r3, r3, #7
 80071b4:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 80071b6:	687b      	ldr	r3, [r7, #4]
 80071b8:	68fa      	ldr	r2, [r7, #12]
 80071ba:	609a      	str	r2, [r3, #8]
}
 80071bc:	bf00      	nop
 80071be:	3714      	adds	r7, #20
 80071c0:	46bd      	mov	sp, r7
 80071c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071c6:	4770      	bx	lr

080071c8 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 80071c8:	b480      	push	{r7}
 80071ca:	b087      	sub	sp, #28
 80071cc:	af00      	add	r7, sp, #0
 80071ce:	60f8      	str	r0, [r7, #12]
 80071d0:	60b9      	str	r1, [r7, #8]
 80071d2:	607a      	str	r2, [r7, #4]
 80071d4:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 80071d6:	68fb      	ldr	r3, [r7, #12]
 80071d8:	689b      	ldr	r3, [r3, #8]
 80071da:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80071dc:	697b      	ldr	r3, [r7, #20]
 80071de:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80071e2:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80071e4:	683b      	ldr	r3, [r7, #0]
 80071e6:	021a      	lsls	r2, r3, #8
 80071e8:	687b      	ldr	r3, [r7, #4]
 80071ea:	431a      	orrs	r2, r3
 80071ec:	68bb      	ldr	r3, [r7, #8]
 80071ee:	4313      	orrs	r3, r2
 80071f0:	697a      	ldr	r2, [r7, #20]
 80071f2:	4313      	orrs	r3, r2
 80071f4:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 80071f6:	68fb      	ldr	r3, [r7, #12]
 80071f8:	697a      	ldr	r2, [r7, #20]
 80071fa:	609a      	str	r2, [r3, #8]
}
 80071fc:	bf00      	nop
 80071fe:	371c      	adds	r7, #28
 8007200:	46bd      	mov	sp, r7
 8007202:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007206:	4770      	bx	lr

08007208 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8007208:	b480      	push	{r7}
 800720a:	b087      	sub	sp, #28
 800720c:	af00      	add	r7, sp, #0
 800720e:	60f8      	str	r0, [r7, #12]
 8007210:	60b9      	str	r1, [r7, #8]
 8007212:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8007214:	68bb      	ldr	r3, [r7, #8]
 8007216:	f003 031f 	and.w	r3, r3, #31
 800721a:	2201      	movs	r2, #1
 800721c:	fa02 f303 	lsl.w	r3, r2, r3
 8007220:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8007222:	68fb      	ldr	r3, [r7, #12]
 8007224:	6a1a      	ldr	r2, [r3, #32]
 8007226:	697b      	ldr	r3, [r7, #20]
 8007228:	43db      	mvns	r3, r3
 800722a:	401a      	ands	r2, r3
 800722c:	68fb      	ldr	r3, [r7, #12]
 800722e:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8007230:	68fb      	ldr	r3, [r7, #12]
 8007232:	6a1a      	ldr	r2, [r3, #32]
 8007234:	68bb      	ldr	r3, [r7, #8]
 8007236:	f003 031f 	and.w	r3, r3, #31
 800723a:	6879      	ldr	r1, [r7, #4]
 800723c:	fa01 f303 	lsl.w	r3, r1, r3
 8007240:	431a      	orrs	r2, r3
 8007242:	68fb      	ldr	r3, [r7, #12]
 8007244:	621a      	str	r2, [r3, #32]
}
 8007246:	bf00      	nop
 8007248:	371c      	adds	r7, #28
 800724a:	46bd      	mov	sp, r7
 800724c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007250:	4770      	bx	lr
	...

08007254 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8007254:	b480      	push	{r7}
 8007256:	b085      	sub	sp, #20
 8007258:	af00      	add	r7, sp, #0
 800725a:	6078      	str	r0, [r7, #4]
 800725c:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800725e:	687b      	ldr	r3, [r7, #4]
 8007260:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007264:	2b01      	cmp	r3, #1
 8007266:	d101      	bne.n	800726c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007268:	2302      	movs	r3, #2
 800726a:	e05a      	b.n	8007322 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800726c:	687b      	ldr	r3, [r7, #4]
 800726e:	2201      	movs	r2, #1
 8007270:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007274:	687b      	ldr	r3, [r7, #4]
 8007276:	2202      	movs	r2, #2
 8007278:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800727c:	687b      	ldr	r3, [r7, #4]
 800727e:	681b      	ldr	r3, [r3, #0]
 8007280:	685b      	ldr	r3, [r3, #4]
 8007282:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8007284:	687b      	ldr	r3, [r7, #4]
 8007286:	681b      	ldr	r3, [r3, #0]
 8007288:	689b      	ldr	r3, [r3, #8]
 800728a:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 800728c:	68fb      	ldr	r3, [r7, #12]
 800728e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007292:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007294:	683b      	ldr	r3, [r7, #0]
 8007296:	681b      	ldr	r3, [r3, #0]
 8007298:	68fa      	ldr	r2, [r7, #12]
 800729a:	4313      	orrs	r3, r2
 800729c:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800729e:	687b      	ldr	r3, [r7, #4]
 80072a0:	681b      	ldr	r3, [r3, #0]
 80072a2:	68fa      	ldr	r2, [r7, #12]
 80072a4:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80072a6:	687b      	ldr	r3, [r7, #4]
 80072a8:	681b      	ldr	r3, [r3, #0]
 80072aa:	4a21      	ldr	r2, [pc, #132]	; (8007330 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 80072ac:	4293      	cmp	r3, r2
 80072ae:	d022      	beq.n	80072f6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	681b      	ldr	r3, [r3, #0]
 80072b4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80072b8:	d01d      	beq.n	80072f6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80072ba:	687b      	ldr	r3, [r7, #4]
 80072bc:	681b      	ldr	r3, [r3, #0]
 80072be:	4a1d      	ldr	r2, [pc, #116]	; (8007334 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 80072c0:	4293      	cmp	r3, r2
 80072c2:	d018      	beq.n	80072f6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80072c4:	687b      	ldr	r3, [r7, #4]
 80072c6:	681b      	ldr	r3, [r3, #0]
 80072c8:	4a1b      	ldr	r2, [pc, #108]	; (8007338 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 80072ca:	4293      	cmp	r3, r2
 80072cc:	d013      	beq.n	80072f6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80072ce:	687b      	ldr	r3, [r7, #4]
 80072d0:	681b      	ldr	r3, [r3, #0]
 80072d2:	4a1a      	ldr	r2, [pc, #104]	; (800733c <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 80072d4:	4293      	cmp	r3, r2
 80072d6:	d00e      	beq.n	80072f6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80072d8:	687b      	ldr	r3, [r7, #4]
 80072da:	681b      	ldr	r3, [r3, #0]
 80072dc:	4a18      	ldr	r2, [pc, #96]	; (8007340 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80072de:	4293      	cmp	r3, r2
 80072e0:	d009      	beq.n	80072f6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80072e2:	687b      	ldr	r3, [r7, #4]
 80072e4:	681b      	ldr	r3, [r3, #0]
 80072e6:	4a17      	ldr	r2, [pc, #92]	; (8007344 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80072e8:	4293      	cmp	r3, r2
 80072ea:	d004      	beq.n	80072f6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80072ec:	687b      	ldr	r3, [r7, #4]
 80072ee:	681b      	ldr	r3, [r3, #0]
 80072f0:	4a15      	ldr	r2, [pc, #84]	; (8007348 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80072f2:	4293      	cmp	r3, r2
 80072f4:	d10c      	bne.n	8007310 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 80072f6:	68bb      	ldr	r3, [r7, #8]
 80072f8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80072fc:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80072fe:	683b      	ldr	r3, [r7, #0]
 8007300:	685b      	ldr	r3, [r3, #4]
 8007302:	68ba      	ldr	r2, [r7, #8]
 8007304:	4313      	orrs	r3, r2
 8007306:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8007308:	687b      	ldr	r3, [r7, #4]
 800730a:	681b      	ldr	r3, [r3, #0]
 800730c:	68ba      	ldr	r2, [r7, #8]
 800730e:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8007310:	687b      	ldr	r3, [r7, #4]
 8007312:	2201      	movs	r2, #1
 8007314:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8007318:	687b      	ldr	r3, [r7, #4]
 800731a:	2200      	movs	r2, #0
 800731c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8007320:	2300      	movs	r3, #0
}
 8007322:	4618      	mov	r0, r3
 8007324:	3714      	adds	r7, #20
 8007326:	46bd      	mov	sp, r7
 8007328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800732c:	4770      	bx	lr
 800732e:	bf00      	nop
 8007330:	40010000 	.word	0x40010000
 8007334:	40000400 	.word	0x40000400
 8007338:	40000800 	.word	0x40000800
 800733c:	40000c00 	.word	0x40000c00
 8007340:	40010400 	.word	0x40010400
 8007344:	40014000 	.word	0x40014000
 8007348:	40001800 	.word	0x40001800

0800734c <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 800734c:	b580      	push	{r7, lr}
 800734e:	b082      	sub	sp, #8
 8007350:	af00      	add	r7, sp, #0
 8007352:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8007354:	687b      	ldr	r3, [r7, #4]
 8007356:	2b00      	cmp	r3, #0
 8007358:	d101      	bne.n	800735e <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 800735a:	2301      	movs	r3, #1
 800735c:	e03f      	b.n	80073de <HAL_UART_Init+0x92>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
 800735e:	687b      	ldr	r3, [r7, #4]
 8007360:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8007364:	b2db      	uxtb	r3, r3
 8007366:	2b00      	cmp	r3, #0
 8007368:	d106      	bne.n	8007378 <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 800736a:	687b      	ldr	r3, [r7, #4]
 800736c:	2200      	movs	r2, #0
 800736e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8007372:	6878      	ldr	r0, [r7, #4]
 8007374:	f7fa ff60 	bl	8002238 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8007378:	687b      	ldr	r3, [r7, #4]
 800737a:	2224      	movs	r2, #36	; 0x24
 800737c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 8007380:	687b      	ldr	r3, [r7, #4]
 8007382:	681b      	ldr	r3, [r3, #0]
 8007384:	68da      	ldr	r2, [r3, #12]
 8007386:	687b      	ldr	r3, [r7, #4]
 8007388:	681b      	ldr	r3, [r3, #0]
 800738a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800738e:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 8007390:	6878      	ldr	r0, [r7, #4]
 8007392:	f000 fb97 	bl	8007ac4 <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8007396:	687b      	ldr	r3, [r7, #4]
 8007398:	681b      	ldr	r3, [r3, #0]
 800739a:	691a      	ldr	r2, [r3, #16]
 800739c:	687b      	ldr	r3, [r7, #4]
 800739e:	681b      	ldr	r3, [r3, #0]
 80073a0:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80073a4:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80073a6:	687b      	ldr	r3, [r7, #4]
 80073a8:	681b      	ldr	r3, [r3, #0]
 80073aa:	695a      	ldr	r2, [r3, #20]
 80073ac:	687b      	ldr	r3, [r7, #4]
 80073ae:	681b      	ldr	r3, [r3, #0]
 80073b0:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80073b4:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 80073b6:	687b      	ldr	r3, [r7, #4]
 80073b8:	681b      	ldr	r3, [r3, #0]
 80073ba:	68da      	ldr	r2, [r3, #12]
 80073bc:	687b      	ldr	r3, [r7, #4]
 80073be:	681b      	ldr	r3, [r3, #0]
 80073c0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80073c4:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80073c6:	687b      	ldr	r3, [r7, #4]
 80073c8:	2200      	movs	r2, #0
 80073ca:	63da      	str	r2, [r3, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
 80073cc:	687b      	ldr	r3, [r7, #4]
 80073ce:	2220      	movs	r2, #32
 80073d0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
 80073d4:	687b      	ldr	r3, [r7, #4]
 80073d6:	2220      	movs	r2, #32
 80073d8:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

  return HAL_OK;
 80073dc:	2300      	movs	r3, #0
}
 80073de:	4618      	mov	r0, r3
 80073e0:	3708      	adds	r7, #8
 80073e2:	46bd      	mov	sp, r7
 80073e4:	bd80      	pop	{r7, pc}

080073e6 <HAL_UART_Transmit>:
  * @param  Size  Amount of data elements (u8 or u16) to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80073e6:	b580      	push	{r7, lr}
 80073e8:	b088      	sub	sp, #32
 80073ea:	af02      	add	r7, sp, #8
 80073ec:	60f8      	str	r0, [r7, #12]
 80073ee:	60b9      	str	r1, [r7, #8]
 80073f0:	603b      	str	r3, [r7, #0]
 80073f2:	4613      	mov	r3, r2
 80073f4:	80fb      	strh	r3, [r7, #6]
  uint16_t *tmp;
  uint32_t tickstart = 0U;
 80073f6:	2300      	movs	r3, #0
 80073f8:	617b      	str	r3, [r7, #20]

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 80073fa:	68fb      	ldr	r3, [r7, #12]
 80073fc:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8007400:	b2db      	uxtb	r3, r3
 8007402:	2b20      	cmp	r3, #32
 8007404:	f040 8083 	bne.w	800750e <HAL_UART_Transmit+0x128>
  {
    if ((pData == NULL) || (Size == 0U))
 8007408:	68bb      	ldr	r3, [r7, #8]
 800740a:	2b00      	cmp	r3, #0
 800740c:	d002      	beq.n	8007414 <HAL_UART_Transmit+0x2e>
 800740e:	88fb      	ldrh	r3, [r7, #6]
 8007410:	2b00      	cmp	r3, #0
 8007412:	d101      	bne.n	8007418 <HAL_UART_Transmit+0x32>
    {
      return  HAL_ERROR;
 8007414:	2301      	movs	r3, #1
 8007416:	e07b      	b.n	8007510 <HAL_UART_Transmit+0x12a>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 8007418:	68fb      	ldr	r3, [r7, #12]
 800741a:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800741e:	2b01      	cmp	r3, #1
 8007420:	d101      	bne.n	8007426 <HAL_UART_Transmit+0x40>
 8007422:	2302      	movs	r3, #2
 8007424:	e074      	b.n	8007510 <HAL_UART_Transmit+0x12a>
 8007426:	68fb      	ldr	r3, [r7, #12]
 8007428:	2201      	movs	r2, #1
 800742a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800742e:	68fb      	ldr	r3, [r7, #12]
 8007430:	2200      	movs	r2, #0
 8007432:	63da      	str	r2, [r3, #60]	; 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8007434:	68fb      	ldr	r3, [r7, #12]
 8007436:	2221      	movs	r2, #33	; 0x21
 8007438:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    /* Init tickstart for timeout managment */
    tickstart = HAL_GetTick();
 800743c:	f7fb fdf4 	bl	8003028 <HAL_GetTick>
 8007440:	6178      	str	r0, [r7, #20]

    huart->TxXferSize = Size;
 8007442:	68fb      	ldr	r3, [r7, #12]
 8007444:	88fa      	ldrh	r2, [r7, #6]
 8007446:	849a      	strh	r2, [r3, #36]	; 0x24
    huart->TxXferCount = Size;
 8007448:	68fb      	ldr	r3, [r7, #12]
 800744a:	88fa      	ldrh	r2, [r7, #6]
 800744c:	84da      	strh	r2, [r3, #38]	; 0x26

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 800744e:	68fb      	ldr	r3, [r7, #12]
 8007450:	2200      	movs	r2, #0
 8007452:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    while (huart->TxXferCount > 0U)
 8007456:	e042      	b.n	80074de <HAL_UART_Transmit+0xf8>
    {
      huart->TxXferCount--;
 8007458:	68fb      	ldr	r3, [r7, #12]
 800745a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800745c:	b29b      	uxth	r3, r3
 800745e:	3b01      	subs	r3, #1
 8007460:	b29a      	uxth	r2, r3
 8007462:	68fb      	ldr	r3, [r7, #12]
 8007464:	84da      	strh	r2, [r3, #38]	; 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8007466:	68fb      	ldr	r3, [r7, #12]
 8007468:	689b      	ldr	r3, [r3, #8]
 800746a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800746e:	d122      	bne.n	80074b6 <HAL_UART_Transmit+0xd0>
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8007470:	683b      	ldr	r3, [r7, #0]
 8007472:	9300      	str	r3, [sp, #0]
 8007474:	697b      	ldr	r3, [r7, #20]
 8007476:	2200      	movs	r2, #0
 8007478:	2180      	movs	r1, #128	; 0x80
 800747a:	68f8      	ldr	r0, [r7, #12]
 800747c:	f000 f9b6 	bl	80077ec <UART_WaitOnFlagUntilTimeout>
 8007480:	4603      	mov	r3, r0
 8007482:	2b00      	cmp	r3, #0
 8007484:	d001      	beq.n	800748a <HAL_UART_Transmit+0xa4>
        {
          return HAL_TIMEOUT;
 8007486:	2303      	movs	r3, #3
 8007488:	e042      	b.n	8007510 <HAL_UART_Transmit+0x12a>
        }
        tmp = (uint16_t *) pData;
 800748a:	68bb      	ldr	r3, [r7, #8]
 800748c:	613b      	str	r3, [r7, #16]
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 800748e:	693b      	ldr	r3, [r7, #16]
 8007490:	881b      	ldrh	r3, [r3, #0]
 8007492:	461a      	mov	r2, r3
 8007494:	68fb      	ldr	r3, [r7, #12]
 8007496:	681b      	ldr	r3, [r3, #0]
 8007498:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800749c:	605a      	str	r2, [r3, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
 800749e:	68fb      	ldr	r3, [r7, #12]
 80074a0:	691b      	ldr	r3, [r3, #16]
 80074a2:	2b00      	cmp	r3, #0
 80074a4:	d103      	bne.n	80074ae <HAL_UART_Transmit+0xc8>
        {
          pData += 2U;
 80074a6:	68bb      	ldr	r3, [r7, #8]
 80074a8:	3302      	adds	r3, #2
 80074aa:	60bb      	str	r3, [r7, #8]
 80074ac:	e017      	b.n	80074de <HAL_UART_Transmit+0xf8>
        }
        else
        {
          pData += 1U;
 80074ae:	68bb      	ldr	r3, [r7, #8]
 80074b0:	3301      	adds	r3, #1
 80074b2:	60bb      	str	r3, [r7, #8]
 80074b4:	e013      	b.n	80074de <HAL_UART_Transmit+0xf8>
        }
      }
      else
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80074b6:	683b      	ldr	r3, [r7, #0]
 80074b8:	9300      	str	r3, [sp, #0]
 80074ba:	697b      	ldr	r3, [r7, #20]
 80074bc:	2200      	movs	r2, #0
 80074be:	2180      	movs	r1, #128	; 0x80
 80074c0:	68f8      	ldr	r0, [r7, #12]
 80074c2:	f000 f993 	bl	80077ec <UART_WaitOnFlagUntilTimeout>
 80074c6:	4603      	mov	r3, r0
 80074c8:	2b00      	cmp	r3, #0
 80074ca:	d001      	beq.n	80074d0 <HAL_UART_Transmit+0xea>
        {
          return HAL_TIMEOUT;
 80074cc:	2303      	movs	r3, #3
 80074ce:	e01f      	b.n	8007510 <HAL_UART_Transmit+0x12a>
        }
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 80074d0:	68bb      	ldr	r3, [r7, #8]
 80074d2:	1c5a      	adds	r2, r3, #1
 80074d4:	60ba      	str	r2, [r7, #8]
 80074d6:	781a      	ldrb	r2, [r3, #0]
 80074d8:	68fb      	ldr	r3, [r7, #12]
 80074da:	681b      	ldr	r3, [r3, #0]
 80074dc:	605a      	str	r2, [r3, #4]
    while (huart->TxXferCount > 0U)
 80074de:	68fb      	ldr	r3, [r7, #12]
 80074e0:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80074e2:	b29b      	uxth	r3, r3
 80074e4:	2b00      	cmp	r3, #0
 80074e6:	d1b7      	bne.n	8007458 <HAL_UART_Transmit+0x72>
      }
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80074e8:	683b      	ldr	r3, [r7, #0]
 80074ea:	9300      	str	r3, [sp, #0]
 80074ec:	697b      	ldr	r3, [r7, #20]
 80074ee:	2200      	movs	r2, #0
 80074f0:	2140      	movs	r1, #64	; 0x40
 80074f2:	68f8      	ldr	r0, [r7, #12]
 80074f4:	f000 f97a 	bl	80077ec <UART_WaitOnFlagUntilTimeout>
 80074f8:	4603      	mov	r3, r0
 80074fa:	2b00      	cmp	r3, #0
 80074fc:	d001      	beq.n	8007502 <HAL_UART_Transmit+0x11c>
    {
      return HAL_TIMEOUT;
 80074fe:	2303      	movs	r3, #3
 8007500:	e006      	b.n	8007510 <HAL_UART_Transmit+0x12a>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8007502:	68fb      	ldr	r3, [r7, #12]
 8007504:	2220      	movs	r2, #32
 8007506:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    return HAL_OK;
 800750a:	2300      	movs	r3, #0
 800750c:	e000      	b.n	8007510 <HAL_UART_Transmit+0x12a>
  }
  else
  {
    return HAL_BUSY;
 800750e:	2302      	movs	r3, #2
  }
}
 8007510:	4618      	mov	r0, r3
 8007512:	3718      	adds	r7, #24
 8007514:	46bd      	mov	sp, r7
 8007516:	bd80      	pop	{r7, pc}

08007518 <HAL_UART_Receive_IT>:
  * @param  pData Pointer to data buffer (u8 or u16 data elements).
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 8007518:	b480      	push	{r7}
 800751a:	b085      	sub	sp, #20
 800751c:	af00      	add	r7, sp, #0
 800751e:	60f8      	str	r0, [r7, #12]
 8007520:	60b9      	str	r1, [r7, #8]
 8007522:	4613      	mov	r3, r2
 8007524:	80fb      	strh	r3, [r7, #6]
  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8007526:	68fb      	ldr	r3, [r7, #12]
 8007528:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 800752c:	b2db      	uxtb	r3, r3
 800752e:	2b20      	cmp	r3, #32
 8007530:	d140      	bne.n	80075b4 <HAL_UART_Receive_IT+0x9c>
  {
    if ((pData == NULL) || (Size == 0U))
 8007532:	68bb      	ldr	r3, [r7, #8]
 8007534:	2b00      	cmp	r3, #0
 8007536:	d002      	beq.n	800753e <HAL_UART_Receive_IT+0x26>
 8007538:	88fb      	ldrh	r3, [r7, #6]
 800753a:	2b00      	cmp	r3, #0
 800753c:	d101      	bne.n	8007542 <HAL_UART_Receive_IT+0x2a>
    {
      return HAL_ERROR;
 800753e:	2301      	movs	r3, #1
 8007540:	e039      	b.n	80075b6 <HAL_UART_Receive_IT+0x9e>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 8007542:	68fb      	ldr	r3, [r7, #12]
 8007544:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8007548:	2b01      	cmp	r3, #1
 800754a:	d101      	bne.n	8007550 <HAL_UART_Receive_IT+0x38>
 800754c:	2302      	movs	r3, #2
 800754e:	e032      	b.n	80075b6 <HAL_UART_Receive_IT+0x9e>
 8007550:	68fb      	ldr	r3, [r7, #12]
 8007552:	2201      	movs	r2, #1
 8007554:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    huart->pRxBuffPtr = pData;
 8007558:	68fb      	ldr	r3, [r7, #12]
 800755a:	68ba      	ldr	r2, [r7, #8]
 800755c:	629a      	str	r2, [r3, #40]	; 0x28
    huart->RxXferSize = Size;
 800755e:	68fb      	ldr	r3, [r7, #12]
 8007560:	88fa      	ldrh	r2, [r7, #6]
 8007562:	859a      	strh	r2, [r3, #44]	; 0x2c
    huart->RxXferCount = Size;
 8007564:	68fb      	ldr	r3, [r7, #12]
 8007566:	88fa      	ldrh	r2, [r7, #6]
 8007568:	85da      	strh	r2, [r3, #46]	; 0x2e

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800756a:	68fb      	ldr	r3, [r7, #12]
 800756c:	2200      	movs	r2, #0
 800756e:	63da      	str	r2, [r3, #60]	; 0x3c
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8007570:	68fb      	ldr	r3, [r7, #12]
 8007572:	2222      	movs	r2, #34	; 0x22
 8007574:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 8007578:	68fb      	ldr	r3, [r7, #12]
 800757a:	2200      	movs	r2, #0
 800757c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Enable the UART Parity Error Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 8007580:	68fb      	ldr	r3, [r7, #12]
 8007582:	681b      	ldr	r3, [r3, #0]
 8007584:	68da      	ldr	r2, [r3, #12]
 8007586:	68fb      	ldr	r3, [r7, #12]
 8007588:	681b      	ldr	r3, [r3, #0]
 800758a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800758e:	60da      	str	r2, [r3, #12]

    /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
    __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 8007590:	68fb      	ldr	r3, [r7, #12]
 8007592:	681b      	ldr	r3, [r3, #0]
 8007594:	695a      	ldr	r2, [r3, #20]
 8007596:	68fb      	ldr	r3, [r7, #12]
 8007598:	681b      	ldr	r3, [r3, #0]
 800759a:	f042 0201 	orr.w	r2, r2, #1
 800759e:	615a      	str	r2, [r3, #20]

    /* Enable the UART Data Register not empty Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 80075a0:	68fb      	ldr	r3, [r7, #12]
 80075a2:	681b      	ldr	r3, [r3, #0]
 80075a4:	68da      	ldr	r2, [r3, #12]
 80075a6:	68fb      	ldr	r3, [r7, #12]
 80075a8:	681b      	ldr	r3, [r3, #0]
 80075aa:	f042 0220 	orr.w	r2, r2, #32
 80075ae:	60da      	str	r2, [r3, #12]

    return HAL_OK;
 80075b0:	2300      	movs	r3, #0
 80075b2:	e000      	b.n	80075b6 <HAL_UART_Receive_IT+0x9e>
  }
  else
  {
    return HAL_BUSY;
 80075b4:	2302      	movs	r3, #2
  }
}
 80075b6:	4618      	mov	r0, r3
 80075b8:	3714      	adds	r7, #20
 80075ba:	46bd      	mov	sp, r7
 80075bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075c0:	4770      	bx	lr
	...

080075c4 <HAL_UART_IRQHandler>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 80075c4:	b580      	push	{r7, lr}
 80075c6:	b088      	sub	sp, #32
 80075c8:	af00      	add	r7, sp, #0
 80075ca:	6078      	str	r0, [r7, #4]
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	681b      	ldr	r3, [r3, #0]
 80075d0:	681b      	ldr	r3, [r3, #0]
 80075d2:	61fb      	str	r3, [r7, #28]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 80075d4:	687b      	ldr	r3, [r7, #4]
 80075d6:	681b      	ldr	r3, [r3, #0]
 80075d8:	68db      	ldr	r3, [r3, #12]
 80075da:	61bb      	str	r3, [r7, #24]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 80075dc:	687b      	ldr	r3, [r7, #4]
 80075de:	681b      	ldr	r3, [r3, #0]
 80075e0:	695b      	ldr	r3, [r3, #20]
 80075e2:	617b      	str	r3, [r7, #20]
  uint32_t errorflags = 0x00U;
 80075e4:	2300      	movs	r3, #0
 80075e6:	613b      	str	r3, [r7, #16]
  uint32_t dmarequest = 0x00U;
 80075e8:	2300      	movs	r3, #0
 80075ea:	60fb      	str	r3, [r7, #12]

  /* If no error occurs */
  errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 80075ec:	69fb      	ldr	r3, [r7, #28]
 80075ee:	f003 030f 	and.w	r3, r3, #15
 80075f2:	613b      	str	r3, [r7, #16]
  if (errorflags == RESET)
 80075f4:	693b      	ldr	r3, [r7, #16]
 80075f6:	2b00      	cmp	r3, #0
 80075f8:	d10d      	bne.n	8007616 <HAL_UART_IRQHandler+0x52>
  {
    /* UART in mode Receiver -------------------------------------------------*/
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 80075fa:	69fb      	ldr	r3, [r7, #28]
 80075fc:	f003 0320 	and.w	r3, r3, #32
 8007600:	2b00      	cmp	r3, #0
 8007602:	d008      	beq.n	8007616 <HAL_UART_IRQHandler+0x52>
 8007604:	69bb      	ldr	r3, [r7, #24]
 8007606:	f003 0320 	and.w	r3, r3, #32
 800760a:	2b00      	cmp	r3, #0
 800760c:	d003      	beq.n	8007616 <HAL_UART_IRQHandler+0x52>
    {
      UART_Receive_IT(huart);
 800760e:	6878      	ldr	r0, [r7, #4]
 8007610:	f000 f9d6 	bl	80079c0 <UART_Receive_IT>
      return;
 8007614:	e0d1      	b.n	80077ba <HAL_UART_IRQHandler+0x1f6>
    }
  }

  /* If some errors occur */
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 8007616:	693b      	ldr	r3, [r7, #16]
 8007618:	2b00      	cmp	r3, #0
 800761a:	f000 80b0 	beq.w	800777e <HAL_UART_IRQHandler+0x1ba>
 800761e:	697b      	ldr	r3, [r7, #20]
 8007620:	f003 0301 	and.w	r3, r3, #1
 8007624:	2b00      	cmp	r3, #0
 8007626:	d105      	bne.n	8007634 <HAL_UART_IRQHandler+0x70>
 8007628:	69bb      	ldr	r3, [r7, #24]
 800762a:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800762e:	2b00      	cmp	r3, #0
 8007630:	f000 80a5 	beq.w	800777e <HAL_UART_IRQHandler+0x1ba>
  {
    /* UART parity error interrupt occurred ----------------------------------*/
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 8007634:	69fb      	ldr	r3, [r7, #28]
 8007636:	f003 0301 	and.w	r3, r3, #1
 800763a:	2b00      	cmp	r3, #0
 800763c:	d00a      	beq.n	8007654 <HAL_UART_IRQHandler+0x90>
 800763e:	69bb      	ldr	r3, [r7, #24]
 8007640:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007644:	2b00      	cmp	r3, #0
 8007646:	d005      	beq.n	8007654 <HAL_UART_IRQHandler+0x90>
    {
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8007648:	687b      	ldr	r3, [r7, #4]
 800764a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800764c:	f043 0201 	orr.w	r2, r3, #1
 8007650:	687b      	ldr	r3, [r7, #4]
 8007652:	63da      	str	r2, [r3, #60]	; 0x3c
    }

    /* UART noise error interrupt occurred -----------------------------------*/
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8007654:	69fb      	ldr	r3, [r7, #28]
 8007656:	f003 0304 	and.w	r3, r3, #4
 800765a:	2b00      	cmp	r3, #0
 800765c:	d00a      	beq.n	8007674 <HAL_UART_IRQHandler+0xb0>
 800765e:	697b      	ldr	r3, [r7, #20]
 8007660:	f003 0301 	and.w	r3, r3, #1
 8007664:	2b00      	cmp	r3, #0
 8007666:	d005      	beq.n	8007674 <HAL_UART_IRQHandler+0xb0>
    {
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8007668:	687b      	ldr	r3, [r7, #4]
 800766a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800766c:	f043 0202 	orr.w	r2, r3, #2
 8007670:	687b      	ldr	r3, [r7, #4]
 8007672:	63da      	str	r2, [r3, #60]	; 0x3c
    }

    /* UART frame error interrupt occurred -----------------------------------*/
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8007674:	69fb      	ldr	r3, [r7, #28]
 8007676:	f003 0302 	and.w	r3, r3, #2
 800767a:	2b00      	cmp	r3, #0
 800767c:	d00a      	beq.n	8007694 <HAL_UART_IRQHandler+0xd0>
 800767e:	697b      	ldr	r3, [r7, #20]
 8007680:	f003 0301 	and.w	r3, r3, #1
 8007684:	2b00      	cmp	r3, #0
 8007686:	d005      	beq.n	8007694 <HAL_UART_IRQHandler+0xd0>
    {
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8007688:	687b      	ldr	r3, [r7, #4]
 800768a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800768c:	f043 0204 	orr.w	r2, r3, #4
 8007690:	687b      	ldr	r3, [r7, #4]
 8007692:	63da      	str	r2, [r3, #60]	; 0x3c
    }

    /* UART Over-Run interrupt occurred --------------------------------------*/
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 8007694:	69fb      	ldr	r3, [r7, #28]
 8007696:	f003 0308 	and.w	r3, r3, #8
 800769a:	2b00      	cmp	r3, #0
 800769c:	d00f      	beq.n	80076be <HAL_UART_IRQHandler+0xfa>
 800769e:	69bb      	ldr	r3, [r7, #24]
 80076a0:	f003 0320 	and.w	r3, r3, #32
 80076a4:	2b00      	cmp	r3, #0
 80076a6:	d104      	bne.n	80076b2 <HAL_UART_IRQHandler+0xee>
 80076a8:	697b      	ldr	r3, [r7, #20]
 80076aa:	f003 0301 	and.w	r3, r3, #1
 80076ae:	2b00      	cmp	r3, #0
 80076b0:	d005      	beq.n	80076be <HAL_UART_IRQHandler+0xfa>
    {
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 80076b2:	687b      	ldr	r3, [r7, #4]
 80076b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80076b6:	f043 0208 	orr.w	r2, r3, #8
 80076ba:	687b      	ldr	r3, [r7, #4]
 80076bc:	63da      	str	r2, [r3, #60]	; 0x3c
    }

    /* Call UART Error Call back function if need be --------------------------*/
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 80076be:	687b      	ldr	r3, [r7, #4]
 80076c0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80076c2:	2b00      	cmp	r3, #0
 80076c4:	d078      	beq.n	80077b8 <HAL_UART_IRQHandler+0x1f4>
    {
      /* UART in mode Receiver -----------------------------------------------*/
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 80076c6:	69fb      	ldr	r3, [r7, #28]
 80076c8:	f003 0320 	and.w	r3, r3, #32
 80076cc:	2b00      	cmp	r3, #0
 80076ce:	d007      	beq.n	80076e0 <HAL_UART_IRQHandler+0x11c>
 80076d0:	69bb      	ldr	r3, [r7, #24]
 80076d2:	f003 0320 	and.w	r3, r3, #32
 80076d6:	2b00      	cmp	r3, #0
 80076d8:	d002      	beq.n	80076e0 <HAL_UART_IRQHandler+0x11c>
      {
        UART_Receive_IT(huart);
 80076da:	6878      	ldr	r0, [r7, #4]
 80076dc:	f000 f970 	bl	80079c0 <UART_Receive_IT>
      }

      /* If Overrun error occurs, or if any error occurs in DMA mode reception,
         consider error as blocking */
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 80076e0:	687b      	ldr	r3, [r7, #4]
 80076e2:	681b      	ldr	r3, [r3, #0]
 80076e4:	695b      	ldr	r3, [r3, #20]
 80076e6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80076ea:	2b40      	cmp	r3, #64	; 0x40
 80076ec:	bf0c      	ite	eq
 80076ee:	2301      	moveq	r3, #1
 80076f0:	2300      	movne	r3, #0
 80076f2:	b2db      	uxtb	r3, r3
 80076f4:	60fb      	str	r3, [r7, #12]
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 80076f6:	687b      	ldr	r3, [r7, #4]
 80076f8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80076fa:	f003 0308 	and.w	r3, r3, #8
 80076fe:	2b00      	cmp	r3, #0
 8007700:	d102      	bne.n	8007708 <HAL_UART_IRQHandler+0x144>
 8007702:	68fb      	ldr	r3, [r7, #12]
 8007704:	2b00      	cmp	r3, #0
 8007706:	d031      	beq.n	800776c <HAL_UART_IRQHandler+0x1a8>
      {
        /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
        UART_EndRxTransfer(huart);
 8007708:	6878      	ldr	r0, [r7, #4]
 800770a:	f000 f8b9 	bl	8007880 <UART_EndRxTransfer>

        /* Disable the UART DMA Rx request if enabled */
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800770e:	687b      	ldr	r3, [r7, #4]
 8007710:	681b      	ldr	r3, [r3, #0]
 8007712:	695b      	ldr	r3, [r3, #20]
 8007714:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007718:	2b40      	cmp	r3, #64	; 0x40
 800771a:	d123      	bne.n	8007764 <HAL_UART_IRQHandler+0x1a0>
        {
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800771c:	687b      	ldr	r3, [r7, #4]
 800771e:	681b      	ldr	r3, [r3, #0]
 8007720:	695a      	ldr	r2, [r3, #20]
 8007722:	687b      	ldr	r3, [r7, #4]
 8007724:	681b      	ldr	r3, [r3, #0]
 8007726:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800772a:	615a      	str	r2, [r3, #20]

          /* Abort the UART DMA Rx stream */
          if (huart->hdmarx != NULL)
 800772c:	687b      	ldr	r3, [r7, #4]
 800772e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007730:	2b00      	cmp	r3, #0
 8007732:	d013      	beq.n	800775c <HAL_UART_IRQHandler+0x198>
          {
            /* Set the UART DMA Abort callback :
               will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8007734:	687b      	ldr	r3, [r7, #4]
 8007736:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007738:	4a21      	ldr	r2, [pc, #132]	; (80077c0 <HAL_UART_IRQHandler+0x1fc>)
 800773a:	651a      	str	r2, [r3, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 800773c:	687b      	ldr	r3, [r7, #4]
 800773e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007740:	4618      	mov	r0, r3
 8007742:	f7fb fe3b 	bl	80033bc <HAL_DMA_Abort_IT>
 8007746:	4603      	mov	r3, r0
 8007748:	2b00      	cmp	r3, #0
 800774a:	d016      	beq.n	800777a <HAL_UART_IRQHandler+0x1b6>
            {
              /* Call Directly XferAbortCallback function in case of error */
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 800774c:	687b      	ldr	r3, [r7, #4]
 800774e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007750:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007752:	687a      	ldr	r2, [r7, #4]
 8007754:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8007756:	4610      	mov	r0, r2
 8007758:	4798      	blx	r3
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800775a:	e00e      	b.n	800777a <HAL_UART_IRQHandler+0x1b6>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
            /*Call registered error callback*/
            huart->ErrorCallback(huart);
#else
            /*Call legacy weak error callback*/
            HAL_UART_ErrorCallback(huart);
 800775c:	6878      	ldr	r0, [r7, #4]
 800775e:	f000 f83b 	bl	80077d8 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007762:	e00a      	b.n	800777a <HAL_UART_IRQHandler+0x1b6>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 8007764:	6878      	ldr	r0, [r7, #4]
 8007766:	f000 f837 	bl	80077d8 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800776a:	e006      	b.n	800777a <HAL_UART_IRQHandler+0x1b6>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered error callback*/
        huart->ErrorCallback(huart);
#else
        /*Call legacy weak error callback*/
        HAL_UART_ErrorCallback(huart);
 800776c:	6878      	ldr	r0, [r7, #4]
 800776e:	f000 f833 	bl	80077d8 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */

        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007772:	687b      	ldr	r3, [r7, #4]
 8007774:	2200      	movs	r2, #0
 8007776:	63da      	str	r2, [r3, #60]	; 0x3c
      }
    }
    return;
 8007778:	e01e      	b.n	80077b8 <HAL_UART_IRQHandler+0x1f4>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800777a:	bf00      	nop
    return;
 800777c:	e01c      	b.n	80077b8 <HAL_UART_IRQHandler+0x1f4>
  } /* End if some error occurs */

  /* UART in mode Transmitter ------------------------------------------------*/
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 800777e:	69fb      	ldr	r3, [r7, #28]
 8007780:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007784:	2b00      	cmp	r3, #0
 8007786:	d008      	beq.n	800779a <HAL_UART_IRQHandler+0x1d6>
 8007788:	69bb      	ldr	r3, [r7, #24]
 800778a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800778e:	2b00      	cmp	r3, #0
 8007790:	d003      	beq.n	800779a <HAL_UART_IRQHandler+0x1d6>
  {
    UART_Transmit_IT(huart);
 8007792:	6878      	ldr	r0, [r7, #4]
 8007794:	f000 f8a6 	bl	80078e4 <UART_Transmit_IT>
    return;
 8007798:	e00f      	b.n	80077ba <HAL_UART_IRQHandler+0x1f6>
  }

  /* UART in mode Transmitter end --------------------------------------------*/
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 800779a:	69fb      	ldr	r3, [r7, #28]
 800779c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80077a0:	2b00      	cmp	r3, #0
 80077a2:	d00a      	beq.n	80077ba <HAL_UART_IRQHandler+0x1f6>
 80077a4:	69bb      	ldr	r3, [r7, #24]
 80077a6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80077aa:	2b00      	cmp	r3, #0
 80077ac:	d005      	beq.n	80077ba <HAL_UART_IRQHandler+0x1f6>
  {
    UART_EndTransmit_IT(huart);
 80077ae:	6878      	ldr	r0, [r7, #4]
 80077b0:	f000 f8ee 	bl	8007990 <UART_EndTransmit_IT>
    return;
 80077b4:	bf00      	nop
 80077b6:	e000      	b.n	80077ba <HAL_UART_IRQHandler+0x1f6>
    return;
 80077b8:	bf00      	nop
  }
}
 80077ba:	3720      	adds	r7, #32
 80077bc:	46bd      	mov	sp, r7
 80077be:	bd80      	pop	{r7, pc}
 80077c0:	080078bd 	.word	0x080078bd

080077c4 <HAL_UART_TxCpltCallback>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 80077c4:	b480      	push	{r7}
 80077c6:	b083      	sub	sp, #12
 80077c8:	af00      	add	r7, sp, #0
 80077ca:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);
  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_TxCpltCallback could be implemented in the user file
   */
}
 80077cc:	bf00      	nop
 80077ce:	370c      	adds	r7, #12
 80077d0:	46bd      	mov	sp, r7
 80077d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077d6:	4770      	bx	lr

080077d8 <HAL_UART_ErrorCallback>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 80077d8:	b480      	push	{r7}
 80077da:	b083      	sub	sp, #12
 80077dc:	af00      	add	r7, sp, #0
 80077de:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);
  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_ErrorCallback could be implemented in the user file
   */
}
 80077e0:	bf00      	nop
 80077e2:	370c      	adds	r7, #12
 80077e4:	46bd      	mov	sp, r7
 80077e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077ea:	4770      	bx	lr

080077ec <UART_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
{
 80077ec:	b580      	push	{r7, lr}
 80077ee:	b084      	sub	sp, #16
 80077f0:	af00      	add	r7, sp, #0
 80077f2:	60f8      	str	r0, [r7, #12]
 80077f4:	60b9      	str	r1, [r7, #8]
 80077f6:	603b      	str	r3, [r7, #0]
 80077f8:	4613      	mov	r3, r2
 80077fa:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80077fc:	e02c      	b.n	8007858 <UART_WaitOnFlagUntilTimeout+0x6c>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80077fe:	69bb      	ldr	r3, [r7, #24]
 8007800:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007804:	d028      	beq.n	8007858 <UART_WaitOnFlagUntilTimeout+0x6c>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 8007806:	69bb      	ldr	r3, [r7, #24]
 8007808:	2b00      	cmp	r3, #0
 800780a:	d007      	beq.n	800781c <UART_WaitOnFlagUntilTimeout+0x30>
 800780c:	f7fb fc0c 	bl	8003028 <HAL_GetTick>
 8007810:	4602      	mov	r2, r0
 8007812:	683b      	ldr	r3, [r7, #0]
 8007814:	1ad3      	subs	r3, r2, r3
 8007816:	69ba      	ldr	r2, [r7, #24]
 8007818:	429a      	cmp	r2, r3
 800781a:	d21d      	bcs.n	8007858 <UART_WaitOnFlagUntilTimeout+0x6c>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800781c:	68fb      	ldr	r3, [r7, #12]
 800781e:	681b      	ldr	r3, [r3, #0]
 8007820:	68da      	ldr	r2, [r3, #12]
 8007822:	68fb      	ldr	r3, [r7, #12]
 8007824:	681b      	ldr	r3, [r3, #0]
 8007826:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800782a:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800782c:	68fb      	ldr	r3, [r7, #12]
 800782e:	681b      	ldr	r3, [r3, #0]
 8007830:	695a      	ldr	r2, [r3, #20]
 8007832:	68fb      	ldr	r3, [r7, #12]
 8007834:	681b      	ldr	r3, [r3, #0]
 8007836:	f022 0201 	bic.w	r2, r2, #1
 800783a:	615a      	str	r2, [r3, #20]

        huart->gState  = HAL_UART_STATE_READY;
 800783c:	68fb      	ldr	r3, [r7, #12]
 800783e:	2220      	movs	r2, #32
 8007840:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        huart->RxState = HAL_UART_STATE_READY;
 8007844:	68fb      	ldr	r3, [r7, #12]
 8007846:	2220      	movs	r2, #32
 8007848:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

        /* Process Unlocked */
        __HAL_UNLOCK(huart);
 800784c:	68fb      	ldr	r3, [r7, #12]
 800784e:	2200      	movs	r2, #0
 8007850:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

        return HAL_TIMEOUT;
 8007854:	2303      	movs	r3, #3
 8007856:	e00f      	b.n	8007878 <UART_WaitOnFlagUntilTimeout+0x8c>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8007858:	68fb      	ldr	r3, [r7, #12]
 800785a:	681b      	ldr	r3, [r3, #0]
 800785c:	681a      	ldr	r2, [r3, #0]
 800785e:	68bb      	ldr	r3, [r7, #8]
 8007860:	4013      	ands	r3, r2
 8007862:	68ba      	ldr	r2, [r7, #8]
 8007864:	429a      	cmp	r2, r3
 8007866:	bf0c      	ite	eq
 8007868:	2301      	moveq	r3, #1
 800786a:	2300      	movne	r3, #0
 800786c:	b2db      	uxtb	r3, r3
 800786e:	461a      	mov	r2, r3
 8007870:	79fb      	ldrb	r3, [r7, #7]
 8007872:	429a      	cmp	r2, r3
 8007874:	d0c3      	beq.n	80077fe <UART_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8007876:	2300      	movs	r3, #0
}
 8007878:	4618      	mov	r0, r3
 800787a:	3710      	adds	r7, #16
 800787c:	46bd      	mov	sp, r7
 800787e:	bd80      	pop	{r7, pc}

08007880 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 8007880:	b480      	push	{r7}
 8007882:	b083      	sub	sp, #12
 8007884:	af00      	add	r7, sp, #0
 8007886:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8007888:	687b      	ldr	r3, [r7, #4]
 800788a:	681b      	ldr	r3, [r3, #0]
 800788c:	68da      	ldr	r2, [r3, #12]
 800788e:	687b      	ldr	r3, [r7, #4]
 8007890:	681b      	ldr	r3, [r3, #0]
 8007892:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8007896:	60da      	str	r2, [r3, #12]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007898:	687b      	ldr	r3, [r7, #4]
 800789a:	681b      	ldr	r3, [r3, #0]
 800789c:	695a      	ldr	r2, [r3, #20]
 800789e:	687b      	ldr	r3, [r7, #4]
 80078a0:	681b      	ldr	r3, [r3, #0]
 80078a2:	f022 0201 	bic.w	r2, r2, #1
 80078a6:	615a      	str	r2, [r3, #20]

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80078a8:	687b      	ldr	r3, [r7, #4]
 80078aa:	2220      	movs	r2, #32
 80078ac:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
}
 80078b0:	bf00      	nop
 80078b2:	370c      	adds	r7, #12
 80078b4:	46bd      	mov	sp, r7
 80078b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078ba:	4770      	bx	lr

080078bc <UART_DMAAbortOnError>:
  * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 80078bc:	b580      	push	{r7, lr}
 80078be:	b084      	sub	sp, #16
 80078c0:	af00      	add	r7, sp, #0
 80078c2:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80078c4:	687b      	ldr	r3, [r7, #4]
 80078c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80078c8:	60fb      	str	r3, [r7, #12]
  huart->RxXferCount = 0x00U;
 80078ca:	68fb      	ldr	r3, [r7, #12]
 80078cc:	2200      	movs	r2, #0
 80078ce:	85da      	strh	r2, [r3, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 80078d0:	68fb      	ldr	r3, [r7, #12]
 80078d2:	2200      	movs	r2, #0
 80078d4:	84da      	strh	r2, [r3, #38]	; 0x26
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 80078d6:	68f8      	ldr	r0, [r7, #12]
 80078d8:	f7ff ff7e 	bl	80077d8 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 80078dc:	bf00      	nop
 80078de:	3710      	adds	r7, #16
 80078e0:	46bd      	mov	sp, r7
 80078e2:	bd80      	pop	{r7, pc}

080078e4 <UART_Transmit_IT>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
{
 80078e4:	b480      	push	{r7}
 80078e6:	b085      	sub	sp, #20
 80078e8:	af00      	add	r7, sp, #0
 80078ea:	6078      	str	r0, [r7, #4]
  uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80078f2:	b2db      	uxtb	r3, r3
 80078f4:	2b21      	cmp	r3, #33	; 0x21
 80078f6:	d144      	bne.n	8007982 <UART_Transmit_IT+0x9e>
  {
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 80078f8:	687b      	ldr	r3, [r7, #4]
 80078fa:	689b      	ldr	r3, [r3, #8]
 80078fc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007900:	d11a      	bne.n	8007938 <UART_Transmit_IT+0x54>
    {
      tmp = (uint16_t *) huart->pTxBuffPtr;
 8007902:	687b      	ldr	r3, [r7, #4]
 8007904:	6a1b      	ldr	r3, [r3, #32]
 8007906:	60fb      	str	r3, [r7, #12]
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 8007908:	68fb      	ldr	r3, [r7, #12]
 800790a:	881b      	ldrh	r3, [r3, #0]
 800790c:	461a      	mov	r2, r3
 800790e:	687b      	ldr	r3, [r7, #4]
 8007910:	681b      	ldr	r3, [r3, #0]
 8007912:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007916:	605a      	str	r2, [r3, #4]
      if (huart->Init.Parity == UART_PARITY_NONE)
 8007918:	687b      	ldr	r3, [r7, #4]
 800791a:	691b      	ldr	r3, [r3, #16]
 800791c:	2b00      	cmp	r3, #0
 800791e:	d105      	bne.n	800792c <UART_Transmit_IT+0x48>
      {
        huart->pTxBuffPtr += 2U;
 8007920:	687b      	ldr	r3, [r7, #4]
 8007922:	6a1b      	ldr	r3, [r3, #32]
 8007924:	1c9a      	adds	r2, r3, #2
 8007926:	687b      	ldr	r3, [r7, #4]
 8007928:	621a      	str	r2, [r3, #32]
 800792a:	e00e      	b.n	800794a <UART_Transmit_IT+0x66>
      }
      else
      {
        huart->pTxBuffPtr += 1U;
 800792c:	687b      	ldr	r3, [r7, #4]
 800792e:	6a1b      	ldr	r3, [r3, #32]
 8007930:	1c5a      	adds	r2, r3, #1
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	621a      	str	r2, [r3, #32]
 8007936:	e008      	b.n	800794a <UART_Transmit_IT+0x66>
      }
    }
    else
    {
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 8007938:	687b      	ldr	r3, [r7, #4]
 800793a:	6a1b      	ldr	r3, [r3, #32]
 800793c:	1c59      	adds	r1, r3, #1
 800793e:	687a      	ldr	r2, [r7, #4]
 8007940:	6211      	str	r1, [r2, #32]
 8007942:	781a      	ldrb	r2, [r3, #0]
 8007944:	687b      	ldr	r3, [r7, #4]
 8007946:	681b      	ldr	r3, [r3, #0]
 8007948:	605a      	str	r2, [r3, #4]
    }

    if (--huart->TxXferCount == 0U)
 800794a:	687b      	ldr	r3, [r7, #4]
 800794c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800794e:	b29b      	uxth	r3, r3
 8007950:	3b01      	subs	r3, #1
 8007952:	b29b      	uxth	r3, r3
 8007954:	687a      	ldr	r2, [r7, #4]
 8007956:	4619      	mov	r1, r3
 8007958:	84d1      	strh	r1, [r2, #38]	; 0x26
 800795a:	2b00      	cmp	r3, #0
 800795c:	d10f      	bne.n	800797e <UART_Transmit_IT+0x9a>
    {
      /* Disable the UART Transmit Complete Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 800795e:	687b      	ldr	r3, [r7, #4]
 8007960:	681b      	ldr	r3, [r3, #0]
 8007962:	68da      	ldr	r2, [r3, #12]
 8007964:	687b      	ldr	r3, [r7, #4]
 8007966:	681b      	ldr	r3, [r3, #0]
 8007968:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800796c:	60da      	str	r2, [r3, #12]

      /* Enable the UART Transmit Complete Interrupt */
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 800796e:	687b      	ldr	r3, [r7, #4]
 8007970:	681b      	ldr	r3, [r3, #0]
 8007972:	68da      	ldr	r2, [r3, #12]
 8007974:	687b      	ldr	r3, [r7, #4]
 8007976:	681b      	ldr	r3, [r3, #0]
 8007978:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800797c:	60da      	str	r2, [r3, #12]
    }
    return HAL_OK;
 800797e:	2300      	movs	r3, #0
 8007980:	e000      	b.n	8007984 <UART_Transmit_IT+0xa0>
  }
  else
  {
    return HAL_BUSY;
 8007982:	2302      	movs	r3, #2
  }
}
 8007984:	4618      	mov	r0, r3
 8007986:	3714      	adds	r7, #20
 8007988:	46bd      	mov	sp, r7
 800798a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800798e:	4770      	bx	lr

08007990 <UART_EndTransmit_IT>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 8007990:	b580      	push	{r7, lr}
 8007992:	b082      	sub	sp, #8
 8007994:	af00      	add	r7, sp, #0
 8007996:	6078      	str	r0, [r7, #4]
  /* Disable the UART Transmit Complete Interrupt */
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8007998:	687b      	ldr	r3, [r7, #4]
 800799a:	681b      	ldr	r3, [r3, #0]
 800799c:	68da      	ldr	r2, [r3, #12]
 800799e:	687b      	ldr	r3, [r7, #4]
 80079a0:	681b      	ldr	r3, [r3, #0]
 80079a2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80079a6:	60da      	str	r2, [r3, #12]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 80079a8:	687b      	ldr	r3, [r7, #4]
 80079aa:	2220      	movs	r2, #32
 80079ac:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 80079b0:	6878      	ldr	r0, [r7, #4]
 80079b2:	f7ff ff07 	bl	80077c4 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */

  return HAL_OK;
 80079b6:	2300      	movs	r3, #0
}
 80079b8:	4618      	mov	r0, r3
 80079ba:	3708      	adds	r7, #8
 80079bc:	46bd      	mov	sp, r7
 80079be:	bd80      	pop	{r7, pc}

080079c0 <UART_Receive_IT>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
{
 80079c0:	b580      	push	{r7, lr}
 80079c2:	b084      	sub	sp, #16
 80079c4:	af00      	add	r7, sp, #0
 80079c6:	6078      	str	r0, [r7, #4]
  uint16_t *tmp;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80079c8:	687b      	ldr	r3, [r7, #4]
 80079ca:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 80079ce:	b2db      	uxtb	r3, r3
 80079d0:	2b22      	cmp	r3, #34	; 0x22
 80079d2:	d171      	bne.n	8007ab8 <UART_Receive_IT+0xf8>
  {
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 80079d4:	687b      	ldr	r3, [r7, #4]
 80079d6:	689b      	ldr	r3, [r3, #8]
 80079d8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80079dc:	d123      	bne.n	8007a26 <UART_Receive_IT+0x66>
    {
      tmp = (uint16_t *) huart->pRxBuffPtr;
 80079de:	687b      	ldr	r3, [r7, #4]
 80079e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80079e2:	60fb      	str	r3, [r7, #12]
      if (huart->Init.Parity == UART_PARITY_NONE)
 80079e4:	687b      	ldr	r3, [r7, #4]
 80079e6:	691b      	ldr	r3, [r3, #16]
 80079e8:	2b00      	cmp	r3, #0
 80079ea:	d10e      	bne.n	8007a0a <UART_Receive_IT+0x4a>
      {
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 80079ec:	687b      	ldr	r3, [r7, #4]
 80079ee:	681b      	ldr	r3, [r3, #0]
 80079f0:	685b      	ldr	r3, [r3, #4]
 80079f2:	b29b      	uxth	r3, r3
 80079f4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80079f8:	b29a      	uxth	r2, r3
 80079fa:	68fb      	ldr	r3, [r7, #12]
 80079fc:	801a      	strh	r2, [r3, #0]
        huart->pRxBuffPtr += 2U;
 80079fe:	687b      	ldr	r3, [r7, #4]
 8007a00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007a02:	1c9a      	adds	r2, r3, #2
 8007a04:	687b      	ldr	r3, [r7, #4]
 8007a06:	629a      	str	r2, [r3, #40]	; 0x28
 8007a08:	e029      	b.n	8007a5e <UART_Receive_IT+0x9e>
      }
      else
      {
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	681b      	ldr	r3, [r3, #0]
 8007a0e:	685b      	ldr	r3, [r3, #4]
 8007a10:	b29b      	uxth	r3, r3
 8007a12:	b2db      	uxtb	r3, r3
 8007a14:	b29a      	uxth	r2, r3
 8007a16:	68fb      	ldr	r3, [r7, #12]
 8007a18:	801a      	strh	r2, [r3, #0]
        huart->pRxBuffPtr += 1U;
 8007a1a:	687b      	ldr	r3, [r7, #4]
 8007a1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007a1e:	1c5a      	adds	r2, r3, #1
 8007a20:	687b      	ldr	r3, [r7, #4]
 8007a22:	629a      	str	r2, [r3, #40]	; 0x28
 8007a24:	e01b      	b.n	8007a5e <UART_Receive_IT+0x9e>
      }
    }
    else
    {
      if (huart->Init.Parity == UART_PARITY_NONE)
 8007a26:	687b      	ldr	r3, [r7, #4]
 8007a28:	691b      	ldr	r3, [r3, #16]
 8007a2a:	2b00      	cmp	r3, #0
 8007a2c:	d10a      	bne.n	8007a44 <UART_Receive_IT+0x84>
      {
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8007a2e:	687b      	ldr	r3, [r7, #4]
 8007a30:	681b      	ldr	r3, [r3, #0]
 8007a32:	6858      	ldr	r0, [r3, #4]
 8007a34:	687b      	ldr	r3, [r7, #4]
 8007a36:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007a38:	1c59      	adds	r1, r3, #1
 8007a3a:	687a      	ldr	r2, [r7, #4]
 8007a3c:	6291      	str	r1, [r2, #40]	; 0x28
 8007a3e:	b2c2      	uxtb	r2, r0
 8007a40:	701a      	strb	r2, [r3, #0]
 8007a42:	e00c      	b.n	8007a5e <UART_Receive_IT+0x9e>
      }
      else
      {
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8007a44:	687b      	ldr	r3, [r7, #4]
 8007a46:	681b      	ldr	r3, [r3, #0]
 8007a48:	685b      	ldr	r3, [r3, #4]
 8007a4a:	b2da      	uxtb	r2, r3
 8007a4c:	687b      	ldr	r3, [r7, #4]
 8007a4e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007a50:	1c58      	adds	r0, r3, #1
 8007a52:	6879      	ldr	r1, [r7, #4]
 8007a54:	6288      	str	r0, [r1, #40]	; 0x28
 8007a56:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8007a5a:	b2d2      	uxtb	r2, r2
 8007a5c:	701a      	strb	r2, [r3, #0]
      }
    }

    if (--huart->RxXferCount == 0U)
 8007a5e:	687b      	ldr	r3, [r7, #4]
 8007a60:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8007a62:	b29b      	uxth	r3, r3
 8007a64:	3b01      	subs	r3, #1
 8007a66:	b29b      	uxth	r3, r3
 8007a68:	687a      	ldr	r2, [r7, #4]
 8007a6a:	4619      	mov	r1, r3
 8007a6c:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8007a6e:	2b00      	cmp	r3, #0
 8007a70:	d120      	bne.n	8007ab4 <UART_Receive_IT+0xf4>
    {
      /* Disable the UART Data Register not empty Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 8007a72:	687b      	ldr	r3, [r7, #4]
 8007a74:	681b      	ldr	r3, [r3, #0]
 8007a76:	68da      	ldr	r2, [r3, #12]
 8007a78:	687b      	ldr	r3, [r7, #4]
 8007a7a:	681b      	ldr	r3, [r3, #0]
 8007a7c:	f022 0220 	bic.w	r2, r2, #32
 8007a80:	60da      	str	r2, [r3, #12]

      /* Disable the UART Parity Error Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8007a82:	687b      	ldr	r3, [r7, #4]
 8007a84:	681b      	ldr	r3, [r3, #0]
 8007a86:	68da      	ldr	r2, [r3, #12]
 8007a88:	687b      	ldr	r3, [r7, #4]
 8007a8a:	681b      	ldr	r3, [r3, #0]
 8007a8c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007a90:	60da      	str	r2, [r3, #12]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 8007a92:	687b      	ldr	r3, [r7, #4]
 8007a94:	681b      	ldr	r3, [r3, #0]
 8007a96:	695a      	ldr	r2, [r3, #20]
 8007a98:	687b      	ldr	r3, [r7, #4]
 8007a9a:	681b      	ldr	r3, [r3, #0]
 8007a9c:	f022 0201 	bic.w	r2, r2, #1
 8007aa0:	615a      	str	r2, [r3, #20]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 8007aa2:	687b      	ldr	r3, [r7, #4]
 8007aa4:	2220      	movs	r2, #32
 8007aa6:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
      /*Call registered Rx complete callback*/
      huart->RxCpltCallback(huart);
#else
      /*Call legacy weak Rx complete callback*/
      HAL_UART_RxCpltCallback(huart);
 8007aaa:	6878      	ldr	r0, [r7, #4]
 8007aac:	f7f9 fa3c 	bl	8000f28 <HAL_UART_RxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */

      return HAL_OK;
 8007ab0:	2300      	movs	r3, #0
 8007ab2:	e002      	b.n	8007aba <UART_Receive_IT+0xfa>
    }
    return HAL_OK;
 8007ab4:	2300      	movs	r3, #0
 8007ab6:	e000      	b.n	8007aba <UART_Receive_IT+0xfa>
  }
  else
  {
    return HAL_BUSY;
 8007ab8:	2302      	movs	r3, #2
  }
}
 8007aba:	4618      	mov	r0, r3
 8007abc:	3710      	adds	r7, #16
 8007abe:	46bd      	mov	sp, r7
 8007ac0:	bd80      	pop	{r7, pc}
	...

08007ac4 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8007ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ac8:	b085      	sub	sp, #20
 8007aca:	af00      	add	r7, sp, #0
 8007acc:	6078      	str	r0, [r7, #4]
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8007ace:	687b      	ldr	r3, [r7, #4]
 8007ad0:	681b      	ldr	r3, [r3, #0]
 8007ad2:	691b      	ldr	r3, [r3, #16]
 8007ad4:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8007ad8:	687b      	ldr	r3, [r7, #4]
 8007ada:	68da      	ldr	r2, [r3, #12]
 8007adc:	687b      	ldr	r3, [r7, #4]
 8007ade:	681b      	ldr	r3, [r3, #0]
 8007ae0:	430a      	orrs	r2, r1
 8007ae2:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8007ae4:	687b      	ldr	r3, [r7, #4]
 8007ae6:	689a      	ldr	r2, [r3, #8]
 8007ae8:	687b      	ldr	r3, [r7, #4]
 8007aea:	691b      	ldr	r3, [r3, #16]
 8007aec:	431a      	orrs	r2, r3
 8007aee:	687b      	ldr	r3, [r7, #4]
 8007af0:	695b      	ldr	r3, [r3, #20]
 8007af2:	431a      	orrs	r2, r3
 8007af4:	687b      	ldr	r3, [r7, #4]
 8007af6:	69db      	ldr	r3, [r3, #28]
 8007af8:	4313      	orrs	r3, r2
 8007afa:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(huart->Instance->CR1,
 8007afc:	687b      	ldr	r3, [r7, #4]
 8007afe:	681b      	ldr	r3, [r3, #0]
 8007b00:	68db      	ldr	r3, [r3, #12]
 8007b02:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 8007b06:	f023 030c 	bic.w	r3, r3, #12
 8007b0a:	687a      	ldr	r2, [r7, #4]
 8007b0c:	6812      	ldr	r2, [r2, #0]
 8007b0e:	68f9      	ldr	r1, [r7, #12]
 8007b10:	430b      	orrs	r3, r1
 8007b12:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8007b14:	687b      	ldr	r3, [r7, #4]
 8007b16:	681b      	ldr	r3, [r3, #0]
 8007b18:	695b      	ldr	r3, [r3, #20]
 8007b1a:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8007b1e:	687b      	ldr	r3, [r7, #4]
 8007b20:	699a      	ldr	r2, [r3, #24]
 8007b22:	687b      	ldr	r3, [r7, #4]
 8007b24:	681b      	ldr	r3, [r3, #0]
 8007b26:	430a      	orrs	r2, r1
 8007b28:	615a      	str	r2, [r3, #20]

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007b2a:	687b      	ldr	r3, [r7, #4]
 8007b2c:	69db      	ldr	r3, [r3, #28]
 8007b2e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007b32:	f040 818b 	bne.w	8007e4c <UART_SetConfig+0x388>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8007b36:	687b      	ldr	r3, [r7, #4]
 8007b38:	681b      	ldr	r3, [r3, #0]
 8007b3a:	4ac1      	ldr	r2, [pc, #772]	; (8007e40 <UART_SetConfig+0x37c>)
 8007b3c:	4293      	cmp	r3, r2
 8007b3e:	d005      	beq.n	8007b4c <UART_SetConfig+0x88>
 8007b40:	687b      	ldr	r3, [r7, #4]
 8007b42:	681b      	ldr	r3, [r3, #0]
 8007b44:	4abf      	ldr	r2, [pc, #764]	; (8007e44 <UART_SetConfig+0x380>)
 8007b46:	4293      	cmp	r3, r2
 8007b48:	f040 80bd 	bne.w	8007cc6 <UART_SetConfig+0x202>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8007b4c:	f7fe f9fe 	bl	8005f4c <HAL_RCC_GetPCLK2Freq>
 8007b50:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8007b52:	68bb      	ldr	r3, [r7, #8]
 8007b54:	461d      	mov	r5, r3
 8007b56:	f04f 0600 	mov.w	r6, #0
 8007b5a:	46a8      	mov	r8, r5
 8007b5c:	46b1      	mov	r9, r6
 8007b5e:	eb18 0308 	adds.w	r3, r8, r8
 8007b62:	eb49 0409 	adc.w	r4, r9, r9
 8007b66:	4698      	mov	r8, r3
 8007b68:	46a1      	mov	r9, r4
 8007b6a:	eb18 0805 	adds.w	r8, r8, r5
 8007b6e:	eb49 0906 	adc.w	r9, r9, r6
 8007b72:	f04f 0100 	mov.w	r1, #0
 8007b76:	f04f 0200 	mov.w	r2, #0
 8007b7a:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8007b7e:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8007b82:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8007b86:	4688      	mov	r8, r1
 8007b88:	4691      	mov	r9, r2
 8007b8a:	eb18 0005 	adds.w	r0, r8, r5
 8007b8e:	eb49 0106 	adc.w	r1, r9, r6
 8007b92:	687b      	ldr	r3, [r7, #4]
 8007b94:	685b      	ldr	r3, [r3, #4]
 8007b96:	461d      	mov	r5, r3
 8007b98:	f04f 0600 	mov.w	r6, #0
 8007b9c:	196b      	adds	r3, r5, r5
 8007b9e:	eb46 0406 	adc.w	r4, r6, r6
 8007ba2:	461a      	mov	r2, r3
 8007ba4:	4623      	mov	r3, r4
 8007ba6:	f7f8 fb7b 	bl	80002a0 <__aeabi_uldivmod>
 8007baa:	4603      	mov	r3, r0
 8007bac:	460c      	mov	r4, r1
 8007bae:	461a      	mov	r2, r3
 8007bb0:	4ba5      	ldr	r3, [pc, #660]	; (8007e48 <UART_SetConfig+0x384>)
 8007bb2:	fba3 2302 	umull	r2, r3, r3, r2
 8007bb6:	095b      	lsrs	r3, r3, #5
 8007bb8:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8007bbc:	68bb      	ldr	r3, [r7, #8]
 8007bbe:	461d      	mov	r5, r3
 8007bc0:	f04f 0600 	mov.w	r6, #0
 8007bc4:	46a9      	mov	r9, r5
 8007bc6:	46b2      	mov	sl, r6
 8007bc8:	eb19 0309 	adds.w	r3, r9, r9
 8007bcc:	eb4a 040a 	adc.w	r4, sl, sl
 8007bd0:	4699      	mov	r9, r3
 8007bd2:	46a2      	mov	sl, r4
 8007bd4:	eb19 0905 	adds.w	r9, r9, r5
 8007bd8:	eb4a 0a06 	adc.w	sl, sl, r6
 8007bdc:	f04f 0100 	mov.w	r1, #0
 8007be0:	f04f 0200 	mov.w	r2, #0
 8007be4:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8007be8:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8007bec:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8007bf0:	4689      	mov	r9, r1
 8007bf2:	4692      	mov	sl, r2
 8007bf4:	eb19 0005 	adds.w	r0, r9, r5
 8007bf8:	eb4a 0106 	adc.w	r1, sl, r6
 8007bfc:	687b      	ldr	r3, [r7, #4]
 8007bfe:	685b      	ldr	r3, [r3, #4]
 8007c00:	461d      	mov	r5, r3
 8007c02:	f04f 0600 	mov.w	r6, #0
 8007c06:	196b      	adds	r3, r5, r5
 8007c08:	eb46 0406 	adc.w	r4, r6, r6
 8007c0c:	461a      	mov	r2, r3
 8007c0e:	4623      	mov	r3, r4
 8007c10:	f7f8 fb46 	bl	80002a0 <__aeabi_uldivmod>
 8007c14:	4603      	mov	r3, r0
 8007c16:	460c      	mov	r4, r1
 8007c18:	461a      	mov	r2, r3
 8007c1a:	4b8b      	ldr	r3, [pc, #556]	; (8007e48 <UART_SetConfig+0x384>)
 8007c1c:	fba3 1302 	umull	r1, r3, r3, r2
 8007c20:	095b      	lsrs	r3, r3, #5
 8007c22:	2164      	movs	r1, #100	; 0x64
 8007c24:	fb01 f303 	mul.w	r3, r1, r3
 8007c28:	1ad3      	subs	r3, r2, r3
 8007c2a:	00db      	lsls	r3, r3, #3
 8007c2c:	3332      	adds	r3, #50	; 0x32
 8007c2e:	4a86      	ldr	r2, [pc, #536]	; (8007e48 <UART_SetConfig+0x384>)
 8007c30:	fba2 2303 	umull	r2, r3, r2, r3
 8007c34:	095b      	lsrs	r3, r3, #5
 8007c36:	005b      	lsls	r3, r3, #1
 8007c38:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8007c3c:	4498      	add	r8, r3
 8007c3e:	68bb      	ldr	r3, [r7, #8]
 8007c40:	461d      	mov	r5, r3
 8007c42:	f04f 0600 	mov.w	r6, #0
 8007c46:	46a9      	mov	r9, r5
 8007c48:	46b2      	mov	sl, r6
 8007c4a:	eb19 0309 	adds.w	r3, r9, r9
 8007c4e:	eb4a 040a 	adc.w	r4, sl, sl
 8007c52:	4699      	mov	r9, r3
 8007c54:	46a2      	mov	sl, r4
 8007c56:	eb19 0905 	adds.w	r9, r9, r5
 8007c5a:	eb4a 0a06 	adc.w	sl, sl, r6
 8007c5e:	f04f 0100 	mov.w	r1, #0
 8007c62:	f04f 0200 	mov.w	r2, #0
 8007c66:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8007c6a:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8007c6e:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8007c72:	4689      	mov	r9, r1
 8007c74:	4692      	mov	sl, r2
 8007c76:	eb19 0005 	adds.w	r0, r9, r5
 8007c7a:	eb4a 0106 	adc.w	r1, sl, r6
 8007c7e:	687b      	ldr	r3, [r7, #4]
 8007c80:	685b      	ldr	r3, [r3, #4]
 8007c82:	461d      	mov	r5, r3
 8007c84:	f04f 0600 	mov.w	r6, #0
 8007c88:	196b      	adds	r3, r5, r5
 8007c8a:	eb46 0406 	adc.w	r4, r6, r6
 8007c8e:	461a      	mov	r2, r3
 8007c90:	4623      	mov	r3, r4
 8007c92:	f7f8 fb05 	bl	80002a0 <__aeabi_uldivmod>
 8007c96:	4603      	mov	r3, r0
 8007c98:	460c      	mov	r4, r1
 8007c9a:	461a      	mov	r2, r3
 8007c9c:	4b6a      	ldr	r3, [pc, #424]	; (8007e48 <UART_SetConfig+0x384>)
 8007c9e:	fba3 1302 	umull	r1, r3, r3, r2
 8007ca2:	095b      	lsrs	r3, r3, #5
 8007ca4:	2164      	movs	r1, #100	; 0x64
 8007ca6:	fb01 f303 	mul.w	r3, r1, r3
 8007caa:	1ad3      	subs	r3, r2, r3
 8007cac:	00db      	lsls	r3, r3, #3
 8007cae:	3332      	adds	r3, #50	; 0x32
 8007cb0:	4a65      	ldr	r2, [pc, #404]	; (8007e48 <UART_SetConfig+0x384>)
 8007cb2:	fba2 2303 	umull	r2, r3, r2, r3
 8007cb6:	095b      	lsrs	r3, r3, #5
 8007cb8:	f003 0207 	and.w	r2, r3, #7
 8007cbc:	687b      	ldr	r3, [r7, #4]
 8007cbe:	681b      	ldr	r3, [r3, #0]
 8007cc0:	4442      	add	r2, r8
 8007cc2:	609a      	str	r2, [r3, #8]
 8007cc4:	e26f      	b.n	80081a6 <UART_SetConfig+0x6e2>
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 8007cc6:	f7fe f92d 	bl	8005f24 <HAL_RCC_GetPCLK1Freq>
 8007cca:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8007ccc:	68bb      	ldr	r3, [r7, #8]
 8007cce:	461d      	mov	r5, r3
 8007cd0:	f04f 0600 	mov.w	r6, #0
 8007cd4:	46a8      	mov	r8, r5
 8007cd6:	46b1      	mov	r9, r6
 8007cd8:	eb18 0308 	adds.w	r3, r8, r8
 8007cdc:	eb49 0409 	adc.w	r4, r9, r9
 8007ce0:	4698      	mov	r8, r3
 8007ce2:	46a1      	mov	r9, r4
 8007ce4:	eb18 0805 	adds.w	r8, r8, r5
 8007ce8:	eb49 0906 	adc.w	r9, r9, r6
 8007cec:	f04f 0100 	mov.w	r1, #0
 8007cf0:	f04f 0200 	mov.w	r2, #0
 8007cf4:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8007cf8:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8007cfc:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8007d00:	4688      	mov	r8, r1
 8007d02:	4691      	mov	r9, r2
 8007d04:	eb18 0005 	adds.w	r0, r8, r5
 8007d08:	eb49 0106 	adc.w	r1, r9, r6
 8007d0c:	687b      	ldr	r3, [r7, #4]
 8007d0e:	685b      	ldr	r3, [r3, #4]
 8007d10:	461d      	mov	r5, r3
 8007d12:	f04f 0600 	mov.w	r6, #0
 8007d16:	196b      	adds	r3, r5, r5
 8007d18:	eb46 0406 	adc.w	r4, r6, r6
 8007d1c:	461a      	mov	r2, r3
 8007d1e:	4623      	mov	r3, r4
 8007d20:	f7f8 fabe 	bl	80002a0 <__aeabi_uldivmod>
 8007d24:	4603      	mov	r3, r0
 8007d26:	460c      	mov	r4, r1
 8007d28:	461a      	mov	r2, r3
 8007d2a:	4b47      	ldr	r3, [pc, #284]	; (8007e48 <UART_SetConfig+0x384>)
 8007d2c:	fba3 2302 	umull	r2, r3, r3, r2
 8007d30:	095b      	lsrs	r3, r3, #5
 8007d32:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8007d36:	68bb      	ldr	r3, [r7, #8]
 8007d38:	461d      	mov	r5, r3
 8007d3a:	f04f 0600 	mov.w	r6, #0
 8007d3e:	46a9      	mov	r9, r5
 8007d40:	46b2      	mov	sl, r6
 8007d42:	eb19 0309 	adds.w	r3, r9, r9
 8007d46:	eb4a 040a 	adc.w	r4, sl, sl
 8007d4a:	4699      	mov	r9, r3
 8007d4c:	46a2      	mov	sl, r4
 8007d4e:	eb19 0905 	adds.w	r9, r9, r5
 8007d52:	eb4a 0a06 	adc.w	sl, sl, r6
 8007d56:	f04f 0100 	mov.w	r1, #0
 8007d5a:	f04f 0200 	mov.w	r2, #0
 8007d5e:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8007d62:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8007d66:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8007d6a:	4689      	mov	r9, r1
 8007d6c:	4692      	mov	sl, r2
 8007d6e:	eb19 0005 	adds.w	r0, r9, r5
 8007d72:	eb4a 0106 	adc.w	r1, sl, r6
 8007d76:	687b      	ldr	r3, [r7, #4]
 8007d78:	685b      	ldr	r3, [r3, #4]
 8007d7a:	461d      	mov	r5, r3
 8007d7c:	f04f 0600 	mov.w	r6, #0
 8007d80:	196b      	adds	r3, r5, r5
 8007d82:	eb46 0406 	adc.w	r4, r6, r6
 8007d86:	461a      	mov	r2, r3
 8007d88:	4623      	mov	r3, r4
 8007d8a:	f7f8 fa89 	bl	80002a0 <__aeabi_uldivmod>
 8007d8e:	4603      	mov	r3, r0
 8007d90:	460c      	mov	r4, r1
 8007d92:	461a      	mov	r2, r3
 8007d94:	4b2c      	ldr	r3, [pc, #176]	; (8007e48 <UART_SetConfig+0x384>)
 8007d96:	fba3 1302 	umull	r1, r3, r3, r2
 8007d9a:	095b      	lsrs	r3, r3, #5
 8007d9c:	2164      	movs	r1, #100	; 0x64
 8007d9e:	fb01 f303 	mul.w	r3, r1, r3
 8007da2:	1ad3      	subs	r3, r2, r3
 8007da4:	00db      	lsls	r3, r3, #3
 8007da6:	3332      	adds	r3, #50	; 0x32
 8007da8:	4a27      	ldr	r2, [pc, #156]	; (8007e48 <UART_SetConfig+0x384>)
 8007daa:	fba2 2303 	umull	r2, r3, r2, r3
 8007dae:	095b      	lsrs	r3, r3, #5
 8007db0:	005b      	lsls	r3, r3, #1
 8007db2:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8007db6:	4498      	add	r8, r3
 8007db8:	68bb      	ldr	r3, [r7, #8]
 8007dba:	461d      	mov	r5, r3
 8007dbc:	f04f 0600 	mov.w	r6, #0
 8007dc0:	46a9      	mov	r9, r5
 8007dc2:	46b2      	mov	sl, r6
 8007dc4:	eb19 0309 	adds.w	r3, r9, r9
 8007dc8:	eb4a 040a 	adc.w	r4, sl, sl
 8007dcc:	4699      	mov	r9, r3
 8007dce:	46a2      	mov	sl, r4
 8007dd0:	eb19 0905 	adds.w	r9, r9, r5
 8007dd4:	eb4a 0a06 	adc.w	sl, sl, r6
 8007dd8:	f04f 0100 	mov.w	r1, #0
 8007ddc:	f04f 0200 	mov.w	r2, #0
 8007de0:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8007de4:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8007de8:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8007dec:	4689      	mov	r9, r1
 8007dee:	4692      	mov	sl, r2
 8007df0:	eb19 0005 	adds.w	r0, r9, r5
 8007df4:	eb4a 0106 	adc.w	r1, sl, r6
 8007df8:	687b      	ldr	r3, [r7, #4]
 8007dfa:	685b      	ldr	r3, [r3, #4]
 8007dfc:	461d      	mov	r5, r3
 8007dfe:	f04f 0600 	mov.w	r6, #0
 8007e02:	196b      	adds	r3, r5, r5
 8007e04:	eb46 0406 	adc.w	r4, r6, r6
 8007e08:	461a      	mov	r2, r3
 8007e0a:	4623      	mov	r3, r4
 8007e0c:	f7f8 fa48 	bl	80002a0 <__aeabi_uldivmod>
 8007e10:	4603      	mov	r3, r0
 8007e12:	460c      	mov	r4, r1
 8007e14:	461a      	mov	r2, r3
 8007e16:	4b0c      	ldr	r3, [pc, #48]	; (8007e48 <UART_SetConfig+0x384>)
 8007e18:	fba3 1302 	umull	r1, r3, r3, r2
 8007e1c:	095b      	lsrs	r3, r3, #5
 8007e1e:	2164      	movs	r1, #100	; 0x64
 8007e20:	fb01 f303 	mul.w	r3, r1, r3
 8007e24:	1ad3      	subs	r3, r2, r3
 8007e26:	00db      	lsls	r3, r3, #3
 8007e28:	3332      	adds	r3, #50	; 0x32
 8007e2a:	4a07      	ldr	r2, [pc, #28]	; (8007e48 <UART_SetConfig+0x384>)
 8007e2c:	fba2 2303 	umull	r2, r3, r2, r3
 8007e30:	095b      	lsrs	r3, r3, #5
 8007e32:	f003 0207 	and.w	r2, r3, #7
 8007e36:	687b      	ldr	r3, [r7, #4]
 8007e38:	681b      	ldr	r3, [r3, #0]
 8007e3a:	4442      	add	r2, r8
 8007e3c:	609a      	str	r2, [r3, #8]
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    }
  }
}
 8007e3e:	e1b2      	b.n	80081a6 <UART_SetConfig+0x6e2>
 8007e40:	40011000 	.word	0x40011000
 8007e44:	40011400 	.word	0x40011400
 8007e48:	51eb851f 	.word	0x51eb851f
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8007e4c:	687b      	ldr	r3, [r7, #4]
 8007e4e:	681b      	ldr	r3, [r3, #0]
 8007e50:	4ad7      	ldr	r2, [pc, #860]	; (80081b0 <UART_SetConfig+0x6ec>)
 8007e52:	4293      	cmp	r3, r2
 8007e54:	d005      	beq.n	8007e62 <UART_SetConfig+0x39e>
 8007e56:	687b      	ldr	r3, [r7, #4]
 8007e58:	681b      	ldr	r3, [r3, #0]
 8007e5a:	4ad6      	ldr	r2, [pc, #856]	; (80081b4 <UART_SetConfig+0x6f0>)
 8007e5c:	4293      	cmp	r3, r2
 8007e5e:	f040 80d1 	bne.w	8008004 <UART_SetConfig+0x540>
      pclk = HAL_RCC_GetPCLK2Freq();
 8007e62:	f7fe f873 	bl	8005f4c <HAL_RCC_GetPCLK2Freq>
 8007e66:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8007e68:	68bb      	ldr	r3, [r7, #8]
 8007e6a:	469a      	mov	sl, r3
 8007e6c:	f04f 0b00 	mov.w	fp, #0
 8007e70:	46d0      	mov	r8, sl
 8007e72:	46d9      	mov	r9, fp
 8007e74:	eb18 0308 	adds.w	r3, r8, r8
 8007e78:	eb49 0409 	adc.w	r4, r9, r9
 8007e7c:	4698      	mov	r8, r3
 8007e7e:	46a1      	mov	r9, r4
 8007e80:	eb18 080a 	adds.w	r8, r8, sl
 8007e84:	eb49 090b 	adc.w	r9, r9, fp
 8007e88:	f04f 0100 	mov.w	r1, #0
 8007e8c:	f04f 0200 	mov.w	r2, #0
 8007e90:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8007e94:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8007e98:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8007e9c:	4688      	mov	r8, r1
 8007e9e:	4691      	mov	r9, r2
 8007ea0:	eb1a 0508 	adds.w	r5, sl, r8
 8007ea4:	eb4b 0609 	adc.w	r6, fp, r9
 8007ea8:	687b      	ldr	r3, [r7, #4]
 8007eaa:	685b      	ldr	r3, [r3, #4]
 8007eac:	4619      	mov	r1, r3
 8007eae:	f04f 0200 	mov.w	r2, #0
 8007eb2:	f04f 0300 	mov.w	r3, #0
 8007eb6:	f04f 0400 	mov.w	r4, #0
 8007eba:	0094      	lsls	r4, r2, #2
 8007ebc:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8007ec0:	008b      	lsls	r3, r1, #2
 8007ec2:	461a      	mov	r2, r3
 8007ec4:	4623      	mov	r3, r4
 8007ec6:	4628      	mov	r0, r5
 8007ec8:	4631      	mov	r1, r6
 8007eca:	f7f8 f9e9 	bl	80002a0 <__aeabi_uldivmod>
 8007ece:	4603      	mov	r3, r0
 8007ed0:	460c      	mov	r4, r1
 8007ed2:	461a      	mov	r2, r3
 8007ed4:	4bb8      	ldr	r3, [pc, #736]	; (80081b8 <UART_SetConfig+0x6f4>)
 8007ed6:	fba3 2302 	umull	r2, r3, r3, r2
 8007eda:	095b      	lsrs	r3, r3, #5
 8007edc:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8007ee0:	68bb      	ldr	r3, [r7, #8]
 8007ee2:	469b      	mov	fp, r3
 8007ee4:	f04f 0c00 	mov.w	ip, #0
 8007ee8:	46d9      	mov	r9, fp
 8007eea:	46e2      	mov	sl, ip
 8007eec:	eb19 0309 	adds.w	r3, r9, r9
 8007ef0:	eb4a 040a 	adc.w	r4, sl, sl
 8007ef4:	4699      	mov	r9, r3
 8007ef6:	46a2      	mov	sl, r4
 8007ef8:	eb19 090b 	adds.w	r9, r9, fp
 8007efc:	eb4a 0a0c 	adc.w	sl, sl, ip
 8007f00:	f04f 0100 	mov.w	r1, #0
 8007f04:	f04f 0200 	mov.w	r2, #0
 8007f08:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8007f0c:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8007f10:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8007f14:	4689      	mov	r9, r1
 8007f16:	4692      	mov	sl, r2
 8007f18:	eb1b 0509 	adds.w	r5, fp, r9
 8007f1c:	eb4c 060a 	adc.w	r6, ip, sl
 8007f20:	687b      	ldr	r3, [r7, #4]
 8007f22:	685b      	ldr	r3, [r3, #4]
 8007f24:	4619      	mov	r1, r3
 8007f26:	f04f 0200 	mov.w	r2, #0
 8007f2a:	f04f 0300 	mov.w	r3, #0
 8007f2e:	f04f 0400 	mov.w	r4, #0
 8007f32:	0094      	lsls	r4, r2, #2
 8007f34:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8007f38:	008b      	lsls	r3, r1, #2
 8007f3a:	461a      	mov	r2, r3
 8007f3c:	4623      	mov	r3, r4
 8007f3e:	4628      	mov	r0, r5
 8007f40:	4631      	mov	r1, r6
 8007f42:	f7f8 f9ad 	bl	80002a0 <__aeabi_uldivmod>
 8007f46:	4603      	mov	r3, r0
 8007f48:	460c      	mov	r4, r1
 8007f4a:	461a      	mov	r2, r3
 8007f4c:	4b9a      	ldr	r3, [pc, #616]	; (80081b8 <UART_SetConfig+0x6f4>)
 8007f4e:	fba3 1302 	umull	r1, r3, r3, r2
 8007f52:	095b      	lsrs	r3, r3, #5
 8007f54:	2164      	movs	r1, #100	; 0x64
 8007f56:	fb01 f303 	mul.w	r3, r1, r3
 8007f5a:	1ad3      	subs	r3, r2, r3
 8007f5c:	011b      	lsls	r3, r3, #4
 8007f5e:	3332      	adds	r3, #50	; 0x32
 8007f60:	4a95      	ldr	r2, [pc, #596]	; (80081b8 <UART_SetConfig+0x6f4>)
 8007f62:	fba2 2303 	umull	r2, r3, r2, r3
 8007f66:	095b      	lsrs	r3, r3, #5
 8007f68:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8007f6c:	4498      	add	r8, r3
 8007f6e:	68bb      	ldr	r3, [r7, #8]
 8007f70:	469b      	mov	fp, r3
 8007f72:	f04f 0c00 	mov.w	ip, #0
 8007f76:	46d9      	mov	r9, fp
 8007f78:	46e2      	mov	sl, ip
 8007f7a:	eb19 0309 	adds.w	r3, r9, r9
 8007f7e:	eb4a 040a 	adc.w	r4, sl, sl
 8007f82:	4699      	mov	r9, r3
 8007f84:	46a2      	mov	sl, r4
 8007f86:	eb19 090b 	adds.w	r9, r9, fp
 8007f8a:	eb4a 0a0c 	adc.w	sl, sl, ip
 8007f8e:	f04f 0100 	mov.w	r1, #0
 8007f92:	f04f 0200 	mov.w	r2, #0
 8007f96:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8007f9a:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8007f9e:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8007fa2:	4689      	mov	r9, r1
 8007fa4:	4692      	mov	sl, r2
 8007fa6:	eb1b 0509 	adds.w	r5, fp, r9
 8007faa:	eb4c 060a 	adc.w	r6, ip, sl
 8007fae:	687b      	ldr	r3, [r7, #4]
 8007fb0:	685b      	ldr	r3, [r3, #4]
 8007fb2:	4619      	mov	r1, r3
 8007fb4:	f04f 0200 	mov.w	r2, #0
 8007fb8:	f04f 0300 	mov.w	r3, #0
 8007fbc:	f04f 0400 	mov.w	r4, #0
 8007fc0:	0094      	lsls	r4, r2, #2
 8007fc2:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8007fc6:	008b      	lsls	r3, r1, #2
 8007fc8:	461a      	mov	r2, r3
 8007fca:	4623      	mov	r3, r4
 8007fcc:	4628      	mov	r0, r5
 8007fce:	4631      	mov	r1, r6
 8007fd0:	f7f8 f966 	bl	80002a0 <__aeabi_uldivmod>
 8007fd4:	4603      	mov	r3, r0
 8007fd6:	460c      	mov	r4, r1
 8007fd8:	461a      	mov	r2, r3
 8007fda:	4b77      	ldr	r3, [pc, #476]	; (80081b8 <UART_SetConfig+0x6f4>)
 8007fdc:	fba3 1302 	umull	r1, r3, r3, r2
 8007fe0:	095b      	lsrs	r3, r3, #5
 8007fe2:	2164      	movs	r1, #100	; 0x64
 8007fe4:	fb01 f303 	mul.w	r3, r1, r3
 8007fe8:	1ad3      	subs	r3, r2, r3
 8007fea:	011b      	lsls	r3, r3, #4
 8007fec:	3332      	adds	r3, #50	; 0x32
 8007fee:	4a72      	ldr	r2, [pc, #456]	; (80081b8 <UART_SetConfig+0x6f4>)
 8007ff0:	fba2 2303 	umull	r2, r3, r2, r3
 8007ff4:	095b      	lsrs	r3, r3, #5
 8007ff6:	f003 020f 	and.w	r2, r3, #15
 8007ffa:	687b      	ldr	r3, [r7, #4]
 8007ffc:	681b      	ldr	r3, [r3, #0]
 8007ffe:	4442      	add	r2, r8
 8008000:	609a      	str	r2, [r3, #8]
 8008002:	e0d0      	b.n	80081a6 <UART_SetConfig+0x6e2>
      pclk = HAL_RCC_GetPCLK1Freq();
 8008004:	f7fd ff8e 	bl	8005f24 <HAL_RCC_GetPCLK1Freq>
 8008008:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800800a:	68bb      	ldr	r3, [r7, #8]
 800800c:	469a      	mov	sl, r3
 800800e:	f04f 0b00 	mov.w	fp, #0
 8008012:	46d0      	mov	r8, sl
 8008014:	46d9      	mov	r9, fp
 8008016:	eb18 0308 	adds.w	r3, r8, r8
 800801a:	eb49 0409 	adc.w	r4, r9, r9
 800801e:	4698      	mov	r8, r3
 8008020:	46a1      	mov	r9, r4
 8008022:	eb18 080a 	adds.w	r8, r8, sl
 8008026:	eb49 090b 	adc.w	r9, r9, fp
 800802a:	f04f 0100 	mov.w	r1, #0
 800802e:	f04f 0200 	mov.w	r2, #0
 8008032:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8008036:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 800803a:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 800803e:	4688      	mov	r8, r1
 8008040:	4691      	mov	r9, r2
 8008042:	eb1a 0508 	adds.w	r5, sl, r8
 8008046:	eb4b 0609 	adc.w	r6, fp, r9
 800804a:	687b      	ldr	r3, [r7, #4]
 800804c:	685b      	ldr	r3, [r3, #4]
 800804e:	4619      	mov	r1, r3
 8008050:	f04f 0200 	mov.w	r2, #0
 8008054:	f04f 0300 	mov.w	r3, #0
 8008058:	f04f 0400 	mov.w	r4, #0
 800805c:	0094      	lsls	r4, r2, #2
 800805e:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8008062:	008b      	lsls	r3, r1, #2
 8008064:	461a      	mov	r2, r3
 8008066:	4623      	mov	r3, r4
 8008068:	4628      	mov	r0, r5
 800806a:	4631      	mov	r1, r6
 800806c:	f7f8 f918 	bl	80002a0 <__aeabi_uldivmod>
 8008070:	4603      	mov	r3, r0
 8008072:	460c      	mov	r4, r1
 8008074:	461a      	mov	r2, r3
 8008076:	4b50      	ldr	r3, [pc, #320]	; (80081b8 <UART_SetConfig+0x6f4>)
 8008078:	fba3 2302 	umull	r2, r3, r3, r2
 800807c:	095b      	lsrs	r3, r3, #5
 800807e:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8008082:	68bb      	ldr	r3, [r7, #8]
 8008084:	469b      	mov	fp, r3
 8008086:	f04f 0c00 	mov.w	ip, #0
 800808a:	46d9      	mov	r9, fp
 800808c:	46e2      	mov	sl, ip
 800808e:	eb19 0309 	adds.w	r3, r9, r9
 8008092:	eb4a 040a 	adc.w	r4, sl, sl
 8008096:	4699      	mov	r9, r3
 8008098:	46a2      	mov	sl, r4
 800809a:	eb19 090b 	adds.w	r9, r9, fp
 800809e:	eb4a 0a0c 	adc.w	sl, sl, ip
 80080a2:	f04f 0100 	mov.w	r1, #0
 80080a6:	f04f 0200 	mov.w	r2, #0
 80080aa:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80080ae:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80080b2:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80080b6:	4689      	mov	r9, r1
 80080b8:	4692      	mov	sl, r2
 80080ba:	eb1b 0509 	adds.w	r5, fp, r9
 80080be:	eb4c 060a 	adc.w	r6, ip, sl
 80080c2:	687b      	ldr	r3, [r7, #4]
 80080c4:	685b      	ldr	r3, [r3, #4]
 80080c6:	4619      	mov	r1, r3
 80080c8:	f04f 0200 	mov.w	r2, #0
 80080cc:	f04f 0300 	mov.w	r3, #0
 80080d0:	f04f 0400 	mov.w	r4, #0
 80080d4:	0094      	lsls	r4, r2, #2
 80080d6:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 80080da:	008b      	lsls	r3, r1, #2
 80080dc:	461a      	mov	r2, r3
 80080de:	4623      	mov	r3, r4
 80080e0:	4628      	mov	r0, r5
 80080e2:	4631      	mov	r1, r6
 80080e4:	f7f8 f8dc 	bl	80002a0 <__aeabi_uldivmod>
 80080e8:	4603      	mov	r3, r0
 80080ea:	460c      	mov	r4, r1
 80080ec:	461a      	mov	r2, r3
 80080ee:	4b32      	ldr	r3, [pc, #200]	; (80081b8 <UART_SetConfig+0x6f4>)
 80080f0:	fba3 1302 	umull	r1, r3, r3, r2
 80080f4:	095b      	lsrs	r3, r3, #5
 80080f6:	2164      	movs	r1, #100	; 0x64
 80080f8:	fb01 f303 	mul.w	r3, r1, r3
 80080fc:	1ad3      	subs	r3, r2, r3
 80080fe:	011b      	lsls	r3, r3, #4
 8008100:	3332      	adds	r3, #50	; 0x32
 8008102:	4a2d      	ldr	r2, [pc, #180]	; (80081b8 <UART_SetConfig+0x6f4>)
 8008104:	fba2 2303 	umull	r2, r3, r2, r3
 8008108:	095b      	lsrs	r3, r3, #5
 800810a:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800810e:	4498      	add	r8, r3
 8008110:	68bb      	ldr	r3, [r7, #8]
 8008112:	469b      	mov	fp, r3
 8008114:	f04f 0c00 	mov.w	ip, #0
 8008118:	46d9      	mov	r9, fp
 800811a:	46e2      	mov	sl, ip
 800811c:	eb19 0309 	adds.w	r3, r9, r9
 8008120:	eb4a 040a 	adc.w	r4, sl, sl
 8008124:	4699      	mov	r9, r3
 8008126:	46a2      	mov	sl, r4
 8008128:	eb19 090b 	adds.w	r9, r9, fp
 800812c:	eb4a 0a0c 	adc.w	sl, sl, ip
 8008130:	f04f 0100 	mov.w	r1, #0
 8008134:	f04f 0200 	mov.w	r2, #0
 8008138:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800813c:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8008140:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8008144:	4689      	mov	r9, r1
 8008146:	4692      	mov	sl, r2
 8008148:	eb1b 0509 	adds.w	r5, fp, r9
 800814c:	eb4c 060a 	adc.w	r6, ip, sl
 8008150:	687b      	ldr	r3, [r7, #4]
 8008152:	685b      	ldr	r3, [r3, #4]
 8008154:	4619      	mov	r1, r3
 8008156:	f04f 0200 	mov.w	r2, #0
 800815a:	f04f 0300 	mov.w	r3, #0
 800815e:	f04f 0400 	mov.w	r4, #0
 8008162:	0094      	lsls	r4, r2, #2
 8008164:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8008168:	008b      	lsls	r3, r1, #2
 800816a:	461a      	mov	r2, r3
 800816c:	4623      	mov	r3, r4
 800816e:	4628      	mov	r0, r5
 8008170:	4631      	mov	r1, r6
 8008172:	f7f8 f895 	bl	80002a0 <__aeabi_uldivmod>
 8008176:	4603      	mov	r3, r0
 8008178:	460c      	mov	r4, r1
 800817a:	461a      	mov	r2, r3
 800817c:	4b0e      	ldr	r3, [pc, #56]	; (80081b8 <UART_SetConfig+0x6f4>)
 800817e:	fba3 1302 	umull	r1, r3, r3, r2
 8008182:	095b      	lsrs	r3, r3, #5
 8008184:	2164      	movs	r1, #100	; 0x64
 8008186:	fb01 f303 	mul.w	r3, r1, r3
 800818a:	1ad3      	subs	r3, r2, r3
 800818c:	011b      	lsls	r3, r3, #4
 800818e:	3332      	adds	r3, #50	; 0x32
 8008190:	4a09      	ldr	r2, [pc, #36]	; (80081b8 <UART_SetConfig+0x6f4>)
 8008192:	fba2 2303 	umull	r2, r3, r2, r3
 8008196:	095b      	lsrs	r3, r3, #5
 8008198:	f003 020f 	and.w	r2, r3, #15
 800819c:	687b      	ldr	r3, [r7, #4]
 800819e:	681b      	ldr	r3, [r3, #0]
 80081a0:	4442      	add	r2, r8
 80081a2:	609a      	str	r2, [r3, #8]
}
 80081a4:	e7ff      	b.n	80081a6 <UART_SetConfig+0x6e2>
 80081a6:	bf00      	nop
 80081a8:	3714      	adds	r7, #20
 80081aa:	46bd      	mov	sp, r7
 80081ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80081b0:	40011000 	.word	0x40011000
 80081b4:	40011400 	.word	0x40011400
 80081b8:	51eb851f 	.word	0x51eb851f

080081bc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80081bc:	b580      	push	{r7, lr}
 80081be:	af00      	add	r7, sp, #0
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80081c0:	f003 f81e 	bl	800b200 <touchgfx_init>
}
 80081c4:	bf00      	nop
 80081c6:	bd80      	pop	{r7, pc}

080081c8 <_ZN8touchgfx12FontProviderD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~FontProvider()
 80081c8:	b480      	push	{r7}
 80081ca:	b083      	sub	sp, #12
 80081cc:	af00      	add	r7, sp, #0
 80081ce:	6078      	str	r0, [r7, #4]
    {
 80081d0:	4a04      	ldr	r2, [pc, #16]	; (80081e4 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 80081d2:	687b      	ldr	r3, [r7, #4]
 80081d4:	601a      	str	r2, [r3, #0]
    }
 80081d6:	687b      	ldr	r3, [r7, #4]
 80081d8:	4618      	mov	r0, r3
 80081da:	370c      	adds	r7, #12
 80081dc:	46bd      	mov	sp, r7
 80081de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081e2:	4770      	bx	lr
 80081e4:	0801c240 	.word	0x0801c240

080081e8 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 80081e8:	b580      	push	{r7, lr}
 80081ea:	b082      	sub	sp, #8
 80081ec:	af00      	add	r7, sp, #0
 80081ee:	6078      	str	r0, [r7, #4]
    }
 80081f0:	6878      	ldr	r0, [r7, #4]
 80081f2:	f7ff ffe9 	bl	80081c8 <_ZN8touchgfx12FontProviderD1Ev>
 80081f6:	2104      	movs	r1, #4
 80081f8:	6878      	ldr	r0, [r7, #4]
 80081fa:	f012 fbc7 	bl	801a98c <_ZdlPvj>
 80081fe:	687b      	ldr	r3, [r7, #4]
 8008200:	4618      	mov	r0, r3
 8008202:	3708      	adds	r7, #8
 8008204:	46bd      	mov	sp, r7
 8008206:	bd80      	pop	{r7, pc}

08008208 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8008208:	b580      	push	{r7, lr}
 800820a:	b082      	sub	sp, #8
 800820c:	af00      	add	r7, sp, #0
 800820e:	6078      	str	r0, [r7, #4]
 8008210:	460b      	mov	r3, r1
 8008212:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8008214:	887b      	ldrh	r3, [r7, #2]
 8008216:	2b01      	cmp	r3, #1
 8008218:	d008      	beq.n	800822c <_ZN23ApplicationFontProvider7getFontEt+0x24>
 800821a:	2b02      	cmp	r3, #2
 800821c:	d00b      	beq.n	8008236 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 800821e:	2b00      	cmp	r3, #0
 8008220:	d10e      	bne.n	8008240 <_ZN23ApplicationFontProvider7getFontEt+0x38>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8008222:	f001 fbfd 	bl	8009a20 <_ZN17TypedTextDatabase8getFontsEv>
 8008226:	4603      	mov	r3, r0
 8008228:	681b      	ldr	r3, [r3, #0]
 800822a:	e00a      	b.n	8008242 <_ZN23ApplicationFontProvider7getFontEt+0x3a>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800822c:	f001 fbf8 	bl	8009a20 <_ZN17TypedTextDatabase8getFontsEv>
 8008230:	4603      	mov	r3, r0
 8008232:	685b      	ldr	r3, [r3, #4]
 8008234:	e005      	b.n	8008242 <_ZN23ApplicationFontProvider7getFontEt+0x3a>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8008236:	f001 fbf3 	bl	8009a20 <_ZN17TypedTextDatabase8getFontsEv>
 800823a:	4603      	mov	r3, r0
 800823c:	689b      	ldr	r3, [r3, #8]
 800823e:	e000      	b.n	8008242 <_ZN23ApplicationFontProvider7getFontEt+0x3a>
    default:
        return 0;
 8008240:	2300      	movs	r3, #0
    }
}
 8008242:	4618      	mov	r0, r3
 8008244:	3708      	adds	r7, #8
 8008246:	46bd      	mov	sp, r7
 8008248:	bd80      	pop	{r7, pc}
	...

0800824c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800824c:	b580      	push	{r7, lr}
 800824e:	b082      	sub	sp, #8
 8008250:	af00      	add	r7, sp, #0
 8008252:	6078      	str	r0, [r7, #4]
 8008254:	4a05      	ldr	r2, [pc, #20]	; (800826c <_ZN23ApplicationFontProviderD1Ev+0x20>)
 8008256:	687b      	ldr	r3, [r7, #4]
 8008258:	601a      	str	r2, [r3, #0]
 800825a:	687b      	ldr	r3, [r7, #4]
 800825c:	4618      	mov	r0, r3
 800825e:	f7ff ffb3 	bl	80081c8 <_ZN8touchgfx12FontProviderD1Ev>
 8008262:	687b      	ldr	r3, [r7, #4]
 8008264:	4618      	mov	r0, r3
 8008266:	3708      	adds	r7, #8
 8008268:	46bd      	mov	sp, r7
 800826a:	bd80      	pop	{r7, pc}
 800826c:	0801c22c 	.word	0x0801c22c

08008270 <_ZN23ApplicationFontProviderD0Ev>:
 8008270:	b580      	push	{r7, lr}
 8008272:	b082      	sub	sp, #8
 8008274:	af00      	add	r7, sp, #0
 8008276:	6078      	str	r0, [r7, #4]
 8008278:	6878      	ldr	r0, [r7, #4]
 800827a:	f7ff ffe7 	bl	800824c <_ZN23ApplicationFontProviderD1Ev>
 800827e:	2104      	movs	r1, #4
 8008280:	6878      	ldr	r0, [r7, #4]
 8008282:	f012 fb83 	bl	801a98c <_ZdlPvj>
 8008286:	687b      	ldr	r3, [r7, #4]
 8008288:	4618      	mov	r0, r3
 800828a:	3708      	adds	r7, #8
 800828c:	46bd      	mov	sp, r7
 800828e:	bd80      	pop	{r7, pc}

08008290 <_ZN8touchgfx4FontD1Ev>:
 *        It provides utility functions such as obtaining string width and font height.
 */
class Font
{
public:
    virtual ~Font() { }
 8008290:	b480      	push	{r7}
 8008292:	b083      	sub	sp, #12
 8008294:	af00      	add	r7, sp, #0
 8008296:	6078      	str	r0, [r7, #4]
 8008298:	4a04      	ldr	r2, [pc, #16]	; (80082ac <_ZN8touchgfx4FontD1Ev+0x1c>)
 800829a:	687b      	ldr	r3, [r7, #4]
 800829c:	601a      	str	r2, [r3, #0]
 800829e:	687b      	ldr	r3, [r7, #4]
 80082a0:	4618      	mov	r0, r3
 80082a2:	370c      	adds	r7, #12
 80082a4:	46bd      	mov	sp, r7
 80082a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082aa:	4770      	bx	lr
 80082ac:	0801d838 	.word	0x0801d838

080082b0 <_ZN8touchgfx4FontD0Ev>:
 80082b0:	b580      	push	{r7, lr}
 80082b2:	b082      	sub	sp, #8
 80082b4:	af00      	add	r7, sp, #0
 80082b6:	6078      	str	r0, [r7, #4]
 80082b8:	6878      	ldr	r0, [r7, #4]
 80082ba:	f7ff ffe9 	bl	8008290 <_ZN8touchgfx4FontD1Ev>
 80082be:	2110      	movs	r1, #16
 80082c0:	6878      	ldr	r0, [r7, #4]
 80082c2:	f012 fb63 	bl	801a98c <_ZdlPvj>
 80082c6:	687b      	ldr	r3, [r7, #4]
 80082c8:	4618      	mov	r0, r3
 80082ca:	3708      	adds	r7, #8
 80082cc:	46bd      	mov	sp, r7
 80082ce:	bd80      	pop	{r7, pc}

080082d0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getGlyph
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80082d0:	b590      	push	{r4, r7, lr}
 80082d2:	b087      	sub	sp, #28
 80082d4:	af00      	add	r7, sp, #0
 80082d6:	6078      	str	r0, [r7, #4]
 80082d8:	460b      	mov	r3, r1
 80082da:	807b      	strh	r3, [r7, #2]
    {
        const uint8_t* dummyPixelDataPointer = 0;
 80082dc:	2300      	movs	r3, #0
 80082de:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 80082e0:	2300      	movs	r3, #0
 80082e2:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80082e4:	687b      	ldr	r3, [r7, #4]
 80082e6:	681b      	ldr	r3, [r3, #0]
 80082e8:	3308      	adds	r3, #8
 80082ea:	681c      	ldr	r4, [r3, #0]
 80082ec:	f107 030f 	add.w	r3, r7, #15
 80082f0:	f107 0210 	add.w	r2, r7, #16
 80082f4:	8879      	ldrh	r1, [r7, #2]
 80082f6:	6878      	ldr	r0, [r7, #4]
 80082f8:	47a0      	blx	r4
 80082fa:	6178      	str	r0, [r7, #20]
        return glyph;
 80082fc:	697b      	ldr	r3, [r7, #20]
    }
 80082fe:	4618      	mov	r0, r3
 8008300:	371c      	adds	r7, #28
 8008302:	46bd      	mov	sp, r7
 8008304:	bd90      	pop	{r4, r7, pc}

08008306 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     *        character, use the glyph for the character returned by this function. If 0 (zero)
     *        is returned, there is no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8008306:	b480      	push	{r7}
 8008308:	b083      	sub	sp, #12
 800830a:	af00      	add	r7, sp, #0
 800830c:	6078      	str	r0, [r7, #4]
    {
        return falllbackCharacter;
 800830e:	687b      	ldr	r3, [r7, #4]
 8008310:	895b      	ldrh	r3, [r3, #10]
    }
 8008312:	4618      	mov	r0, r3
 8008314:	370c      	adds	r7, #12
 8008316:	46bd      	mov	sp, r7
 8008318:	f85d 7b04 	ldr.w	r7, [sp], #4
 800831c:	4770      	bx	lr

0800831e <_ZNK8touchgfx4Font15getEllipsisCharEv>:
    *        Gets ellipsis character for the given font. This is the character which is used
    *        when truncating long lines.
    *
    * @return The ellipsis character for the typography.
    */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800831e:	b480      	push	{r7}
 8008320:	b083      	sub	sp, #12
 8008322:	af00      	add	r7, sp, #0
 8008324:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8008326:	687b      	ldr	r3, [r7, #4]
 8008328:	899b      	ldrh	r3, [r3, #12]
    }
 800832a:	4618      	mov	r0, r3
 800832c:	370c      	adds	r7, #12
 800832e:	46bd      	mov	sp, r7
 8008330:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008334:	4770      	bx	lr

08008336 <_ZNK8touchgfx4Font13getFontHeightEv>:
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getMinimumTextHeight for this.
     *
     * @return The height in pixels of this font.
     */
    virtual uint16_t getFontHeight() const
 8008336:	b480      	push	{r7}
 8008338:	b083      	sub	sp, #12
 800833a:	af00      	add	r7, sp, #0
 800833c:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800833e:	687b      	ldr	r3, [r7, #4]
 8008340:	889b      	ldrh	r3, [r3, #4]
    }
 8008342:	4618      	mov	r0, r3
 8008344:	370c      	adds	r7, #12
 8008346:	46bd      	mov	sp, r7
 8008348:	f85d 7b04 	ldr.w	r7, [sp], #4
 800834c:	4770      	bx	lr

0800834e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *        into account that certain characters (eg 'g') have pixels below the baseline,
     *        thus making the text height larger than the font height.
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    virtual uint16_t getMinimumTextHeight() const
 800834e:	b480      	push	{r7}
 8008350:	b083      	sub	sp, #12
 8008352:	af00      	add	r7, sp, #0
 8008354:	6078      	str	r0, [r7, #4]
    {
        return fontHeight + pixelsBelowBaseline;
 8008356:	687b      	ldr	r3, [r7, #4]
 8008358:	889a      	ldrh	r2, [r3, #4]
 800835a:	687b      	ldr	r3, [r7, #4]
 800835c:	799b      	ldrb	r3, [r3, #6]
 800835e:	b29b      	uxth	r3, r3
 8008360:	4413      	add	r3, r2
 8008362:	b29b      	uxth	r3, r3
    }
 8008364:	4618      	mov	r0, r3
 8008366:	370c      	adds	r7, #12
 8008368:	46bd      	mov	sp, r7
 800836a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800836e:	4770      	bx	lr

08008370 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     *        Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    virtual uint8_t getBitsPerPixel() const
 8008370:	b480      	push	{r7}
 8008372:	b083      	sub	sp, #12
 8008374:	af00      	add	r7, sp, #0
 8008376:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8008378:	687b      	ldr	r3, [r7, #4]
 800837a:	79db      	ldrb	r3, [r3, #7]
 800837c:	f3c3 0306 	ubfx	r3, r3, #0, #7
 8008380:	b2db      	uxtb	r3, r3
    }
 8008382:	4618      	mov	r0, r3
 8008384:	370c      	adds	r7, #12
 8008386:	46bd      	mov	sp, r7
 8008388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800838c:	4770      	bx	lr

0800838e <_ZNK8touchgfx4Font15getDataFormatA4Ev>:
     *
     *        Are the glyphs saved using ST A4 format.
     *
     * @return True if the font is stored using A4 format, false otherwise.
     */
    virtual uint8_t getDataFormatA4() const
 800838e:	b480      	push	{r7}
 8008390:	b083      	sub	sp, #12
 8008392:	af00      	add	r7, sp, #0
 8008394:	6078      	str	r0, [r7, #4]
    {
        return a4;
 8008396:	687b      	ldr	r3, [r7, #4]
 8008398:	79db      	ldrb	r3, [r3, #7]
 800839a:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800839e:	b2db      	uxtb	r3, r3
    }
 80083a0:	4618      	mov	r0, r3
 80083a2:	370c      	adds	r7, #12
 80083a4:	46bd      	mov	sp, r7
 80083a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083aa:	4770      	bx	lr

080083ac <_ZN8touchgfx9ConstFontD1Ev>:
 * @note Pure virtual class. Create an application-
 *          specific implementation of getPixelData.
 *
 * @see Font
 */
class ConstFont : public Font
 80083ac:	b580      	push	{r7, lr}
 80083ae:	b082      	sub	sp, #8
 80083b0:	af00      	add	r7, sp, #0
 80083b2:	6078      	str	r0, [r7, #4]
 80083b4:	4a05      	ldr	r2, [pc, #20]	; (80083cc <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 80083b6:	687b      	ldr	r3, [r7, #4]
 80083b8:	601a      	str	r2, [r3, #0]
 80083ba:	687b      	ldr	r3, [r7, #4]
 80083bc:	4618      	mov	r0, r3
 80083be:	f7ff ff67 	bl	8008290 <_ZN8touchgfx4FontD1Ev>
 80083c2:	687b      	ldr	r3, [r7, #4]
 80083c4:	4618      	mov	r0, r3
 80083c6:	3708      	adds	r7, #8
 80083c8:	46bd      	mov	sp, r7
 80083ca:	bd80      	pop	{r7, pc}
 80083cc:	0801d8f0 	.word	0x0801d8f0

080083d0 <_ZN8touchgfx9ConstFontD0Ev>:
 80083d0:	b580      	push	{r7, lr}
 80083d2:	b082      	sub	sp, #8
 80083d4:	af00      	add	r7, sp, #0
 80083d6:	6078      	str	r0, [r7, #4]
 80083d8:	6878      	ldr	r0, [r7, #4]
 80083da:	f7ff ffe7 	bl	80083ac <_ZN8touchgfx9ConstFontD1Ev>
 80083de:	2118      	movs	r1, #24
 80083e0:	6878      	ldr	r0, [r7, #4]
 80083e2:	f012 fad3 	bl	801a98c <_ZdlPvj>
 80083e6:	687b      	ldr	r3, [r7, #4]
 80083e8:	4618      	mov	r0, r3
 80083ea:	3708      	adds	r7, #8
 80083ec:	46bd      	mov	sp, r7
 80083ee:	bd80      	pop	{r7, pc}

080083f0 <_ZN8touchgfx13GeneratedFontD1Ev>:
 *        An GeneratedFont has both glyph table and glyph data placed in a flash which
 *        supports random access read (i.e. not a NAND flash)
 *
 * @see ConstFont
 */
class GeneratedFont : public ConstFont
 80083f0:	b580      	push	{r7, lr}
 80083f2:	b082      	sub	sp, #8
 80083f4:	af00      	add	r7, sp, #0
 80083f6:	6078      	str	r0, [r7, #4]
 80083f8:	4a05      	ldr	r2, [pc, #20]	; (8008410 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 80083fa:	687b      	ldr	r3, [r7, #4]
 80083fc:	601a      	str	r2, [r3, #0]
 80083fe:	687b      	ldr	r3, [r7, #4]
 8008400:	4618      	mov	r0, r3
 8008402:	f7ff ffd3 	bl	80083ac <_ZN8touchgfx9ConstFontD1Ev>
 8008406:	687b      	ldr	r3, [r7, #4]
 8008408:	4618      	mov	r0, r3
 800840a:	3708      	adds	r7, #8
 800840c:	46bd      	mov	sp, r7
 800840e:	bd80      	pop	{r7, pc}
 8008410:	0801c254 	.word	0x0801c254

08008414 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8008414:	b580      	push	{r7, lr}
 8008416:	b082      	sub	sp, #8
 8008418:	af00      	add	r7, sp, #0
 800841a:	6078      	str	r0, [r7, #4]
 800841c:	6878      	ldr	r0, [r7, #4]
 800841e:	f7ff ffe7 	bl	80083f0 <_ZN8touchgfx13GeneratedFontD1Ev>
 8008422:	2124      	movs	r1, #36	; 0x24
 8008424:	6878      	ldr	r0, [r7, #4]
 8008426:	f012 fab1 	bl	801a98c <_ZdlPvj>
 800842a:	687b      	ldr	r3, [r7, #4]
 800842c:	4618      	mov	r0, r3
 800842e:	3708      	adds	r7, #8
 8008430:	46bd      	mov	sp, r7
 8008432:	bd80      	pop	{r7, pc}

08008434 <_ZNK8touchgfx9GlyphNode15kerningTablePosEv>:
    uint16_t kerningTablePos() const
 8008434:	b480      	push	{r7}
 8008436:	b083      	sub	sp, #12
 8008438:	af00      	add	r7, sp, #0
 800843a:	6078      	str	r0, [r7, #4]
        return (((uint16_t)(flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10)) << 8) | (uint16_t)_kerningTablePos;
 800843c:	687b      	ldr	r3, [r7, #4]
 800843e:	7b5b      	ldrb	r3, [r3, #13]
 8008440:	021b      	lsls	r3, r3, #8
 8008442:	b21b      	sxth	r3, r3
 8008444:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008448:	b21a      	sxth	r2, r3
 800844a:	687b      	ldr	r3, [r7, #4]
 800844c:	7adb      	ldrb	r3, [r3, #11]
 800844e:	b21b      	sxth	r3, r3
 8008450:	4313      	orrs	r3, r2
 8008452:	b21b      	sxth	r3, r3
 8008454:	b29b      	uxth	r3, r3
    }
 8008456:	4618      	mov	r0, r3
 8008458:	370c      	adds	r7, #12
 800845a:	46bd      	mov	sp, r7
 800845c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008460:	4770      	bx	lr

08008462 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     *
     *        Gets GSUB table.
     *
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
 8008462:	b480      	push	{r7}
 8008464:	b083      	sub	sp, #12
 8008466:	af00      	add	r7, sp, #0
 8008468:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800846a:	687b      	ldr	r3, [r7, #4]
 800846c:	6a1b      	ldr	r3, [r3, #32]
    }
 800846e:	4618      	mov	r0, r3
 8008470:	370c      	adds	r7, #12
 8008472:	46bd      	mov	sp, r7
 8008474:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008478:	4770      	bx	lr
	...

0800847c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t dataFormatA4, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 800847c:	b580      	push	{r7, lr}
 800847e:	b08c      	sub	sp, #48	; 0x30
 8008480:	af08      	add	r7, sp, #32
 8008482:	60f8      	str	r0, [r7, #12]
 8008484:	60b9      	str	r1, [r7, #8]
 8008486:	4611      	mov	r1, r2
 8008488:	461a      	mov	r2, r3
 800848a:	460b      	mov	r3, r1
 800848c:	80fb      	strh	r3, [r7, #6]
 800848e:	4613      	mov	r3, r2
 8008490:	80bb      	strh	r3, [r7, #4]
    ConstFont(list, size, height, pixBelowBase, bitsPerPixel, dataFormatA4, maxLeft, maxRight, fallbackChar, ellipsisChar),
    glyphData(glyphDataInternalFlash),
    kerningData(kerningList),
    gsubTable(gsubData)
 8008492:	68f8      	ldr	r0, [r7, #12]
 8008494:	88b9      	ldrh	r1, [r7, #4]
 8008496:	88fa      	ldrh	r2, [r7, #6]
 8008498:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 800849a:	9306      	str	r3, [sp, #24]
 800849c:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 800849e:	9305      	str	r3, [sp, #20]
 80084a0:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80084a4:	9304      	str	r3, [sp, #16]
 80084a6:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80084aa:	9303      	str	r3, [sp, #12]
 80084ac:	f897 3020 	ldrb.w	r3, [r7, #32]
 80084b0:	9302      	str	r3, [sp, #8]
 80084b2:	7f3b      	ldrb	r3, [r7, #28]
 80084b4:	9301      	str	r3, [sp, #4]
 80084b6:	7e3b      	ldrb	r3, [r7, #24]
 80084b8:	9300      	str	r3, [sp, #0]
 80084ba:	460b      	mov	r3, r1
 80084bc:	68b9      	ldr	r1, [r7, #8]
 80084be:	f005 fd31 	bl	800df24 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80084c2:	4a08      	ldr	r2, [pc, #32]	; (80084e4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x68>)
 80084c4:	68fb      	ldr	r3, [r7, #12]
 80084c6:	601a      	str	r2, [r3, #0]
 80084c8:	68fb      	ldr	r3, [r7, #12]
 80084ca:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80084cc:	619a      	str	r2, [r3, #24]
 80084ce:	68fb      	ldr	r3, [r7, #12]
 80084d0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80084d2:	61da      	str	r2, [r3, #28]
 80084d4:	68fb      	ldr	r3, [r7, #12]
 80084d6:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80084d8:	621a      	str	r2, [r3, #32]
{
}
 80084da:	68fb      	ldr	r3, [r7, #12]
 80084dc:	4618      	mov	r0, r3
 80084de:	3710      	adds	r7, #16
 80084e0:	46bd      	mov	sp, r7
 80084e2:	bd80      	pop	{r7, pc}
 80084e4:	0801c254 	.word	0x0801c254

080084e8 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 80084e8:	b480      	push	{r7}
 80084ea:	b085      	sub	sp, #20
 80084ec:	af00      	add	r7, sp, #0
 80084ee:	6078      	str	r0, [r7, #4]
 80084f0:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 80084f2:	687b      	ldr	r3, [r7, #4]
 80084f4:	699b      	ldr	r3, [r3, #24]
 80084f6:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80084f8:	683b      	ldr	r3, [r7, #0]
 80084fa:	889b      	ldrh	r3, [r3, #4]
 80084fc:	0adb      	lsrs	r3, r3, #11
 80084fe:	b29b      	uxth	r3, r3
 8008500:	009b      	lsls	r3, r3, #2
 8008502:	68fa      	ldr	r2, [r7, #12]
 8008504:	4413      	add	r3, r2
 8008506:	681a      	ldr	r2, [r3, #0]
 8008508:	683b      	ldr	r3, [r7, #0]
 800850a:	681b      	ldr	r3, [r3, #0]
 800850c:	4413      	add	r3, r2
}
 800850e:	4618      	mov	r0, r3
 8008510:	3714      	adds	r7, #20
 8008512:	46bd      	mov	sp, r7
 8008514:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008518:	4770      	bx	lr

0800851a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800851a:	b580      	push	{r7, lr}
 800851c:	b086      	sub	sp, #24
 800851e:	af00      	add	r7, sp, #0
 8008520:	60f8      	str	r0, [r7, #12]
 8008522:	460b      	mov	r3, r1
 8008524:	607a      	str	r2, [r7, #4]
 8008526:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 8008528:	687b      	ldr	r3, [r7, #4]
 800852a:	2b00      	cmp	r3, #0
 800852c:	d003      	beq.n	8008536 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800852e:	687b      	ldr	r3, [r7, #4]
 8008530:	7b1b      	ldrb	r3, [r3, #12]
 8008532:	2b00      	cmp	r3, #0
 8008534:	d101      	bne.n	800853a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 8008536:	2300      	movs	r3, #0
 8008538:	e023      	b.n	8008582 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x68>
    }

    uint16_t kerningTablePos = glyph->kerningTablePos();
 800853a:	6878      	ldr	r0, [r7, #4]
 800853c:	f7ff ff7a 	bl	8008434 <_ZNK8touchgfx9GlyphNode15kerningTablePosEv>
 8008540:	4603      	mov	r3, r0
 8008542:	82bb      	strh	r3, [r7, #20]
    for (uint16_t i = kerningTablePos; i < kerningTablePos + glyph->kerningTableSize; i++)
 8008544:	8abb      	ldrh	r3, [r7, #20]
 8008546:	82fb      	strh	r3, [r7, #22]
 8008548:	8afa      	ldrh	r2, [r7, #22]
 800854a:	8abb      	ldrh	r3, [r7, #20]
 800854c:	6879      	ldr	r1, [r7, #4]
 800854e:	7b09      	ldrb	r1, [r1, #12]
 8008550:	440b      	add	r3, r1
 8008552:	429a      	cmp	r2, r3
 8008554:	da14      	bge.n	8008580 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x66>
    {
        if (prevChar == kerningData[i].unicodePrevChar)
 8008556:	68fb      	ldr	r3, [r7, #12]
 8008558:	69da      	ldr	r2, [r3, #28]
 800855a:	8afb      	ldrh	r3, [r7, #22]
 800855c:	009b      	lsls	r3, r3, #2
 800855e:	4413      	add	r3, r2
 8008560:	881b      	ldrh	r3, [r3, #0]
 8008562:	897a      	ldrh	r2, [r7, #10]
 8008564:	429a      	cmp	r2, r3
 8008566:	d107      	bne.n	8008578 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x5e>
        {
            return kerningData[i].distance;
 8008568:	68fb      	ldr	r3, [r7, #12]
 800856a:	69da      	ldr	r2, [r3, #28]
 800856c:	8afb      	ldrh	r3, [r7, #22]
 800856e:	009b      	lsls	r3, r3, #2
 8008570:	4413      	add	r3, r2
 8008572:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8008576:	e004      	b.n	8008582 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x68>
    for (uint16_t i = kerningTablePos; i < kerningTablePos + glyph->kerningTableSize; i++)
 8008578:	8afb      	ldrh	r3, [r7, #22]
 800857a:	3301      	adds	r3, #1
 800857c:	82fb      	strh	r3, [r7, #22]
 800857e:	e7e3      	b.n	8008548 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x2e>
        }
    }
    return 0;
 8008580:	2300      	movs	r3, #0
}
 8008582:	4618      	mov	r0, r3
 8008584:	3718      	adds	r7, #24
 8008586:	46bd      	mov	sp, r7
 8008588:	bd80      	pop	{r7, pc}
	...

0800858c <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_10_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 800858c:	b580      	push	{r7, lr}
 800858e:	af00      	add	r7, sp, #0
 8008590:	4801      	ldr	r0, [pc, #4]	; (8008598 <__tcf_0+0xc>)
 8008592:	f7ff ff2d 	bl	80083f0 <_ZN8touchgfx13GeneratedFontD1Ev>
 8008596:	bd80      	pop	{r7, pc}
 8008598:	20025918 	.word	0x20025918

0800859c <_Z23getFont_verdana_10_4bppv>:
{
 800859c:	b580      	push	{r7, lr}
 800859e:	b08a      	sub	sp, #40	; 0x28
 80085a0:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 80085a2:	4b15      	ldr	r3, [pc, #84]	; (80085f8 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80085a4:	681b      	ldr	r3, [r3, #0]
 80085a6:	f003 0301 	and.w	r3, r3, #1
 80085aa:	2b00      	cmp	r3, #0
 80085ac:	d11f      	bne.n	80085ee <_Z23getFont_verdana_10_4bppv+0x52>
 80085ae:	2300      	movs	r3, #0
 80085b0:	9309      	str	r3, [sp, #36]	; 0x24
 80085b2:	2300      	movs	r3, #0
 80085b4:	9308      	str	r3, [sp, #32]
 80085b6:	233f      	movs	r3, #63	; 0x3f
 80085b8:	9307      	str	r3, [sp, #28]
 80085ba:	4b10      	ldr	r3, [pc, #64]	; (80085fc <_Z23getFont_verdana_10_4bppv+0x60>)
 80085bc:	9306      	str	r3, [sp, #24]
 80085be:	4b10      	ldr	r3, [pc, #64]	; (8008600 <_Z23getFont_verdana_10_4bppv+0x64>)
 80085c0:	9305      	str	r3, [sp, #20]
 80085c2:	2300      	movs	r3, #0
 80085c4:	9304      	str	r3, [sp, #16]
 80085c6:	2300      	movs	r3, #0
 80085c8:	9303      	str	r3, [sp, #12]
 80085ca:	2301      	movs	r3, #1
 80085cc:	9302      	str	r3, [sp, #8]
 80085ce:	2304      	movs	r3, #4
 80085d0:	9301      	str	r3, [sp, #4]
 80085d2:	2300      	movs	r3, #0
 80085d4:	9300      	str	r3, [sp, #0]
 80085d6:	230a      	movs	r3, #10
 80085d8:	2201      	movs	r2, #1
 80085da:	490a      	ldr	r1, [pc, #40]	; (8008604 <_Z23getFont_verdana_10_4bppv+0x68>)
 80085dc:	480a      	ldr	r0, [pc, #40]	; (8008608 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80085de:	f7ff ff4d 	bl	800847c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80085e2:	4b05      	ldr	r3, [pc, #20]	; (80085f8 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80085e4:	2201      	movs	r2, #1
 80085e6:	601a      	str	r2, [r3, #0]
 80085e8:	4808      	ldr	r0, [pc, #32]	; (800860c <_Z23getFont_verdana_10_4bppv+0x70>)
 80085ea:	f012 fa19 	bl	801aa20 <atexit>
    return verdana_10_4bpp;
 80085ee:	4b06      	ldr	r3, [pc, #24]	; (8008608 <_Z23getFont_verdana_10_4bppv+0x6c>)
}
 80085f0:	4618      	mov	r0, r3
 80085f2:	46bd      	mov	sp, r7
 80085f4:	bd80      	pop	{r7, pc}
 80085f6:	bf00      	nop
 80085f8:	2002593c 	.word	0x2002593c
 80085fc:	0801f004 	.word	0x0801f004
 8008600:	0801c2a0 	.word	0x0801c2a0
 8008604:	0801f010 	.word	0x0801f010
 8008608:	20025918 	.word	0x20025918
 800860c:	0800858d 	.word	0x0800858d

08008610 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_20_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8008610:	b580      	push	{r7, lr}
 8008612:	af00      	add	r7, sp, #0
 8008614:	4801      	ldr	r0, [pc, #4]	; (800861c <__tcf_0+0xc>)
 8008616:	f7ff feeb 	bl	80083f0 <_ZN8touchgfx13GeneratedFontD1Ev>
 800861a:	bd80      	pop	{r7, pc}
 800861c:	20025940 	.word	0x20025940

08008620 <_Z23getFont_verdana_20_4bppv>:
{
 8008620:	b580      	push	{r7, lr}
 8008622:	b08a      	sub	sp, #40	; 0x28
 8008624:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8008626:	4b15      	ldr	r3, [pc, #84]	; (800867c <_Z23getFont_verdana_20_4bppv+0x5c>)
 8008628:	681b      	ldr	r3, [r3, #0]
 800862a:	f003 0301 	and.w	r3, r3, #1
 800862e:	2b00      	cmp	r3, #0
 8008630:	d11f      	bne.n	8008672 <_Z23getFont_verdana_20_4bppv+0x52>
 8008632:	2300      	movs	r3, #0
 8008634:	9309      	str	r3, [sp, #36]	; 0x24
 8008636:	2300      	movs	r3, #0
 8008638:	9308      	str	r3, [sp, #32]
 800863a:	233f      	movs	r3, #63	; 0x3f
 800863c:	9307      	str	r3, [sp, #28]
 800863e:	4b10      	ldr	r3, [pc, #64]	; (8008680 <_Z23getFont_verdana_20_4bppv+0x60>)
 8008640:	9306      	str	r3, [sp, #24]
 8008642:	4b10      	ldr	r3, [pc, #64]	; (8008684 <_Z23getFont_verdana_20_4bppv+0x64>)
 8008644:	9305      	str	r3, [sp, #20]
 8008646:	2300      	movs	r3, #0
 8008648:	9304      	str	r3, [sp, #16]
 800864a:	2300      	movs	r3, #0
 800864c:	9303      	str	r3, [sp, #12]
 800864e:	2301      	movs	r3, #1
 8008650:	9302      	str	r3, [sp, #8]
 8008652:	2304      	movs	r3, #4
 8008654:	9301      	str	r3, [sp, #4]
 8008656:	2300      	movs	r3, #0
 8008658:	9300      	str	r3, [sp, #0]
 800865a:	2314      	movs	r3, #20
 800865c:	2201      	movs	r2, #1
 800865e:	490a      	ldr	r1, [pc, #40]	; (8008688 <_Z23getFont_verdana_20_4bppv+0x68>)
 8008660:	480a      	ldr	r0, [pc, #40]	; (800868c <_Z23getFont_verdana_20_4bppv+0x6c>)
 8008662:	f7ff ff0b 	bl	800847c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8008666:	4b05      	ldr	r3, [pc, #20]	; (800867c <_Z23getFont_verdana_20_4bppv+0x5c>)
 8008668:	2201      	movs	r2, #1
 800866a:	601a      	str	r2, [r3, #0]
 800866c:	4808      	ldr	r0, [pc, #32]	; (8008690 <_Z23getFont_verdana_20_4bppv+0x70>)
 800866e:	f012 f9d7 	bl	801aa20 <atexit>
    return verdana_20_4bpp;
 8008672:	4b06      	ldr	r3, [pc, #24]	; (800868c <_Z23getFont_verdana_20_4bppv+0x6c>)
}
 8008674:	4618      	mov	r0, r3
 8008676:	46bd      	mov	sp, r7
 8008678:	bd80      	pop	{r7, pc}
 800867a:	bf00      	nop
 800867c:	20025964 	.word	0x20025964
 8008680:	0801f008 	.word	0x0801f008
 8008684:	0801c2a4 	.word	0x0801c2a4
 8008688:	0801f020 	.word	0x0801f020
 800868c:	20025940 	.word	0x20025940
 8008690:	08008611 	.word	0x08008611

08008694 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_40_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8008694:	b580      	push	{r7, lr}
 8008696:	af00      	add	r7, sp, #0
 8008698:	4801      	ldr	r0, [pc, #4]	; (80086a0 <__tcf_0+0xc>)
 800869a:	f7ff fea9 	bl	80083f0 <_ZN8touchgfx13GeneratedFontD1Ev>
 800869e:	bd80      	pop	{r7, pc}
 80086a0:	20025968 	.word	0x20025968

080086a4 <_Z23getFont_verdana_40_4bppv>:
{
 80086a4:	b580      	push	{r7, lr}
 80086a6:	b08a      	sub	sp, #40	; 0x28
 80086a8:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80086aa:	4b15      	ldr	r3, [pc, #84]	; (8008700 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80086ac:	681b      	ldr	r3, [r3, #0]
 80086ae:	f003 0301 	and.w	r3, r3, #1
 80086b2:	2b00      	cmp	r3, #0
 80086b4:	d11f      	bne.n	80086f6 <_Z23getFont_verdana_40_4bppv+0x52>
 80086b6:	2300      	movs	r3, #0
 80086b8:	9309      	str	r3, [sp, #36]	; 0x24
 80086ba:	2300      	movs	r3, #0
 80086bc:	9308      	str	r3, [sp, #32]
 80086be:	233f      	movs	r3, #63	; 0x3f
 80086c0:	9307      	str	r3, [sp, #28]
 80086c2:	4b10      	ldr	r3, [pc, #64]	; (8008704 <_Z23getFont_verdana_40_4bppv+0x60>)
 80086c4:	9306      	str	r3, [sp, #24]
 80086c6:	4b10      	ldr	r3, [pc, #64]	; (8008708 <_Z23getFont_verdana_40_4bppv+0x64>)
 80086c8:	9305      	str	r3, [sp, #20]
 80086ca:	2300      	movs	r3, #0
 80086cc:	9304      	str	r3, [sp, #16]
 80086ce:	2300      	movs	r3, #0
 80086d0:	9303      	str	r3, [sp, #12]
 80086d2:	2301      	movs	r3, #1
 80086d4:	9302      	str	r3, [sp, #8]
 80086d6:	2304      	movs	r3, #4
 80086d8:	9301      	str	r3, [sp, #4]
 80086da:	2300      	movs	r3, #0
 80086dc:	9300      	str	r3, [sp, #0]
 80086de:	2328      	movs	r3, #40	; 0x28
 80086e0:	2201      	movs	r2, #1
 80086e2:	490a      	ldr	r1, [pc, #40]	; (800870c <_Z23getFont_verdana_40_4bppv+0x68>)
 80086e4:	480a      	ldr	r0, [pc, #40]	; (8008710 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80086e6:	f7ff fec9 	bl	800847c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80086ea:	4b05      	ldr	r3, [pc, #20]	; (8008700 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80086ec:	2201      	movs	r2, #1
 80086ee:	601a      	str	r2, [r3, #0]
 80086f0:	4808      	ldr	r0, [pc, #32]	; (8008714 <_Z23getFont_verdana_40_4bppv+0x70>)
 80086f2:	f012 f995 	bl	801aa20 <atexit>
    return verdana_40_4bpp;
 80086f6:	4b06      	ldr	r3, [pc, #24]	; (8008710 <_Z23getFont_verdana_40_4bppv+0x6c>)
}
 80086f8:	4618      	mov	r0, r3
 80086fa:	46bd      	mov	sp, r7
 80086fc:	bd80      	pop	{r7, pc}
 80086fe:	bf00      	nop
 8008700:	2002598c 	.word	0x2002598c
 8008704:	0801f00c 	.word	0x0801f00c
 8008708:	0801c2a8 	.word	0x0801c2a8
 800870c:	0801f030 	.word	0x0801f030
 8008710:	20025968 	.word	0x20025968
 8008714:	08008695 	.word	0x08008695

08008718 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8008718:	b480      	push	{r7}
 800871a:	b083      	sub	sp, #12
 800871c:	af00      	add	r7, sp, #0
 800871e:	6078      	str	r0, [r7, #4]
 8008720:	6039      	str	r1, [r7, #0]
 8008722:	683b      	ldr	r3, [r7, #0]
 8008724:	4618      	mov	r0, r3
 8008726:	370c      	adds	r7, #12
 8008728:	46bd      	mov	sp, r7
 800872a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800872e:	4770      	bx	lr

08008730 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     *        This handler is invoked when a mouse click or display touch event has been
     *        detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8008730:	b480      	push	{r7}
 8008732:	b083      	sub	sp, #12
 8008734:	af00      	add	r7, sp, #0
 8008736:	6078      	str	r0, [r7, #4]
 8008738:	6039      	str	r1, [r7, #0]
    {
    }
 800873a:	bf00      	nop
 800873c:	370c      	adds	r7, #12
 800873e:	46bd      	mov	sp, r7
 8008740:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008744:	4770      	bx	lr

08008746 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
     *
     *        This handler is invoked when a drag event has been detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8008746:	b480      	push	{r7}
 8008748:	b083      	sub	sp, #12
 800874a:	af00      	add	r7, sp, #0
 800874c:	6078      	str	r0, [r7, #4]
 800874e:	6039      	str	r1, [r7, #0]
    {
    }
 8008750:	bf00      	nop
 8008752:	370c      	adds	r7, #12
 8008754:	46bd      	mov	sp, r7
 8008756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800875a:	4770      	bx	lr

0800875c <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
     *
     *        This handler is invoked when a gesture event has been detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800875c:	b480      	push	{r7}
 800875e:	b083      	sub	sp, #12
 8008760:	af00      	add	r7, sp, #0
 8008762:	6078      	str	r0, [r7, #4]
 8008764:	6039      	str	r1, [r7, #0]
    {
    }
 8008766:	bf00      	nop
 8008768:	370c      	adds	r7, #12
 800876a:	46bd      	mov	sp, r7
 800876c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008770:	4770      	bx	lr

08008772 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
     *        This handler is invoked when a key (or button) event has been detected by the
     *        system.
     *
     * @param c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 8008772:	b480      	push	{r7}
 8008774:	b083      	sub	sp, #12
 8008776:	af00      	add	r7, sp, #0
 8008778:	6078      	str	r0, [r7, #4]
 800877a:	460b      	mov	r3, r1
 800877c:	70fb      	strb	r3, [r7, #3]
    {
    }
 800877e:	bf00      	nop
 8008780:	370c      	adds	r7, #12
 8008782:	46bd      	mov	sp, r7
 8008784:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008788:	4770      	bx	lr

0800878a <_ZN8touchgfx15UIEventListener15handleTickEventEv>:
     * @brief This handler is invoked when a system tick event has been generated.
     *
     *        This handler is invoked when a system tick event has been generated. The system
     *        tick period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800878a:	b480      	push	{r7}
 800878c:	b083      	sub	sp, #12
 800878e:	af00      	add	r7, sp, #0
 8008790:	6078      	str	r0, [r7, #4]
    {
    }
 8008792:	bf00      	nop
 8008794:	370c      	adds	r7, #12
 8008796:	46bd      	mov	sp, r7
 8008798:	f85d 7b04 	ldr.w	r7, [sp], #4
 800879c:	4770      	bx	lr

0800879e <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:
     *
     * @brief This handler is invoked when a change screen event is pending.
     *
     *        This handler is invoked when a change screen event is pending.
     */
    virtual void handlePendingScreenTransition()
 800879e:	b480      	push	{r7}
 80087a0:	b083      	sub	sp, #12
 80087a2:	af00      	add	r7, sp, #0
 80087a4:	6078      	str	r0, [r7, #4]
    {
    }
 80087a6:	bf00      	nop
 80087a8:	370c      	adds	r7, #12
 80087aa:	46bd      	mov	sp, r7
 80087ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087b0:	4770      	bx	lr
	...

080087b4 <_ZN8touchgfx15UIEventListenerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~UIEventListener()
 80087b4:	b480      	push	{r7}
 80087b6:	b083      	sub	sp, #12
 80087b8:	af00      	add	r7, sp, #0
 80087ba:	6078      	str	r0, [r7, #4]
    {
 80087bc:	4a04      	ldr	r2, [pc, #16]	; (80087d0 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 80087be:	687b      	ldr	r3, [r7, #4]
 80087c0:	601a      	str	r2, [r3, #0]
    }
 80087c2:	687b      	ldr	r3, [r7, #4]
 80087c4:	4618      	mov	r0, r3
 80087c6:	370c      	adds	r7, #12
 80087c8:	46bd      	mov	sp, r7
 80087ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087ce:	4770      	bx	lr
 80087d0:	0801c39c 	.word	0x0801c39c

080087d4 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 80087d4:	b580      	push	{r7, lr}
 80087d6:	b082      	sub	sp, #8
 80087d8:	af00      	add	r7, sp, #0
 80087da:	6078      	str	r0, [r7, #4]
    }
 80087dc:	6878      	ldr	r0, [r7, #4]
 80087de:	f7ff ffe9 	bl	80087b4 <_ZN8touchgfx15UIEventListenerD1Ev>
 80087e2:	2104      	movs	r1, #4
 80087e4:	6878      	ldr	r0, [r7, #4]
 80087e6:	f012 f8d1 	bl	801a98c <_ZdlPvj>
 80087ea:	687b      	ldr	r3, [r7, #4]
 80087ec:	4618      	mov	r0, r3
 80087ee:	3708      	adds	r7, #8
 80087f0:	46bd      	mov	sp, r7
 80087f2:	bd80      	pop	{r7, pc}

080087f4 <_ZN8touchgfx10TransitionC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Constructs the Transition.
     */
    Transition() :
 80087f4:	b480      	push	{r7}
 80087f6:	b083      	sub	sp, #12
 80087f8:	af00      	add	r7, sp, #0
 80087fa:	6078      	str	r0, [r7, #4]
        screenContainer(0), done(false)
 80087fc:	4a07      	ldr	r2, [pc, #28]	; (800881c <_ZN8touchgfx10TransitionC1Ev+0x28>)
 80087fe:	687b      	ldr	r3, [r7, #4]
 8008800:	601a      	str	r2, [r3, #0]
 8008802:	687b      	ldr	r3, [r7, #4]
 8008804:	2200      	movs	r2, #0
 8008806:	605a      	str	r2, [r3, #4]
 8008808:	687b      	ldr	r3, [r7, #4]
 800880a:	2200      	movs	r2, #0
 800880c:	721a      	strb	r2, [r3, #8]
    {
    }
 800880e:	687b      	ldr	r3, [r7, #4]
 8008810:	4618      	mov	r0, r3
 8008812:	370c      	adds	r7, #12
 8008814:	46bd      	mov	sp, r7
 8008816:	f85d 7b04 	ldr.w	r7, [sp], #4
 800881a:	4770      	bx	lr
 800881c:	0801c37c 	.word	0x0801c37c

08008820 <_ZN8touchgfx10TransitionD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Transition()
 8008820:	b480      	push	{r7}
 8008822:	b083      	sub	sp, #12
 8008824:	af00      	add	r7, sp, #0
 8008826:	6078      	str	r0, [r7, #4]
    {
 8008828:	4a04      	ldr	r2, [pc, #16]	; (800883c <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800882a:	687b      	ldr	r3, [r7, #4]
 800882c:	601a      	str	r2, [r3, #0]
    }
 800882e:	687b      	ldr	r3, [r7, #4]
 8008830:	4618      	mov	r0, r3
 8008832:	370c      	adds	r7, #12
 8008834:	46bd      	mov	sp, r7
 8008836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800883a:	4770      	bx	lr
 800883c:	0801c37c 	.word	0x0801c37c

08008840 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 8008840:	b580      	push	{r7, lr}
 8008842:	b082      	sub	sp, #8
 8008844:	af00      	add	r7, sp, #0
 8008846:	6078      	str	r0, [r7, #4]
    }
 8008848:	6878      	ldr	r0, [r7, #4]
 800884a:	f7ff ffe9 	bl	8008820 <_ZN8touchgfx10TransitionD1Ev>
 800884e:	210c      	movs	r1, #12
 8008850:	6878      	ldr	r0, [r7, #4]
 8008852:	f012 f89b 	bl	801a98c <_ZdlPvj>
 8008856:	687b      	ldr	r3, [r7, #4]
 8008858:	4618      	mov	r0, r3
 800885a:	3708      	adds	r7, #8
 800885c:	46bd      	mov	sp, r7
 800885e:	bd80      	pop	{r7, pc}

08008860 <_ZN8touchgfx10Transition15handleTickEventEv>:
     *
     * @brief Called for every tick when transitioning.
     *
     *        Called for every tick when transitioning. Base does nothing.
     */
    virtual void handleTickEvent() { }
 8008860:	b480      	push	{r7}
 8008862:	b083      	sub	sp, #12
 8008864:	af00      	add	r7, sp, #0
 8008866:	6078      	str	r0, [r7, #4]
 8008868:	bf00      	nop
 800886a:	370c      	adds	r7, #12
 800886c:	46bd      	mov	sp, r7
 800886e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008872:	4770      	bx	lr

08008874 <_ZN8touchgfx10Transition8tearDownEv>:
     * @brief Tears down the Animation.
     *
     *        Tears down the Animation. Called before the d.tor. when the application changes
     *        the transition. Base version does nothing.
     */
    virtual void tearDown() { }
 8008874:	b480      	push	{r7}
 8008876:	b083      	sub	sp, #12
 8008878:	af00      	add	r7, sp, #0
 800887a:	6078      	str	r0, [r7, #4]
 800887c:	bf00      	nop
 800887e:	370c      	adds	r7, #12
 8008880:	46bd      	mov	sp, r7
 8008882:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008886:	4770      	bx	lr

08008888 <_ZN8touchgfx10Transition4initEv>:
     * @brief Initializes the transition.
     *
     *        Initializes the transition. Called after the c.tor. when the application changes
     *        the transition. Base version does nothing.
     */
    virtual void init() { }
 8008888:	b480      	push	{r7}
 800888a:	b083      	sub	sp, #12
 800888c:	af00      	add	r7, sp, #0
 800888e:	6078      	str	r0, [r7, #4]
 8008890:	bf00      	nop
 8008892:	370c      	adds	r7, #12
 8008894:	46bd      	mov	sp, r7
 8008896:	f85d 7b04 	ldr.w	r7, [sp], #4
 800889a:	4770      	bx	lr

0800889c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *        Sets the screen container. Is used by Screen to enable the transition to access
     *        the container.
     *
     * @param [in] cont The container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800889c:	b480      	push	{r7}
 800889e:	b083      	sub	sp, #12
 80088a0:	af00      	add	r7, sp, #0
 80088a2:	6078      	str	r0, [r7, #4]
 80088a4:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 80088a6:	687b      	ldr	r3, [r7, #4]
 80088a8:	683a      	ldr	r2, [r7, #0]
 80088aa:	605a      	str	r2, [r3, #4]
    }
 80088ac:	bf00      	nop
 80088ae:	370c      	adds	r7, #12
 80088b0:	46bd      	mov	sp, r7
 80088b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088b6:	4770      	bx	lr

080088b8 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *        provide a means to switch screen from places that does not have access to a
     *        pointer to the new screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 80088b8:	b480      	push	{r7}
 80088ba:	b083      	sub	sp, #12
 80088bc:	af00      	add	r7, sp, #0
 80088be:	6078      	str	r0, [r7, #4]
 80088c0:	460b      	mov	r3, r1
 80088c2:	70fb      	strb	r3, [r7, #3]
    {
    }
 80088c4:	bf00      	nop
 80088c6:	370c      	adds	r7, #12
 80088c8:	46bd      	mov	sp, r7
 80088ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088ce:	4770      	bx	lr

080088d0 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
     *
     * @brief Destructor.
     *
     *        Empty virtual destructor.
     */
    virtual ~GenericCallback()
 80088d0:	b480      	push	{r7}
 80088d2:	b083      	sub	sp, #12
 80088d4:	af00      	add	r7, sp, #0
 80088d6:	6078      	str	r0, [r7, #4]
    {
 80088d8:	4a04      	ldr	r2, [pc, #16]	; (80088ec <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 80088da:	687b      	ldr	r3, [r7, #4]
 80088dc:	601a      	str	r2, [r3, #0]
    }
 80088de:	687b      	ldr	r3, [r7, #4]
 80088e0:	4618      	mov	r0, r3
 80088e2:	370c      	adds	r7, #12
 80088e4:	46bd      	mov	sp, r7
 80088e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088ea:	4770      	bx	lr
 80088ec:	0801c364 	.word	0x0801c364

080088f0 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 80088f0:	b580      	push	{r7, lr}
 80088f2:	b082      	sub	sp, #8
 80088f4:	af00      	add	r7, sp, #0
 80088f6:	6078      	str	r0, [r7, #4]
    }
 80088f8:	6878      	ldr	r0, [r7, #4]
 80088fa:	f7ff ffe9 	bl	80088d0 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 80088fe:	2104      	movs	r1, #4
 8008900:	6878      	ldr	r0, [r7, #4]
 8008902:	f012 f843 	bl	801a98c <_ZdlPvj>
 8008906:	687b      	ldr	r3, [r7, #4]
 8008908:	4618      	mov	r0, r3
 800890a:	3708      	adds	r7, #8
 800890c:	46bd      	mov	sp, r7
 800890e:	bd80      	pop	{r7, pc}

08008910 <_ZN8touchgfx3HAL11getInstanceEv>:
     *
     *        Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 8008910:	b480      	push	{r7}
 8008912:	af00      	add	r7, sp, #0
    {
        return instance;
 8008914:	4b03      	ldr	r3, [pc, #12]	; (8008924 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 8008916:	681b      	ldr	r3, [r3, #0]
    }
 8008918:	4618      	mov	r0, r3
 800891a:	46bd      	mov	sp, r7
 800891c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008920:	4770      	bx	lr
 8008922:	bf00      	nop
 8008924:	20026900 	.word	0x20026900

08008928 <_ZN8touchgfx3HAL3lcdEv>:
     *
     *        Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 8008928:	b480      	push	{r7}
 800892a:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800892c:	4b0b      	ldr	r3, [pc, #44]	; (800895c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800892e:	681b      	ldr	r3, [r3, #0]
 8008930:	f893 3076 	ldrb.w	r3, [r3, #118]	; 0x76
 8008934:	2b00      	cmp	r3, #0
 8008936:	d008      	beq.n	800894a <_ZN8touchgfx3HAL3lcdEv+0x22>
 8008938:	4b08      	ldr	r3, [pc, #32]	; (800895c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800893a:	681b      	ldr	r3, [r3, #0]
 800893c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800893e:	2b00      	cmp	r3, #0
 8008940:	d003      	beq.n	800894a <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 8008942:	4b06      	ldr	r3, [pc, #24]	; (800895c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8008944:	681b      	ldr	r3, [r3, #0]
 8008946:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008948:	e002      	b.n	8008950 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        else
        {
            return instance->lcdRef;
 800894a:	4b04      	ldr	r3, [pc, #16]	; (800895c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800894c:	681b      	ldr	r3, [r3, #0]
 800894e:	689b      	ldr	r3, [r3, #8]
        }
    }
 8008950:	4618      	mov	r0, r3
 8008952:	46bd      	mov	sp, r7
 8008954:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008958:	4770      	bx	lr
 800895a:	bf00      	nop
 800895c:	20026900 	.word	0x20026900

08008960 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 8008960:	b580      	push	{r7, lr}
 8008962:	b082      	sub	sp, #8
 8008964:	af00      	add	r7, sp, #0
 8008966:	6078      	str	r0, [r7, #4]
 8008968:	4a05      	ldr	r2, [pc, #20]	; (8008980 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800896a:	687b      	ldr	r3, [r7, #4]
 800896c:	601a      	str	r2, [r3, #0]
 800896e:	687b      	ldr	r3, [r7, #4]
 8008970:	4618      	mov	r0, r3
 8008972:	f7ff ff1f 	bl	80087b4 <_ZN8touchgfx15UIEventListenerD1Ev>
 8008976:	687b      	ldr	r3, [r7, #4]
 8008978:	4618      	mov	r0, r3
 800897a:	3708      	adds	r7, #8
 800897c:	46bd      	mov	sp, r7
 800897e:	bd80      	pop	{r7, pc}
 8008980:	0801d750 	.word	0x0801d750

08008984 <_ZN8touchgfx11ApplicationD0Ev>:
 8008984:	b580      	push	{r7, lr}
 8008986:	b082      	sub	sp, #8
 8008988:	af00      	add	r7, sp, #0
 800898a:	6078      	str	r0, [r7, #4]
 800898c:	6878      	ldr	r0, [r7, #4]
 800898e:	f7ff ffe7 	bl	8008960 <_ZN8touchgfx11ApplicationD1Ev>
 8008992:	f44f 7198 	mov.w	r1, #304	; 0x130
 8008996:	6878      	ldr	r0, [r7, #4]
 8008998:	f011 fff8 	bl	801a98c <_ZdlPvj>
 800899c:	687b      	ldr	r3, [r7, #4]
 800899e:	4618      	mov	r0, r3
 80089a0:	3708      	adds	r7, #8
 80089a2:	46bd      	mov	sp, r7
 80089a4:	bd80      	pop	{r7, pc}
	...

080089a8 <_ZN8touchgfx14MVPApplicationC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    MVPApplication() :
 80089a8:	b580      	push	{r7, lr}
 80089aa:	b082      	sub	sp, #8
 80089ac:	af00      	add	r7, sp, #0
 80089ae:	6078      	str	r0, [r7, #4]
        currentPresenter(0),
        pendingScreenTransitionCallback(0)
 80089b0:	687b      	ldr	r3, [r7, #4]
 80089b2:	4618      	mov	r0, r3
 80089b4:	f004 fdf2 	bl	800d59c <_ZN8touchgfx11ApplicationC1Ev>
 80089b8:	4a09      	ldr	r2, [pc, #36]	; (80089e0 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 80089ba:	687b      	ldr	r3, [r7, #4]
 80089bc:	601a      	str	r2, [r3, #0]
 80089be:	687b      	ldr	r3, [r7, #4]
 80089c0:	2200      	movs	r2, #0
 80089c2:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 80089c6:	687b      	ldr	r3, [r7, #4]
 80089c8:	2200      	movs	r2, #0
 80089ca:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
    {
        instance = this;
 80089ce:	687b      	ldr	r3, [r7, #4]
 80089d0:	4a04      	ldr	r2, [pc, #16]	; (80089e4 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 80089d2:	6013      	str	r3, [r2, #0]
    }
 80089d4:	687b      	ldr	r3, [r7, #4]
 80089d6:	4618      	mov	r0, r3
 80089d8:	3708      	adds	r7, #8
 80089da:	46bd      	mov	sp, r7
 80089dc:	bd80      	pop	{r7, pc}
 80089de:	bf00      	nop
 80089e0:	0801c328 	.word	0x0801c328
 80089e4:	2002696c 	.word	0x2002696c

080089e8 <_ZN8touchgfx14MVPApplicationD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~MVPApplication() { }
 80089e8:	b580      	push	{r7, lr}
 80089ea:	b082      	sub	sp, #8
 80089ec:	af00      	add	r7, sp, #0
 80089ee:	6078      	str	r0, [r7, #4]
 80089f0:	4a05      	ldr	r2, [pc, #20]	; (8008a08 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 80089f2:	687b      	ldr	r3, [r7, #4]
 80089f4:	601a      	str	r2, [r3, #0]
 80089f6:	687b      	ldr	r3, [r7, #4]
 80089f8:	4618      	mov	r0, r3
 80089fa:	f7ff ffb1 	bl	8008960 <_ZN8touchgfx11ApplicationD1Ev>
 80089fe:	687b      	ldr	r3, [r7, #4]
 8008a00:	4618      	mov	r0, r3
 8008a02:	3708      	adds	r7, #8
 8008a04:	46bd      	mov	sp, r7
 8008a06:	bd80      	pop	{r7, pc}
 8008a08:	0801c328 	.word	0x0801c328

08008a0c <_ZN8touchgfx14MVPApplicationD0Ev>:
 8008a0c:	b580      	push	{r7, lr}
 8008a0e:	b082      	sub	sp, #8
 8008a10:	af00      	add	r7, sp, #0
 8008a12:	6078      	str	r0, [r7, #4]
 8008a14:	6878      	ldr	r0, [r7, #4]
 8008a16:	f7ff ffe7 	bl	80089e8 <_ZN8touchgfx14MVPApplicationD1Ev>
 8008a1a:	f44f 719c 	mov.w	r1, #312	; 0x138
 8008a1e:	6878      	ldr	r0, [r7, #4]
 8008a20:	f011 ffb4 	bl	801a98c <_ZdlPvj>
 8008a24:	687b      	ldr	r3, [r7, #4]
 8008a26:	4618      	mov	r0, r3
 8008a28:	3708      	adds	r7, #8
 8008a2a:	46bd      	mov	sp, r7
 8008a2c:	bd80      	pop	{r7, pc}

08008a2e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
     *
     * @brief Handles the pending screen transition.
     *
     *        Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8008a2e:	b580      	push	{r7, lr}
 8008a30:	b082      	sub	sp, #8
 8008a32:	af00      	add	r7, sp, #0
 8008a34:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 8008a36:	6878      	ldr	r0, [r7, #4]
 8008a38:	f000 f804 	bl	8008a44 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 8008a3c:	bf00      	nop
 8008a3e:	3708      	adds	r7, #8
 8008a40:	46bd      	mov	sp, r7
 8008a42:	bd80      	pop	{r7, pc}

08008a44 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:
     * @brief Evaluates the pending Callback instances.
     *
     *        Evaluates the pending Callback instances. If a callback is valid, it is executed
     *        and a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 8008a44:	b580      	push	{r7, lr}
 8008a46:	b082      	sub	sp, #8
 8008a48:	af00      	add	r7, sp, #0
 8008a4a:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8008a4c:	687b      	ldr	r3, [r7, #4]
 8008a4e:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8008a52:	2b00      	cmp	r3, #0
 8008a54:	d00f      	beq.n	8008a76 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8008a56:	687b      	ldr	r3, [r7, #4]
 8008a58:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8008a5c:	687b      	ldr	r3, [r7, #4]
 8008a5e:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8008a62:	681b      	ldr	r3, [r3, #0]
 8008a64:	330c      	adds	r3, #12
 8008a66:	681b      	ldr	r3, [r3, #0]
 8008a68:	4610      	mov	r0, r2
 8008a6a:	4798      	blx	r3
 8008a6c:	4603      	mov	r3, r0
 8008a6e:	2b00      	cmp	r3, #0
 8008a70:	d001      	beq.n	8008a76 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8008a72:	2301      	movs	r3, #1
 8008a74:	e000      	b.n	8008a78 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 8008a76:	2300      	movs	r3, #0
 8008a78:	2b00      	cmp	r3, #0
 8008a7a:	d00e      	beq.n	8008a9a <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 8008a7c:	687b      	ldr	r3, [r7, #4]
 8008a7e:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8008a82:	687b      	ldr	r3, [r7, #4]
 8008a84:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8008a88:	681b      	ldr	r3, [r3, #0]
 8008a8a:	3308      	adds	r3, #8
 8008a8c:	681b      	ldr	r3, [r3, #0]
 8008a8e:	4610      	mov	r0, r2
 8008a90:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8008a92:	687b      	ldr	r3, [r7, #4]
 8008a94:	2200      	movs	r2, #0
 8008a96:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
        }
    }
 8008a9a:	bf00      	nop
 8008a9c:	3708      	adds	r7, #8
 8008a9e:	46bd      	mov	sp, r7
 8008aa0:	bd80      	pop	{r7, pc}

08008aa2 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE>:
 * @param [in] currentScreen    If non-null, the current screen.
 * @param [in] currentPresenter If non-null, the current presenter.
 * @param [in] currentTrans     If non-null, the current transaction.
 */
static inline void prepareTransition(Screen** currentScreen, Presenter** currentPresenter, Transition** currentTrans)
{
 8008aa2:	b580      	push	{r7, lr}
 8008aa4:	b084      	sub	sp, #16
 8008aa6:	af00      	add	r7, sp, #0
 8008aa8:	60f8      	str	r0, [r7, #12]
 8008aaa:	60b9      	str	r1, [r7, #8]
 8008aac:	607a      	str	r2, [r7, #4]
    Application::getInstance()->clearAllTimerWidgets();
 8008aae:	f004 fd55 	bl	800d55c <_ZN8touchgfx11Application11getInstanceEv>
 8008ab2:	4603      	mov	r3, r0
 8008ab4:	4618      	mov	r0, r3
 8008ab6:	f004 fd57 	bl	800d568 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>

    if (*currentTrans)
 8008aba:	687b      	ldr	r3, [r7, #4]
 8008abc:	681b      	ldr	r3, [r3, #0]
 8008abe:	2b00      	cmp	r3, #0
 8008ac0:	d008      	beq.n	8008ad4 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x32>
    {
        (*currentTrans)->tearDown();
 8008ac2:	687b      	ldr	r3, [r7, #4]
 8008ac4:	681a      	ldr	r2, [r3, #0]
 8008ac6:	687b      	ldr	r3, [r7, #4]
 8008ac8:	681b      	ldr	r3, [r3, #0]
 8008aca:	681b      	ldr	r3, [r3, #0]
 8008acc:	330c      	adds	r3, #12
 8008ace:	681b      	ldr	r3, [r3, #0]
 8008ad0:	4610      	mov	r0, r2
 8008ad2:	4798      	blx	r3
    }
    if (*currentTrans)
 8008ad4:	687b      	ldr	r3, [r7, #4]
 8008ad6:	681b      	ldr	r3, [r3, #0]
 8008ad8:	2b00      	cmp	r3, #0
 8008ada:	d007      	beq.n	8008aec <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x4a>
    {
        (*currentTrans)->~Transition();
 8008adc:	687b      	ldr	r3, [r7, #4]
 8008ade:	681a      	ldr	r2, [r3, #0]
 8008ae0:	687b      	ldr	r3, [r7, #4]
 8008ae2:	681b      	ldr	r3, [r3, #0]
 8008ae4:	681b      	ldr	r3, [r3, #0]
 8008ae6:	681b      	ldr	r3, [r3, #0]
 8008ae8:	4610      	mov	r0, r2
 8008aea:	4798      	blx	r3
    }
    if (*currentScreen)
 8008aec:	68fb      	ldr	r3, [r7, #12]
 8008aee:	681b      	ldr	r3, [r3, #0]
 8008af0:	2b00      	cmp	r3, #0
 8008af2:	d008      	beq.n	8008b06 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x64>
    {
        (*currentScreen)->tearDownScreen();
 8008af4:	68fb      	ldr	r3, [r7, #12]
 8008af6:	681a      	ldr	r2, [r3, #0]
 8008af8:	68fb      	ldr	r3, [r7, #12]
 8008afa:	681b      	ldr	r3, [r3, #0]
 8008afc:	681b      	ldr	r3, [r3, #0]
 8008afe:	3314      	adds	r3, #20
 8008b00:	681b      	ldr	r3, [r3, #0]
 8008b02:	4610      	mov	r0, r2
 8008b04:	4798      	blx	r3
    }
    if (*currentPresenter)
 8008b06:	68bb      	ldr	r3, [r7, #8]
 8008b08:	681b      	ldr	r3, [r3, #0]
 8008b0a:	2b00      	cmp	r3, #0
 8008b0c:	d008      	beq.n	8008b20 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x7e>
    {
        (*currentPresenter)->deactivate();
 8008b0e:	68bb      	ldr	r3, [r7, #8]
 8008b10:	681a      	ldr	r2, [r3, #0]
 8008b12:	68bb      	ldr	r3, [r7, #8]
 8008b14:	681b      	ldr	r3, [r3, #0]
 8008b16:	681b      	ldr	r3, [r3, #0]
 8008b18:	3304      	adds	r3, #4
 8008b1a:	681b      	ldr	r3, [r3, #0]
 8008b1c:	4610      	mov	r0, r2
 8008b1e:	4798      	blx	r3
    }
    if (*currentScreen)
 8008b20:	68fb      	ldr	r3, [r7, #12]
 8008b22:	681b      	ldr	r3, [r3, #0]
 8008b24:	2b00      	cmp	r3, #0
 8008b26:	d007      	beq.n	8008b38 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x96>
    {
        (*currentScreen)->~Screen();
 8008b28:	68fb      	ldr	r3, [r7, #12]
 8008b2a:	681a      	ldr	r2, [r3, #0]
 8008b2c:	68fb      	ldr	r3, [r7, #12]
 8008b2e:	681b      	ldr	r3, [r3, #0]
 8008b30:	681b      	ldr	r3, [r3, #0]
 8008b32:	681b      	ldr	r3, [r3, #0]
 8008b34:	4610      	mov	r0, r2
 8008b36:	4798      	blx	r3
    }
    if (*currentPresenter)
 8008b38:	68bb      	ldr	r3, [r7, #8]
 8008b3a:	681b      	ldr	r3, [r3, #0]
 8008b3c:	2b00      	cmp	r3, #0
 8008b3e:	d008      	beq.n	8008b52 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0xb0>
    {
        (*currentPresenter)->~Presenter();
 8008b40:	68bb      	ldr	r3, [r7, #8]
 8008b42:	681a      	ldr	r2, [r3, #0]
 8008b44:	68bb      	ldr	r3, [r7, #8]
 8008b46:	681b      	ldr	r3, [r3, #0]
 8008b48:	681b      	ldr	r3, [r3, #0]
 8008b4a:	3308      	adds	r3, #8
 8008b4c:	681b      	ldr	r3, [r3, #0]
 8008b4e:	4610      	mov	r0, r2
 8008b50:	4798      	blx	r3
    }
}
 8008b52:	bf00      	nop
 8008b54:	3710      	adds	r7, #16
 8008b56:	46bd      	mov	sp, r7
 8008b58:	bd80      	pop	{r7, pc}

08008b5a <_ZN8touchgfxL18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE>:
 * @param [in] newScreen     If non-null, the new screen.
 * @param [in] newPresenter  If non-null, the new presenter.
 * @param [in] newTransition If non-null, the new transition.
 */
static inline void finalizeTransition(Screen* newScreen, Presenter* newPresenter, Transition* newTransition)
{
 8008b5a:	b580      	push	{r7, lr}
 8008b5c:	b084      	sub	sp, #16
 8008b5e:	af00      	add	r7, sp, #0
 8008b60:	60f8      	str	r0, [r7, #12]
 8008b62:	60b9      	str	r1, [r7, #8]
 8008b64:	607a      	str	r2, [r7, #4]
    newScreen->setupScreen();
 8008b66:	68fb      	ldr	r3, [r7, #12]
 8008b68:	681b      	ldr	r3, [r3, #0]
 8008b6a:	330c      	adds	r3, #12
 8008b6c:	681b      	ldr	r3, [r3, #0]
 8008b6e:	68f8      	ldr	r0, [r7, #12]
 8008b70:	4798      	blx	r3
    newPresenter->activate();
 8008b72:	68bb      	ldr	r3, [r7, #8]
 8008b74:	681b      	ldr	r3, [r3, #0]
 8008b76:	681b      	ldr	r3, [r3, #0]
 8008b78:	68b8      	ldr	r0, [r7, #8]
 8008b7a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8008b7c:	6879      	ldr	r1, [r7, #4]
 8008b7e:	68f8      	ldr	r0, [r7, #12]
 8008b80:	f005 fd96 	bl	800e6b0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8008b84:	687b      	ldr	r3, [r7, #4]
 8008b86:	681b      	ldr	r3, [r3, #0]
 8008b88:	3310      	adds	r3, #16
 8008b8a:	681b      	ldr	r3, [r3, #0]
 8008b8c:	6878      	ldr	r0, [r7, #4]
 8008b8e:	4798      	blx	r3

    Application::getInstance()->draw();
 8008b90:	f004 fce4 	bl	800d55c <_ZN8touchgfx11Application11getInstanceEv>
 8008b94:	4602      	mov	r2, r0
 8008b96:	6813      	ldr	r3, [r2, #0]
 8008b98:	3328      	adds	r3, #40	; 0x28
 8008b9a:	681b      	ldr	r3, [r3, #0]
 8008b9c:	4610      	mov	r0, r2
 8008b9e:	4798      	blx	r3
}
 8008ba0:	bf00      	nop
 8008ba2:	3710      	adds	r7, #16
 8008ba4:	46bd      	mov	sp, r7
 8008ba6:	bd80      	pop	{r7, pc}

08008ba8 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 8008ba8:	b480      	push	{r7}
 8008baa:	b083      	sub	sp, #12
 8008bac:	af00      	add	r7, sp, #0
 8008bae:	6078      	str	r0, [r7, #4]
 8008bb0:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 8008bb2:	687b      	ldr	r3, [r7, #4]
 8008bb4:	683a      	ldr	r2, [r7, #0]
 8008bb6:	601a      	str	r2, [r3, #0]
    }
 8008bb8:	bf00      	nop
 8008bba:	370c      	adds	r7, #12
 8008bbc:	46bd      	mov	sp, r7
 8008bbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bc2:	4770      	bx	lr

08008bc4 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8008bc4:	b580      	push	{r7, lr}
 8008bc6:	b082      	sub	sp, #8
 8008bc8:	af00      	add	r7, sp, #0
 8008bca:	6078      	str	r0, [r7, #4]
 8008bcc:	4a08      	ldr	r2, [pc, #32]	; (8008bf0 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 8008bce:	687b      	ldr	r3, [r7, #4]
 8008bd0:	601a      	str	r2, [r3, #0]
 8008bd2:	687b      	ldr	r3, [r7, #4]
 8008bd4:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8008bd8:	4618      	mov	r0, r3
 8008bda:	f000 fa59 	bl	8009090 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8008bde:	687b      	ldr	r3, [r7, #4]
 8008be0:	4618      	mov	r0, r3
 8008be2:	f7ff ff01 	bl	80089e8 <_ZN8touchgfx14MVPApplicationD1Ev>
 8008be6:	687b      	ldr	r3, [r7, #4]
 8008be8:	4618      	mov	r0, r3
 8008bea:	3708      	adds	r7, #8
 8008bec:	46bd      	mov	sp, r7
 8008bee:	bd80      	pop	{r7, pc}
 8008bf0:	0801c2d4 	.word	0x0801c2d4

08008bf4 <_ZN23FrontendApplicationBaseD0Ev>:
 8008bf4:	b580      	push	{r7, lr}
 8008bf6:	b082      	sub	sp, #8
 8008bf8:	af00      	add	r7, sp, #0
 8008bfa:	6078      	str	r0, [r7, #4]
 8008bfc:	6878      	ldr	r0, [r7, #4]
 8008bfe:	f7ff ffe1 	bl	8008bc4 <_ZN23FrontendApplicationBaseD1Ev>
 8008c02:	f44f 71a8 	mov.w	r1, #336	; 0x150
 8008c06:	6878      	ldr	r0, [r7, #4]
 8008c08:	f011 fec0 	bl	801a98c <_ZdlPvj>
 8008c0c:	687b      	ldr	r3, [r7, #4]
 8008c0e:	4618      	mov	r0, r3
 8008c10:	3708      	adds	r7, #8
 8008c12:	46bd      	mov	sp, r7
 8008c14:	bd80      	pop	{r7, pc}
	...

08008c18 <_ZN8touchgfx12NoTransitionC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    NoTransition() : Transition() { }
 8008c18:	b580      	push	{r7, lr}
 8008c1a:	b082      	sub	sp, #8
 8008c1c:	af00      	add	r7, sp, #0
 8008c1e:	6078      	str	r0, [r7, #4]
 8008c20:	687b      	ldr	r3, [r7, #4]
 8008c22:	4618      	mov	r0, r3
 8008c24:	f7ff fde6 	bl	80087f4 <_ZN8touchgfx10TransitionC1Ev>
 8008c28:	4a03      	ldr	r2, [pc, #12]	; (8008c38 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 8008c2a:	687b      	ldr	r3, [r7, #4]
 8008c2c:	601a      	str	r2, [r3, #0]
 8008c2e:	687b      	ldr	r3, [r7, #4]
 8008c30:	4618      	mov	r0, r3
 8008c32:	3708      	adds	r7, #8
 8008c34:	46bd      	mov	sp, r7
 8008c36:	bd80      	pop	{r7, pc}
 8008c38:	0801c2b4 	.word	0x0801c2b4

08008c3c <_ZN8touchgfx12NoTransitionD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~NoTransition() { }
 8008c3c:	b580      	push	{r7, lr}
 8008c3e:	b082      	sub	sp, #8
 8008c40:	af00      	add	r7, sp, #0
 8008c42:	6078      	str	r0, [r7, #4]
 8008c44:	4a05      	ldr	r2, [pc, #20]	; (8008c5c <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 8008c46:	687b      	ldr	r3, [r7, #4]
 8008c48:	601a      	str	r2, [r3, #0]
 8008c4a:	687b      	ldr	r3, [r7, #4]
 8008c4c:	4618      	mov	r0, r3
 8008c4e:	f7ff fde7 	bl	8008820 <_ZN8touchgfx10TransitionD1Ev>
 8008c52:	687b      	ldr	r3, [r7, #4]
 8008c54:	4618      	mov	r0, r3
 8008c56:	3708      	adds	r7, #8
 8008c58:	46bd      	mov	sp, r7
 8008c5a:	bd80      	pop	{r7, pc}
 8008c5c:	0801c2b4 	.word	0x0801c2b4

08008c60 <_ZN8touchgfx12NoTransitionD0Ev>:
 8008c60:	b580      	push	{r7, lr}
 8008c62:	b082      	sub	sp, #8
 8008c64:	af00      	add	r7, sp, #0
 8008c66:	6078      	str	r0, [r7, #4]
 8008c68:	6878      	ldr	r0, [r7, #4]
 8008c6a:	f7ff ffe7 	bl	8008c3c <_ZN8touchgfx12NoTransitionD1Ev>
 8008c6e:	210c      	movs	r1, #12
 8008c70:	6878      	ldr	r0, [r7, #4]
 8008c72:	f011 fe8b 	bl	801a98c <_ZdlPvj>
 8008c76:	687b      	ldr	r3, [r7, #4]
 8008c78:	4618      	mov	r0, r3
 8008c7a:	3708      	adds	r7, #8
 8008c7c:	46bd      	mov	sp, r7
 8008c7e:	bd80      	pop	{r7, pc}

08008c80 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
     *
     * @brief Indicates that the transition is done after the first tick.
     *
     *        Indicates that the transition is done after the first tick.
     */
    virtual void handleTickEvent()
 8008c80:	b480      	push	{r7}
 8008c82:	b083      	sub	sp, #12
 8008c84:	af00      	add	r7, sp, #0
 8008c86:	6078      	str	r0, [r7, #4]
    {
        done = true;
 8008c88:	687b      	ldr	r3, [r7, #4]
 8008c8a:	2201      	movs	r2, #1
 8008c8c:	721a      	strb	r2, [r3, #8]
    }
 8008c8e:	bf00      	nop
 8008c90:	370c      	adds	r7, #12
 8008c92:	46bd      	mov	sp, r7
 8008c94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c98:	4770      	bx	lr

08008c9a <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 8008c9a:	b480      	push	{r7}
 8008c9c:	b083      	sub	sp, #12
 8008c9e:	af00      	add	r7, sp, #0
 8008ca0:	6078      	str	r0, [r7, #4]
 8008ca2:	6039      	str	r1, [r7, #0]
    {
        model = m;
 8008ca4:	687b      	ldr	r3, [r7, #4]
 8008ca6:	683a      	ldr	r2, [r7, #0]
 8008ca8:	605a      	str	r2, [r3, #4]
    }
 8008caa:	bf00      	nop
 8008cac:	370c      	adds	r7, #12
 8008cae:	46bd      	mov	sp, r7
 8008cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cb4:	4770      	bx	lr
	...

08008cb8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8008cb8:	b580      	push	{r7, lr}
 8008cba:	b084      	sub	sp, #16
 8008cbc:	af00      	add	r7, sp, #0
 8008cbe:	60f8      	str	r0, [r7, #12]
 8008cc0:	60b9      	str	r1, [r7, #8]
 8008cc2:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8008cc4:	68fb      	ldr	r3, [r7, #12]
 8008cc6:	4618      	mov	r0, r3
 8008cc8:	f7ff fe6e 	bl	80089a8 <_ZN8touchgfx14MVPApplicationC1Ev>
 8008ccc:	4a12      	ldr	r2, [pc, #72]	; (8008d18 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
 8008cce:	68fb      	ldr	r3, [r7, #12]
 8008cd0:	601a      	str	r2, [r3, #0]
 8008cd2:	68fb      	ldr	r3, [r7, #12]
 8008cd4:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8008cd8:	4618      	mov	r0, r3
 8008cda:	f000 f89d 	bl	8008e18 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
 8008cde:	68fb      	ldr	r3, [r7, #12]
 8008ce0:	687a      	ldr	r2, [r7, #4]
 8008ce2:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
 8008ce6:	68fb      	ldr	r3, [r7, #12]
 8008ce8:	68ba      	ldr	r2, [r7, #8]
 8008cea:	f8c3 214c 	str.w	r2, [r3, #332]	; 0x14c
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8008cee:	f7ff fe0f 	bl	8008910 <_ZN8touchgfx3HAL11getInstanceEv>
 8008cf2:	4602      	mov	r2, r0
 8008cf4:	6813      	ldr	r3, [r2, #0]
 8008cf6:	3308      	adds	r3, #8
 8008cf8:	681b      	ldr	r3, [r3, #0]
 8008cfa:	2101      	movs	r1, #1
 8008cfc:	4610      	mov	r0, r2
 8008cfe:	4798      	blx	r3
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8008d00:	f7ff fe12 	bl	8008928 <_ZN8touchgfx3HAL3lcdEv>
 8008d04:	4603      	mov	r3, r0
 8008d06:	4618      	mov	r0, r3
 8008d08:	f00a fddb 	bl	80138c2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8008d0c:	68fb      	ldr	r3, [r7, #12]
 8008d0e:	4618      	mov	r0, r3
 8008d10:	3710      	adds	r7, #16
 8008d12:	46bd      	mov	sp, r7
 8008d14:	bd80      	pop	{r7, pc}
 8008d16:	bf00      	nop
 8008d18:	0801c2d4 	.word	0x0801c2d4

08008d1c <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8008d1c:	b480      	push	{r7}
 8008d1e:	b083      	sub	sp, #12
 8008d20:	af00      	add	r7, sp, #0
 8008d22:	6078      	str	r0, [r7, #4]
 8008d24:	6039      	str	r1, [r7, #0]
 8008d26:	687b      	ldr	r3, [r7, #4]
 8008d28:	4618      	mov	r0, r3
 8008d2a:	370c      	adds	r7, #12
 8008d2c:	46bd      	mov	sp, r7
 8008d2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d32:	4770      	bx	lr

08008d34 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *       three arguments of any type.
 *
 * @tparam dest_type The type of the class in which the member function resides.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008d34:	b580      	push	{r7, lr}
 8008d36:	b082      	sub	sp, #8
 8008d38:	af00      	add	r7, sp, #0
 8008d3a:	6078      	str	r0, [r7, #4]
 8008d3c:	6039      	str	r1, [r7, #0]
 8008d3e:	687b      	ldr	r3, [r7, #4]
 8008d40:	683a      	ldr	r2, [r7, #0]
 8008d42:	4611      	mov	r1, r2
 8008d44:	4618      	mov	r0, r3
 8008d46:	f7ff ffe9 	bl	8008d1c <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 8008d4a:	683b      	ldr	r3, [r7, #0]
 8008d4c:	685a      	ldr	r2, [r3, #4]
 8008d4e:	687b      	ldr	r3, [r7, #4]
 8008d50:	605a      	str	r2, [r3, #4]
 8008d52:	687b      	ldr	r3, [r7, #4]
 8008d54:	683a      	ldr	r2, [r7, #0]
 8008d56:	3308      	adds	r3, #8
 8008d58:	3208      	adds	r2, #8
 8008d5a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008d5e:	e883 0003 	stmia.w	r3, {r0, r1}
 8008d62:	687b      	ldr	r3, [r7, #4]
 8008d64:	4618      	mov	r0, r3
 8008d66:	3708      	adds	r7, #8
 8008d68:	46bd      	mov	sp, r7
 8008d6a:	bd80      	pop	{r7, pc}

08008d6c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 */

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
 8008d6c:	b590      	push	{r4, r7, lr}
 8008d6e:	b089      	sub	sp, #36	; 0x24
 8008d70:	af00      	add	r7, sp, #0
 8008d72:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
 8008d74:	687b      	ldr	r3, [r7, #4]
 8008d76:	f503 749c 	add.w	r4, r3, #312	; 0x138
 8008d7a:	4b10      	ldr	r3, [pc, #64]	; (8008dbc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x50>)
 8008d7c:	61bb      	str	r3, [r7, #24]
 8008d7e:	2300      	movs	r3, #0
 8008d80:	61fb      	str	r3, [r7, #28]
 8008d82:	f107 0008 	add.w	r0, r7, #8
 8008d86:	f107 0318 	add.w	r3, r7, #24
 8008d8a:	cb0c      	ldmia	r3, {r2, r3}
 8008d8c:	6879      	ldr	r1, [r7, #4]
 8008d8e:	f000 f85f 	bl	8008e50 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008d92:	f107 0308 	add.w	r3, r7, #8
 8008d96:	4619      	mov	r1, r3
 8008d98:	4620      	mov	r0, r4
 8008d9a:	f7ff ffcb 	bl	8008d34 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008d9e:	f107 0308 	add.w	r3, r7, #8
 8008da2:	4618      	mov	r0, r3
 8008da4:	f000 f974 	bl	8009090 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008da8:	687b      	ldr	r3, [r7, #4]
 8008daa:	f503 729c 	add.w	r2, r3, #312	; 0x138
 8008dae:	687b      	ldr	r3, [r7, #4]
 8008db0:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
}
 8008db4:	bf00      	nop
 8008db6:	3724      	adds	r7, #36	; 0x24
 8008db8:	46bd      	mov	sp, r7
 8008dba:	bd90      	pop	{r4, r7, pc}
 8008dbc:	08008dc1 	.word	0x08008dc1

08008dc0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8008dc0:	b580      	push	{r7, lr}
 8008dc2:	b084      	sub	sp, #16
 8008dc4:	af02      	add	r7, sp, #8
 8008dc6:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008dc8:	687b      	ldr	r3, [r7, #4]
 8008dca:	f503 7198 	add.w	r1, r3, #304	; 0x130
 8008dce:	687b      	ldr	r3, [r7, #4]
 8008dd0:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8008dd4:	461a      	mov	r2, r3
 8008dd6:	687b      	ldr	r3, [r7, #4]
 8008dd8:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
 8008ddc:	9300      	str	r3, [sp, #0]
 8008dde:	4b04      	ldr	r3, [pc, #16]	; (8008df0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x30>)
 8008de0:	4804      	ldr	r0, [pc, #16]	; (8008df4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x34>)
 8008de2:	f000 f855 	bl	8008e90 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008de6:	bf00      	nop
 8008de8:	3708      	adds	r7, #8
 8008dea:	46bd      	mov	sp, r7
 8008dec:	bd80      	pop	{r7, pc}
 8008dee:	bf00      	nop
 8008df0:	20026960 	.word	0x20026960
 8008df4:	2002695c 	.word	0x2002695c

08008df8 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8008df8:	b480      	push	{r7}
 8008dfa:	b083      	sub	sp, #12
 8008dfc:	af00      	add	r7, sp, #0
 8008dfe:	6078      	str	r0, [r7, #4]
 8008e00:	4a04      	ldr	r2, [pc, #16]	; (8008e14 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8008e02:	687b      	ldr	r3, [r7, #4]
 8008e04:	601a      	str	r2, [r3, #0]
 8008e06:	687b      	ldr	r3, [r7, #4]
 8008e08:	4618      	mov	r0, r3
 8008e0a:	370c      	adds	r7, #12
 8008e0c:	46bd      	mov	sp, r7
 8008e0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e12:	4770      	bx	lr
 8008e14:	0801c364 	.word	0x0801c364

08008e18 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Initializes an empty callback.
     */
    Callback() : pobject(0), pmemfun_0(0) { }
 8008e18:	b580      	push	{r7, lr}
 8008e1a:	b082      	sub	sp, #8
 8008e1c:	af00      	add	r7, sp, #0
 8008e1e:	6078      	str	r0, [r7, #4]
 8008e20:	687b      	ldr	r3, [r7, #4]
 8008e22:	4618      	mov	r0, r3
 8008e24:	f7ff ffe8 	bl	8008df8 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008e28:	4a08      	ldr	r2, [pc, #32]	; (8008e4c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 8008e2a:	687b      	ldr	r3, [r7, #4]
 8008e2c:	601a      	str	r2, [r3, #0]
 8008e2e:	687b      	ldr	r3, [r7, #4]
 8008e30:	2200      	movs	r2, #0
 8008e32:	605a      	str	r2, [r3, #4]
 8008e34:	687b      	ldr	r3, [r7, #4]
 8008e36:	2200      	movs	r2, #0
 8008e38:	609a      	str	r2, [r3, #8]
 8008e3a:	687b      	ldr	r3, [r7, #4]
 8008e3c:	2200      	movs	r2, #0
 8008e3e:	60da      	str	r2, [r3, #12]
 8008e40:	687b      	ldr	r3, [r7, #4]
 8008e42:	4618      	mov	r0, r3
 8008e44:	3708      	adds	r7, #8
 8008e46:	46bd      	mov	sp, r7
 8008e48:	bd80      	pop	{r7, pc}
 8008e4a:	bf00      	nop
 8008e4c:	0801c310 	.word	0x0801c310

08008e50 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pobject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function
     *                       takes zero arguments.
     */
    Callback(dest_type* pobject, void (dest_type::*pmemfun_0)())
 8008e50:	b580      	push	{r7, lr}
 8008e52:	b084      	sub	sp, #16
 8008e54:	af00      	add	r7, sp, #0
 8008e56:	60f8      	str	r0, [r7, #12]
 8008e58:	60b9      	str	r1, [r7, #8]
 8008e5a:	4639      	mov	r1, r7
 8008e5c:	e881 000c 	stmia.w	r1, {r2, r3}
    {
 8008e60:	68fb      	ldr	r3, [r7, #12]
 8008e62:	4618      	mov	r0, r3
 8008e64:	f7ff ffc8 	bl	8008df8 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008e68:	4a08      	ldr	r2, [pc, #32]	; (8008e8c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 8008e6a:	68fb      	ldr	r3, [r7, #12]
 8008e6c:	601a      	str	r2, [r3, #0]
        this->pobject = pobject;
 8008e6e:	68fb      	ldr	r3, [r7, #12]
 8008e70:	68ba      	ldr	r2, [r7, #8]
 8008e72:	605a      	str	r2, [r3, #4]
        this->pmemfun_0 = pmemfun_0;
 8008e74:	68fb      	ldr	r3, [r7, #12]
 8008e76:	3308      	adds	r3, #8
 8008e78:	463a      	mov	r2, r7
 8008e7a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008e7e:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 8008e82:	68fb      	ldr	r3, [r7, #12]
 8008e84:	4618      	mov	r0, r3
 8008e86:	3710      	adds	r7, #16
 8008e88:	46bd      	mov	sp, r7
 8008e8a:	bd80      	pop	{r7, pc}
 8008e8c:	0801c310 	.word	0x0801c310

08008e90 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template< class ScreenType, class PresenterType, class TransType, class ModelType  >
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008e90:	b590      	push	{r4, r7, lr}
 8008e92:	b089      	sub	sp, #36	; 0x24
 8008e94:	af00      	add	r7, sp, #0
 8008e96:	60f8      	str	r0, [r7, #12]
 8008e98:	60b9      	str	r1, [r7, #8]
 8008e9a:	607a      	str	r2, [r7, #4]
 8008e9c:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8008e9e:	687b      	ldr	r3, [r7, #4]
 8008ea0:	689a      	ldr	r2, [r3, #8]
 8008ea2:	687b      	ldr	r3, [r7, #4]
 8008ea4:	689b      	ldr	r3, [r3, #8]
 8008ea6:	681b      	ldr	r3, [r3, #0]
 8008ea8:	3320      	adds	r3, #32
 8008eaa:	681b      	ldr	r3, [r3, #0]
 8008eac:	4610      	mov	r0, r2
 8008eae:	4798      	blx	r3
 8008eb0:	4603      	mov	r3, r0
 8008eb2:	2b73      	cmp	r3, #115	; 0x73
 8008eb4:	d805      	bhi.n	8008ec2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x32>
 8008eb6:	4b4d      	ldr	r3, [pc, #308]	; (8008fec <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x15c>)
 8008eb8:	4a4d      	ldr	r2, [pc, #308]	; (8008ff0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>)
 8008eba:	21c2      	movs	r1, #194	; 0xc2
 8008ebc:	484d      	ldr	r0, [pc, #308]	; (8008ff4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8008ebe:	f011 fd91 	bl	801a9e4 <__assert_func>
 8008ec2:	bf00      	nop
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8008ec4:	687b      	ldr	r3, [r7, #4]
 8008ec6:	685a      	ldr	r2, [r3, #4]
 8008ec8:	687b      	ldr	r3, [r7, #4]
 8008eca:	685b      	ldr	r3, [r3, #4]
 8008ecc:	681b      	ldr	r3, [r3, #0]
 8008ece:	3320      	adds	r3, #32
 8008ed0:	681b      	ldr	r3, [r3, #0]
 8008ed2:	4610      	mov	r0, r2
 8008ed4:	4798      	blx	r3
 8008ed6:	4603      	mov	r3, r0
 8008ed8:	2b0f      	cmp	r3, #15
 8008eda:	d805      	bhi.n	8008ee8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8008edc:	4b46      	ldr	r3, [pc, #280]	; (8008ff8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 8008ede:	4a44      	ldr	r2, [pc, #272]	; (8008ff0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>)
 8008ee0:	21c3      	movs	r1, #195	; 0xc3
 8008ee2:	4844      	ldr	r0, [pc, #272]	; (8008ff4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8008ee4:	f011 fd7e 	bl	801a9e4 <__assert_func>
 8008ee8:	bf00      	nop
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8008eea:	687b      	ldr	r3, [r7, #4]
 8008eec:	68da      	ldr	r2, [r3, #12]
 8008eee:	687b      	ldr	r3, [r7, #4]
 8008ef0:	68db      	ldr	r3, [r3, #12]
 8008ef2:	681b      	ldr	r3, [r3, #0]
 8008ef4:	3320      	adds	r3, #32
 8008ef6:	681b      	ldr	r3, [r3, #0]
 8008ef8:	4610      	mov	r0, r2
 8008efa:	4798      	blx	r3
 8008efc:	4603      	mov	r3, r0
 8008efe:	2b0b      	cmp	r3, #11
 8008f00:	d805      	bhi.n	8008f0e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
 8008f02:	4b3e      	ldr	r3, [pc, #248]	; (8008ffc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x16c>)
 8008f04:	4a3a      	ldr	r2, [pc, #232]	; (8008ff0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>)
 8008f06:	21c4      	movs	r1, #196	; 0xc4
 8008f08:	483a      	ldr	r0, [pc, #232]	; (8008ff4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8008f0a:	f011 fd6b 	bl	801a9e4 <__assert_func>
 8008f0e:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);
 8008f10:	683a      	ldr	r2, [r7, #0]
 8008f12:	68b9      	ldr	r1, [r7, #8]
 8008f14:	68f8      	ldr	r0, [r7, #12]
 8008f16:	f7ff fdc4 	bl	8008aa2 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE>

    TransType* newTransition = new (&heap.transitionStorage.at< TransType >(0)) TransType;
 8008f1a:	687b      	ldr	r3, [r7, #4]
 8008f1c:	68db      	ldr	r3, [r3, #12]
 8008f1e:	2100      	movs	r1, #0
 8008f20:	4618      	mov	r0, r3
 8008f22:	f000 f86d 	bl	8009000 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8008f26:	4603      	mov	r3, r0
 8008f28:	4619      	mov	r1, r3
 8008f2a:	200c      	movs	r0, #12
 8008f2c:	f7ff fbf4 	bl	8008718 <_ZnwjPv>
 8008f30:	4604      	mov	r4, r0
 8008f32:	2c00      	cmp	r4, #0
 8008f34:	d004      	beq.n	8008f40 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb0>
 8008f36:	4620      	mov	r0, r4
 8008f38:	f7ff fe6e 	bl	8008c18 <_ZN8touchgfx12NoTransitionC1Ev>
 8008f3c:	4623      	mov	r3, r4
 8008f3e:	e000      	b.n	8008f42 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb2>
 8008f40:	4623      	mov	r3, r4
 8008f42:	61fb      	str	r3, [r7, #28]
    ScreenType* newScreen = new (&heap.screenStorage.at< ScreenType >(0)) ScreenType;
 8008f44:	687b      	ldr	r3, [r7, #4]
 8008f46:	689b      	ldr	r3, [r3, #8]
 8008f48:	2100      	movs	r1, #0
 8008f4a:	4618      	mov	r0, r3
 8008f4c:	f000 f86b 	bl	8009026 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 8008f50:	4603      	mov	r3, r0
 8008f52:	4619      	mov	r1, r3
 8008f54:	2074      	movs	r0, #116	; 0x74
 8008f56:	f7ff fbdf 	bl	8008718 <_ZnwjPv>
 8008f5a:	4604      	mov	r4, r0
 8008f5c:	2c00      	cmp	r4, #0
 8008f5e:	d004      	beq.n	8008f6a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xda>
 8008f60:	4620      	mov	r0, r4
 8008f62:	f000 fef7 	bl	8009d54 <_ZN11Screen1ViewC1Ev>
 8008f66:	4623      	mov	r3, r4
 8008f68:	e000      	b.n	8008f6c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xdc>
 8008f6a:	4623      	mov	r3, r4
 8008f6c:	61bb      	str	r3, [r7, #24]
    PresenterType* newPresenter = new (&heap.presenterStorage.at< PresenterType >(0)) PresenterType(*newScreen);
 8008f6e:	687b      	ldr	r3, [r7, #4]
 8008f70:	685b      	ldr	r3, [r3, #4]
 8008f72:	2100      	movs	r1, #0
 8008f74:	4618      	mov	r0, r3
 8008f76:	f000 f869 	bl	800904c <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 8008f7a:	4603      	mov	r3, r0
 8008f7c:	4619      	mov	r1, r3
 8008f7e:	2010      	movs	r0, #16
 8008f80:	f7ff fbca 	bl	8008718 <_ZnwjPv>
 8008f84:	4604      	mov	r4, r0
 8008f86:	2c00      	cmp	r4, #0
 8008f88:	d005      	beq.n	8008f96 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x106>
 8008f8a:	69b9      	ldr	r1, [r7, #24]
 8008f8c:	4620      	mov	r0, r4
 8008f8e:	f000 fe8b 	bl	8009ca8 <_ZN16Screen1PresenterC1ER11Screen1View>
 8008f92:	4623      	mov	r3, r4
 8008f94:	e000      	b.n	8008f98 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x108>
 8008f96:	4623      	mov	r3, r4
 8008f98:	617b      	str	r3, [r7, #20]
    *currentTrans = newTransition;
 8008f9a:	683b      	ldr	r3, [r7, #0]
 8008f9c:	69fa      	ldr	r2, [r7, #28]
 8008f9e:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8008fa0:	68bb      	ldr	r3, [r7, #8]
 8008fa2:	697a      	ldr	r2, [r7, #20]
 8008fa4:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8008fa6:	68fb      	ldr	r3, [r7, #12]
 8008fa8:	69ba      	ldr	r2, [r7, #24]
 8008faa:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8008fac:	697b      	ldr	r3, [r7, #20]
 8008fae:	2b00      	cmp	r3, #0
 8008fb0:	d002      	beq.n	8008fb8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>
 8008fb2:	697b      	ldr	r3, [r7, #20]
 8008fb4:	3304      	adds	r3, #4
 8008fb6:	e000      	b.n	8008fba <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12a>
 8008fb8:	2300      	movs	r3, #0
 8008fba:	4619      	mov	r1, r3
 8008fbc:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8008fbe:	f7ff fdf3 	bl	8008ba8 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8008fc2:	697b      	ldr	r3, [r7, #20]
 8008fc4:	3304      	adds	r3, #4
 8008fc6:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8008fc8:	4618      	mov	r0, r3
 8008fca:	f7ff fe66 	bl	8008c9a <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8008fce:	69bb      	ldr	r3, [r7, #24]
 8008fd0:	6979      	ldr	r1, [r7, #20]
 8008fd2:	4618      	mov	r0, r3
 8008fd4:	f000 f84d 	bl	8009072 <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);
 8008fd8:	69fa      	ldr	r2, [r7, #28]
 8008fda:	6979      	ldr	r1, [r7, #20]
 8008fdc:	69b8      	ldr	r0, [r7, #24]
 8008fde:	f7ff fdbc 	bl	8008b5a <_ZN8touchgfxL18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE>

    return newPresenter;
 8008fe2:	697b      	ldr	r3, [r7, #20]
}
 8008fe4:	4618      	mov	r0, r3
 8008fe6:	3724      	adds	r7, #36	; 0x24
 8008fe8:	46bd      	mov	sp, r7
 8008fea:	bd90      	pop	{r4, r7, pc}
 8008fec:	0801bedc 	.word	0x0801bedc
 8008ff0:	0801c3bc 	.word	0x0801c3bc
 8008ff4:	0801bf6c 	.word	0x0801bf6c
 8008ff8:	0801bfb0 	.word	0x0801bfb0
 8008ffc:	0801c054 	.word	0x0801c054

08009000 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template< typename T >
    T& at(const uint16_t index)
 8009000:	b580      	push	{r7, lr}
 8009002:	b082      	sub	sp, #8
 8009004:	af00      	add	r7, sp, #0
 8009006:	6078      	str	r0, [r7, #4]
 8009008:	460b      	mov	r3, r1
 800900a:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800900c:	687b      	ldr	r3, [r7, #4]
 800900e:	681b      	ldr	r3, [r3, #0]
 8009010:	3324      	adds	r3, #36	; 0x24
 8009012:	681b      	ldr	r3, [r3, #0]
 8009014:	887a      	ldrh	r2, [r7, #2]
 8009016:	4611      	mov	r1, r2
 8009018:	6878      	ldr	r0, [r7, #4]
 800901a:	4798      	blx	r3
 800901c:	4603      	mov	r3, r0
    }
 800901e:	4618      	mov	r0, r3
 8009020:	3708      	adds	r7, #8
 8009022:	46bd      	mov	sp, r7
 8009024:	bd80      	pop	{r7, pc}

08009026 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
    T& at(const uint16_t index)
 8009026:	b580      	push	{r7, lr}
 8009028:	b082      	sub	sp, #8
 800902a:	af00      	add	r7, sp, #0
 800902c:	6078      	str	r0, [r7, #4]
 800902e:	460b      	mov	r3, r1
 8009030:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009032:	687b      	ldr	r3, [r7, #4]
 8009034:	681b      	ldr	r3, [r3, #0]
 8009036:	3324      	adds	r3, #36	; 0x24
 8009038:	681b      	ldr	r3, [r3, #0]
 800903a:	887a      	ldrh	r2, [r7, #2]
 800903c:	4611      	mov	r1, r2
 800903e:	6878      	ldr	r0, [r7, #4]
 8009040:	4798      	blx	r3
 8009042:	4603      	mov	r3, r0
    }
 8009044:	4618      	mov	r0, r3
 8009046:	3708      	adds	r7, #8
 8009048:	46bd      	mov	sp, r7
 800904a:	bd80      	pop	{r7, pc}

0800904c <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 800904c:	b580      	push	{r7, lr}
 800904e:	b082      	sub	sp, #8
 8009050:	af00      	add	r7, sp, #0
 8009052:	6078      	str	r0, [r7, #4]
 8009054:	460b      	mov	r3, r1
 8009056:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009058:	687b      	ldr	r3, [r7, #4]
 800905a:	681b      	ldr	r3, [r3, #0]
 800905c:	3324      	adds	r3, #36	; 0x24
 800905e:	681b      	ldr	r3, [r3, #0]
 8009060:	887a      	ldrh	r2, [r7, #2]
 8009062:	4611      	mov	r1, r2
 8009064:	6878      	ldr	r0, [r7, #4]
 8009066:	4798      	blx	r3
 8009068:	4603      	mov	r3, r0
    }
 800906a:	4618      	mov	r0, r3
 800906c:	3708      	adds	r7, #8
 800906e:	46bd      	mov	sp, r7
 8009070:	bd80      	pop	{r7, pc}

08009072 <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>:
     *        Binds an instance of a specific Presenter type (subclass) to the View instance.
     *        This function is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
 8009072:	b480      	push	{r7}
 8009074:	b083      	sub	sp, #12
 8009076:	af00      	add	r7, sp, #0
 8009078:	6078      	str	r0, [r7, #4]
 800907a:	6039      	str	r1, [r7, #0]
    {
        this->presenter = &presenter;
 800907c:	687b      	ldr	r3, [r7, #4]
 800907e:	683a      	ldr	r2, [r7, #0]
 8009080:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8009082:	bf00      	nop
 8009084:	370c      	adds	r7, #12
 8009086:	46bd      	mov	sp, r7
 8009088:	f85d 7b04 	ldr.w	r7, [sp], #4
 800908c:	4770      	bx	lr
	...

08009090 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8009090:	b580      	push	{r7, lr}
 8009092:	b082      	sub	sp, #8
 8009094:	af00      	add	r7, sp, #0
 8009096:	6078      	str	r0, [r7, #4]
 8009098:	4a05      	ldr	r2, [pc, #20]	; (80090b0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800909a:	687b      	ldr	r3, [r7, #4]
 800909c:	601a      	str	r2, [r3, #0]
 800909e:	687b      	ldr	r3, [r7, #4]
 80090a0:	4618      	mov	r0, r3
 80090a2:	f7ff fc15 	bl	80088d0 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 80090a6:	687b      	ldr	r3, [r7, #4]
 80090a8:	4618      	mov	r0, r3
 80090aa:	3708      	adds	r7, #8
 80090ac:	46bd      	mov	sp, r7
 80090ae:	bd80      	pop	{r7, pc}
 80090b0:	0801c310 	.word	0x0801c310

080090b4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 80090b4:	b580      	push	{r7, lr}
 80090b6:	b082      	sub	sp, #8
 80090b8:	af00      	add	r7, sp, #0
 80090ba:	6078      	str	r0, [r7, #4]
 80090bc:	6878      	ldr	r0, [r7, #4]
 80090be:	f7ff ffe7 	bl	8009090 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 80090c2:	2110      	movs	r1, #16
 80090c4:	6878      	ldr	r0, [r7, #4]
 80090c6:	f011 fc61 	bl	801a98c <_ZdlPvj>
 80090ca:	687b      	ldr	r3, [r7, #4]
 80090cc:	4618      	mov	r0, r3
 80090ce:	3708      	adds	r7, #8
 80090d0:	46bd      	mov	sp, r7
 80090d2:	bd80      	pop	{r7, pc}

080090d4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * @brief Calls the member function.
     *
     *        Calls the member function. Do not call execute unless isValid() returns true (ie.
     *        a pointer to the object and the function has been set).
     */
    virtual void execute()
 80090d4:	b580      	push	{r7, lr}
 80090d6:	b082      	sub	sp, #8
 80090d8:	af00      	add	r7, sp, #0
 80090da:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun_0)();
 80090dc:	687b      	ldr	r3, [r7, #4]
 80090de:	685b      	ldr	r3, [r3, #4]
 80090e0:	687a      	ldr	r2, [r7, #4]
 80090e2:	68d2      	ldr	r2, [r2, #12]
 80090e4:	1052      	asrs	r2, r2, #1
 80090e6:	1899      	adds	r1, r3, r2
 80090e8:	687b      	ldr	r3, [r7, #4]
 80090ea:	68db      	ldr	r3, [r3, #12]
 80090ec:	f003 0301 	and.w	r3, r3, #1
 80090f0:	2b00      	cmp	r3, #0
 80090f2:	d102      	bne.n	80090fa <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 80090f4:	687b      	ldr	r3, [r7, #4]
 80090f6:	689b      	ldr	r3, [r3, #8]
 80090f8:	e00a      	b.n	8009110 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 80090fa:	687b      	ldr	r3, [r7, #4]
 80090fc:	685b      	ldr	r3, [r3, #4]
 80090fe:	687a      	ldr	r2, [r7, #4]
 8009100:	68d2      	ldr	r2, [r2, #12]
 8009102:	1052      	asrs	r2, r2, #1
 8009104:	4413      	add	r3, r2
 8009106:	681b      	ldr	r3, [r3, #0]
 8009108:	687a      	ldr	r2, [r7, #4]
 800910a:	6892      	ldr	r2, [r2, #8]
 800910c:	4413      	add	r3, r2
 800910e:	681b      	ldr	r3, [r3, #0]
 8009110:	4608      	mov	r0, r1
 8009112:	4798      	blx	r3
    }
 8009114:	bf00      	nop
 8009116:	3708      	adds	r7, #8
 8009118:	46bd      	mov	sp, r7
 800911a:	bd80      	pop	{r7, pc}

0800911c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     *        Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800911c:	b480      	push	{r7}
 800911e:	b083      	sub	sp, #12
 8009120:	af00      	add	r7, sp, #0
 8009122:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8009124:	687b      	ldr	r3, [r7, #4]
 8009126:	685b      	ldr	r3, [r3, #4]
 8009128:	2b00      	cmp	r3, #0
 800912a:	d010      	beq.n	800914e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800912c:	687b      	ldr	r3, [r7, #4]
 800912e:	689b      	ldr	r3, [r3, #8]
 8009130:	2b00      	cmp	r3, #0
 8009132:	d107      	bne.n	8009144 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8009134:	687b      	ldr	r3, [r7, #4]
 8009136:	68db      	ldr	r3, [r3, #12]
 8009138:	f003 0301 	and.w	r3, r3, #1
 800913c:	2b00      	cmp	r3, #0
 800913e:	d101      	bne.n	8009144 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8009140:	2301      	movs	r3, #1
 8009142:	e000      	b.n	8009146 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 8009144:	2300      	movs	r3, #0
 8009146:	2b01      	cmp	r3, #1
 8009148:	d001      	beq.n	800914e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800914a:	2301      	movs	r3, #1
 800914c:	e000      	b.n	8009150 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800914e:	2300      	movs	r3, #0
    }
 8009150:	4618      	mov	r0, r3
 8009152:	370c      	adds	r7, #12
 8009154:	46bd      	mov	sp, r7
 8009156:	f85d 7b04 	ldr.w	r7, [sp], #4
 800915a:	4770      	bx	lr

0800915c <_ZN8touchgfx4RectC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor. Resulting in an empty Rect with coordinates 0,0.
     */
    Rect()
 800915c:	b480      	push	{r7}
 800915e:	b083      	sub	sp, #12
 8009160:	af00      	add	r7, sp, #0
 8009162:	6078      	str	r0, [r7, #4]
    {
        this->x = 0;
 8009164:	687b      	ldr	r3, [r7, #4]
 8009166:	2200      	movs	r2, #0
 8009168:	801a      	strh	r2, [r3, #0]
        this->y = 0;
 800916a:	687b      	ldr	r3, [r7, #4]
 800916c:	2200      	movs	r2, #0
 800916e:	805a      	strh	r2, [r3, #2]
        this->width = 0;
 8009170:	687b      	ldr	r3, [r7, #4]
 8009172:	2200      	movs	r2, #0
 8009174:	809a      	strh	r2, [r3, #4]
        this->height = 0;
 8009176:	687b      	ldr	r3, [r7, #4]
 8009178:	2200      	movs	r2, #0
 800917a:	80da      	strh	r2, [r3, #6]
    }
 800917c:	687b      	ldr	r3, [r7, #4]
 800917e:	4618      	mov	r0, r3
 8009180:	370c      	adds	r7, #12
 8009182:	46bd      	mov	sp, r7
 8009184:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009188:	4770      	bx	lr

0800918a <_ZN8touchgfx4RectC1Essss>:
     * @param x      The x coordinate.
     * @param y      The y coordinate.
     * @param width  The width.
     * @param height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
 800918a:	b480      	push	{r7}
 800918c:	b085      	sub	sp, #20
 800918e:	af00      	add	r7, sp, #0
 8009190:	60f8      	str	r0, [r7, #12]
 8009192:	4608      	mov	r0, r1
 8009194:	4611      	mov	r1, r2
 8009196:	461a      	mov	r2, r3
 8009198:	4603      	mov	r3, r0
 800919a:	817b      	strh	r3, [r7, #10]
 800919c:	460b      	mov	r3, r1
 800919e:	813b      	strh	r3, [r7, #8]
 80091a0:	4613      	mov	r3, r2
 80091a2:	80fb      	strh	r3, [r7, #6]
    {
        this->x = x;
 80091a4:	68fb      	ldr	r3, [r7, #12]
 80091a6:	897a      	ldrh	r2, [r7, #10]
 80091a8:	801a      	strh	r2, [r3, #0]
        this->y = y;
 80091aa:	68fb      	ldr	r3, [r7, #12]
 80091ac:	893a      	ldrh	r2, [r7, #8]
 80091ae:	805a      	strh	r2, [r3, #2]
        this->width = width;
 80091b0:	68fb      	ldr	r3, [r7, #12]
 80091b2:	88fa      	ldrh	r2, [r7, #6]
 80091b4:	809a      	strh	r2, [r3, #4]
        this->height = height;
 80091b6:	68fb      	ldr	r3, [r7, #12]
 80091b8:	8b3a      	ldrh	r2, [r7, #24]
 80091ba:	80da      	strh	r2, [r3, #6]
    }
 80091bc:	68fb      	ldr	r3, [r7, #12]
 80091be:	4618      	mov	r0, r3
 80091c0:	3714      	adds	r7, #20
 80091c2:	46bd      	mov	sp, r7
 80091c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091c8:	4770      	bx	lr

080091ca <_ZN8touchgfx6BitmapC1Et>:
     *        Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     *        array.
     *
     * @param id The unique bitmap identifier.
     */
    explicit Bitmap(const BitmapId id = BITMAP_INVALID)
 80091ca:	b480      	push	{r7}
 80091cc:	b083      	sub	sp, #12
 80091ce:	af00      	add	r7, sp, #0
 80091d0:	6078      	str	r0, [r7, #4]
 80091d2:	460b      	mov	r3, r1
 80091d4:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 80091d6:	687b      	ldr	r3, [r7, #4]
 80091d8:	887a      	ldrh	r2, [r7, #2]
 80091da:	801a      	strh	r2, [r3, #0]
    {
    }
 80091dc:	687b      	ldr	r3, [r7, #4]
 80091de:	4618      	mov	r0, r3
 80091e0:	370c      	adds	r7, #12
 80091e2:	46bd      	mov	sp, r7
 80091e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091e8:	4770      	bx	lr
	...

080091ec <_ZN8touchgfx8DrawableC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Drawable() : rect(0, 0, 0, 0),
 80091ec:	b580      	push	{r7, lr}
 80091ee:	b084      	sub	sp, #16
 80091f0:	af02      	add	r7, sp, #8
 80091f2:	6078      	str	r0, [r7, #4]
        parent(0),
        nextSibling(0),
        nextDrawChainElement(0),
        touchable(false),
        visible(true)
 80091f4:	4a13      	ldr	r2, [pc, #76]	; (8009244 <_ZN8touchgfx8DrawableC1Ev+0x58>)
 80091f6:	687b      	ldr	r3, [r7, #4]
 80091f8:	601a      	str	r2, [r3, #0]
 80091fa:	687b      	ldr	r3, [r7, #4]
 80091fc:	1d18      	adds	r0, r3, #4
 80091fe:	2300      	movs	r3, #0
 8009200:	9300      	str	r3, [sp, #0]
 8009202:	2300      	movs	r3, #0
 8009204:	2200      	movs	r2, #0
 8009206:	2100      	movs	r1, #0
 8009208:	f7ff ffbf 	bl	800918a <_ZN8touchgfx4RectC1Essss>
 800920c:	687b      	ldr	r3, [r7, #4]
 800920e:	330c      	adds	r3, #12
 8009210:	4618      	mov	r0, r3
 8009212:	f7ff ffa3 	bl	800915c <_ZN8touchgfx4RectC1Ev>
 8009216:	687b      	ldr	r3, [r7, #4]
 8009218:	2200      	movs	r2, #0
 800921a:	615a      	str	r2, [r3, #20]
 800921c:	687b      	ldr	r3, [r7, #4]
 800921e:	2200      	movs	r2, #0
 8009220:	619a      	str	r2, [r3, #24]
 8009222:	687b      	ldr	r3, [r7, #4]
 8009224:	2200      	movs	r2, #0
 8009226:	61da      	str	r2, [r3, #28]
 8009228:	687b      	ldr	r3, [r7, #4]
 800922a:	2200      	movs	r2, #0
 800922c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8009230:	687b      	ldr	r3, [r7, #4]
 8009232:	2201      	movs	r2, #1
 8009234:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 8009238:	687b      	ldr	r3, [r7, #4]
 800923a:	4618      	mov	r0, r3
 800923c:	3708      	adds	r7, #8
 800923e:	46bd      	mov	sp, r7
 8009240:	bd80      	pop	{r7, pc}
 8009242:	bf00      	nop
 8009244:	0801d888 	.word	0x0801d888

08009248 <_ZN8touchgfx8DrawableD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Drawable() { }
 8009248:	b480      	push	{r7}
 800924a:	b083      	sub	sp, #12
 800924c:	af00      	add	r7, sp, #0
 800924e:	6078      	str	r0, [r7, #4]
 8009250:	4a04      	ldr	r2, [pc, #16]	; (8009264 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8009252:	687b      	ldr	r3, [r7, #4]
 8009254:	601a      	str	r2, [r3, #0]
 8009256:	687b      	ldr	r3, [r7, #4]
 8009258:	4618      	mov	r0, r3
 800925a:	370c      	adds	r7, #12
 800925c:	46bd      	mov	sp, r7
 800925e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009262:	4770      	bx	lr
 8009264:	0801d888 	.word	0x0801d888

08009268 <_ZN8touchgfx8DrawableD0Ev>:
 8009268:	b580      	push	{r7, lr}
 800926a:	b082      	sub	sp, #8
 800926c:	af00      	add	r7, sp, #0
 800926e:	6078      	str	r0, [r7, #4]
 8009270:	6878      	ldr	r0, [r7, #4]
 8009272:	f7ff ffe9 	bl	8009248 <_ZN8touchgfx8DrawableD1Ev>
 8009276:	2128      	movs	r1, #40	; 0x28
 8009278:	6878      	ldr	r0, [r7, #4]
 800927a:	f011 fb87 	bl	801a98c <_ZdlPvj>
 800927e:	687b      	ldr	r3, [r7, #4]
 8009280:	4618      	mov	r0, r3
 8009282:	3708      	adds	r7, #8
 8009284:	46bd      	mov	sp, r7
 8009286:	bd80      	pop	{r7, pc}

08009288 <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param x      The x coordinate of this Drawable.
     * @param y      The y coordinate of this Drawable.
     * @param width  The width of this Drawable.
     * @param height The height of this Drawable.
     */
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8009288:	b580      	push	{r7, lr}
 800928a:	b084      	sub	sp, #16
 800928c:	af00      	add	r7, sp, #0
 800928e:	60f8      	str	r0, [r7, #12]
 8009290:	4608      	mov	r0, r1
 8009292:	4611      	mov	r1, r2
 8009294:	461a      	mov	r2, r3
 8009296:	4603      	mov	r3, r0
 8009298:	817b      	strh	r3, [r7, #10]
 800929a:	460b      	mov	r3, r1
 800929c:	813b      	strh	r3, [r7, #8]
 800929e:	4613      	mov	r3, r2
 80092a0:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 80092a2:	68fb      	ldr	r3, [r7, #12]
 80092a4:	681b      	ldr	r3, [r3, #0]
 80092a6:	3334      	adds	r3, #52	; 0x34
 80092a8:	681b      	ldr	r3, [r3, #0]
 80092aa:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 80092ae:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80092b2:	68f8      	ldr	r0, [r7, #12]
 80092b4:	4798      	blx	r3
        setWidth(width);
 80092b6:	68fb      	ldr	r3, [r7, #12]
 80092b8:	681b      	ldr	r3, [r3, #0]
 80092ba:	3338      	adds	r3, #56	; 0x38
 80092bc:	681b      	ldr	r3, [r3, #0]
 80092be:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 80092c2:	4611      	mov	r1, r2
 80092c4:	68f8      	ldr	r0, [r7, #12]
 80092c6:	4798      	blx	r3
        setHeight(height);
 80092c8:	68fb      	ldr	r3, [r7, #12]
 80092ca:	681b      	ldr	r3, [r3, #0]
 80092cc:	333c      	adds	r3, #60	; 0x3c
 80092ce:	681b      	ldr	r3, [r3, #0]
 80092d0:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 80092d4:	4611      	mov	r1, r2
 80092d6:	68f8      	ldr	r0, [r7, #12]
 80092d8:	4798      	blx	r3
    }
 80092da:	bf00      	nop
 80092dc:	3710      	adds	r7, #16
 80092de:	46bd      	mov	sp, r7
 80092e0:	bd80      	pop	{r7, pc}

080092e2 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param x The new x value, relative to the parent. A negative value is allowed.
     */
    virtual void setX(int16_t x)
 80092e2:	b480      	push	{r7}
 80092e4:	b083      	sub	sp, #12
 80092e6:	af00      	add	r7, sp, #0
 80092e8:	6078      	str	r0, [r7, #4]
 80092ea:	460b      	mov	r3, r1
 80092ec:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 80092ee:	687b      	ldr	r3, [r7, #4]
 80092f0:	887a      	ldrh	r2, [r7, #2]
 80092f2:	809a      	strh	r2, [r3, #4]
    }
 80092f4:	bf00      	nop
 80092f6:	370c      	adds	r7, #12
 80092f8:	46bd      	mov	sp, r7
 80092fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092fe:	4770      	bx	lr

08009300 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param y The new y value, relative to the parent. A negative value is allowed.
     */
    virtual void setY(int16_t y)
 8009300:	b480      	push	{r7}
 8009302:	b083      	sub	sp, #12
 8009304:	af00      	add	r7, sp, #0
 8009306:	6078      	str	r0, [r7, #4]
 8009308:	460b      	mov	r3, r1
 800930a:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800930c:	687b      	ldr	r3, [r7, #4]
 800930e:	887a      	ldrh	r2, [r7, #2]
 8009310:	80da      	strh	r2, [r3, #6]
    }
 8009312:	bf00      	nop
 8009314:	370c      	adds	r7, #12
 8009316:	46bd      	mov	sp, r7
 8009318:	f85d 7b04 	ldr.w	r7, [sp], #4
 800931c:	4770      	bx	lr

0800931e <_ZN8touchgfx8Drawable5setXYEss>:
     * @note Changing this does not automatically yield a redraw.
     *
     * @param x The new x value, relative to the parent. A negative value is allowed.
     * @param y The new y value, relative to the parent. A negative value is allowed.
     */
    virtual void setXY(int16_t x, int16_t y)
 800931e:	b580      	push	{r7, lr}
 8009320:	b082      	sub	sp, #8
 8009322:	af00      	add	r7, sp, #0
 8009324:	6078      	str	r0, [r7, #4]
 8009326:	460b      	mov	r3, r1
 8009328:	807b      	strh	r3, [r7, #2]
 800932a:	4613      	mov	r3, r2
 800932c:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800932e:	687b      	ldr	r3, [r7, #4]
 8009330:	681b      	ldr	r3, [r3, #0]
 8009332:	332c      	adds	r3, #44	; 0x2c
 8009334:	681b      	ldr	r3, [r3, #0]
 8009336:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800933a:	4611      	mov	r1, r2
 800933c:	6878      	ldr	r0, [r7, #4]
 800933e:	4798      	blx	r3
        setY(y);
 8009340:	687b      	ldr	r3, [r7, #4]
 8009342:	681b      	ldr	r3, [r3, #0]
 8009344:	3330      	adds	r3, #48	; 0x30
 8009346:	681b      	ldr	r3, [r3, #0]
 8009348:	f9b7 2000 	ldrsh.w	r2, [r7]
 800934c:	4611      	mov	r1, r2
 800934e:	6878      	ldr	r0, [r7, #4]
 8009350:	4798      	blx	r3
    }
 8009352:	bf00      	nop
 8009354:	3708      	adds	r7, #8
 8009356:	46bd      	mov	sp, r7
 8009358:	bd80      	pop	{r7, pc}

0800935a <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param width The new width.
     */
    virtual void setWidth(int16_t width)
 800935a:	b480      	push	{r7}
 800935c:	b083      	sub	sp, #12
 800935e:	af00      	add	r7, sp, #0
 8009360:	6078      	str	r0, [r7, #4]
 8009362:	460b      	mov	r3, r1
 8009364:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 8009366:	687b      	ldr	r3, [r7, #4]
 8009368:	887a      	ldrh	r2, [r7, #2]
 800936a:	811a      	strh	r2, [r3, #8]
    }
 800936c:	bf00      	nop
 800936e:	370c      	adds	r7, #12
 8009370:	46bd      	mov	sp, r7
 8009372:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009376:	4770      	bx	lr

08009378 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param height The new height.
     */
    virtual void setHeight(int16_t height)
 8009378:	b480      	push	{r7}
 800937a:	b083      	sub	sp, #12
 800937c:	af00      	add	r7, sp, #0
 800937e:	6078      	str	r0, [r7, #4]
 8009380:	460b      	mov	r3, r1
 8009382:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8009384:	687b      	ldr	r3, [r7, #4]
 8009386:	887a      	ldrh	r2, [r7, #2]
 8009388:	815a      	strh	r2, [r3, #10]
    }
 800938a:	bf00      	nop
 800938c:	370c      	adds	r7, #12
 800938e:	46bd      	mov	sp, r7
 8009390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009394:	4770      	bx	lr

08009396 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     *
     *        This function can be called on parent nodes to signal that the size of one or
     *        more of its children has changed. Currently only used in ScrollableContainer to
     *        redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged() { }
 8009396:	b480      	push	{r7}
 8009398:	b083      	sub	sp, #12
 800939a:	af00      	add	r7, sp, #0
 800939c:	6078      	str	r0, [r7, #4]
 800939e:	bf00      	nop
 80093a0:	370c      	adds	r7, #12
 80093a2:	46bd      	mov	sp, r7
 80093a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093a8:	4770      	bx	lr

080093aa <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *        Defines the event handler interface for ClickEvents. The default implementation
     *        ignores the event. The event is only received if the drawable is touchable.
     *
     * @param evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt) { }
 80093aa:	b480      	push	{r7}
 80093ac:	b083      	sub	sp, #12
 80093ae:	af00      	add	r7, sp, #0
 80093b0:	6078      	str	r0, [r7, #4]
 80093b2:	6039      	str	r1, [r7, #0]
 80093b4:	bf00      	nop
 80093b6:	370c      	adds	r7, #12
 80093b8:	46bd      	mov	sp, r7
 80093ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093be:	4770      	bx	lr

080093c0 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *        Defines the event handler interface for GestureEvents. The default implementation
     *        ignores the event. The event is only received if the drawable is touchable.
     *
     * @param evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt) { }
 80093c0:	b480      	push	{r7}
 80093c2:	b083      	sub	sp, #12
 80093c4:	af00      	add	r7, sp, #0
 80093c6:	6078      	str	r0, [r7, #4]
 80093c8:	6039      	str	r1, [r7, #0]
 80093ca:	bf00      	nop
 80093cc:	370c      	adds	r7, #12
 80093ce:	46bd      	mov	sp, r7
 80093d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093d4:	4770      	bx	lr

080093d6 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *        Defines the event handler interface for DragEvents. The event is only received if
     *        the drawable is touchable.
     *
     * @param evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt) { }
 80093d6:	b480      	push	{r7}
 80093d8:	b083      	sub	sp, #12
 80093da:	af00      	add	r7, sp, #0
 80093dc:	6078      	str	r0, [r7, #4]
 80093de:	6039      	str	r1, [r7, #0]
 80093e0:	bf00      	nop
 80093e2:	370c      	adds	r7, #12
 80093e4:	46bd      	mov	sp, r7
 80093e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093ea:	4770      	bx	lr

080093ec <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *        Called periodically by the framework if the Drawable instance has subscribed to
     *        timer ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent() { }
 80093ec:	b480      	push	{r7}
 80093ee:	b083      	sub	sp, #12
 80093f0:	af00      	add	r7, sp, #0
 80093f2:	6078      	str	r0, [r7, #4]
 80093f4:	bf00      	nop
 80093f6:	370c      	adds	r7, #12
 80093f8:	46bd      	mov	sp, r7
 80093fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093fe:	4770      	bx	lr

08009400 <_ZN8touchgfx8Drawable12setTouchableEb>:
     *
     *        Controls whether this Drawable receives touch events or not.
     *
     * @param touch If true  it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 8009400:	b480      	push	{r7}
 8009402:	b083      	sub	sp, #12
 8009404:	af00      	add	r7, sp, #0
 8009406:	6078      	str	r0, [r7, #4]
 8009408:	460b      	mov	r3, r1
 800940a:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 800940c:	687b      	ldr	r3, [r7, #4]
 800940e:	78fa      	ldrb	r2, [r7, #3]
 8009410:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    }
 8009414:	bf00      	nop
 8009416:	370c      	adds	r7, #12
 8009418:	46bd      	mov	sp, r7
 800941a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800941e:	4770      	bx	lr

08009420 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     * @return true if the Drawable is visible.
     * @return True if visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8009420:	b480      	push	{r7}
 8009422:	b083      	sub	sp, #12
 8009424:	af00      	add	r7, sp, #0
 8009426:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8009428:	687b      	ldr	r3, [r7, #4]
 800942a:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 800942e:	4618      	mov	r0, r3
 8009430:	370c      	adds	r7, #12
 8009432:	46bd      	mov	sp, r7
 8009434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009438:	4770      	bx	lr

0800943a <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800943a:	b480      	push	{r7}
 800943c:	b083      	sub	sp, #12
 800943e:	af00      	add	r7, sp, #0
 8009440:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 8009442:	687b      	ldr	r3, [r7, #4]
 8009444:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 8009448:	4618      	mov	r0, r3
 800944a:	370c      	adds	r7, #12
 800944c:	46bd      	mov	sp, r7
 800944e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009452:	4770      	bx	lr

08009454 <_ZN8touchgfx8Drawable6moveToEss>:
     * @note Will redraw the appropriate areas of the screen.
     *
     * @param x The absolute position to move to.
     * @param y The absolute position to move to.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8009454:	b580      	push	{r7, lr}
 8009456:	b082      	sub	sp, #8
 8009458:	af00      	add	r7, sp, #0
 800945a:	6078      	str	r0, [r7, #4]
 800945c:	460b      	mov	r3, r1
 800945e:	807b      	strh	r3, [r7, #2]
 8009460:	4613      	mov	r3, r2
 8009462:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 8009464:	687b      	ldr	r3, [r7, #4]
 8009466:	681b      	ldr	r3, [r3, #0]
 8009468:	3354      	adds	r3, #84	; 0x54
 800946a:	681b      	ldr	r3, [r3, #0]
 800946c:	8879      	ldrh	r1, [r7, #2]
 800946e:	687a      	ldr	r2, [r7, #4]
 8009470:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8009474:	b292      	uxth	r2, r2
 8009476:	1a8a      	subs	r2, r1, r2
 8009478:	b292      	uxth	r2, r2
 800947a:	b210      	sxth	r0, r2
 800947c:	8839      	ldrh	r1, [r7, #0]
 800947e:	687a      	ldr	r2, [r7, #4]
 8009480:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8009484:	b292      	uxth	r2, r2
 8009486:	1a8a      	subs	r2, r1, r2
 8009488:	b292      	uxth	r2, r2
 800948a:	b212      	sxth	r2, r2
 800948c:	4601      	mov	r1, r0
 800948e:	6878      	ldr	r0, [r7, #4]
 8009490:	4798      	blx	r3
    }
 8009492:	bf00      	nop
 8009494:	3708      	adds	r7, #8
 8009496:	46bd      	mov	sp, r7
 8009498:	bd80      	pop	{r7, pc}

0800949a <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     *        Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800949a:	b480      	push	{r7}
 800949c:	b083      	sub	sp, #12
 800949e:	af00      	add	r7, sp, #0
 80094a0:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80094a2:	687b      	ldr	r3, [r7, #4]
 80094a4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80094a8:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80094aa:	687b      	ldr	r3, [r7, #4]
 80094ac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80094b0:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 80094b2:	687b      	ldr	r3, [r7, #4]
 80094b4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80094b8:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 80094ba:	bf00      	nop
 80094bc:	370c      	adds	r7, #12
 80094be:	46bd      	mov	sp, r7
 80094c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094c4:	4770      	bx	lr

080094c6 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     *
     * @param invalidatedArea              Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 80094c6:	b580      	push	{r7, lr}
 80094c8:	b084      	sub	sp, #16
 80094ca:	af00      	add	r7, sp, #0
 80094cc:	60f8      	str	r0, [r7, #12]
 80094ce:	60b9      	str	r1, [r7, #8]
 80094d0:	607a      	str	r2, [r7, #4]
    {
        resetDrawChainCache();
 80094d2:	68f8      	ldr	r0, [r7, #12]
 80094d4:	f7ff ffe1 	bl	800949a <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 80094d8:	687b      	ldr	r3, [r7, #4]
 80094da:	681a      	ldr	r2, [r3, #0]
 80094dc:	68fb      	ldr	r3, [r7, #12]
 80094de:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 80094e0:	687b      	ldr	r3, [r7, #4]
 80094e2:	68fa      	ldr	r2, [r7, #12]
 80094e4:	601a      	str	r2, [r3, #0]
    }
 80094e6:	bf00      	nop
 80094e8:	3710      	adds	r7, #16
 80094ea:	46bd      	mov	sp, r7
 80094ec:	bd80      	pop	{r7, pc}
	...

080094f0 <_ZN8touchgfx9ContainerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Container() { }
 80094f0:	b580      	push	{r7, lr}
 80094f2:	b082      	sub	sp, #8
 80094f4:	af00      	add	r7, sp, #0
 80094f6:	6078      	str	r0, [r7, #4]
 80094f8:	4a05      	ldr	r2, [pc, #20]	; (8009510 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 80094fa:	687b      	ldr	r3, [r7, #4]
 80094fc:	601a      	str	r2, [r3, #0]
 80094fe:	687b      	ldr	r3, [r7, #4]
 8009500:	4618      	mov	r0, r3
 8009502:	f7ff fea1 	bl	8009248 <_ZN8touchgfx8DrawableD1Ev>
 8009506:	687b      	ldr	r3, [r7, #4]
 8009508:	4618      	mov	r0, r3
 800950a:	3708      	adds	r7, #8
 800950c:	46bd      	mov	sp, r7
 800950e:	bd80      	pop	{r7, pc}
 8009510:	0801ccf0 	.word	0x0801ccf0

08009514 <_ZN8touchgfx9ContainerD0Ev>:
 8009514:	b580      	push	{r7, lr}
 8009516:	b082      	sub	sp, #8
 8009518:	af00      	add	r7, sp, #0
 800951a:	6078      	str	r0, [r7, #4]
 800951c:	6878      	ldr	r0, [r7, #4]
 800951e:	f7ff ffe7 	bl	80094f0 <_ZN8touchgfx9ContainerD1Ev>
 8009522:	212c      	movs	r1, #44	; 0x2c
 8009524:	6878      	ldr	r0, [r7, #4]
 8009526:	f011 fa31 	bl	801a98c <_ZdlPvj>
 800952a:	687b      	ldr	r3, [r7, #4]
 800952c:	4618      	mov	r0, r3
 800952e:	3708      	adds	r7, #8
 8009530:	46bd      	mov	sp, r7
 8009532:	bd80      	pop	{r7, pc}

08009534 <_ZN8touchgfx6ScreenD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Screen() { }
 8009534:	b580      	push	{r7, lr}
 8009536:	b082      	sub	sp, #8
 8009538:	af00      	add	r7, sp, #0
 800953a:	6078      	str	r0, [r7, #4]
 800953c:	4a06      	ldr	r2, [pc, #24]	; (8009558 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800953e:	687b      	ldr	r3, [r7, #4]
 8009540:	601a      	str	r2, [r3, #0]
 8009542:	687b      	ldr	r3, [r7, #4]
 8009544:	3304      	adds	r3, #4
 8009546:	4618      	mov	r0, r3
 8009548:	f7ff ffd2 	bl	80094f0 <_ZN8touchgfx9ContainerD1Ev>
 800954c:	687b      	ldr	r3, [r7, #4]
 800954e:	4618      	mov	r0, r3
 8009550:	3708      	adds	r7, #8
 8009552:	46bd      	mov	sp, r7
 8009554:	bd80      	pop	{r7, pc}
 8009556:	bf00      	nop
 8009558:	0801d980 	.word	0x0801d980

0800955c <_ZN8touchgfx6ScreenD0Ev>:
 800955c:	b580      	push	{r7, lr}
 800955e:	b082      	sub	sp, #8
 8009560:	af00      	add	r7, sp, #0
 8009562:	6078      	str	r0, [r7, #4]
 8009564:	6878      	ldr	r0, [r7, #4]
 8009566:	f7ff ffe5 	bl	8009534 <_ZN8touchgfx6ScreenD1Ev>
 800956a:	213c      	movs	r1, #60	; 0x3c
 800956c:	6878      	ldr	r0, [r7, #4]
 800956e:	f011 fa0d 	bl	801a98c <_ZdlPvj>
 8009572:	687b      	ldr	r3, [r7, #4]
 8009574:	4618      	mov	r0, r3
 8009576:	3708      	adds	r7, #8
 8009578:	46bd      	mov	sp, r7
 800957a:	bd80      	pop	{r7, pc}

0800957c <_ZN8touchgfx6Screen11setupScreenEv>:
     *        Base version does nothing, but place any screen specific initialization code in
     *        an overridden version.
     *
     * @see touchgfx::Application::switchScreen()
     */
    virtual void setupScreen() { }
 800957c:	b480      	push	{r7}
 800957e:	b083      	sub	sp, #12
 8009580:	af00      	add	r7, sp, #0
 8009582:	6078      	str	r0, [r7, #4]
 8009584:	bf00      	nop
 8009586:	370c      	adds	r7, #12
 8009588:	46bd      	mov	sp, r7
 800958a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800958e:	4770      	bx	lr

08009590 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *        Base version does nothing, but override to do screen specific initialization code
     *        that has to be done after the transition to the screen.
     *
     * @see touchgfx::Application::handleTick()
     */
    virtual void afterTransition() { }
 8009590:	b480      	push	{r7}
 8009592:	b083      	sub	sp, #12
 8009594:	af00      	add	r7, sp, #0
 8009596:	6078      	str	r0, [r7, #4]
 8009598:	bf00      	nop
 800959a:	370c      	adds	r7, #12
 800959c:	46bd      	mov	sp, r7
 800959e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095a2:	4770      	bx	lr

080095a4 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *        displayed. Base version does nothing, but place any screen specific cleanup code
     *        in an overridden version.
     *
     * @see touchgfx::Application::switchScreen()
     */
    virtual void tearDownScreen() { }
 80095a4:	b480      	push	{r7}
 80095a6:	b083      	sub	sp, #12
 80095a8:	af00      	add	r7, sp, #0
 80095aa:	6078      	str	r0, [r7, #4]
 80095ac:	bf00      	nop
 80095ae:	370c      	adds	r7, #12
 80095b0:	46bd      	mov	sp, r7
 80095b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095b6:	4770      	bx	lr

080095b8 <_ZN8touchgfx6Screen15handleTickEventEv>:
     *        Application::TICK_INTERVAL_MS.
     *
     *        Called by the Application on the current screen with a frequency of
     *        Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 80095b8:	b480      	push	{r7}
 80095ba:	b083      	sub	sp, #12
 80095bc:	af00      	add	r7, sp, #0
 80095be:	6078      	str	r0, [r7, #4]
    {
    }
 80095c0:	bf00      	nop
 80095c2:	370c      	adds	r7, #12
 80095c4:	46bd      	mov	sp, r7
 80095c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095ca:	4770      	bx	lr

080095cc <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *        Called by the Application on the reception of a "key", the meaning of which is
     *        platform/application specific. Default implementation does nothing.
     *
     * @param key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 80095cc:	b480      	push	{r7}
 80095ce:	b083      	sub	sp, #12
 80095d0:	af00      	add	r7, sp, #0
 80095d2:	6078      	str	r0, [r7, #4]
 80095d4:	460b      	mov	r3, r1
 80095d6:	70fb      	strb	r3, [r7, #3]
    {
    }
 80095d8:	bf00      	nop
 80095da:	370c      	adds	r7, #12
 80095dc:	46bd      	mov	sp, r7
 80095de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095e2:	4770      	bx	lr

080095e4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     *
     * @param [in] d The Drawable to add.
     */
    void add(Drawable& d)
 80095e4:	b580      	push	{r7, lr}
 80095e6:	b082      	sub	sp, #8
 80095e8:	af00      	add	r7, sp, #0
 80095ea:	6078      	str	r0, [r7, #4]
 80095ec:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 80095ee:	687b      	ldr	r3, [r7, #4]
 80095f0:	3304      	adds	r3, #4
 80095f2:	6839      	ldr	r1, [r7, #0]
 80095f4:	4618      	mov	r0, r3
 80095f6:	f002 fb47 	bl	800bc88 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80095fa:	bf00      	nop
 80095fc:	3708      	adds	r7, #8
 80095fe:	46bd      	mov	sp, r7
 8009600:	bd80      	pop	{r7, pc}
	...

08009604 <_ZN8touchgfx6WidgetC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Widget() : Drawable() { }
 8009604:	b580      	push	{r7, lr}
 8009606:	b082      	sub	sp, #8
 8009608:	af00      	add	r7, sp, #0
 800960a:	6078      	str	r0, [r7, #4]
 800960c:	687b      	ldr	r3, [r7, #4]
 800960e:	4618      	mov	r0, r3
 8009610:	f7ff fdec 	bl	80091ec <_ZN8touchgfx8DrawableC1Ev>
 8009614:	4a03      	ldr	r2, [pc, #12]	; (8009624 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8009616:	687b      	ldr	r3, [r7, #4]
 8009618:	601a      	str	r2, [r3, #0]
 800961a:	687b      	ldr	r3, [r7, #4]
 800961c:	4618      	mov	r0, r3
 800961e:	3708      	adds	r7, #8
 8009620:	46bd      	mov	sp, r7
 8009622:	bd80      	pop	{r7, pc}
 8009624:	0801c530 	.word	0x0801c530

08009628 <_ZN8touchgfx6WidgetD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Widget() { }
 8009628:	b580      	push	{r7, lr}
 800962a:	b082      	sub	sp, #8
 800962c:	af00      	add	r7, sp, #0
 800962e:	6078      	str	r0, [r7, #4]
 8009630:	4a05      	ldr	r2, [pc, #20]	; (8009648 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 8009632:	687b      	ldr	r3, [r7, #4]
 8009634:	601a      	str	r2, [r3, #0]
 8009636:	687b      	ldr	r3, [r7, #4]
 8009638:	4618      	mov	r0, r3
 800963a:	f7ff fe05 	bl	8009248 <_ZN8touchgfx8DrawableD1Ev>
 800963e:	687b      	ldr	r3, [r7, #4]
 8009640:	4618      	mov	r0, r3
 8009642:	3708      	adds	r7, #8
 8009644:	46bd      	mov	sp, r7
 8009646:	bd80      	pop	{r7, pc}
 8009648:	0801c530 	.word	0x0801c530

0800964c <_ZN8touchgfx6WidgetD0Ev>:
 800964c:	b580      	push	{r7, lr}
 800964e:	b082      	sub	sp, #8
 8009650:	af00      	add	r7, sp, #0
 8009652:	6078      	str	r0, [r7, #4]
 8009654:	6878      	ldr	r0, [r7, #4]
 8009656:	f7ff ffe7 	bl	8009628 <_ZN8touchgfx6WidgetD1Ev>
 800965a:	2128      	movs	r1, #40	; 0x28
 800965c:	6878      	ldr	r0, [r7, #4]
 800965e:	f011 f995 	bl	801a98c <_ZdlPvj>
 8009662:	687b      	ldr	r3, [r7, #4]
 8009664:	4618      	mov	r0, r3
 8009666:	3708      	adds	r7, #8
 8009668:	46bd      	mov	sp, r7
 800966a:	bd80      	pop	{r7, pc}

0800966c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param x          The point of intersection expressed in coordinates relative to the parent.
     * @param y          The y coordinate.
     * @param [out] last Result will be placed here.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
 800966c:	b580      	push	{r7, lr}
 800966e:	b084      	sub	sp, #16
 8009670:	af00      	add	r7, sp, #0
 8009672:	60f8      	str	r0, [r7, #12]
 8009674:	607b      	str	r3, [r7, #4]
 8009676:	460b      	mov	r3, r1
 8009678:	817b      	strh	r3, [r7, #10]
 800967a:	4613      	mov	r3, r2
 800967c:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800967e:	68fb      	ldr	r3, [r7, #12]
 8009680:	4618      	mov	r0, r3
 8009682:	f7ff fecd 	bl	8009420 <_ZNK8touchgfx8Drawable9isVisibleEv>
 8009686:	4603      	mov	r3, r0
 8009688:	2b00      	cmp	r3, #0
 800968a:	d008      	beq.n	800969e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800968c:	68fb      	ldr	r3, [r7, #12]
 800968e:	4618      	mov	r0, r3
 8009690:	f7ff fed3 	bl	800943a <_ZNK8touchgfx8Drawable11isTouchableEv>
 8009694:	4603      	mov	r3, r0
 8009696:	2b00      	cmp	r3, #0
 8009698:	d001      	beq.n	800969e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800969a:	2301      	movs	r3, #1
 800969c:	e000      	b.n	80096a0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800969e:	2300      	movs	r3, #0
 80096a0:	2b00      	cmp	r3, #0
 80096a2:	d002      	beq.n	80096aa <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 80096a4:	68fa      	ldr	r2, [r7, #12]
 80096a6:	687b      	ldr	r3, [r7, #4]
 80096a8:	601a      	str	r2, [r3, #0]
        }
    }
 80096aa:	bf00      	nop
 80096ac:	3710      	adds	r7, #16
 80096ae:	46bd      	mov	sp, r7
 80096b0:	bd80      	pop	{r7, pc}
	...

080096b4 <_ZN8touchgfx14AbstractButtonC1Ev>:
     * @brief Constructor.
     *
     *        Constructs an AbstractButton instance in released state without an associated
     *        action.
     */
    AbstractButton() : Widget(), action(), pressed(false)
 80096b4:	b580      	push	{r7, lr}
 80096b6:	b082      	sub	sp, #8
 80096b8:	af00      	add	r7, sp, #0
 80096ba:	6078      	str	r0, [r7, #4]
 80096bc:	687b      	ldr	r3, [r7, #4]
 80096be:	4618      	mov	r0, r3
 80096c0:	f7ff ffa0 	bl	8009604 <_ZN8touchgfx6WidgetC1Ev>
 80096c4:	4a09      	ldr	r2, [pc, #36]	; (80096ec <_ZN8touchgfx14AbstractButtonC1Ev+0x38>)
 80096c6:	687b      	ldr	r3, [r7, #4]
 80096c8:	601a      	str	r2, [r3, #0]
 80096ca:	687b      	ldr	r3, [r7, #4]
 80096cc:	2200      	movs	r2, #0
 80096ce:	629a      	str	r2, [r3, #40]	; 0x28
 80096d0:	687b      	ldr	r3, [r7, #4]
 80096d2:	2200      	movs	r2, #0
 80096d4:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    {
        setTouchable(true);
 80096d8:	687b      	ldr	r3, [r7, #4]
 80096da:	2101      	movs	r1, #1
 80096dc:	4618      	mov	r0, r3
 80096de:	f7ff fe8f 	bl	8009400 <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 80096e2:	687b      	ldr	r3, [r7, #4]
 80096e4:	4618      	mov	r0, r3
 80096e6:	3708      	adds	r7, #8
 80096e8:	46bd      	mov	sp, r7
 80096ea:	bd80      	pop	{r7, pc}
 80096ec:	0801d500 	.word	0x0801d500

080096f0 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 80096f0:	b580      	push	{r7, lr}
 80096f2:	b082      	sub	sp, #8
 80096f4:	af00      	add	r7, sp, #0
 80096f6:	6078      	str	r0, [r7, #4]
 80096f8:	4a05      	ldr	r2, [pc, #20]	; (8009710 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 80096fa:	687b      	ldr	r3, [r7, #4]
 80096fc:	601a      	str	r2, [r3, #0]
 80096fe:	687b      	ldr	r3, [r7, #4]
 8009700:	4618      	mov	r0, r3
 8009702:	f7ff ff91 	bl	8009628 <_ZN8touchgfx6WidgetD1Ev>
 8009706:	687b      	ldr	r3, [r7, #4]
 8009708:	4618      	mov	r0, r3
 800970a:	3708      	adds	r7, #8
 800970c:	46bd      	mov	sp, r7
 800970e:	bd80      	pop	{r7, pc}
 8009710:	0801d500 	.word	0x0801d500

08009714 <_ZN8touchgfx14AbstractButtonD0Ev>:
 8009714:	b580      	push	{r7, lr}
 8009716:	b082      	sub	sp, #8
 8009718:	af00      	add	r7, sp, #0
 800971a:	6078      	str	r0, [r7, #4]
 800971c:	6878      	ldr	r0, [r7, #4]
 800971e:	f7ff ffe7 	bl	80096f0 <_ZN8touchgfx14AbstractButtonD1Ev>
 8009722:	2130      	movs	r1, #48	; 0x30
 8009724:	6878      	ldr	r0, [r7, #4]
 8009726:	f011 f931 	bl	801a98c <_ZdlPvj>
 800972a:	687b      	ldr	r3, [r7, #4]
 800972c:	4618      	mov	r0, r3
 800972e:	3708      	adds	r7, #8
 8009730:	46bd      	mov	sp, r7
 8009732:	bd80      	pop	{r7, pc}

08009734 <_ZN8touchgfx6ButtonC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Button() : AbstractButton(), up(), down(), alpha(255) { }
 8009734:	b580      	push	{r7, lr}
 8009736:	b082      	sub	sp, #8
 8009738:	af00      	add	r7, sp, #0
 800973a:	6078      	str	r0, [r7, #4]
 800973c:	687b      	ldr	r3, [r7, #4]
 800973e:	4618      	mov	r0, r3
 8009740:	f7ff ffb8 	bl	80096b4 <_ZN8touchgfx14AbstractButtonC1Ev>
 8009744:	4a0c      	ldr	r2, [pc, #48]	; (8009778 <_ZN8touchgfx6ButtonC1Ev+0x44>)
 8009746:	687b      	ldr	r3, [r7, #4]
 8009748:	601a      	str	r2, [r3, #0]
 800974a:	687b      	ldr	r3, [r7, #4]
 800974c:	332e      	adds	r3, #46	; 0x2e
 800974e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009752:	4618      	mov	r0, r3
 8009754:	f7ff fd39 	bl	80091ca <_ZN8touchgfx6BitmapC1Et>
 8009758:	687b      	ldr	r3, [r7, #4]
 800975a:	3330      	adds	r3, #48	; 0x30
 800975c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009760:	4618      	mov	r0, r3
 8009762:	f7ff fd32 	bl	80091ca <_ZN8touchgfx6BitmapC1Et>
 8009766:	687b      	ldr	r3, [r7, #4]
 8009768:	22ff      	movs	r2, #255	; 0xff
 800976a:	f883 2032 	strb.w	r2, [r3, #50]	; 0x32
 800976e:	687b      	ldr	r3, [r7, #4]
 8009770:	4618      	mov	r0, r3
 8009772:	3708      	adds	r7, #8
 8009774:	46bd      	mov	sp, r7
 8009776:	bd80      	pop	{r7, pc}
 8009778:	0801d5d0 	.word	0x0801d5d0

0800977c <_ZN8touchgfx6ButtonD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Button() { }
 800977c:	b580      	push	{r7, lr}
 800977e:	b082      	sub	sp, #8
 8009780:	af00      	add	r7, sp, #0
 8009782:	6078      	str	r0, [r7, #4]
 8009784:	4a05      	ldr	r2, [pc, #20]	; (800979c <_ZN8touchgfx6ButtonD1Ev+0x20>)
 8009786:	687b      	ldr	r3, [r7, #4]
 8009788:	601a      	str	r2, [r3, #0]
 800978a:	687b      	ldr	r3, [r7, #4]
 800978c:	4618      	mov	r0, r3
 800978e:	f7ff ffaf 	bl	80096f0 <_ZN8touchgfx14AbstractButtonD1Ev>
 8009792:	687b      	ldr	r3, [r7, #4]
 8009794:	4618      	mov	r0, r3
 8009796:	3708      	adds	r7, #8
 8009798:	46bd      	mov	sp, r7
 800979a:	bd80      	pop	{r7, pc}
 800979c:	0801d5d0 	.word	0x0801d5d0

080097a0 <_ZN8touchgfx6ButtonD0Ev>:
 80097a0:	b580      	push	{r7, lr}
 80097a2:	b082      	sub	sp, #8
 80097a4:	af00      	add	r7, sp, #0
 80097a6:	6078      	str	r0, [r7, #4]
 80097a8:	6878      	ldr	r0, [r7, #4]
 80097aa:	f7ff ffe7 	bl	800977c <_ZN8touchgfx6ButtonD1Ev>
 80097ae:	2134      	movs	r1, #52	; 0x34
 80097b0:	6878      	ldr	r0, [r7, #4]
 80097b2:	f011 f8eb 	bl	801a98c <_ZdlPvj>
 80097b6:	687b      	ldr	r3, [r7, #4]
 80097b8:	4618      	mov	r0, r3
 80097ba:	3708      	adds	r7, #8
 80097bc:	46bd      	mov	sp, r7
 80097be:	bd80      	pop	{r7, pc}

080097c0 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 80097c0:	b580      	push	{r7, lr}
 80097c2:	b082      	sub	sp, #8
 80097c4:	af00      	add	r7, sp, #0
 80097c6:	6078      	str	r0, [r7, #4]
 80097c8:	4a05      	ldr	r2, [pc, #20]	; (80097e0 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 80097ca:	687b      	ldr	r3, [r7, #4]
 80097cc:	601a      	str	r2, [r3, #0]
 80097ce:	687b      	ldr	r3, [r7, #4]
 80097d0:	4618      	mov	r0, r3
 80097d2:	f7ff feaf 	bl	8009534 <_ZN8touchgfx6ScreenD1Ev>
 80097d6:	687b      	ldr	r3, [r7, #4]
 80097d8:	4618      	mov	r0, r3
 80097da:	3708      	adds	r7, #8
 80097dc:	46bd      	mov	sp, r7
 80097de:	bd80      	pop	{r7, pc}
 80097e0:	0801c4fc 	.word	0x0801c4fc

080097e4 <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 80097e4:	b580      	push	{r7, lr}
 80097e6:	b082      	sub	sp, #8
 80097e8:	af00      	add	r7, sp, #0
 80097ea:	6078      	str	r0, [r7, #4]
 80097ec:	6878      	ldr	r0, [r7, #4]
 80097ee:	f7ff ffe7 	bl	80097c0 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 80097f2:	2140      	movs	r1, #64	; 0x40
 80097f4:	6878      	ldr	r0, [r7, #4]
 80097f6:	f011 f8c9 	bl	801a98c <_ZdlPvj>
 80097fa:	687b      	ldr	r3, [r7, #4]
 80097fc:	4618      	mov	r0, r3
 80097fe:	3708      	adds	r7, #8
 8009800:	46bd      	mov	sp, r7
 8009802:	bd80      	pop	{r7, pc}

08009804 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8009804:	b580      	push	{r7, lr}
 8009806:	b082      	sub	sp, #8
 8009808:	af00      	add	r7, sp, #0
 800980a:	6078      	str	r0, [r7, #4]
 800980c:	4a08      	ldr	r2, [pc, #32]	; (8009830 <_ZN15Screen1ViewBaseD1Ev+0x2c>)
 800980e:	687b      	ldr	r3, [r7, #4]
 8009810:	601a      	str	r2, [r3, #0]
 8009812:	687b      	ldr	r3, [r7, #4]
 8009814:	3340      	adds	r3, #64	; 0x40
 8009816:	4618      	mov	r0, r3
 8009818:	f7ff ffb0 	bl	800977c <_ZN8touchgfx6ButtonD1Ev>
 800981c:	687b      	ldr	r3, [r7, #4]
 800981e:	4618      	mov	r0, r3
 8009820:	f7ff ffce 	bl	80097c0 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 8009824:	687b      	ldr	r3, [r7, #4]
 8009826:	4618      	mov	r0, r3
 8009828:	3708      	adds	r7, #8
 800982a:	46bd      	mov	sp, r7
 800982c:	bd80      	pop	{r7, pc}
 800982e:	bf00      	nop
 8009830:	0801c4c8 	.word	0x0801c4c8

08009834 <_ZN15Screen1ViewBaseD0Ev>:
 8009834:	b580      	push	{r7, lr}
 8009836:	b082      	sub	sp, #8
 8009838:	af00      	add	r7, sp, #0
 800983a:	6078      	str	r0, [r7, #4]
 800983c:	6878      	ldr	r0, [r7, #4]
 800983e:	f7ff ffe1 	bl	8009804 <_ZN15Screen1ViewBaseD1Ev>
 8009842:	2174      	movs	r1, #116	; 0x74
 8009844:	6878      	ldr	r0, [r7, #4]
 8009846:	f011 f8a1 	bl	801a98c <_ZdlPvj>
 800984a:	687b      	ldr	r3, [r7, #4]
 800984c:	4618      	mov	r0, r3
 800984e:	3708      	adds	r7, #8
 8009850:	46bd      	mov	sp, r7
 8009852:	bd80      	pop	{r7, pc}

08009854 <_ZN15Screen1ViewBaseC1Ev>:
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include "BitmapDatabase.hpp"

Screen1ViewBase::Screen1ViewBase()
 8009854:	b590      	push	{r4, r7, lr}
 8009856:	b085      	sub	sp, #20
 8009858:	af00      	add	r7, sp, #0
 800985a:	6078      	str	r0, [r7, #4]
 800985c:	687b      	ldr	r3, [r7, #4]
 800985e:	4618      	mov	r0, r3
 8009860:	f000 f83e 	bl	80098e0 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>
 8009864:	4a18      	ldr	r2, [pc, #96]	; (80098c8 <_ZN15Screen1ViewBaseC1Ev+0x74>)
 8009866:	687b      	ldr	r3, [r7, #4]
 8009868:	601a      	str	r2, [r3, #0]
 800986a:	687b      	ldr	r3, [r7, #4]
 800986c:	3340      	adds	r3, #64	; 0x40
 800986e:	4618      	mov	r0, r3
 8009870:	f7ff ff60 	bl	8009734 <_ZN8touchgfx6ButtonC1Ev>
{

    button1.setXY(35, 106);
 8009874:	687b      	ldr	r3, [r7, #4]
 8009876:	3340      	adds	r3, #64	; 0x40
 8009878:	226a      	movs	r2, #106	; 0x6a
 800987a:	2123      	movs	r1, #35	; 0x23
 800987c:	4618      	mov	r0, r3
 800987e:	f7ff fd4e 	bl	800931e <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8009882:	687b      	ldr	r3, [r7, #4]
 8009884:	f103 0440 	add.w	r4, r3, #64	; 0x40
 8009888:	f107 0308 	add.w	r3, r7, #8
 800988c:	2100      	movs	r1, #0
 800988e:	4618      	mov	r0, r3
 8009890:	f7ff fc9b 	bl	80091ca <_ZN8touchgfx6BitmapC1Et>
 8009894:	f107 030c 	add.w	r3, r7, #12
 8009898:	2101      	movs	r1, #1
 800989a:	4618      	mov	r0, r3
 800989c:	f7ff fc95 	bl	80091ca <_ZN8touchgfx6BitmapC1Et>
 80098a0:	f107 020c 	add.w	r2, r7, #12
 80098a4:	f107 0308 	add.w	r3, r7, #8
 80098a8:	4619      	mov	r1, r3
 80098aa:	4620      	mov	r0, r4
 80098ac:	f003 fa0b 	bl	800ccc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

    add(button1);
 80098b0:	687a      	ldr	r2, [r7, #4]
 80098b2:	687b      	ldr	r3, [r7, #4]
 80098b4:	3340      	adds	r3, #64	; 0x40
 80098b6:	4619      	mov	r1, r3
 80098b8:	4610      	mov	r0, r2
 80098ba:	f7ff fe93 	bl	80095e4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 80098be:	687b      	ldr	r3, [r7, #4]
 80098c0:	4618      	mov	r0, r3
 80098c2:	3714      	adds	r7, #20
 80098c4:	46bd      	mov	sp, r7
 80098c6:	bd90      	pop	{r4, r7, pc}
 80098c8:	0801c4c8 	.word	0x0801c4c8

080098cc <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{
 80098cc:	b480      	push	{r7}
 80098ce:	b083      	sub	sp, #12
 80098d0:	af00      	add	r7, sp, #0
 80098d2:	6078      	str	r0, [r7, #4]

}
 80098d4:	bf00      	nop
 80098d6:	370c      	adds	r7, #12
 80098d8:	46bd      	mov	sp, r7
 80098da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098de:	4770      	bx	lr

080098e0 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>:
    View() : presenter(0)
 80098e0:	b580      	push	{r7, lr}
 80098e2:	b082      	sub	sp, #8
 80098e4:	af00      	add	r7, sp, #0
 80098e6:	6078      	str	r0, [r7, #4]
 80098e8:	687b      	ldr	r3, [r7, #4]
 80098ea:	4618      	mov	r0, r3
 80098ec:	f004 fd66 	bl	800e3bc <_ZN8touchgfx6ScreenC1Ev>
 80098f0:	4a05      	ldr	r2, [pc, #20]	; (8009908 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev+0x28>)
 80098f2:	687b      	ldr	r3, [r7, #4]
 80098f4:	601a      	str	r2, [r3, #0]
 80098f6:	687b      	ldr	r3, [r7, #4]
 80098f8:	2200      	movs	r2, #0
 80098fa:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 80098fc:	687b      	ldr	r3, [r7, #4]
 80098fe:	4618      	mov	r0, r3
 8009900:	3708      	adds	r7, #8
 8009902:	46bd      	mov	sp, r7
 8009904:	bd80      	pop	{r7, pc}
 8009906:	bf00      	nop
 8009908:	0801c4fc 	.word	0x0801c4fc

0800990c <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800990c:	b480      	push	{r7}
 800990e:	af00      	add	r7, sp, #0
    return bitmap_database;
 8009910:	4b02      	ldr	r3, [pc, #8]	; (800991c <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 8009912:	4618      	mov	r0, r3
 8009914:	46bd      	mov	sp, r7
 8009916:	f85d 7b04 	ldr.w	r7, [sp], #4
 800991a:	4770      	bx	lr
 800991c:	0801c590 	.word	0x0801c590

08009920 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 8009920:	b480      	push	{r7}
 8009922:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 8009924:	2302      	movs	r3, #2
}
 8009926:	4618      	mov	r0, r3
 8009928:	46bd      	mov	sp, r7
 800992a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800992e:	4770      	bx	lr

08009930 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param data A reference to the TypedTextData storage array.
     * @param f    The fonts associated with the array.
     * @param n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 8009930:	b480      	push	{r7}
 8009932:	b085      	sub	sp, #20
 8009934:	af00      	add	r7, sp, #0
 8009936:	60f8      	str	r0, [r7, #12]
 8009938:	60b9      	str	r1, [r7, #8]
 800993a:	4613      	mov	r3, r2
 800993c:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800993e:	4a07      	ldr	r2, [pc, #28]	; (800995c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 8009940:	68fb      	ldr	r3, [r7, #12]
 8009942:	6013      	str	r3, [r2, #0]
        fonts = f;
 8009944:	4a06      	ldr	r2, [pc, #24]	; (8009960 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 8009946:	68bb      	ldr	r3, [r7, #8]
 8009948:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800994a:	4a06      	ldr	r2, [pc, #24]	; (8009964 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800994c:	88fb      	ldrh	r3, [r7, #6]
 800994e:	8013      	strh	r3, [r2, #0]
    }
 8009950:	bf00      	nop
 8009952:	3714      	adds	r7, #20
 8009954:	46bd      	mov	sp, r7
 8009956:	f85d 7b04 	ldr.w	r7, [sp], #4
 800995a:	4770      	bx	lr
 800995c:	20026970 	.word	0x20026970
 8009960:	20026978 	.word	0x20026978
 8009964:	20026974 	.word	0x20026974

08009968 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8009968:	b590      	push	{r4, r7, lr}
 800996a:	b085      	sub	sp, #20
 800996c:	af00      	add	r7, sp, #0
 800996e:	4603      	mov	r3, r0
 8009970:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 8009972:	2300      	movs	r3, #0
 8009974:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 8009976:	88fb      	ldrh	r3, [r7, #6]
 8009978:	2b00      	cmp	r3, #0
 800997a:	d127      	bne.n	80099cc <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800997c:	88fb      	ldrh	r3, [r7, #6]
 800997e:	4a1e      	ldr	r2, [pc, #120]	; (80099f8 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8009980:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009984:	2b00      	cmp	r3, #0
 8009986:	d016      	beq.n	80099b6 <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 8009988:	88fb      	ldrh	r3, [r7, #6]
 800998a:	4a1b      	ldr	r2, [pc, #108]	; (80099f8 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800998c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009990:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8009992:	68bb      	ldr	r3, [r7, #8]
 8009994:	681b      	ldr	r3, [r3, #0]
 8009996:	68ba      	ldr	r2, [r7, #8]
 8009998:	4413      	add	r3, r2
 800999a:	4a18      	ldr	r2, [pc, #96]	; (80099fc <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800999c:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800999e:	68bb      	ldr	r3, [r7, #8]
 80099a0:	685b      	ldr	r3, [r3, #4]
 80099a2:	68ba      	ldr	r2, [r7, #8]
 80099a4:	4413      	add	r3, r2
 80099a6:	4a16      	ldr	r2, [pc, #88]	; (8009a00 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 80099a8:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80099aa:	68bb      	ldr	r3, [r7, #8]
 80099ac:	689b      	ldr	r3, [r3, #8]
 80099ae:	68ba      	ldr	r2, [r7, #8]
 80099b0:	4413      	add	r3, r2
 80099b2:	60fb      	str	r3, [r7, #12]
 80099b4:	e00a      	b.n	80099cc <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            //compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 80099b6:	4b11      	ldr	r3, [pc, #68]	; (80099fc <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 80099b8:	4a12      	ldr	r2, [pc, #72]	; (8009a04 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 80099ba:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80099bc:	2200      	movs	r2, #0
 80099be:	4b10      	ldr	r3, [pc, #64]	; (8009a00 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 80099c0:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80099c2:	88fb      	ldrh	r3, [r7, #6]
 80099c4:	4a10      	ldr	r2, [pc, #64]	; (8009a08 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 80099c6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80099ca:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 80099cc:	68fb      	ldr	r3, [r7, #12]
 80099ce:	2b00      	cmp	r3, #0
 80099d0:	d00d      	beq.n	80099ee <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 80099d2:	4a0e      	ldr	r2, [pc, #56]	; (8009a0c <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 80099d4:	88fb      	ldrh	r3, [r7, #6]
 80099d6:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80099d8:	f000 f822 	bl	8009a20 <_ZN17TypedTextDatabase8getFontsEv>
 80099dc:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80099de:	f000 f817 	bl	8009a10 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 80099e2:	4603      	mov	r3, r0
 80099e4:	461a      	mov	r2, r3
 80099e6:	4621      	mov	r1, r4
 80099e8:	68f8      	ldr	r0, [r7, #12]
 80099ea:	f7ff ffa1 	bl	8009930 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 80099ee:	bf00      	nop
 80099f0:	3714      	adds	r7, #20
 80099f2:	46bd      	mov	sp, r7
 80099f4:	bd90      	pop	{r4, r7, pc}
 80099f6:	bf00      	nop
 80099f8:	200259a0 	.word	0x200259a0
 80099fc:	200259a8 	.word	0x200259a8
 8009a00:	200259ac 	.word	0x200259ac
 8009a04:	08032f00 	.word	0x08032f00
 8009a08:	08032f08 	.word	0x08032f08
 8009a0c:	200259a4 	.word	0x200259a4

08009a10 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 8009a10:	b480      	push	{r7}
 8009a12:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 8009a14:	2301      	movs	r3, #1
}
 8009a16:	4618      	mov	r0, r3
 8009a18:	46bd      	mov	sp, r7
 8009a1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a1e:	4770      	bx	lr

08009a20 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 8009a20:	b480      	push	{r7}
 8009a22:	af00      	add	r7, sp, #0
    return _fonts;
 8009a24:	4b02      	ldr	r3, [pc, #8]	; (8009a30 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 8009a26:	4618      	mov	r0, r3
 8009a28:	46bd      	mov	sp, r7
 8009a2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a2e:	4770      	bx	lr
 8009a30:	200259b0 	.word	0x200259b0

08009a34 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        _fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 8009a34:	b580      	push	{r7, lr}
 8009a36:	b082      	sub	sp, #8
 8009a38:	af00      	add	r7, sp, #0
 8009a3a:	6078      	str	r0, [r7, #4]
 8009a3c:	6039      	str	r1, [r7, #0]
 8009a3e:	687b      	ldr	r3, [r7, #4]
 8009a40:	2b01      	cmp	r3, #1
 8009a42:	d113      	bne.n	8009a6c <_Z41__static_initialization_and_destruction_0ii+0x38>
 8009a44:	683b      	ldr	r3, [r7, #0]
 8009a46:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009a4a:	4293      	cmp	r3, r2
 8009a4c:	d10e      	bne.n	8009a6c <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 8009a4e:	f7fe fde7 	bl	8008620 <_Z23getFont_verdana_20_4bppv>
 8009a52:	4602      	mov	r2, r0
};
 8009a54:	4b07      	ldr	r3, [pc, #28]	; (8009a74 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8009a56:	601a      	str	r2, [r3, #0]
    &(getFont_verdana_40_4bpp()),
 8009a58:	f7fe fe24 	bl	80086a4 <_Z23getFont_verdana_40_4bppv>
 8009a5c:	4602      	mov	r2, r0
};
 8009a5e:	4b05      	ldr	r3, [pc, #20]	; (8009a74 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8009a60:	605a      	str	r2, [r3, #4]
    &(getFont_verdana_10_4bpp())
 8009a62:	f7fe fd9b 	bl	800859c <_Z23getFont_verdana_10_4bppv>
 8009a66:	4602      	mov	r2, r0
};
 8009a68:	4b02      	ldr	r3, [pc, #8]	; (8009a74 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8009a6a:	609a      	str	r2, [r3, #8]
}  // namespace TypedTextDatabase
 8009a6c:	bf00      	nop
 8009a6e:	3708      	adds	r7, #8
 8009a70:	46bd      	mov	sp, r7
 8009a72:	bd80      	pop	{r7, pc}
 8009a74:	200259b0 	.word	0x200259b0

08009a78 <_GLOBAL__sub_I__fonts>:
 8009a78:	b580      	push	{r7, lr}
 8009a7a:	af00      	add	r7, sp, #0
 8009a7c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009a80:	2001      	movs	r0, #1
 8009a82:	f7ff ffd7 	bl	8009a34 <_Z41__static_initialization_and_destruction_0ii>
 8009a86:	bd80      	pop	{r7, pc}

08009a88 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8009a88:	b580      	push	{r7, lr}
 8009a8a:	b082      	sub	sp, #8
 8009a8c:	af00      	add	r7, sp, #0
 8009a8e:	6078      	str	r0, [r7, #4]
 8009a90:	4a05      	ldr	r2, [pc, #20]	; (8009aa8 <_ZN19FrontendApplicationD1Ev+0x20>)
 8009a92:	687b      	ldr	r3, [r7, #4]
 8009a94:	601a      	str	r2, [r3, #0]
 8009a96:	687b      	ldr	r3, [r7, #4]
 8009a98:	4618      	mov	r0, r3
 8009a9a:	f7ff f893 	bl	8008bc4 <_ZN23FrontendApplicationBaseD1Ev>
 8009a9e:	687b      	ldr	r3, [r7, #4]
 8009aa0:	4618      	mov	r0, r3
 8009aa2:	3708      	adds	r7, #8
 8009aa4:	46bd      	mov	sp, r7
 8009aa6:	bd80      	pop	{r7, pc}
 8009aa8:	0801c5c0 	.word	0x0801c5c0

08009aac <_ZN19FrontendApplicationD0Ev>:
 8009aac:	b580      	push	{r7, lr}
 8009aae:	b082      	sub	sp, #8
 8009ab0:	af00      	add	r7, sp, #0
 8009ab2:	6078      	str	r0, [r7, #4]
 8009ab4:	6878      	ldr	r0, [r7, #4]
 8009ab6:	f7ff ffe7 	bl	8009a88 <_ZN19FrontendApplicationD1Ev>
 8009aba:	f44f 71a8 	mov.w	r1, #336	; 0x150
 8009abe:	6878      	ldr	r0, [r7, #4]
 8009ac0:	f010 ff64 	bl	801a98c <_ZdlPvj>
 8009ac4:	687b      	ldr	r3, [r7, #4]
 8009ac6:	4618      	mov	r0, r3
 8009ac8:	3708      	adds	r7, #8
 8009aca:	46bd      	mov	sp, r7
 8009acc:	bd80      	pop	{r7, pc}

08009ace <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8009ace:	b580      	push	{r7, lr}
 8009ad0:	b082      	sub	sp, #8
 8009ad2:	af00      	add	r7, sp, #0
 8009ad4:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 8009ad6:	687b      	ldr	r3, [r7, #4]
 8009ad8:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
 8009adc:	4618      	mov	r0, r3
 8009ade:	f000 f82d 	bl	8009b3c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8009ae2:	687b      	ldr	r3, [r7, #4]
 8009ae4:	4618      	mov	r0, r3
 8009ae6:	f003 fc0d 	bl	800d304 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 8009aea:	bf00      	nop
 8009aec:	3708      	adds	r7, #8
 8009aee:	46bd      	mov	sp, r7
 8009af0:	bd80      	pop	{r7, pc}
	...

08009af4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8009af4:	b580      	push	{r7, lr}
 8009af6:	b084      	sub	sp, #16
 8009af8:	af00      	add	r7, sp, #0
 8009afa:	60f8      	str	r0, [r7, #12]
 8009afc:	60b9      	str	r1, [r7, #8]
 8009afe:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 8009b00:	68fb      	ldr	r3, [r7, #12]
 8009b02:	687a      	ldr	r2, [r7, #4]
 8009b04:	68b9      	ldr	r1, [r7, #8]
 8009b06:	4618      	mov	r0, r3
 8009b08:	f7ff f8d6 	bl	8008cb8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8009b0c:	4a03      	ldr	r2, [pc, #12]	; (8009b1c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 8009b0e:	68fb      	ldr	r3, [r7, #12]
 8009b10:	601a      	str	r2, [r3, #0]
{

}
 8009b12:	68fb      	ldr	r3, [r7, #12]
 8009b14:	4618      	mov	r0, r3
 8009b16:	3710      	adds	r7, #16
 8009b18:	46bd      	mov	sp, r7
 8009b1a:	bd80      	pop	{r7, pc}
 8009b1c:	0801c5c0 	.word	0x0801c5c0

08009b20 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8009b20:	b480      	push	{r7}
 8009b22:	b083      	sub	sp, #12
 8009b24:	af00      	add	r7, sp, #0
 8009b26:	6078      	str	r0, [r7, #4]
 8009b28:	687b      	ldr	r3, [r7, #4]
 8009b2a:	2200      	movs	r2, #0
 8009b2c:	601a      	str	r2, [r3, #0]
{

}
 8009b2e:	687b      	ldr	r3, [r7, #4]
 8009b30:	4618      	mov	r0, r3
 8009b32:	370c      	adds	r7, #12
 8009b34:	46bd      	mov	sp, r7
 8009b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b3a:	4770      	bx	lr

08009b3c <_ZN5Model4tickEv>:

void Model::tick()
{
 8009b3c:	b480      	push	{r7}
 8009b3e:	b083      	sub	sp, #12
 8009b40:	af00      	add	r7, sp, #0
 8009b42:	6078      	str	r0, [r7, #4]

}
 8009b44:	bf00      	nop
 8009b46:	370c      	adds	r7, #12
 8009b48:	46bd      	mov	sp, r7
 8009b4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b4e:	4770      	bx	lr

08009b50 <_ZN8touchgfx9Presenter8activateEv>:
     * @brief Place initialization code for the Presenter here.
     *
     *        The activate function is called automatically when a screen transition causes
     *        this Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 8009b50:	b480      	push	{r7}
 8009b52:	b083      	sub	sp, #12
 8009b54:	af00      	add	r7, sp, #0
 8009b56:	6078      	str	r0, [r7, #4]
    {
    }
 8009b58:	bf00      	nop
 8009b5a:	370c      	adds	r7, #12
 8009b5c:	46bd      	mov	sp, r7
 8009b5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b62:	4770      	bx	lr

08009b64 <_ZN8touchgfx9Presenter10deactivateEv>:
     * @brief Place cleanup code for the Presenter here.
     *
     *        The deactivate function is called automatically when a screen transition causes
     *        this Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 8009b64:	b480      	push	{r7}
 8009b66:	b083      	sub	sp, #12
 8009b68:	af00      	add	r7, sp, #0
 8009b6a:	6078      	str	r0, [r7, #4]
    {
    }
 8009b6c:	bf00      	nop
 8009b6e:	370c      	adds	r7, #12
 8009b70:	46bd      	mov	sp, r7
 8009b72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b76:	4770      	bx	lr

08009b78 <_ZN8touchgfx9PresenterD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Presenter()
 8009b78:	b480      	push	{r7}
 8009b7a:	b083      	sub	sp, #12
 8009b7c:	af00      	add	r7, sp, #0
 8009b7e:	6078      	str	r0, [r7, #4]
    {
 8009b80:	4a04      	ldr	r2, [pc, #16]	; (8009b94 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 8009b82:	687b      	ldr	r3, [r7, #4]
 8009b84:	601a      	str	r2, [r3, #0]
    }
 8009b86:	687b      	ldr	r3, [r7, #4]
 8009b88:	4618      	mov	r0, r3
 8009b8a:	370c      	adds	r7, #12
 8009b8c:	46bd      	mov	sp, r7
 8009b8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b92:	4770      	bx	lr
 8009b94:	0801c634 	.word	0x0801c634

08009b98 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 8009b98:	b580      	push	{r7, lr}
 8009b9a:	b082      	sub	sp, #8
 8009b9c:	af00      	add	r7, sp, #0
 8009b9e:	6078      	str	r0, [r7, #4]
    }
 8009ba0:	6878      	ldr	r0, [r7, #4]
 8009ba2:	f7ff ffe9 	bl	8009b78 <_ZN8touchgfx9PresenterD1Ev>
 8009ba6:	2104      	movs	r1, #4
 8009ba8:	6878      	ldr	r0, [r7, #4]
 8009baa:	f010 feef 	bl	801a98c <_ZdlPvj>
 8009bae:	687b      	ldr	r3, [r7, #4]
 8009bb0:	4618      	mov	r0, r3
 8009bb2:	3708      	adds	r7, #8
 8009bb4:	46bd      	mov	sp, r7
 8009bb6:	bd80      	pop	{r7, pc}

08009bb8 <_ZN8touchgfx9PresenterC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Presenter()
 8009bb8:	b480      	push	{r7}
 8009bba:	b083      	sub	sp, #12
 8009bbc:	af00      	add	r7, sp, #0
 8009bbe:	6078      	str	r0, [r7, #4]
    {
 8009bc0:	4a04      	ldr	r2, [pc, #16]	; (8009bd4 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 8009bc2:	687b      	ldr	r3, [r7, #4]
 8009bc4:	601a      	str	r2, [r3, #0]
    }
 8009bc6:	687b      	ldr	r3, [r7, #4]
 8009bc8:	4618      	mov	r0, r3
 8009bca:	370c      	adds	r7, #12
 8009bcc:	46bd      	mov	sp, r7
 8009bce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bd2:	4770      	bx	lr
 8009bd4:	0801c634 	.word	0x0801c634

08009bd8 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 8009bd8:	b480      	push	{r7}
 8009bda:	b083      	sub	sp, #12
 8009bdc:	af00      	add	r7, sp, #0
 8009bde:	6078      	str	r0, [r7, #4]
 8009be0:	4a06      	ldr	r2, [pc, #24]	; (8009bfc <_ZN13ModelListenerC1Ev+0x24>)
 8009be2:	687b      	ldr	r3, [r7, #4]
 8009be4:	601a      	str	r2, [r3, #0]
 8009be6:	687b      	ldr	r3, [r7, #4]
 8009be8:	2200      	movs	r2, #0
 8009bea:	605a      	str	r2, [r3, #4]
 8009bec:	687b      	ldr	r3, [r7, #4]
 8009bee:	4618      	mov	r0, r3
 8009bf0:	370c      	adds	r7, #12
 8009bf2:	46bd      	mov	sp, r7
 8009bf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bf8:	4770      	bx	lr
 8009bfa:	bf00      	nop
 8009bfc:	0801c624 	.word	0x0801c624

08009c00 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 8009c00:	b480      	push	{r7}
 8009c02:	b083      	sub	sp, #12
 8009c04:	af00      	add	r7, sp, #0
 8009c06:	6078      	str	r0, [r7, #4]
 8009c08:	4a04      	ldr	r2, [pc, #16]	; (8009c1c <_ZN13ModelListenerD1Ev+0x1c>)
 8009c0a:	687b      	ldr	r3, [r7, #4]
 8009c0c:	601a      	str	r2, [r3, #0]
 8009c0e:	687b      	ldr	r3, [r7, #4]
 8009c10:	4618      	mov	r0, r3
 8009c12:	370c      	adds	r7, #12
 8009c14:	46bd      	mov	sp, r7
 8009c16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c1a:	4770      	bx	lr
 8009c1c:	0801c624 	.word	0x0801c624

08009c20 <_ZN13ModelListenerD0Ev>:
 8009c20:	b580      	push	{r7, lr}
 8009c22:	b082      	sub	sp, #8
 8009c24:	af00      	add	r7, sp, #0
 8009c26:	6078      	str	r0, [r7, #4]
 8009c28:	6878      	ldr	r0, [r7, #4]
 8009c2a:	f7ff ffe9 	bl	8009c00 <_ZN13ModelListenerD1Ev>
 8009c2e:	2108      	movs	r1, #8
 8009c30:	6878      	ldr	r0, [r7, #4]
 8009c32:	f010 feab 	bl	801a98c <_ZdlPvj>
 8009c36:	687b      	ldr	r3, [r7, #4]
 8009c38:	4618      	mov	r0, r3
 8009c3a:	3708      	adds	r7, #8
 8009c3c:	46bd      	mov	sp, r7
 8009c3e:	bd80      	pop	{r7, pc}

08009c40 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8009c40:	b580      	push	{r7, lr}
 8009c42:	b082      	sub	sp, #8
 8009c44:	af00      	add	r7, sp, #0
 8009c46:	6078      	str	r0, [r7, #4]
 8009c48:	4a09      	ldr	r2, [pc, #36]	; (8009c70 <_ZN16Screen1PresenterD1Ev+0x30>)
 8009c4a:	687b      	ldr	r3, [r7, #4]
 8009c4c:	601a      	str	r2, [r3, #0]
 8009c4e:	4a09      	ldr	r2, [pc, #36]	; (8009c74 <_ZN16Screen1PresenterD1Ev+0x34>)
 8009c50:	687b      	ldr	r3, [r7, #4]
 8009c52:	605a      	str	r2, [r3, #4]
 8009c54:	687b      	ldr	r3, [r7, #4]
 8009c56:	3304      	adds	r3, #4
 8009c58:	4618      	mov	r0, r3
 8009c5a:	f7ff ffd1 	bl	8009c00 <_ZN13ModelListenerD1Ev>
 8009c5e:	687b      	ldr	r3, [r7, #4]
 8009c60:	4618      	mov	r0, r3
 8009c62:	f7ff ff89 	bl	8009b78 <_ZN8touchgfx9PresenterD1Ev>
 8009c66:	687b      	ldr	r3, [r7, #4]
 8009c68:	4618      	mov	r0, r3
 8009c6a:	3708      	adds	r7, #8
 8009c6c:	46bd      	mov	sp, r7
 8009c6e:	bd80      	pop	{r7, pc}
 8009c70:	0801c5fc 	.word	0x0801c5fc
 8009c74:	0801c614 	.word	0x0801c614

08009c78 <_ZThn4_N16Screen1PresenterD1Ev>:
 8009c78:	f1a0 0004 	sub.w	r0, r0, #4
 8009c7c:	e7e0      	b.n	8009c40 <_ZN16Screen1PresenterD1Ev>
 8009c7e:	bf00      	nop

08009c80 <_ZN16Screen1PresenterD0Ev>:
 8009c80:	b580      	push	{r7, lr}
 8009c82:	b082      	sub	sp, #8
 8009c84:	af00      	add	r7, sp, #0
 8009c86:	6078      	str	r0, [r7, #4]
 8009c88:	6878      	ldr	r0, [r7, #4]
 8009c8a:	f7ff ffd9 	bl	8009c40 <_ZN16Screen1PresenterD1Ev>
 8009c8e:	2110      	movs	r1, #16
 8009c90:	6878      	ldr	r0, [r7, #4]
 8009c92:	f010 fe7b 	bl	801a98c <_ZdlPvj>
 8009c96:	687b      	ldr	r3, [r7, #4]
 8009c98:	4618      	mov	r0, r3
 8009c9a:	3708      	adds	r7, #8
 8009c9c:	46bd      	mov	sp, r7
 8009c9e:	bd80      	pop	{r7, pc}

08009ca0 <_ZThn4_N16Screen1PresenterD0Ev>:
 8009ca0:	f1a0 0004 	sub.w	r0, r0, #4
 8009ca4:	e7ec      	b.n	8009c80 <_ZN16Screen1PresenterD0Ev>
	...

08009ca8 <_ZN16Screen1PresenterC1ER11Screen1View>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

Screen1Presenter::Screen1Presenter(Screen1View& v)
 8009ca8:	b580      	push	{r7, lr}
 8009caa:	b082      	sub	sp, #8
 8009cac:	af00      	add	r7, sp, #0
 8009cae:	6078      	str	r0, [r7, #4]
 8009cb0:	6039      	str	r1, [r7, #0]
    : view(v)
 8009cb2:	687b      	ldr	r3, [r7, #4]
 8009cb4:	4618      	mov	r0, r3
 8009cb6:	f7ff ff7f 	bl	8009bb8 <_ZN8touchgfx9PresenterC1Ev>
 8009cba:	687b      	ldr	r3, [r7, #4]
 8009cbc:	3304      	adds	r3, #4
 8009cbe:	4618      	mov	r0, r3
 8009cc0:	f7ff ff8a 	bl	8009bd8 <_ZN13ModelListenerC1Ev>
 8009cc4:	4a06      	ldr	r2, [pc, #24]	; (8009ce0 <_ZN16Screen1PresenterC1ER11Screen1View+0x38>)
 8009cc6:	687b      	ldr	r3, [r7, #4]
 8009cc8:	601a      	str	r2, [r3, #0]
 8009cca:	4a06      	ldr	r2, [pc, #24]	; (8009ce4 <_ZN16Screen1PresenterC1ER11Screen1View+0x3c>)
 8009ccc:	687b      	ldr	r3, [r7, #4]
 8009cce:	605a      	str	r2, [r3, #4]
 8009cd0:	687b      	ldr	r3, [r7, #4]
 8009cd2:	683a      	ldr	r2, [r7, #0]
 8009cd4:	60da      	str	r2, [r3, #12]
{

}
 8009cd6:	687b      	ldr	r3, [r7, #4]
 8009cd8:	4618      	mov	r0, r3
 8009cda:	3708      	adds	r7, #8
 8009cdc:	46bd      	mov	sp, r7
 8009cde:	bd80      	pop	{r7, pc}
 8009ce0:	0801c5fc 	.word	0x0801c5fc
 8009ce4:	0801c614 	.word	0x0801c614

08009ce8 <_ZN16Screen1Presenter8activateEv>:

void Screen1Presenter::activate()
{
 8009ce8:	b480      	push	{r7}
 8009cea:	b083      	sub	sp, #12
 8009cec:	af00      	add	r7, sp, #0
 8009cee:	6078      	str	r0, [r7, #4]

}
 8009cf0:	bf00      	nop
 8009cf2:	370c      	adds	r7, #12
 8009cf4:	46bd      	mov	sp, r7
 8009cf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cfa:	4770      	bx	lr

08009cfc <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{
 8009cfc:	b480      	push	{r7}
 8009cfe:	b083      	sub	sp, #12
 8009d00:	af00      	add	r7, sp, #0
 8009d02:	6078      	str	r0, [r7, #4]

}
 8009d04:	bf00      	nop
 8009d06:	370c      	adds	r7, #12
 8009d08:	46bd      	mov	sp, r7
 8009d0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d0e:	4770      	bx	lr

08009d10 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8009d10:	b580      	push	{r7, lr}
 8009d12:	b082      	sub	sp, #8
 8009d14:	af00      	add	r7, sp, #0
 8009d16:	6078      	str	r0, [r7, #4]
 8009d18:	4a05      	ldr	r2, [pc, #20]	; (8009d30 <_ZN11Screen1ViewD1Ev+0x20>)
 8009d1a:	687b      	ldr	r3, [r7, #4]
 8009d1c:	601a      	str	r2, [r3, #0]
 8009d1e:	687b      	ldr	r3, [r7, #4]
 8009d20:	4618      	mov	r0, r3
 8009d22:	f7ff fd6f 	bl	8009804 <_ZN15Screen1ViewBaseD1Ev>
 8009d26:	687b      	ldr	r3, [r7, #4]
 8009d28:	4618      	mov	r0, r3
 8009d2a:	3708      	adds	r7, #8
 8009d2c:	46bd      	mov	sp, r7
 8009d2e:	bd80      	pop	{r7, pc}
 8009d30:	0801c64c 	.word	0x0801c64c

08009d34 <_ZN11Screen1ViewD0Ev>:
 8009d34:	b580      	push	{r7, lr}
 8009d36:	b082      	sub	sp, #8
 8009d38:	af00      	add	r7, sp, #0
 8009d3a:	6078      	str	r0, [r7, #4]
 8009d3c:	6878      	ldr	r0, [r7, #4]
 8009d3e:	f7ff ffe7 	bl	8009d10 <_ZN11Screen1ViewD1Ev>
 8009d42:	2174      	movs	r1, #116	; 0x74
 8009d44:	6878      	ldr	r0, [r7, #4]
 8009d46:	f010 fe21 	bl	801a98c <_ZdlPvj>
 8009d4a:	687b      	ldr	r3, [r7, #4]
 8009d4c:	4618      	mov	r0, r3
 8009d4e:	3708      	adds	r7, #8
 8009d50:	46bd      	mov	sp, r7
 8009d52:	bd80      	pop	{r7, pc}

08009d54 <_ZN11Screen1ViewC1Ev>:
#include <gui/screen1_screen/Screen1View.hpp>

Screen1View::Screen1View()
 8009d54:	b580      	push	{r7, lr}
 8009d56:	b082      	sub	sp, #8
 8009d58:	af00      	add	r7, sp, #0
 8009d5a:	6078      	str	r0, [r7, #4]
 8009d5c:	687b      	ldr	r3, [r7, #4]
 8009d5e:	4618      	mov	r0, r3
 8009d60:	f7ff fd78 	bl	8009854 <_ZN15Screen1ViewBaseC1Ev>
 8009d64:	4a03      	ldr	r2, [pc, #12]	; (8009d74 <_ZN11Screen1ViewC1Ev+0x20>)
 8009d66:	687b      	ldr	r3, [r7, #4]
 8009d68:	601a      	str	r2, [r3, #0]
{

}
 8009d6a:	687b      	ldr	r3, [r7, #4]
 8009d6c:	4618      	mov	r0, r3
 8009d6e:	3708      	adds	r7, #8
 8009d70:	46bd      	mov	sp, r7
 8009d72:	bd80      	pop	{r7, pc}
 8009d74:	0801c64c 	.word	0x0801c64c

08009d78 <_ZN11Screen1View11setupScreenEv>:

void Screen1View::setupScreen()
{
 8009d78:	b580      	push	{r7, lr}
 8009d7a:	b082      	sub	sp, #8
 8009d7c:	af00      	add	r7, sp, #0
 8009d7e:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::setupScreen();
 8009d80:	687b      	ldr	r3, [r7, #4]
 8009d82:	4618      	mov	r0, r3
 8009d84:	f7ff fda2 	bl	80098cc <_ZN15Screen1ViewBase11setupScreenEv>
}
 8009d88:	bf00      	nop
 8009d8a:	3708      	adds	r7, #8
 8009d8c:	46bd      	mov	sp, r7
 8009d8e:	bd80      	pop	{r7, pc}

08009d90 <_ZN11Screen1View14tearDownScreenEv>:

void Screen1View::tearDownScreen()
{
 8009d90:	b580      	push	{r7, lr}
 8009d92:	b082      	sub	sp, #8
 8009d94:	af00      	add	r7, sp, #0
 8009d96:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::tearDownScreen();
 8009d98:	687b      	ldr	r3, [r7, #4]
 8009d9a:	4618      	mov	r0, r3
 8009d9c:	f7ff fc02 	bl	80095a4 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 8009da0:	bf00      	nop
 8009da2:	3708      	adds	r7, #8
 8009da4:	46bd      	mov	sp, r7
 8009da6:	bd80      	pop	{r7, pc}

08009da8 <_ZN8touchgfx15TouchControllerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~TouchController()
 8009da8:	b480      	push	{r7}
 8009daa:	b083      	sub	sp, #12
 8009dac:	af00      	add	r7, sp, #0
 8009dae:	6078      	str	r0, [r7, #4]
    {
 8009db0:	4a04      	ldr	r2, [pc, #16]	; (8009dc4 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 8009db2:	687b      	ldr	r3, [r7, #4]
 8009db4:	601a      	str	r2, [r3, #0]
    }
 8009db6:	687b      	ldr	r3, [r7, #4]
 8009db8:	4618      	mov	r0, r3
 8009dba:	370c      	adds	r7, #12
 8009dbc:	46bd      	mov	sp, r7
 8009dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dc2:	4770      	bx	lr
 8009dc4:	0801c698 	.word	0x0801c698

08009dc8 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 8009dc8:	b580      	push	{r7, lr}
 8009dca:	b082      	sub	sp, #8
 8009dcc:	af00      	add	r7, sp, #0
 8009dce:	6078      	str	r0, [r7, #4]
    }
 8009dd0:	6878      	ldr	r0, [r7, #4]
 8009dd2:	f7ff ffe9 	bl	8009da8 <_ZN8touchgfx15TouchControllerD1Ev>
 8009dd6:	2104      	movs	r1, #4
 8009dd8:	6878      	ldr	r0, [r7, #4]
 8009dda:	f010 fdd7 	bl	801a98c <_ZdlPvj>
 8009dde:	687b      	ldr	r3, [r7, #4]
 8009de0:	4618      	mov	r0, r3
 8009de2:	3708      	adds	r7, #8
 8009de4:	46bd      	mov	sp, r7
 8009de6:	bd80      	pop	{r7, pc}

08009de8 <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>

void STM32TouchController::init()
{
 8009de8:	b480      	push	{r7}
 8009dea:	b083      	sub	sp, #12
 8009dec:	af00      	add	r7, sp, #0
 8009dee:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 8009df0:	bf00      	nop
 8009df2:	370c      	adds	r7, #12
 8009df4:	46bd      	mov	sp, r7
 8009df6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dfa:	4770      	bx	lr

08009dfc <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8009dfc:	b480      	push	{r7}
 8009dfe:	b085      	sub	sp, #20
 8009e00:	af00      	add	r7, sp, #0
 8009e02:	60f8      	str	r0, [r7, #12]
 8009e04:	60b9      	str	r1, [r7, #8]
 8009e06:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    return false;
 8009e08:	2300      	movs	r3, #0
}
 8009e0a:	4618      	mov	r0, r3
 8009e0c:	3714      	adds	r7, #20
 8009e0e:	46bd      	mov	sp, r7
 8009e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e14:	4770      	bx	lr
	...

08009e18 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8009e18:	b580      	push	{r7, lr}
 8009e1a:	b082      	sub	sp, #8
 8009e1c:	af00      	add	r7, sp, #0
 8009e1e:	6078      	str	r0, [r7, #4]
 8009e20:	4a05      	ldr	r2, [pc, #20]	; (8009e38 <_ZN20STM32TouchControllerD1Ev+0x20>)
 8009e22:	687b      	ldr	r3, [r7, #4]
 8009e24:	601a      	str	r2, [r3, #0]
 8009e26:	687b      	ldr	r3, [r7, #4]
 8009e28:	4618      	mov	r0, r3
 8009e2a:	f7ff ffbd 	bl	8009da8 <_ZN8touchgfx15TouchControllerD1Ev>
 8009e2e:	687b      	ldr	r3, [r7, #4]
 8009e30:	4618      	mov	r0, r3
 8009e32:	3708      	adds	r7, #8
 8009e34:	46bd      	mov	sp, r7
 8009e36:	bd80      	pop	{r7, pc}
 8009e38:	0801c680 	.word	0x0801c680

08009e3c <_ZN20STM32TouchControllerD0Ev>:
 8009e3c:	b580      	push	{r7, lr}
 8009e3e:	b082      	sub	sp, #8
 8009e40:	af00      	add	r7, sp, #0
 8009e42:	6078      	str	r0, [r7, #4]
 8009e44:	6878      	ldr	r0, [r7, #4]
 8009e46:	f7ff ffe7 	bl	8009e18 <_ZN20STM32TouchControllerD1Ev>
 8009e4a:	2104      	movs	r1, #4
 8009e4c:	6878      	ldr	r0, [r7, #4]
 8009e4e:	f010 fd9d 	bl	801a98c <_ZdlPvj>
 8009e52:	687b      	ldr	r3, [r7, #4]
 8009e54:	4618      	mov	r0, r3
 8009e56:	3708      	adds	r7, #8
 8009e58:	46bd      	mov	sp, r7
 8009e5a:	bd80      	pop	{r7, pc}

08009e5c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 8009e5c:	b480      	push	{r7}
 8009e5e:	b083      	sub	sp, #12
 8009e60:	af00      	add	r7, sp, #0
 8009e62:	4603      	mov	r3, r0
 8009e64:	71fb      	strb	r3, [r7, #7]

}
 8009e66:	bf00      	nop
 8009e68:	370c      	adds	r7, #12
 8009e6a:	46bd      	mov	sp, r7
 8009e6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e70:	4770      	bx	lr

08009e72 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 8009e72:	b480      	push	{r7}
 8009e74:	b083      	sub	sp, #12
 8009e76:	af00      	add	r7, sp, #0
 8009e78:	4603      	mov	r3, r0
 8009e7a:	71fb      	strb	r3, [r7, #7]

}
 8009e7c:	bf00      	nop
 8009e7e:	370c      	adds	r7, #12
 8009e80:	46bd      	mov	sp, r7
 8009e82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e86:	4770      	bx	lr

08009e88 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 8009e88:	b480      	push	{r7}
 8009e8a:	b083      	sub	sp, #12
 8009e8c:	af00      	add	r7, sp, #0
 8009e8e:	4603      	mov	r3, r0
 8009e90:	71fb      	strb	r3, [r7, #7]

}
 8009e92:	bf00      	nop
 8009e94:	370c      	adds	r7, #12
 8009e96:	46bd      	mov	sp, r7
 8009e98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e9c:	4770      	bx	lr
	...

08009ea0 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 8009ea0:	b480      	push	{r7}
 8009ea2:	b083      	sub	sp, #12
 8009ea4:	af00      	add	r7, sp, #0
 8009ea6:	6078      	str	r0, [r7, #4]
    {
 8009ea8:	4a04      	ldr	r2, [pc, #16]	; (8009ebc <_ZN8touchgfx3HALD1Ev+0x1c>)
 8009eaa:	687b      	ldr	r3, [r7, #4]
 8009eac:	601a      	str	r2, [r3, #0]
    }
 8009eae:	687b      	ldr	r3, [r7, #4]
 8009eb0:	4618      	mov	r0, r3
 8009eb2:	370c      	adds	r7, #12
 8009eb4:	46bd      	mov	sp, r7
 8009eb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009eba:	4770      	bx	lr
 8009ebc:	0801cf98 	.word	0x0801cf98

08009ec0 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 8009ec0:	b580      	push	{r7, lr}
 8009ec2:	b082      	sub	sp, #8
 8009ec4:	af00      	add	r7, sp, #0
 8009ec6:	6078      	str	r0, [r7, #4]
    }
 8009ec8:	6878      	ldr	r0, [r7, #4]
 8009eca:	f7ff ffe9 	bl	8009ea0 <_ZN8touchgfx3HALD1Ev>
 8009ece:	2178      	movs	r1, #120	; 0x78
 8009ed0:	6878      	ldr	r0, [r7, #4]
 8009ed2:	f010 fd5b 	bl	801a98c <_ZdlPvj>
 8009ed6:	687b      	ldr	r3, [r7, #4]
 8009ed8:	4618      	mov	r0, r3
 8009eda:	3708      	adds	r7, #8
 8009edc:	46bd      	mov	sp, r7
 8009ede:	bd80      	pop	{r7, pc}

08009ee0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 8009ee0:	b480      	push	{r7}
 8009ee2:	b083      	sub	sp, #12
 8009ee4:	af00      	add	r7, sp, #0
 8009ee6:	6078      	str	r0, [r7, #4]
 8009ee8:	460b      	mov	r3, r1
 8009eea:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 8009eec:	687b      	ldr	r3, [r7, #4]
 8009eee:	78fa      	ldrb	r2, [r7, #3]
 8009ef0:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8009ef4:	687b      	ldr	r3, [r7, #4]
 8009ef6:	2201      	movs	r2, #1
 8009ef8:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
    }
 8009efc:	bf00      	nop
 8009efe:	370c      	adds	r7, #12
 8009f00:	46bd      	mov	sp, r7
 8009f02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f06:	4770      	bx	lr

08009f08 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *        As default, will return whatever blitcaps are reported by the associated DMA
     *        object.
     *
     * @return a bitmask of the supported blitcaps.
     */
    virtual BlitOperations getBlitCaps()
 8009f08:	b580      	push	{r7, lr}
 8009f0a:	b082      	sub	sp, #8
 8009f0c:	af00      	add	r7, sp, #0
 8009f0e:	6078      	str	r0, [r7, #4]
    {
        return dma.getBlitCaps();
 8009f10:	687b      	ldr	r3, [r7, #4]
 8009f12:	685a      	ldr	r2, [r3, #4]
 8009f14:	687b      	ldr	r3, [r7, #4]
 8009f16:	685b      	ldr	r3, [r3, #4]
 8009f18:	681b      	ldr	r3, [r3, #0]
 8009f1a:	681b      	ldr	r3, [r3, #0]
 8009f1c:	4610      	mov	r0, r2
 8009f1e:	4798      	blx	r3
 8009f20:	4603      	mov	r3, r0
    }
 8009f22:	4618      	mov	r0, r3
 8009f24:	3708      	adds	r7, #8
 8009f26:	46bd      	mov	sp, r7
 8009f28:	bd80      	pop	{r7, pc}

08009f2a <_ZN8touchgfx3HAL15backPorchExitedEv>:
     * @brief Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     *        Has to be called from within the LCD IRQ rutine when the Back Porch Exit is
     *        reached.
     */
    virtual void backPorchExited()
 8009f2a:	b580      	push	{r7, lr}
 8009f2c:	b082      	sub	sp, #8
 8009f2e:	af00      	add	r7, sp, #0
 8009f30:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 8009f32:	6878      	ldr	r0, [r7, #4]
 8009f34:	f002 fd68 	bl	800ca08 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8009f38:	687b      	ldr	r3, [r7, #4]
 8009f3a:	681b      	ldr	r3, [r3, #0]
 8009f3c:	3390      	adds	r3, #144	; 0x90
 8009f3e:	681b      	ldr	r3, [r3, #0]
 8009f40:	6878      	ldr	r0, [r7, #4]
 8009f42:	4798      	blx	r3
    }
 8009f44:	bf00      	nop
 8009f46:	3708      	adds	r7, #8
 8009f48:	46bd      	mov	sp, r7
 8009f4a:	bd80      	pop	{r7, pc}

08009f4c <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 8009f4c:	b480      	push	{r7}
 8009f4e:	b083      	sub	sp, #12
 8009f50:	af00      	add	r7, sp, #0
 8009f52:	6078      	str	r0, [r7, #4]
 8009f54:	6039      	str	r1, [r7, #0]
    {
        return false;
 8009f56:	2300      	movs	r3, #0
    }
 8009f58:	4618      	mov	r0, r3
 8009f5a:	370c      	adds	r7, #12
 8009f5c:	46bd      	mov	sp, r7
 8009f5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f62:	4770      	bx	lr

08009f64 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb>:
     * @param      useDoubleBuffering  (Optional) If true, reserve memory for an extra frame buffer.
     * @param      useAnimationStorage (Optional) If true, reserve memory for animation storage.
     *
     * @deprecated Use the setFramaBufferStartAddress with 'format' parameter instead of 'depth'
     */
    virtual void setFrameBufferStartAddress(void* adr, uint16_t depth = 16, bool useDoubleBuffering = true, bool useAnimationStorage = true)
 8009f64:	b590      	push	{r4, r7, lr}
 8009f66:	b08b      	sub	sp, #44	; 0x2c
 8009f68:	af00      	add	r7, sp, #0
 8009f6a:	60f8      	str	r0, [r7, #12]
 8009f6c:	60b9      	str	r1, [r7, #8]
 8009f6e:	4611      	mov	r1, r2
 8009f70:	461a      	mov	r2, r3
 8009f72:	460b      	mov	r3, r1
 8009f74:	80fb      	strh	r3, [r7, #6]
 8009f76:	4613      	mov	r3, r2
 8009f78:	717b      	strb	r3, [r7, #5]
    {
        uint16_t stride = lcd().framebufferStride();
 8009f7a:	f7fe fcd5 	bl	8008928 <_ZN8touchgfx3HAL3lcdEv>
 8009f7e:	4602      	mov	r2, r0
 8009f80:	6813      	ldr	r3, [r2, #0]
 8009f82:	3328      	adds	r3, #40	; 0x28
 8009f84:	681b      	ldr	r3, [r3, #0]
 8009f86:	4610      	mov	r0, r2
 8009f88:	4798      	blx	r3
 8009f8a:	4603      	mov	r3, r0
 8009f8c:	837b      	strh	r3, [r7, #26]
        uint32_t bufferSizeInBytes = stride * FRAME_BUFFER_HEIGHT;
 8009f8e:	8b7b      	ldrh	r3, [r7, #26]
 8009f90:	4a3d      	ldr	r2, [pc, #244]	; (800a088 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x124>)
 8009f92:	8812      	ldrh	r2, [r2, #0]
 8009f94:	fb02 f303 	mul.w	r3, r2, r3
 8009f98:	617b      	str	r3, [r7, #20]
        uint8_t* ptr = (uint8_t*)adr;
 8009f9a:	68bb      	ldr	r3, [r7, #8]
 8009f9c:	627b      	str	r3, [r7, #36]	; 0x24
        void* double_buf = 0;
 8009f9e:	2300      	movs	r3, #0
 8009fa0:	623b      	str	r3, [r7, #32]
        void* anim_store = 0;
 8009fa2:	2300      	movs	r3, #0
 8009fa4:	61fb      	str	r3, [r7, #28]
        if (useDoubleBuffering)
 8009fa6:	797b      	ldrb	r3, [r7, #5]
 8009fa8:	2b00      	cmp	r3, #0
 8009faa:	d005      	beq.n	8009fb8 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x54>
        {
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer)
 8009fac:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009fae:	697b      	ldr	r3, [r7, #20]
 8009fb0:	4413      	add	r3, r2
 8009fb2:	627b      	str	r3, [r7, #36]	; 0x24
            double_buf = (void*)ptr;
 8009fb4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009fb6:	623b      	str	r3, [r7, #32]
        }
        if (useAnimationStorage)
 8009fb8:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 8009fbc:	2b00      	cmp	r3, #0
 8009fbe:	d005      	beq.n	8009fcc <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x68>
        {
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer and possibly double buffer)
 8009fc0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009fc2:	697b      	ldr	r3, [r7, #20]
 8009fc4:	4413      	add	r3, r2
 8009fc6:	627b      	str	r3, [r7, #36]	; 0x24
            anim_store = (void*)ptr;
 8009fc8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009fca:	61fb      	str	r3, [r7, #28]
        }
        switch (depth)
 8009fcc:	88fb      	ldrh	r3, [r7, #6]
 8009fce:	3b01      	subs	r3, #1
 8009fd0:	2b1f      	cmp	r3, #31
 8009fd2:	d84d      	bhi.n	800a070 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x10c>
 8009fd4:	a201      	add	r2, pc, #4	; (adr r2, 8009fdc <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x78>)
 8009fd6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009fda:	bf00      	nop
 8009fdc:	0800a05d 	.word	0x0800a05d
 8009fe0:	0800a05d 	.word	0x0800a05d
 8009fe4:	0800a071 	.word	0x0800a071
 8009fe8:	0800a05d 	.word	0x0800a05d
 8009fec:	0800a071 	.word	0x0800a071
 8009ff0:	0800a071 	.word	0x0800a071
 8009ff4:	0800a071 	.word	0x0800a071
 8009ff8:	0800a05d 	.word	0x0800a05d
 8009ffc:	0800a071 	.word	0x0800a071
 800a000:	0800a071 	.word	0x0800a071
 800a004:	0800a071 	.word	0x0800a071
 800a008:	0800a071 	.word	0x0800a071
 800a00c:	0800a071 	.word	0x0800a071
 800a010:	0800a071 	.word	0x0800a071
 800a014:	0800a071 	.word	0x0800a071
 800a018:	0800a05d 	.word	0x0800a05d
 800a01c:	0800a071 	.word	0x0800a071
 800a020:	0800a071 	.word	0x0800a071
 800a024:	0800a071 	.word	0x0800a071
 800a028:	0800a071 	.word	0x0800a071
 800a02c:	0800a071 	.word	0x0800a071
 800a030:	0800a071 	.word	0x0800a071
 800a034:	0800a071 	.word	0x0800a071
 800a038:	0800a05d 	.word	0x0800a05d
 800a03c:	0800a071 	.word	0x0800a071
 800a040:	0800a071 	.word	0x0800a071
 800a044:	0800a071 	.word	0x0800a071
 800a048:	0800a071 	.word	0x0800a071
 800a04c:	0800a071 	.word	0x0800a071
 800a050:	0800a071 	.word	0x0800a071
 800a054:	0800a071 	.word	0x0800a071
 800a058:	0800a05d 	.word	0x0800a05d
        case 16:
        case 8:
        case 4:
        case 2:
        case 1:
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 800a05c:	68fb      	ldr	r3, [r7, #12]
 800a05e:	681b      	ldr	r3, [r3, #0]
 800a060:	3374      	adds	r3, #116	; 0x74
 800a062:	681c      	ldr	r4, [r3, #0]
 800a064:	69fb      	ldr	r3, [r7, #28]
 800a066:	6a3a      	ldr	r2, [r7, #32]
 800a068:	68b9      	ldr	r1, [r7, #8]
 800a06a:	68f8      	ldr	r0, [r7, #12]
 800a06c:	47a0      	blx	r4
            break;
 800a06e:	e006      	b.n	800a07e <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x11a>
        default:
            assert(0 && "Unsupported bit depth");
 800a070:	4b06      	ldr	r3, [pc, #24]	; (800a08c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x128>)
 800a072:	4a07      	ldr	r2, [pc, #28]	; (800a090 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x12c>)
 800a074:	f240 3125 	movw	r1, #805	; 0x325
 800a078:	4806      	ldr	r0, [pc, #24]	; (800a094 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x130>)
 800a07a:	f010 fcb3 	bl	801a9e4 <__assert_func>
            break;
        }
    }
 800a07e:	bf00      	nop
 800a080:	372c      	adds	r7, #44	; 0x2c
 800a082:	46bd      	mov	sp, r7
 800a084:	bd90      	pop	{r4, r7, pc}
 800a086:	bf00      	nop
 800a088:	200268fc 	.word	0x200268fc
 800a08c:	0801c0f8 	.word	0x0801c0f8
 800a090:	0801c7ac 	.word	0x0801c7ac
 800a094:	0801c118 	.word	0x0801c118

0800a098 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     *
     * @param [in] frameBuffer      Buffer for frame buffer data, must be non-null.
     * @param [in] doubleBuffer     If non-null, buffer for double buffer data. If null double buffering is disabled.
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage is disabled.
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800a098:	b580      	push	{r7, lr}
 800a09a:	b084      	sub	sp, #16
 800a09c:	af00      	add	r7, sp, #0
 800a09e:	60f8      	str	r0, [r7, #12]
 800a0a0:	60b9      	str	r1, [r7, #8]
 800a0a2:	607a      	str	r2, [r7, #4]
 800a0a4:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800a0a6:	68bb      	ldr	r3, [r7, #8]
 800a0a8:	2b00      	cmp	r3, #0
 800a0aa:	d106      	bne.n	800a0ba <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800a0ac:	4b11      	ldr	r3, [pc, #68]	; (800a0f4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800a0ae:	4a12      	ldr	r2, [pc, #72]	; (800a0f8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800a0b0:	f240 3137 	movw	r1, #823	; 0x337
 800a0b4:	4811      	ldr	r0, [pc, #68]	; (800a0fc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x64>)
 800a0b6:	f010 fc95 	bl	801a9e4 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800a0ba:	68fb      	ldr	r3, [r7, #12]
 800a0bc:	68ba      	ldr	r2, [r7, #8]
 800a0be:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800a0c0:	68fb      	ldr	r3, [r7, #12]
 800a0c2:	687a      	ldr	r2, [r7, #4]
 800a0c4:	641a      	str	r2, [r3, #64]	; 0x40
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800a0c6:	68fb      	ldr	r3, [r7, #12]
 800a0c8:	683a      	ldr	r2, [r7, #0]
 800a0ca:	645a      	str	r2, [r3, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800a0cc:	687b      	ldr	r3, [r7, #4]
 800a0ce:	2b00      	cmp	r3, #0
 800a0d0:	bf14      	ite	ne
 800a0d2:	2301      	movne	r3, #1
 800a0d4:	2300      	moveq	r3, #0
 800a0d6:	b2da      	uxtb	r2, r3
 800a0d8:	4b09      	ldr	r3, [pc, #36]	; (800a100 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x68>)
 800a0da:	701a      	strb	r2, [r3, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800a0dc:	683b      	ldr	r3, [r7, #0]
 800a0de:	2b00      	cmp	r3, #0
 800a0e0:	bf14      	ite	ne
 800a0e2:	2301      	movne	r3, #1
 800a0e4:	2300      	moveq	r3, #0
 800a0e6:	b2da      	uxtb	r2, r3
 800a0e8:	4b06      	ldr	r3, [pc, #24]	; (800a104 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x6c>)
 800a0ea:	701a      	strb	r2, [r3, #0]
    }
 800a0ec:	bf00      	nop
 800a0ee:	3710      	adds	r7, #16
 800a0f0:	46bd      	mov	sp, r7
 800a0f2:	bd80      	pop	{r7, pc}
 800a0f4:	0801c15c 	.word	0x0801c15c
 800a0f8:	0801c75c 	.word	0x0801c75c
 800a0fc:	0801c118 	.word	0x0801c118
 800a100:	200268fe 	.word	0x200268fe
 800a104:	200268ff 	.word	0x200268ff

0800a108 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param ms Number of milliseconds to wait.
     *
     * @see void registerTaskDelayFunction(void (*delayF)(uint16_t))
     */
    virtual void taskDelay(uint16_t ms)
 800a108:	b580      	push	{r7, lr}
 800a10a:	b082      	sub	sp, #8
 800a10c:	af00      	add	r7, sp, #0
 800a10e:	6078      	str	r0, [r7, #4]
 800a110:	460b      	mov	r3, r1
 800a112:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800a114:	687b      	ldr	r3, [r7, #4]
 800a116:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a118:	2b00      	cmp	r3, #0
 800a11a:	d004      	beq.n	800a126 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 800a11c:	687b      	ldr	r3, [r7, #4]
 800a11e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a120:	887a      	ldrh	r2, [r7, #2]
 800a122:	4610      	mov	r0, r2
 800a124:	4798      	blx	r3
        }
    }
 800a126:	bf00      	nop
 800a128:	3708      	adds	r7, #8
 800a12a:	46bd      	mov	sp, r7
 800a12c:	bd80      	pop	{r7, pc}

0800a12e <_ZN8touchgfx3HAL10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA implementation.
     *        As default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800a12e:	b580      	push	{r7, lr}
 800a130:	b082      	sub	sp, #8
 800a132:	af00      	add	r7, sp, #0
 800a134:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 800a136:	687b      	ldr	r3, [r7, #4]
 800a138:	685a      	ldr	r2, [r3, #4]
 800a13a:	687b      	ldr	r3, [r7, #4]
 800a13c:	685b      	ldr	r3, [r3, #4]
 800a13e:	681b      	ldr	r3, [r3, #0]
 800a140:	3318      	adds	r3, #24
 800a142:	681b      	ldr	r3, [r3, #0]
 800a144:	4610      	mov	r0, r2
 800a146:	4798      	blx	r3
 800a148:	4603      	mov	r3, r0
    }
 800a14a:	4618      	mov	r0, r3
 800a14c:	3708      	adds	r7, #8
 800a14e:	46bd      	mov	sp, r7
 800a150:	bd80      	pop	{r7, pc}
	...

0800a154 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
     *
     * @brief Perform the actual display orientation change.
     *
     *        Perform the actual display orientation change.
     */
    virtual void performDisplayOrientationChange()
 800a154:	b480      	push	{r7}
 800a156:	b083      	sub	sp, #12
 800a158:	af00      	add	r7, sp, #0
 800a15a:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800a15c:	687b      	ldr	r3, [r7, #4]
 800a15e:	f893 2074 	ldrb.w	r2, [r3, #116]	; 0x74
 800a162:	687b      	ldr	r3, [r7, #4]
 800a164:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800a168:	429a      	cmp	r2, r3
 800a16a:	d017      	beq.n	800a19c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>
        {
            if (DISPLAY_ROTATION == rotate0)
 800a16c:	4b1a      	ldr	r3, [pc, #104]	; (800a1d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800a16e:	781b      	ldrb	r3, [r3, #0]
 800a170:	2b00      	cmp	r3, #0
 800a172:	d12a      	bne.n	800a1ca <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800a174:	4b19      	ldr	r3, [pc, #100]	; (800a1dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800a176:	881a      	ldrh	r2, [r3, #0]
 800a178:	4b19      	ldr	r3, [pc, #100]	; (800a1e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800a17a:	801a      	strh	r2, [r3, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800a17c:	4b19      	ldr	r3, [pc, #100]	; (800a1e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800a17e:	881a      	ldrh	r2, [r3, #0]
 800a180:	4b19      	ldr	r3, [pc, #100]	; (800a1e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800a182:	801a      	strh	r2, [r3, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 800a184:	4b16      	ldr	r3, [pc, #88]	; (800a1e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800a186:	881a      	ldrh	r2, [r3, #0]
 800a188:	4b16      	ldr	r3, [pc, #88]	; (800a1e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800a18a:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 800a18c:	4b16      	ldr	r3, [pc, #88]	; (800a1e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800a18e:	881a      	ldrh	r2, [r3, #0]
 800a190:	4b12      	ldr	r3, [pc, #72]	; (800a1dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800a192:	801a      	strh	r2, [r3, #0]
                DISPLAY_ROTATION = rotate90;
 800a194:	4b10      	ldr	r3, [pc, #64]	; (800a1d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800a196:	2201      	movs	r2, #1
 800a198:	701a      	strb	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800a19a:	e016      	b.n	800a1ca <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
        else if (DISPLAY_ROTATION != rotate0)
 800a19c:	4b0e      	ldr	r3, [pc, #56]	; (800a1d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800a19e:	781b      	ldrb	r3, [r3, #0]
 800a1a0:	2b00      	cmp	r3, #0
 800a1a2:	d012      	beq.n	800a1ca <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 800a1a4:	4b0f      	ldr	r3, [pc, #60]	; (800a1e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800a1a6:	881a      	ldrh	r2, [r3, #0]
 800a1a8:	4b0d      	ldr	r3, [pc, #52]	; (800a1e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800a1aa:	801a      	strh	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 800a1ac:	4b0b      	ldr	r3, [pc, #44]	; (800a1dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800a1ae:	881a      	ldrh	r2, [r3, #0]
 800a1b0:	4b0d      	ldr	r3, [pc, #52]	; (800a1e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800a1b2:	801a      	strh	r2, [r3, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 800a1b4:	4b0c      	ldr	r3, [pc, #48]	; (800a1e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800a1b6:	881a      	ldrh	r2, [r3, #0]
 800a1b8:	4b0a      	ldr	r3, [pc, #40]	; (800a1e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800a1ba:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 800a1bc:	4b08      	ldr	r3, [pc, #32]	; (800a1e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800a1be:	881a      	ldrh	r2, [r3, #0]
 800a1c0:	4b06      	ldr	r3, [pc, #24]	; (800a1dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800a1c2:	801a      	strh	r2, [r3, #0]
            DISPLAY_ROTATION = rotate0;
 800a1c4:	4b04      	ldr	r3, [pc, #16]	; (800a1d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800a1c6:	2200      	movs	r2, #0
 800a1c8:	701a      	strb	r2, [r3, #0]
    }
 800a1ca:	bf00      	nop
 800a1cc:	370c      	adds	r7, #12
 800a1ce:	46bd      	mov	sp, r7
 800a1d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1d4:	4770      	bx	lr
 800a1d6:	bf00      	nop
 800a1d8:	200268f8 	.word	0x200268f8
 800a1dc:	200268f4 	.word	0x200268f4
 800a1e0:	200268fa 	.word	0x200268fa
 800a1e4:	200268f6 	.word	0x200268f6
 800a1e8:	200268fc 	.word	0x200268fc

0800a1ec <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800a1ec:	b580      	push	{r7, lr}
 800a1ee:	b082      	sub	sp, #8
 800a1f0:	af00      	add	r7, sp, #0
 800a1f2:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800a1f4:	687b      	ldr	r3, [r7, #4]
 800a1f6:	4618      	mov	r0, r3
 800a1f8:	f001 fe88 	bl	800bf0c <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800a1fc:	bf00      	nop
 800a1fe:	3708      	adds	r7, #8
 800a200:	46bd      	mov	sp, r7
 800a202:	bd80      	pop	{r7, pc}

0800a204 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800a204:	b580      	push	{r7, lr}
 800a206:	b082      	sub	sp, #8
 800a208:	af00      	add	r7, sp, #0
 800a20a:	6078      	str	r0, [r7, #4]
 800a20c:	4a05      	ldr	r2, [pc, #20]	; (800a224 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800a20e:	687b      	ldr	r3, [r7, #4]
 800a210:	601a      	str	r2, [r3, #0]
 800a212:	687b      	ldr	r3, [r7, #4]
 800a214:	4618      	mov	r0, r3
 800a216:	f7ff fe43 	bl	8009ea0 <_ZN8touchgfx3HALD1Ev>
 800a21a:	687b      	ldr	r3, [r7, #4]
 800a21c:	4618      	mov	r0, r3
 800a21e:	3708      	adds	r7, #8
 800a220:	46bd      	mov	sp, r7
 800a222:	bd80      	pop	{r7, pc}
 800a224:	0801c984 	.word	0x0801c984

0800a228 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800a228:	b580      	push	{r7, lr}
 800a22a:	b082      	sub	sp, #8
 800a22c:	af00      	add	r7, sp, #0
 800a22e:	6078      	str	r0, [r7, #4]
 800a230:	6878      	ldr	r0, [r7, #4]
 800a232:	f7ff ffe7 	bl	800a204 <_ZN20TouchGFXGeneratedHALD1Ev>
 800a236:	2178      	movs	r1, #120	; 0x78
 800a238:	6878      	ldr	r0, [r7, #4]
 800a23a:	f010 fba7 	bl	801a98c <_ZdlPvj>
 800a23e:	687b      	ldr	r3, [r7, #4]
 800a240:	4618      	mov	r0, r3
 800a242:	3708      	adds	r7, #8
 800a244:	46bd      	mov	sp, r7
 800a246:	bd80      	pop	{r7, pc}

0800a248 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800a248:	b580      	push	{r7, lr}
 800a24a:	b082      	sub	sp, #8
 800a24c:	af00      	add	r7, sp, #0
 800a24e:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800a250:	687b      	ldr	r3, [r7, #4]
 800a252:	4618      	mov	r0, r3
 800a254:	f7ff ffca 	bl	800a1ec <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800a258:	bf00      	nop
 800a25a:	3708      	adds	r7, #8
 800a25c:	46bd      	mov	sp, r7
 800a25e:	bd80      	pop	{r7, pc}

0800a260 <_ZN11TouchGFXHAL10initializeEv>:
#include "stm32f4xx.h"

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 800a260:	b580      	push	{r7, lr}
 800a262:	b082      	sub	sp, #8
 800a264:	af00      	add	r7, sp, #0
 800a266:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800a268:	687b      	ldr	r3, [r7, #4]
 800a26a:	4618      	mov	r0, r3
 800a26c:	f001 fac4 	bl	800b7f8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800a270:	bf00      	nop
 800a272:	3708      	adds	r7, #8
 800a274:	46bd      	mov	sp, r7
 800a276:	bd80      	pop	{r7, pc}

0800a278 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800a278:	b580      	push	{r7, lr}
 800a27a:	b082      	sub	sp, #8
 800a27c:	af00      	add	r7, sp, #0
 800a27e:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800a280:	687b      	ldr	r3, [r7, #4]
 800a282:	4618      	mov	r0, r3
 800a284:	f001 fb46 	bl	800b914 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800a288:	4603      	mov	r3, r0
}
 800a28a:	4618      	mov	r0, r3
 800a28c:	3708      	adds	r7, #8
 800a28e:	46bd      	mov	sp, r7
 800a290:	bd80      	pop	{r7, pc}

0800a292 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800a292:	b580      	push	{r7, lr}
 800a294:	b082      	sub	sp, #8
 800a296:	af00      	add	r7, sp, #0
 800a298:	6078      	str	r0, [r7, #4]
 800a29a:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800a29c:	687b      	ldr	r3, [r7, #4]
 800a29e:	6839      	ldr	r1, [r7, #0]
 800a2a0:	4618      	mov	r0, r3
 800a2a2:	f001 fb45 	bl	800b930 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800a2a6:	bf00      	nop
 800a2a8:	3708      	adds	r7, #8
 800a2aa:	46bd      	mov	sp, r7
 800a2ac:	bd80      	pop	{r7, pc}

0800a2ae <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800a2ae:	b580      	push	{r7, lr}
 800a2b0:	b082      	sub	sp, #8
 800a2b2:	af00      	add	r7, sp, #0
 800a2b4:	6078      	str	r0, [r7, #4]
 800a2b6:	6039      	str	r1, [r7, #0]
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800a2b8:	687b      	ldr	r3, [r7, #4]
 800a2ba:	6839      	ldr	r1, [r7, #0]
 800a2bc:	4618      	mov	r0, r3
 800a2be:	f001 fb4d 	bl	800b95c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800a2c2:	bf00      	nop
 800a2c4:	3708      	adds	r7, #8
 800a2c6:	46bd      	mov	sp, r7
 800a2c8:	bd80      	pop	{r7, pc}

0800a2ca <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800a2ca:	b580      	push	{r7, lr}
 800a2cc:	b082      	sub	sp, #8
 800a2ce:	af00      	add	r7, sp, #0
 800a2d0:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800a2d2:	687b      	ldr	r3, [r7, #4]
 800a2d4:	4618      	mov	r0, r3
 800a2d6:	f001 fac3 	bl	800b860 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800a2da:	bf00      	nop
 800a2dc:	3708      	adds	r7, #8
 800a2de:	46bd      	mov	sp, r7
 800a2e0:	bd80      	pop	{r7, pc}

0800a2e2 <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800a2e2:	b580      	push	{r7, lr}
 800a2e4:	b082      	sub	sp, #8
 800a2e6:	af00      	add	r7, sp, #0
 800a2e8:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800a2ea:	687b      	ldr	r3, [r7, #4]
 800a2ec:	4618      	mov	r0, r3
 800a2ee:	f001 fac7 	bl	800b880 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800a2f2:	bf00      	nop
 800a2f4:	3708      	adds	r7, #8
 800a2f6:	46bd      	mov	sp, r7
 800a2f8:	bd80      	pop	{r7, pc}

0800a2fa <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800a2fa:	b580      	push	{r7, lr}
 800a2fc:	b082      	sub	sp, #8
 800a2fe:	af00      	add	r7, sp, #0
 800a300:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800a302:	687b      	ldr	r3, [r7, #4]
 800a304:	4618      	mov	r0, r3
 800a306:	f001 fac9 	bl	800b89c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800a30a:	bf00      	nop
 800a30c:	3708      	adds	r7, #8
 800a30e:	46bd      	mov	sp, r7
 800a310:	bd80      	pop	{r7, pc}

0800a312 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800a312:	b580      	push	{r7, lr}
 800a314:	b082      	sub	sp, #8
 800a316:	af00      	add	r7, sp, #0
 800a318:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800a31a:	687b      	ldr	r3, [r7, #4]
 800a31c:	4618      	mov	r0, r3
 800a31e:	f001 facb 	bl	800b8b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800a322:	bf00      	nop
 800a324:	3708      	adds	r7, #8
 800a326:	46bd      	mov	sp, r7
 800a328:	bd80      	pop	{r7, pc}
	...

0800a32c <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800a32c:	b580      	push	{r7, lr}
 800a32e:	b082      	sub	sp, #8
 800a330:	af00      	add	r7, sp, #0
 800a332:	6078      	str	r0, [r7, #4]
 800a334:	4a05      	ldr	r2, [pc, #20]	; (800a34c <_ZN11TouchGFXHALD1Ev+0x20>)
 800a336:	687b      	ldr	r3, [r7, #4]
 800a338:	601a      	str	r2, [r3, #0]
 800a33a:	687b      	ldr	r3, [r7, #4]
 800a33c:	4618      	mov	r0, r3
 800a33e:	f7ff ff61 	bl	800a204 <_ZN20TouchGFXGeneratedHALD1Ev>
 800a342:	687b      	ldr	r3, [r7, #4]
 800a344:	4618      	mov	r0, r3
 800a346:	3708      	adds	r7, #8
 800a348:	46bd      	mov	sp, r7
 800a34a:	bd80      	pop	{r7, pc}
 800a34c:	0801c6b0 	.word	0x0801c6b0

0800a350 <_ZN11TouchGFXHALD0Ev>:
 800a350:	b580      	push	{r7, lr}
 800a352:	b082      	sub	sp, #8
 800a354:	af00      	add	r7, sp, #0
 800a356:	6078      	str	r0, [r7, #4]
 800a358:	6878      	ldr	r0, [r7, #4]
 800a35a:	f7ff ffe7 	bl	800a32c <_ZN11TouchGFXHALD1Ev>
 800a35e:	2178      	movs	r1, #120	; 0x78
 800a360:	6878      	ldr	r0, [r7, #4]
 800a362:	f010 fb13 	bl	801a98c <_ZdlPvj>
 800a366:	687b      	ldr	r3, [r7, #4]
 800a368:	4618      	mov	r0, r3
 800a36a:	3708      	adds	r7, #8
 800a36c:	46bd      	mov	sp, r7
 800a36e:	bd80      	pop	{r7, pc}

0800a370 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800a370:	b480      	push	{r7}
 800a372:	af00      	add	r7, sp, #0
  fb_sem = 0;
 800a374:	4b05      	ldr	r3, [pc, #20]	; (800a38c <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800a376:	2200      	movs	r2, #0
 800a378:	601a      	str	r2, [r3, #0]
  vsync_sem = 0;
 800a37a:	4b05      	ldr	r3, [pc, #20]	; (800a390 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800a37c:	2200      	movs	r2, #0
 800a37e:	601a      	str	r2, [r3, #0]
}
 800a380:	bf00      	nop
 800a382:	46bd      	mov	sp, r7
 800a384:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a388:	4770      	bx	lr
 800a38a:	bf00      	nop
 800a38c:	200259bc 	.word	0x200259bc
 800a390:	200259c0 	.word	0x200259c0

0800a394 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800a394:	b480      	push	{r7}
 800a396:	af00      	add	r7, sp, #0
  while(fb_sem);
 800a398:	4b08      	ldr	r3, [pc, #32]	; (800a3bc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800a39a:	681b      	ldr	r3, [r3, #0]
 800a39c:	2b00      	cmp	r3, #0
 800a39e:	bf14      	ite	ne
 800a3a0:	2301      	movne	r3, #1
 800a3a2:	2300      	moveq	r3, #0
 800a3a4:	b2db      	uxtb	r3, r3
 800a3a6:	2b00      	cmp	r3, #0
 800a3a8:	d000      	beq.n	800a3ac <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x18>
 800a3aa:	e7f5      	b.n	800a398 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x4>
  fb_sem = 1;
 800a3ac:	4b03      	ldr	r3, [pc, #12]	; (800a3bc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800a3ae:	2201      	movs	r2, #1
 800a3b0:	601a      	str	r2, [r3, #0]
}
 800a3b2:	bf00      	nop
 800a3b4:	46bd      	mov	sp, r7
 800a3b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3ba:	4770      	bx	lr
 800a3bc:	200259bc 	.word	0x200259bc

0800a3c0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800a3c0:	b480      	push	{r7}
 800a3c2:	af00      	add	r7, sp, #0
  fb_sem = 0;
 800a3c4:	4b03      	ldr	r3, [pc, #12]	; (800a3d4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800a3c6:	2200      	movs	r2, #0
 800a3c8:	601a      	str	r2, [r3, #0]
}
 800a3ca:	bf00      	nop
 800a3cc:	46bd      	mov	sp, r7
 800a3ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3d2:	4770      	bx	lr
 800a3d4:	200259bc 	.word	0x200259bc

0800a3d8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800a3d8:	b480      	push	{r7}
 800a3da:	af00      	add	r7, sp, #0
  fb_sem = 1;
 800a3dc:	4b03      	ldr	r3, [pc, #12]	; (800a3ec <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800a3de:	2201      	movs	r2, #1
 800a3e0:	601a      	str	r2, [r3, #0]
}
 800a3e2:	bf00      	nop
 800a3e4:	46bd      	mov	sp, r7
 800a3e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3ea:	4770      	bx	lr
 800a3ec:	200259bc 	.word	0x200259bc

0800a3f0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800a3f0:	b480      	push	{r7}
 800a3f2:	af00      	add	r7, sp, #0
  fb_sem = 0;
 800a3f4:	4b03      	ldr	r3, [pc, #12]	; (800a404 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800a3f6:	2200      	movs	r2, #0
 800a3f8:	601a      	str	r2, [r3, #0]
}
 800a3fa:	bf00      	nop
 800a3fc:	46bd      	mov	sp, r7
 800a3fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a402:	4770      	bx	lr
 800a404:	200259bc 	.word	0x200259bc

0800a408 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800a408:	b480      	push	{r7}
 800a40a:	af00      	add	r7, sp, #0
  vsync_sem = 1;
 800a40c:	4b03      	ldr	r3, [pc, #12]	; (800a41c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800a40e:	2201      	movs	r2, #1
 800a410:	601a      	str	r2, [r3, #0]
}
 800a412:	bf00      	nop
 800a414:	46bd      	mov	sp, r7
 800a416:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a41a:	4770      	bx	lr
 800a41c:	200259c0 	.word	0x200259c0

0800a420 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800a420:	b580      	push	{r7, lr}
 800a422:	af00      	add	r7, sp, #0
  if(vsync_sem)
 800a424:	4b0a      	ldr	r3, [pc, #40]	; (800a450 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800a426:	681b      	ldr	r3, [r3, #0]
 800a428:	2b00      	cmp	r3, #0
 800a42a:	bf14      	ite	ne
 800a42c:	2301      	movne	r3, #1
 800a42e:	2300      	moveq	r3, #0
 800a430:	b2db      	uxtb	r3, r3
 800a432:	2b00      	cmp	r3, #0
 800a434:	d00a      	beq.n	800a44c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
  {
    vsync_sem = 0;
 800a436:	4b06      	ldr	r3, [pc, #24]	; (800a450 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800a438:	2200      	movs	r2, #0
 800a43a:	601a      	str	r2, [r3, #0]
    HAL::getInstance()->backPorchExited();
 800a43c:	f7fe fa68 	bl	8008910 <_ZN8touchgfx3HAL11getInstanceEv>
 800a440:	4602      	mov	r2, r0
 800a442:	6813      	ldr	r3, [r2, #0]
 800a444:	3358      	adds	r3, #88	; 0x58
 800a446:	681b      	ldr	r3, [r3, #0]
 800a448:	4610      	mov	r0, r2
 800a44a:	4798      	blx	r3
  }
}
 800a44c:	bf00      	nop
 800a44e:	bd80      	pop	{r7, pc}
 800a450:	200259c0 	.word	0x200259c0

0800a454 <_ZN8touchgfx10OSWrappers9taskDelayEt>:
 *
 * see HAL::setFrameRefreshStrategy(FrameRefreshStrategy s)
 * see HAL::registerTaskDelayFunction(void (*delayF)(uint16_t))
 */
void OSWrappers::taskDelay(uint16_t ms)
{
 800a454:	b580      	push	{r7, lr}
 800a456:	b082      	sub	sp, #8
 800a458:	af00      	add	r7, sp, #0
 800a45a:	4603      	mov	r3, r0
 800a45c:	80fb      	strh	r3, [r7, #6]
    HAL_Delay(ms);
 800a45e:	88fb      	ldrh	r3, [r7, #6]
 800a460:	4618      	mov	r0, r3
 800a462:	f7f8 fded 	bl	8003040 <HAL_Delay>
}
 800a466:	bf00      	nop
 800a468:	3708      	adds	r7, #8
 800a46a:	46bd      	mov	sp, r7
 800a46c:	bd80      	pop	{r7, pc}
	...

0800a470 <__NVIC_EnableIRQ>:
{
 800a470:	b480      	push	{r7}
 800a472:	b083      	sub	sp, #12
 800a474:	af00      	add	r7, sp, #0
 800a476:	4603      	mov	r3, r0
 800a478:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800a47a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a47e:	2b00      	cmp	r3, #0
 800a480:	db0d      	blt.n	800a49e <__NVIC_EnableIRQ+0x2e>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a482:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a486:	b2db      	uxtb	r3, r3
 800a488:	f003 021f 	and.w	r2, r3, #31
 800a48c:	4907      	ldr	r1, [pc, #28]	; (800a4ac <__NVIC_EnableIRQ+0x3c>)
 800a48e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a492:	095b      	lsrs	r3, r3, #5
 800a494:	2001      	movs	r0, #1
 800a496:	fa00 f202 	lsl.w	r2, r0, r2
 800a49a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800a49e:	bf00      	nop
 800a4a0:	370c      	adds	r7, #12
 800a4a2:	46bd      	mov	sp, r7
 800a4a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4a8:	4770      	bx	lr
 800a4aa:	bf00      	nop
 800a4ac:	e000e100 	.word	0xe000e100

0800a4b0 <__NVIC_DisableIRQ>:
{
 800a4b0:	b480      	push	{r7}
 800a4b2:	b083      	sub	sp, #12
 800a4b4:	af00      	add	r7, sp, #0
 800a4b6:	4603      	mov	r3, r0
 800a4b8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800a4ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a4be:	2b00      	cmp	r3, #0
 800a4c0:	db12      	blt.n	800a4e8 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a4c2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a4c6:	b2db      	uxtb	r3, r3
 800a4c8:	f003 021f 	and.w	r2, r3, #31
 800a4cc:	4909      	ldr	r1, [pc, #36]	; (800a4f4 <__NVIC_DisableIRQ+0x44>)
 800a4ce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a4d2:	095b      	lsrs	r3, r3, #5
 800a4d4:	2001      	movs	r0, #1
 800a4d6:	fa00 f202 	lsl.w	r2, r0, r2
 800a4da:	3320      	adds	r3, #32
 800a4dc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800a4e0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800a4e4:	f3bf 8f6f 	isb	sy
}
 800a4e8:	bf00      	nop
 800a4ea:	370c      	adds	r7, #12
 800a4ec:	46bd      	mov	sp, r7
 800a4ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4f2:	4770      	bx	lr
 800a4f4:	e000e100 	.word	0xe000e100

0800a4f8 <_ZN8touchgfx9colortypeC1Ev>:
    colortype() : color(0) {}
 800a4f8:	b480      	push	{r7}
 800a4fa:	b083      	sub	sp, #12
 800a4fc:	af00      	add	r7, sp, #0
 800a4fe:	6078      	str	r0, [r7, #4]
 800a500:	687b      	ldr	r3, [r7, #4]
 800a502:	2200      	movs	r2, #0
 800a504:	601a      	str	r2, [r3, #0]
 800a506:	687b      	ldr	r3, [r7, #4]
 800a508:	4618      	mov	r0, r3
 800a50a:	370c      	adds	r7, #12
 800a50c:	46bd      	mov	sp, r7
 800a50e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a512:	4770      	bx	lr

0800a514 <_ZNK8touchgfx9colortype10getColor32Ev>:
    inline uint32_t getColor32() const
 800a514:	b480      	push	{r7}
 800a516:	b083      	sub	sp, #12
 800a518:	af00      	add	r7, sp, #0
 800a51a:	6078      	str	r0, [r7, #4]
        return color;
 800a51c:	687b      	ldr	r3, [r7, #4]
 800a51e:	681b      	ldr	r3, [r3, #0]
    }
 800a520:	4618      	mov	r0, r3
 800a522:	370c      	adds	r7, #12
 800a524:	46bd      	mov	sp, r7
 800a526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a52a:	4770      	bx	lr

0800a52c <_ZNK8touchgfx9colortypecvtEv>:
    operator uint16_t() const
 800a52c:	b480      	push	{r7}
 800a52e:	b083      	sub	sp, #12
 800a530:	af00      	add	r7, sp, #0
 800a532:	6078      	str	r0, [r7, #4]
        return (uint16_t)color;
 800a534:	687b      	ldr	r3, [r7, #4]
 800a536:	681b      	ldr	r3, [r3, #0]
 800a538:	b29b      	uxth	r3, r3
    }
 800a53a:	4618      	mov	r0, r3
 800a53c:	370c      	adds	r7, #12
 800a53e:	46bd      	mov	sp, r7
 800a540:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a544:	4770      	bx	lr
	...

0800a548 <_ZN8touchgfx9DMA_QueueD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~DMA_Queue()
 800a548:	b480      	push	{r7}
 800a54a:	b083      	sub	sp, #12
 800a54c:	af00      	add	r7, sp, #0
 800a54e:	6078      	str	r0, [r7, #4]
    {
 800a550:	4a04      	ldr	r2, [pc, #16]	; (800a564 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800a552:	687b      	ldr	r3, [r7, #4]
 800a554:	601a      	str	r2, [r3, #0]
    }
 800a556:	687b      	ldr	r3, [r7, #4]
 800a558:	4618      	mov	r0, r3
 800a55a:	370c      	adds	r7, #12
 800a55c:	46bd      	mov	sp, r7
 800a55e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a562:	4770      	bx	lr
 800a564:	0801c858 	.word	0x0801c858

0800a568 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800a568:	b580      	push	{r7, lr}
 800a56a:	b082      	sub	sp, #8
 800a56c:	af00      	add	r7, sp, #0
 800a56e:	6078      	str	r0, [r7, #4]
    }
 800a570:	6878      	ldr	r0, [r7, #4]
 800a572:	f7ff ffe9 	bl	800a548 <_ZN8touchgfx9DMA_QueueD1Ev>
 800a576:	2104      	movs	r1, #4
 800a578:	6878      	ldr	r0, [r7, #4]
 800a57a:	f010 fa07 	bl	801a98c <_ZdlPvj>
 800a57e:	687b      	ldr	r3, [r7, #4]
 800a580:	4618      	mov	r0, r3
 800a582:	3708      	adds	r7, #8
 800a584:	46bd      	mov	sp, r7
 800a586:	bd80      	pop	{r7, pc}

0800a588 <_ZN8touchgfx13DMA_Interface5flushEv>:
     *
     * @brief This function blocks until all DMA transfers in the queue have been completed.
     *
     *        This function blocks until all DMA transfers in the queue have been completed.
     */
    virtual void flush()
 800a588:	b580      	push	{r7, lr}
 800a58a:	b082      	sub	sp, #8
 800a58c:	af00      	add	r7, sp, #0
 800a58e:	6078      	str	r0, [r7, #4]
    {
        waitForFrameBufferSemaphore();
 800a590:	687b      	ldr	r3, [r7, #4]
 800a592:	681b      	ldr	r3, [r3, #0]
 800a594:	3344      	adds	r3, #68	; 0x44
 800a596:	681b      	ldr	r3, [r3, #0]
 800a598:	6878      	ldr	r0, [r7, #4]
 800a59a:	4798      	blx	r3
    }
 800a59c:	bf00      	nop
 800a59e:	3708      	adds	r7, #8
 800a5a0:	46bd      	mov	sp, r7
 800a5a2:	bd80      	pop	{r7, pc}

0800a5a4 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA_Interface implementation.
     *        As default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
 800a5a4:	b480      	push	{r7}
 800a5a6:	b083      	sub	sp, #12
 800a5a8:	af00      	add	r7, sp, #0
 800a5aa:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 800a5ac:	2300      	movs	r3, #0
    }
 800a5ae:	4618      	mov	r0, r3
 800a5b0:	370c      	adds	r7, #12
 800a5b2:	46bd      	mov	sp, r7
 800a5b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5b8:	4770      	bx	lr
	...

0800a5bc <_ZN8touchgfx13DMA_InterfaceD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~DMA_Interface()
 800a5bc:	b480      	push	{r7}
 800a5be:	b083      	sub	sp, #12
 800a5c0:	af00      	add	r7, sp, #0
 800a5c2:	6078      	str	r0, [r7, #4]
    {
 800a5c4:	4a04      	ldr	r2, [pc, #16]	; (800a5d8 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800a5c6:	687b      	ldr	r3, [r7, #4]
 800a5c8:	601a      	str	r2, [r3, #0]
    }
 800a5ca:	687b      	ldr	r3, [r7, #4]
 800a5cc:	4618      	mov	r0, r3
 800a5ce:	370c      	adds	r7, #12
 800a5d0:	46bd      	mov	sp, r7
 800a5d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5d6:	4770      	bx	lr
 800a5d8:	0801d3dc 	.word	0x0801d3dc

0800a5dc <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800a5dc:	b580      	push	{r7, lr}
 800a5de:	b082      	sub	sp, #8
 800a5e0:	af00      	add	r7, sp, #0
 800a5e2:	6078      	str	r0, [r7, #4]
    }
 800a5e4:	6878      	ldr	r0, [r7, #4]
 800a5e6:	f7ff ffe9 	bl	800a5bc <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800a5ea:	210c      	movs	r1, #12
 800a5ec:	6878      	ldr	r0, [r7, #4]
 800a5ee:	f010 f9cd 	bl	801a98c <_ZdlPvj>
 800a5f2:	687b      	ldr	r3, [r7, #4]
 800a5f4:	4618      	mov	r0, r3
 800a5f6:	3708      	adds	r7, #8
 800a5f8:	46bd      	mov	sp, r7
 800a5fa:	bd80      	pop	{r7, pc}

0800a5fc <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
     *
     *        Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800a5fc:	b480      	push	{r7}
 800a5fe:	b083      	sub	sp, #12
 800a600:	af00      	add	r7, sp, #0
 800a602:	6078      	str	r0, [r7, #4]
 800a604:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800a606:	4a09      	ldr	r2, [pc, #36]	; (800a62c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800a608:	687b      	ldr	r3, [r7, #4]
 800a60a:	601a      	str	r2, [r3, #0]
 800a60c:	687b      	ldr	r3, [r7, #4]
 800a60e:	683a      	ldr	r2, [r7, #0]
 800a610:	605a      	str	r2, [r3, #4]
 800a612:	687b      	ldr	r3, [r7, #4]
 800a614:	2200      	movs	r2, #0
 800a616:	721a      	strb	r2, [r3, #8]
 800a618:	687b      	ldr	r3, [r7, #4]
 800a61a:	2200      	movs	r2, #0
 800a61c:	725a      	strb	r2, [r3, #9]
    {
    }
 800a61e:	687b      	ldr	r3, [r7, #4]
 800a620:	4618      	mov	r0, r3
 800a622:	370c      	adds	r7, #12
 800a624:	46bd      	mov	sp, r7
 800a626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a62a:	4770      	bx	lr
 800a62c:	0801d3dc 	.word	0x0801d3dc

0800a630 <_ZN8touchgfx3HAL18signalDMAInterruptEv>:
    void signalDMAInterrupt()
 800a630:	b580      	push	{r7, lr}
 800a632:	b082      	sub	sp, #8
 800a634:	af00      	add	r7, sp, #0
 800a636:	6078      	str	r0, [r7, #4]
        dma.signalDMAInterrupt();
 800a638:	687b      	ldr	r3, [r7, #4]
 800a63a:	685a      	ldr	r2, [r3, #4]
 800a63c:	687b      	ldr	r3, [r7, #4]
 800a63e:	685b      	ldr	r3, [r3, #4]
 800a640:	681b      	ldr	r3, [r3, #0]
 800a642:	3314      	adds	r3, #20
 800a644:	681b      	ldr	r3, [r3, #0]
 800a646:	4610      	mov	r0, r2
 800a648:	4798      	blx	r3
    }
 800a64a:	bf00      	nop
 800a64c:	3708      	adds	r7, #8
 800a64e:	46bd      	mov	sp, r7
 800a650:	bd80      	pop	{r7, pc}

0800a652 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
 800a652:	b580      	push	{r7, lr}
 800a654:	b082      	sub	sp, #8
 800a656:	af00      	add	r7, sp, #0
 800a658:	6078      	str	r0, [r7, #4]
    {
        executeCompleted();
 800a65a:	687a      	ldr	r2, [r7, #4]
 800a65c:	687b      	ldr	r3, [r7, #4]
 800a65e:	681b      	ldr	r3, [r3, #0]
 800a660:	3328      	adds	r3, #40	; 0x28
 800a662:	681b      	ldr	r3, [r3, #0]
 800a664:	4610      	mov	r0, r2
 800a666:	4798      	blx	r3
    }
 800a668:	bf00      	nop
 800a66a:	3708      	adds	r7, #8
 800a66c:	46bd      	mov	sp, r7
 800a66e:	bd80      	pop	{r7, pc}

0800a670 <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>:
/* USER CODE END user includes */

extern DMA2D_HandleTypeDef hdma2d;

static HAL_StatusTypeDef HAL_DMA2D_SetMode(DMA2D_HandleTypeDef *hdma2d, uint32_t mode, uint32_t color, uint32_t offset)
{
 800a670:	b480      	push	{r7}
 800a672:	b085      	sub	sp, #20
 800a674:	af00      	add	r7, sp, #0
 800a676:	60f8      	str	r0, [r7, #12]
 800a678:	60b9      	str	r1, [r7, #8]
 800a67a:	607a      	str	r2, [r7, #4]
 800a67c:	603b      	str	r3, [r7, #0]
    assert_param(IS_DMA2D_ALL_INSTANCE(hdma2d->Instance));

    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800a67e:	68fb      	ldr	r3, [r7, #12]
 800a680:	681b      	ldr	r3, [r3, #0]
 800a682:	681b      	ldr	r3, [r3, #0]
 800a684:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 800a688:	68ba      	ldr	r2, [r7, #8]
 800a68a:	68fb      	ldr	r3, [r7, #12]
 800a68c:	681b      	ldr	r3, [r3, #0]
 800a68e:	430a      	orrs	r2, r1
 800a690:	601a      	str	r2, [r3, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 800a692:	68fb      	ldr	r3, [r7, #12]
 800a694:	681b      	ldr	r3, [r3, #0]
 800a696:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a698:	f023 0107 	bic.w	r1, r3, #7
 800a69c:	687a      	ldr	r2, [r7, #4]
 800a69e:	68fb      	ldr	r3, [r7, #12]
 800a6a0:	681b      	ldr	r3, [r3, #0]
 800a6a2:	430a      	orrs	r2, r1
 800a6a4:	635a      	str	r2, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 800a6a6:	68fb      	ldr	r3, [r7, #12]
 800a6a8:	681b      	ldr	r3, [r3, #0]
 800a6aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a6ac:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800a6b0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800a6b4:	6839      	ldr	r1, [r7, #0]
 800a6b6:	68fa      	ldr	r2, [r7, #12]
 800a6b8:	6812      	ldr	r2, [r2, #0]
 800a6ba:	430b      	orrs	r3, r1
 800a6bc:	6413      	str	r3, [r2, #64]	; 0x40

    return HAL_OK;
 800a6be:	2300      	movs	r3, #0
}
 800a6c0:	4618      	mov	r0, r3
 800a6c2:	3714      	adds	r7, #20
 800a6c4:	46bd      	mov	sp, r7
 800a6c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6ca:	4770      	bx	lr

0800a6cc <DMA2D_XferCpltCallback>:

extern "C" {

static void DMA2D_XferCpltCallback(DMA2D_HandleTypeDef* handle)
{
 800a6cc:	b580      	push	{r7, lr}
 800a6ce:	b082      	sub	sp, #8
 800a6d0:	af00      	add	r7, sp, #0
 800a6d2:	6078      	str	r0, [r7, #4]
    touchgfx::HAL::getInstance()->signalDMAInterrupt();
 800a6d4:	f7fe f91c 	bl	8008910 <_ZN8touchgfx3HAL11getInstanceEv>
 800a6d8:	4603      	mov	r3, r0
 800a6da:	4618      	mov	r0, r3
 800a6dc:	f7ff ffa8 	bl	800a630 <_ZN8touchgfx3HAL18signalDMAInterruptEv>
}
 800a6e0:	bf00      	nop
 800a6e2:	3708      	adds	r7, #8
 800a6e4:	46bd      	mov	sp, r7
 800a6e6:	bd80      	pop	{r7, pc}

0800a6e8 <DMA2D_XferErrorCallback>:

static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
{
 800a6e8:	b580      	push	{r7, lr}
 800a6ea:	b082      	sub	sp, #8
 800a6ec:	af00      	add	r7, sp, #0
 800a6ee:	6078      	str	r0, [r7, #4]
    assert(0);
 800a6f0:	4b02      	ldr	r3, [pc, #8]	; (800a6fc <DMA2D_XferErrorCallback+0x14>)
 800a6f2:	4a03      	ldr	r2, [pc, #12]	; (800a700 <DMA2D_XferErrorCallback+0x18>)
 800a6f4:	2136      	movs	r1, #54	; 0x36
 800a6f6:	4803      	ldr	r0, [pc, #12]	; (800a704 <DMA2D_XferErrorCallback+0x1c>)
 800a6f8:	f010 f974 	bl	801a9e4 <__assert_func>
 800a6fc:	0801c194 	.word	0x0801c194
 800a700:	0801c874 	.word	0x0801c874
 800a704:	0801c198 	.word	0x0801c198

0800a708 <_ZN8touchgfx6BlitOpC1Ev>:
 *        (frame buffer) using DMA.
 *
 *        BlitOp instances carry the required information for performing operations on the LCD
 *        (frame buffer) using DMA.
 */
struct BlitOp
 800a708:	b580      	push	{r7, lr}
 800a70a:	b082      	sub	sp, #8
 800a70c:	af00      	add	r7, sp, #0
 800a70e:	6078      	str	r0, [r7, #4]
 800a710:	687b      	ldr	r3, [r7, #4]
 800a712:	3318      	adds	r3, #24
 800a714:	4618      	mov	r0, r3
 800a716:	f7ff feef 	bl	800a4f8 <_ZN8touchgfx9colortypeC1Ev>
 800a71a:	687b      	ldr	r3, [r7, #4]
 800a71c:	4618      	mov	r0, r3
 800a71e:	3708      	adds	r7, #8
 800a720:	46bd      	mov	sp, r7
 800a722:	bd80      	pop	{r7, pc}

0800a724 <_ZN10STM32F4DMAC1Ev>:
}

}

STM32F4DMA::STM32F4DMA()
 800a724:	b5b0      	push	{r4, r5, r7, lr}
 800a726:	b082      	sub	sp, #8
 800a728:	af00      	add	r7, sp, #0
 800a72a:	6078      	str	r0, [r7, #4]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 800a72c:	687a      	ldr	r2, [r7, #4]
 800a72e:	687b      	ldr	r3, [r7, #4]
 800a730:	330c      	adds	r3, #12
 800a732:	4619      	mov	r1, r3
 800a734:	4610      	mov	r0, r2
 800a736:	f7ff ff61 	bl	800a5fc <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800a73a:	4a0e      	ldr	r2, [pc, #56]	; (800a774 <_ZN10STM32F4DMAC1Ev+0x50>)
 800a73c:	687b      	ldr	r3, [r7, #4]
 800a73e:	601a      	str	r2, [r3, #0]
 800a740:	687b      	ldr	r3, [r7, #4]
 800a742:	f103 000c 	add.w	r0, r3, #12
 800a746:	687b      	ldr	r3, [r7, #4]
 800a748:	3320      	adds	r3, #32
 800a74a:	2260      	movs	r2, #96	; 0x60
 800a74c:	4619      	mov	r1, r3
 800a74e:	f002 fa81 	bl	800cc54 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800a752:	687b      	ldr	r3, [r7, #4]
 800a754:	3320      	adds	r3, #32
 800a756:	245f      	movs	r4, #95	; 0x5f
 800a758:	461d      	mov	r5, r3
 800a75a:	2c00      	cmp	r4, #0
 800a75c:	db05      	blt.n	800a76a <_ZN10STM32F4DMAC1Ev+0x46>
 800a75e:	4628      	mov	r0, r5
 800a760:	f7ff ffd2 	bl	800a708 <_ZN8touchgfx6BlitOpC1Ev>
 800a764:	3520      	adds	r5, #32
 800a766:	3c01      	subs	r4, #1
 800a768:	e7f7      	b.n	800a75a <_ZN10STM32F4DMAC1Ev+0x36>
{}
 800a76a:	687b      	ldr	r3, [r7, #4]
 800a76c:	4618      	mov	r0, r3
 800a76e:	3708      	adds	r7, #8
 800a770:	46bd      	mov	sp, r7
 800a772:	bdb0      	pop	{r4, r5, r7, pc}
 800a774:	0801c808 	.word	0x0801c808

0800a778 <_ZN10STM32F4DMAD1Ev>:

STM32F4DMA::~STM32F4DMA()
 800a778:	b580      	push	{r7, lr}
 800a77a:	b082      	sub	sp, #8
 800a77c:	af00      	add	r7, sp, #0
 800a77e:	6078      	str	r0, [r7, #4]
 800a780:	4a0b      	ldr	r2, [pc, #44]	; (800a7b0 <_ZN10STM32F4DMAD1Ev+0x38>)
 800a782:	687b      	ldr	r3, [r7, #4]
 800a784:	601a      	str	r2, [r3, #0]
{
    HAL_DMA2D_DeInit(&hdma2d);
 800a786:	480b      	ldr	r0, [pc, #44]	; (800a7b4 <_ZN10STM32F4DMAD1Ev+0x3c>)
 800a788:	f7f8 fe84 	bl	8003494 <HAL_DMA2D_DeInit>
    NVIC_DisableIRQ(DMA2D_IRQn);
 800a78c:	205a      	movs	r0, #90	; 0x5a
 800a78e:	f7ff fe8f 	bl	800a4b0 <__NVIC_DisableIRQ>
STM32F4DMA::~STM32F4DMA()
 800a792:	687b      	ldr	r3, [r7, #4]
 800a794:	330c      	adds	r3, #12
 800a796:	4618      	mov	r0, r3
 800a798:	f000 faa0 	bl	800acdc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800a79c:	687b      	ldr	r3, [r7, #4]
 800a79e:	4618      	mov	r0, r3
 800a7a0:	f7ff ff0c 	bl	800a5bc <_ZN8touchgfx13DMA_InterfaceD1Ev>
}
 800a7a4:	687b      	ldr	r3, [r7, #4]
 800a7a6:	4618      	mov	r0, r3
 800a7a8:	3708      	adds	r7, #8
 800a7aa:	46bd      	mov	sp, r7
 800a7ac:	bd80      	pop	{r7, pc}
 800a7ae:	bf00      	nop
 800a7b0:	0801c808 	.word	0x0801c808
 800a7b4:	20026f84 	.word	0x20026f84

0800a7b8 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 800a7b8:	b580      	push	{r7, lr}
 800a7ba:	b082      	sub	sp, #8
 800a7bc:	af00      	add	r7, sp, #0
 800a7be:	6078      	str	r0, [r7, #4]
}
 800a7c0:	6878      	ldr	r0, [r7, #4]
 800a7c2:	f7ff ffd9 	bl	800a778 <_ZN10STM32F4DMAD1Ev>
 800a7c6:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 800a7ca:	6878      	ldr	r0, [r7, #4]
 800a7cc:	f010 f8de 	bl	801a98c <_ZdlPvj>
 800a7d0:	687b      	ldr	r3, [r7, #4]
 800a7d2:	4618      	mov	r0, r3
 800a7d4:	3708      	adds	r7, #8
 800a7d6:	46bd      	mov	sp, r7
 800a7d8:	bd80      	pop	{r7, pc}
	...

0800a7dc <_ZN10STM32F4DMA10initializeEv>:

void STM32F4DMA::initialize()
{
 800a7dc:	b580      	push	{r7, lr}
 800a7de:	b082      	sub	sp, #8
 800a7e0:	af00      	add	r7, sp, #0
 800a7e2:	6078      	str	r0, [r7, #4]
    hdma2d.Instance = DMA2D;
 800a7e4:	4b09      	ldr	r3, [pc, #36]	; (800a80c <_ZN10STM32F4DMA10initializeEv+0x30>)
 800a7e6:	4a0a      	ldr	r2, [pc, #40]	; (800a810 <_ZN10STM32F4DMA10initializeEv+0x34>)
 800a7e8:	601a      	str	r2, [r3, #0]
    HAL_DMA2D_Init(&hdma2d);
 800a7ea:	4808      	ldr	r0, [pc, #32]	; (800a80c <_ZN10STM32F4DMA10initializeEv+0x30>)
 800a7ec:	f7f8 fe08 	bl	8003400 <HAL_DMA2D_Init>

    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800a7f0:	4b06      	ldr	r3, [pc, #24]	; (800a80c <_ZN10STM32F4DMA10initializeEv+0x30>)
 800a7f2:	4a08      	ldr	r2, [pc, #32]	; (800a814 <_ZN10STM32F4DMA10initializeEv+0x38>)
 800a7f4:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 800a7f6:	4b05      	ldr	r3, [pc, #20]	; (800a80c <_ZN10STM32F4DMA10initializeEv+0x30>)
 800a7f8:	4a07      	ldr	r2, [pc, #28]	; (800a818 <_ZN10STM32F4DMA10initializeEv+0x3c>)
 800a7fa:	615a      	str	r2, [r3, #20]

    NVIC_EnableIRQ(DMA2D_IRQn);
 800a7fc:	205a      	movs	r0, #90	; 0x5a
 800a7fe:	f7ff fe37 	bl	800a470 <__NVIC_EnableIRQ>
}
 800a802:	bf00      	nop
 800a804:	3708      	adds	r7, #8
 800a806:	46bd      	mov	sp, r7
 800a808:	bd80      	pop	{r7, pc}
 800a80a:	bf00      	nop
 800a80c:	20026f84 	.word	0x20026f84
 800a810:	4002b000 	.word	0x4002b000
 800a814:	0800a6cd 	.word	0x0800a6cd
 800a818:	0800a6e9 	.word	0x0800a6e9

0800a81c <_ZN10STM32F4DMA11getBlitCapsEv>:

BlitOperations STM32F4DMA::getBlitCaps()
{
 800a81c:	b480      	push	{r7}
 800a81e:	b083      	sub	sp, #12
 800a820:	af00      	add	r7, sp, #0
 800a822:	6078      	str	r0, [r7, #4]
                                        | BLIT_OP_COPY
                                        | BLIT_OP_COPY_WITH_ALPHA
                                        | BLIT_OP_COPY_ARGB8888
                                        | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                        | BLIT_OP_COPY_A4
                                        | BLIT_OP_COPY_A8);
 800a824:	f240 13ef 	movw	r3, #495	; 0x1ef
}
 800a828:	4618      	mov	r0, r3
 800a82a:	370c      	adds	r7, #12
 800a82c:	46bd      	mov	sp, r7
 800a82e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a832:	4770      	bx	lr

0800a834 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 800a834:	b590      	push	{r4, r7, lr}
 800a836:	b08d      	sub	sp, #52	; 0x34
 800a838:	af02      	add	r7, sp, #8
 800a83a:	6078      	str	r0, [r7, #4]
 800a83c:	6039      	str	r1, [r7, #0]
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
 800a83e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800a842:	627b      	str	r3, [r7, #36]	; 0x24
    uint32_t dma2dColorMode = 0;
 800a844:	2300      	movs	r3, #0
 800a846:	623b      	str	r3, [r7, #32]

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 800a848:	683b      	ldr	r3, [r7, #0]
 800a84a:	681b      	ldr	r3, [r3, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 800a84c:	2b20      	cmp	r3, #32
 800a84e:	d007      	beq.n	800a860 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 800a850:	683b      	ldr	r3, [r7, #0]
 800a852:	681b      	ldr	r3, [r3, #0]
 800a854:	2b40      	cmp	r3, #64	; 0x40
 800a856:	d003      	beq.n	800a860 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 800a858:	683b      	ldr	r3, [r7, #0]
 800a85a:	681b      	ldr	r3, [r3, #0]
 800a85c:	2b04      	cmp	r3, #4
 800a85e:	d101      	bne.n	800a864 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x30>
 800a860:	2301      	movs	r3, #1
 800a862:	e000      	b.n	800a866 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x32>
 800a864:	2300      	movs	r3, #0
    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 800a866:	77fb      	strb	r3, [r7, #31]

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
 800a868:	683b      	ldr	r3, [r7, #0]
 800a86a:	681b      	ldr	r3, [r3, #0]
                         || blitOp.operation == BLIT_OP_COPY_A8);
 800a86c:	2b80      	cmp	r3, #128	; 0x80
 800a86e:	d004      	beq.n	800a87a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x46>
 800a870:	683b      	ldr	r3, [r7, #0]
 800a872:	681b      	ldr	r3, [r3, #0]
 800a874:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a878:	d101      	bne.n	800a87e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4a>
 800a87a:	2301      	movs	r3, #1
 800a87c:	e000      	b.n	800a880 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4c>
 800a87e:	2300      	movs	r3, #0
    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
 800a880:	77bb      	strb	r3, [r7, #30]

    uint8_t bitDepth = HAL::lcd().bitDepth();
 800a882:	f7fe f851 	bl	8008928 <_ZN8touchgfx3HAL3lcdEv>
 800a886:	4602      	mov	r2, r0
 800a888:	6813      	ldr	r3, [r2, #0]
 800a88a:	3320      	adds	r3, #32
 800a88c:	681b      	ldr	r3, [r3, #0]
 800a88e:	4610      	mov	r0, r2
 800a890:	4798      	blx	r3
 800a892:	4603      	mov	r3, r0
 800a894:	777b      	strb	r3, [r7, #29]

    switch (blitOp.operation)
 800a896:	683b      	ldr	r3, [r7, #0]
 800a898:	681b      	ldr	r3, [r3, #0]
 800a89a:	2b40      	cmp	r3, #64	; 0x40
 800a89c:	d01d      	beq.n	800a8da <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 800a89e:	2b40      	cmp	r3, #64	; 0x40
 800a8a0:	d804      	bhi.n	800a8ac <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 800a8a2:	2b04      	cmp	r3, #4
 800a8a4:	d00e      	beq.n	800a8c4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x90>
 800a8a6:	2b20      	cmp	r3, #32
 800a8a8:	d017      	beq.n	800a8da <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 800a8aa:	e019      	b.n	800a8e0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xac>
 800a8ac:	2b80      	cmp	r3, #128	; 0x80
 800a8ae:	d003      	beq.n	800a8b8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x84>
 800a8b0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a8b4:	d003      	beq.n	800a8be <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
 800a8b6:	e013      	b.n	800a8e0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xac>
    {
    case BLIT_OP_COPY_A4:
        dma2dColorMode = CM_A4;
 800a8b8:	230a      	movs	r3, #10
 800a8ba:	623b      	str	r3, [r7, #32]
        break;
 800a8bc:	e01a      	b.n	800a8f4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    case BLIT_OP_COPY_A8:
        dma2dColorMode = CM_A8;
 800a8be:	2309      	movs	r3, #9
 800a8c0:	623b      	str	r3, [r7, #32]
        break;
 800a8c2:	e017      	b.n	800a8f4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    case BLIT_OP_COPY_WITH_ALPHA:
        dma2dTransferMode = DMA2D_M2M_BLEND;
 800a8c4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800a8c8:	627b      	str	r3, [r7, #36]	; 0x24
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800a8ca:	7f7b      	ldrb	r3, [r7, #29]
 800a8cc:	2b10      	cmp	r3, #16
 800a8ce:	d101      	bne.n	800a8d4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa0>
 800a8d0:	2302      	movs	r3, #2
 800a8d2:	e000      	b.n	800a8d6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
 800a8d4:	2301      	movs	r3, #1
 800a8d6:	623b      	str	r3, [r7, #32]
        break;
 800a8d8:	e00c      	b.n	800a8f4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    case BLIT_OP_COPY_ARGB8888:
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
 800a8da:	2300      	movs	r3, #0
 800a8dc:	623b      	str	r3, [r7, #32]
        break;
 800a8de:	e009      	b.n	800a8f4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    default:
        dma2dTransferMode = DMA2D_M2M;
 800a8e0:	2300      	movs	r3, #0
 800a8e2:	627b      	str	r3, [r7, #36]	; 0x24
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800a8e4:	7f7b      	ldrb	r3, [r7, #29]
 800a8e6:	2b10      	cmp	r3, #16
 800a8e8:	d101      	bne.n	800a8ee <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xba>
 800a8ea:	2302      	movs	r3, #2
 800a8ec:	e000      	b.n	800a8f0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 800a8ee:	2301      	movs	r3, #1
 800a8f0:	623b      	str	r3, [r7, #32]
        break;
 800a8f2:	bf00      	nop
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 800a8f4:	4a76      	ldr	r2, [pc, #472]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800a8f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a8f8:	6053      	str	r3, [r2, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800a8fa:	7f7b      	ldrb	r3, [r7, #29]
 800a8fc:	2b10      	cmp	r3, #16
 800a8fe:	d101      	bne.n	800a904 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 800a900:	2302      	movs	r3, #2
 800a902:	e000      	b.n	800a906 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 800a904:	2301      	movs	r3, #1
 800a906:	4a72      	ldr	r2, [pc, #456]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800a908:	6093      	str	r3, [r2, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800a90a:	683b      	ldr	r3, [r7, #0]
 800a90c:	8adb      	ldrh	r3, [r3, #22]
 800a90e:	461a      	mov	r2, r3
 800a910:	683b      	ldr	r3, [r7, #0]
 800a912:	8a1b      	ldrh	r3, [r3, #16]
 800a914:	1ad3      	subs	r3, r2, r3
 800a916:	461a      	mov	r2, r3
 800a918:	4b6d      	ldr	r3, [pc, #436]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800a91a:	60da      	str	r2, [r3, #12]

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800a91c:	7f7b      	ldrb	r3, [r7, #29]
 800a91e:	2b10      	cmp	r3, #16
 800a920:	d101      	bne.n	800a926 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
 800a922:	2202      	movs	r2, #2
 800a924:	e000      	b.n	800a928 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf4>
 800a926:	2201      	movs	r2, #1
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);
 800a928:	683b      	ldr	r3, [r7, #0]
 800a92a:	8adb      	ldrh	r3, [r3, #22]
 800a92c:	4619      	mov	r1, r3
 800a92e:	683b      	ldr	r3, [r7, #0]
 800a930:	8a1b      	ldrh	r3, [r3, #16]
 800a932:	1acb      	subs	r3, r1, r3
    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800a934:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800a936:	4866      	ldr	r0, [pc, #408]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800a938:	f7ff fe9a 	bl	800a670 <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 800a93c:	4a64      	ldr	r2, [pc, #400]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800a93e:	6a3b      	ldr	r3, [r7, #32]
 800a940:	62d3      	str	r3, [r2, #44]	; 0x2c
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 800a942:	683b      	ldr	r3, [r7, #0]
 800a944:	8a9b      	ldrh	r3, [r3, #20]
 800a946:	461a      	mov	r2, r3
 800a948:	683b      	ldr	r3, [r7, #0]
 800a94a:	8a1b      	ldrh	r3, [r3, #16]
 800a94c:	1ad3      	subs	r3, r2, r3
 800a94e:	461a      	mov	r2, r3
 800a950:	4b5f      	ldr	r3, [pc, #380]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800a952:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 800a954:	7ffb      	ldrb	r3, [r7, #31]
 800a956:	2b00      	cmp	r3, #0
 800a958:	d103      	bne.n	800a962 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12e>
 800a95a:	7fbb      	ldrb	r3, [r7, #30]
 800a95c:	2b00      	cmp	r3, #0
 800a95e:	f000 8082 	beq.w	800aa66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x232>
    {
        if (blitOp.alpha < 255)
 800a962:	683b      	ldr	r3, [r7, #0]
 800a964:	7f1b      	ldrb	r3, [r3, #28]
 800a966:	2bff      	cmp	r3, #255	; 0xff
 800a968:	d008      	beq.n	800a97c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 800a96a:	4b59      	ldr	r3, [pc, #356]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800a96c:	2202      	movs	r2, #2
 800a96e:	631a      	str	r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 800a970:	683b      	ldr	r3, [r7, #0]
 800a972:	7f1b      	ldrb	r3, [r3, #28]
 800a974:	461a      	mov	r2, r3
 800a976:	4b56      	ldr	r3, [pc, #344]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800a978:	635a      	str	r2, [r3, #52]	; 0x34
 800a97a:	e002      	b.n	800a982 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14e>
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 800a97c:	4b54      	ldr	r3, [pc, #336]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800a97e:	2200      	movs	r2, #0
 800a980:	631a      	str	r2, [r3, #48]	; 0x30
        }

        if (blendingText)
 800a982:	7fbb      	ldrb	r3, [r7, #30]
 800a984:	2b00      	cmp	r3, #0
 800a986:	d059      	beq.n	800aa3c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x208>
        {
            if (bitDepth == 16)
 800a988:	7f7b      	ldrb	r3, [r7, #29]
 800a98a:	2b10      	cmp	r3, #16
 800a98c:	d14a      	bne.n	800aa24 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1f0>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 800a98e:	683b      	ldr	r3, [r7, #0]
 800a990:	3318      	adds	r3, #24
 800a992:	4618      	mov	r0, r3
 800a994:	f7ff fdca 	bl	800a52c <_ZNK8touchgfx9colortypecvtEv>
 800a998:	4603      	mov	r3, r0
 800a99a:	12db      	asrs	r3, r3, #11
 800a99c:	f003 021f 	and.w	r2, r3, #31
 800a9a0:	4613      	mov	r3, r2
 800a9a2:	021b      	lsls	r3, r3, #8
 800a9a4:	1a9b      	subs	r3, r3, r2
 800a9a6:	4a4b      	ldr	r2, [pc, #300]	; (800aad4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 800a9a8:	fb82 1203 	smull	r1, r2, r2, r3
 800a9ac:	441a      	add	r2, r3
 800a9ae:	1112      	asrs	r2, r2, #4
 800a9b0:	17db      	asrs	r3, r3, #31
 800a9b2:	1ad3      	subs	r3, r2, r3
 800a9b4:	61bb      	str	r3, [r7, #24]
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 800a9b6:	683b      	ldr	r3, [r7, #0]
 800a9b8:	3318      	adds	r3, #24
 800a9ba:	4618      	mov	r0, r3
 800a9bc:	f7ff fdb6 	bl	800a52c <_ZNK8touchgfx9colortypecvtEv>
 800a9c0:	4603      	mov	r3, r0
 800a9c2:	115b      	asrs	r3, r3, #5
 800a9c4:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800a9c8:	4613      	mov	r3, r2
 800a9ca:	021b      	lsls	r3, r3, #8
 800a9cc:	1a9b      	subs	r3, r3, r2
 800a9ce:	4a42      	ldr	r2, [pc, #264]	; (800aad8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a4>)
 800a9d0:	fb82 1203 	smull	r1, r2, r2, r3
 800a9d4:	441a      	add	r2, r3
 800a9d6:	1152      	asrs	r2, r2, #5
 800a9d8:	17db      	asrs	r3, r3, #31
 800a9da:	1ad3      	subs	r3, r2, r3
 800a9dc:	617b      	str	r3, [r7, #20]
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 800a9de:	683b      	ldr	r3, [r7, #0]
 800a9e0:	3318      	adds	r3, #24
 800a9e2:	4618      	mov	r0, r3
 800a9e4:	f7ff fda2 	bl	800a52c <_ZNK8touchgfx9colortypecvtEv>
 800a9e8:	4603      	mov	r3, r0
 800a9ea:	f003 021f 	and.w	r2, r3, #31
 800a9ee:	4613      	mov	r3, r2
 800a9f0:	021b      	lsls	r3, r3, #8
 800a9f2:	1a9b      	subs	r3, r3, r2
 800a9f4:	4a37      	ldr	r2, [pc, #220]	; (800aad4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 800a9f6:	fb82 1203 	smull	r1, r2, r2, r3
 800a9fa:	441a      	add	r2, r3
 800a9fc:	1112      	asrs	r2, r2, #4
 800a9fe:	17db      	asrs	r3, r3, #31
 800aa00:	1ad3      	subs	r3, r2, r3
 800aa02:	613b      	str	r3, [r7, #16]
                uint32_t alpha = blitOp.alpha;
 800aa04:	683b      	ldr	r3, [r7, #0]
 800aa06:	7f1b      	ldrb	r3, [r3, #28]
 800aa08:	60fb      	str	r3, [r7, #12]
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 800aa0a:	68fb      	ldr	r3, [r7, #12]
 800aa0c:	061a      	lsls	r2, r3, #24
 800aa0e:	69bb      	ldr	r3, [r7, #24]
 800aa10:	041b      	lsls	r3, r3, #16
 800aa12:	431a      	orrs	r2, r3
 800aa14:	697b      	ldr	r3, [r7, #20]
 800aa16:	021b      	lsls	r3, r3, #8
 800aa18:	431a      	orrs	r2, r3
 800aa1a:	693b      	ldr	r3, [r7, #16]
 800aa1c:	4313      	orrs	r3, r2
 800aa1e:	4a2c      	ldr	r2, [pc, #176]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800aa20:	6353      	str	r3, [r2, #52]	; 0x34
 800aa22:	e00b      	b.n	800aa3c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x208>
            }
            else
            {
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 800aa24:	683b      	ldr	r3, [r7, #0]
 800aa26:	3318      	adds	r3, #24
 800aa28:	4618      	mov	r0, r3
 800aa2a:	f7ff fd73 	bl	800a514 <_ZNK8touchgfx9colortype10getColor32Ev>
 800aa2e:	4602      	mov	r2, r0
 800aa30:	683b      	ldr	r3, [r7, #0]
 800aa32:	7f1b      	ldrb	r3, [r3, #28]
 800aa34:	061b      	lsls	r3, r3, #24
 800aa36:	4313      	orrs	r3, r2
 800aa38:	4a25      	ldr	r2, [pc, #148]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800aa3a:	6353      	str	r3, [r2, #52]	; 0x34
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800aa3c:	683b      	ldr	r3, [r7, #0]
 800aa3e:	8adb      	ldrh	r3, [r3, #22]
 800aa40:	461a      	mov	r2, r3
 800aa42:	683b      	ldr	r3, [r7, #0]
 800aa44:	8a1b      	ldrh	r3, [r3, #16]
 800aa46:	1ad3      	subs	r3, r2, r3
 800aa48:	461a      	mov	r2, r3
 800aa4a:	4b21      	ldr	r3, [pc, #132]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800aa4c:	619a      	str	r2, [r3, #24]
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800aa4e:	7f7b      	ldrb	r3, [r7, #29]
 800aa50:	2b10      	cmp	r3, #16
 800aa52:	d101      	bne.n	800aa58 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x224>
 800aa54:	2302      	movs	r3, #2
 800aa56:	e000      	b.n	800aa5a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x226>
 800aa58:	2301      	movs	r3, #1
 800aa5a:	4a1d      	ldr	r2, [pc, #116]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800aa5c:	61d3      	str	r3, [r2, #28]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800aa5e:	2100      	movs	r1, #0
 800aa60:	481b      	ldr	r0, [pc, #108]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800aa62:	f7f8 fe87 	bl	8003774 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 800aa66:	2101      	movs	r1, #1
 800aa68:	4819      	ldr	r0, [pc, #100]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800aa6a:	f7f8 fe83 	bl	8003774 <HAL_DMA2D_ConfigLayer>

    if (blendingImage || blendingText)
 800aa6e:	7ffb      	ldrb	r3, [r7, #31]
 800aa70:	2b00      	cmp	r3, #0
 800aa72:	d102      	bne.n	800aa7a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x246>
 800aa74:	7fbb      	ldrb	r3, [r7, #30]
 800aa76:	2b00      	cmp	r3, #0
 800aa78:	d015      	beq.n	800aaa6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x272>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
                                   (unsigned int)blitOp.pSrc,
 800aa7a:	683b      	ldr	r3, [r7, #0]
 800aa7c:	685b      	ldr	r3, [r3, #4]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800aa7e:	4619      	mov	r1, r3
                                   (unsigned int)blitOp.pDst,
 800aa80:	683b      	ldr	r3, [r7, #0]
 800aa82:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800aa84:	4618      	mov	r0, r3
                                   (unsigned int)blitOp.pDst,
 800aa86:	683b      	ldr	r3, [r7, #0]
 800aa88:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800aa8a:	461c      	mov	r4, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800aa8c:	683b      	ldr	r3, [r7, #0]
 800aa8e:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800aa90:	461a      	mov	r2, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800aa92:	683b      	ldr	r3, [r7, #0]
 800aa94:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800aa96:	9301      	str	r3, [sp, #4]
 800aa98:	9200      	str	r2, [sp, #0]
 800aa9a:	4623      	mov	r3, r4
 800aa9c:	4602      	mov	r2, r0
 800aa9e:	480c      	ldr	r0, [pc, #48]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800aaa0:	f7f8 fd9b 	bl	80035da <HAL_DMA2D_BlendingStart_IT>
 800aaa4:	e00f      	b.n	800aac6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x292>
    }
    else
    {
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
 800aaa6:	683b      	ldr	r3, [r7, #0]
 800aaa8:	685b      	ldr	r3, [r3, #4]
        HAL_DMA2D_Start_IT(&hdma2d,
 800aaaa:	4619      	mov	r1, r3
                           (unsigned int)blitOp.pDst,
 800aaac:	683b      	ldr	r3, [r7, #0]
 800aaae:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_Start_IT(&hdma2d,
 800aab0:	461a      	mov	r2, r3
                           blitOp.nSteps, blitOp.nLoops);
 800aab2:	683b      	ldr	r3, [r7, #0]
 800aab4:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_Start_IT(&hdma2d,
 800aab6:	4618      	mov	r0, r3
                           blitOp.nSteps, blitOp.nLoops);
 800aab8:	683b      	ldr	r3, [r7, #0]
 800aaba:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_Start_IT(&hdma2d,
 800aabc:	9300      	str	r3, [sp, #0]
 800aabe:	4603      	mov	r3, r0
 800aac0:	4803      	ldr	r0, [pc, #12]	; (800aad0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800aac2:	f7f8 fd57 	bl	8003574 <HAL_DMA2D_Start_IT>
    }
}
 800aac6:	bf00      	nop
 800aac8:	372c      	adds	r7, #44	; 0x2c
 800aaca:	46bd      	mov	sp, r7
 800aacc:	bd90      	pop	{r4, r7, pc}
 800aace:	bf00      	nop
 800aad0:	20026f84 	.word	0x20026f84
 800aad4:	84210843 	.word	0x84210843
 800aad8:	82082083 	.word	0x82082083

0800aadc <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 800aadc:	b590      	push	{r4, r7, lr}
 800aade:	b08d      	sub	sp, #52	; 0x34
 800aae0:	af02      	add	r7, sp, #8
 800aae2:	6078      	str	r0, [r7, #4]
 800aae4:	6039      	str	r1, [r7, #0]
    uint8_t bitDepth = HAL::lcd().bitDepth();
 800aae6:	f7fd ff1f 	bl	8008928 <_ZN8touchgfx3HAL3lcdEv>
 800aaea:	4602      	mov	r2, r0
 800aaec:	6813      	ldr	r3, [r2, #0]
 800aaee:	3320      	adds	r3, #32
 800aaf0:	681b      	ldr	r3, [r3, #0]
 800aaf2:	4610      	mov	r0, r2
 800aaf4:	4798      	blx	r3
 800aaf6:	4603      	mov	r3, r0
 800aaf8:	77fb      	strb	r3, [r7, #31]
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800aafa:	7ffb      	ldrb	r3, [r7, #31]
 800aafc:	2b10      	cmp	r3, #16
 800aafe:	d101      	bne.n	800ab04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x28>
 800ab00:	2302      	movs	r3, #2
 800ab02:	e000      	b.n	800ab06 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x2a>
 800ab04:	2301      	movs	r3, #1
 800ab06:	61bb      	str	r3, [r7, #24]

    uint32_t color = 0;
 800ab08:	2300      	movs	r3, #0
 800ab0a:	623b      	str	r3, [r7, #32]
    if (bitDepth == 16)
 800ab0c:	7ffb      	ldrb	r3, [r7, #31]
 800ab0e:	2b10      	cmp	r3, #16
 800ab10:	d149      	bne.n	800aba6 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 800ab12:	683b      	ldr	r3, [r7, #0]
 800ab14:	3318      	adds	r3, #24
 800ab16:	4618      	mov	r0, r3
 800ab18:	f7ff fd08 	bl	800a52c <_ZNK8touchgfx9colortypecvtEv>
 800ab1c:	4603      	mov	r3, r0
 800ab1e:	12db      	asrs	r3, r3, #11
 800ab20:	f003 021f 	and.w	r2, r3, #31
 800ab24:	4613      	mov	r3, r2
 800ab26:	021b      	lsls	r3, r3, #8
 800ab28:	1a9b      	subs	r3, r3, r2
 800ab2a:	4a69      	ldr	r2, [pc, #420]	; (800acd0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f4>)
 800ab2c:	fb82 1203 	smull	r1, r2, r2, r3
 800ab30:	441a      	add	r2, r3
 800ab32:	1112      	asrs	r2, r2, #4
 800ab34:	17db      	asrs	r3, r3, #31
 800ab36:	1ad3      	subs	r3, r2, r3
 800ab38:	617b      	str	r3, [r7, #20]
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 800ab3a:	683b      	ldr	r3, [r7, #0]
 800ab3c:	3318      	adds	r3, #24
 800ab3e:	4618      	mov	r0, r3
 800ab40:	f7ff fcf4 	bl	800a52c <_ZNK8touchgfx9colortypecvtEv>
 800ab44:	4603      	mov	r3, r0
 800ab46:	115b      	asrs	r3, r3, #5
 800ab48:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800ab4c:	4613      	mov	r3, r2
 800ab4e:	021b      	lsls	r3, r3, #8
 800ab50:	1a9b      	subs	r3, r3, r2
 800ab52:	4a60      	ldr	r2, [pc, #384]	; (800acd4 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f8>)
 800ab54:	fb82 1203 	smull	r1, r2, r2, r3
 800ab58:	441a      	add	r2, r3
 800ab5a:	1152      	asrs	r2, r2, #5
 800ab5c:	17db      	asrs	r3, r3, #31
 800ab5e:	1ad3      	subs	r3, r2, r3
 800ab60:	613b      	str	r3, [r7, #16]
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 800ab62:	683b      	ldr	r3, [r7, #0]
 800ab64:	3318      	adds	r3, #24
 800ab66:	4618      	mov	r0, r3
 800ab68:	f7ff fce0 	bl	800a52c <_ZNK8touchgfx9colortypecvtEv>
 800ab6c:	4603      	mov	r3, r0
 800ab6e:	f003 021f 	and.w	r2, r3, #31
 800ab72:	4613      	mov	r3, r2
 800ab74:	021b      	lsls	r3, r3, #8
 800ab76:	1a9b      	subs	r3, r3, r2
 800ab78:	4a55      	ldr	r2, [pc, #340]	; (800acd0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f4>)
 800ab7a:	fb82 1203 	smull	r1, r2, r2, r3
 800ab7e:	441a      	add	r2, r3
 800ab80:	1112      	asrs	r2, r2, #4
 800ab82:	17db      	asrs	r3, r3, #31
 800ab84:	1ad3      	subs	r3, r2, r3
 800ab86:	60fb      	str	r3, [r7, #12]
        uint32_t alpha = blitOp.alpha;
 800ab88:	683b      	ldr	r3, [r7, #0]
 800ab8a:	7f1b      	ldrb	r3, [r3, #28]
 800ab8c:	60bb      	str	r3, [r7, #8]
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 800ab8e:	68bb      	ldr	r3, [r7, #8]
 800ab90:	061a      	lsls	r2, r3, #24
 800ab92:	697b      	ldr	r3, [r7, #20]
 800ab94:	041b      	lsls	r3, r3, #16
 800ab96:	431a      	orrs	r2, r3
 800ab98:	693b      	ldr	r3, [r7, #16]
 800ab9a:	021b      	lsls	r3, r3, #8
 800ab9c:	4313      	orrs	r3, r2
 800ab9e:	68fa      	ldr	r2, [r7, #12]
 800aba0:	4313      	orrs	r3, r2
 800aba2:	623b      	str	r3, [r7, #32]
 800aba4:	e00b      	b.n	800abbe <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe2>
    }
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 800aba6:	683b      	ldr	r3, [r7, #0]
 800aba8:	7f1b      	ldrb	r3, [r3, #28]
 800abaa:	061b      	lsls	r3, r3, #24
 800abac:	461c      	mov	r4, r3
 800abae:	683b      	ldr	r3, [r7, #0]
 800abb0:	3318      	adds	r3, #24
 800abb2:	4618      	mov	r0, r3
 800abb4:	f7ff fcae 	bl	800a514 <_ZNK8touchgfx9colortype10getColor32Ev>
 800abb8:	4603      	mov	r3, r0
 800abba:	4323      	orrs	r3, r4
 800abbc:	623b      	str	r3, [r7, #32]
    }

    switch (blitOp.operation)
 800abbe:	683b      	ldr	r3, [r7, #0]
 800abc0:	681b      	ldr	r3, [r3, #0]
 800abc2:	2b08      	cmp	r3, #8
 800abc4:	d103      	bne.n	800abce <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf2>
    {
    case BLIT_OP_FILL_WITH_ALPHA:
        dma2dTransferMode = DMA2D_M2M_BLEND;
 800abc6:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800abca:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800abcc:	e003      	b.n	800abd6 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xfa>
    default:
        dma2dTransferMode = DMA2D_R2M;
 800abce:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 800abd2:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800abd4:	bf00      	nop
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 800abd6:	4a40      	ldr	r2, [pc, #256]	; (800acd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800abd8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800abda:	6053      	str	r3, [r2, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800abdc:	7ffb      	ldrb	r3, [r7, #31]
 800abde:	2b10      	cmp	r3, #16
 800abe0:	d101      	bne.n	800abe6 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10a>
 800abe2:	2302      	movs	r3, #2
 800abe4:	e000      	b.n	800abe8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10c>
 800abe6:	2301      	movs	r3, #1
 800abe8:	4a3b      	ldr	r2, [pc, #236]	; (800acd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800abea:	6093      	str	r3, [r2, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800abec:	683b      	ldr	r3, [r7, #0]
 800abee:	8adb      	ldrh	r3, [r3, #22]
 800abf0:	461a      	mov	r2, r3
 800abf2:	683b      	ldr	r3, [r7, #0]
 800abf4:	8a1b      	ldrh	r3, [r3, #16]
 800abf6:	1ad3      	subs	r3, r2, r3
 800abf8:	461a      	mov	r2, r3
 800abfa:	4b37      	ldr	r3, [pc, #220]	; (800acd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800abfc:	60da      	str	r2, [r3, #12]

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800abfe:	7ffb      	ldrb	r3, [r7, #31]
 800ac00:	2b10      	cmp	r3, #16
 800ac02:	d101      	bne.n	800ac08 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x12c>
 800ac04:	2202      	movs	r2, #2
 800ac06:	e000      	b.n	800ac0a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x12e>
 800ac08:	2201      	movs	r2, #1
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);
 800ac0a:	683b      	ldr	r3, [r7, #0]
 800ac0c:	8adb      	ldrh	r3, [r3, #22]
 800ac0e:	4619      	mov	r1, r3
 800ac10:	683b      	ldr	r3, [r7, #0]
 800ac12:	8a1b      	ldrh	r3, [r3, #16]
 800ac14:	1acb      	subs	r3, r1, r3
    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800ac16:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800ac18:	482f      	ldr	r0, [pc, #188]	; (800acd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800ac1a:	f7ff fd29 	bl	800a670 <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>

    if (dma2dTransferMode == DMA2D_M2M_BLEND) {
 800ac1e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ac20:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800ac24:	d11e      	bne.n	800ac64 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x188>
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 800ac26:	4b2c      	ldr	r3, [pc, #176]	; (800acd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800ac28:	2201      	movs	r2, #1
 800ac2a:	631a      	str	r2, [r3, #48]	; 0x30
        hdma2d.LayerCfg[1].InputAlpha = color;
 800ac2c:	4a2a      	ldr	r2, [pc, #168]	; (800acd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800ac2e:	6a3b      	ldr	r3, [r7, #32]
 800ac30:	6353      	str	r3, [r2, #52]	; 0x34
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 800ac32:	4b29      	ldr	r3, [pc, #164]	; (800acd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800ac34:	2209      	movs	r2, #9
 800ac36:	62da      	str	r2, [r3, #44]	; 0x2c
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800ac38:	683b      	ldr	r3, [r7, #0]
 800ac3a:	8adb      	ldrh	r3, [r3, #22]
 800ac3c:	461a      	mov	r2, r3
 800ac3e:	683b      	ldr	r3, [r7, #0]
 800ac40:	8a1b      	ldrh	r3, [r3, #16]
 800ac42:	1ad3      	subs	r3, r2, r3
 800ac44:	461a      	mov	r2, r3
 800ac46:	4b24      	ldr	r3, [pc, #144]	; (800acd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800ac48:	619a      	str	r2, [r3, #24]
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800ac4a:	7ffb      	ldrb	r3, [r7, #31]
 800ac4c:	2b10      	cmp	r3, #16
 800ac4e:	d101      	bne.n	800ac54 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x178>
 800ac50:	2302      	movs	r3, #2
 800ac52:	e000      	b.n	800ac56 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x17a>
 800ac54:	2301      	movs	r3, #1
 800ac56:	4a20      	ldr	r2, [pc, #128]	; (800acd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800ac58:	61d3      	str	r3, [r2, #28]
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800ac5a:	2100      	movs	r1, #0
 800ac5c:	481e      	ldr	r0, [pc, #120]	; (800acd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800ac5e:	f7f8 fd89 	bl	8003774 <HAL_DMA2D_ConfigLayer>
 800ac62:	e005      	b.n	800ac70 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x194>
    } else {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 800ac64:	4a1c      	ldr	r2, [pc, #112]	; (800acd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800ac66:	69bb      	ldr	r3, [r7, #24]
 800ac68:	62d3      	str	r3, [r2, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 800ac6a:	4b1b      	ldr	r3, [pc, #108]	; (800acd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800ac6c:	2200      	movs	r2, #0
 800ac6e:	629a      	str	r2, [r3, #40]	; 0x28
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 800ac70:	2101      	movs	r1, #1
 800ac72:	4819      	ldr	r0, [pc, #100]	; (800acd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800ac74:	f7f8 fd7e 	bl	8003774 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800ac78:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ac7a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800ac7e:	d115      	bne.n	800acac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1d0>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
                                   (unsigned int)blitOp.pDst,
 800ac80:	683b      	ldr	r3, [r7, #0]
 800ac82:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800ac84:	4619      	mov	r1, r3
                                   (unsigned int)blitOp.pDst,
 800ac86:	683b      	ldr	r3, [r7, #0]
 800ac88:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800ac8a:	4618      	mov	r0, r3
                                   (unsigned int)blitOp.pDst,
 800ac8c:	683b      	ldr	r3, [r7, #0]
 800ac8e:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800ac90:	461c      	mov	r4, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800ac92:	683b      	ldr	r3, [r7, #0]
 800ac94:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800ac96:	461a      	mov	r2, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800ac98:	683b      	ldr	r3, [r7, #0]
 800ac9a:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800ac9c:	9301      	str	r3, [sp, #4]
 800ac9e:	9200      	str	r2, [sp, #0]
 800aca0:	4623      	mov	r3, r4
 800aca2:	4602      	mov	r2, r0
 800aca4:	480c      	ldr	r0, [pc, #48]	; (800acd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800aca6:	f7f8 fc98 	bl	80035da <HAL_DMA2D_BlendingStart_IT>
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 800acaa:	e00d      	b.n	800acc8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1ec>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 800acac:	683b      	ldr	r3, [r7, #0]
 800acae:	68db      	ldr	r3, [r3, #12]
 800acb0:	461a      	mov	r2, r3
                           blitOp.nSteps, blitOp.nLoops);
 800acb2:	683b      	ldr	r3, [r7, #0]
 800acb4:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 800acb6:	4619      	mov	r1, r3
                           blitOp.nSteps, blitOp.nLoops);
 800acb8:	683b      	ldr	r3, [r7, #0]
 800acba:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 800acbc:	9300      	str	r3, [sp, #0]
 800acbe:	460b      	mov	r3, r1
 800acc0:	6a39      	ldr	r1, [r7, #32]
 800acc2:	4805      	ldr	r0, [pc, #20]	; (800acd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800acc4:	f7f8 fc56 	bl	8003574 <HAL_DMA2D_Start_IT>
}
 800acc8:	bf00      	nop
 800acca:	372c      	adds	r7, #44	; 0x2c
 800accc:	46bd      	mov	sp, r7
 800acce:	bd90      	pop	{r4, r7, pc}
 800acd0:	84210843 	.word	0x84210843
 800acd4:	82082083 	.word	0x82082083
 800acd8:	20026f84 	.word	0x20026f84

0800acdc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800acdc:	b580      	push	{r7, lr}
 800acde:	b082      	sub	sp, #8
 800ace0:	af00      	add	r7, sp, #0
 800ace2:	6078      	str	r0, [r7, #4]
 800ace4:	4a05      	ldr	r2, [pc, #20]	; (800acfc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800ace6:	687b      	ldr	r3, [r7, #4]
 800ace8:	601a      	str	r2, [r3, #0]
 800acea:	687b      	ldr	r3, [r7, #4]
 800acec:	4618      	mov	r0, r3
 800acee:	f7ff fc2b 	bl	800a548 <_ZN8touchgfx9DMA_QueueD1Ev>
 800acf2:	687b      	ldr	r3, [r7, #4]
 800acf4:	4618      	mov	r0, r3
 800acf6:	3708      	adds	r7, #8
 800acf8:	46bd      	mov	sp, r7
 800acfa:	bd80      	pop	{r7, pc}
 800acfc:	0801d42c 	.word	0x0801d42c

0800ad00 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800ad00:	b580      	push	{r7, lr}
 800ad02:	b082      	sub	sp, #8
 800ad04:	af00      	add	r7, sp, #0
 800ad06:	6078      	str	r0, [r7, #4]
 800ad08:	6878      	ldr	r0, [r7, #4]
 800ad0a:	f7ff ffe7 	bl	800acdc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800ad0e:	2114      	movs	r1, #20
 800ad10:	6878      	ldr	r0, [r7, #4]
 800ad12:	f00f fe3b 	bl	801a98c <_ZdlPvj>
 800ad16:	687b      	ldr	r3, [r7, #4]
 800ad18:	4618      	mov	r0, r3
 800ad1a:	3708      	adds	r7, #8
 800ad1c:	46bd      	mov	sp, r7
 800ad1e:	bd80      	pop	{r7, pc}

0800ad20 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     *
     *        Registers an array of texts.
     *
     * @param t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800ad20:	b480      	push	{r7}
 800ad22:	b083      	sub	sp, #12
 800ad24:	af00      	add	r7, sp, #0
 800ad26:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800ad28:	4a04      	ldr	r2, [pc, #16]	; (800ad3c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800ad2a:	687b      	ldr	r3, [r7, #4]
 800ad2c:	6013      	str	r3, [r2, #0]
    }
 800ad2e:	bf00      	nop
 800ad30:	370c      	adds	r7, #12
 800ad32:	46bd      	mov	sp, r7
 800ad34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad38:	4770      	bx	lr
 800ad3a:	bf00      	nop
 800ad3c:	2002697c 	.word	0x2002697c

0800ad40 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800ad40:	b480      	push	{r7}
 800ad42:	b085      	sub	sp, #20
 800ad44:	af00      	add	r7, sp, #0
 800ad46:	60f8      	str	r0, [r7, #12]
 800ad48:	60b9      	str	r1, [r7, #8]
 800ad4a:	607a      	str	r2, [r7, #4]
 800ad4c:	603b      	str	r3, [r7, #0]
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app) : presenterStorage(pres),
        screenStorage(scr),
        transitionStorage(tra),
        frontendApplication(app)
 800ad4e:	4a0b      	ldr	r2, [pc, #44]	; (800ad7c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800ad50:	68fb      	ldr	r3, [r7, #12]
 800ad52:	601a      	str	r2, [r3, #0]
 800ad54:	68fb      	ldr	r3, [r7, #12]
 800ad56:	68ba      	ldr	r2, [r7, #8]
 800ad58:	605a      	str	r2, [r3, #4]
 800ad5a:	68fb      	ldr	r3, [r7, #12]
 800ad5c:	687a      	ldr	r2, [r7, #4]
 800ad5e:	609a      	str	r2, [r3, #8]
 800ad60:	68fb      	ldr	r3, [r7, #12]
 800ad62:	683a      	ldr	r2, [r7, #0]
 800ad64:	60da      	str	r2, [r3, #12]
 800ad66:	68fb      	ldr	r3, [r7, #12]
 800ad68:	69ba      	ldr	r2, [r7, #24]
 800ad6a:	611a      	str	r2, [r3, #16]
    {
    }
 800ad6c:	68fb      	ldr	r3, [r7, #12]
 800ad6e:	4618      	mov	r0, r3
 800ad70:	3714      	adds	r7, #20
 800ad72:	46bd      	mov	sp, r7
 800ad74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad78:	4770      	bx	lr
 800ad7a:	bf00      	nop
 800ad7c:	0801c974 	.word	0x0801c974

0800ad80 <_ZN8touchgfx7MVPHeapD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~MVPHeap()
 800ad80:	b480      	push	{r7}
 800ad82:	b083      	sub	sp, #12
 800ad84:	af00      	add	r7, sp, #0
 800ad86:	6078      	str	r0, [r7, #4]
    {
 800ad88:	4a04      	ldr	r2, [pc, #16]	; (800ad9c <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800ad8a:	687b      	ldr	r3, [r7, #4]
 800ad8c:	601a      	str	r2, [r3, #0]
    }
 800ad8e:	687b      	ldr	r3, [r7, #4]
 800ad90:	4618      	mov	r0, r3
 800ad92:	370c      	adds	r7, #12
 800ad94:	46bd      	mov	sp, r7
 800ad96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad9a:	4770      	bx	lr
 800ad9c:	0801c974 	.word	0x0801c974

0800ada0 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800ada0:	b580      	push	{r7, lr}
 800ada2:	b082      	sub	sp, #8
 800ada4:	af00      	add	r7, sp, #0
 800ada6:	6078      	str	r0, [r7, #4]
    }
 800ada8:	6878      	ldr	r0, [r7, #4]
 800adaa:	f7ff ffe9 	bl	800ad80 <_ZN8touchgfx7MVPHeapD1Ev>
 800adae:	2114      	movs	r1, #20
 800adb0:	6878      	ldr	r0, [r7, #4]
 800adb2:	f00f fdeb 	bl	801a98c <_ZdlPvj>
 800adb6:	687b      	ldr	r3, [r7, #4]
 800adb8:	4618      	mov	r0, r3
 800adba:	3708      	adds	r7, #8
 800adbc:	46bd      	mov	sp, r7
 800adbe:	bd80      	pop	{r7, pc}

0800adc0 <_ZN8touchgfx3LCDD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~LCD()
 800adc0:	b480      	push	{r7}
 800adc2:	b083      	sub	sp, #12
 800adc4:	af00      	add	r7, sp, #0
 800adc6:	6078      	str	r0, [r7, #4]
    {
 800adc8:	4a04      	ldr	r2, [pc, #16]	; (800addc <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800adca:	687b      	ldr	r3, [r7, #4]
 800adcc:	601a      	str	r2, [r3, #0]
    }
 800adce:	687b      	ldr	r3, [r7, #4]
 800add0:	4618      	mov	r0, r3
 800add2:	370c      	adds	r7, #12
 800add4:	46bd      	mov	sp, r7
 800add6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adda:	4770      	bx	lr
 800addc:	0801d674 	.word	0x0801d674

0800ade0 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800ade0:	b580      	push	{r7, lr}
 800ade2:	b082      	sub	sp, #8
 800ade4:	af00      	add	r7, sp, #0
 800ade6:	6078      	str	r0, [r7, #4]
    }
 800ade8:	6878      	ldr	r0, [r7, #4]
 800adea:	f7ff ffe9 	bl	800adc0 <_ZN8touchgfx3LCDD1Ev>
 800adee:	2108      	movs	r1, #8
 800adf0:	6878      	ldr	r0, [r7, #4]
 800adf2:	f00f fdcb 	bl	801a98c <_ZdlPvj>
 800adf6:	687b      	ldr	r3, [r7, #4]
 800adf8:	4618      	mov	r0, r3
 800adfa:	3708      	adds	r7, #8
 800adfc:	46bd      	mov	sp, r7
 800adfe:	bd80      	pop	{r7, pc}

0800ae00 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
     *
     *        Defines the state of a drag.
     */
    struct DragState
    {
        DragState() : startX(0),
 800ae00:	b480      	push	{r7}
 800ae02:	b083      	sub	sp, #12
 800ae04:	af00      	add	r7, sp, #0
 800ae06:	6078      	str	r0, [r7, #4]
            downX(0),
            downY(0),
            tickCount(0),
            velocityX(0),
            velocityY(0),
            inProgress(false)
 800ae08:	687b      	ldr	r3, [r7, #4]
 800ae0a:	2200      	movs	r2, #0
 800ae0c:	801a      	strh	r2, [r3, #0]
 800ae0e:	687b      	ldr	r3, [r7, #4]
 800ae10:	2200      	movs	r2, #0
 800ae12:	805a      	strh	r2, [r3, #2]
 800ae14:	687b      	ldr	r3, [r7, #4]
 800ae16:	2200      	movs	r2, #0
 800ae18:	809a      	strh	r2, [r3, #4]
 800ae1a:	687b      	ldr	r3, [r7, #4]
 800ae1c:	2200      	movs	r2, #0
 800ae1e:	80da      	strh	r2, [r3, #6]
 800ae20:	687b      	ldr	r3, [r7, #4]
 800ae22:	2200      	movs	r2, #0
 800ae24:	811a      	strh	r2, [r3, #8]
 800ae26:	687b      	ldr	r3, [r7, #4]
 800ae28:	2200      	movs	r2, #0
 800ae2a:	815a      	strh	r2, [r3, #10]
 800ae2c:	687b      	ldr	r3, [r7, #4]
 800ae2e:	2200      	movs	r2, #0
 800ae30:	819a      	strh	r2, [r3, #12]
 800ae32:	687b      	ldr	r3, [r7, #4]
 800ae34:	2200      	movs	r2, #0
 800ae36:	739a      	strb	r2, [r3, #14]
        {
        }
 800ae38:	687b      	ldr	r3, [r7, #4]
 800ae3a:	4618      	mov	r0, r3
 800ae3c:	370c      	adds	r7, #12
 800ae3e:	46bd      	mov	sp, r7
 800ae40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae44:	4770      	bx	lr

0800ae46 <_ZN8touchgfx8GesturesC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor. Does nothing.
     */
    Gestures() : listener(0), dragThresholdValue(0) { }
 800ae46:	b580      	push	{r7, lr}
 800ae48:	b082      	sub	sp, #8
 800ae4a:	af00      	add	r7, sp, #0
 800ae4c:	6078      	str	r0, [r7, #4]
 800ae4e:	687b      	ldr	r3, [r7, #4]
 800ae50:	4618      	mov	r0, r3
 800ae52:	f7ff ffd5 	bl	800ae00 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800ae56:	687b      	ldr	r3, [r7, #4]
 800ae58:	2200      	movs	r2, #0
 800ae5a:	611a      	str	r2, [r3, #16]
 800ae5c:	687b      	ldr	r3, [r7, #4]
 800ae5e:	2200      	movs	r2, #0
 800ae60:	829a      	strh	r2, [r3, #20]
 800ae62:	687b      	ldr	r3, [r7, #4]
 800ae64:	4618      	mov	r0, r3
 800ae66:	3708      	adds	r7, #8
 800ae68:	46bd      	mov	sp, r7
 800ae6a:	bd80      	pop	{r7, pc}

0800ae6c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height) :
 800ae6c:	b580      	push	{r7, lr}
 800ae6e:	b084      	sub	sp, #16
 800ae70:	af00      	add	r7, sp, #0
 800ae72:	60f8      	str	r0, [r7, #12]
 800ae74:	60b9      	str	r1, [r7, #8]
 800ae76:	607a      	str	r2, [r7, #4]
 800ae78:	603b      	str	r3, [r7, #0]
        displayOrientationChangeRequested(false)
 800ae7a:	4a44      	ldr	r2, [pc, #272]	; (800af8c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x120>)
 800ae7c:	68fb      	ldr	r3, [r7, #12]
 800ae7e:	601a      	str	r2, [r3, #0]
 800ae80:	68fb      	ldr	r3, [r7, #12]
 800ae82:	68ba      	ldr	r2, [r7, #8]
 800ae84:	605a      	str	r2, [r3, #4]
 800ae86:	68fb      	ldr	r3, [r7, #12]
 800ae88:	687a      	ldr	r2, [r7, #4]
 800ae8a:	609a      	str	r2, [r3, #8]
 800ae8c:	68fb      	ldr	r3, [r7, #12]
 800ae8e:	683a      	ldr	r2, [r7, #0]
 800ae90:	60da      	str	r2, [r3, #12]
 800ae92:	68fb      	ldr	r3, [r7, #12]
 800ae94:	2200      	movs	r2, #0
 800ae96:	611a      	str	r2, [r3, #16]
 800ae98:	68fb      	ldr	r3, [r7, #12]
 800ae9a:	2200      	movs	r2, #0
 800ae9c:	615a      	str	r2, [r3, #20]
 800ae9e:	68fb      	ldr	r3, [r7, #12]
 800aea0:	2200      	movs	r2, #0
 800aea2:	619a      	str	r2, [r3, #24]
 800aea4:	68fb      	ldr	r3, [r7, #12]
 800aea6:	331c      	adds	r3, #28
 800aea8:	4618      	mov	r0, r3
 800aeaa:	f7ff ffcc 	bl	800ae46 <_ZN8touchgfx8GesturesC1Ev>
 800aeae:	68fb      	ldr	r3, [r7, #12]
 800aeb0:	2200      	movs	r2, #0
 800aeb2:	639a      	str	r2, [r3, #56]	; 0x38
 800aeb4:	68fb      	ldr	r3, [r7, #12]
 800aeb6:	2200      	movs	r2, #0
 800aeb8:	63da      	str	r2, [r3, #60]	; 0x3c
 800aeba:	68fb      	ldr	r3, [r7, #12]
 800aebc:	2200      	movs	r2, #0
 800aebe:	641a      	str	r2, [r3, #64]	; 0x40
 800aec0:	68fb      	ldr	r3, [r7, #12]
 800aec2:	2200      	movs	r2, #0
 800aec4:	645a      	str	r2, [r3, #68]	; 0x44
 800aec6:	68fb      	ldr	r3, [r7, #12]
 800aec8:	2200      	movs	r2, #0
 800aeca:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800aece:	68fb      	ldr	r3, [r7, #12]
 800aed0:	2201      	movs	r2, #1
 800aed2:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
 800aed6:	68fb      	ldr	r3, [r7, #12]
 800aed8:	2201      	movs	r2, #1
 800aeda:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
 800aede:	68fb      	ldr	r3, [r7, #12]
 800aee0:	2200      	movs	r2, #0
 800aee2:	64da      	str	r2, [r3, #76]	; 0x4c
 800aee4:	68fb      	ldr	r3, [r7, #12]
 800aee6:	3350      	adds	r3, #80	; 0x50
 800aee8:	4618      	mov	r0, r3
 800aeea:	f7fe f937 	bl	800915c <_ZN8touchgfx4RectC1Ev>
 800aeee:	68fb      	ldr	r3, [r7, #12]
 800aef0:	2201      	movs	r2, #1
 800aef2:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 800aef6:	68fb      	ldr	r3, [r7, #12]
 800aef8:	2200      	movs	r2, #0
 800aefa:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 800aefe:	68fb      	ldr	r3, [r7, #12]
 800af00:	2200      	movs	r2, #0
 800af02:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 800af06:	68fb      	ldr	r3, [r7, #12]
 800af08:	2201      	movs	r2, #1
 800af0a:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
 800af0e:	68fb      	ldr	r3, [r7, #12]
 800af10:	2200      	movs	r2, #0
 800af12:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 800af16:	68fb      	ldr	r3, [r7, #12]
 800af18:	2200      	movs	r2, #0
 800af1a:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 800af1e:	68fb      	ldr	r3, [r7, #12]
 800af20:	2200      	movs	r2, #0
 800af22:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 800af26:	68fb      	ldr	r3, [r7, #12]
 800af28:	2200      	movs	r2, #0
 800af2a:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 800af2e:	68fb      	ldr	r3, [r7, #12]
 800af30:	2200      	movs	r2, #0
 800af32:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800af36:	68fb      	ldr	r3, [r7, #12]
 800af38:	2200      	movs	r2, #0
 800af3a:	671a      	str	r2, [r3, #112]	; 0x70
 800af3c:	68fb      	ldr	r3, [r7, #12]
 800af3e:	2200      	movs	r2, #0
 800af40:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
        instance = this;
 800af44:	4a12      	ldr	r2, [pc, #72]	; (800af90 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x124>)
 800af46:	68fb      	ldr	r3, [r7, #12]
 800af48:	6013      	str	r3, [r2, #0]
        DISPLAY_WIDTH = width;
 800af4a:	4a12      	ldr	r2, [pc, #72]	; (800af94 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x128>)
 800af4c:	8b3b      	ldrh	r3, [r7, #24]
 800af4e:	8013      	strh	r3, [r2, #0]
        DISPLAY_HEIGHT = height;
 800af50:	4a11      	ldr	r2, [pc, #68]	; (800af98 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x12c>)
 800af52:	8bbb      	ldrh	r3, [r7, #28]
 800af54:	8013      	strh	r3, [r2, #0]
        DISPLAY_ROTATION = rotate0;
 800af56:	4b11      	ldr	r3, [pc, #68]	; (800af9c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x130>)
 800af58:	2200      	movs	r2, #0
 800af5a:	701a      	strb	r2, [r3, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800af5c:	4b0d      	ldr	r3, [pc, #52]	; (800af94 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x128>)
 800af5e:	881a      	ldrh	r2, [r3, #0]
 800af60:	4b0f      	ldr	r3, [pc, #60]	; (800afa0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x134>)
 800af62:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800af64:	4b0c      	ldr	r3, [pc, #48]	; (800af98 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x12c>)
 800af66:	881a      	ldrh	r2, [r3, #0]
 800af68:	4b0e      	ldr	r3, [pc, #56]	; (800afa4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x138>)
 800af6a:	801a      	strh	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800af6c:	8b3a      	ldrh	r2, [r7, #24]
 800af6e:	8bbb      	ldrh	r3, [r7, #28]
 800af70:	429a      	cmp	r2, r3
 800af72:	d301      	bcc.n	800af78 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x10c>
 800af74:	2200      	movs	r2, #0
 800af76:	e000      	b.n	800af7a <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x10e>
 800af78:	2201      	movs	r2, #1
 800af7a:	68fb      	ldr	r3, [r7, #12]
 800af7c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 800af80:	68fb      	ldr	r3, [r7, #12]
 800af82:	4618      	mov	r0, r3
 800af84:	3710      	adds	r7, #16
 800af86:	46bd      	mov	sp, r7
 800af88:	bd80      	pop	{r7, pc}
 800af8a:	bf00      	nop
 800af8c:	0801cf98 	.word	0x0801cf98
 800af90:	20026900 	.word	0x20026900
 800af94:	200268f4 	.word	0x200268f4
 800af98:	200268f6 	.word	0x200268f6
 800af9c:	200268f8 	.word	0x200268f8
 800afa0:	200268fa 	.word	0x200268fa
 800afa4:	200268fc 	.word	0x200268fc

0800afa8 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800afa8:	b580      	push	{r7, lr}
 800afaa:	b082      	sub	sp, #8
 800afac:	af00      	add	r7, sp, #0
 800afae:	6078      	str	r0, [r7, #4]
 800afb0:	6039      	str	r1, [r7, #0]
    {
        app.gotoScreen1ScreenNoTransition();
 800afb2:	683b      	ldr	r3, [r7, #0]
 800afb4:	4618      	mov	r0, r3
 800afb6:	f7fd fed9 	bl	8008d6c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 800afba:	bf00      	nop
 800afbc:	3708      	adds	r7, #8
 800afbe:	46bd      	mov	sp, r7
 800afc0:	bd80      	pop	{r7, pc}
	...

0800afc4 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800afc4:	b580      	push	{r7, lr}
 800afc6:	b086      	sub	sp, #24
 800afc8:	af02      	add	r7, sp, #8
 800afca:	60f8      	str	r0, [r7, #12]
 800afcc:	60b9      	str	r1, [r7, #8]
 800afce:	607a      	str	r2, [r7, #4]
 800afd0:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800afd2:	68f8      	ldr	r0, [r7, #12]
 800afd4:	69bb      	ldr	r3, [r7, #24]
 800afd6:	9300      	str	r3, [sp, #0]
 800afd8:	683b      	ldr	r3, [r7, #0]
 800afda:	687a      	ldr	r2, [r7, #4]
 800afdc:	68b9      	ldr	r1, [r7, #8]
 800afde:	f7ff feaf 	bl	800ad40 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800afe2:	4a04      	ldr	r2, [pc, #16]	; (800aff4 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800afe4:	68fb      	ldr	r3, [r7, #12]
 800afe6:	601a      	str	r2, [r3, #0]
    {

    }
 800afe8:	68fb      	ldr	r3, [r7, #12]
 800afea:	4618      	mov	r0, r3
 800afec:	3710      	adds	r7, #16
 800afee:	46bd      	mov	sp, r7
 800aff0:	bd80      	pop	{r7, pc}
 800aff2:	bf00      	nop
 800aff4:	0801c960 	.word	0x0801c960

0800aff8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800aff8:	b580      	push	{r7, lr}
 800affa:	af00      	add	r7, sp, #0
 800affc:	4801      	ldr	r0, [pc, #4]	; (800b004 <__tcf_0+0xc>)
 800affe:	f000 f9cb 	bl	800b398 <_ZN12FrontendHeapD1Ev>
 800b002:	bd80      	pop	{r7, pc}
 800b004:	200259c4 	.word	0x200259c4

0800b008 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800b008:	b580      	push	{r7, lr}
 800b00a:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800b00c:	4b08      	ldr	r3, [pc, #32]	; (800b030 <_ZN12FrontendHeap11getInstanceEv+0x28>)
 800b00e:	681b      	ldr	r3, [r3, #0]
 800b010:	f003 0301 	and.w	r3, r3, #1
 800b014:	2b00      	cmp	r3, #0
 800b016:	d108      	bne.n	800b02a <_ZN12FrontendHeap11getInstanceEv+0x22>
 800b018:	4806      	ldr	r0, [pc, #24]	; (800b034 <_ZN12FrontendHeap11getInstanceEv+0x2c>)
 800b01a:	f000 f831 	bl	800b080 <_ZN12FrontendHeapC1Ev>
 800b01e:	4b04      	ldr	r3, [pc, #16]	; (800b030 <_ZN12FrontendHeap11getInstanceEv+0x28>)
 800b020:	2201      	movs	r2, #1
 800b022:	601a      	str	r2, [r3, #0]
 800b024:	4804      	ldr	r0, [pc, #16]	; (800b038 <_ZN12FrontendHeap11getInstanceEv+0x30>)
 800b026:	f00f fcfb 	bl	801aa20 <atexit>
        return instance;
 800b02a:	4b02      	ldr	r3, [pc, #8]	; (800b034 <_ZN12FrontendHeap11getInstanceEv+0x2c>)
    }
 800b02c:	4618      	mov	r0, r3
 800b02e:	bd80      	pop	{r7, pc}
 800b030:	20025bd4 	.word	0x20025bd4
 800b034:	200259c4 	.word	0x200259c4
 800b038:	0800aff9 	.word	0x0800aff9

0800b03c <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800b03c:	b580      	push	{r7, lr}
 800b03e:	b082      	sub	sp, #8
 800b040:	af00      	add	r7, sp, #0
 800b042:	6078      	str	r0, [r7, #4]
 800b044:	4a05      	ldr	r2, [pc, #20]	; (800b05c <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800b046:	687b      	ldr	r3, [r7, #4]
 800b048:	601a      	str	r2, [r3, #0]
 800b04a:	687b      	ldr	r3, [r7, #4]
 800b04c:	4618      	mov	r0, r3
 800b04e:	f7ff fe97 	bl	800ad80 <_ZN8touchgfx7MVPHeapD1Ev>
 800b052:	687b      	ldr	r3, [r7, #4]
 800b054:	4618      	mov	r0, r3
 800b056:	3708      	adds	r7, #8
 800b058:	46bd      	mov	sp, r7
 800b05a:	bd80      	pop	{r7, pc}
 800b05c:	0801c960 	.word	0x0801c960

0800b060 <_ZN16FrontendHeapBaseD0Ev>:
 800b060:	b580      	push	{r7, lr}
 800b062:	b082      	sub	sp, #8
 800b064:	af00      	add	r7, sp, #0
 800b066:	6078      	str	r0, [r7, #4]
 800b068:	6878      	ldr	r0, [r7, #4]
 800b06a:	f7ff ffe7 	bl	800b03c <_ZN16FrontendHeapBaseD1Ev>
 800b06e:	2114      	movs	r1, #20
 800b070:	6878      	ldr	r0, [r7, #4]
 800b072:	f00f fc8b 	bl	801a98c <_ZdlPvj>
 800b076:	687b      	ldr	r3, [r7, #4]
 800b078:	4618      	mov	r0, r3
 800b07a:	3708      	adds	r7, #8
 800b07c:	46bd      	mov	sp, r7
 800b07e:	bd80      	pop	{r7, pc}

0800b080 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800b080:	b590      	push	{r4, r7, lr}
 800b082:	b085      	sub	sp, #20
 800b084:	af02      	add	r7, sp, #8
 800b086:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800b088:	6878      	ldr	r0, [r7, #4]
 800b08a:	687b      	ldr	r3, [r7, #4]
 800b08c:	f103 0114 	add.w	r1, r3, #20
 800b090:	687b      	ldr	r3, [r7, #4]
 800b092:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 800b096:	687b      	ldr	r3, [r7, #4]
 800b098:	f103 04a8 	add.w	r4, r3, #168	; 0xa8
 800b09c:	687b      	ldr	r3, [r7, #4]
 800b09e:	33bc      	adds	r3, #188	; 0xbc
 800b0a0:	9300      	str	r3, [sp, #0]
 800b0a2:	4623      	mov	r3, r4
 800b0a4:	f7ff ff8e 	bl	800afc4 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800b0a8:	4a16      	ldr	r2, [pc, #88]	; (800b104 <_ZN12FrontendHeapC1Ev+0x84>)
 800b0aa:	687b      	ldr	r3, [r7, #4]
 800b0ac:	601a      	str	r2, [r3, #0]
 800b0ae:	687b      	ldr	r3, [r7, #4]
 800b0b0:	3314      	adds	r3, #20
 800b0b2:	4618      	mov	r0, r3
 800b0b4:	f000 f8d4 	bl	800b260 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800b0b8:	687b      	ldr	r3, [r7, #4]
 800b0ba:	332c      	adds	r3, #44	; 0x2c
 800b0bc:	4618      	mov	r0, r3
 800b0be:	f000 f903 	bl	800b2c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800b0c2:	687b      	ldr	r3, [r7, #4]
 800b0c4:	33a8      	adds	r3, #168	; 0xa8
 800b0c6:	4618      	mov	r0, r3
 800b0c8:	f000 f932 	bl	800b330 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800b0cc:	687b      	ldr	r3, [r7, #4]
 800b0ce:	f103 00bc 	add.w	r0, r3, #188	; 0xbc
 800b0d2:	687b      	ldr	r3, [r7, #4]
 800b0d4:	f503 7303 	add.w	r3, r3, #524	; 0x20c
 800b0d8:	687a      	ldr	r2, [r7, #4]
 800b0da:	4619      	mov	r1, r3
 800b0dc:	f7fe fd0a 	bl	8009af4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800b0e0:	687b      	ldr	r3, [r7, #4]
 800b0e2:	f503 7303 	add.w	r3, r3, #524	; 0x20c
 800b0e6:	4618      	mov	r0, r3
 800b0e8:	f7fe fd1a 	bl	8009b20 <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
 800b0ec:	687a      	ldr	r2, [r7, #4]
 800b0ee:	687b      	ldr	r3, [r7, #4]
 800b0f0:	33bc      	adds	r3, #188	; 0xbc
 800b0f2:	4619      	mov	r1, r3
 800b0f4:	4610      	mov	r0, r2
 800b0f6:	f7ff ff57 	bl	800afa8 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800b0fa:	687b      	ldr	r3, [r7, #4]
 800b0fc:	4618      	mov	r0, r3
 800b0fe:	370c      	adds	r7, #12
 800b100:	46bd      	mov	sp, r7
 800b102:	bd90      	pop	{r4, r7, pc}
 800b104:	0801c8b0 	.word	0x0801c8b0

0800b108 <_ZN8touchgfx8LCD16bppD1Ev>:
class LCD16bpp : public LCD
{
public:
    LCD16bpp();

    virtual ~LCD16bpp()
 800b108:	b580      	push	{r7, lr}
 800b10a:	b082      	sub	sp, #8
 800b10c:	af00      	add	r7, sp, #0
 800b10e:	6078      	str	r0, [r7, #4]
    {
 800b110:	4a05      	ldr	r2, [pc, #20]	; (800b128 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800b112:	687b      	ldr	r3, [r7, #4]
 800b114:	601a      	str	r2, [r3, #0]
 800b116:	687b      	ldr	r3, [r7, #4]
 800b118:	4618      	mov	r0, r3
 800b11a:	f7ff fe51 	bl	800adc0 <_ZN8touchgfx3LCDD1Ev>
    }
 800b11e:	687b      	ldr	r3, [r7, #4]
 800b120:	4618      	mov	r0, r3
 800b122:	3708      	adds	r7, #8
 800b124:	46bd      	mov	sp, r7
 800b126:	bd80      	pop	{r7, pc}
 800b128:	0801e910 	.word	0x0801e910

0800b12c <_ZN8touchgfx8LCD16bppD0Ev>:
    virtual ~LCD16bpp()
 800b12c:	b580      	push	{r7, lr}
 800b12e:	b082      	sub	sp, #8
 800b130:	af00      	add	r7, sp, #0
 800b132:	6078      	str	r0, [r7, #4]
    }
 800b134:	6878      	ldr	r0, [r7, #4]
 800b136:	f7ff ffe7 	bl	800b108 <_ZN8touchgfx8LCD16bppD1Ev>
 800b13a:	2178      	movs	r1, #120	; 0x78
 800b13c:	6878      	ldr	r0, [r7, #4]
 800b13e:	f00f fc25 	bl	801a98c <_ZdlPvj>
 800b142:	687b      	ldr	r3, [r7, #4]
 800b144:	4618      	mov	r0, r3
 800b146:	3708      	adds	r7, #8
 800b148:	46bd      	mov	sp, r7
 800b14a:	bd80      	pop	{r7, pc}

0800b14c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : touchgfx::HAL(dma, display, tc, width, height)
 800b14c:	b580      	push	{r7, lr}
 800b14e:	b086      	sub	sp, #24
 800b150:	af02      	add	r7, sp, #8
 800b152:	60f8      	str	r0, [r7, #12]
 800b154:	60b9      	str	r1, [r7, #8]
 800b156:	607a      	str	r2, [r7, #4]
 800b158:	603b      	str	r3, [r7, #0]
 800b15a:	68f8      	ldr	r0, [r7, #12]
 800b15c:	8bbb      	ldrh	r3, [r7, #28]
 800b15e:	9301      	str	r3, [sp, #4]
 800b160:	8b3b      	ldrh	r3, [r7, #24]
 800b162:	9300      	str	r3, [sp, #0]
 800b164:	683b      	ldr	r3, [r7, #0]
 800b166:	687a      	ldr	r2, [r7, #4]
 800b168:	68b9      	ldr	r1, [r7, #8]
 800b16a:	f7ff fe7f 	bl	800ae6c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800b16e:	4a04      	ldr	r2, [pc, #16]	; (800b180 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800b170:	68fb      	ldr	r3, [r7, #12]
 800b172:	601a      	str	r2, [r3, #0]
    }
 800b174:	68fb      	ldr	r3, [r7, #12]
 800b176:	4618      	mov	r0, r3
 800b178:	3710      	adds	r7, #16
 800b17a:	46bd      	mov	sp, r7
 800b17c:	bd80      	pop	{r7, pc}
 800b17e:	bf00      	nop
 800b180:	0801c984 	.word	0x0801c984

0800b184 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800b184:	b580      	push	{r7, lr}
 800b186:	b086      	sub	sp, #24
 800b188:	af02      	add	r7, sp, #8
 800b18a:	60f8      	str	r0, [r7, #12]
 800b18c:	60b9      	str	r1, [r7, #8]
 800b18e:	607a      	str	r2, [r7, #4]
 800b190:	603b      	str	r3, [r7, #0]
 800b192:	68f8      	ldr	r0, [r7, #12]
 800b194:	8bbb      	ldrh	r3, [r7, #28]
 800b196:	9301      	str	r3, [sp, #4]
 800b198:	8b3b      	ldrh	r3, [r7, #24]
 800b19a:	9300      	str	r3, [sp, #0]
 800b19c:	683b      	ldr	r3, [r7, #0]
 800b19e:	687a      	ldr	r2, [r7, #4]
 800b1a0:	68b9      	ldr	r1, [r7, #8]
 800b1a2:	f7ff ffd3 	bl	800b14c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800b1a6:	4a04      	ldr	r2, [pc, #16]	; (800b1b8 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800b1a8:	68fb      	ldr	r3, [r7, #12]
 800b1aa:	601a      	str	r2, [r3, #0]
    }
 800b1ac:	68fb      	ldr	r3, [r7, #12]
 800b1ae:	4618      	mov	r0, r3
 800b1b0:	3710      	adds	r7, #16
 800b1b2:	46bd      	mov	sp, r7
 800b1b4:	bd80      	pop	{r7, pc}
 800b1b6:	bf00      	nop
 800b1b8:	0801c6b0 	.word	0x0801c6b0

0800b1bc <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800b1bc:	b480      	push	{r7}
 800b1be:	b083      	sub	sp, #12
 800b1c0:	af00      	add	r7, sp, #0
 800b1c2:	6078      	str	r0, [r7, #4]
 800b1c4:	4a04      	ldr	r2, [pc, #16]	; (800b1d8 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800b1c6:	687b      	ldr	r3, [r7, #4]
 800b1c8:	601a      	str	r2, [r3, #0]
 800b1ca:	687b      	ldr	r3, [r7, #4]
 800b1cc:	4618      	mov	r0, r3
 800b1ce:	370c      	adds	r7, #12
 800b1d0:	46bd      	mov	sp, r7
 800b1d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1d6:	4770      	bx	lr
 800b1d8:	0801c698 	.word	0x0801c698

0800b1dc <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800b1dc:	b580      	push	{r7, lr}
 800b1de:	b082      	sub	sp, #8
 800b1e0:	af00      	add	r7, sp, #0
 800b1e2:	6078      	str	r0, [r7, #4]
 800b1e4:	687b      	ldr	r3, [r7, #4]
 800b1e6:	4618      	mov	r0, r3
 800b1e8:	f7ff ffe8 	bl	800b1bc <_ZN8touchgfx15TouchControllerC1Ev>
 800b1ec:	4a03      	ldr	r2, [pc, #12]	; (800b1fc <_ZN20STM32TouchControllerC1Ev+0x20>)
 800b1ee:	687b      	ldr	r3, [r7, #4]
 800b1f0:	601a      	str	r2, [r3, #0]
 800b1f2:	687b      	ldr	r3, [r7, #4]
 800b1f4:	4618      	mov	r0, r3
 800b1f6:	3708      	adds	r7, #8
 800b1f8:	46bd      	mov	sp, r7
 800b1fa:	bd80      	pop	{r7, pc}
 800b1fc:	0801c680 	.word	0x0801c680

0800b200 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800b200:	b590      	push	{r4, r7, lr}
 800b202:	b085      	sub	sp, #20
 800b204:	af02      	add	r7, sp, #8
  Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800b206:	f7fe fb81 	bl	800990c <_ZN14BitmapDatabase11getInstanceEv>
 800b20a:	4604      	mov	r4, r0
 800b20c:	f7fe fb88 	bl	8009920 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800b210:	4603      	mov	r3, r0
 800b212:	4619      	mov	r1, r3
 800b214:	2300      	movs	r3, #0
 800b216:	9300      	str	r3, [sp, #0]
 800b218:	2300      	movs	r3, #0
 800b21a:	2200      	movs	r2, #0
 800b21c:	4620      	mov	r0, r4
 800b21e:	f003 ff15 	bl	800f04c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
  TypedText::registerTexts(&texts);
 800b222:	480c      	ldr	r0, [pc, #48]	; (800b254 <touchgfx_init+0x54>)
 800b224:	f7ff fd7c 	bl	800ad20 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
  Texts::setLanguage(0);
 800b228:	2000      	movs	r0, #0
 800b22a:	f7fe fb9d 	bl	8009968 <_ZN8touchgfx5Texts11setLanguageEt>

  FontManager::setFontProvider(&fontProvider);
 800b22e:	480a      	ldr	r0, [pc, #40]	; (800b258 <touchgfx_init+0x58>)
 800b230:	f003 fe5a 	bl	800eee8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

  FrontendHeap& heap = FrontendHeap::getInstance();
 800b234:	f7ff fee8 	bl	800b008 <_ZN12FrontendHeap11getInstanceEv>
 800b238:	6078      	str	r0, [r7, #4]
  (void)heap; // we need to obtain the reference above to initialize the frontend heap.

  hal.initialize();
 800b23a:	4808      	ldr	r0, [pc, #32]	; (800b25c <touchgfx_init+0x5c>)
 800b23c:	f7ff f810 	bl	800a260 <_ZN11TouchGFXHAL10initializeEv>
  hal.enableLCDControllerInterrupt();
 800b240:	4806      	ldr	r0, [pc, #24]	; (800b25c <touchgfx_init+0x5c>)
 800b242:	f7ff f866 	bl	800a312 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>
  hal.enableInterrupts();
 800b246:	4805      	ldr	r0, [pc, #20]	; (800b25c <touchgfx_init+0x5c>)
 800b248:	f7ff f84b 	bl	800a2e2 <_ZN11TouchGFXHAL16enableInterruptsEv>
}
 800b24c:	bf00      	nop
 800b24e:	370c      	adds	r7, #12
 800b250:	46bd      	mov	sp, r7
 800b252:	bd90      	pop	{r4, r7, pc}
 800b254:	20026874 	.word	0x20026874
 800b258:	20000018 	.word	0x20000018
 800b25c:	20026878 	.word	0x20026878

0800b260 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Constructs an empty Partition.
     */
    Partition() : AbstractPartition()
 800b260:	b580      	push	{r7, lr}
 800b262:	b082      	sub	sp, #8
 800b264:	af00      	add	r7, sp, #0
 800b266:	6078      	str	r0, [r7, #4]
 800b268:	687b      	ldr	r3, [r7, #4]
 800b26a:	4618      	mov	r0, r3
 800b26c:	f000 fc6c 	bl	800bb48 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800b270:	4a03      	ldr	r2, [pc, #12]	; (800b280 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800b272:	687b      	ldr	r3, [r7, #4]
 800b274:	601a      	str	r2, [r3, #0]
    {
    }
 800b276:	687b      	ldr	r3, [r7, #4]
 800b278:	4618      	mov	r0, r3
 800b27a:	3708      	adds	r7, #8
 800b27c:	46bd      	mov	sp, r7
 800b27e:	bd80      	pop	{r7, pc}
 800b280:	0801c92c 	.word	0x0801c92c

0800b284 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
    /**
     * @fn virtual Partition::~Partition()
     *
     * @brief Destructor.
     */
    virtual ~Partition()
 800b284:	b580      	push	{r7, lr}
 800b286:	b082      	sub	sp, #8
 800b288:	af00      	add	r7, sp, #0
 800b28a:	6078      	str	r0, [r7, #4]
    {
    }
 800b28c:	4a05      	ldr	r2, [pc, #20]	; (800b2a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800b28e:	687b      	ldr	r3, [r7, #4]
 800b290:	601a      	str	r2, [r3, #0]
 800b292:	687b      	ldr	r3, [r7, #4]
 800b294:	4618      	mov	r0, r3
 800b296:	f000 fc55 	bl	800bb44 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800b29a:	687b      	ldr	r3, [r7, #4]
 800b29c:	4618      	mov	r0, r3
 800b29e:	3708      	adds	r7, #8
 800b2a0:	46bd      	mov	sp, r7
 800b2a2:	bd80      	pop	{r7, pc}
 800b2a4:	0801c92c 	.word	0x0801c92c

0800b2a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800b2a8:	b580      	push	{r7, lr}
 800b2aa:	b082      	sub	sp, #8
 800b2ac:	af00      	add	r7, sp, #0
 800b2ae:	6078      	str	r0, [r7, #4]
    }
 800b2b0:	6878      	ldr	r0, [r7, #4]
 800b2b2:	f7ff ffe7 	bl	800b284 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b2b6:	2118      	movs	r1, #24
 800b2b8:	6878      	ldr	r0, [r7, #4]
 800b2ba:	f00f fb67 	bl	801a98c <_ZdlPvj>
 800b2be:	687b      	ldr	r3, [r7, #4]
 800b2c0:	4618      	mov	r0, r3
 800b2c2:	3708      	adds	r7, #8
 800b2c4:	46bd      	mov	sp, r7
 800b2c6:	bd80      	pop	{r7, pc}

0800b2c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
    Partition() : AbstractPartition()
 800b2c8:	b580      	push	{r7, lr}
 800b2ca:	b082      	sub	sp, #8
 800b2cc:	af00      	add	r7, sp, #0
 800b2ce:	6078      	str	r0, [r7, #4]
 800b2d0:	687b      	ldr	r3, [r7, #4]
 800b2d2:	4618      	mov	r0, r3
 800b2d4:	f000 fc38 	bl	800bb48 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800b2d8:	4a03      	ldr	r2, [pc, #12]	; (800b2e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800b2da:	687b      	ldr	r3, [r7, #4]
 800b2dc:	601a      	str	r2, [r3, #0]
    }
 800b2de:	687b      	ldr	r3, [r7, #4]
 800b2e0:	4618      	mov	r0, r3
 800b2e2:	3708      	adds	r7, #8
 800b2e4:	46bd      	mov	sp, r7
 800b2e6:	bd80      	pop	{r7, pc}
 800b2e8:	0801c8f8 	.word	0x0801c8f8

0800b2ec <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
    virtual ~Partition()
 800b2ec:	b580      	push	{r7, lr}
 800b2ee:	b082      	sub	sp, #8
 800b2f0:	af00      	add	r7, sp, #0
 800b2f2:	6078      	str	r0, [r7, #4]
    }
 800b2f4:	4a05      	ldr	r2, [pc, #20]	; (800b30c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800b2f6:	687b      	ldr	r3, [r7, #4]
 800b2f8:	601a      	str	r2, [r3, #0]
 800b2fa:	687b      	ldr	r3, [r7, #4]
 800b2fc:	4618      	mov	r0, r3
 800b2fe:	f000 fc21 	bl	800bb44 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800b302:	687b      	ldr	r3, [r7, #4]
 800b304:	4618      	mov	r0, r3
 800b306:	3708      	adds	r7, #8
 800b308:	46bd      	mov	sp, r7
 800b30a:	bd80      	pop	{r7, pc}
 800b30c:	0801c8f8 	.word	0x0801c8f8

0800b310 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800b310:	b580      	push	{r7, lr}
 800b312:	b082      	sub	sp, #8
 800b314:	af00      	add	r7, sp, #0
 800b316:	6078      	str	r0, [r7, #4]
    }
 800b318:	6878      	ldr	r0, [r7, #4]
 800b31a:	f7ff ffe7 	bl	800b2ec <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b31e:	217c      	movs	r1, #124	; 0x7c
 800b320:	6878      	ldr	r0, [r7, #4]
 800b322:	f00f fb33 	bl	801a98c <_ZdlPvj>
 800b326:	687b      	ldr	r3, [r7, #4]
 800b328:	4618      	mov	r0, r3
 800b32a:	3708      	adds	r7, #8
 800b32c:	46bd      	mov	sp, r7
 800b32e:	bd80      	pop	{r7, pc}

0800b330 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
    Partition() : AbstractPartition()
 800b330:	b580      	push	{r7, lr}
 800b332:	b082      	sub	sp, #8
 800b334:	af00      	add	r7, sp, #0
 800b336:	6078      	str	r0, [r7, #4]
 800b338:	687b      	ldr	r3, [r7, #4]
 800b33a:	4618      	mov	r0, r3
 800b33c:	f000 fc04 	bl	800bb48 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800b340:	4a03      	ldr	r2, [pc, #12]	; (800b350 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800b342:	687b      	ldr	r3, [r7, #4]
 800b344:	601a      	str	r2, [r3, #0]
    }
 800b346:	687b      	ldr	r3, [r7, #4]
 800b348:	4618      	mov	r0, r3
 800b34a:	3708      	adds	r7, #8
 800b34c:	46bd      	mov	sp, r7
 800b34e:	bd80      	pop	{r7, pc}
 800b350:	0801c8c4 	.word	0x0801c8c4

0800b354 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
    virtual ~Partition()
 800b354:	b580      	push	{r7, lr}
 800b356:	b082      	sub	sp, #8
 800b358:	af00      	add	r7, sp, #0
 800b35a:	6078      	str	r0, [r7, #4]
    }
 800b35c:	4a05      	ldr	r2, [pc, #20]	; (800b374 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800b35e:	687b      	ldr	r3, [r7, #4]
 800b360:	601a      	str	r2, [r3, #0]
 800b362:	687b      	ldr	r3, [r7, #4]
 800b364:	4618      	mov	r0, r3
 800b366:	f000 fbed 	bl	800bb44 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800b36a:	687b      	ldr	r3, [r7, #4]
 800b36c:	4618      	mov	r0, r3
 800b36e:	3708      	adds	r7, #8
 800b370:	46bd      	mov	sp, r7
 800b372:	bd80      	pop	{r7, pc}
 800b374:	0801c8c4 	.word	0x0801c8c4

0800b378 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800b378:	b580      	push	{r7, lr}
 800b37a:	b082      	sub	sp, #8
 800b37c:	af00      	add	r7, sp, #0
 800b37e:	6078      	str	r0, [r7, #4]
    }
 800b380:	6878      	ldr	r0, [r7, #4]
 800b382:	f7ff ffe7 	bl	800b354 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b386:	2114      	movs	r1, #20
 800b388:	6878      	ldr	r0, [r7, #4]
 800b38a:	f00f faff 	bl	801a98c <_ZdlPvj>
 800b38e:	687b      	ldr	r3, [r7, #4]
 800b390:	4618      	mov	r0, r3
 800b392:	3708      	adds	r7, #8
 800b394:	46bd      	mov	sp, r7
 800b396:	bd80      	pop	{r7, pc}

0800b398 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800b398:	b580      	push	{r7, lr}
 800b39a:	b082      	sub	sp, #8
 800b39c:	af00      	add	r7, sp, #0
 800b39e:	6078      	str	r0, [r7, #4]
 800b3a0:	4a0f      	ldr	r2, [pc, #60]	; (800b3e0 <_ZN12FrontendHeapD1Ev+0x48>)
 800b3a2:	687b      	ldr	r3, [r7, #4]
 800b3a4:	601a      	str	r2, [r3, #0]
 800b3a6:	687b      	ldr	r3, [r7, #4]
 800b3a8:	33bc      	adds	r3, #188	; 0xbc
 800b3aa:	4618      	mov	r0, r3
 800b3ac:	f7fe fb6c 	bl	8009a88 <_ZN19FrontendApplicationD1Ev>
 800b3b0:	687b      	ldr	r3, [r7, #4]
 800b3b2:	33a8      	adds	r3, #168	; 0xa8
 800b3b4:	4618      	mov	r0, r3
 800b3b6:	f7ff ffcd 	bl	800b354 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b3ba:	687b      	ldr	r3, [r7, #4]
 800b3bc:	332c      	adds	r3, #44	; 0x2c
 800b3be:	4618      	mov	r0, r3
 800b3c0:	f7ff ff94 	bl	800b2ec <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b3c4:	687b      	ldr	r3, [r7, #4]
 800b3c6:	3314      	adds	r3, #20
 800b3c8:	4618      	mov	r0, r3
 800b3ca:	f7ff ff5b 	bl	800b284 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b3ce:	687b      	ldr	r3, [r7, #4]
 800b3d0:	4618      	mov	r0, r3
 800b3d2:	f7ff fe33 	bl	800b03c <_ZN16FrontendHeapBaseD1Ev>
 800b3d6:	687b      	ldr	r3, [r7, #4]
 800b3d8:	4618      	mov	r0, r3
 800b3da:	3708      	adds	r7, #8
 800b3dc:	46bd      	mov	sp, r7
 800b3de:	bd80      	pop	{r7, pc}
 800b3e0:	0801c8b0 	.word	0x0801c8b0

0800b3e4 <_ZN12FrontendHeapD0Ev>:
 800b3e4:	b580      	push	{r7, lr}
 800b3e6:	b082      	sub	sp, #8
 800b3e8:	af00      	add	r7, sp, #0
 800b3ea:	6078      	str	r0, [r7, #4]
 800b3ec:	6878      	ldr	r0, [r7, #4]
 800b3ee:	f7ff ffd3 	bl	800b398 <_ZN12FrontendHeapD1Ev>
 800b3f2:	f44f 7104 	mov.w	r1, #528	; 0x210
 800b3f6:	6878      	ldr	r0, [r7, #4]
 800b3f8:	f00f fac8 	bl	801a98c <_ZdlPvj>
 800b3fc:	687b      	ldr	r3, [r7, #4]
 800b3fe:	4618      	mov	r0, r3
 800b400:	3708      	adds	r7, #8
 800b402:	46bd      	mov	sp, r7
 800b404:	bd80      	pop	{r7, pc}
	...

0800b408 <_Z41__static_initialization_and_destruction_0ii>:
 /*
  * This function check if a VSYNC has occured.
  * If VSYNC has occured, signal TouchGFX to start a rendering
  */
  OSWrappers::waitForVSync();
}
 800b408:	b580      	push	{r7, lr}
 800b40a:	b084      	sub	sp, #16
 800b40c:	af02      	add	r7, sp, #8
 800b40e:	6078      	str	r0, [r7, #4]
 800b410:	6039      	str	r1, [r7, #0]
 800b412:	687b      	ldr	r3, [r7, #4]
 800b414:	2b01      	cmp	r3, #1
 800b416:	d118      	bne.n	800b44a <_Z41__static_initialization_and_destruction_0ii+0x42>
 800b418:	683b      	ldr	r3, [r7, #0]
 800b41a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b41e:	4293      	cmp	r3, r2
 800b420:	d113      	bne.n	800b44a <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 800b422:	4817      	ldr	r0, [pc, #92]	; (800b480 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800b424:	f7ff feda 	bl	800b1dc <_ZN20STM32TouchControllerC1Ev>
static STM32F4DMA dma;
 800b428:	4816      	ldr	r0, [pc, #88]	; (800b484 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800b42a:	f7ff f97b 	bl	800a724 <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 800b42e:	4816      	ldr	r0, [pc, #88]	; (800b488 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b430:	f006 fe10 	bl	8012054 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 240, 320);
 800b434:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800b438:	9301      	str	r3, [sp, #4]
 800b43a:	23f0      	movs	r3, #240	; 0xf0
 800b43c:	9300      	str	r3, [sp, #0]
 800b43e:	4b10      	ldr	r3, [pc, #64]	; (800b480 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800b440:	4a11      	ldr	r2, [pc, #68]	; (800b488 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b442:	4910      	ldr	r1, [pc, #64]	; (800b484 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800b444:	4811      	ldr	r0, [pc, #68]	; (800b48c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800b446:	f7ff fe9d 	bl	800b184 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800b44a:	687b      	ldr	r3, [r7, #4]
 800b44c:	2b00      	cmp	r3, #0
 800b44e:	d113      	bne.n	800b478 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800b450:	683b      	ldr	r3, [r7, #0]
 800b452:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b456:	4293      	cmp	r3, r2
 800b458:	d10e      	bne.n	800b478 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800b45a:	480c      	ldr	r0, [pc, #48]	; (800b48c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800b45c:	f7fe ff66 	bl	800a32c <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800b460:	480b      	ldr	r0, [pc, #44]	; (800b490 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800b462:	f7fc fef3 	bl	800824c <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800b466:	4808      	ldr	r0, [pc, #32]	; (800b488 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b468:	f7ff fe4e 	bl	800b108 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32F4DMA dma;
 800b46c:	4805      	ldr	r0, [pc, #20]	; (800b484 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800b46e:	f7ff f983 	bl	800a778 <_ZN10STM32F4DMAD1Ev>
static STM32TouchController tc;
 800b472:	4803      	ldr	r0, [pc, #12]	; (800b480 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800b474:	f7fe fcd0 	bl	8009e18 <_ZN20STM32TouchControllerD1Ev>
}
 800b478:	bf00      	nop
 800b47a:	3708      	adds	r7, #8
 800b47c:	46bd      	mov	sp, r7
 800b47e:	bd80      	pop	{r7, pc}
 800b480:	20025bd8 	.word	0x20025bd8
 800b484:	20025bdc 	.word	0x20025bdc
 800b488:	200267fc 	.word	0x200267fc
 800b48c:	20026878 	.word	0x20026878
 800b490:	20000018 	.word	0x20000018

0800b494 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
     *
     * @return An uint16_t.
     *
     * @see touchgfx::AbstractPartition::capacity()
     */
    virtual uint16_t capacity() const
 800b494:	b480      	push	{r7}
 800b496:	b083      	sub	sp, #12
 800b498:	af00      	add	r7, sp, #0
 800b49a:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800b49c:	2301      	movs	r3, #1
    }
 800b49e:	4618      	mov	r0, r3
 800b4a0:	370c      	adds	r7, #12
 800b4a2:	46bd      	mov	sp, r7
 800b4a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4a8:	4770      	bx	lr

0800b4aa <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
     *
     * @return An uint32_t.
     *
     * @see touchgfx::AbstractPartition::element_size()
     */
    virtual uint32_t element_size()
 800b4aa:	b480      	push	{r7}
 800b4ac:	b083      	sub	sp, #12
 800b4ae:	af00      	add	r7, sp, #0
 800b4b0:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800b4b2:	230c      	movs	r3, #12
    }
 800b4b4:	4618      	mov	r0, r3
 800b4b6:	370c      	adds	r7, #12
 800b4b8:	46bd      	mov	sp, r7
 800b4ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4be:	4770      	bx	lr

0800b4c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @return null if it fails, else a void*.
     *
     * @see touchgfx::AbstractPartition::element()
     */
    virtual void* element(uint16_t index)
 800b4c0:	b480      	push	{r7}
 800b4c2:	b083      	sub	sp, #12
 800b4c4:	af00      	add	r7, sp, #0
 800b4c6:	6078      	str	r0, [r7, #4]
 800b4c8:	460b      	mov	r3, r1
 800b4ca:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800b4cc:	887a      	ldrh	r2, [r7, #2]
 800b4ce:	4613      	mov	r3, r2
 800b4d0:	005b      	lsls	r3, r3, #1
 800b4d2:	4413      	add	r3, r2
 800b4d4:	009b      	lsls	r3, r3, #2
 800b4d6:	3308      	adds	r3, #8
 800b4d8:	687a      	ldr	r2, [r7, #4]
 800b4da:	4413      	add	r3, r2
    }
 800b4dc:	4618      	mov	r0, r3
 800b4de:	370c      	adds	r7, #12
 800b4e0:	46bd      	mov	sp, r7
 800b4e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4e6:	4770      	bx	lr

0800b4e8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @return null if it fails, else a void*.
     *
     * @see touchgfx::AbstractPartition::element()
     */
    virtual const void* element(uint16_t index) const
 800b4e8:	b480      	push	{r7}
 800b4ea:	b083      	sub	sp, #12
 800b4ec:	af00      	add	r7, sp, #0
 800b4ee:	6078      	str	r0, [r7, #4]
 800b4f0:	460b      	mov	r3, r1
 800b4f2:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800b4f4:	887a      	ldrh	r2, [r7, #2]
 800b4f6:	4613      	mov	r3, r2
 800b4f8:	005b      	lsls	r3, r3, #1
 800b4fa:	4413      	add	r3, r2
 800b4fc:	009b      	lsls	r3, r3, #2
 800b4fe:	3308      	adds	r3, #8
 800b500:	687a      	ldr	r2, [r7, #4]
 800b502:	4413      	add	r3, r2
    }
 800b504:	4618      	mov	r0, r3
 800b506:	370c      	adds	r7, #12
 800b508:	46bd      	mov	sp, r7
 800b50a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b50e:	4770      	bx	lr

0800b510 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800b510:	b480      	push	{r7}
 800b512:	b083      	sub	sp, #12
 800b514:	af00      	add	r7, sp, #0
 800b516:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800b518:	2301      	movs	r3, #1
    }
 800b51a:	4618      	mov	r0, r3
 800b51c:	370c      	adds	r7, #12
 800b51e:	46bd      	mov	sp, r7
 800b520:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b524:	4770      	bx	lr

0800b526 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800b526:	b480      	push	{r7}
 800b528:	b083      	sub	sp, #12
 800b52a:	af00      	add	r7, sp, #0
 800b52c:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800b52e:	2374      	movs	r3, #116	; 0x74
    }
 800b530:	4618      	mov	r0, r3
 800b532:	370c      	adds	r7, #12
 800b534:	46bd      	mov	sp, r7
 800b536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b53a:	4770      	bx	lr

0800b53c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800b53c:	b480      	push	{r7}
 800b53e:	b083      	sub	sp, #12
 800b540:	af00      	add	r7, sp, #0
 800b542:	6078      	str	r0, [r7, #4]
 800b544:	460b      	mov	r3, r1
 800b546:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b548:	887b      	ldrh	r3, [r7, #2]
 800b54a:	2274      	movs	r2, #116	; 0x74
 800b54c:	fb02 f303 	mul.w	r3, r2, r3
 800b550:	3308      	adds	r3, #8
 800b552:	687a      	ldr	r2, [r7, #4]
 800b554:	4413      	add	r3, r2
    }
 800b556:	4618      	mov	r0, r3
 800b558:	370c      	adds	r7, #12
 800b55a:	46bd      	mov	sp, r7
 800b55c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b560:	4770      	bx	lr

0800b562 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800b562:	b480      	push	{r7}
 800b564:	b083      	sub	sp, #12
 800b566:	af00      	add	r7, sp, #0
 800b568:	6078      	str	r0, [r7, #4]
 800b56a:	460b      	mov	r3, r1
 800b56c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b56e:	887b      	ldrh	r3, [r7, #2]
 800b570:	2274      	movs	r2, #116	; 0x74
 800b572:	fb02 f303 	mul.w	r3, r2, r3
 800b576:	3308      	adds	r3, #8
 800b578:	687a      	ldr	r2, [r7, #4]
 800b57a:	4413      	add	r3, r2
    }
 800b57c:	4618      	mov	r0, r3
 800b57e:	370c      	adds	r7, #12
 800b580:	46bd      	mov	sp, r7
 800b582:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b586:	4770      	bx	lr

0800b588 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800b588:	b480      	push	{r7}
 800b58a:	b083      	sub	sp, #12
 800b58c:	af00      	add	r7, sp, #0
 800b58e:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800b590:	2301      	movs	r3, #1
    }
 800b592:	4618      	mov	r0, r3
 800b594:	370c      	adds	r7, #12
 800b596:	46bd      	mov	sp, r7
 800b598:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b59c:	4770      	bx	lr

0800b59e <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800b59e:	b480      	push	{r7}
 800b5a0:	b083      	sub	sp, #12
 800b5a2:	af00      	add	r7, sp, #0
 800b5a4:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800b5a6:	2310      	movs	r3, #16
    }
 800b5a8:	4618      	mov	r0, r3
 800b5aa:	370c      	adds	r7, #12
 800b5ac:	46bd      	mov	sp, r7
 800b5ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5b2:	4770      	bx	lr

0800b5b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800b5b4:	b480      	push	{r7}
 800b5b6:	b083      	sub	sp, #12
 800b5b8:	af00      	add	r7, sp, #0
 800b5ba:	6078      	str	r0, [r7, #4]
 800b5bc:	460b      	mov	r3, r1
 800b5be:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b5c0:	887b      	ldrh	r3, [r7, #2]
 800b5c2:	011b      	lsls	r3, r3, #4
 800b5c4:	3308      	adds	r3, #8
 800b5c6:	687a      	ldr	r2, [r7, #4]
 800b5c8:	4413      	add	r3, r2
    }
 800b5ca:	4618      	mov	r0, r3
 800b5cc:	370c      	adds	r7, #12
 800b5ce:	46bd      	mov	sp, r7
 800b5d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5d4:	4770      	bx	lr

0800b5d6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800b5d6:	b480      	push	{r7}
 800b5d8:	b083      	sub	sp, #12
 800b5da:	af00      	add	r7, sp, #0
 800b5dc:	6078      	str	r0, [r7, #4]
 800b5de:	460b      	mov	r3, r1
 800b5e0:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b5e2:	887b      	ldrh	r3, [r7, #2]
 800b5e4:	011b      	lsls	r3, r3, #4
 800b5e6:	3308      	adds	r3, #8
 800b5e8:	687a      	ldr	r2, [r7, #4]
 800b5ea:	4413      	add	r3, r2
    }
 800b5ec:	4618      	mov	r0, r3
 800b5ee:	370c      	adds	r7, #12
 800b5f0:	46bd      	mov	sp, r7
 800b5f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5f6:	4770      	bx	lr

0800b5f8 <_GLOBAL__sub_I_touchgfx_init>:
 800b5f8:	b580      	push	{r7, lr}
 800b5fa:	af00      	add	r7, sp, #0
 800b5fc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b600:	2001      	movs	r0, #1
 800b602:	f7ff ff01 	bl	800b408 <_Z41__static_initialization_and_destruction_0ii>
 800b606:	bd80      	pop	{r7, pc}

0800b608 <_GLOBAL__sub_D_touchgfx_init>:
 800b608:	b580      	push	{r7, lr}
 800b60a:	af00      	add	r7, sp, #0
 800b60c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b610:	2000      	movs	r0, #0
 800b612:	f7ff fef9 	bl	800b408 <_Z41__static_initialization_and_destruction_0ii>
 800b616:	bd80      	pop	{r7, pc}

0800b618 <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
 800b618:	b580      	push	{r7, lr}
 800b61a:	b082      	sub	sp, #8
 800b61c:	af00      	add	r7, sp, #0
 800b61e:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
 800b620:	687b      	ldr	r3, [r7, #4]
 800b622:	681b      	ldr	r3, [r3, #0]
 800b624:	3318      	adds	r3, #24
 800b626:	681b      	ldr	r3, [r3, #0]
 800b628:	6878      	ldr	r0, [r7, #4]
 800b62a:	4798      	blx	r3
    }
 800b62c:	bf00      	nop
 800b62e:	3708      	adds	r7, #8
 800b630:	46bd      	mov	sp, r7
 800b632:	bd80      	pop	{r7, pc}

0800b634 <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>:
    void lockDMAToFrontPorch(bool enableLock)
 800b634:	b480      	push	{r7}
 800b636:	b083      	sub	sp, #12
 800b638:	af00      	add	r7, sp, #0
 800b63a:	6078      	str	r0, [r7, #4]
 800b63c:	460b      	mov	r3, r1
 800b63e:	70fb      	strb	r3, [r7, #3]
        lockDMAToPorch = enableLock;
 800b640:	687b      	ldr	r3, [r7, #4]
 800b642:	78fa      	ldrb	r2, [r7, #3]
 800b644:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
    }
 800b648:	bf00      	nop
 800b64a:	370c      	adds	r7, #12
 800b64c:	46bd      	mov	sp, r7
 800b64e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b652:	4770      	bx	lr

0800b654 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800b654:	b480      	push	{r7}
 800b656:	b083      	sub	sp, #12
 800b658:	af00      	add	r7, sp, #0
 800b65a:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800b65c:	687b      	ldr	r3, [r7, #4]
 800b65e:	f893 3066 	ldrb.w	r3, [r3, #102]	; 0x66
 800b662:	3301      	adds	r3, #1
 800b664:	b2da      	uxtb	r2, r3
 800b666:	687b      	ldr	r3, [r7, #4]
 800b668:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
    }
 800b66c:	bf00      	nop
 800b66e:	370c      	adds	r7, #12
 800b670:	46bd      	mov	sp, r7
 800b672:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b676:	4770      	bx	lr

0800b678 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800b678:	b580      	push	{r7, lr}
 800b67a:	b082      	sub	sp, #8
 800b67c:	af00      	add	r7, sp, #0
 800b67e:	6078      	str	r0, [r7, #4]
 800b680:	460b      	mov	r3, r1
 800b682:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800b684:	78fb      	ldrb	r3, [r7, #3]
 800b686:	2b00      	cmp	r3, #0
 800b688:	d002      	beq.n	800b690 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800b68a:	78fb      	ldrb	r3, [r7, #3]
 800b68c:	2b02      	cmp	r3, #2
 800b68e:	d105      	bne.n	800b69c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800b690:	687b      	ldr	r3, [r7, #4]
 800b692:	78fa      	ldrb	r2, [r7, #3]
 800b694:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 800b698:	2301      	movs	r3, #1
 800b69a:	e027      	b.n	800b6ec <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        else if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800b69c:	78fb      	ldrb	r3, [r7, #3]
 800b69e:	2b01      	cmp	r3, #1
 800b6a0:	d123      	bne.n	800b6ea <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800b6a2:	687b      	ldr	r3, [r7, #4]
 800b6a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b6a6:	2b00      	cmp	r3, #0
 800b6a8:	d014      	beq.n	800b6d4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800b6aa:	687b      	ldr	r3, [r7, #4]
 800b6ac:	681b      	ldr	r3, [r3, #0]
 800b6ae:	3380      	adds	r3, #128	; 0x80
 800b6b0:	681b      	ldr	r3, [r3, #0]
 800b6b2:	6878      	ldr	r0, [r7, #4]
 800b6b4:	4798      	blx	r3
 800b6b6:	4603      	mov	r3, r0
 800b6b8:	461a      	mov	r2, r3
 800b6ba:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b6be:	429a      	cmp	r2, r3
 800b6c0:	d008      	beq.n	800b6d4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800b6c2:	4b0c      	ldr	r3, [pc, #48]	; (800b6f4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800b6c4:	781b      	ldrb	r3, [r3, #0]
 800b6c6:	f083 0301 	eor.w	r3, r3, #1
 800b6ca:	b2db      	uxtb	r3, r3
 800b6cc:	2b00      	cmp	r3, #0
 800b6ce:	d001      	beq.n	800b6d4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800b6d0:	2301      	movs	r3, #1
 800b6d2:	e000      	b.n	800b6d6 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800b6d4:	2300      	movs	r3, #0
 800b6d6:	2b00      	cmp	r3, #0
 800b6d8:	d005      	beq.n	800b6e6 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800b6da:	687b      	ldr	r3, [r7, #4]
 800b6dc:	78fa      	ldrb	r2, [r7, #3]
 800b6de:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 800b6e2:	2301      	movs	r3, #1
 800b6e4:	e002      	b.n	800b6ec <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 800b6e6:	2300      	movs	r3, #0
 800b6e8:	e000      	b.n	800b6ec <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 800b6ea:	2300      	movs	r3, #0
    }
 800b6ec:	4618      	mov	r0, r3
 800b6ee:	3708      	adds	r7, #8
 800b6f0:	46bd      	mov	sp, r7
 800b6f2:	bd80      	pop	{r7, pc}
 800b6f4:	200268fe 	.word	0x200268fe

0800b6f8 <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>:
    void registerTaskDelayFunction(void(*delayF)(uint16_t))
 800b6f8:	b480      	push	{r7}
 800b6fa:	b083      	sub	sp, #12
 800b6fc:	af00      	add	r7, sp, #0
 800b6fe:	6078      	str	r0, [r7, #4]
 800b700:	6039      	str	r1, [r7, #0]
        taskDelayFunc = delayF;
 800b702:	687b      	ldr	r3, [r7, #4]
 800b704:	683a      	ldr	r2, [r7, #0]
 800b706:	639a      	str	r2, [r3, #56]	; 0x38
    }
 800b708:	bf00      	nop
 800b70a:	370c      	adds	r7, #12
 800b70c:	46bd      	mov	sp, r7
 800b70e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b712:	4770      	bx	lr

0800b714 <__NVIC_EnableIRQ>:
{
 800b714:	b480      	push	{r7}
 800b716:	b083      	sub	sp, #12
 800b718:	af00      	add	r7, sp, #0
 800b71a:	4603      	mov	r3, r0
 800b71c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800b71e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800b722:	2b00      	cmp	r3, #0
 800b724:	db0d      	blt.n	800b742 <__NVIC_EnableIRQ+0x2e>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800b726:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800b72a:	b2db      	uxtb	r3, r3
 800b72c:	f003 021f 	and.w	r2, r3, #31
 800b730:	4907      	ldr	r1, [pc, #28]	; (800b750 <__NVIC_EnableIRQ+0x3c>)
 800b732:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800b736:	095b      	lsrs	r3, r3, #5
 800b738:	2001      	movs	r0, #1
 800b73a:	fa00 f202 	lsl.w	r2, r0, r2
 800b73e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800b742:	bf00      	nop
 800b744:	370c      	adds	r7, #12
 800b746:	46bd      	mov	sp, r7
 800b748:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b74c:	4770      	bx	lr
 800b74e:	bf00      	nop
 800b750:	e000e100 	.word	0xe000e100

0800b754 <__NVIC_DisableIRQ>:
{
 800b754:	b480      	push	{r7}
 800b756:	b083      	sub	sp, #12
 800b758:	af00      	add	r7, sp, #0
 800b75a:	4603      	mov	r3, r0
 800b75c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800b75e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800b762:	2b00      	cmp	r3, #0
 800b764:	db12      	blt.n	800b78c <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800b766:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800b76a:	b2db      	uxtb	r3, r3
 800b76c:	f003 021f 	and.w	r2, r3, #31
 800b770:	4909      	ldr	r1, [pc, #36]	; (800b798 <__NVIC_DisableIRQ+0x44>)
 800b772:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800b776:	095b      	lsrs	r3, r3, #5
 800b778:	2001      	movs	r0, #1
 800b77a:	fa00 f202 	lsl.w	r2, r0, r2
 800b77e:	3320      	adds	r3, #32
 800b780:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800b784:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800b788:	f3bf 8f6f 	isb	sy
}
 800b78c:	bf00      	nop
 800b78e:	370c      	adds	r7, #12
 800b790:	46bd      	mov	sp, r7
 800b792:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b796:	4770      	bx	lr
 800b798:	e000e100 	.word	0xe000e100

0800b79c <__NVIC_SetPriority>:
{
 800b79c:	b480      	push	{r7}
 800b79e:	b083      	sub	sp, #12
 800b7a0:	af00      	add	r7, sp, #0
 800b7a2:	4603      	mov	r3, r0
 800b7a4:	6039      	str	r1, [r7, #0]
 800b7a6:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800b7a8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800b7ac:	2b00      	cmp	r3, #0
 800b7ae:	db0c      	blt.n	800b7ca <__NVIC_SetPriority+0x2e>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b7b0:	683b      	ldr	r3, [r7, #0]
 800b7b2:	b2db      	uxtb	r3, r3
 800b7b4:	4a0e      	ldr	r2, [pc, #56]	; (800b7f0 <__NVIC_SetPriority+0x54>)
 800b7b6:	f997 1007 	ldrsb.w	r1, [r7, #7]
 800b7ba:	4608      	mov	r0, r1
 800b7bc:	011b      	lsls	r3, r3, #4
 800b7be:	b2d9      	uxtb	r1, r3
 800b7c0:	1813      	adds	r3, r2, r0
 800b7c2:	460a      	mov	r2, r1
 800b7c4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 800b7c8:	e00c      	b.n	800b7e4 <__NVIC_SetPriority+0x48>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b7ca:	683b      	ldr	r3, [r7, #0]
 800b7cc:	b2da      	uxtb	r2, r3
 800b7ce:	4909      	ldr	r1, [pc, #36]	; (800b7f4 <__NVIC_SetPriority+0x58>)
 800b7d0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800b7d4:	b2db      	uxtb	r3, r3
 800b7d6:	f003 030f 	and.w	r3, r3, #15
 800b7da:	3b04      	subs	r3, #4
 800b7dc:	0112      	lsls	r2, r2, #4
 800b7de:	b2d2      	uxtb	r2, r2
 800b7e0:	440b      	add	r3, r1
 800b7e2:	761a      	strb	r2, [r3, #24]
}
 800b7e4:	bf00      	nop
 800b7e6:	370c      	adds	r7, #12
 800b7e8:	46bd      	mov	sp, r7
 800b7ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7ee:	4770      	bx	lr
 800b7f0:	e000e100 	.word	0xe000e100
 800b7f4:	e000ed00 	.word	0xe000ed00

0800b7f8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
    static uint16_t lcd_int_active_line;
    static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
 800b7f8:	b5b0      	push	{r4, r5, r7, lr}
 800b7fa:	b082      	sub	sp, #8
 800b7fc:	af00      	add	r7, sp, #0
 800b7fe:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800b800:	687b      	ldr	r3, [r7, #4]
 800b802:	4618      	mov	r0, r3
 800b804:	f000 fe78 	bl	800c4f8 <_ZN8touchgfx3HAL10initializeEv>

    registerEventListener(*(touchgfx::Application::getInstance()));
 800b808:	687d      	ldr	r5, [r7, #4]
 800b80a:	687b      	ldr	r3, [r7, #4]
 800b80c:	681b      	ldr	r3, [r3, #0]
 800b80e:	334c      	adds	r3, #76	; 0x4c
 800b810:	681c      	ldr	r4, [r3, #0]
 800b812:	f001 fea3 	bl	800d55c <_ZN8touchgfx11Application11getInstanceEv>
 800b816:	4603      	mov	r3, r0
 800b818:	4619      	mov	r1, r3
 800b81a:	4628      	mov	r0, r5
 800b81c:	47a0      	blx	r4
    registerTaskDelayFunction(&OSWrappers::taskDelay);
 800b81e:	687b      	ldr	r3, [r7, #4]
 800b820:	490d      	ldr	r1, [pc, #52]	; (800b858 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x60>)
 800b822:	4618      	mov	r0, r3
 800b824:	f7ff ff68 	bl	800b6f8 <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL);
 800b828:	687b      	ldr	r3, [r7, #4]
 800b82a:	2101      	movs	r1, #1
 800b82c:	4618      	mov	r0, r3
 800b82e:	f7ff ff23 	bl	800b678 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>

    setFrameBufferStartAddresses((void*)frameBuf, (void*)0, (void*)0);
 800b832:	6878      	ldr	r0, [r7, #4]
 800b834:	687b      	ldr	r3, [r7, #4]
 800b836:	681b      	ldr	r3, [r3, #0]
 800b838:	3374      	adds	r3, #116	; 0x74
 800b83a:	681c      	ldr	r4, [r3, #0]
 800b83c:	2300      	movs	r3, #0
 800b83e:	2200      	movs	r2, #0
 800b840:	4906      	ldr	r1, [pc, #24]	; (800b85c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x64>)
 800b842:	47a0      	blx	r4
     * Set whether the DMA transfers are locked to the TFT update cycle. If
     * locked, DMA transfer will not begin until the TFT controller has finished
     * updating the display. If not locked, DMA transfers will begin as soon as
     * possible. Default is true (DMA is locked with TFT).
     */
    lockDMAToFrontPorch(true);
 800b844:	687b      	ldr	r3, [r7, #4]
 800b846:	2101      	movs	r1, #1
 800b848:	4618      	mov	r0, r3
 800b84a:	f7ff fef3 	bl	800b634 <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>
}
 800b84e:	bf00      	nop
 800b850:	3708      	adds	r7, #8
 800b852:	46bd      	mov	sp, r7
 800b854:	bdb0      	pop	{r4, r5, r7, pc}
 800b856:	bf00      	nop
 800b858:	0800a455 	.word	0x0800a455
 800b85c:	200000f8 	.word	0x200000f8

0800b860 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800b860:	b580      	push	{r7, lr}
 800b862:	b082      	sub	sp, #8
 800b864:	af00      	add	r7, sp, #0
 800b866:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(DMA2D_IRQn, 9);
 800b868:	2109      	movs	r1, #9
 800b86a:	205a      	movs	r0, #90	; 0x5a
 800b86c:	f7ff ff96 	bl	800b79c <__NVIC_SetPriority>
    NVIC_SetPriority(LTDC_IRQn, 9);
 800b870:	2109      	movs	r1, #9
 800b872:	2058      	movs	r0, #88	; 0x58
 800b874:	f7ff ff92 	bl	800b79c <__NVIC_SetPriority>
}
 800b878:	bf00      	nop
 800b87a:	3708      	adds	r7, #8
 800b87c:	46bd      	mov	sp, r7
 800b87e:	bd80      	pop	{r7, pc}

0800b880 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800b880:	b580      	push	{r7, lr}
 800b882:	b082      	sub	sp, #8
 800b884:	af00      	add	r7, sp, #0
 800b886:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(DMA2D_IRQn);
 800b888:	205a      	movs	r0, #90	; 0x5a
 800b88a:	f7ff ff43 	bl	800b714 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(LTDC_IRQn);
 800b88e:	2058      	movs	r0, #88	; 0x58
 800b890:	f7ff ff40 	bl	800b714 <__NVIC_EnableIRQ>
}
 800b894:	bf00      	nop
 800b896:	3708      	adds	r7, #8
 800b898:	46bd      	mov	sp, r7
 800b89a:	bd80      	pop	{r7, pc}

0800b89c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800b89c:	b580      	push	{r7, lr}
 800b89e:	b082      	sub	sp, #8
 800b8a0:	af00      	add	r7, sp, #0
 800b8a2:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(DMA2D_IRQn);
 800b8a4:	205a      	movs	r0, #90	; 0x5a
 800b8a6:	f7ff ff55 	bl	800b754 <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(LTDC_IRQn);
 800b8aa:	2058      	movs	r0, #88	; 0x58
 800b8ac:	f7ff ff52 	bl	800b754 <__NVIC_DisableIRQ>
}
 800b8b0:	bf00      	nop
 800b8b2:	3708      	adds	r7, #8
 800b8b4:	46bd      	mov	sp, r7
 800b8b6:	bd80      	pop	{r7, pc}

0800b8b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800b8b8:	b480      	push	{r7}
 800b8ba:	b083      	sub	sp, #12
 800b8bc:	af00      	add	r7, sp, #0
 800b8be:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800b8c0:	4b11      	ldr	r3, [pc, #68]	; (800b908 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800b8c2:	68db      	ldr	r3, [r3, #12]
 800b8c4:	b29b      	uxth	r3, r3
 800b8c6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800b8ca:	b29b      	uxth	r3, r3
 800b8cc:	3b01      	subs	r3, #1
 800b8ce:	b29a      	uxth	r2, r3
 800b8d0:	4b0e      	ldr	r3, [pc, #56]	; (800b90c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800b8d2:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800b8d4:	4b0c      	ldr	r3, [pc, #48]	; (800b908 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800b8d6:	691b      	ldr	r3, [r3, #16]
 800b8d8:	b29b      	uxth	r3, r3
 800b8da:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800b8de:	b29b      	uxth	r3, r3
 800b8e0:	3b01      	subs	r3, #1
 800b8e2:	b29a      	uxth	r2, r3
 800b8e4:	4b0a      	ldr	r3, [pc, #40]	; (800b910 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
 800b8e6:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800b8e8:	4b08      	ldr	r3, [pc, #32]	; (800b90c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800b8ea:	881a      	ldrh	r2, [r3, #0]
 800b8ec:	4b06      	ldr	r3, [pc, #24]	; (800b908 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800b8ee:	641a      	str	r2, [r3, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800b8f0:	4b05      	ldr	r3, [pc, #20]	; (800b908 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800b8f2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b8f4:	4a04      	ldr	r2, [pc, #16]	; (800b908 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800b8f6:	f043 0301 	orr.w	r3, r3, #1
 800b8fa:	6353      	str	r3, [r2, #52]	; 0x34
}
 800b8fc:	bf00      	nop
 800b8fe:	370c      	adds	r7, #12
 800b900:	46bd      	mov	sp, r7
 800b902:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b906:	4770      	bx	lr
 800b908:	40016800 	.word	0x40016800
 800b90c:	200268f0 	.word	0x200268f0
 800b910:	200268f2 	.word	0x200268f2

0800b914 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800b914:	b480      	push	{r7}
 800b916:	b083      	sub	sp, #12
 800b918:	af00      	add	r7, sp, #0
 800b91a:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800b91c:	4b03      	ldr	r3, [pc, #12]	; (800b92c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
 800b91e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 800b920:	4618      	mov	r0, r3
 800b922:	370c      	adds	r7, #12
 800b924:	46bd      	mov	sp, r7
 800b926:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b92a:	4770      	bx	lr
 800b92c:	40016884 	.word	0x40016884

0800b930 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800b930:	b480      	push	{r7}
 800b932:	b083      	sub	sp, #12
 800b934:	af00      	add	r7, sp, #0
 800b936:	6078      	str	r0, [r7, #4]
 800b938:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800b93a:	4a06      	ldr	r2, [pc, #24]	; (800b954 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
 800b93c:	683b      	ldr	r3, [r7, #0]
 800b93e:	6293      	str	r3, [r2, #40]	; 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800b940:	4b05      	ldr	r3, [pc, #20]	; (800b958 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
 800b942:	2201      	movs	r2, #1
 800b944:	625a      	str	r2, [r3, #36]	; 0x24
}
 800b946:	bf00      	nop
 800b948:	370c      	adds	r7, #12
 800b94a:	46bd      	mov	sp, r7
 800b94c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b950:	4770      	bx	lr
 800b952:	bf00      	nop
 800b954:	40016884 	.word	0x40016884
 800b958:	40016800 	.word	0x40016800

0800b95c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800b95c:	b580      	push	{r7, lr}
 800b95e:	b082      	sub	sp, #8
 800b960:	af00      	add	r7, sp, #0
 800b962:	6078      	str	r0, [r7, #4]
 800b964:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800b966:	687b      	ldr	r3, [r7, #4]
 800b968:	6839      	ldr	r1, [r7, #0]
 800b96a:	4618      	mov	r0, r3
 800b96c:	f000 fad4 	bl	800bf18 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 800b970:	bf00      	nop
 800b972:	3708      	adds	r7, #8
 800b974:	46bd      	mov	sp, r7
 800b976:	bd80      	pop	{r7, pc}

0800b978 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv>:

uint16_t TouchGFXGeneratedHAL::getTFTCurrentLine()
{
 800b978:	b480      	push	{r7}
 800b97a:	b085      	sub	sp, #20
 800b97c:	af00      	add	r7, sp, #0
 800b97e:	6078      	str	r0, [r7, #4]
    // This function only requires an implementation if single buffering
    // on LTDC display is being used (REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL).

    // The CPSR register (bits 15:0) specify current line of TFT controller.
    uint16_t curr = (uint16_t)(LTDC->CPSR & 0xffff);
 800b980:	4b0d      	ldr	r3, [pc, #52]	; (800b9b8 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800b982:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b984:	81fb      	strh	r3, [r7, #14]
    uint16_t backPorchY = (uint16_t)(LTDC->BPCR & 0x7FF) + 1;
 800b986:	4b0c      	ldr	r3, [pc, #48]	; (800b9b8 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800b988:	68db      	ldr	r3, [r3, #12]
 800b98a:	b29b      	uxth	r3, r3
 800b98c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800b990:	b29b      	uxth	r3, r3
 800b992:	3301      	adds	r3, #1
 800b994:	81bb      	strh	r3, [r7, #12]

    // The semantics of the getTFTCurrentLine() function is to return a value
    // in the range of 0-totalheight. If we are still in back porch area, return 0.
    if (curr < backPorchY)
 800b996:	89fa      	ldrh	r2, [r7, #14]
 800b998:	89bb      	ldrh	r3, [r7, #12]
 800b99a:	429a      	cmp	r2, r3
 800b99c:	d201      	bcs.n	800b9a2 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x2a>
    {
        return 0;
 800b99e:	2300      	movs	r3, #0
 800b9a0:	e003      	b.n	800b9aa <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x32>
    }
    else
    {
        return curr - backPorchY;
 800b9a2:	89fa      	ldrh	r2, [r7, #14]
 800b9a4:	89bb      	ldrh	r3, [r7, #12]
 800b9a6:	1ad3      	subs	r3, r2, r3
 800b9a8:	b29b      	uxth	r3, r3
    }
}
 800b9aa:	4618      	mov	r0, r3
 800b9ac:	3714      	adds	r7, #20
 800b9ae:	46bd      	mov	sp, r7
 800b9b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9b4:	4770      	bx	lr
 800b9b6:	bf00      	nop
 800b9b8:	40016800 	.word	0x40016800

0800b9bc <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef *hltdc)
    {
 800b9bc:	b580      	push	{r7, lr}
 800b9be:	b082      	sub	sp, #8
 800b9c0:	af00      	add	r7, sp, #0
 800b9c2:	6078      	str	r0, [r7, #4]
        if (LTDC->LIPCR == lcd_int_active_line)
 800b9c4:	4b1a      	ldr	r3, [pc, #104]	; (800ba30 <HAL_LTDC_LineEventCallback+0x74>)
 800b9c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b9c8:	4a1a      	ldr	r2, [pc, #104]	; (800ba34 <HAL_LTDC_LineEventCallback+0x78>)
 800b9ca:	8812      	ldrh	r2, [r2, #0]
 800b9cc:	4293      	cmp	r3, r2
 800b9ce:	bf0c      	ite	eq
 800b9d0:	2301      	moveq	r3, #1
 800b9d2:	2300      	movne	r3, #0
 800b9d4:	b2db      	uxtb	r3, r3
 800b9d6:	2b00      	cmp	r3, #0
 800b9d8:	d017      	beq.n	800ba0a <HAL_LTDC_LineEventCallback+0x4e>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800b9da:	4b17      	ldr	r3, [pc, #92]	; (800ba38 <HAL_LTDC_LineEventCallback+0x7c>)
 800b9dc:	881b      	ldrh	r3, [r3, #0]
 800b9de:	4619      	mov	r1, r3
 800b9e0:	6878      	ldr	r0, [r7, #4]
 800b9e2:	f7f9 fcbb 	bl	800535c <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
 800b9e6:	f7fc ff93 	bl	8008910 <_ZN8touchgfx3HAL11getInstanceEv>
 800b9ea:	4603      	mov	r3, r0
 800b9ec:	4618      	mov	r0, r3
 800b9ee:	f7ff fe31 	bl	800b654 <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
 800b9f2:	f7fe fd09 	bl	800a408 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800b9f6:	f7fc ff8b 	bl	8008910 <_ZN8touchgfx3HAL11getInstanceEv>
 800b9fa:	4603      	mov	r3, r0
 800b9fc:	4618      	mov	r0, r3
 800b9fe:	f001 f803 	bl	800ca08 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 800ba02:	2000      	movs	r0, #0
 800ba04:	f7fe fa2a 	bl	8009e5c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 800ba08:	e00e      	b.n	800ba28 <HAL_LTDC_LineEventCallback+0x6c>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800ba0a:	4b0a      	ldr	r3, [pc, #40]	; (800ba34 <HAL_LTDC_LineEventCallback+0x78>)
 800ba0c:	881b      	ldrh	r3, [r3, #0]
 800ba0e:	4619      	mov	r1, r3
 800ba10:	6878      	ldr	r0, [r7, #4]
 800ba12:	f7f9 fca3 	bl	800535c <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 800ba16:	2000      	movs	r0, #0
 800ba18:	f7fe fa2b 	bl	8009e72 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL::getInstance()->frontPorchEntered();
 800ba1c:	f7fc ff78 	bl	8008910 <_ZN8touchgfx3HAL11getInstanceEv>
 800ba20:	4603      	mov	r3, r0
 800ba22:	4618      	mov	r0, r3
 800ba24:	f7ff fdf8 	bl	800b618 <_ZN8touchgfx3HAL17frontPorchEnteredEv>
    }
 800ba28:	bf00      	nop
 800ba2a:	3708      	adds	r7, #8
 800ba2c:	46bd      	mov	sp, r7
 800ba2e:	bd80      	pop	{r7, pc}
 800ba30:	40016800 	.word	0x40016800
 800ba34:	200268f0 	.word	0x200268f0
 800ba38:	200268f2 	.word	0x200268f2

0800ba3c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800ba3c:	8880      	ldrh	r0, [r0, #4]
 800ba3e:	4770      	bx	lr

0800ba40 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800ba40:	2300      	movs	r3, #0
 800ba42:	8083      	strh	r3, [r0, #4]
 800ba44:	4770      	bx	lr
	...

0800ba48 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800ba48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ba4a:	6803      	ldr	r3, [r0, #0]
 800ba4c:	4605      	mov	r5, r0
 800ba4e:	460e      	mov	r6, r1
 800ba50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ba52:	2100      	movs	r1, #0
 800ba54:	4798      	blx	r3
 800ba56:	682b      	ldr	r3, [r5, #0]
 800ba58:	4604      	mov	r4, r0
 800ba5a:	6a1b      	ldr	r3, [r3, #32]
 800ba5c:	4628      	mov	r0, r5
 800ba5e:	4798      	blx	r3
 800ba60:	88ab      	ldrh	r3, [r5, #4]
 800ba62:	1b34      	subs	r4, r6, r4
 800ba64:	b2a4      	uxth	r4, r4
 800ba66:	fbb4 f4f0 	udiv	r4, r4, r0
 800ba6a:	42a3      	cmp	r3, r4
 800ba6c:	d805      	bhi.n	800ba7a <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800ba6e:	4b0e      	ldr	r3, [pc, #56]	; (800baa8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800ba70:	4a0e      	ldr	r2, [pc, #56]	; (800baac <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800ba72:	211e      	movs	r1, #30
 800ba74:	480e      	ldr	r0, [pc, #56]	; (800bab0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800ba76:	f00e ffb5 	bl	801a9e4 <__assert_func>
 800ba7a:	682b      	ldr	r3, [r5, #0]
 800ba7c:	2100      	movs	r1, #0
 800ba7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ba80:	4628      	mov	r0, r5
 800ba82:	4798      	blx	r3
 800ba84:	682b      	ldr	r3, [r5, #0]
 800ba86:	4607      	mov	r7, r0
 800ba88:	6a1b      	ldr	r3, [r3, #32]
 800ba8a:	4628      	mov	r0, r5
 800ba8c:	4798      	blx	r3
 800ba8e:	1bf3      	subs	r3, r6, r7
 800ba90:	b29b      	uxth	r3, r3
 800ba92:	fbb3 f2f0 	udiv	r2, r3, r0
 800ba96:	fb02 3010 	mls	r0, r2, r0, r3
 800ba9a:	b118      	cbz	r0, 800baa4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800ba9c:	4b05      	ldr	r3, [pc, #20]	; (800bab4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800ba9e:	4a03      	ldr	r2, [pc, #12]	; (800baac <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800baa0:	211f      	movs	r1, #31
 800baa2:	e7e7      	b.n	800ba74 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800baa4:	4620      	mov	r0, r4
 800baa6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800baa8:	0801ca30 	.word	0x0801ca30
 800baac:	0801cb9e 	.word	0x0801cb9e
 800bab0:	0801ca45 	.word	0x0801ca45
 800bab4:	0801ca73 	.word	0x0801ca73

0800bab8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800bab8:	b538      	push	{r3, r4, r5, lr}
 800baba:	6803      	ldr	r3, [r0, #0]
 800babc:	6a1b      	ldr	r3, [r3, #32]
 800babe:	460d      	mov	r5, r1
 800bac0:	4604      	mov	r4, r0
 800bac2:	4798      	blx	r3
 800bac4:	4285      	cmp	r5, r0
 800bac6:	d905      	bls.n	800bad4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800bac8:	4b0c      	ldr	r3, [pc, #48]	; (800bafc <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800baca:	4a0d      	ldr	r2, [pc, #52]	; (800bb00 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800bacc:	212f      	movs	r1, #47	; 0x2f
 800bace:	480d      	ldr	r0, [pc, #52]	; (800bb04 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800bad0:	f00e ff88 	bl	801a9e4 <__assert_func>
 800bad4:	6823      	ldr	r3, [r4, #0]
 800bad6:	88a5      	ldrh	r5, [r4, #4]
 800bad8:	69db      	ldr	r3, [r3, #28]
 800bada:	4620      	mov	r0, r4
 800badc:	4798      	blx	r3
 800bade:	4285      	cmp	r5, r0
 800bae0:	d303      	bcc.n	800baea <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800bae2:	4b09      	ldr	r3, [pc, #36]	; (800bb08 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800bae4:	4a06      	ldr	r2, [pc, #24]	; (800bb00 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800bae6:	2130      	movs	r1, #48	; 0x30
 800bae8:	e7f1      	b.n	800bace <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800baea:	6823      	ldr	r3, [r4, #0]
 800baec:	88a1      	ldrh	r1, [r4, #4]
 800baee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800baf0:	4620      	mov	r0, r4
 800baf2:	4798      	blx	r3
 800baf4:	88a3      	ldrh	r3, [r4, #4]
 800baf6:	3301      	adds	r3, #1
 800baf8:	80a3      	strh	r3, [r4, #4]
 800bafa:	bd38      	pop	{r3, r4, r5, pc}
 800bafc:	0801caed 	.word	0x0801caed
 800bb00:	0801cbe1 	.word	0x0801cbe1
 800bb04:	0801ca45 	.word	0x0801ca45
 800bb08:	0801cb04 	.word	0x0801cb04

0800bb0c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800bb0c:	b570      	push	{r4, r5, r6, lr}
 800bb0e:	6803      	ldr	r3, [r0, #0]
 800bb10:	6a1b      	ldr	r3, [r3, #32]
 800bb12:	4616      	mov	r6, r2
 800bb14:	4604      	mov	r4, r0
 800bb16:	460d      	mov	r5, r1
 800bb18:	4798      	blx	r3
 800bb1a:	4286      	cmp	r6, r0
 800bb1c:	d905      	bls.n	800bb2a <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800bb1e:	4b06      	ldr	r3, [pc, #24]	; (800bb38 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800bb20:	4a06      	ldr	r2, [pc, #24]	; (800bb3c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800bb22:	4807      	ldr	r0, [pc, #28]	; (800bb40 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800bb24:	2139      	movs	r1, #57	; 0x39
 800bb26:	f00e ff5d 	bl	801a9e4 <__assert_func>
 800bb2a:	6823      	ldr	r3, [r4, #0]
 800bb2c:	4629      	mov	r1, r5
 800bb2e:	4620      	mov	r0, r4
 800bb30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bb32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb36:	4718      	bx	r3
 800bb38:	0801caed 	.word	0x0801caed
 800bb3c:	0801cb54 	.word	0x0801cb54
 800bb40:	0801ca45 	.word	0x0801ca45

0800bb44 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800bb44:	4770      	bx	lr
	...

0800bb48 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800bb48:	4a02      	ldr	r2, [pc, #8]	; (800bb54 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800bb4a:	6002      	str	r2, [r0, #0]
 800bb4c:	2200      	movs	r2, #0
 800bb4e:	8082      	strh	r2, [r0, #4]
 800bb50:	4770      	bx	lr
 800bb52:	bf00      	nop
 800bb54:	0801cb28 	.word	0x0801cb28

0800bb58 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800bb58:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bb5a:	2000      	movs	r0, #0
 800bb5c:	b12b      	cbz	r3, 800bb6a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800bb5e:	b920      	cbnz	r0, 800bb6a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800bb60:	1a5a      	subs	r2, r3, r1
 800bb62:	4250      	negs	r0, r2
 800bb64:	4150      	adcs	r0, r2
 800bb66:	699b      	ldr	r3, [r3, #24]
 800bb68:	e7f8      	b.n	800bb5c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800bb6a:	4770      	bx	lr

0800bb6c <_ZN8touchgfx9Container9removeAllEv>:
 800bb6c:	2200      	movs	r2, #0
 800bb6e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bb70:	b123      	cbz	r3, 800bb7c <_ZN8touchgfx9Container9removeAllEv+0x10>
 800bb72:	6999      	ldr	r1, [r3, #24]
 800bb74:	6281      	str	r1, [r0, #40]	; 0x28
 800bb76:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800bb7a:	e7f8      	b.n	800bb6e <_ZN8touchgfx9Container9removeAllEv+0x2>
 800bb7c:	4770      	bx	lr

0800bb7e <_ZN8touchgfx9Container6unlinkEv>:
 800bb7e:	2300      	movs	r3, #0
 800bb80:	6283      	str	r3, [r0, #40]	; 0x28
 800bb82:	4770      	bx	lr

0800bb84 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800bb84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb88:	461f      	mov	r7, r3
 800bb8a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800bb8e:	460d      	mov	r5, r1
 800bb90:	4616      	mov	r6, r2
 800bb92:	b103      	cbz	r3, 800bb96 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800bb94:	6038      	str	r0, [r7, #0]
 800bb96:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bb98:	b314      	cbz	r4, 800bbe0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800bb9a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800bb9e:	b1eb      	cbz	r3, 800bbdc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bba0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800bba4:	428d      	cmp	r5, r1
 800bba6:	db19      	blt.n	800bbdc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bba8:	8923      	ldrh	r3, [r4, #8]
 800bbaa:	b289      	uxth	r1, r1
 800bbac:	440b      	add	r3, r1
 800bbae:	b21b      	sxth	r3, r3
 800bbb0:	429d      	cmp	r5, r3
 800bbb2:	da13      	bge.n	800bbdc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bbb4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800bbb8:	4296      	cmp	r6, r2
 800bbba:	db0f      	blt.n	800bbdc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bbbc:	8963      	ldrh	r3, [r4, #10]
 800bbbe:	b292      	uxth	r2, r2
 800bbc0:	4413      	add	r3, r2
 800bbc2:	b21b      	sxth	r3, r3
 800bbc4:	429e      	cmp	r6, r3
 800bbc6:	da09      	bge.n	800bbdc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bbc8:	6823      	ldr	r3, [r4, #0]
 800bbca:	1ab2      	subs	r2, r6, r2
 800bbcc:	1a69      	subs	r1, r5, r1
 800bbce:	f8d3 801c 	ldr.w	r8, [r3, #28]
 800bbd2:	b212      	sxth	r2, r2
 800bbd4:	463b      	mov	r3, r7
 800bbd6:	b209      	sxth	r1, r1
 800bbd8:	4620      	mov	r0, r4
 800bbda:	47c0      	blx	r8
 800bbdc:	69a4      	ldr	r4, [r4, #24]
 800bbde:	e7db      	b.n	800bb98 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800bbe0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bbe4 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800bbe4:	2200      	movs	r2, #0
 800bbe6:	8002      	strh	r2, [r0, #0]
 800bbe8:	8042      	strh	r2, [r0, #2]
 800bbea:	8082      	strh	r2, [r0, #4]
 800bbec:	80c2      	strh	r2, [r0, #6]
 800bbee:	4770      	bx	lr

0800bbf0 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800bbf0:	b570      	push	{r4, r5, r6, lr}
 800bbf2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bbf4:	460d      	mov	r5, r1
 800bbf6:	4616      	mov	r6, r2
 800bbf8:	b13c      	cbz	r4, 800bc0a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800bbfa:	6823      	ldr	r3, [r4, #0]
 800bbfc:	4620      	mov	r0, r4
 800bbfe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800bc00:	4632      	mov	r2, r6
 800bc02:	4629      	mov	r1, r5
 800bc04:	4798      	blx	r3
 800bc06:	69a4      	ldr	r4, [r4, #24]
 800bc08:	e7f6      	b.n	800bbf8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800bc0a:	bd70      	pop	{r4, r5, r6, pc}

0800bc0c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800bc0c:	b538      	push	{r3, r4, r5, lr}
 800bc0e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bc10:	460d      	mov	r5, r1
 800bc12:	b134      	cbz	r4, 800bc22 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800bc14:	682b      	ldr	r3, [r5, #0]
 800bc16:	4621      	mov	r1, r4
 800bc18:	689b      	ldr	r3, [r3, #8]
 800bc1a:	4628      	mov	r0, r5
 800bc1c:	4798      	blx	r3
 800bc1e:	69a4      	ldr	r4, [r4, #24]
 800bc20:	e7f7      	b.n	800bc12 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800bc22:	bd38      	pop	{r3, r4, r5, pc}

0800bc24 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800bc24:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bc26:	b19b      	cbz	r3, 800bc50 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800bc28:	428b      	cmp	r3, r1
 800bc2a:	d109      	bne.n	800bc40 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800bc2c:	699a      	ldr	r2, [r3, #24]
 800bc2e:	2100      	movs	r1, #0
 800bc30:	6159      	str	r1, [r3, #20]
 800bc32:	6282      	str	r2, [r0, #40]	; 0x28
 800bc34:	b902      	cbnz	r2, 800bc38 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800bc36:	4770      	bx	lr
 800bc38:	6199      	str	r1, [r3, #24]
 800bc3a:	4770      	bx	lr
 800bc3c:	4613      	mov	r3, r2
 800bc3e:	b13a      	cbz	r2, 800bc50 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800bc40:	699a      	ldr	r2, [r3, #24]
 800bc42:	428a      	cmp	r2, r1
 800bc44:	d1fa      	bne.n	800bc3c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800bc46:	698a      	ldr	r2, [r1, #24]
 800bc48:	619a      	str	r2, [r3, #24]
 800bc4a:	2300      	movs	r3, #0
 800bc4c:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800bc50:	4770      	bx	lr

0800bc52 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800bc52:	b410      	push	{r4}
 800bc54:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bc56:	4604      	mov	r4, r0
 800bc58:	b92b      	cbnz	r3, 800bc66 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800bc5a:	6803      	ldr	r3, [r0, #0]
 800bc5c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bc60:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800bc62:	4611      	mov	r1, r2
 800bc64:	4718      	bx	r3
 800bc66:	b941      	cbnz	r1, 800bc7a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800bc68:	6193      	str	r3, [r2, #24]
 800bc6a:	6282      	str	r2, [r0, #40]	; 0x28
 800bc6c:	6154      	str	r4, [r2, #20]
 800bc6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bc72:	4770      	bx	lr
 800bc74:	4603      	mov	r3, r0
 800bc76:	2800      	cmp	r0, #0
 800bc78:	d0f9      	beq.n	800bc6e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800bc7a:	4299      	cmp	r1, r3
 800bc7c:	6998      	ldr	r0, [r3, #24]
 800bc7e:	d1f9      	bne.n	800bc74 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800bc80:	6190      	str	r0, [r2, #24]
 800bc82:	618a      	str	r2, [r1, #24]
 800bc84:	e7f2      	b.n	800bc6c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800bc88 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800bc88:	4288      	cmp	r0, r1
 800bc8a:	b508      	push	{r3, lr}
 800bc8c:	d105      	bne.n	800bc9a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800bc8e:	4b11      	ldr	r3, [pc, #68]	; (800bcd4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800bc90:	4a11      	ldr	r2, [pc, #68]	; (800bcd8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800bc92:	2123      	movs	r1, #35	; 0x23
 800bc94:	4811      	ldr	r0, [pc, #68]	; (800bcdc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800bc96:	f00e fea5 	bl	801a9e4 <__assert_func>
 800bc9a:	694b      	ldr	r3, [r1, #20]
 800bc9c:	b11b      	cbz	r3, 800bca6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800bc9e:	4b10      	ldr	r3, [pc, #64]	; (800bce0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800bca0:	4a0d      	ldr	r2, [pc, #52]	; (800bcd8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800bca2:	2124      	movs	r1, #36	; 0x24
 800bca4:	e7f6      	b.n	800bc94 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800bca6:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800bcaa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bcac:	b913      	cbnz	r3, 800bcb4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800bcae:	6281      	str	r1, [r0, #40]	; 0x28
 800bcb0:	bd08      	pop	{r3, pc}
 800bcb2:	4613      	mov	r3, r2
 800bcb4:	699a      	ldr	r2, [r3, #24]
 800bcb6:	b12a      	cbz	r2, 800bcc4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800bcb8:	428b      	cmp	r3, r1
 800bcba:	d1fa      	bne.n	800bcb2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800bcbc:	4b09      	ldr	r3, [pc, #36]	; (800bce4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800bcbe:	4a06      	ldr	r2, [pc, #24]	; (800bcd8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800bcc0:	2135      	movs	r1, #53	; 0x35
 800bcc2:	e7e7      	b.n	800bc94 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800bcc4:	428b      	cmp	r3, r1
 800bcc6:	d103      	bne.n	800bcd0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800bcc8:	4b06      	ldr	r3, [pc, #24]	; (800bce4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800bcca:	4a03      	ldr	r2, [pc, #12]	; (800bcd8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800bccc:	2138      	movs	r1, #56	; 0x38
 800bcce:	e7e1      	b.n	800bc94 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800bcd0:	6199      	str	r1, [r3, #24]
 800bcd2:	e7ed      	b.n	800bcb0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800bcd4:	0801cc1f 	.word	0x0801cc1f
 800bcd8:	0801cd74 	.word	0x0801cd74
 800bcdc:	0801cc4b 	.word	0x0801cc4b
 800bce0:	0801cc7e 	.word	0x0801cc7e
 800bce4:	0801ccb4 	.word	0x0801ccb4

0800bce8 <_ZN8touchgfx4RectaNERKS0_>:
 800bce8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bcec:	888b      	ldrh	r3, [r1, #4]
 800bcee:	f9b1 9000 	ldrsh.w	r9, [r1]
 800bcf2:	f9b0 a000 	ldrsh.w	sl, [r0]
 800bcf6:	444b      	add	r3, r9
 800bcf8:	b29b      	uxth	r3, r3
 800bcfa:	fa0f f883 	sxth.w	r8, r3
 800bcfe:	45c2      	cmp	sl, r8
 800bd00:	da30      	bge.n	800bd64 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800bd02:	8882      	ldrh	r2, [r0, #4]
 800bd04:	4452      	add	r2, sl
 800bd06:	b292      	uxth	r2, r2
 800bd08:	fa0f fe82 	sxth.w	lr, r2
 800bd0c:	45f1      	cmp	r9, lr
 800bd0e:	da29      	bge.n	800bd64 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800bd10:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800bd14:	88cc      	ldrh	r4, [r1, #6]
 800bd16:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800bd1a:	442c      	add	r4, r5
 800bd1c:	b224      	sxth	r4, r4
 800bd1e:	42a6      	cmp	r6, r4
 800bd20:	da20      	bge.n	800bd64 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800bd22:	88c7      	ldrh	r7, [r0, #6]
 800bd24:	4437      	add	r7, r6
 800bd26:	b2bf      	uxth	r7, r7
 800bd28:	fa0f fc87 	sxth.w	ip, r7
 800bd2c:	4565      	cmp	r5, ip
 800bd2e:	da19      	bge.n	800bd64 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800bd30:	45ca      	cmp	sl, r9
 800bd32:	4654      	mov	r4, sl
 800bd34:	bfb8      	it	lt
 800bd36:	464c      	movlt	r4, r9
 800bd38:	42b5      	cmp	r5, r6
 800bd3a:	bfb8      	it	lt
 800bd3c:	4635      	movlt	r5, r6
 800bd3e:	45f0      	cmp	r8, lr
 800bd40:	bfc8      	it	gt
 800bd42:	4613      	movgt	r3, r2
 800bd44:	1b1b      	subs	r3, r3, r4
 800bd46:	8083      	strh	r3, [r0, #4]
 800bd48:	88ca      	ldrh	r2, [r1, #6]
 800bd4a:	884b      	ldrh	r3, [r1, #2]
 800bd4c:	8004      	strh	r4, [r0, #0]
 800bd4e:	4413      	add	r3, r2
 800bd50:	b29b      	uxth	r3, r3
 800bd52:	b21a      	sxth	r2, r3
 800bd54:	4594      	cmp	ip, r2
 800bd56:	bfb8      	it	lt
 800bd58:	463b      	movlt	r3, r7
 800bd5a:	1b5b      	subs	r3, r3, r5
 800bd5c:	80c3      	strh	r3, [r0, #6]
 800bd5e:	8045      	strh	r5, [r0, #2]
 800bd60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bd64:	2300      	movs	r3, #0
 800bd66:	8003      	strh	r3, [r0, #0]
 800bd68:	8043      	strh	r3, [r0, #2]
 800bd6a:	8083      	strh	r3, [r0, #4]
 800bd6c:	80c3      	strh	r3, [r0, #6]
 800bd6e:	e7f7      	b.n	800bd60 <_ZN8touchgfx4RectaNERKS0_+0x78>

0800bd70 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800bd70:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800bd74:	b12b      	cbz	r3, 800bd82 <_ZNK8touchgfx4Rect7isEmptyEv+0x12>
 800bd76:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800bd7a:	fab0 f080 	clz	r0, r0
 800bd7e:	0940      	lsrs	r0, r0, #5
 800bd80:	4770      	bx	lr
 800bd82:	2001      	movs	r0, #1
 800bd84:	4770      	bx	lr

0800bd86 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800bd86:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd8a:	2300      	movs	r3, #0
 800bd8c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800bd8e:	8003      	strh	r3, [r0, #0]
 800bd90:	4604      	mov	r4, r0
 800bd92:	8043      	strh	r3, [r0, #2]
 800bd94:	8083      	strh	r3, [r0, #4]
 800bd96:	80c3      	strh	r3, [r0, #6]
 800bd98:	2d00      	cmp	r5, #0
 800bd9a:	d040      	beq.n	800be1e <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800bd9c:	1d28      	adds	r0, r5, #4
 800bd9e:	f7ff ffe7 	bl	800bd70 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bda2:	b988      	cbnz	r0, 800bdc8 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800bda4:	4620      	mov	r0, r4
 800bda6:	f7ff ffe3 	bl	800bd70 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bdaa:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800bdae:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800bdb2:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800bdb6:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800bdba:	b138      	cbz	r0, 800bdcc <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800bdbc:	8022      	strh	r2, [r4, #0]
 800bdbe:	8063      	strh	r3, [r4, #2]
 800bdc0:	f8a4 e004 	strh.w	lr, [r4, #4]
 800bdc4:	f8a4 c006 	strh.w	ip, [r4, #6]
 800bdc8:	69ad      	ldr	r5, [r5, #24]
 800bdca:	e7e5      	b.n	800bd98 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800bdcc:	f9b4 0000 	ldrsh.w	r0, [r4]
 800bdd0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800bdd4:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800bdd8:	4290      	cmp	r0, r2
 800bdda:	4607      	mov	r7, r0
 800bddc:	bfa8      	it	ge
 800bdde:	4617      	movge	r7, r2
 800bde0:	4472      	add	r2, lr
 800bde2:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800bde6:	8027      	strh	r7, [r4, #0]
 800bde8:	4299      	cmp	r1, r3
 800bdea:	460e      	mov	r6, r1
 800bdec:	4440      	add	r0, r8
 800bdee:	bfa8      	it	ge
 800bdf0:	461e      	movge	r6, r3
 800bdf2:	4471      	add	r1, lr
 800bdf4:	4463      	add	r3, ip
 800bdf6:	b200      	sxth	r0, r0
 800bdf8:	b212      	sxth	r2, r2
 800bdfa:	b209      	sxth	r1, r1
 800bdfc:	b21b      	sxth	r3, r3
 800bdfe:	4290      	cmp	r0, r2
 800be00:	bfac      	ite	ge
 800be02:	ebc7 0200 	rsbge	r2, r7, r0
 800be06:	ebc7 0202 	rsblt	r2, r7, r2
 800be0a:	4299      	cmp	r1, r3
 800be0c:	bfac      	ite	ge
 800be0e:	ebc6 0301 	rsbge	r3, r6, r1
 800be12:	ebc6 0303 	rsblt	r3, r6, r3
 800be16:	8066      	strh	r6, [r4, #2]
 800be18:	80a2      	strh	r2, [r4, #4]
 800be1a:	80e3      	strh	r3, [r4, #6]
 800be1c:	e7d4      	b.n	800bdc8 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800be1e:	4620      	mov	r0, r4
 800be20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800be24 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800be24:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800be28:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800be2c:	b383      	cbz	r3, 800be90 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800be2e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800be30:	b374      	cbz	r4, 800be90 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800be32:	f9b1 5000 	ldrsh.w	r5, [r1]
 800be36:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800be3a:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800be3e:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800be42:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800be46:	b303      	cbz	r3, 800be8a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800be48:	4668      	mov	r0, sp
 800be4a:	1d21      	adds	r1, r4, #4
 800be4c:	f8ad 5000 	strh.w	r5, [sp]
 800be50:	f8ad 6002 	strh.w	r6, [sp, #2]
 800be54:	f8ad 7004 	strh.w	r7, [sp, #4]
 800be58:	f8ad 8006 	strh.w	r8, [sp, #6]
 800be5c:	f7ff ff44 	bl	800bce8 <_ZN8touchgfx4RectaNERKS0_>
 800be60:	4668      	mov	r0, sp
 800be62:	f7ff ff85 	bl	800bd70 <_ZNK8touchgfx4Rect7isEmptyEv>
 800be66:	b980      	cbnz	r0, 800be8a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800be68:	f8bd 3000 	ldrh.w	r3, [sp]
 800be6c:	88a2      	ldrh	r2, [r4, #4]
 800be6e:	1a9b      	subs	r3, r3, r2
 800be70:	f8ad 3000 	strh.w	r3, [sp]
 800be74:	88e2      	ldrh	r2, [r4, #6]
 800be76:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800be7a:	1a9b      	subs	r3, r3, r2
 800be7c:	f8ad 3002 	strh.w	r3, [sp, #2]
 800be80:	6823      	ldr	r3, [r4, #0]
 800be82:	4669      	mov	r1, sp
 800be84:	689b      	ldr	r3, [r3, #8]
 800be86:	4620      	mov	r0, r4
 800be88:	4798      	blx	r3
 800be8a:	69a4      	ldr	r4, [r4, #24]
 800be8c:	2c00      	cmp	r4, #0
 800be8e:	d1d8      	bne.n	800be42 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800be90:	b002      	add	sp, #8
 800be92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800be96 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800be96:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800be98:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800be9c:	460d      	mov	r5, r1
 800be9e:	4616      	mov	r6, r2
 800bea0:	b323      	cbz	r3, 800beec <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800bea2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bea4:	b314      	cbz	r4, 800beec <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800bea6:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800beaa:	b1eb      	cbz	r3, 800bee8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800beac:	6828      	ldr	r0, [r5, #0]
 800beae:	6869      	ldr	r1, [r5, #4]
 800beb0:	466b      	mov	r3, sp
 800beb2:	c303      	stmia	r3!, {r0, r1}
 800beb4:	4668      	mov	r0, sp
 800beb6:	1d21      	adds	r1, r4, #4
 800beb8:	f7ff ff16 	bl	800bce8 <_ZN8touchgfx4RectaNERKS0_>
 800bebc:	4668      	mov	r0, sp
 800bebe:	f7ff ff57 	bl	800bd70 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bec2:	b988      	cbnz	r0, 800bee8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800bec4:	f8bd 3000 	ldrh.w	r3, [sp]
 800bec8:	88a2      	ldrh	r2, [r4, #4]
 800beca:	1a9b      	subs	r3, r3, r2
 800becc:	f8ad 3000 	strh.w	r3, [sp]
 800bed0:	88e2      	ldrh	r2, [r4, #6]
 800bed2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bed6:	1a9b      	subs	r3, r3, r2
 800bed8:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bedc:	6823      	ldr	r3, [r4, #0]
 800bede:	4632      	mov	r2, r6
 800bee0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800bee2:	4669      	mov	r1, sp
 800bee4:	4620      	mov	r0, r4
 800bee6:	4798      	blx	r3
 800bee8:	69a4      	ldr	r4, [r4, #24]
 800beea:	e7db      	b.n	800bea4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800beec:	b002      	add	sp, #8
 800beee:	bd70      	pop	{r4, r5, r6, pc}

0800bef0 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 800bef0:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800bef4:	4770      	bx	lr

0800bef6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800bef6:	b513      	push	{r0, r1, r4, lr}
 800bef8:	6803      	ldr	r3, [r0, #0]
 800befa:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800befe:	2300      	movs	r3, #0
 800bf00:	e9cd 3300 	strd	r3, r3, [sp]
 800bf04:	466b      	mov	r3, sp
 800bf06:	47a0      	blx	r4
 800bf08:	b002      	add	sp, #8
 800bf0a:	bd10      	pop	{r4, pc}

0800bf0c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800bf0c:	2301      	movs	r3, #1
 800bf0e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800bf12:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800bf16:	4770      	bx	lr

0800bf18 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800bf18:	2301      	movs	r3, #1
 800bf1a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800bf1e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800bf22:	4770      	bx	lr

0800bf24 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800bf24:	6843      	ldr	r3, [r0, #4]
 800bf26:	2201      	movs	r2, #1
 800bf28:	725a      	strb	r2, [r3, #9]
 800bf2a:	6840      	ldr	r0, [r0, #4]
 800bf2c:	6803      	ldr	r3, [r0, #0]
 800bf2e:	691b      	ldr	r3, [r3, #16]
 800bf30:	4718      	bx	r3

0800bf32 <_ZN8touchgfx3HAL8flushDMAEv>:
 800bf32:	6840      	ldr	r0, [r0, #4]
 800bf34:	6803      	ldr	r3, [r0, #0]
 800bf36:	689b      	ldr	r3, [r3, #8]
 800bf38:	4718      	bx	r3
	...

0800bf3c <_ZN8touchgfx3HAL10beginFrameEv>:
 800bf3c:	4b04      	ldr	r3, [pc, #16]	; (800bf50 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800bf3e:	781b      	ldrb	r3, [r3, #0]
 800bf40:	b123      	cbz	r3, 800bf4c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800bf42:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800bf46:	f080 0001 	eor.w	r0, r0, #1
 800bf4a:	4770      	bx	lr
 800bf4c:	2001      	movs	r0, #1
 800bf4e:	4770      	bx	lr
 800bf50:	200268fe 	.word	0x200268fe

0800bf54 <_ZN8touchgfx3HAL8endFrameEv>:
 800bf54:	b510      	push	{r4, lr}
 800bf56:	4604      	mov	r4, r0
 800bf58:	6840      	ldr	r0, [r0, #4]
 800bf5a:	6803      	ldr	r3, [r0, #0]
 800bf5c:	689b      	ldr	r3, [r3, #8]
 800bf5e:	4798      	blx	r3
 800bf60:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800bf64:	b113      	cbz	r3, 800bf6c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800bf66:	2301      	movs	r3, #1
 800bf68:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800bf6c:	bd10      	pop	{r4, pc}

0800bf6e <_ZN8touchgfx3HAL9taskEntryEv>:
 800bf6e:	b508      	push	{r3, lr}
 800bf70:	6803      	ldr	r3, [r0, #0]
 800bf72:	4604      	mov	r4, r0
 800bf74:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bf76:	4798      	blx	r3
 800bf78:	6823      	ldr	r3, [r4, #0]
 800bf7a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800bf7c:	4620      	mov	r0, r4
 800bf7e:	4798      	blx	r3
 800bf80:	f7fe fa4e 	bl	800a420 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800bf84:	6823      	ldr	r3, [r4, #0]
 800bf86:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800bf88:	e7f8      	b.n	800bf7c <_ZN8touchgfx3HAL9taskEntryEv+0xe>
	...

0800bf8c <_ZN8touchgfx3HAL4tickEv>:
 800bf8c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bf8e:	6803      	ldr	r3, [r0, #0]
 800bf90:	4d5c      	ldr	r5, [pc, #368]	; (800c104 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800bf92:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800bf96:	4604      	mov	r4, r0
 800bf98:	4798      	blx	r3
 800bf9a:	2800      	cmp	r0, #0
 800bf9c:	f000 8097 	beq.w	800c0ce <_ZN8touchgfx3HAL4tickEv+0x142>
 800bfa0:	2001      	movs	r0, #1
 800bfa2:	f7fd ff5b 	bl	8009e5c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800bfa6:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800bfaa:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800bfae:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800bfb2:	2600      	movs	r6, #0
 800bfb4:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800bfb8:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800bfbc:	b133      	cbz	r3, 800bfcc <_ZN8touchgfx3HAL4tickEv+0x40>
 800bfbe:	6823      	ldr	r3, [r4, #0]
 800bfc0:	4620      	mov	r0, r4
 800bfc2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800bfc6:	4798      	blx	r3
 800bfc8:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800bfcc:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800bfd0:	6862      	ldr	r2, [r4, #4]
 800bfd2:	f083 0301 	eor.w	r3, r3, #1
 800bfd6:	7253      	strb	r3, [r2, #9]
 800bfd8:	2601      	movs	r6, #1
 800bfda:	702e      	strb	r6, [r5, #0]
 800bfdc:	f001 fabe 	bl	800d55c <_ZN8touchgfx11Application11getInstanceEv>
 800bfe0:	6803      	ldr	r3, [r0, #0]
 800bfe2:	4631      	mov	r1, r6
 800bfe4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bfe6:	4798      	blx	r3
 800bfe8:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800bfec:	b90b      	cbnz	r3, 800bff2 <_ZN8touchgfx3HAL4tickEv+0x66>
 800bfee:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800bff2:	f001 fab3 	bl	800d55c <_ZN8touchgfx11Application11getInstanceEv>
 800bff6:	6803      	ldr	r3, [r0, #0]
 800bff8:	695b      	ldr	r3, [r3, #20]
 800bffa:	4798      	blx	r3
 800bffc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800bffe:	6803      	ldr	r3, [r0, #0]
 800c000:	691b      	ldr	r3, [r3, #16]
 800c002:	4798      	blx	r3
 800c004:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c008:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800c00c:	3b01      	subs	r3, #1
 800c00e:	b2db      	uxtb	r3, r3
 800c010:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c014:	b10a      	cbz	r2, 800c01a <_ZN8touchgfx3HAL4tickEv+0x8e>
 800c016:	2b00      	cmp	r3, #0
 800c018:	d1eb      	bne.n	800bff2 <_ZN8touchgfx3HAL4tickEv+0x66>
 800c01a:	4a3b      	ldr	r2, [pc, #236]	; (800c108 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800c01c:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800c020:	7813      	ldrb	r3, [r2, #0]
 800c022:	3301      	adds	r3, #1
 800c024:	b25b      	sxtb	r3, r3
 800c026:	4299      	cmp	r1, r3
 800c028:	7013      	strb	r3, [r2, #0]
 800c02a:	dc10      	bgt.n	800c04e <_ZN8touchgfx3HAL4tickEv+0xc2>
 800c02c:	68e0      	ldr	r0, [r4, #12]
 800c02e:	2300      	movs	r3, #0
 800c030:	7013      	strb	r3, [r2, #0]
 800c032:	6803      	ldr	r3, [r0, #0]
 800c034:	aa03      	add	r2, sp, #12
 800c036:	68db      	ldr	r3, [r3, #12]
 800c038:	a902      	add	r1, sp, #8
 800c03a:	4798      	blx	r3
 800c03c:	6823      	ldr	r3, [r4, #0]
 800c03e:	2800      	cmp	r0, #0
 800c040:	d051      	beq.n	800c0e6 <_ZN8touchgfx3HAL4tickEv+0x15a>
 800c042:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800c046:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c04a:	4620      	mov	r0, r4
 800c04c:	4798      	blx	r3
 800c04e:	6960      	ldr	r0, [r4, #20]
 800c050:	2300      	movs	r3, #0
 800c052:	f88d 3007 	strb.w	r3, [sp, #7]
 800c056:	b158      	cbz	r0, 800c070 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800c058:	6803      	ldr	r3, [r0, #0]
 800c05a:	f10d 0107 	add.w	r1, sp, #7
 800c05e:	68db      	ldr	r3, [r3, #12]
 800c060:	4798      	blx	r3
 800c062:	b128      	cbz	r0, 800c070 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800c064:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c066:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c06a:	6803      	ldr	r3, [r0, #0]
 800c06c:	68db      	ldr	r3, [r3, #12]
 800c06e:	4798      	blx	r3
 800c070:	f104 001c 	add.w	r0, r4, #28
 800c074:	f00e fbd2 	bl	801a81c <_ZN8touchgfx8Gestures4tickEv>
 800c078:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800c07c:	b30b      	cbz	r3, 800c0c2 <_ZN8touchgfx3HAL4tickEv+0x136>
 800c07e:	6920      	ldr	r0, [r4, #16]
 800c080:	6803      	ldr	r3, [r0, #0]
 800c082:	691b      	ldr	r3, [r3, #16]
 800c084:	4798      	blx	r3
 800c086:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c088:	4606      	mov	r6, r0
 800c08a:	b903      	cbnz	r3, 800c08e <_ZN8touchgfx3HAL4tickEv+0x102>
 800c08c:	6720      	str	r0, [r4, #112]	; 0x70
 800c08e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c090:	4a1e      	ldr	r2, [pc, #120]	; (800c10c <_ZN8touchgfx3HAL4tickEv+0x180>)
 800c092:	1af3      	subs	r3, r6, r3
 800c094:	4293      	cmp	r3, r2
 800c096:	d914      	bls.n	800c0c2 <_ZN8touchgfx3HAL4tickEv+0x136>
 800c098:	6920      	ldr	r0, [r4, #16]
 800c09a:	6803      	ldr	r3, [r0, #0]
 800c09c:	699b      	ldr	r3, [r3, #24]
 800c09e:	4798      	blx	r3
 800c0a0:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c0a2:	2264      	movs	r2, #100	; 0x64
 800c0a4:	1af3      	subs	r3, r6, r3
 800c0a6:	fbb3 f3f2 	udiv	r3, r3, r2
 800c0aa:	fbb0 f0f3 	udiv	r0, r0, r3
 800c0ae:	2800      	cmp	r0, #0
 800c0b0:	dc1e      	bgt.n	800c0f0 <_ZN8touchgfx3HAL4tickEv+0x164>
 800c0b2:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800c0b6:	6920      	ldr	r0, [r4, #16]
 800c0b8:	6803      	ldr	r3, [r0, #0]
 800c0ba:	2100      	movs	r1, #0
 800c0bc:	69db      	ldr	r3, [r3, #28]
 800c0be:	4798      	blx	r3
 800c0c0:	6726      	str	r6, [r4, #112]	; 0x70
 800c0c2:	f001 fa4b 	bl	800d55c <_ZN8touchgfx11Application11getInstanceEv>
 800c0c6:	6803      	ldr	r3, [r0, #0]
 800c0c8:	2100      	movs	r1, #0
 800c0ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c0cc:	4798      	blx	r3
 800c0ce:	6823      	ldr	r3, [r4, #0]
 800c0d0:	4620      	mov	r0, r4
 800c0d2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800c0d6:	4798      	blx	r3
 800c0d8:	2001      	movs	r0, #1
 800c0da:	f7fd feca 	bl	8009e72 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800c0de:	2300      	movs	r3, #0
 800c0e0:	702b      	strb	r3, [r5, #0]
 800c0e2:	b004      	add	sp, #16
 800c0e4:	bd70      	pop	{r4, r5, r6, pc}
 800c0e6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c0ea:	4620      	mov	r0, r4
 800c0ec:	4798      	blx	r3
 800c0ee:	e7ae      	b.n	800c04e <_ZN8touchgfx3HAL4tickEv+0xc2>
 800c0f0:	2863      	cmp	r0, #99	; 0x63
 800c0f2:	bfcb      	itete	gt
 800c0f4:	2300      	movgt	r3, #0
 800c0f6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800c0fa:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800c0fe:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800c102:	e7d8      	b.n	800c0b6 <_ZN8touchgfx3HAL4tickEv+0x12a>
 800c104:	20026904 	.word	0x20026904
 800c108:	20026905 	.word	0x20026905
 800c10c:	05f5e100 	.word	0x05f5e100

0800c110 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800c110:	f7fe b956 	b.w	800a3c0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c114 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800c114:	6581      	str	r1, [r0, #88]	; 0x58
 800c116:	301c      	adds	r0, #28
 800c118:	f00e bb7e 	b.w	801a818 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800c11c <_ZN8touchgfx3HAL5touchEll>:
 800c11c:	b530      	push	{r4, r5, lr}
 800c11e:	b087      	sub	sp, #28
 800c120:	4604      	mov	r4, r0
 800c122:	a804      	add	r0, sp, #16
 800c124:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800c128:	f000 ffd6 	bl	800d0d8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800c12c:	9b04      	ldr	r3, [sp, #16]
 800c12e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c132:	a906      	add	r1, sp, #24
 800c134:	9b05      	ldr	r3, [sp, #20]
 800c136:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800c13a:	a803      	add	r0, sp, #12
 800c13c:	f001 f81a 	bl	800d174 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800c140:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800c144:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c148:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c14c:	f104 001c 	add.w	r0, r4, #28
 800c150:	b189      	cbz	r1, 800c176 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800c152:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800c156:	9300      	str	r3, [sp, #0]
 800c158:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800c15c:	4613      	mov	r3, r2
 800c15e:	462a      	mov	r2, r5
 800c160:	f00e fb6a 	bl	801a838 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800c164:	b128      	cbz	r0, 800c172 <_ZN8touchgfx3HAL5touchEll+0x56>
 800c166:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c16a:	65e3      	str	r3, [r4, #92]	; 0x5c
 800c16c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c170:	6623      	str	r3, [r4, #96]	; 0x60
 800c172:	b007      	add	sp, #28
 800c174:	bd30      	pop	{r4, r5, pc}
 800c176:	f00e fba3 	bl	801a8c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c17a:	2301      	movs	r3, #1
 800c17c:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c180:	e7f1      	b.n	800c166 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800c182 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800c182:	b570      	push	{r4, r5, r6, lr}
 800c184:	2b00      	cmp	r3, #0
 800c186:	d050      	beq.n	800c22a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800c188:	ea81 0002 	eor.w	r0, r1, r2
 800c18c:	07c6      	lsls	r6, r0, #31
 800c18e:	d508      	bpl.n	800c1a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800c190:	3a01      	subs	r2, #1
 800c192:	18cc      	adds	r4, r1, r3
 800c194:	42a1      	cmp	r1, r4
 800c196:	d048      	beq.n	800c22a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800c198:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c19c:	f801 0b01 	strb.w	r0, [r1], #1
 800c1a0:	e7f8      	b.n	800c194 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800c1a2:	07d5      	lsls	r5, r2, #31
 800c1a4:	bf42      	ittt	mi
 800c1a6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800c1aa:	f801 0b01 	strbmi.w	r0, [r1], #1
 800c1ae:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800c1b2:	2b01      	cmp	r3, #1
 800c1b4:	d915      	bls.n	800c1e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800c1b6:	ea82 0001 	eor.w	r0, r2, r1
 800c1ba:	0784      	lsls	r4, r0, #30
 800c1bc:	d02d      	beq.n	800c21a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800c1be:	1e94      	subs	r4, r2, #2
 800c1c0:	4608      	mov	r0, r1
 800c1c2:	18ce      	adds	r6, r1, r3
 800c1c4:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800c1c8:	f820 5b02 	strh.w	r5, [r0], #2
 800c1cc:	1a35      	subs	r5, r6, r0
 800c1ce:	2d01      	cmp	r5, #1
 800c1d0:	d8f8      	bhi.n	800c1c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800c1d2:	1e98      	subs	r0, r3, #2
 800c1d4:	f020 0001 	bic.w	r0, r0, #1
 800c1d8:	3002      	adds	r0, #2
 800c1da:	4401      	add	r1, r0
 800c1dc:	4402      	add	r2, r0
 800c1de:	f003 0301 	and.w	r3, r3, #1
 800c1e2:	1f14      	subs	r4, r2, #4
 800c1e4:	4608      	mov	r0, r1
 800c1e6:	18ce      	adds	r6, r1, r3
 800c1e8:	1a35      	subs	r5, r6, r0
 800c1ea:	2d03      	cmp	r5, #3
 800c1ec:	d810      	bhi.n	800c210 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800c1ee:	089c      	lsrs	r4, r3, #2
 800c1f0:	00a0      	lsls	r0, r4, #2
 800c1f2:	4401      	add	r1, r0
 800c1f4:	3801      	subs	r0, #1
 800c1f6:	4402      	add	r2, r0
 800c1f8:	f06f 0003 	mvn.w	r0, #3
 800c1fc:	fb00 3404 	mla	r4, r0, r4, r3
 800c200:	440c      	add	r4, r1
 800c202:	42a1      	cmp	r1, r4
 800c204:	d011      	beq.n	800c22a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800c206:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800c20a:	f801 3b01 	strb.w	r3, [r1], #1
 800c20e:	e7f8      	b.n	800c202 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800c210:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800c214:	f840 5b04 	str.w	r5, [r0], #4
 800c218:	e7e6      	b.n	800c1e8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800c21a:	0790      	lsls	r0, r2, #30
 800c21c:	d0e1      	beq.n	800c1e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800c21e:	f832 0b02 	ldrh.w	r0, [r2], #2
 800c222:	f821 0b02 	strh.w	r0, [r1], #2
 800c226:	3b02      	subs	r3, #2
 800c228:	e7db      	b.n	800c1e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800c22a:	2001      	movs	r0, #1
 800c22c:	bd70      	pop	{r4, r5, r6, pc}

0800c22e <_ZN8touchgfx3HAL7noTouchEv>:
 800c22e:	b510      	push	{r4, lr}
 800c230:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800c234:	4604      	mov	r4, r0
 800c236:	b153      	cbz	r3, 800c24e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800c238:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800c23c:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800c240:	2101      	movs	r1, #1
 800c242:	301c      	adds	r0, #28
 800c244:	f00e fb3c 	bl	801a8c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c248:	2300      	movs	r3, #0
 800c24a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c24e:	bd10      	pop	{r4, pc}

0800c250 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800c250:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c254:	4605      	mov	r5, r0
 800c256:	6980      	ldr	r0, [r0, #24]
 800c258:	b085      	sub	sp, #20
 800c25a:	460f      	mov	r7, r1
 800c25c:	4690      	mov	r8, r2
 800c25e:	4699      	mov	r9, r3
 800c260:	b930      	cbnz	r0, 800c270 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800c262:	4b1f      	ldr	r3, [pc, #124]	; (800c2e0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800c264:	4a1f      	ldr	r2, [pc, #124]	; (800c2e4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800c266:	f44f 7198 	mov.w	r1, #304	; 0x130
 800c26a:	481f      	ldr	r0, [pc, #124]	; (800c2e8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x98>)
 800c26c:	f00e fbba 	bl	801a9e4 <__assert_func>
 800c270:	ac04      	add	r4, sp, #16
 800c272:	2600      	movs	r6, #0
 800c274:	f844 6d04 	str.w	r6, [r4, #-4]!
 800c278:	6806      	ldr	r6, [r0, #0]
 800c27a:	9401      	str	r4, [sp, #4]
 800c27c:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800c280:	9400      	str	r4, [sp, #0]
 800c282:	6834      	ldr	r4, [r6, #0]
 800c284:	47a0      	blx	r4
 800c286:	4c19      	ldr	r4, [pc, #100]	; (800c2ec <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x9c>)
 800c288:	4606      	mov	r6, r0
 800c28a:	f8a4 9000 	strh.w	r9, [r4]
 800c28e:	f7fc fb4b 	bl	8008928 <_ZN8touchgfx3HAL3lcdEv>
 800c292:	6803      	ldr	r3, [r0, #0]
 800c294:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c296:	4798      	blx	r3
 800c298:	280c      	cmp	r0, #12
 800c29a:	d80f      	bhi.n	800c2bc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800c29c:	e8df f000 	tbb	[pc, r0]
 800c2a0:	1b1b1207 	.word	0x1b1b1207
 800c2a4:	1b1b1b1b 	.word	0x1b1b1b1b
 800c2a8:	1b1b1b1b 	.word	0x1b1b1b1b
 800c2ac:	1b          	.byte	0x1b
 800c2ad:	00          	.byte	0x00
 800c2ae:	8823      	ldrh	r3, [r4, #0]
 800c2b0:	fb08 7203 	mla	r2, r8, r3, r7
 800c2b4:	9b03      	ldr	r3, [sp, #12]
 800c2b6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800c2ba:	63eb      	str	r3, [r5, #60]	; 0x3c
 800c2bc:	4630      	mov	r0, r6
 800c2be:	b005      	add	sp, #20
 800c2c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c2c4:	8822      	ldrh	r2, [r4, #0]
 800c2c6:	9b03      	ldr	r3, [sp, #12]
 800c2c8:	fb08 7202 	mla	r2, r8, r2, r7
 800c2cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800c2d0:	1a9a      	subs	r2, r3, r2
 800c2d2:	63ea      	str	r2, [r5, #60]	; 0x3c
 800c2d4:	e7f2      	b.n	800c2bc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800c2d6:	4b06      	ldr	r3, [pc, #24]	; (800c2f0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0xa0>)
 800c2d8:	4a02      	ldr	r2, [pc, #8]	; (800c2e4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800c2da:	f240 114d 	movw	r1, #333	; 0x14d
 800c2de:	e7c4      	b.n	800c26a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800c2e0:	0801ce1d 	.word	0x0801ce1d
 800c2e4:	0801d12e 	.word	0x0801d12e
 800c2e8:	0801ce62 	.word	0x0801ce62
 800c2ec:	200268fa 	.word	0x200268fa
 800c2f0:	0801ce88 	.word	0x0801ce88

0800c2f4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800c2f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c2f8:	4698      	mov	r8, r3
 800c2fa:	6803      	ldr	r3, [r0, #0]
 800c2fc:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 800c2fe:	4b0f      	ldr	r3, [pc, #60]	; (800c33c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800c300:	b087      	sub	sp, #28
 800c302:	f8b3 9000 	ldrh.w	r9, [r3]
 800c306:	460e      	mov	r6, r1
 800c308:	4617      	mov	r7, r2
 800c30a:	4604      	mov	r4, r0
 800c30c:	f7fc fb0c 	bl	8008928 <_ZN8touchgfx3HAL3lcdEv>
 800c310:	6803      	ldr	r3, [r0, #0]
 800c312:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c314:	4798      	blx	r3
 800c316:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800c31a:	9302      	str	r3, [sp, #8]
 800c31c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800c320:	9301      	str	r3, [sp, #4]
 800c322:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c326:	9300      	str	r3, [sp, #0]
 800c328:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800c32c:	4643      	mov	r3, r8
 800c32e:	463a      	mov	r2, r7
 800c330:	4631      	mov	r1, r6
 800c332:	4620      	mov	r0, r4
 800c334:	47a8      	blx	r5
 800c336:	b007      	add	sp, #28
 800c338:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c33c:	200268fa 	.word	0x200268fa

0800c340 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800c340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c344:	4606      	mov	r6, r0
 800c346:	b089      	sub	sp, #36	; 0x24
 800c348:	4610      	mov	r0, r2
 800c34a:	460c      	mov	r4, r1
 800c34c:	4691      	mov	r9, r2
 800c34e:	4698      	mov	r8, r3
 800c350:	f002 fdd0 	bl	800eef4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c354:	2800      	cmp	r0, #0
 800c356:	f000 8092 	beq.w	800c47e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x13e>
 800c35a:	f8df a13c 	ldr.w	sl, [pc, #316]	; 800c498 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800c35e:	f8df b13c 	ldr.w	fp, [pc, #316]	; 800c49c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>
 800c362:	f8da 0000 	ldr.w	r0, [sl]
 800c366:	4f4b      	ldr	r7, [pc, #300]	; (800c494 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800c368:	6802      	ldr	r2, [r0, #0]
 800c36a:	6a12      	ldr	r2, [r2, #32]
 800c36c:	4790      	blx	r2
 800c36e:	f8da 0000 	ldr.w	r0, [sl]
 800c372:	6802      	ldr	r2, [r0, #0]
 800c374:	ad08      	add	r5, sp, #32
 800c376:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800c378:	4790      	blx	r2
 800c37a:	f825 9d0c 	strh.w	r9, [r5, #-12]!
 800c37e:	f8bb 3000 	ldrh.w	r3, [fp]
 800c382:	9300      	str	r3, [sp, #0]
 800c384:	4628      	mov	r0, r5
 800c386:	883b      	ldrh	r3, [r7, #0]
 800c388:	9301      	str	r3, [sp, #4]
 800c38a:	f002 fe73 	bl	800f074 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c38e:	f8ab 0000 	strh.w	r0, [fp]
 800c392:	4628      	mov	r0, r5
 800c394:	f002 fea8 	bl	800f0e8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c398:	f8da b000 	ldr.w	fp, [sl]
 800c39c:	8038      	strh	r0, [r7, #0]
 800c39e:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
 800c3a2:	9302      	str	r3, [sp, #8]
 800c3a4:	4648      	mov	r0, r9
 800c3a6:	f8db 7040 	ldr.w	r7, [fp, #64]	; 0x40
 800c3aa:	f002 fda3 	bl	800eef4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c3ae:	f8da 2000 	ldr.w	r2, [sl]
 800c3b2:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 800c3b6:	63d0      	str	r0, [r2, #60]	; 0x3c
 800c3b8:	6822      	ldr	r2, [r4, #0]
 800c3ba:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 800c3be:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800c3c0:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 800c3c4:	2200      	movs	r2, #0
 800c3c6:	4611      	mov	r1, r2
 800c3c8:	4620      	mov	r0, r4
 800c3ca:	4798      	blx	r3
 800c3cc:	2201      	movs	r2, #1
 800c3ce:	f894 b025 	ldrb.w	fp, [r4, #37]	; 0x25
 800c3d2:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800c3d6:	f9b8 1004 	ldrsh.w	r1, [r8, #4]
 800c3da:	1d22      	adds	r2, r4, #4
 800c3dc:	2900      	cmp	r1, #0
 800c3de:	d051      	beq.n	800c484 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x144>
 800c3e0:	f9b8 1006 	ldrsh.w	r1, [r8, #6]
 800c3e4:	2900      	cmp	r1, #0
 800c3e6:	d04d      	beq.n	800c484 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x144>
 800c3e8:	6810      	ldr	r0, [r2, #0]
 800c3ea:	6851      	ldr	r1, [r2, #4]
 800c3ec:	f10d 0c18 	add.w	ip, sp, #24
 800c3f0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800c3f4:	4641      	mov	r1, r8
 800c3f6:	a806      	add	r0, sp, #24
 800c3f8:	f7ff fc76 	bl	800bce8 <_ZN8touchgfx4RectaNERKS0_>
 800c3fc:	4628      	mov	r0, r5
 800c3fe:	f002 ffc5 	bl	800f38c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c402:	4680      	mov	r8, r0
 800c404:	f7fc fa90 	bl	8008928 <_ZN8touchgfx3HAL3lcdEv>
 800c408:	6802      	ldr	r2, [r0, #0]
 800c40a:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800c40c:	4790      	blx	r2
 800c40e:	4580      	cmp	r8, r0
 800c410:	d03d      	beq.n	800c48e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x14e>
 800c412:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800c414:	b150      	cbz	r0, 800c42c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xec>
 800c416:	4628      	mov	r0, r5
 800c418:	f002 ffb8 	bl	800f38c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c41c:	4605      	mov	r5, r0
 800c41e:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800c420:	6803      	ldr	r3, [r0, #0]
 800c422:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c424:	4798      	blx	r3
 800c426:	1a2b      	subs	r3, r5, r0
 800c428:	4258      	negs	r0, r3
 800c42a:	4158      	adcs	r0, r3
 800c42c:	f886 0076 	strb.w	r0, [r6, #118]	; 0x76
 800c430:	6822      	ldr	r2, [r4, #0]
 800c432:	6963      	ldr	r3, [r4, #20]
 800c434:	9303      	str	r3, [sp, #12]
 800c436:	2500      	movs	r5, #0
 800c438:	6165      	str	r5, [r4, #20]
 800c43a:	4620      	mov	r0, r4
 800c43c:	6892      	ldr	r2, [r2, #8]
 800c43e:	a906      	add	r1, sp, #24
 800c440:	4790      	blx	r2
 800c442:	9b03      	ldr	r3, [sp, #12]
 800c444:	6163      	str	r3, [r4, #20]
 800c446:	f886 5076 	strb.w	r5, [r6, #118]	; 0x76
 800c44a:	6823      	ldr	r3, [r4, #0]
 800c44c:	f884 b025 	strb.w	fp, [r4, #37]	; 0x25
 800c450:	4620      	mov	r0, r4
 800c452:	4c11      	ldr	r4, [pc, #68]	; (800c498 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>)
 800c454:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c456:	4652      	mov	r2, sl
 800c458:	4649      	mov	r1, r9
 800c45a:	4798      	blx	r3
 800c45c:	6820      	ldr	r0, [r4, #0]
 800c45e:	9b02      	ldr	r3, [sp, #8]
 800c460:	9a00      	ldr	r2, [sp, #0]
 800c462:	e9c0 370f 	strd	r3, r7, [r0, #60]	; 0x3c
 800c466:	4b0d      	ldr	r3, [pc, #52]	; (800c49c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>)
 800c468:	801a      	strh	r2, [r3, #0]
 800c46a:	4b0a      	ldr	r3, [pc, #40]	; (800c494 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800c46c:	9a01      	ldr	r2, [sp, #4]
 800c46e:	801a      	strh	r2, [r3, #0]
 800c470:	6803      	ldr	r3, [r0, #0]
 800c472:	6a1b      	ldr	r3, [r3, #32]
 800c474:	4798      	blx	r3
 800c476:	6820      	ldr	r0, [r4, #0]
 800c478:	6803      	ldr	r3, [r0, #0]
 800c47a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c47c:	4798      	blx	r3
 800c47e:	b009      	add	sp, #36	; 0x24
 800c480:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c484:	6810      	ldr	r0, [r2, #0]
 800c486:	6851      	ldr	r1, [r2, #4]
 800c488:	ab06      	add	r3, sp, #24
 800c48a:	c303      	stmia	r3!, {r0, r1}
 800c48c:	e7b6      	b.n	800c3fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xbc>
 800c48e:	2000      	movs	r0, #0
 800c490:	e7cc      	b.n	800c42c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xec>
 800c492:	bf00      	nop
 800c494:	200268fc 	.word	0x200268fc
 800c498:	20026900 	.word	0x20026900
 800c49c:	200268fa 	.word	0x200268fa

0800c4a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800c4a0:	b510      	push	{r4, lr}
 800c4a2:	4b07      	ldr	r3, [pc, #28]	; (800c4c0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800c4a4:	781b      	ldrb	r3, [r3, #0]
 800c4a6:	4604      	mov	r4, r0
 800c4a8:	b13b      	cbz	r3, 800c4ba <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c4aa:	6803      	ldr	r3, [r0, #0]
 800c4ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c4ae:	4798      	blx	r3
 800c4b0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c4b2:	4283      	cmp	r3, r0
 800c4b4:	d101      	bne.n	800c4ba <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c4b6:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800c4b8:	bd10      	pop	{r4, pc}
 800c4ba:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800c4bc:	e7fc      	b.n	800c4b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800c4be:	bf00      	nop
 800c4c0:	200268fe 	.word	0x200268fe

0800c4c4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800c4c4:	b510      	push	{r4, lr}
 800c4c6:	4b0b      	ldr	r3, [pc, #44]	; (800c4f4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800c4c8:	781b      	ldrb	r3, [r3, #0]
 800c4ca:	4604      	mov	r4, r0
 800c4cc:	b95b      	cbnz	r3, 800c4e6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800c4ce:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800c4d2:	2b02      	cmp	r3, #2
 800c4d4:	d007      	beq.n	800c4e6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800c4d6:	6840      	ldr	r0, [r0, #4]
 800c4d8:	f000 fbc8 	bl	800cc6c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800c4dc:	b118      	cbz	r0, 800c4e6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800c4de:	6862      	ldr	r2, [r4, #4]
 800c4e0:	7a53      	ldrb	r3, [r2, #9]
 800c4e2:	2b00      	cmp	r3, #0
 800c4e4:	d0fc      	beq.n	800c4e0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800c4e6:	f7fd ff55 	bl	800a394 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800c4ea:	4620      	mov	r0, r4
 800c4ec:	f7ff ffd8 	bl	800c4a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c4f0:	bd10      	pop	{r4, pc}
 800c4f2:	bf00      	nop
 800c4f4:	200268fe 	.word	0x200268fe

0800c4f8 <_ZN8touchgfx3HAL10initializeEv>:
 800c4f8:	b510      	push	{r4, lr}
 800c4fa:	4604      	mov	r4, r0
 800c4fc:	f7fd ff38 	bl	800a370 <_ZN8touchgfx10OSWrappers10initializeEv>
 800c500:	6860      	ldr	r0, [r4, #4]
 800c502:	6803      	ldr	r3, [r0, #0]
 800c504:	68db      	ldr	r3, [r3, #12]
 800c506:	4798      	blx	r3
 800c508:	68e0      	ldr	r0, [r4, #12]
 800c50a:	6803      	ldr	r3, [r0, #0]
 800c50c:	689b      	ldr	r3, [r3, #8]
 800c50e:	4798      	blx	r3
 800c510:	6823      	ldr	r3, [r4, #0]
 800c512:	4620      	mov	r0, r4
 800c514:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800c516:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c51a:	4718      	bx	r3

0800c51c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800c51c:	b508      	push	{r3, lr}
 800c51e:	290c      	cmp	r1, #12
 800c520:	d817      	bhi.n	800c552 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800c522:	e8df f001 	tbb	[pc, r1]
 800c526:	090b      	.short	0x090b
 800c528:	0d0d0d07 	.word	0x0d0d0d07
 800c52c:	1414140d 	.word	0x1414140d
 800c530:	1414      	.short	0x1414
 800c532:	0d          	.byte	0x0d
 800c533:	00          	.byte	0x00
 800c534:	2020      	movs	r0, #32
 800c536:	bd08      	pop	{r3, pc}
 800c538:	2018      	movs	r0, #24
 800c53a:	e7fc      	b.n	800c536 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c53c:	2010      	movs	r0, #16
 800c53e:	e7fa      	b.n	800c536 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c540:	4b05      	ldr	r3, [pc, #20]	; (800c558 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800c542:	4a06      	ldr	r2, [pc, #24]	; (800c55c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800c544:	4806      	ldr	r0, [pc, #24]	; (800c560 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800c546:	f44f 710c 	mov.w	r1, #560	; 0x230
 800c54a:	f00e fa4b 	bl	801a9e4 <__assert_func>
 800c54e:	2008      	movs	r0, #8
 800c550:	e7f1      	b.n	800c536 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c552:	2000      	movs	r0, #0
 800c554:	e7ef      	b.n	800c536 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c556:	bf00      	nop
 800c558:	0801cf5b 	.word	0x0801cf5b
 800c55c:	0801d2f0 	.word	0x0801d2f0
 800c560:	0801ce62 	.word	0x0801ce62

0800c564 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800c564:	b570      	push	{r4, r5, r6, lr}
 800c566:	460d      	mov	r5, r1
 800c568:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800c56c:	4616      	mov	r6, r2
 800c56e:	461c      	mov	r4, r3
 800c570:	f7ff ffd4 	bl	800c51c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800c574:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800c578:	10c0      	asrs	r0, r0, #3
 800c57a:	fb06 5101 	mla	r1, r6, r1, r5
 800c57e:	fb00 4001 	mla	r0, r0, r1, r4
 800c582:	bd70      	pop	{r4, r5, r6, pc}

0800c584 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800c584:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c588:	b08a      	sub	sp, #40	; 0x28
 800c58a:	f04f 0c00 	mov.w	ip, #0
 800c58e:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800c592:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800c596:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800c59a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800c59e:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800c5a2:	f8cd c020 	str.w	ip, [sp, #32]
 800c5a6:	f1b8 0f02 	cmp.w	r8, #2
 800c5aa:	4604      	mov	r4, r0
 800c5ac:	469a      	mov	sl, r3
 800c5ae:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800c5b2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800c5b6:	d030      	beq.n	800c61a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800c5b8:	2bff      	cmp	r3, #255	; 0xff
 800c5ba:	d12c      	bne.n	800c616 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 800c5bc:	4560      	cmp	r0, ip
 800c5be:	bf14      	ite	ne
 800c5c0:	2004      	movne	r0, #4
 800c5c2:	2001      	moveq	r0, #1
 800c5c4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c5c8:	9204      	str	r2, [sp, #16]
 800c5ca:	4620      	mov	r0, r4
 800c5cc:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800c5d0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800c5d4:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c5d8:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c5dc:	f8ad 501a 	strh.w	r5, [sp, #26]
 800c5e0:	f7ff ff5e 	bl	800c4a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c5e4:	e9cd 9700 	strd	r9, r7, [sp]
 800c5e8:	4603      	mov	r3, r0
 800c5ea:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800c5ee:	4651      	mov	r1, sl
 800c5f0:	4620      	mov	r0, r4
 800c5f2:	f7ff ffb7 	bl	800c564 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800c5f6:	f8ad 901e 	strh.w	r9, [sp, #30]
 800c5fa:	9005      	str	r0, [sp, #20]
 800c5fc:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 800c600:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800c604:	b106      	cbz	r6, 800c608 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800c606:	b98d      	cbnz	r5, 800c62c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 800c608:	4b12      	ldr	r3, [pc, #72]	; (800c654 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 800c60a:	4a13      	ldr	r2, [pc, #76]	; (800c658 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800c60c:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 800c610:	4812      	ldr	r0, [pc, #72]	; (800c65c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800c612:	f00e f9e7 	bl	801a9e4 <__assert_func>
 800c616:	2004      	movs	r0, #4
 800c618:	e7d4      	b.n	800c5c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800c61a:	2bff      	cmp	r3, #255	; 0xff
 800c61c:	d104      	bne.n	800c628 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 800c61e:	2800      	cmp	r0, #0
 800c620:	bf14      	ite	ne
 800c622:	2040      	movne	r0, #64	; 0x40
 800c624:	2020      	moveq	r0, #32
 800c626:	e7cd      	b.n	800c5c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800c628:	2040      	movs	r0, #64	; 0x40
 800c62a:	e7cb      	b.n	800c5c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800c62c:	6823      	ldr	r3, [r4, #0]
 800c62e:	9d02      	ldr	r5, [sp, #8]
 800c630:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c632:	4620      	mov	r0, r4
 800c634:	4798      	blx	r3
 800c636:	4228      	tst	r0, r5
 800c638:	d104      	bne.n	800c644 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800c63a:	4b09      	ldr	r3, [pc, #36]	; (800c660 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800c63c:	4a06      	ldr	r2, [pc, #24]	; (800c658 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800c63e:	f240 11b1 	movw	r1, #433	; 0x1b1
 800c642:	e7e5      	b.n	800c610 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800c644:	6860      	ldr	r0, [r4, #4]
 800c646:	6803      	ldr	r3, [r0, #0]
 800c648:	a902      	add	r1, sp, #8
 800c64a:	685b      	ldr	r3, [r3, #4]
 800c64c:	4798      	blx	r3
 800c64e:	b00a      	add	sp, #40	; 0x28
 800c650:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c654:	0801cede 	.word	0x0801cede
 800c658:	0801d192 	.word	0x0801d192
 800c65c:	0801ce62 	.word	0x0801ce62
 800c660:	0801cf16 	.word	0x0801cf16

0800c664 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800c664:	b510      	push	{r4, lr}
 800c666:	b08a      	sub	sp, #40	; 0x28
 800c668:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 800c66c:	9408      	str	r4, [sp, #32]
 800c66e:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800c672:	9407      	str	r4, [sp, #28]
 800c674:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800c678:	9406      	str	r4, [sp, #24]
 800c67a:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 800c67e:	9405      	str	r4, [sp, #20]
 800c680:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800c684:	9404      	str	r4, [sp, #16]
 800c686:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800c68a:	9403      	str	r4, [sp, #12]
 800c68c:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 800c690:	9402      	str	r4, [sp, #8]
 800c692:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800c696:	e9cd 3400 	strd	r3, r4, [sp]
 800c69a:	4613      	mov	r3, r2
 800c69c:	2200      	movs	r2, #0
 800c69e:	f7ff ff71 	bl	800c584 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800c6a2:	b00a      	add	sp, #40	; 0x28
 800c6a4:	bd10      	pop	{r4, pc}
	...

0800c6a8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800c6a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c6aa:	b08b      	sub	sp, #44	; 0x2c
 800c6ac:	4616      	mov	r6, r2
 800c6ae:	460d      	mov	r5, r1
 800c6b0:	461f      	mov	r7, r3
 800c6b2:	4604      	mov	r4, r0
 800c6b4:	f7fc f938 	bl	8008928 <_ZN8touchgfx3HAL3lcdEv>
 800c6b8:	6803      	ldr	r3, [r0, #0]
 800c6ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c6bc:	4798      	blx	r3
 800c6be:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800c6c2:	4b0d      	ldr	r3, [pc, #52]	; (800c6f8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800c6c4:	881b      	ldrh	r3, [r3, #0]
 800c6c6:	9306      	str	r3, [sp, #24]
 800c6c8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800c6cc:	9305      	str	r3, [sp, #20]
 800c6ce:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800c6d2:	9304      	str	r3, [sp, #16]
 800c6d4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c6d8:	9303      	str	r3, [sp, #12]
 800c6da:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c6de:	9302      	str	r3, [sp, #8]
 800c6e0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c6e4:	2200      	movs	r2, #0
 800c6e6:	e9cd 7300 	strd	r7, r3, [sp]
 800c6ea:	4629      	mov	r1, r5
 800c6ec:	4633      	mov	r3, r6
 800c6ee:	4620      	mov	r0, r4
 800c6f0:	f7ff ff48 	bl	800c584 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800c6f4:	b00b      	add	sp, #44	; 0x2c
 800c6f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c6f8:	200268fa 	.word	0x200268fa

0800c6fc <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800c6fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c700:	461f      	mov	r7, r3
 800c702:	4b14      	ldr	r3, [pc, #80]	; (800c754 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800c704:	b08a      	sub	sp, #40	; 0x28
 800c706:	4616      	mov	r6, r2
 800c708:	f8b3 8000 	ldrh.w	r8, [r3]
 800c70c:	460d      	mov	r5, r1
 800c70e:	4604      	mov	r4, r0
 800c710:	f7fc f90a 	bl	8008928 <_ZN8touchgfx3HAL3lcdEv>
 800c714:	6803      	ldr	r3, [r0, #0]
 800c716:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c718:	4798      	blx	r3
 800c71a:	2302      	movs	r3, #2
 800c71c:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800c720:	2301      	movs	r3, #1
 800c722:	9305      	str	r3, [sp, #20]
 800c724:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800c728:	9304      	str	r3, [sp, #16]
 800c72a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c72e:	9303      	str	r3, [sp, #12]
 800c730:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c734:	9302      	str	r3, [sp, #8]
 800c736:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c73a:	9008      	str	r0, [sp, #32]
 800c73c:	e9cd 7300 	strd	r7, r3, [sp]
 800c740:	2200      	movs	r2, #0
 800c742:	4633      	mov	r3, r6
 800c744:	4629      	mov	r1, r5
 800c746:	4620      	mov	r0, r4
 800c748:	f7ff ff1c 	bl	800c584 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800c74c:	b00a      	add	sp, #40	; 0x28
 800c74e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c752:	bf00      	nop
 800c754:	200268fa 	.word	0x200268fa

0800c758 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800c758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c75c:	b08b      	sub	sp, #44	; 0x2c
 800c75e:	469b      	mov	fp, r3
 800c760:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800c764:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800c768:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800c76c:	2fff      	cmp	r7, #255	; 0xff
 800c76e:	bf14      	ite	ne
 800c770:	2308      	movne	r3, #8
 800c772:	2302      	moveq	r3, #2
 800c774:	2600      	movs	r6, #0
 800c776:	4604      	mov	r4, r0
 800c778:	4689      	mov	r9, r1
 800c77a:	4692      	mov	sl, r2
 800c77c:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800c780:	9608      	str	r6, [sp, #32]
 800c782:	f7ff fe8d 	bl	800c4a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c786:	e9cd 8500 	strd	r8, r5, [sp]
 800c78a:	4603      	mov	r3, r0
 800c78c:	465a      	mov	r2, fp
 800c78e:	4651      	mov	r1, sl
 800c790:	4620      	mov	r0, r4
 800c792:	f7ff fee7 	bl	800c564 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800c796:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800c79a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c79e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800c7a2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c7a6:	6823      	ldr	r3, [r4, #0]
 800c7a8:	9005      	str	r0, [sp, #20]
 800c7aa:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800c7ae:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800c7b2:	f8ad 601c 	strh.w	r6, [sp, #28]
 800c7b6:	f8ad 801e 	strh.w	r8, [sp, #30]
 800c7ba:	f8cd 9020 	str.w	r9, [sp, #32]
 800c7be:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800c7c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c7c4:	9d02      	ldr	r5, [sp, #8]
 800c7c6:	4620      	mov	r0, r4
 800c7c8:	4798      	blx	r3
 800c7ca:	4228      	tst	r0, r5
 800c7cc:	d106      	bne.n	800c7dc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800c7ce:	4b07      	ldr	r3, [pc, #28]	; (800c7ec <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800c7d0:	4a07      	ldr	r2, [pc, #28]	; (800c7f0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800c7d2:	4808      	ldr	r0, [pc, #32]	; (800c7f4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800c7d4:	f44f 71f4 	mov.w	r1, #488	; 0x1e8
 800c7d8:	f00e f904 	bl	801a9e4 <__assert_func>
 800c7dc:	6860      	ldr	r0, [r4, #4]
 800c7de:	6803      	ldr	r3, [r0, #0]
 800c7e0:	a902      	add	r1, sp, #8
 800c7e2:	685b      	ldr	r3, [r3, #4]
 800c7e4:	4798      	blx	r3
 800c7e6:	b00b      	add	sp, #44	; 0x2c
 800c7e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c7ec:	0801cf16 	.word	0x0801cf16
 800c7f0:	0801d25b 	.word	0x0801d25b
 800c7f4:	0801ce62 	.word	0x0801ce62

0800c7f8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800c7f8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c7fc:	461f      	mov	r7, r3
 800c7fe:	4b0b      	ldr	r3, [pc, #44]	; (800c82c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800c800:	460d      	mov	r5, r1
 800c802:	f8b3 8000 	ldrh.w	r8, [r3]
 800c806:	4616      	mov	r6, r2
 800c808:	4604      	mov	r4, r0
 800c80a:	f7fc f88d 	bl	8008928 <_ZN8touchgfx3HAL3lcdEv>
 800c80e:	6803      	ldr	r3, [r0, #0]
 800c810:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c812:	4798      	blx	r3
 800c814:	463b      	mov	r3, r7
 800c816:	e9cd 8000 	strd	r8, r0, [sp]
 800c81a:	4632      	mov	r2, r6
 800c81c:	4629      	mov	r1, r5
 800c81e:	4620      	mov	r0, r4
 800c820:	f7ff fea0 	bl	800c564 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800c824:	b002      	add	sp, #8
 800c826:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c82a:	bf00      	nop
 800c82c:	200268fa 	.word	0x200268fa

0800c830 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800c830:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c834:	b088      	sub	sp, #32
 800c836:	4698      	mov	r8, r3
 800c838:	2300      	movs	r3, #0
 800c83a:	9306      	str	r3, [sp, #24]
 800c83c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800c840:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800c844:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800c848:	f8ad 6010 	strh.w	r6, [sp, #16]
 800c84c:	e9cd 3100 	strd	r3, r1, [sp]
 800c850:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c854:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c858:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800c85c:	f88d 301c 	strb.w	r3, [sp, #28]
 800c860:	4617      	mov	r7, r2
 800c862:	4604      	mov	r4, r0
 800c864:	f8ad 5012 	strh.w	r5, [sp, #18]
 800c868:	f7ff fe1a 	bl	800c4a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c86c:	4642      	mov	r2, r8
 800c86e:	4603      	mov	r3, r0
 800c870:	4639      	mov	r1, r7
 800c872:	4620      	mov	r0, r4
 800c874:	f7ff ffc0 	bl	800c7f8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c878:	4b16      	ldr	r3, [pc, #88]	; (800c8d4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800c87a:	9003      	str	r0, [sp, #12]
 800c87c:	881b      	ldrh	r3, [r3, #0]
 800c87e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c882:	f7fc f851 	bl	8008928 <_ZN8touchgfx3HAL3lcdEv>
 800c886:	6803      	ldr	r3, [r0, #0]
 800c888:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c88a:	4798      	blx	r3
 800c88c:	f88d 001e 	strb.w	r0, [sp, #30]
 800c890:	f88d 001d 	strb.w	r0, [sp, #29]
 800c894:	b106      	cbz	r6, 800c898 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800c896:	b935      	cbnz	r5, 800c8a6 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800c898:	4b0f      	ldr	r3, [pc, #60]	; (800c8d8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800c89a:	4a10      	ldr	r2, [pc, #64]	; (800c8dc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800c89c:	f240 11cd 	movw	r1, #461	; 0x1cd
 800c8a0:	480f      	ldr	r0, [pc, #60]	; (800c8e0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800c8a2:	f00e f89f 	bl	801a9e4 <__assert_func>
 800c8a6:	6823      	ldr	r3, [r4, #0]
 800c8a8:	9d00      	ldr	r5, [sp, #0]
 800c8aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c8ac:	4620      	mov	r0, r4
 800c8ae:	4798      	blx	r3
 800c8b0:	4228      	tst	r0, r5
 800c8b2:	d104      	bne.n	800c8be <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800c8b4:	4b0b      	ldr	r3, [pc, #44]	; (800c8e4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800c8b6:	4a09      	ldr	r2, [pc, #36]	; (800c8dc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800c8b8:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 800c8bc:	e7f0      	b.n	800c8a0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800c8be:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c8c0:	6860      	ldr	r0, [r4, #4]
 800c8c2:	9306      	str	r3, [sp, #24]
 800c8c4:	6803      	ldr	r3, [r0, #0]
 800c8c6:	4669      	mov	r1, sp
 800c8c8:	685b      	ldr	r3, [r3, #4]
 800c8ca:	4798      	blx	r3
 800c8cc:	b008      	add	sp, #32
 800c8ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c8d2:	bf00      	nop
 800c8d4:	200268fa 	.word	0x200268fa
 800c8d8:	0801cede 	.word	0x0801cede
 800c8dc:	0801d044 	.word	0x0801d044
 800c8e0:	0801ce62 	.word	0x0801ce62
 800c8e4:	0801cf16 	.word	0x0801cf16

0800c8e8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800c8e8:	b570      	push	{r4, r5, r6, lr}
 800c8ea:	b08a      	sub	sp, #40	; 0x28
 800c8ec:	466b      	mov	r3, sp
 800c8ee:	e883 0006 	stmia.w	r3, {r1, r2}
 800c8f2:	4b20      	ldr	r3, [pc, #128]	; (800c974 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800c8f4:	781b      	ldrb	r3, [r3, #0]
 800c8f6:	4604      	mov	r4, r0
 800c8f8:	b933      	cbnz	r3, 800c908 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800c8fa:	4b1f      	ldr	r3, [pc, #124]	; (800c978 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800c8fc:	4a1f      	ldr	r2, [pc, #124]	; (800c97c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800c8fe:	4820      	ldr	r0, [pc, #128]	; (800c980 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800c900:	f240 11f9 	movw	r1, #505	; 0x1f9
 800c904:	f00e f86e 	bl	801a9e4 <__assert_func>
 800c908:	2300      	movs	r3, #0
 800c90a:	9308      	str	r3, [sp, #32]
 800c90c:	2301      	movs	r3, #1
 800c90e:	9302      	str	r3, [sp, #8]
 800c910:	6803      	ldr	r3, [r0, #0]
 800c912:	f8bd 5000 	ldrh.w	r5, [sp]
 800c916:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c918:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800c91c:	4798      	blx	r3
 800c91e:	4632      	mov	r2, r6
 800c920:	4629      	mov	r1, r5
 800c922:	4603      	mov	r3, r0
 800c924:	4620      	mov	r0, r4
 800c926:	f7ff ff67 	bl	800c7f8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c92a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c92c:	9305      	str	r3, [sp, #20]
 800c92e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c932:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c936:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800c93a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c93e:	4b11      	ldr	r3, [pc, #68]	; (800c984 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800c940:	9003      	str	r0, [sp, #12]
 800c942:	881b      	ldrh	r3, [r3, #0]
 800c944:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c948:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c94c:	f7fb ffec 	bl	8008928 <_ZN8touchgfx3HAL3lcdEv>
 800c950:	6803      	ldr	r3, [r0, #0]
 800c952:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c954:	4798      	blx	r3
 800c956:	23ff      	movs	r3, #255	; 0xff
 800c958:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800c95c:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800c960:	6860      	ldr	r0, [r4, #4]
 800c962:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c966:	6803      	ldr	r3, [r0, #0]
 800c968:	a902      	add	r1, sp, #8
 800c96a:	685b      	ldr	r3, [r3, #4]
 800c96c:	4798      	blx	r3
 800c96e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800c970:	b00a      	add	sp, #40	; 0x28
 800c972:	bd70      	pop	{r4, r5, r6, pc}
 800c974:	200268ff 	.word	0x200268ff
 800c978:	0801cdaf 	.word	0x0801cdaf
 800c97c:	0801d0e8 	.word	0x0801d0e8
 800c980:	0801ce62 	.word	0x0801ce62
 800c984:	200268fa 	.word	0x200268fa

0800c988 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800c988:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c98a:	b08b      	sub	sp, #44	; 0x2c
 800c98c:	466d      	mov	r5, sp
 800c98e:	e885 0006 	stmia.w	r5, {r1, r2}
 800c992:	461d      	mov	r5, r3
 800c994:	2300      	movs	r3, #0
 800c996:	9308      	str	r3, [sp, #32]
 800c998:	2301      	movs	r3, #1
 800c99a:	9302      	str	r3, [sp, #8]
 800c99c:	6803      	ldr	r3, [r0, #0]
 800c99e:	f8bd 6000 	ldrh.w	r6, [sp]
 800c9a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c9a4:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800c9a8:	4604      	mov	r4, r0
 800c9aa:	4798      	blx	r3
 800c9ac:	463a      	mov	r2, r7
 800c9ae:	4631      	mov	r1, r6
 800c9b0:	4603      	mov	r3, r0
 800c9b2:	4620      	mov	r0, r4
 800c9b4:	f7ff ff20 	bl	800c7f8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c9b8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c9bc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c9c0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800c9c4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c9c8:	4b0e      	ldr	r3, [pc, #56]	; (800ca04 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800c9ca:	9003      	str	r0, [sp, #12]
 800c9cc:	881b      	ldrh	r3, [r3, #0]
 800c9ce:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c9d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c9d4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c9d8:	9505      	str	r5, [sp, #20]
 800c9da:	f7fb ffa5 	bl	8008928 <_ZN8touchgfx3HAL3lcdEv>
 800c9de:	6803      	ldr	r3, [r0, #0]
 800c9e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9e2:	4798      	blx	r3
 800c9e4:	23ff      	movs	r3, #255	; 0xff
 800c9e6:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800c9ea:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800c9ee:	6860      	ldr	r0, [r4, #4]
 800c9f0:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c9f4:	6803      	ldr	r3, [r0, #0]
 800c9f6:	a902      	add	r1, sp, #8
 800c9f8:	685b      	ldr	r3, [r3, #4]
 800c9fa:	4798      	blx	r3
 800c9fc:	4628      	mov	r0, r5
 800c9fe:	b00b      	add	sp, #44	; 0x2c
 800ca00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ca02:	bf00      	nop
 800ca04:	200268fa 	.word	0x200268fa

0800ca08 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800ca08:	b570      	push	{r4, r5, r6, lr}
 800ca0a:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800ca0e:	4604      	mov	r4, r0
 800ca10:	b19b      	cbz	r3, 800ca3a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800ca12:	2002      	movs	r0, #2
 800ca14:	f7fd fa38 	bl	8009e88 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800ca18:	2300      	movs	r3, #0
 800ca1a:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800ca1e:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800ca22:	6823      	ldr	r3, [r4, #0]
 800ca24:	4620      	mov	r0, r4
 800ca26:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
 800ca2a:	f7ff fd39 	bl	800c4a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ca2e:	462b      	mov	r3, r5
 800ca30:	4601      	mov	r1, r0
 800ca32:	4620      	mov	r0, r4
 800ca34:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ca38:	4718      	bx	r3
 800ca3a:	bd70      	pop	{r4, r5, r6, pc}

0800ca3c <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800ca3c:	4770      	bx	lr

0800ca3e <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800ca3e:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800ca42:	1a13      	subs	r3, r2, r0
 800ca44:	4258      	negs	r0, r3
 800ca46:	4158      	adcs	r0, r3
 800ca48:	4770      	bx	lr

0800ca4a <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800ca4a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800ca4e:	1a9b      	subs	r3, r3, r2
 800ca50:	2b00      	cmp	r3, #0
 800ca52:	bfdc      	itt	le
 800ca54:	6882      	ldrle	r2, [r0, #8]
 800ca56:	189b      	addle	r3, r3, r2
 800ca58:	2b01      	cmp	r3, #1
 800ca5a:	bfcc      	ite	gt
 800ca5c:	2000      	movgt	r0, #0
 800ca5e:	2001      	movle	r0, #1
 800ca60:	4770      	bx	lr

0800ca62 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800ca62:	6902      	ldr	r2, [r0, #16]
 800ca64:	6840      	ldr	r0, [r0, #4]
 800ca66:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800ca6a:	4770      	bx	lr

0800ca6c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800ca6c:	6803      	ldr	r3, [r0, #0]
 800ca6e:	691b      	ldr	r3, [r3, #16]
 800ca70:	4718      	bx	r3

0800ca72 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800ca72:	4770      	bx	lr

0800ca74 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800ca74:	4770      	bx	lr
	...

0800ca78 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800ca78:	b570      	push	{r4, r5, r6, lr}
 800ca7a:	2301      	movs	r3, #1
 800ca7c:	7203      	strb	r3, [r0, #8]
 800ca7e:	4604      	mov	r4, r0
 800ca80:	6840      	ldr	r0, [r0, #4]
 800ca82:	6803      	ldr	r3, [r0, #0]
 800ca84:	699b      	ldr	r3, [r3, #24]
 800ca86:	4798      	blx	r3
 800ca88:	6803      	ldr	r3, [r0, #0]
 800ca8a:	2b08      	cmp	r3, #8
 800ca8c:	4605      	mov	r5, r0
 800ca8e:	d01e      	beq.n	800cace <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800ca90:	d80b      	bhi.n	800caaa <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ca92:	2b02      	cmp	r3, #2
 800ca94:	d027      	beq.n	800cae6 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800ca96:	2b04      	cmp	r3, #4
 800ca98:	d011      	beq.n	800cabe <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800ca9a:	2b01      	cmp	r3, #1
 800ca9c:	d028      	beq.n	800caf0 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800ca9e:	4b17      	ldr	r3, [pc, #92]	; (800cafc <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800caa0:	4a17      	ldr	r2, [pc, #92]	; (800cb00 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800caa2:	4818      	ldr	r0, [pc, #96]	; (800cb04 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800caa4:	218b      	movs	r1, #139	; 0x8b
 800caa6:	f00d ff9d 	bl	801a9e4 <__assert_func>
 800caaa:	2b40      	cmp	r3, #64	; 0x40
 800caac:	d020      	beq.n	800caf0 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800caae:	d801      	bhi.n	800cab4 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800cab0:	2b20      	cmp	r3, #32
 800cab2:	e7f3      	b.n	800ca9c <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800cab4:	2b80      	cmp	r3, #128	; 0x80
 800cab6:	d01b      	beq.n	800caf0 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800cab8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800cabc:	e7ee      	b.n	800ca9c <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800cabe:	6823      	ldr	r3, [r4, #0]
 800cac0:	7f01      	ldrb	r1, [r0, #28]
 800cac2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cac4:	4620      	mov	r0, r4
 800cac6:	4798      	blx	r3
 800cac8:	6823      	ldr	r3, [r4, #0]
 800caca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cacc:	e006      	b.n	800cadc <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800cace:	6823      	ldr	r3, [r4, #0]
 800cad0:	7f01      	ldrb	r1, [r0, #28]
 800cad2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cad4:	4620      	mov	r0, r4
 800cad6:	4798      	blx	r3
 800cad8:	6823      	ldr	r3, [r4, #0]
 800cada:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cadc:	4629      	mov	r1, r5
 800cade:	4620      	mov	r0, r4
 800cae0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cae4:	4718      	bx	r3
 800cae6:	6823      	ldr	r3, [r4, #0]
 800cae8:	4620      	mov	r0, r4
 800caea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800caec:	4798      	blx	r3
 800caee:	e7f3      	b.n	800cad8 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800caf0:	6823      	ldr	r3, [r4, #0]
 800caf2:	4620      	mov	r0, r4
 800caf4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800caf6:	4798      	blx	r3
 800caf8:	e7e6      	b.n	800cac8 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800cafa:	bf00      	nop
 800cafc:	0801d339 	.word	0x0801d339
 800cb00:	0801d448 	.word	0x0801d448
 800cb04:	0801d35e 	.word	0x0801d35e

0800cb08 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800cb08:	b570      	push	{r4, r5, r6, lr}
 800cb0a:	4604      	mov	r4, r0
 800cb0c:	460e      	mov	r6, r1
 800cb0e:	6860      	ldr	r0, [r4, #4]
 800cb10:	6803      	ldr	r3, [r0, #0]
 800cb12:	685b      	ldr	r3, [r3, #4]
 800cb14:	4798      	blx	r3
 800cb16:	2800      	cmp	r0, #0
 800cb18:	d1f9      	bne.n	800cb0e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800cb1a:	4d0b      	ldr	r5, [pc, #44]	; (800cb48 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x40>)
 800cb1c:	6828      	ldr	r0, [r5, #0]
 800cb1e:	6803      	ldr	r3, [r0, #0]
 800cb20:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800cb22:	4798      	blx	r3
 800cb24:	f7fd fc58 	bl	800a3d8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800cb28:	6860      	ldr	r0, [r4, #4]
 800cb2a:	6803      	ldr	r3, [r0, #0]
 800cb2c:	4631      	mov	r1, r6
 800cb2e:	689b      	ldr	r3, [r3, #8]
 800cb30:	4798      	blx	r3
 800cb32:	6823      	ldr	r3, [r4, #0]
 800cb34:	4620      	mov	r0, r4
 800cb36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cb38:	4798      	blx	r3
 800cb3a:	6828      	ldr	r0, [r5, #0]
 800cb3c:	6803      	ldr	r3, [r0, #0]
 800cb3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cb42:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800cb44:	4718      	bx	r3
 800cb46:	bf00      	nop
 800cb48:	20026900 	.word	0x20026900

0800cb4c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800cb4c:	b508      	push	{r3, lr}
 800cb4e:	f7fd fc21 	bl	800a394 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800cb52:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800cb56:	f7fd bc33 	b.w	800a3c0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800cb5a <_ZN8touchgfx13DMA_Interface5startEv>:
 800cb5a:	b510      	push	{r4, lr}
 800cb5c:	4604      	mov	r4, r0
 800cb5e:	6840      	ldr	r0, [r0, #4]
 800cb60:	6803      	ldr	r3, [r0, #0]
 800cb62:	681b      	ldr	r3, [r3, #0]
 800cb64:	4798      	blx	r3
 800cb66:	b948      	cbnz	r0, 800cb7c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cb68:	7a63      	ldrb	r3, [r4, #9]
 800cb6a:	b13b      	cbz	r3, 800cb7c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cb6c:	7a23      	ldrb	r3, [r4, #8]
 800cb6e:	b92b      	cbnz	r3, 800cb7c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cb70:	6823      	ldr	r3, [r4, #0]
 800cb72:	4620      	mov	r0, r4
 800cb74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cb7a:	4718      	bx	r3
 800cb7c:	bd10      	pop	{r4, pc}
	...

0800cb80 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800cb80:	b510      	push	{r4, lr}
 800cb82:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800cb86:	1b12      	subs	r2, r2, r4
 800cb88:	2a00      	cmp	r2, #0
 800cb8a:	bfdc      	itt	le
 800cb8c:	6883      	ldrle	r3, [r0, #8]
 800cb8e:	18d2      	addle	r2, r2, r3
 800cb90:	2a01      	cmp	r2, #1
 800cb92:	dd18      	ble.n	800cbc6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800cb94:	6843      	ldr	r3, [r0, #4]
 800cb96:	f101 021c 	add.w	r2, r1, #28
 800cb9a:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800cb9e:	f851 4b04 	ldr.w	r4, [r1], #4
 800cba2:	f843 4b04 	str.w	r4, [r3], #4
 800cba6:	4291      	cmp	r1, r2
 800cba8:	d1f9      	bne.n	800cb9e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800cbaa:	880a      	ldrh	r2, [r1, #0]
 800cbac:	801a      	strh	r2, [r3, #0]
 800cbae:	788a      	ldrb	r2, [r1, #2]
 800cbb0:	709a      	strb	r2, [r3, #2]
 800cbb2:	68c3      	ldr	r3, [r0, #12]
 800cbb4:	6882      	ldr	r2, [r0, #8]
 800cbb6:	f3bf 8f5b 	dmb	ish
 800cbba:	3301      	adds	r3, #1
 800cbbc:	429a      	cmp	r2, r3
 800cbbe:	bfd8      	it	le
 800cbc0:	1a9b      	suble	r3, r3, r2
 800cbc2:	60c3      	str	r3, [r0, #12]
 800cbc4:	bd10      	pop	{r4, pc}
 800cbc6:	4b03      	ldr	r3, [pc, #12]	; (800cbd4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800cbc8:	4a03      	ldr	r2, [pc, #12]	; (800cbd8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800cbca:	4804      	ldr	r0, [pc, #16]	; (800cbdc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800cbcc:	2139      	movs	r1, #57	; 0x39
 800cbce:	f00d ff09 	bl	801a9e4 <__assert_func>
 800cbd2:	bf00      	nop
 800cbd4:	0801d384 	.word	0x0801d384
 800cbd8:	0801d478 	.word	0x0801d478
 800cbdc:	0801d35e 	.word	0x0801d35e

0800cbe0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800cbe0:	b510      	push	{r4, lr}
 800cbe2:	6803      	ldr	r3, [r0, #0]
 800cbe4:	681b      	ldr	r3, [r3, #0]
 800cbe6:	4604      	mov	r4, r0
 800cbe8:	4798      	blx	r3
 800cbea:	b128      	cbz	r0, 800cbf8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800cbec:	4b07      	ldr	r3, [pc, #28]	; (800cc0c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800cbee:	4a08      	ldr	r2, [pc, #32]	; (800cc10 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800cbf0:	4808      	ldr	r0, [pc, #32]	; (800cc14 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800cbf2:	213f      	movs	r1, #63	; 0x3f
 800cbf4:	f00d fef6 	bl	801a9e4 <__assert_func>
 800cbf8:	6923      	ldr	r3, [r4, #16]
 800cbfa:	68a2      	ldr	r2, [r4, #8]
 800cbfc:	f3bf 8f5b 	dmb	ish
 800cc00:	3301      	adds	r3, #1
 800cc02:	429a      	cmp	r2, r3
 800cc04:	bfd8      	it	le
 800cc06:	1a9b      	suble	r3, r3, r2
 800cc08:	6123      	str	r3, [r4, #16]
 800cc0a:	bd10      	pop	{r4, pc}
 800cc0c:	0801d3a7 	.word	0x0801d3a7
 800cc10:	0801d4c6 	.word	0x0801d4c6
 800cc14:	0801d35e 	.word	0x0801d35e

0800cc18 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800cc18:	b570      	push	{r4, r5, r6, lr}
 800cc1a:	4604      	mov	r4, r0
 800cc1c:	6840      	ldr	r0, [r0, #4]
 800cc1e:	6803      	ldr	r3, [r0, #0]
 800cc20:	681b      	ldr	r3, [r3, #0]
 800cc22:	4798      	blx	r3
 800cc24:	4605      	mov	r5, r0
 800cc26:	b930      	cbnz	r0, 800cc36 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800cc28:	7a23      	ldrb	r3, [r4, #8]
 800cc2a:	b123      	cbz	r3, 800cc36 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800cc2c:	6860      	ldr	r0, [r4, #4]
 800cc2e:	6803      	ldr	r3, [r0, #0]
 800cc30:	695b      	ldr	r3, [r3, #20]
 800cc32:	4798      	blx	r3
 800cc34:	7225      	strb	r5, [r4, #8]
 800cc36:	6860      	ldr	r0, [r4, #4]
 800cc38:	6803      	ldr	r3, [r0, #0]
 800cc3a:	681b      	ldr	r3, [r3, #0]
 800cc3c:	4798      	blx	r3
 800cc3e:	b928      	cbnz	r0, 800cc4c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800cc40:	6823      	ldr	r3, [r4, #0]
 800cc42:	4620      	mov	r0, r4
 800cc44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cc46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cc4a:	4718      	bx	r3
 800cc4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cc50:	f7fd bbce 	b.w	800a3f0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800cc54 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800cc54:	b510      	push	{r4, lr}
 800cc56:	4c04      	ldr	r4, [pc, #16]	; (800cc68 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800cc58:	6082      	str	r2, [r0, #8]
 800cc5a:	2200      	movs	r2, #0
 800cc5c:	e9c0 4100 	strd	r4, r1, [r0]
 800cc60:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800cc64:	bd10      	pop	{r4, pc}
 800cc66:	bf00      	nop
 800cc68:	0801d42c 	.word	0x0801d42c

0800cc6c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800cc6c:	6840      	ldr	r0, [r0, #4]
 800cc6e:	6803      	ldr	r3, [r0, #0]
 800cc70:	681b      	ldr	r3, [r3, #0]
 800cc72:	4718      	bx	r3

0800cc74 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800cc74:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800cc78:	4770      	bx	lr

0800cc7a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800cc7a:	b570      	push	{r4, r5, r6, lr}
 800cc7c:	790b      	ldrb	r3, [r1, #4]
 800cc7e:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800cc82:	2b00      	cmp	r3, #0
 800cc84:	bf0c      	ite	eq
 800cc86:	2301      	moveq	r3, #1
 800cc88:	2300      	movne	r3, #0
 800cc8a:	4604      	mov	r4, r0
 800cc8c:	460e      	mov	r6, r1
 800cc8e:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800cc92:	d110      	bne.n	800ccb6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800cc94:	b185      	cbz	r5, 800ccb8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3e>
 800cc96:	7933      	ldrb	r3, [r6, #4]
 800cc98:	2b01      	cmp	r3, #1
 800cc9a:	d113      	bne.n	800ccc4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800cc9c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800cc9e:	b188      	cbz	r0, 800ccc4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800cca0:	6803      	ldr	r3, [r0, #0]
 800cca2:	68db      	ldr	r3, [r3, #12]
 800cca4:	4798      	blx	r3
 800cca6:	b168      	cbz	r0, 800ccc4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800cca8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ccaa:	6803      	ldr	r3, [r0, #0]
 800ccac:	4621      	mov	r1, r4
 800ccae:	689b      	ldr	r3, [r3, #8]
 800ccb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ccb4:	4718      	bx	r3
 800ccb6:	b12d      	cbz	r5, 800ccc4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800ccb8:	6823      	ldr	r3, [r4, #0]
 800ccba:	4620      	mov	r0, r4
 800ccbc:	695b      	ldr	r3, [r3, #20]
 800ccbe:	4798      	blx	r3
 800ccc0:	2d00      	cmp	r5, #0
 800ccc2:	d1e8      	bne.n	800cc96 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800ccc4:	bd70      	pop	{r4, r5, r6, pc}

0800ccc6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800ccc6:	b538      	push	{r3, r4, r5, lr}
 800ccc8:	880b      	ldrh	r3, [r1, #0]
 800ccca:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800cccc:	4605      	mov	r5, r0
 800ccce:	8813      	ldrh	r3, [r2, #0]
 800ccd0:	f825 3f30 	strh.w	r3, [r5, #48]!
 800ccd4:	4604      	mov	r4, r0
 800ccd6:	4628      	mov	r0, r5
 800ccd8:	f002 f9cc 	bl	800f074 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ccdc:	8120      	strh	r0, [r4, #8]
 800ccde:	4628      	mov	r0, r5
 800cce0:	f002 fa02 	bl	800f0e8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800cce4:	8160      	strh	r0, [r4, #10]
 800cce6:	bd38      	pop	{r3, r4, r5, pc}

0800cce8 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800cce8:	b510      	push	{r4, lr}
 800ccea:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800ccee:	2bff      	cmp	r3, #255	; 0xff
 800ccf0:	4604      	mov	r4, r0
 800ccf2:	d006      	beq.n	800cd02 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800ccf4:	2300      	movs	r3, #0
 800ccf6:	8003      	strh	r3, [r0, #0]
 800ccf8:	8043      	strh	r3, [r0, #2]
 800ccfa:	8083      	strh	r3, [r0, #4]
 800ccfc:	80c3      	strh	r3, [r0, #6]
 800ccfe:	4620      	mov	r0, r4
 800cd00:	bd10      	pop	{r4, pc}
 800cd02:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800cd06:	b11b      	cbz	r3, 800cd10 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800cd08:	3130      	adds	r1, #48	; 0x30
 800cd0a:	f002 fa27 	bl	800f15c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800cd0e:	e7f6      	b.n	800ccfe <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800cd10:	312e      	adds	r1, #46	; 0x2e
 800cd12:	e7fa      	b.n	800cd0a <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800cd14 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800cd14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cd18:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cd1c:	b08b      	sub	sp, #44	; 0x2c
 800cd1e:	4604      	mov	r4, r0
 800cd20:	4689      	mov	r9, r1
 800cd22:	2b00      	cmp	r3, #0
 800cd24:	d043      	beq.n	800cdae <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9a>
 800cd26:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800cd28:	f8ad 3014 	strh.w	r3, [sp, #20]
 800cd2c:	a805      	add	r0, sp, #20
 800cd2e:	f002 f9a1 	bl	800f074 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800cd32:	4607      	mov	r7, r0
 800cd34:	fa0f f880 	sxth.w	r8, r0
 800cd38:	a805      	add	r0, sp, #20
 800cd3a:	f002 f9d5 	bl	800f0e8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800cd3e:	f9b9 6000 	ldrsh.w	r6, [r9]
 800cd42:	f8b9 2004 	ldrh.w	r2, [r9, #4]
 800cd46:	4432      	add	r2, r6
 800cd48:	b292      	uxth	r2, r2
 800cd4a:	2300      	movs	r3, #0
 800cd4c:	fa0f fe82 	sxth.w	lr, r2
 800cd50:	459e      	cmp	lr, r3
 800cd52:	fa0f fc80 	sxth.w	ip, r0
 800cd56:	9306      	str	r3, [sp, #24]
 800cd58:	dd2b      	ble.n	800cdb2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800cd5a:	45b0      	cmp	r8, r6
 800cd5c:	dd29      	ble.n	800cdb2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800cd5e:	f9b9 5002 	ldrsh.w	r5, [r9, #2]
 800cd62:	f8b9 3006 	ldrh.w	r3, [r9, #6]
 800cd66:	442b      	add	r3, r5
 800cd68:	b29b      	uxth	r3, r3
 800cd6a:	b219      	sxth	r1, r3
 800cd6c:	2900      	cmp	r1, #0
 800cd6e:	dd20      	ble.n	800cdb2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800cd70:	45ac      	cmp	ip, r5
 800cd72:	dd1e      	ble.n	800cdb2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800cd74:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800cd78:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800cd7c:	45f0      	cmp	r8, lr
 800cd7e:	bfb8      	it	lt
 800cd80:	463a      	movlt	r2, r7
 800cd82:	458c      	cmp	ip, r1
 800cd84:	bfb8      	it	lt
 800cd86:	4603      	movlt	r3, r0
 800cd88:	1b92      	subs	r2, r2, r6
 800cd8a:	1b5b      	subs	r3, r3, r5
 800cd8c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800cd90:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cd94:	f8ad 6018 	strh.w	r6, [sp, #24]
 800cd98:	f8ad 501a 	strh.w	r5, [sp, #26]
 800cd9c:	4b1d      	ldr	r3, [pc, #116]	; (800ce14 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>)
 800cd9e:	681b      	ldr	r3, [r3, #0]
 800cda0:	b953      	cbnz	r3, 800cdb8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa4>
 800cda2:	4b1d      	ldr	r3, [pc, #116]	; (800ce18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x104>)
 800cda4:	4a1d      	ldr	r2, [pc, #116]	; (800ce1c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800cda6:	481e      	ldr	r0, [pc, #120]	; (800ce20 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800cda8:	21b8      	movs	r1, #184	; 0xb8
 800cdaa:	f00d fe1b 	bl	801a9e4 <__assert_func>
 800cdae:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800cdb0:	e7ba      	b.n	800cd28 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800cdb2:	2300      	movs	r3, #0
 800cdb4:	9307      	str	r3, [sp, #28]
 800cdb6:	e7f1      	b.n	800cd9c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x88>
 800cdb8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800cdbc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800cdc0:	429a      	cmp	r2, r3
 800cdc2:	d024      	beq.n	800ce0e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xfa>
 800cdc4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800cdc8:	b30b      	cbz	r3, 800ce0e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xfa>
 800cdca:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800cdce:	b1f3      	cbz	r3, 800ce0e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xfa>
 800cdd0:	2300      	movs	r3, #0
 800cdd2:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800cdd6:	6823      	ldr	r3, [r4, #0]
 800cdd8:	a908      	add	r1, sp, #32
 800cdda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cddc:	4620      	mov	r0, r4
 800cdde:	4798      	blx	r3
 800cde0:	4b10      	ldr	r3, [pc, #64]	; (800ce24 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800cde2:	681b      	ldr	r3, [r3, #0]
 800cde4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800cde8:	b10a      	cbz	r2, 800cdee <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800cdea:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800cdec:	b900      	cbnz	r0, 800cdf0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xdc>
 800cdee:	6898      	ldr	r0, [r3, #8]
 800cdf0:	6801      	ldr	r1, [r0, #0]
 800cdf2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800cdf6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800cdfa:	2501      	movs	r5, #1
 800cdfc:	9502      	str	r5, [sp, #8]
 800cdfe:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800ce02:	9401      	str	r4, [sp, #4]
 800ce04:	ac06      	add	r4, sp, #24
 800ce06:	9400      	str	r4, [sp, #0]
 800ce08:	68cc      	ldr	r4, [r1, #12]
 800ce0a:	a905      	add	r1, sp, #20
 800ce0c:	47a0      	blx	r4
 800ce0e:	b00b      	add	sp, #44	; 0x2c
 800ce10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ce14:	200269a8 	.word	0x200269a8
 800ce18:	0801d564 	.word	0x0801d564
 800ce1c:	0801d638 	.word	0x0801d638
 800ce20:	0801d5a0 	.word	0x0801d5a0
 800ce24:	20026900 	.word	0x20026900

0800ce28 <_ZN8touchgfx3LCD4initEv>:
 800ce28:	4770      	bx	lr

0800ce2a <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800ce2a:	2000      	movs	r0, #0
 800ce2c:	4770      	bx	lr

0800ce2e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800ce2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce32:	b091      	sub	sp, #68	; 0x44
 800ce34:	4699      	mov	r9, r3
 800ce36:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800ce3a:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800ce3c:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800ce40:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800ce44:	4680      	mov	r8, r0
 800ce46:	4617      	mov	r7, r2
 800ce48:	a80e      	add	r0, sp, #56	; 0x38
 800ce4a:	f9ba 2008 	ldrsh.w	r2, [sl, #8]
 800ce4e:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800ce52:	2500      	movs	r5, #0
 800ce54:	910d      	str	r1, [sp, #52]	; 0x34
 800ce56:	950e      	str	r5, [sp, #56]	; 0x38
 800ce58:	f000 f9fa 	bl	800d250 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ce5c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800ce5e:	f8d9 6000 	ldr.w	r6, [r9]
 800ce62:	6818      	ldr	r0, [r3, #0]
 800ce64:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800ce66:	f9b4 b000 	ldrsh.w	fp, [r4]
 800ce6a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ce6e:	eb02 0c06 	add.w	ip, r2, r6
 800ce72:	1b80      	subs	r0, r0, r6
 800ce74:	ebab 0e0c 	sub.w	lr, fp, ip
 800ce78:	4570      	cmp	r0, lr
 800ce7a:	f340 80bd 	ble.w	800cff8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800ce7e:	88a1      	ldrh	r1, [r4, #4]
 800ce80:	4459      	add	r1, fp
 800ce82:	b209      	sxth	r1, r1
 800ce84:	458c      	cmp	ip, r1
 800ce86:	f300 80b7 	bgt.w	800cff8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800ce8a:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 800ce8e:	ed97 4a09 	vldr	s8, [r7, #36]	; 0x24
 800ce92:	edd7 4a0b 	vldr	s9, [r7, #44]	; 0x2c
 800ce96:	edd9 6a07 	vldr	s13, [r9, #28]
 800ce9a:	edd9 1a0a 	vldr	s3, [r9, #40]	; 0x28
 800ce9e:	ed99 2a0d 	vldr	s4, [r9, #52]	; 0x34
 800cea2:	4283      	cmp	r3, r0
 800cea4:	bfa8      	it	ge
 800cea6:	4603      	movge	r3, r0
 800cea8:	ee07 3a90 	vmov	s15, r3
 800ceac:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800ceb0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800ceb4:	ee25 4a04 	vmul.f32	s8, s10, s8
 800ceb8:	ee65 4a24 	vmul.f32	s9, s10, s9
 800cebc:	ee25 5a27 	vmul.f32	s10, s10, s15
 800cec0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800cec4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800cec8:	45e3      	cmp	fp, ip
 800ceca:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800cece:	ee32 1a05 	vadd.f32	s2, s4, s10
 800ced2:	ee36 0a84 	vadd.f32	s0, s13, s8
 800ced6:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ceda:	ee22 2a07 	vmul.f32	s4, s4, s14
 800cede:	f340 808e 	ble.w	800cffe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1d0>
 800cee2:	fb9e f5f3 	sdiv	r5, lr, r3
 800cee6:	ee07 5a10 	vmov	s14, r5
 800ceea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ceee:	2d00      	cmp	r5, #0
 800cef0:	fb03 e415 	mls	r4, r3, r5, lr
 800cef4:	eea7 0a04 	vfma.f32	s0, s14, s8
 800cef8:	eee7 0a24 	vfma.f32	s1, s14, s9
 800cefc:	eea7 1a05 	vfma.f32	s2, s14, s10
 800cf00:	dd13      	ble.n	800cf2a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800cf02:	ee70 6a44 	vsub.f32	s13, s0, s8
 800cf06:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800cf0a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800cf0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf12:	bf18      	it	ne
 800cf14:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800cf18:	ee31 2a45 	vsub.f32	s4, s2, s10
 800cf1c:	bf08      	it	eq
 800cf1e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800cf22:	ee61 1a87 	vmul.f32	s3, s3, s14
 800cf26:	ee22 2a07 	vmul.f32	s4, s4, s14
 800cf2a:	fb05 f703 	mul.w	r7, r5, r3
 800cf2e:	1bc0      	subs	r0, r0, r7
 800cf30:	443e      	add	r6, r7
 800cf32:	1997      	adds	r7, r2, r6
 800cf34:	4407      	add	r7, r0
 800cf36:	42b9      	cmp	r1, r7
 800cf38:	bfbc      	itt	lt
 800cf3a:	1a88      	sublt	r0, r1, r2
 800cf3c:	1b80      	sublt	r0, r0, r6
 800cf3e:	2800      	cmp	r0, #0
 800cf40:	dd5a      	ble.n	800cff8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800cf42:	fb90 f1f3 	sdiv	r1, r0, r3
 800cf46:	fb03 0211 	mls	r2, r3, r1, r0
 800cf4a:	b90a      	cbnz	r2, 800cf50 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x122>
 800cf4c:	3901      	subs	r1, #1
 800cf4e:	461a      	mov	r2, r3
 800cf50:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800cf54:	f89d b07c 	ldrb.w	fp, [sp, #124]	; 0x7c
 800cf58:	44a4      	add	ip, r4
 800cf5a:	fb03 c505 	mla	r5, r3, r5, ip
 800cf5e:	2900      	cmp	r1, #0
 800cf60:	bfcc      	ite	gt
 800cf62:	469e      	movgt	lr, r3
 800cf64:	4696      	movle	lr, r2
 800cf66:	eef0 6a42 	vmov.f32	s13, s4
 800cf6a:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800cf6e:	ee21 3a23 	vmul.f32	s6, s2, s7
 800cf72:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800cf76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800cf7a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800cf7e:	eeb0 7a61 	vmov.f32	s14, s3
 800cf82:	ee17 0a90 	vmov	r0, s15
 800cf86:	ee73 7a42 	vsub.f32	s15, s6, s4
 800cf8a:	fb90 f6f3 	sdiv	r6, r0, r3
 800cf8e:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800cf92:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800cf96:	ee17 0a90 	vmov	r0, s15
 800cf9a:	fb90 f7f3 	sdiv	r7, r0, r3
 800cf9e:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800cfa2:	900c      	str	r0, [sp, #48]	; 0x30
 800cfa4:	f8d0 8000 	ldr.w	r8, [r0]
 800cfa8:	981c      	ldr	r0, [sp, #112]	; 0x70
 800cfaa:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 800cfae:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 800cfb2:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800cfb6:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 800cfba:	f8cd a020 	str.w	sl, [sp, #32]
 800cfbe:	f9b0 a002 	ldrsh.w	sl, [r0, #2]
 800cfc2:	980d      	ldr	r0, [sp, #52]	; 0x34
 800cfc4:	f8d9 9014 	ldr.w	r9, [r9, #20]
 800cfc8:	9603      	str	r6, [sp, #12]
 800cfca:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800cfce:	ee16 0a90 	vmov	r0, s13
 800cfd2:	fb07 0704 	mla	r7, r7, r4, r0
 800cfd6:	ee17 0a10 	vmov	r0, s14
 800cfda:	fb06 0604 	mla	r6, r6, r4, r0
 800cfde:	e9cd 3600 	strd	r3, r6, [sp]
 800cfe2:	44ca      	add	sl, r9
 800cfe4:	f8cd a01c 	str.w	sl, [sp, #28]
 800cfe8:	9506      	str	r5, [sp, #24]
 800cfea:	9702      	str	r7, [sp, #8]
 800cfec:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800cff0:	980c      	ldr	r0, [sp, #48]	; 0x30
 800cff2:	ebae 0304 	sub.w	r3, lr, r4
 800cff6:	47a8      	blx	r5
 800cff8:	b011      	add	sp, #68	; 0x44
 800cffa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cffe:	462c      	mov	r4, r5
 800d000:	e797      	b.n	800cf32 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x104>

0800d002 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800d002:	b510      	push	{r4, lr}
 800d004:	2b02      	cmp	r3, #2
 800d006:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d00a:	d00b      	beq.n	800d024 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800d00c:	2b03      	cmp	r3, #3
 800d00e:	d00e      	beq.n	800d02e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800d010:	2b01      	cmp	r3, #1
 800d012:	d001      	beq.n	800d018 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800d014:	1860      	adds	r0, r4, r1
 800d016:	bd10      	pop	{r4, pc}
 800d018:	8880      	ldrh	r0, [r0, #4]
 800d01a:	4420      	add	r0, r4
 800d01c:	b200      	sxth	r0, r0
 800d01e:	1a80      	subs	r0, r0, r2
 800d020:	3801      	subs	r0, #1
 800d022:	e7f8      	b.n	800d016 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800d024:	8880      	ldrh	r0, [r0, #4]
 800d026:	4420      	add	r0, r4
 800d028:	b200      	sxth	r0, r0
 800d02a:	1a40      	subs	r0, r0, r1
 800d02c:	e7f8      	b.n	800d020 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800d02e:	18a0      	adds	r0, r4, r2
 800d030:	e7f1      	b.n	800d016 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800d032 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800d032:	b510      	push	{r4, lr}
 800d034:	2b02      	cmp	r3, #2
 800d036:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800d03a:	d006      	beq.n	800d04a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800d03c:	2b03      	cmp	r3, #3
 800d03e:	d00a      	beq.n	800d056 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800d040:	2b01      	cmp	r3, #1
 800d042:	bf14      	ite	ne
 800d044:	18a0      	addne	r0, r4, r2
 800d046:	1860      	addeq	r0, r4, r1
 800d048:	bd10      	pop	{r4, pc}
 800d04a:	88c0      	ldrh	r0, [r0, #6]
 800d04c:	4420      	add	r0, r4
 800d04e:	b200      	sxth	r0, r0
 800d050:	1a80      	subs	r0, r0, r2
 800d052:	3801      	subs	r0, #1
 800d054:	e7f8      	b.n	800d048 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800d056:	88c0      	ldrh	r0, [r0, #6]
 800d058:	4420      	add	r0, r4
 800d05a:	b200      	sxth	r0, r0
 800d05c:	1a40      	subs	r0, r0, r1
 800d05e:	e7f8      	b.n	800d052 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

0800d060 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800d060:	4b01      	ldr	r3, [pc, #4]	; (800d068 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800d062:	2200      	movs	r2, #0
 800d064:	601a      	str	r2, [r3, #0]
 800d066:	4770      	bx	lr
 800d068:	20026908 	.word	0x20026908

0800d06c <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>:
 800d06c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d06e:	e9dd e405 	ldrd	lr, r4, [sp, #20]
 800d072:	1e05      	subs	r5, r0, #0
 800d074:	bfba      	itte	lt
 800d076:	f04f 37ff 	movlt.w	r7, #4294967295
 800d07a:	426d      	neglt	r5, r5
 800d07c:	2701      	movge	r7, #1
 800d07e:	f1be 0f00 	cmp.w	lr, #0
 800d082:	bfb8      	it	lt
 800d084:	f1ce 0e00 	rsblt	lr, lr, #0
 800d088:	f04f 0601 	mov.w	r6, #1
 800d08c:	fa4e f001 	asr.w	r0, lr, r1
 800d090:	fa06 f101 	lsl.w	r1, r6, r1
 800d094:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800d098:	f101 31ff 	add.w	r1, r1, #4294967295
 800d09c:	ea01 010e 	and.w	r1, r1, lr
 800d0a0:	bfb8      	it	lt
 800d0a2:	427f      	neglt	r7, r7
 800d0a4:	434d      	muls	r5, r1
 800d0a6:	2c00      	cmp	r4, #0
 800d0a8:	f8dc 1000 	ldr.w	r1, [ip]
 800d0ac:	bfb8      	it	lt
 800d0ae:	4264      	neglt	r4, r4
 800d0b0:	fb03 1300 	mla	r3, r3, r0, r1
 800d0b4:	fb95 f1f4 	sdiv	r1, r5, r4
 800d0b8:	fb04 5511 	mls	r5, r4, r1, r5
 800d0bc:	441d      	add	r5, r3
 800d0be:	fb95 f3f4 	sdiv	r3, r5, r4
 800d0c2:	fb04 5413 	mls	r4, r4, r3, r5
 800d0c6:	4419      	add	r1, r3
 800d0c8:	bfb8      	it	lt
 800d0ca:	427f      	neglt	r7, r7
 800d0cc:	fb02 1000 	mla	r0, r2, r0, r1
 800d0d0:	f8cc 4000 	str.w	r4, [ip]
 800d0d4:	4378      	muls	r0, r7
 800d0d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d0d8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800d0d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d0dc:	4c24      	ldr	r4, [pc, #144]	; (800d170 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x98>)
 800d0de:	6807      	ldr	r7, [r0, #0]
 800d0e0:	69a3      	ldr	r3, [r4, #24]
 800d0e2:	b086      	sub	sp, #24
 800d0e4:	4605      	mov	r5, r0
 800d0e6:	b92b      	cbnz	r3, 800d0f4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1c>
 800d0e8:	6840      	ldr	r0, [r0, #4]
 800d0ea:	e9c5 7000 	strd	r7, r0, [r5]
 800d0ee:	b006      	add	sp, #24
 800d0f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d0f4:	68a2      	ldr	r2, [r4, #8]
 800d0f6:	6820      	ldr	r0, [r4, #0]
 800d0f8:	ae06      	add	r6, sp, #24
 800d0fa:	f04f 0802 	mov.w	r8, #2
 800d0fe:	fb93 f1f8 	sdiv	r1, r3, r8
 800d102:	440a      	add	r2, r1
 800d104:	f846 2d04 	str.w	r2, [r6, #-4]!
 800d108:	69e1      	ldr	r1, [r4, #28]
 800d10a:	9700      	str	r7, [sp, #0]
 800d10c:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800d110:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d112:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d114:	f7ff ffaa 	bl	800d06c <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800d118:	69a3      	ldr	r3, [r4, #24]
 800d11a:	9301      	str	r3, [sp, #4]
 800d11c:	686b      	ldr	r3, [r5, #4]
 800d11e:	9300      	str	r3, [sp, #0]
 800d120:	4607      	mov	r7, r0
 800d122:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800d124:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800d126:	6a21      	ldr	r1, [r4, #32]
 800d128:	9602      	str	r6, [sp, #8]
 800d12a:	6860      	ldr	r0, [r4, #4]
 800d12c:	f7ff ff9e 	bl	800d06c <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800d130:	6963      	ldr	r3, [r4, #20]
 800d132:	69a2      	ldr	r2, [r4, #24]
 800d134:	fb92 f8f8 	sdiv	r8, r2, r8
 800d138:	4443      	add	r3, r8
 800d13a:	9305      	str	r3, [sp, #20]
 800d13c:	682b      	ldr	r3, [r5, #0]
 800d13e:	9300      	str	r3, [sp, #0]
 800d140:	e9cd 2601 	strd	r2, r6, [sp, #4]
 800d144:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d146:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800d148:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800d14a:	4407      	add	r7, r0
 800d14c:	68e0      	ldr	r0, [r4, #12]
 800d14e:	f7ff ff8d 	bl	800d06c <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800d152:	69a3      	ldr	r3, [r4, #24]
 800d154:	9301      	str	r3, [sp, #4]
 800d156:	686b      	ldr	r3, [r5, #4]
 800d158:	9300      	str	r3, [sp, #0]
 800d15a:	4680      	mov	r8, r0
 800d15c:	9602      	str	r6, [sp, #8]
 800d15e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800d160:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d162:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800d164:	6920      	ldr	r0, [r4, #16]
 800d166:	f7ff ff81 	bl	800d06c <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800d16a:	4440      	add	r0, r8
 800d16c:	e7bd      	b.n	800d0ea <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800d16e:	bf00      	nop
 800d170:	2002690c 	.word	0x2002690c

0800d174 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800d174:	b510      	push	{r4, lr}
 800d176:	4b07      	ldr	r3, [pc, #28]	; (800d194 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800d178:	781b      	ldrb	r3, [r3, #0]
 800d17a:	2b01      	cmp	r3, #1
 800d17c:	d108      	bne.n	800d190 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800d17e:	4b06      	ldr	r3, [pc, #24]	; (800d198 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800d180:	880c      	ldrh	r4, [r1, #0]
 800d182:	881b      	ldrh	r3, [r3, #0]
 800d184:	f9b0 2000 	ldrsh.w	r2, [r0]
 800d188:	3b01      	subs	r3, #1
 800d18a:	1b1b      	subs	r3, r3, r4
 800d18c:	8003      	strh	r3, [r0, #0]
 800d18e:	800a      	strh	r2, [r1, #0]
 800d190:	bd10      	pop	{r4, pc}
 800d192:	bf00      	nop
 800d194:	200268f8 	.word	0x200268f8
 800d198:	200268fc 	.word	0x200268fc

0800d19c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800d19c:	b510      	push	{r4, lr}
 800d19e:	4b0a      	ldr	r3, [pc, #40]	; (800d1c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800d1a0:	781b      	ldrb	r3, [r3, #0]
 800d1a2:	2b01      	cmp	r3, #1
 800d1a4:	d10e      	bne.n	800d1c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800d1a6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800d1aa:	8843      	ldrh	r3, [r0, #2]
 800d1ac:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d1b0:	8044      	strh	r4, [r0, #2]
 800d1b2:	18ca      	adds	r2, r1, r3
 800d1b4:	4b05      	ldr	r3, [pc, #20]	; (800d1cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800d1b6:	881b      	ldrh	r3, [r3, #0]
 800d1b8:	1a9b      	subs	r3, r3, r2
 800d1ba:	8003      	strh	r3, [r0, #0]
 800d1bc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800d1c0:	80c3      	strh	r3, [r0, #6]
 800d1c2:	8081      	strh	r1, [r0, #4]
 800d1c4:	bd10      	pop	{r4, pc}
 800d1c6:	bf00      	nop
 800d1c8:	200268f8 	.word	0x200268f8
 800d1cc:	200268f4 	.word	0x200268f4

0800d1d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800d1d0:	b510      	push	{r4, lr}
 800d1d2:	4b07      	ldr	r3, [pc, #28]	; (800d1f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800d1d4:	781b      	ldrb	r3, [r3, #0]
 800d1d6:	2b01      	cmp	r3, #1
 800d1d8:	d108      	bne.n	800d1ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800d1da:	f9b1 3000 	ldrsh.w	r3, [r1]
 800d1de:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d1e2:	8003      	strh	r3, [r0, #0]
 800d1e4:	8893      	ldrh	r3, [r2, #4]
 800d1e6:	3b01      	subs	r3, #1
 800d1e8:	1b1b      	subs	r3, r3, r4
 800d1ea:	800b      	strh	r3, [r1, #0]
 800d1ec:	bd10      	pop	{r4, pc}
 800d1ee:	bf00      	nop
 800d1f0:	200268f8 	.word	0x200268f8

0800d1f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800d1f4:	b513      	push	{r0, r1, r4, lr}
 800d1f6:	4b08      	ldr	r3, [pc, #32]	; (800d218 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800d1f8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d1fc:	4b07      	ldr	r3, [pc, #28]	; (800d21c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800d1fe:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d202:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d206:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d20a:	2400      	movs	r4, #0
 800d20c:	466a      	mov	r2, sp
 800d20e:	9400      	str	r4, [sp, #0]
 800d210:	f7ff ffde 	bl	800d1d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800d214:	b002      	add	sp, #8
 800d216:	bd10      	pop	{r4, pc}
 800d218:	200268f4 	.word	0x200268f4
 800d21c:	200268f6 	.word	0x200268f6

0800d220 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800d220:	b510      	push	{r4, lr}
 800d222:	4b0a      	ldr	r3, [pc, #40]	; (800d24c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800d224:	781b      	ldrb	r3, [r3, #0]
 800d226:	2b01      	cmp	r3, #1
 800d228:	460a      	mov	r2, r1
 800d22a:	d10d      	bne.n	800d248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800d22c:	8881      	ldrh	r1, [r0, #4]
 800d22e:	8803      	ldrh	r3, [r0, #0]
 800d230:	440b      	add	r3, r1
 800d232:	4601      	mov	r1, r0
 800d234:	3b01      	subs	r3, #1
 800d236:	f821 3b02 	strh.w	r3, [r1], #2
 800d23a:	f7ff ffc9 	bl	800d1d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800d23e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800d242:	88c2      	ldrh	r2, [r0, #6]
 800d244:	8082      	strh	r2, [r0, #4]
 800d246:	80c3      	strh	r3, [r0, #6]
 800d248:	bd10      	pop	{r4, pc}
 800d24a:	bf00      	nop
 800d24c:	200268f8 	.word	0x200268f8

0800d250 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800d250:	b507      	push	{r0, r1, r2, lr}
 800d252:	4b09      	ldr	r3, [pc, #36]	; (800d278 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800d254:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d258:	4b08      	ldr	r3, [pc, #32]	; (800d27c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800d25a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d25e:	2100      	movs	r1, #0
 800d260:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d264:	9100      	str	r1, [sp, #0]
 800d266:	4669      	mov	r1, sp
 800d268:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d26c:	f7ff ffd8 	bl	800d220 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800d270:	b003      	add	sp, #12
 800d272:	f85d fb04 	ldr.w	pc, [sp], #4
 800d276:	bf00      	nop
 800d278:	200268f4 	.word	0x200268f4
 800d27c:	200268f6 	.word	0x200268f6

0800d280 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800d280:	4b03      	ldr	r3, [pc, #12]	; (800d290 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800d282:	6818      	ldr	r0, [r3, #0]
 800d284:	b110      	cbz	r0, 800d28c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800d286:	6803      	ldr	r3, [r0, #0]
 800d288:	699b      	ldr	r3, [r3, #24]
 800d28a:	4718      	bx	r3
 800d28c:	4770      	bx	lr
 800d28e:	bf00      	nop
 800d290:	2002695c 	.word	0x2002695c

0800d294 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800d294:	4770      	bx	lr
	...

0800d298 <_ZN8touchgfx11Application4drawEv>:
 800d298:	b507      	push	{r0, r1, r2, lr}
 800d29a:	4b09      	ldr	r3, [pc, #36]	; (800d2c0 <_ZN8touchgfx11Application4drawEv+0x28>)
 800d29c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d2a0:	4b08      	ldr	r3, [pc, #32]	; (800d2c4 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800d2a2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d2a6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d2aa:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d2ae:	6803      	ldr	r3, [r0, #0]
 800d2b0:	2100      	movs	r1, #0
 800d2b2:	9100      	str	r1, [sp, #0]
 800d2b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d2b6:	4669      	mov	r1, sp
 800d2b8:	4798      	blx	r3
 800d2ba:	b003      	add	sp, #12
 800d2bc:	f85d fb04 	ldr.w	pc, [sp], #4
 800d2c0:	200268f4 	.word	0x200268f4
 800d2c4:	200268f6 	.word	0x200268f6

0800d2c8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800d2c8:	4b03      	ldr	r3, [pc, #12]	; (800d2d8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800d2ca:	6818      	ldr	r0, [r3, #0]
 800d2cc:	b110      	cbz	r0, 800d2d4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800d2ce:	6803      	ldr	r3, [r0, #0]
 800d2d0:	69db      	ldr	r3, [r3, #28]
 800d2d2:	4718      	bx	r3
 800d2d4:	4770      	bx	lr
 800d2d6:	bf00      	nop
 800d2d8:	2002695c 	.word	0x2002695c

0800d2dc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800d2dc:	4b03      	ldr	r3, [pc, #12]	; (800d2ec <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800d2de:	6818      	ldr	r0, [r3, #0]
 800d2e0:	b110      	cbz	r0, 800d2e8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800d2e2:	6803      	ldr	r3, [r0, #0]
 800d2e4:	6a1b      	ldr	r3, [r3, #32]
 800d2e6:	4718      	bx	r3
 800d2e8:	4770      	bx	lr
 800d2ea:	bf00      	nop
 800d2ec:	2002695c 	.word	0x2002695c

0800d2f0 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800d2f0:	4b03      	ldr	r3, [pc, #12]	; (800d300 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800d2f2:	6818      	ldr	r0, [r3, #0]
 800d2f4:	b110      	cbz	r0, 800d2fc <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800d2f6:	6803      	ldr	r3, [r0, #0]
 800d2f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d2fa:	4718      	bx	r3
 800d2fc:	4770      	bx	lr
 800d2fe:	bf00      	nop
 800d300:	2002695c 	.word	0x2002695c

0800d304 <_ZN8touchgfx11Application15handleTickEventEv>:
 800d304:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d308:	4d3a      	ldr	r5, [pc, #232]	; (800d3f4 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800d30a:	4604      	mov	r4, r0
 800d30c:	6828      	ldr	r0, [r5, #0]
 800d30e:	b140      	cbz	r0, 800d322 <_ZN8touchgfx11Application15handleTickEventEv+0x1e>
 800d310:	7a03      	ldrb	r3, [r0, #8]
 800d312:	b933      	cbnz	r3, 800d322 <_ZN8touchgfx11Application15handleTickEventEv+0x1e>
 800d314:	f884 312d 	strb.w	r3, [r4, #301]	; 0x12d
 800d318:	6803      	ldr	r3, [r0, #0]
 800d31a:	689b      	ldr	r3, [r3, #8]
 800d31c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d320:	4718      	bx	r3
 800d322:	f894 312d 	ldrb.w	r3, [r4, #301]	; 0x12d
 800d326:	b97b      	cbnz	r3, 800d348 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800d328:	b170      	cbz	r0, 800d348 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800d32a:	7a03      	ldrb	r3, [r0, #8]
 800d32c:	b163      	cbz	r3, 800d348 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800d32e:	4b32      	ldr	r3, [pc, #200]	; (800d3f8 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800d330:	6818      	ldr	r0, [r3, #0]
 800d332:	b110      	cbz	r0, 800d33a <_ZN8touchgfx11Application15handleTickEventEv+0x36>
 800d334:	6803      	ldr	r3, [r0, #0]
 800d336:	691b      	ldr	r3, [r3, #16]
 800d338:	4798      	blx	r3
 800d33a:	6828      	ldr	r0, [r5, #0]
 800d33c:	6803      	ldr	r3, [r0, #0]
 800d33e:	68db      	ldr	r3, [r3, #12]
 800d340:	4798      	blx	r3
 800d342:	2301      	movs	r3, #1
 800d344:	f884 312d 	strb.w	r3, [r4, #301]	; 0x12d
 800d348:	2500      	movs	r5, #0
 800d34a:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800d34e:	42a8      	cmp	r0, r5
 800d350:	dd0c      	ble.n	800d36c <_ZN8touchgfx11Application15handleTickEventEv+0x68>
 800d352:	1963      	adds	r3, r4, r5
 800d354:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800d358:	b132      	cbz	r2, 800d368 <_ZN8touchgfx11Application15handleTickEventEv+0x64>
 800d35a:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800d35e:	4413      	add	r3, r2
 800d360:	6858      	ldr	r0, [r3, #4]
 800d362:	6803      	ldr	r3, [r0, #0]
 800d364:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d366:	4798      	blx	r3
 800d368:	3501      	adds	r5, #1
 800d36a:	e7ee      	b.n	800d34a <_ZN8touchgfx11Application15handleTickEventEv+0x46>
 800d36c:	f5c4 467f 	rsb	r6, r4, #65280	; 0xff00
 800d370:	3801      	subs	r0, #1
 800d372:	3678      	adds	r6, #120	; 0x78
 800d374:	f04f 0c00 	mov.w	ip, #0
 800d378:	1c43      	adds	r3, r0, #1
 800d37a:	d033      	beq.n	800d3e4 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800d37c:	1823      	adds	r3, r4, r0
 800d37e:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800d382:	bb6a      	cbnz	r2, 800d3e0 <_ZN8touchgfx11Application15handleTickEventEv+0xdc>
 800d384:	b281      	uxth	r1, r0
 800d386:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800d38a:	1d25      	adds	r5, r4, #4
 800d38c:	f8d3 9004 	ldr.w	r9, [r3, #4]
 800d390:	f8b4 3084 	ldrh.w	r3, [r4, #132]	; 0x84
 800d394:	4293      	cmp	r3, r2
 800d396:	dc0a      	bgt.n	800d3ae <_ZN8touchgfx11Application15handleTickEventEv+0xaa>
 800d398:	f101 0288 	add.w	r2, r1, #136	; 0x88
 800d39c:	4422      	add	r2, r4
 800d39e:	18b1      	adds	r1, r6, r2
 800d3a0:	b289      	uxth	r1, r1
 800d3a2:	428b      	cmp	r3, r1
 800d3a4:	d919      	bls.n	800d3da <_ZN8touchgfx11Application15handleTickEventEv+0xd6>
 800d3a6:	7851      	ldrb	r1, [r2, #1]
 800d3a8:	f802 1b01 	strb.w	r1, [r2], #1
 800d3ac:	e7f7      	b.n	800d39e <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 800d3ae:	682f      	ldr	r7, [r5, #0]
 800d3b0:	45b9      	cmp	r9, r7
 800d3b2:	f105 0804 	add.w	r8, r5, #4
 800d3b6:	d10d      	bne.n	800d3d4 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>
 800d3b8:	4696      	mov	lr, r2
 800d3ba:	f1be 0f1e 	cmp.w	lr, #30
 800d3be:	dc06      	bgt.n	800d3ce <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 800d3c0:	f10e 0e01 	add.w	lr, lr, #1
 800d3c4:	686f      	ldr	r7, [r5, #4]
 800d3c6:	f845 7b04 	str.w	r7, [r5], #4
 800d3ca:	4573      	cmp	r3, lr
 800d3cc:	dcf5      	bgt.n	800d3ba <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800d3ce:	3b01      	subs	r3, #1
 800d3d0:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 800d3d4:	3201      	adds	r2, #1
 800d3d6:	4645      	mov	r5, r8
 800d3d8:	e7da      	b.n	800d390 <_ZN8touchgfx11Application15handleTickEventEv+0x8c>
 800d3da:	4423      	add	r3, r4
 800d3dc:	f883 c088 	strb.w	ip, [r3, #136]	; 0x88
 800d3e0:	3801      	subs	r0, #1
 800d3e2:	e7c9      	b.n	800d378 <_ZN8touchgfx11Application15handleTickEventEv+0x74>
 800d3e4:	4b04      	ldr	r3, [pc, #16]	; (800d3f8 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800d3e6:	6818      	ldr	r0, [r3, #0]
 800d3e8:	b110      	cbz	r0, 800d3f0 <_ZN8touchgfx11Application15handleTickEventEv+0xec>
 800d3ea:	6803      	ldr	r3, [r0, #0]
 800d3ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d3ee:	e795      	b.n	800d31c <_ZN8touchgfx11Application15handleTickEventEv+0x18>
 800d3f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d3f4:	20026960 	.word	0x20026960
 800d3f8:	2002695c 	.word	0x2002695c

0800d3fc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800d3fc:	b570      	push	{r4, r5, r6, lr}
 800d3fe:	4606      	mov	r6, r0
 800d400:	460c      	mov	r4, r1
 800d402:	b929      	cbnz	r1, 800d410 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800d404:	4b0c      	ldr	r3, [pc, #48]	; (800d438 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800d406:	4a0d      	ldr	r2, [pc, #52]	; (800d43c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800d408:	480d      	ldr	r0, [pc, #52]	; (800d440 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800d40a:	2164      	movs	r1, #100	; 0x64
 800d40c:	f00d faea 	bl	801a9e4 <__assert_func>
 800d410:	4d0c      	ldr	r5, [pc, #48]	; (800d444 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800d412:	2300      	movs	r3, #0
 800d414:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800d418:	6828      	ldr	r0, [r5, #0]
 800d41a:	b110      	cbz	r0, 800d422 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800d41c:	6803      	ldr	r3, [r0, #0]
 800d41e:	695b      	ldr	r3, [r3, #20]
 800d420:	4798      	blx	r3
 800d422:	602c      	str	r4, [r5, #0]
 800d424:	6823      	ldr	r3, [r4, #0]
 800d426:	4620      	mov	r0, r4
 800d428:	68db      	ldr	r3, [r3, #12]
 800d42a:	4798      	blx	r3
 800d42c:	6833      	ldr	r3, [r6, #0]
 800d42e:	4630      	mov	r0, r6
 800d430:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d432:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d436:	4718      	bx	r3
 800d438:	0801d6bc 	.word	0x0801d6bc
 800d43c:	0801d784 	.word	0x0801d784
 800d440:	0801d6c6 	.word	0x0801d6c6
 800d444:	2002695c 	.word	0x2002695c

0800d448 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800d448:	b510      	push	{r4, lr}
 800d44a:	f9b1 4000 	ldrsh.w	r4, [r1]
 800d44e:	888a      	ldrh	r2, [r1, #4]
 800d450:	f9b0 3000 	ldrsh.w	r3, [r0]
 800d454:	4422      	add	r2, r4
 800d456:	b212      	sxth	r2, r2
 800d458:	4293      	cmp	r3, r2
 800d45a:	da15      	bge.n	800d488 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800d45c:	8882      	ldrh	r2, [r0, #4]
 800d45e:	4413      	add	r3, r2
 800d460:	b21b      	sxth	r3, r3
 800d462:	429c      	cmp	r4, r3
 800d464:	da10      	bge.n	800d488 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800d466:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800d46a:	88c9      	ldrh	r1, [r1, #6]
 800d46c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800d470:	4419      	add	r1, r3
 800d472:	b209      	sxth	r1, r1
 800d474:	428a      	cmp	r2, r1
 800d476:	da07      	bge.n	800d488 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800d478:	88c0      	ldrh	r0, [r0, #6]
 800d47a:	4410      	add	r0, r2
 800d47c:	b200      	sxth	r0, r0
 800d47e:	4283      	cmp	r3, r0
 800d480:	bfac      	ite	ge
 800d482:	2000      	movge	r0, #0
 800d484:	2001      	movlt	r0, #1
 800d486:	bd10      	pop	{r4, pc}
 800d488:	2000      	movs	r0, #0
 800d48a:	e7fc      	b.n	800d486 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800d48c <_ZNK8touchgfx4Rect8includesERKS0_>:
 800d48c:	b570      	push	{r4, r5, r6, lr}
 800d48e:	f9b1 4000 	ldrsh.w	r4, [r1]
 800d492:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d496:	42ac      	cmp	r4, r5
 800d498:	db18      	blt.n	800d4cc <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800d49a:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800d49e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800d4a2:	429a      	cmp	r2, r3
 800d4a4:	db12      	blt.n	800d4cc <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800d4a6:	8886      	ldrh	r6, [r0, #4]
 800d4a8:	4435      	add	r5, r6
 800d4aa:	888e      	ldrh	r6, [r1, #4]
 800d4ac:	4434      	add	r4, r6
 800d4ae:	b22d      	sxth	r5, r5
 800d4b0:	b224      	sxth	r4, r4
 800d4b2:	42a5      	cmp	r5, r4
 800d4b4:	db0a      	blt.n	800d4cc <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800d4b6:	88c0      	ldrh	r0, [r0, #6]
 800d4b8:	4418      	add	r0, r3
 800d4ba:	88cb      	ldrh	r3, [r1, #6]
 800d4bc:	441a      	add	r2, r3
 800d4be:	b200      	sxth	r0, r0
 800d4c0:	b212      	sxth	r2, r2
 800d4c2:	4290      	cmp	r0, r2
 800d4c4:	bfb4      	ite	lt
 800d4c6:	2000      	movlt	r0, #0
 800d4c8:	2001      	movge	r0, #1
 800d4ca:	bd70      	pop	{r4, r5, r6, pc}
 800d4cc:	2000      	movs	r0, #0
 800d4ce:	e7fc      	b.n	800d4ca <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800d4d0 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800d4d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d4d2:	4604      	mov	r4, r0
 800d4d4:	4608      	mov	r0, r1
 800d4d6:	460d      	mov	r5, r1
 800d4d8:	f7fe fc4a 	bl	800bd70 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d4dc:	b978      	cbnz	r0, 800d4fe <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800d4de:	4620      	mov	r0, r4
 800d4e0:	f7fe fc46 	bl	800bd70 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d4e4:	f9b5 6000 	ldrsh.w	r6, [r5]
 800d4e8:	b150      	cbz	r0, 800d500 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800d4ea:	8026      	strh	r6, [r4, #0]
 800d4ec:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800d4f0:	8063      	strh	r3, [r4, #2]
 800d4f2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800d4f6:	80a3      	strh	r3, [r4, #4]
 800d4f8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800d4fc:	80e3      	strh	r3, [r4, #6]
 800d4fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d500:	f9b4 1000 	ldrsh.w	r1, [r4]
 800d504:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d508:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800d50c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800d510:	88ed      	ldrh	r5, [r5, #6]
 800d512:	42b1      	cmp	r1, r6
 800d514:	460f      	mov	r7, r1
 800d516:	bfa8      	it	ge
 800d518:	4637      	movge	r7, r6
 800d51a:	4293      	cmp	r3, r2
 800d51c:	4618      	mov	r0, r3
 800d51e:	4466      	add	r6, ip
 800d520:	bfa8      	it	ge
 800d522:	4610      	movge	r0, r2
 800d524:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d528:	8027      	strh	r7, [r4, #0]
 800d52a:	442a      	add	r2, r5
 800d52c:	88e5      	ldrh	r5, [r4, #6]
 800d52e:	8060      	strh	r0, [r4, #2]
 800d530:	4461      	add	r1, ip
 800d532:	442b      	add	r3, r5
 800d534:	b236      	sxth	r6, r6
 800d536:	b209      	sxth	r1, r1
 800d538:	b212      	sxth	r2, r2
 800d53a:	b21b      	sxth	r3, r3
 800d53c:	428e      	cmp	r6, r1
 800d53e:	bfac      	ite	ge
 800d540:	ebc7 0106 	rsbge	r1, r7, r6
 800d544:	ebc7 0101 	rsblt	r1, r7, r1
 800d548:	429a      	cmp	r2, r3
 800d54a:	bfac      	ite	ge
 800d54c:	ebc0 0202 	rsbge	r2, r0, r2
 800d550:	ebc0 0203 	rsblt	r2, r0, r3
 800d554:	80a1      	strh	r1, [r4, #4]
 800d556:	80e2      	strh	r2, [r4, #6]
 800d558:	e7d1      	b.n	800d4fe <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800d55c <_ZN8touchgfx11Application11getInstanceEv>:
 800d55c:	4b01      	ldr	r3, [pc, #4]	; (800d564 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800d55e:	6818      	ldr	r0, [r3, #0]
 800d560:	4770      	bx	lr
 800d562:	bf00      	nop
 800d564:	2002696c 	.word	0x2002696c

0800d568 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800d568:	2300      	movs	r3, #0
 800d56a:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800d56e:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800d572:	30a8      	adds	r0, #168	; 0xa8
 800d574:	f802 3b01 	strb.w	r3, [r2], #1
 800d578:	4282      	cmp	r2, r0
 800d57a:	d1fb      	bne.n	800d574 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800d57c:	4770      	bx	lr

0800d57e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800d57e:	4603      	mov	r3, r0
 800d580:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800d584:	2200      	movs	r2, #0
 800d586:	801a      	strh	r2, [r3, #0]
 800d588:	805a      	strh	r2, [r3, #2]
 800d58a:	809a      	strh	r2, [r3, #4]
 800d58c:	80da      	strh	r2, [r3, #6]
 800d58e:	3308      	adds	r3, #8
 800d590:	428b      	cmp	r3, r1
 800d592:	d1f8      	bne.n	800d586 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800d594:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800d598:	4770      	bx	lr
	...

0800d59c <_ZN8touchgfx11ApplicationC1Ev>:
 800d59c:	b570      	push	{r4, r5, r6, lr}
 800d59e:	4b16      	ldr	r3, [pc, #88]	; (800d5f8 <_ZN8touchgfx11ApplicationC1Ev+0x5c>)
 800d5a0:	6003      	str	r3, [r0, #0]
 800d5a2:	2500      	movs	r5, #0
 800d5a4:	4604      	mov	r4, r0
 800d5a6:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800d5aa:	30a8      	adds	r0, #168	; 0xa8
 800d5ac:	f7ff ffe7 	bl	800d57e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d5b0:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800d5b4:	f7ff ffe3 	bl	800d57e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d5b8:	f884 512c 	strb.w	r5, [r4, #300]	; 0x12c
 800d5bc:	f884 512d 	strb.w	r5, [r4, #301]	; 0x12d
 800d5c0:	490e      	ldr	r1, [pc, #56]	; (800d5fc <_ZN8touchgfx11ApplicationC1Ev+0x60>)
 800d5c2:	480f      	ldr	r0, [pc, #60]	; (800d600 <_ZN8touchgfx11ApplicationC1Ev+0x64>)
 800d5c4:	4e0f      	ldr	r6, [pc, #60]	; (800d604 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800d5c6:	f00d f8db 	bl	801a780 <CRC_Lock>
 800d5ca:	4b0f      	ldr	r3, [pc, #60]	; (800d608 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800d5cc:	b158      	cbz	r0, 800d5e6 <_ZN8touchgfx11ApplicationC1Ev+0x4a>
 800d5ce:	801d      	strh	r5, [r3, #0]
 800d5d0:	4a0e      	ldr	r2, [pc, #56]	; (800d60c <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800d5d2:	2300      	movs	r3, #0
 800d5d4:	6013      	str	r3, [r2, #0]
 800d5d6:	4a0e      	ldr	r2, [pc, #56]	; (800d610 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800d5d8:	6033      	str	r3, [r6, #0]
 800d5da:	4620      	mov	r0, r4
 800d5dc:	6013      	str	r3, [r2, #0]
 800d5de:	f7ff ffc3 	bl	800d568 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800d5e2:	4620      	mov	r0, r4
 800d5e4:	bd70      	pop	{r4, r5, r6, pc}
 800d5e6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d5ea:	2002      	movs	r0, #2
 800d5ec:	801a      	strh	r2, [r3, #0]
 800d5ee:	6030      	str	r0, [r6, #0]
 800d5f0:	f000 ff1e 	bl	800e430 <_ZN8touchgfx6Screen4drawEv>
 800d5f4:	e7ec      	b.n	800d5d0 <_ZN8touchgfx11ApplicationC1Ev+0x34>
 800d5f6:	bf00      	nop
 800d5f8:	0801d750 	.word	0x0801d750
 800d5fc:	b5e8b5cd 	.word	0xb5e8b5cd
 800d600:	f407a5c2 	.word	0xf407a5c2
 800d604:	2002695c 	.word	0x2002695c
 800d608:	2000001c 	.word	0x2000001c
 800d60c:	2002696c 	.word	0x2002696c
 800d610:	20026960 	.word	0x20026960

0800d614 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800d614:	2300      	movs	r3, #0
 800d616:	8003      	strh	r3, [r0, #0]
 800d618:	8043      	strh	r3, [r0, #2]
 800d61a:	8083      	strh	r3, [r0, #4]
 800d61c:	80c3      	strh	r3, [r0, #6]
 800d61e:	f8b1 3040 	ldrh.w	r3, [r1, #64]	; 0x40
 800d622:	4293      	cmp	r3, r2
 800d624:	b530      	push	{r4, r5, lr}
 800d626:	d912      	bls.n	800d64e <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800d628:	eb01 04c2 	add.w	r4, r1, r2, lsl #3
 800d62c:	3b01      	subs	r3, #1
 800d62e:	6825      	ldr	r5, [r4, #0]
 800d630:	6005      	str	r5, [r0, #0]
 800d632:	b29b      	uxth	r3, r3
 800d634:	6865      	ldr	r5, [r4, #4]
 800d636:	6045      	str	r5, [r0, #4]
 800d638:	4293      	cmp	r3, r2
 800d63a:	f8a1 3040 	strh.w	r3, [r1, #64]	; 0x40
 800d63e:	d906      	bls.n	800d64e <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800d640:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800d644:	681d      	ldr	r5, [r3, #0]
 800d646:	f841 5032 	str.w	r5, [r1, r2, lsl #3]
 800d64a:	685d      	ldr	r5, [r3, #4]
 800d64c:	6065      	str	r5, [r4, #4]
 800d64e:	bd30      	pop	{r4, r5, pc}

0800d650 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800d650:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d652:	466b      	mov	r3, sp
 800d654:	e883 0006 	stmia.w	r3, {r1, r2}
 800d658:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800d65c:	2a07      	cmp	r2, #7
 800d65e:	4604      	mov	r4, r0
 800d660:	d906      	bls.n	800d670 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800d662:	4b09      	ldr	r3, [pc, #36]	; (800d688 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800d664:	4a09      	ldr	r2, [pc, #36]	; (800d68c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800d666:	480a      	ldr	r0, [pc, #40]	; (800d690 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800d668:	f44f 7102 	mov.w	r1, #520	; 0x208
 800d66c:	f00d f9ba 	bl	801a9e4 <__assert_func>
 800d670:	1c51      	adds	r1, r2, #1
 800d672:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800d676:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800d67a:	cb03      	ldmia	r3!, {r0, r1}
 800d67c:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800d680:	6069      	str	r1, [r5, #4]
 800d682:	b003      	add	sp, #12
 800d684:	bd30      	pop	{r4, r5, pc}
 800d686:	bf00      	nop
 800d688:	0801d6f0 	.word	0x0801d6f0
 800d68c:	0801d7c8 	.word	0x0801d7c8
 800d690:	0801d71f 	.word	0x0801d71f

0800d694 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800d694:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d698:	b089      	sub	sp, #36	; 0x24
 800d69a:	466c      	mov	r4, sp
 800d69c:	4606      	mov	r6, r0
 800d69e:	4620      	mov	r0, r4
 800d6a0:	e884 0006 	stmia.w	r4, {r1, r2}
 800d6a4:	f7fe fb64 	bl	800bd70 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d6a8:	bbb0      	cbnz	r0, 800d718 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800d6aa:	f8b6 50e8 	ldrh.w	r5, [r6, #232]	; 0xe8
 800d6ae:	b1fd      	cbz	r5, 800d6f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c>
 800d6b0:	3d01      	subs	r5, #1
 800d6b2:	af04      	add	r7, sp, #16
 800d6b4:	f04f 090a 	mov.w	r9, #10
 800d6b8:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 800d6bc:	ab02      	add	r3, sp, #8
 800d6be:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d6c2:	6851      	ldr	r1, [r2, #4]
 800d6c4:	c303      	stmia	r3!, {r0, r1}
 800d6c6:	4621      	mov	r1, r4
 800d6c8:	a802      	add	r0, sp, #8
 800d6ca:	fa1f f885 	uxth.w	r8, r5
 800d6ce:	f7ff fedd 	bl	800d48c <_ZNK8touchgfx4Rect8includesERKS0_>
 800d6d2:	bb08      	cbnz	r0, 800d718 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800d6d4:	a902      	add	r1, sp, #8
 800d6d6:	4620      	mov	r0, r4
 800d6d8:	f7ff fed8 	bl	800d48c <_ZNK8touchgfx4Rect8includesERKS0_>
 800d6dc:	b1f8      	cbz	r0, 800d71e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x8a>
 800d6de:	4642      	mov	r2, r8
 800d6e0:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800d6e4:	a806      	add	r0, sp, #24
 800d6e6:	f7ff ff95 	bl	800d614 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d6ea:	f115 35ff 	adds.w	r5, r5, #4294967295
 800d6ee:	d2e3      	bcs.n	800d6b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24>
 800d6f0:	f8b6 30e8 	ldrh.w	r3, [r6, #232]	; 0xe8
 800d6f4:	2b08      	cmp	r3, #8
 800d6f6:	f106 05a8 	add.w	r5, r6, #168	; 0xa8
 800d6fa:	d108      	bne.n	800d70e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800d6fc:	4629      	mov	r1, r5
 800d6fe:	a806      	add	r0, sp, #24
 800d700:	2207      	movs	r2, #7
 800d702:	f7ff ff87 	bl	800d614 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d706:	a906      	add	r1, sp, #24
 800d708:	4620      	mov	r0, r4
 800d70a:	f7ff fee1 	bl	800d4d0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d70e:	e894 0006 	ldmia.w	r4, {r1, r2}
 800d712:	4628      	mov	r0, r5
 800d714:	f7ff ff9c 	bl	800d650 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d718:	b009      	add	sp, #36	; 0x24
 800d71a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d71e:	4621      	mov	r1, r4
 800d720:	a802      	add	r0, sp, #8
 800d722:	f7ff fe91 	bl	800d448 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d726:	b150      	cbz	r0, 800d73e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xaa>
 800d728:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800d72c:	a806      	add	r0, sp, #24
 800d72e:	4642      	mov	r2, r8
 800d730:	f7ff ff70 	bl	800d614 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d734:	a902      	add	r1, sp, #8
 800d736:	4620      	mov	r0, r4
 800d738:	f7ff feca 	bl	800d4d0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d73c:	e7d5      	b.n	800d6ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d73e:	e894 0003 	ldmia.w	r4, {r0, r1}
 800d742:	e887 0003 	stmia.w	r7, {r0, r1}
 800d746:	a902      	add	r1, sp, #8
 800d748:	4638      	mov	r0, r7
 800d74a:	f7ff fec1 	bl	800d4d0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d74e:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d752:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800d756:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 800d75a:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800d75e:	fb13 f302 	smulbb	r3, r3, r2
 800d762:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800d766:	fb11 f102 	smulbb	r1, r1, r2
 800d76a:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800d76e:	fb12 1100 	smlabb	r1, r2, r0, r1
 800d772:	220b      	movs	r2, #11
 800d774:	fb09 f303 	mul.w	r3, r9, r3
 800d778:	434a      	muls	r2, r1
 800d77a:	4293      	cmp	r3, r2
 800d77c:	dab5      	bge.n	800d6ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d77e:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800d782:	a806      	add	r0, sp, #24
 800d784:	4642      	mov	r2, r8
 800d786:	f7ff ff45 	bl	800d614 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d78a:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d78e:	e884 0003 	stmia.w	r4, {r0, r1}
 800d792:	e7aa      	b.n	800d6ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>

0800d794 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800d794:	b530      	push	{r4, r5, lr}
 800d796:	4b1d      	ldr	r3, [pc, #116]	; (800d80c <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800d798:	b085      	sub	sp, #20
 800d79a:	460c      	mov	r4, r1
 800d79c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d7a0:	4b1b      	ldr	r3, [pc, #108]	; (800d810 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800d7a2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d7a6:	2100      	movs	r1, #0
 800d7a8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d7ac:	9100      	str	r1, [sp, #0]
 800d7ae:	4605      	mov	r5, r0
 800d7b0:	6861      	ldr	r1, [r4, #4]
 800d7b2:	6820      	ldr	r0, [r4, #0]
 800d7b4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d7b8:	ab02      	add	r3, sp, #8
 800d7ba:	c303      	stmia	r3!, {r0, r1}
 800d7bc:	4669      	mov	r1, sp
 800d7be:	a802      	add	r0, sp, #8
 800d7c0:	f7fe fa92 	bl	800bce8 <_ZN8touchgfx4RectaNERKS0_>
 800d7c4:	ab02      	add	r3, sp, #8
 800d7c6:	cb03      	ldmia	r3!, {r0, r1}
 800d7c8:	4b12      	ldr	r3, [pc, #72]	; (800d814 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800d7ca:	6020      	str	r0, [r4, #0]
 800d7cc:	6818      	ldr	r0, [r3, #0]
 800d7ce:	6061      	str	r1, [r4, #4]
 800d7d0:	b138      	cbz	r0, 800d7e2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d7d2:	f895 312c 	ldrb.w	r3, [r5, #300]	; 0x12c
 800d7d6:	b133      	cbz	r3, 800d7e6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800d7d8:	6821      	ldr	r1, [r4, #0]
 800d7da:	6862      	ldr	r2, [r4, #4]
 800d7dc:	4628      	mov	r0, r5
 800d7de:	f7ff ff59 	bl	800d694 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d7e2:	b005      	add	sp, #20
 800d7e4:	bd30      	pop	{r4, r5, pc}
 800d7e6:	6803      	ldr	r3, [r0, #0]
 800d7e8:	4621      	mov	r1, r4
 800d7ea:	689b      	ldr	r3, [r3, #8]
 800d7ec:	4798      	blx	r3
 800d7ee:	4b0a      	ldr	r3, [pc, #40]	; (800d818 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800d7f0:	6818      	ldr	r0, [r3, #0]
 800d7f2:	b118      	cbz	r0, 800d7fc <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800d7f4:	6803      	ldr	r3, [r0, #0]
 800d7f6:	4621      	mov	r1, r4
 800d7f8:	689b      	ldr	r3, [r3, #8]
 800d7fa:	4798      	blx	r3
 800d7fc:	4b07      	ldr	r3, [pc, #28]	; (800d81c <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800d7fe:	6818      	ldr	r0, [r3, #0]
 800d800:	6803      	ldr	r3, [r0, #0]
 800d802:	4621      	mov	r1, r4
 800d804:	695b      	ldr	r3, [r3, #20]
 800d806:	4798      	blx	r3
 800d808:	e7eb      	b.n	800d7e2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d80a:	bf00      	nop
 800d80c:	200268f4 	.word	0x200268f4
 800d810:	200268f6 	.word	0x200268f6
 800d814:	2002695c 	.word	0x2002695c
 800d818:	20026958 	.word	0x20026958
 800d81c:	20026900 	.word	0x20026900

0800d820 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800d820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d824:	4604      	mov	r4, r0
 800d826:	b09b      	sub	sp, #108	; 0x6c
 800d828:	f880 112c 	strb.w	r1, [r0, #300]	; 0x12c
 800d82c:	b129      	cbz	r1, 800d83a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800d82e:	2300      	movs	r3, #0
 800d830:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800d834:	b01b      	add	sp, #108	; 0x6c
 800d836:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d83a:	4baf      	ldr	r3, [pc, #700]	; (800daf8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800d83c:	681b      	ldr	r3, [r3, #0]
 800d83e:	b33b      	cbz	r3, 800d890 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800d840:	4dae      	ldr	r5, [pc, #696]	; (800dafc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800d842:	4628      	mov	r0, r5
 800d844:	f7fe fa94 	bl	800bd70 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d848:	4606      	mov	r6, r0
 800d84a:	bb08      	cbnz	r0, 800d890 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800d84c:	4628      	mov	r0, r5
 800d84e:	f7ff fca5 	bl	800d19c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d852:	6829      	ldr	r1, [r5, #0]
 800d854:	686a      	ldr	r2, [r5, #4]
 800d856:	4620      	mov	r0, r4
 800d858:	f7ff ff1c 	bl	800d694 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d85c:	802e      	strh	r6, [r5, #0]
 800d85e:	806e      	strh	r6, [r5, #2]
 800d860:	80ae      	strh	r6, [r5, #4]
 800d862:	80ee      	strh	r6, [r5, #6]
 800d864:	4fa6      	ldr	r7, [pc, #664]	; (800db00 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800d866:	a809      	add	r0, sp, #36	; 0x24
 800d868:	f7ff fe89 	bl	800d57e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d86c:	883d      	ldrh	r5, [r7, #0]
 800d86e:	462e      	mov	r6, r5
 800d870:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d874:	42b3      	cmp	r3, r6
 800d876:	d910      	bls.n	800d89a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x7a>
 800d878:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d87c:	a809      	add	r0, sp, #36	; 0x24
 800d87e:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800d882:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800d886:	3601      	adds	r6, #1
 800d888:	f7ff fee2 	bl	800d650 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d88c:	b2b6      	uxth	r6, r6
 800d88e:	e7ef      	b.n	800d870 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x50>
 800d890:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d894:	2b00      	cmp	r3, #0
 800d896:	d1e5      	bne.n	800d864 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x44>
 800d898:	e7cc      	b.n	800d834 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d89a:	462e      	mov	r6, r5
 800d89c:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800d8a0:	42b3      	cmp	r3, r6
 800d8a2:	d90b      	bls.n	800d8bc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800d8a4:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d8a8:	4620      	mov	r0, r4
 800d8aa:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800d8ae:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800d8b2:	3601      	adds	r6, #1
 800d8b4:	f7ff feee 	bl	800d694 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d8b8:	b2b6      	uxth	r6, r6
 800d8ba:	e7ef      	b.n	800d89c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x7c>
 800d8bc:	4e91      	ldr	r6, [pc, #580]	; (800db04 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800d8be:	6833      	ldr	r3, [r6, #0]
 800d8c0:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800d8c4:	2b01      	cmp	r3, #1
 800d8c6:	f040 8092 	bne.w	800d9ee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ce>
 800d8ca:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800d8ce:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800d8d2:	33aa      	adds	r3, #170	; 0xaa
 800d8d4:	f04f 0900 	mov.w	r9, #0
 800d8d8:	42a8      	cmp	r0, r5
 800d8da:	f103 0308 	add.w	r3, r3, #8
 800d8de:	dd0a      	ble.n	800d8f6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xd6>
 800d8e0:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800d8e4:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800d8e8:	440a      	add	r2, r1
 800d8ea:	b212      	sxth	r2, r2
 800d8ec:	4591      	cmp	r9, r2
 800d8ee:	bfb8      	it	lt
 800d8f0:	4691      	movlt	r9, r2
 800d8f2:	3501      	adds	r5, #1
 800d8f4:	e7f0      	b.n	800d8d8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xb8>
 800d8f6:	4b84      	ldr	r3, [pc, #528]	; (800db08 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800d8f8:	f8df 8214 	ldr.w	r8, [pc, #532]	; 800db10 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>
 800d8fc:	881d      	ldrh	r5, [r3, #0]
 800d8fe:	2300      	movs	r3, #0
 800d900:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800d904:	2d0f      	cmp	r5, #15
 800d906:	bf8c      	ite	hi
 800d908:	08ed      	lsrhi	r5, r5, #3
 800d90a:	2501      	movls	r5, #1
 800d90c:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d910:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800d914:	6830      	ldr	r0, [r6, #0]
 800d916:	440b      	add	r3, r1
 800d918:	b21b      	sxth	r3, r3
 800d91a:	4599      	cmp	r9, r3
 800d91c:	6802      	ldr	r2, [r0, #0]
 800d91e:	dd49      	ble.n	800d9b4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x194>
 800d920:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 800d924:	4798      	blx	r3
 800d926:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d92a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d92e:	4413      	add	r3, r2
 800d930:	b21b      	sxth	r3, r3
 800d932:	195a      	adds	r2, r3, r5
 800d934:	4290      	cmp	r0, r2
 800d936:	da07      	bge.n	800d948 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x128>
 800d938:	4581      	cmp	r9, r0
 800d93a:	dd05      	ble.n	800d948 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x128>
 800d93c:	4298      	cmp	r0, r3
 800d93e:	da33      	bge.n	800d9a8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x188>
 800d940:	2b00      	cmp	r3, #0
 800d942:	dd31      	ble.n	800d9a8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x188>
 800d944:	4648      	mov	r0, r9
 800d946:	e004      	b.n	800d952 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x132>
 800d948:	4298      	cmp	r0, r3
 800d94a:	dbfb      	blt.n	800d944 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x124>
 800d94c:	4548      	cmp	r0, r9
 800d94e:	bfa8      	it	ge
 800d950:	4648      	movge	r0, r9
 800d952:	f9b8 2000 	ldrsh.w	r2, [r8]
 800d956:	f8b7 a000 	ldrh.w	sl, [r7]
 800d95a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d95e:	2100      	movs	r1, #0
 800d960:	1ac0      	subs	r0, r0, r3
 800d962:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d966:	f8ad 2018 	strh.w	r2, [sp, #24]
 800d96a:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d96e:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d972:	4553      	cmp	r3, sl
 800d974:	d9ca      	bls.n	800d90c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xec>
 800d976:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800d97a:	ab07      	add	r3, sp, #28
 800d97c:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d980:	6851      	ldr	r1, [r2, #4]
 800d982:	c303      	stmia	r3!, {r0, r1}
 800d984:	a807      	add	r0, sp, #28
 800d986:	a905      	add	r1, sp, #20
 800d988:	f7fe f9ae 	bl	800bce8 <_ZN8touchgfx4RectaNERKS0_>
 800d98c:	a807      	add	r0, sp, #28
 800d98e:	f7fe f9ef 	bl	800bd70 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d992:	b920      	cbnz	r0, 800d99e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x17e>
 800d994:	6823      	ldr	r3, [r4, #0]
 800d996:	a907      	add	r1, sp, #28
 800d998:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d99a:	4620      	mov	r0, r4
 800d99c:	4798      	blx	r3
 800d99e:	f10a 0a01 	add.w	sl, sl, #1
 800d9a2:	fa1f fa8a 	uxth.w	sl, sl
 800d9a6:	e7e2      	b.n	800d96e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14e>
 800d9a8:	6830      	ldr	r0, [r6, #0]
 800d9aa:	6803      	ldr	r3, [r0, #0]
 800d9ac:	2101      	movs	r1, #1
 800d9ae:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d9b0:	4798      	blx	r3
 800d9b2:	e7ab      	b.n	800d90c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xec>
 800d9b4:	69d3      	ldr	r3, [r2, #28]
 800d9b6:	4798      	blx	r3
 800d9b8:	4b54      	ldr	r3, [pc, #336]	; (800db0c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800d9ba:	781b      	ldrb	r3, [r3, #0]
 800d9bc:	2b00      	cmp	r3, #0
 800d9be:	f43f af39 	beq.w	800d834 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d9c2:	2300      	movs	r3, #0
 800d9c4:	883d      	ldrh	r5, [r7, #0]
 800d9c6:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800d9ca:	34ea      	adds	r4, #234	; 0xea
 800d9cc:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800d9d0:	42ab      	cmp	r3, r5
 800d9d2:	f67f af2f 	bls.w	800d834 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d9d6:	ab1a      	add	r3, sp, #104	; 0x68
 800d9d8:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d9dc:	3b44      	subs	r3, #68	; 0x44
 800d9de:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d9e2:	4620      	mov	r0, r4
 800d9e4:	3501      	adds	r5, #1
 800d9e6:	f7ff fe33 	bl	800d650 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d9ea:	b2ad      	uxth	r5, r5
 800d9ec:	e7ee      	b.n	800d9cc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ac>
 800d9ee:	2b02      	cmp	r3, #2
 800d9f0:	d16a      	bne.n	800dac8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 800d9f2:	f8df a120 	ldr.w	sl, [pc, #288]	; 800db14 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
 800d9f6:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d9fa:	42ab      	cmp	r3, r5
 800d9fc:	d9dc      	bls.n	800d9b8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x198>
 800d9fe:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800da02:	ab03      	add	r3, sp, #12
 800da04:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800da08:	6851      	ldr	r1, [r2, #4]
 800da0a:	c303      	stmia	r3!, {r0, r1}
 800da0c:	f89a 3000 	ldrb.w	r3, [sl]
 800da10:	2b01      	cmp	r3, #1
 800da12:	d102      	bne.n	800da1a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1fa>
 800da14:	a803      	add	r0, sp, #12
 800da16:	f7ff fc1b 	bl	800d250 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800da1a:	a803      	add	r0, sp, #12
 800da1c:	f7fe f9a8 	bl	800bd70 <_ZNK8touchgfx4Rect7isEmptyEv>
 800da20:	2800      	cmp	r0, #0
 800da22:	d14a      	bne.n	800daba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x29a>
 800da24:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800da28:	f8ad 3014 	strh.w	r3, [sp, #20]
 800da2c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800da30:	f8ad 3016 	strh.w	r3, [sp, #22]
 800da34:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800da38:	f8ad 001a 	strh.w	r0, [sp, #26]
 800da3c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800da40:	f10d 0914 	add.w	r9, sp, #20
 800da44:	f10d 081c 	add.w	r8, sp, #28
 800da48:	f8bd b012 	ldrh.w	fp, [sp, #18]
 800da4c:	f8bd c00e 	ldrh.w	ip, [sp, #14]
 800da50:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800da54:	6830      	ldr	r0, [r6, #0]
 800da56:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800da5a:	f8d0 e000 	ldr.w	lr, [r0]
 800da5e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800da62:	44dc      	add	ip, fp
 800da64:	ebac 0c02 	sub.w	ip, ip, r2
 800da68:	fa1f fc8c 	uxth.w	ip, ip
 800da6c:	f8cd c000 	str.w	ip, [sp]
 800da70:	f8de b078 	ldr.w	fp, [lr, #120]	; 0x78
 800da74:	47d8      	blx	fp
 800da76:	f89a 3000 	ldrb.w	r3, [sl]
 800da7a:	f8ad 001a 	strh.w	r0, [sp, #26]
 800da7e:	2b01      	cmp	r3, #1
 800da80:	d11e      	bne.n	800dac0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a0>
 800da82:	e899 0003 	ldmia.w	r9, {r0, r1}
 800da86:	e888 0003 	stmia.w	r8, {r0, r1}
 800da8a:	4640      	mov	r0, r8
 800da8c:	f7ff fb86 	bl	800d19c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800da90:	6823      	ldr	r3, [r4, #0]
 800da92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800da94:	4641      	mov	r1, r8
 800da96:	4620      	mov	r0, r4
 800da98:	4798      	blx	r3
 800da9a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800da9e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800daa2:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800daa6:	4413      	add	r3, r2
 800daa8:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800daac:	440a      	add	r2, r1
 800daae:	b21b      	sxth	r3, r3
 800dab0:	b212      	sxth	r2, r2
 800dab2:	4293      	cmp	r3, r2
 800dab4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dab8:	dbc6      	blt.n	800da48 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x228>
 800daba:	3501      	adds	r5, #1
 800dabc:	b2ad      	uxth	r5, r5
 800dabe:	e79a      	b.n	800d9f6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d6>
 800dac0:	6823      	ldr	r3, [r4, #0]
 800dac2:	4649      	mov	r1, r9
 800dac4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dac6:	e7e6      	b.n	800da96 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 800dac8:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800dacc:	42ab      	cmp	r3, r5
 800dace:	f67f af73 	bls.w	800d9b8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x198>
 800dad2:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800dad6:	ab07      	add	r3, sp, #28
 800dad8:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800dadc:	6851      	ldr	r1, [r2, #4]
 800dade:	c303      	stmia	r3!, {r0, r1}
 800dae0:	a807      	add	r0, sp, #28
 800dae2:	f7fe f945 	bl	800bd70 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dae6:	b920      	cbnz	r0, 800daf2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d2>
 800dae8:	6823      	ldr	r3, [r4, #0]
 800daea:	a907      	add	r1, sp, #28
 800daec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800daee:	4620      	mov	r0, r4
 800daf0:	4798      	blx	r3
 800daf2:	3501      	adds	r5, #1
 800daf4:	b2ad      	uxth	r5, r5
 800daf6:	e7e7      	b.n	800dac8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 800daf8:	20026958 	.word	0x20026958
 800dafc:	20026964 	.word	0x20026964
 800db00:	2000001c 	.word	0x2000001c
 800db04:	20026900 	.word	0x20026900
 800db08:	200268f6 	.word	0x200268f6
 800db0c:	200268fe 	.word	0x200268fe
 800db10:	200268f4 	.word	0x200268f4
 800db14:	200268f8 	.word	0x200268f8

0800db18 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800db18:	4b03      	ldr	r3, [pc, #12]	; (800db28 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800db1a:	2200      	movs	r2, #0
 800db1c:	801a      	strh	r2, [r3, #0]
 800db1e:	805a      	strh	r2, [r3, #2]
 800db20:	809a      	strh	r2, [r3, #4]
 800db22:	80da      	strh	r2, [r3, #6]
 800db24:	4770      	bx	lr
 800db26:	bf00      	nop
 800db28:	20026964 	.word	0x20026964

0800db2c <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
 800db2c:	2000      	movs	r0, #0
 800db2e:	4770      	bx	lr

0800db30 <_ZNK8touchgfx4Font12getGSUBTableEv>:
 800db30:	2000      	movs	r0, #0
 800db32:	4770      	bx	lr

0800db34 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800db34:	b508      	push	{r3, lr}
 800db36:	6803      	ldr	r3, [r0, #0]
 800db38:	68db      	ldr	r3, [r3, #12]
 800db3a:	4798      	blx	r3
 800db3c:	b128      	cbz	r0, 800db4a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800db3e:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800db42:	7a80      	ldrb	r0, [r0, #10]
 800db44:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800db48:	4318      	orrs	r0, r3
 800db4a:	bd08      	pop	{r3, pc}

0800db4c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
 800db4c:	b40e      	push	{r1, r2, r3}
 800db4e:	b533      	push	{r0, r1, r4, r5, lr}
 800db50:	ab05      	add	r3, sp, #20
 800db52:	f853 2b04 	ldr.w	r2, [r3], #4
 800db56:	9301      	str	r3, [sp, #4]
 800db58:	4b09      	ldr	r3, [pc, #36]	; (800db80 <_ZNK8touchgfx4Font14getStringWidthEPKtz+0x34>)
 800db5a:	685c      	ldr	r4, [r3, #4]
 800db5c:	1061      	asrs	r1, r4, #1
 800db5e:	07e4      	lsls	r4, r4, #31
 800db60:	eb00 0501 	add.w	r5, r0, r1
 800db64:	bf45      	ittet	mi
 800db66:	681b      	ldrmi	r3, [r3, #0]
 800db68:	5841      	ldrmi	r1, [r0, r1]
 800db6a:	681c      	ldrpl	r4, [r3, #0]
 800db6c:	58cc      	ldrmi	r4, [r1, r3]
 800db6e:	9b01      	ldr	r3, [sp, #4]
 800db70:	2100      	movs	r1, #0
 800db72:	4628      	mov	r0, r5
 800db74:	47a0      	blx	r4
 800db76:	b002      	add	sp, #8
 800db78:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800db7c:	b003      	add	sp, #12
 800db7e:	4770      	bx	lr
 800db80:	20000010 	.word	0x20000010

0800db84 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:
 800db84:	b40c      	push	{r2, r3}
 800db86:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800db88:	ab06      	add	r3, sp, #24
 800db8a:	f853 2b04 	ldr.w	r2, [r3], #4
 800db8e:	9301      	str	r3, [sp, #4]
 800db90:	4b09      	ldr	r3, [pc, #36]	; (800dbb8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz+0x34>)
 800db92:	685d      	ldr	r5, [r3, #4]
 800db94:	106c      	asrs	r4, r5, #1
 800db96:	07ed      	lsls	r5, r5, #31
 800db98:	eb00 0604 	add.w	r6, r0, r4
 800db9c:	bf45      	ittet	mi
 800db9e:	681b      	ldrmi	r3, [r3, #0]
 800dba0:	5900      	ldrmi	r0, [r0, r4]
 800dba2:	681c      	ldrpl	r4, [r3, #0]
 800dba4:	58c4      	ldrmi	r4, [r0, r3]
 800dba6:	9b01      	ldr	r3, [sp, #4]
 800dba8:	4630      	mov	r0, r6
 800dbaa:	47a0      	blx	r4
 800dbac:	b002      	add	sp, #8
 800dbae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dbb2:	b002      	add	sp, #8
 800dbb4:	4770      	bx	lr
 800dbb6:	bf00      	nop
 800dbb8:	20000010 	.word	0x20000010

0800dbbc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800dbbc:	b40e      	push	{r1, r2, r3}
 800dbbe:	b530      	push	{r4, r5, lr}
 800dbc0:	b098      	sub	sp, #96	; 0x60
 800dbc2:	ab1b      	add	r3, sp, #108	; 0x6c
 800dbc4:	4604      	mov	r4, r0
 800dbc6:	f853 5b04 	ldr.w	r5, [r3], #4
 800dbca:	9301      	str	r3, [sp, #4]
 800dbcc:	a802      	add	r0, sp, #8
 800dbce:	f000 ffd5 	bl	800eb7c <_ZN8touchgfx12TextProviderC1Ev>
 800dbd2:	6823      	ldr	r3, [r4, #0]
 800dbd4:	4620      	mov	r0, r4
 800dbd6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dbd8:	4798      	blx	r3
 800dbda:	9a01      	ldr	r2, [sp, #4]
 800dbdc:	4603      	mov	r3, r0
 800dbde:	4629      	mov	r1, r5
 800dbe0:	a802      	add	r0, sp, #8
 800dbe2:	f000 ffe8 	bl	800ebb6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dbe6:	a802      	add	r0, sp, #8
 800dbe8:	f001 f81e 	bl	800ec28 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dbec:	2401      	movs	r4, #1
 800dbee:	b2a3      	uxth	r3, r4
 800dbf0:	b140      	cbz	r0, 800dc04 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800dbf2:	280a      	cmp	r0, #10
 800dbf4:	bf08      	it	eq
 800dbf6:	3301      	addeq	r3, #1
 800dbf8:	a802      	add	r0, sp, #8
 800dbfa:	bf08      	it	eq
 800dbfc:	b21c      	sxtheq	r4, r3
 800dbfe:	f001 f813 	bl	800ec28 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dc02:	e7f4      	b.n	800dbee <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800dc04:	4618      	mov	r0, r3
 800dc06:	b018      	add	sp, #96	; 0x60
 800dc08:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800dc0c:	b003      	add	sp, #12
 800dc0e:	4770      	bx	lr

0800dc10 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800dc10:	b40e      	push	{r1, r2, r3}
 800dc12:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dc14:	b098      	sub	sp, #96	; 0x60
 800dc16:	ab1d      	add	r3, sp, #116	; 0x74
 800dc18:	4605      	mov	r5, r0
 800dc1a:	f853 4b04 	ldr.w	r4, [r3], #4
 800dc1e:	9300      	str	r3, [sp, #0]
 800dc20:	a802      	add	r0, sp, #8
 800dc22:	f000 ffab 	bl	800eb7c <_ZN8touchgfx12TextProviderC1Ev>
 800dc26:	682b      	ldr	r3, [r5, #0]
 800dc28:	4f21      	ldr	r7, [pc, #132]	; (800dcb0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0xa0>)
 800dc2a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dc2c:	4628      	mov	r0, r5
 800dc2e:	4798      	blx	r3
 800dc30:	ae18      	add	r6, sp, #96	; 0x60
 800dc32:	4603      	mov	r3, r0
 800dc34:	4621      	mov	r1, r4
 800dc36:	9a00      	ldr	r2, [sp, #0]
 800dc38:	a802      	add	r0, sp, #8
 800dc3a:	2400      	movs	r4, #0
 800dc3c:	f000 ffbb 	bl	800ebb6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dc40:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800dc44:	462a      	mov	r2, r5
 800dc46:	4633      	mov	r3, r6
 800dc48:	4621      	mov	r1, r4
 800dc4a:	a802      	add	r0, sp, #8
 800dc4c:	f001 f918 	bl	800ee80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dc50:	b338      	cbz	r0, 800dca2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x92>
 800dc52:	280a      	cmp	r0, #10
 800dc54:	d01e      	beq.n	800dc94 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x84>
 800dc56:	9901      	ldr	r1, [sp, #4]
 800dc58:	b1e1      	cbz	r1, 800dc94 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x84>
 800dc5a:	7b4b      	ldrb	r3, [r1, #13]
 800dc5c:	f891 c008 	ldrb.w	ip, [r1, #8]
 800dc60:	79c9      	ldrb	r1, [r1, #7]
 800dc62:	88aa      	ldrh	r2, [r5, #4]
 800dc64:	f013 0f40 	tst.w	r3, #64	; 0x40
 800dc68:	ea4f 1e03 	mov.w	lr, r3, lsl #4
 800dc6c:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800dc70:	f40e 7e80 	and.w	lr, lr, #256	; 0x100
 800dc74:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800dc78:	bf14      	ite	ne
 800dc7a:	4638      	movne	r0, r7
 800dc7c:	2000      	moveq	r0, #0
 800dc7e:	ea41 010e 	orr.w	r1, r1, lr
 800dc82:	ea43 030c 	orr.w	r3, r3, ip
 800dc86:	440a      	add	r2, r1
 800dc88:	4303      	orrs	r3, r0
 800dc8a:	1ad3      	subs	r3, r2, r3
 800dc8c:	b29b      	uxth	r3, r3
 800dc8e:	42a3      	cmp	r3, r4
 800dc90:	bfc8      	it	gt
 800dc92:	b21c      	sxthgt	r4, r3
 800dc94:	4633      	mov	r3, r6
 800dc96:	462a      	mov	r2, r5
 800dc98:	2100      	movs	r1, #0
 800dc9a:	a802      	add	r0, sp, #8
 800dc9c:	f001 f8f0 	bl	800ee80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dca0:	e7d6      	b.n	800dc50 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x40>
 800dca2:	b2a0      	uxth	r0, r4
 800dca4:	b018      	add	sp, #96	; 0x60
 800dca6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800dcaa:	b003      	add	sp, #12
 800dcac:	4770      	bx	lr
 800dcae:	bf00      	nop
 800dcb0:	fffffe00 	.word	0xfffffe00

0800dcb4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800dcb4:	b40e      	push	{r1, r2, r3}
 800dcb6:	b570      	push	{r4, r5, r6, lr}
 800dcb8:	b099      	sub	sp, #100	; 0x64
 800dcba:	ab1d      	add	r3, sp, #116	; 0x74
 800dcbc:	4604      	mov	r4, r0
 800dcbe:	f853 5b04 	ldr.w	r5, [r3], #4
 800dcc2:	9300      	str	r3, [sp, #0]
 800dcc4:	a802      	add	r0, sp, #8
 800dcc6:	f000 ff59 	bl	800eb7c <_ZN8touchgfx12TextProviderC1Ev>
 800dcca:	6823      	ldr	r3, [r4, #0]
 800dccc:	4620      	mov	r0, r4
 800dcce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dcd0:	4798      	blx	r3
 800dcd2:	4629      	mov	r1, r5
 800dcd4:	4603      	mov	r3, r0
 800dcd6:	9a00      	ldr	r2, [sp, #0]
 800dcd8:	a802      	add	r0, sp, #8
 800dcda:	ad18      	add	r5, sp, #96	; 0x60
 800dcdc:	f000 ff6b 	bl	800ebb6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dce0:	2100      	movs	r1, #0
 800dce2:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800dce6:	4622      	mov	r2, r4
 800dce8:	462b      	mov	r3, r5
 800dcea:	a802      	add	r0, sp, #8
 800dcec:	f001 f8c8 	bl	800ee80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dcf0:	26ff      	movs	r6, #255	; 0xff
 800dcf2:	b190      	cbz	r0, 800dd1a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x66>
 800dcf4:	280a      	cmp	r0, #10
 800dcf6:	d009      	beq.n	800dd0c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x58>
 800dcf8:	9a01      	ldr	r2, [sp, #4]
 800dcfa:	b13a      	cbz	r2, 800dd0c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x58>
 800dcfc:	7923      	ldrb	r3, [r4, #4]
 800dcfe:	7a12      	ldrb	r2, [r2, #8]
 800dd00:	1a9b      	subs	r3, r3, r2
 800dd02:	f003 03ff 	and.w	r3, r3, #255	; 0xff
 800dd06:	429e      	cmp	r6, r3
 800dd08:	bf28      	it	cs
 800dd0a:	461e      	movcs	r6, r3
 800dd0c:	462b      	mov	r3, r5
 800dd0e:	4622      	mov	r2, r4
 800dd10:	2100      	movs	r1, #0
 800dd12:	a802      	add	r0, sp, #8
 800dd14:	f001 f8b4 	bl	800ee80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dd18:	e7eb      	b.n	800dcf2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800dd1a:	4630      	mov	r0, r6
 800dd1c:	b019      	add	sp, #100	; 0x64
 800dd1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dd22:	b003      	add	sp, #12
 800dd24:	4770      	bx	lr

0800dd26 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800dd26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd2a:	4606      	mov	r6, r0
 800dd2c:	b099      	sub	sp, #100	; 0x64
 800dd2e:	a802      	add	r0, sp, #8
 800dd30:	4614      	mov	r4, r2
 800dd32:	4688      	mov	r8, r1
 800dd34:	461d      	mov	r5, r3
 800dd36:	f000 ff21 	bl	800eb7c <_ZN8touchgfx12TextProviderC1Ev>
 800dd3a:	6833      	ldr	r3, [r6, #0]
 800dd3c:	4630      	mov	r0, r6
 800dd3e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dd40:	4798      	blx	r3
 800dd42:	462a      	mov	r2, r5
 800dd44:	4603      	mov	r3, r0
 800dd46:	4621      	mov	r1, r4
 800dd48:	a802      	add	r0, sp, #8
 800dd4a:	f000 ff34 	bl	800ebb6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dd4e:	f04f 0b00 	mov.w	fp, #0
 800dd52:	465f      	mov	r7, fp
 800dd54:	46da      	mov	sl, fp
 800dd56:	46d9      	mov	r9, fp
 800dd58:	ab01      	add	r3, sp, #4
 800dd5a:	4632      	mov	r2, r6
 800dd5c:	4641      	mov	r1, r8
 800dd5e:	a802      	add	r0, sp, #8
 800dd60:	f8cd 9004 	str.w	r9, [sp, #4]
 800dd64:	f001 f88c 	bl	800ee80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dd68:	4605      	mov	r5, r0
 800dd6a:	b108      	cbz	r0, 800dd70 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x4a>
 800dd6c:	280a      	cmp	r0, #10
 800dd6e:	d10b      	bne.n	800dd88 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x62>
 800dd70:	4557      	cmp	r7, sl
 800dd72:	bf38      	it	cc
 800dd74:	4657      	movcc	r7, sl
 800dd76:	f04f 0a00 	mov.w	sl, #0
 800dd7a:	b91d      	cbnz	r5, 800dd84 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5e>
 800dd7c:	4638      	mov	r0, r7
 800dd7e:	b019      	add	sp, #100	; 0x64
 800dd80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd84:	46ab      	mov	fp, r5
 800dd86:	e7e7      	b.n	800dd58 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x32>
 800dd88:	9a01      	ldr	r2, [sp, #4]
 800dd8a:	2a00      	cmp	r2, #0
 800dd8c:	d0fa      	beq.n	800dd84 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5e>
 800dd8e:	f992 400d 	ldrsb.w	r4, [r2, #13]
 800dd92:	6833      	ldr	r3, [r6, #0]
 800dd94:	8895      	ldrh	r5, [r2, #4]
 800dd96:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dd98:	f404 7080 	and.w	r0, r4, #256	; 0x100
 800dd9c:	7a94      	ldrb	r4, [r2, #10]
 800dd9e:	4659      	mov	r1, fp
 800dda0:	4304      	orrs	r4, r0
 800dda2:	4630      	mov	r0, r6
 800dda4:	4798      	blx	r3
 800dda6:	4420      	add	r0, r4
 800dda8:	4450      	add	r0, sl
 800ddaa:	fa1f fa80 	uxth.w	sl, r0
 800ddae:	e7e4      	b.n	800dd7a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x54>

0800ddb0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800ddb0:	b513      	push	{r0, r1, r4, lr}
 800ddb2:	1d01      	adds	r1, r0, #4
 800ddb4:	4603      	mov	r3, r0
 800ddb6:	c903      	ldmia	r1, {r0, r1}
 800ddb8:	466a      	mov	r2, sp
 800ddba:	e882 0003 	stmia.w	r2, {r0, r1}
 800ddbe:	2100      	movs	r1, #0
 800ddc0:	9100      	str	r1, [sp, #0]
 800ddc2:	6819      	ldr	r1, [r3, #0]
 800ddc4:	4618      	mov	r0, r3
 800ddc6:	690c      	ldr	r4, [r1, #16]
 800ddc8:	4611      	mov	r1, r2
 800ddca:	47a0      	blx	r4
 800ddcc:	b002      	add	sp, #8
 800ddce:	bd10      	pop	{r4, pc}

0800ddd0 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800ddd0:	b538      	push	{r3, r4, r5, lr}
 800ddd2:	680b      	ldr	r3, [r1, #0]
 800ddd4:	460c      	mov	r4, r1
 800ddd6:	68db      	ldr	r3, [r3, #12]
 800ddd8:	4605      	mov	r5, r0
 800ddda:	4798      	blx	r3
 800dddc:	6823      	ldr	r3, [r4, #0]
 800ddde:	4620      	mov	r0, r4
 800dde0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dde2:	4629      	mov	r1, r5
 800dde4:	4798      	blx	r3
 800dde6:	4628      	mov	r0, r5
 800dde8:	bd38      	pop	{r3, r4, r5, pc}

0800ddea <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800ddea:	b410      	push	{r4}
 800ddec:	880a      	ldrh	r2, [r1, #0]
 800ddee:	8884      	ldrh	r4, [r0, #4]
 800ddf0:	4422      	add	r2, r4
 800ddf2:	800a      	strh	r2, [r1, #0]
 800ddf4:	88c4      	ldrh	r4, [r0, #6]
 800ddf6:	884a      	ldrh	r2, [r1, #2]
 800ddf8:	4422      	add	r2, r4
 800ddfa:	804a      	strh	r2, [r1, #2]
 800ddfc:	6940      	ldr	r0, [r0, #20]
 800ddfe:	b120      	cbz	r0, 800de0a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800de00:	6803      	ldr	r3, [r0, #0]
 800de02:	f85d 4b04 	ldr.w	r4, [sp], #4
 800de06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800de08:	4718      	bx	r3
 800de0a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800de0e:	4770      	bx	lr

0800de10 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800de10:	b5f0      	push	{r4, r5, r6, r7, lr}
 800de12:	460b      	mov	r3, r1
 800de14:	b085      	sub	sp, #20
 800de16:	4604      	mov	r4, r0
 800de18:	b901      	cbnz	r1, 800de1c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800de1a:	b1fa      	cbz	r2, 800de5c <_ZN8touchgfx8Drawable12moveRelativeEss+0x4c>
 800de1c:	1d27      	adds	r7, r4, #4
 800de1e:	e897 0003 	ldmia.w	r7, {r0, r1}
 800de22:	466e      	mov	r6, sp
 800de24:	e886 0003 	stmia.w	r6, {r0, r1}
 800de28:	88e1      	ldrh	r1, [r4, #6]
 800de2a:	440a      	add	r2, r1
 800de2c:	88a1      	ldrh	r1, [r4, #4]
 800de2e:	4419      	add	r1, r3
 800de30:	6823      	ldr	r3, [r4, #0]
 800de32:	b209      	sxth	r1, r1
 800de34:	4620      	mov	r0, r4
 800de36:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800de38:	b212      	sxth	r2, r2
 800de3a:	4798      	blx	r3
 800de3c:	e897 0003 	ldmia.w	r7, {r0, r1}
 800de40:	ad02      	add	r5, sp, #8
 800de42:	e885 0003 	stmia.w	r5, {r0, r1}
 800de46:	6960      	ldr	r0, [r4, #20]
 800de48:	b150      	cbz	r0, 800de60 <_ZN8touchgfx8Drawable12moveRelativeEss+0x50>
 800de4a:	6803      	ldr	r3, [r0, #0]
 800de4c:	4631      	mov	r1, r6
 800de4e:	691b      	ldr	r3, [r3, #16]
 800de50:	4798      	blx	r3
 800de52:	6960      	ldr	r0, [r4, #20]
 800de54:	6803      	ldr	r3, [r0, #0]
 800de56:	691b      	ldr	r3, [r3, #16]
 800de58:	4629      	mov	r1, r5
 800de5a:	4798      	blx	r3
 800de5c:	b005      	add	sp, #20
 800de5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800de60:	f7ff fb7c 	bl	800d55c <_ZN8touchgfx11Application11getInstanceEv>
 800de64:	6803      	ldr	r3, [r0, #0]
 800de66:	4631      	mov	r1, r6
 800de68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800de6a:	4798      	blx	r3
 800de6c:	f7ff fb76 	bl	800d55c <_ZN8touchgfx11Application11getInstanceEv>
 800de70:	6803      	ldr	r3, [r0, #0]
 800de72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800de74:	e7f0      	b.n	800de58 <_ZN8touchgfx8Drawable12moveRelativeEss+0x48>

0800de76 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800de76:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800de78:	8882      	ldrh	r2, [r0, #4]
 800de7a:	880b      	ldrh	r3, [r1, #0]
 800de7c:	4413      	add	r3, r2
 800de7e:	800b      	strh	r3, [r1, #0]
 800de80:	88c2      	ldrh	r2, [r0, #6]
 800de82:	884b      	ldrh	r3, [r1, #2]
 800de84:	4413      	add	r3, r2
 800de86:	4602      	mov	r2, r0
 800de88:	804b      	strh	r3, [r1, #2]
 800de8a:	4605      	mov	r5, r0
 800de8c:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800de90:	460c      	mov	r4, r1
 800de92:	6851      	ldr	r1, [r2, #4]
 800de94:	466b      	mov	r3, sp
 800de96:	c303      	stmia	r3!, {r0, r1}
 800de98:	4621      	mov	r1, r4
 800de9a:	4668      	mov	r0, sp
 800de9c:	f7fd ff24 	bl	800bce8 <_ZN8touchgfx4RectaNERKS0_>
 800dea0:	466b      	mov	r3, sp
 800dea2:	cb03      	ldmia	r3!, {r0, r1}
 800dea4:	6020      	str	r0, [r4, #0]
 800dea6:	6061      	str	r1, [r4, #4]
 800dea8:	6968      	ldr	r0, [r5, #20]
 800deaa:	b128      	cbz	r0, 800deb8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800deac:	6803      	ldr	r3, [r0, #0]
 800deae:	691b      	ldr	r3, [r3, #16]
 800deb0:	4621      	mov	r1, r4
 800deb2:	4798      	blx	r3
 800deb4:	b003      	add	sp, #12
 800deb6:	bd30      	pop	{r4, r5, pc}
 800deb8:	f7ff fb50 	bl	800d55c <_ZN8touchgfx11Application11getInstanceEv>
 800debc:	6803      	ldr	r3, [r0, #0]
 800debe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dec0:	e7f6      	b.n	800deb0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800dec2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800dec2:	b570      	push	{r4, r5, r6, lr}
 800dec4:	8882      	ldrh	r2, [r0, #4]
 800dec6:	880b      	ldrh	r3, [r1, #0]
 800dec8:	4413      	add	r3, r2
 800deca:	800b      	strh	r3, [r1, #0]
 800decc:	88c2      	ldrh	r2, [r0, #6]
 800dece:	884b      	ldrh	r3, [r1, #2]
 800ded0:	460c      	mov	r4, r1
 800ded2:	4413      	add	r3, r2
 800ded4:	804b      	strh	r3, [r1, #2]
 800ded6:	4605      	mov	r5, r0
 800ded8:	1d01      	adds	r1, r0, #4
 800deda:	4620      	mov	r0, r4
 800dedc:	f7fd ff04 	bl	800bce8 <_ZN8touchgfx4RectaNERKS0_>
 800dee0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800dee4:	b153      	cbz	r3, 800defc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800dee6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800deea:	b13b      	cbz	r3, 800defc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800deec:	6968      	ldr	r0, [r5, #20]
 800deee:	b128      	cbz	r0, 800defc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800def0:	6803      	ldr	r3, [r0, #0]
 800def2:	4621      	mov	r1, r4
 800def4:	6a1b      	ldr	r3, [r3, #32]
 800def6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800defa:	4718      	bx	r3
 800defc:	bd70      	pop	{r4, r5, r6, pc}

0800defe <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800defe:	b510      	push	{r4, lr}
 800df00:	4604      	mov	r4, r0
 800df02:	4608      	mov	r0, r1
 800df04:	2300      	movs	r3, #0
 800df06:	8023      	strh	r3, [r4, #0]
 800df08:	8063      	strh	r3, [r4, #2]
 800df0a:	6803      	ldr	r3, [r0, #0]
 800df0c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800df10:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800df14:	80a1      	strh	r1, [r4, #4]
 800df16:	80e2      	strh	r2, [r4, #6]
 800df18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800df1a:	4621      	mov	r1, r4
 800df1c:	4798      	blx	r3
 800df1e:	4620      	mov	r0, r4
 800df20:	bd10      	pop	{r4, pc}
	...

0800df24 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800df24:	b530      	push	{r4, r5, lr}
 800df26:	8083      	strh	r3, [r0, #4]
 800df28:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800df2c:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800df30:	7183      	strb	r3, [r0, #6]
 800df32:	79c3      	ldrb	r3, [r0, #7]
 800df34:	6101      	str	r1, [r0, #16]
 800df36:	f365 0306 	bfi	r3, r5, #0, #7
 800df3a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800df3e:	8282      	strh	r2, [r0, #20]
 800df40:	f365 13c7 	bfi	r3, r5, #7, #1
 800df44:	71c3      	strb	r3, [r0, #7]
 800df46:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800df4a:	7203      	strb	r3, [r0, #8]
 800df4c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800df50:	7243      	strb	r3, [r0, #9]
 800df52:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800df56:	8143      	strh	r3, [r0, #10]
 800df58:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800df5c:	8183      	strh	r3, [r0, #12]
 800df5e:	4b01      	ldr	r3, [pc, #4]	; (800df64 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800df60:	6003      	str	r3, [r0, #0]
 800df62:	bd30      	pop	{r4, r5, pc}
 800df64:	0801d8f0 	.word	0x0801d8f0

0800df68 <_ZNK8touchgfx9ConstFont4findEt>:
 800df68:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df6a:	8a84      	ldrh	r4, [r0, #20]
 800df6c:	2500      	movs	r5, #0
 800df6e:	3c01      	subs	r4, #1
 800df70:	260e      	movs	r6, #14
 800df72:	42a5      	cmp	r5, r4
 800df74:	dc0c      	bgt.n	800df90 <_ZNK8touchgfx9ConstFont4findEt+0x28>
 800df76:	192a      	adds	r2, r5, r4
 800df78:	6903      	ldr	r3, [r0, #16]
 800df7a:	1052      	asrs	r2, r2, #1
 800df7c:	fb06 3302 	mla	r3, r6, r2, r3
 800df80:	889f      	ldrh	r7, [r3, #4]
 800df82:	428f      	cmp	r7, r1
 800df84:	d901      	bls.n	800df8a <_ZNK8touchgfx9ConstFont4findEt+0x22>
 800df86:	1e54      	subs	r4, r2, #1
 800df88:	e7f3      	b.n	800df72 <_ZNK8touchgfx9ConstFont4findEt+0xa>
 800df8a:	d202      	bcs.n	800df92 <_ZNK8touchgfx9ConstFont4findEt+0x2a>
 800df8c:	1c55      	adds	r5, r2, #1
 800df8e:	e7f0      	b.n	800df72 <_ZNK8touchgfx9ConstFont4findEt+0xa>
 800df90:	2300      	movs	r3, #0
 800df92:	4618      	mov	r0, r3
 800df94:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800df96 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800df96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800df98:	4605      	mov	r5, r0
 800df9a:	4617      	mov	r7, r2
 800df9c:	461e      	mov	r6, r3
 800df9e:	f7ff ffe3 	bl	800df68 <_ZNK8touchgfx9ConstFont4findEt>
 800dfa2:	b9e0      	cbnz	r0, 800dfde <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x48>
 800dfa4:	b911      	cbnz	r1, 800dfac <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x16>
 800dfa6:	2400      	movs	r4, #0
 800dfa8:	4620      	mov	r0, r4
 800dfaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dfac:	290a      	cmp	r1, #10
 800dfae:	d0fa      	beq.n	800dfa6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800dfb0:	682b      	ldr	r3, [r5, #0]
 800dfb2:	4628      	mov	r0, r5
 800dfb4:	691b      	ldr	r3, [r3, #16]
 800dfb6:	4798      	blx	r3
 800dfb8:	4601      	mov	r1, r0
 800dfba:	4628      	mov	r0, r5
 800dfbc:	f7ff ffd4 	bl	800df68 <_ZNK8touchgfx9ConstFont4findEt>
 800dfc0:	4604      	mov	r4, r0
 800dfc2:	2800      	cmp	r0, #0
 800dfc4:	d0ef      	beq.n	800dfa6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800dfc6:	682b      	ldr	r3, [r5, #0]
 800dfc8:	4621      	mov	r1, r4
 800dfca:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dfcc:	4628      	mov	r0, r5
 800dfce:	4798      	blx	r3
 800dfd0:	6038      	str	r0, [r7, #0]
 800dfd2:	682b      	ldr	r3, [r5, #0]
 800dfd4:	4628      	mov	r0, r5
 800dfd6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800dfd8:	4798      	blx	r3
 800dfda:	7030      	strb	r0, [r6, #0]
 800dfdc:	e7e4      	b.n	800dfa8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x12>
 800dfde:	4604      	mov	r4, r0
 800dfe0:	e7f1      	b.n	800dfc6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x30>

0800dfe2 <_ZN8touchgfx10ClickEventD1Ev>:
 800dfe2:	4770      	bx	lr

0800dfe4 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800dfe4:	2000      	movs	r0, #0
 800dfe6:	4770      	bx	lr

0800dfe8 <_ZN8touchgfx9DragEventD1Ev>:
 800dfe8:	4770      	bx	lr

0800dfea <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800dfea:	2001      	movs	r0, #1
 800dfec:	4770      	bx	lr

0800dfee <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800dfee:	2002      	movs	r0, #2
 800dff0:	4770      	bx	lr

0800dff2 <_ZN8touchgfx12GestureEventD1Ev>:
 800dff2:	4770      	bx	lr

0800dff4 <_ZN8touchgfx10ClickEventD0Ev>:
 800dff4:	b510      	push	{r4, lr}
 800dff6:	210c      	movs	r1, #12
 800dff8:	4604      	mov	r4, r0
 800dffa:	f00c fcc7 	bl	801a98c <_ZdlPvj>
 800dffe:	4620      	mov	r0, r4
 800e000:	bd10      	pop	{r4, pc}

0800e002 <_ZN8touchgfx9DragEventD0Ev>:
 800e002:	b510      	push	{r4, lr}
 800e004:	2110      	movs	r1, #16
 800e006:	4604      	mov	r4, r0
 800e008:	f00c fcc0 	bl	801a98c <_ZdlPvj>
 800e00c:	4620      	mov	r0, r4
 800e00e:	bd10      	pop	{r4, pc}

0800e010 <_ZN8touchgfx12GestureEventD0Ev>:
 800e010:	b510      	push	{r4, lr}
 800e012:	210c      	movs	r1, #12
 800e014:	4604      	mov	r4, r0
 800e016:	f00c fcb9 	bl	801a98c <_ZdlPvj>
 800e01a:	4620      	mov	r0, r4
 800e01c:	bd10      	pop	{r4, pc}
	...

0800e020 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800e020:	b530      	push	{r4, r5, lr}
 800e022:	460d      	mov	r5, r1
 800e024:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800e026:	b087      	sub	sp, #28
 800e028:	4604      	mov	r4, r0
 800e02a:	b301      	cbz	r1, 800e06e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800e02c:	a801      	add	r0, sp, #4
 800e02e:	f7ff ff66 	bl	800defe <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e032:	892a      	ldrh	r2, [r5, #8]
 800e034:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e038:	7928      	ldrb	r0, [r5, #4]
 800e03a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e03e:	f88d 0010 	strb.w	r0, [sp, #16]
 800e042:	1ad2      	subs	r2, r2, r3
 800e044:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e046:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e048:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e04c:	441a      	add	r2, r3
 800e04e:	896b      	ldrh	r3, [r5, #10]
 800e050:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800e054:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e058:	1b5b      	subs	r3, r3, r5
 800e05a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800e05c:	442b      	add	r3, r5
 800e05e:	4d05      	ldr	r5, [pc, #20]	; (800e074 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800e060:	9503      	str	r5, [sp, #12]
 800e062:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e066:	6803      	ldr	r3, [r0, #0]
 800e068:	a903      	add	r1, sp, #12
 800e06a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e06c:	4798      	blx	r3
 800e06e:	b007      	add	sp, #28
 800e070:	bd30      	pop	{r4, r5, pc}
 800e072:	bf00      	nop
 800e074:	0801d96c 	.word	0x0801d96c

0800e078 <_ZNK8touchgfx4Rect9intersectEss>:
 800e078:	b510      	push	{r4, lr}
 800e07a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800e07e:	428b      	cmp	r3, r1
 800e080:	dc10      	bgt.n	800e0a4 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800e082:	8884      	ldrh	r4, [r0, #4]
 800e084:	4423      	add	r3, r4
 800e086:	b21b      	sxth	r3, r3
 800e088:	4299      	cmp	r1, r3
 800e08a:	da0b      	bge.n	800e0a4 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800e08c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e090:	4293      	cmp	r3, r2
 800e092:	dc07      	bgt.n	800e0a4 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800e094:	88c0      	ldrh	r0, [r0, #6]
 800e096:	4418      	add	r0, r3
 800e098:	b200      	sxth	r0, r0
 800e09a:	4282      	cmp	r2, r0
 800e09c:	bfac      	ite	ge
 800e09e:	2000      	movge	r0, #0
 800e0a0:	2001      	movlt	r0, #1
 800e0a2:	bd10      	pop	{r4, pc}
 800e0a4:	2000      	movs	r0, #0
 800e0a6:	e7fc      	b.n	800e0a2 <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800e0a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800e0a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e0aa:	460c      	mov	r4, r1
 800e0ac:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800e0ae:	b089      	sub	sp, #36	; 0x24
 800e0b0:	4605      	mov	r5, r0
 800e0b2:	2900      	cmp	r1, #0
 800e0b4:	d054      	beq.n	800e160 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800e0b6:	4668      	mov	r0, sp
 800e0b8:	f7ff ff21 	bl	800defe <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e0bc:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800e0be:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800e0c0:	8922      	ldrh	r2, [r4, #8]
 800e0c2:	88e1      	ldrh	r1, [r4, #6]
 800e0c4:	443a      	add	r2, r7
 800e0c6:	4431      	add	r1, r6
 800e0c8:	b212      	sxth	r2, r2
 800e0ca:	b209      	sxth	r1, r1
 800e0cc:	4668      	mov	r0, sp
 800e0ce:	f7ff ffd3 	bl	800e078 <_ZNK8touchgfx4Rect9intersectEss>
 800e0d2:	b1d0      	cbz	r0, 800e10a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800e0d4:	89a2      	ldrh	r2, [r4, #12]
 800e0d6:	8961      	ldrh	r1, [r4, #10]
 800e0d8:	443a      	add	r2, r7
 800e0da:	4431      	add	r1, r6
 800e0dc:	b212      	sxth	r2, r2
 800e0de:	b209      	sxth	r1, r1
 800e0e0:	4668      	mov	r0, sp
 800e0e2:	f7ff ffc9 	bl	800e078 <_ZNK8touchgfx4Rect9intersectEss>
 800e0e6:	4603      	mov	r3, r0
 800e0e8:	b978      	cbnz	r0, 800e10a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800e0ea:	4a1e      	ldr	r2, [pc, #120]	; (800e164 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800e0ec:	9204      	str	r2, [sp, #16]
 800e0ee:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e0f0:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e0f4:	2202      	movs	r2, #2
 800e0f6:	f88d 2014 	strb.w	r2, [sp, #20]
 800e0fa:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e0fe:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e102:	6803      	ldr	r3, [r0, #0]
 800e104:	a904      	add	r1, sp, #16
 800e106:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e108:	4798      	blx	r3
 800e10a:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800e10c:	a802      	add	r0, sp, #8
 800e10e:	f7ff fef6 	bl	800defe <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e112:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800e116:	88e0      	ldrh	r0, [r4, #6]
 800e118:	8961      	ldrh	r1, [r4, #10]
 800e11a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800e11e:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800e122:	8923      	ldrh	r3, [r4, #8]
 800e124:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800e126:	7927      	ldrb	r7, [r4, #4]
 800e128:	f88d 7014 	strb.w	r7, [sp, #20]
 800e12c:	1a80      	subs	r0, r0, r2
 800e12e:	1a89      	subs	r1, r1, r2
 800e130:	89a2      	ldrh	r2, [r4, #12]
 800e132:	4c0d      	ldr	r4, [pc, #52]	; (800e168 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800e134:	9404      	str	r4, [sp, #16]
 800e136:	4460      	add	r0, ip
 800e138:	eba3 030e 	sub.w	r3, r3, lr
 800e13c:	eba2 020e 	sub.w	r2, r2, lr
 800e140:	f8ad 0016 	strh.w	r0, [sp, #22]
 800e144:	4433      	add	r3, r6
 800e146:	4461      	add	r1, ip
 800e148:	4432      	add	r2, r6
 800e14a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e14c:	f8ad 101a 	strh.w	r1, [sp, #26]
 800e150:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e154:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e158:	6803      	ldr	r3, [r0, #0]
 800e15a:	a904      	add	r1, sp, #16
 800e15c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e15e:	4798      	blx	r3
 800e160:	b009      	add	sp, #36	; 0x24
 800e162:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e164:	0801d944 	.word	0x0801d944
 800e168:	0801d958 	.word	0x0801d958

0800e16c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800e16c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e170:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800e174:	790b      	ldrb	r3, [r1, #4]
 800e176:	b0a1      	sub	sp, #132	; 0x84
 800e178:	4604      	mov	r4, r0
 800e17a:	460d      	mov	r5, r1
 800e17c:	f1b9 0f00 	cmp.w	r9, #0
 800e180:	d00f      	beq.n	800e1a2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800e182:	2b00      	cmp	r3, #0
 800e184:	f040 80a0 	bne.w	800e2c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800e188:	b021      	add	sp, #132	; 0x84
 800e18a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e18e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800e192:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e196:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e19a:	1d20      	adds	r0, r4, #4
 800e19c:	f7fd fcf2 	bl	800bb84 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e1a0:	e092      	b.n	800e2c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800e1a2:	2b00      	cmp	r3, #0
 800e1a4:	d1f0      	bne.n	800e188 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e1a6:	4b5e      	ldr	r3, [pc, #376]	; (800e320 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800e1a8:	681b      	ldr	r3, [r3, #0]
 800e1aa:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800e1ae:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800e1b2:	f1ba 0f03 	cmp.w	sl, #3
 800e1b6:	ddea      	ble.n	800e18e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800e1b8:	f1ba 0f0c 	cmp.w	sl, #12
 800e1bc:	f04f 0303 	mov.w	r3, #3
 800e1c0:	bfdc      	itt	le
 800e1c2:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800e1c6:	fb92 f3f3 	sdivle	r3, r2, r3
 800e1ca:	9301      	str	r3, [sp, #4]
 800e1cc:	4b55      	ldr	r3, [pc, #340]	; (800e324 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800e1ce:	4956      	ldr	r1, [pc, #344]	; (800e328 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800e1d0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e1d4:	4b55      	ldr	r3, [pc, #340]	; (800e32c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800e1d6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e1da:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e1de:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e1e2:	ab0e      	add	r3, sp, #56	; 0x38
 800e1e4:	2248      	movs	r2, #72	; 0x48
 800e1e6:	2600      	movs	r6, #0
 800e1e8:	4618      	mov	r0, r3
 800e1ea:	960a      	str	r6, [sp, #40]	; 0x28
 800e1ec:	f00c fc78 	bl	801aae0 <memcpy>
 800e1f0:	f04f 32ff 	mov.w	r2, #4294967295
 800e1f4:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800e1f8:	f8cd a008 	str.w	sl, [sp, #8]
 800e1fc:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800e200:	fb93 f3f2 	sdiv	r3, r3, r2
 800e204:	b29b      	uxth	r3, r3
 800e206:	46b3      	mov	fp, r6
 800e208:	9303      	str	r3, [sp, #12]
 800e20a:	2300      	movs	r3, #0
 800e20c:	9309      	str	r3, [sp, #36]	; 0x24
 800e20e:	9b07      	ldr	r3, [sp, #28]
 800e210:	9a03      	ldr	r2, [sp, #12]
 800e212:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800e216:	88ef      	ldrh	r7, [r5, #6]
 800e218:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800e21c:	fb13 f302 	smulbb	r3, r3, r2
 800e220:	b29b      	uxth	r3, r3
 800e222:	9304      	str	r3, [sp, #16]
 800e224:	9b07      	ldr	r3, [sp, #28]
 800e226:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800e22a:	a80a      	add	r0, sp, #40	; 0x28
 800e22c:	685b      	ldr	r3, [r3, #4]
 800e22e:	fb13 f302 	smulbb	r3, r3, r2
 800e232:	b29b      	uxth	r3, r3
 800e234:	9305      	str	r3, [sp, #20]
 800e236:	9b04      	ldr	r3, [sp, #16]
 800e238:	441f      	add	r7, r3
 800e23a:	9b05      	ldr	r3, [sp, #20]
 800e23c:	4498      	add	r8, r3
 800e23e:	b23f      	sxth	r7, r7
 800e240:	fa0f f888 	sxth.w	r8, r8
 800e244:	4642      	mov	r2, r8
 800e246:	4639      	mov	r1, r7
 800e248:	f7ff ff16 	bl	800e078 <_ZNK8touchgfx4Rect9intersectEss>
 800e24c:	b380      	cbz	r0, 800e2b0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e24e:	4639      	mov	r1, r7
 800e250:	ab09      	add	r3, sp, #36	; 0x24
 800e252:	4642      	mov	r2, r8
 800e254:	1d20      	adds	r0, r4, #4
 800e256:	f7fd fc95 	bl	800bb84 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e25a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e25c:	b341      	cbz	r1, 800e2b0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e25e:	4549      	cmp	r1, r9
 800e260:	d026      	beq.n	800e2b0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e262:	a80c      	add	r0, sp, #48	; 0x30
 800e264:	f7ff fe4b 	bl	800defe <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e268:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800e26c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800e270:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800e274:	2002      	movs	r0, #2
 800e276:	fb92 f2f0 	sdiv	r2, r2, r0
 800e27a:	440a      	add	r2, r1
 800e27c:	1a99      	subs	r1, r3, r2
 800e27e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800e282:	fb93 f3f0 	sdiv	r3, r3, r0
 800e286:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800e28a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e28e:	4403      	add	r3, r0
 800e290:	1ad3      	subs	r3, r2, r3
 800e292:	435b      	muls	r3, r3
 800e294:	9a06      	ldr	r2, [sp, #24]
 800e296:	fb01 3301 	mla	r3, r1, r1, r3
 800e29a:	4293      	cmp	r3, r2
 800e29c:	d208      	bcs.n	800e2b0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e29e:	9a04      	ldr	r2, [sp, #16]
 800e2a0:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800e2a4:	86a2      	strh	r2, [r4, #52]	; 0x34
 800e2a6:	9a05      	ldr	r2, [sp, #20]
 800e2a8:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800e2ac:	86e2      	strh	r2, [r4, #54]	; 0x36
 800e2ae:	9306      	str	r3, [sp, #24]
 800e2b0:	f10b 0b02 	add.w	fp, fp, #2
 800e2b4:	f1bb 0f08 	cmp.w	fp, #8
 800e2b8:	dda7      	ble.n	800e20a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e2ba:	9b02      	ldr	r3, [sp, #8]
 800e2bc:	4453      	add	r3, sl
 800e2be:	9302      	str	r3, [sp, #8]
 800e2c0:	9b01      	ldr	r3, [sp, #4]
 800e2c2:	3601      	adds	r6, #1
 800e2c4:	42b3      	cmp	r3, r6
 800e2c6:	d199      	bne.n	800e1fc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800e2c8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e2ca:	2900      	cmp	r1, #0
 800e2cc:	f43f af5c 	beq.w	800e188 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e2d0:	a80c      	add	r0, sp, #48	; 0x30
 800e2d2:	f7ff fe14 	bl	800defe <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e2d6:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800e2da:	88ea      	ldrh	r2, [r5, #6]
 800e2dc:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800e2e0:	7929      	ldrb	r1, [r5, #4]
 800e2e2:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800e2e6:	1ad2      	subs	r2, r2, r3
 800e2e8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e2ea:	441a      	add	r2, r3
 800e2ec:	892b      	ldrh	r3, [r5, #8]
 800e2ee:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800e2f2:	1a1b      	subs	r3, r3, r0
 800e2f4:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800e2f6:	4403      	add	r3, r0
 800e2f8:	480d      	ldr	r0, [pc, #52]	; (800e330 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800e2fa:	900e      	str	r0, [sp, #56]	; 0x38
 800e2fc:	2600      	movs	r6, #0
 800e2fe:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e300:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800e304:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800e308:	6803      	ldr	r3, [r0, #0]
 800e30a:	a90e      	add	r1, sp, #56	; 0x38
 800e30c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e30e:	4798      	blx	r3
 800e310:	792b      	ldrb	r3, [r5, #4]
 800e312:	2b00      	cmp	r3, #0
 800e314:	f43f af38 	beq.w	800e188 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e318:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800e31c:	e734      	b.n	800e188 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e31e:	bf00      	nop
 800e320:	20026900 	.word	0x20026900
 800e324:	200268f4 	.word	0x200268f4
 800e328:	0801c1c4 	.word	0x0801c1c4
 800e32c:	200268f6 	.word	0x200268f6
 800e330:	0801d944 	.word	0x0801d944

0800e334 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800e334:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e336:	4604      	mov	r4, r0
 800e338:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800e33c:	3201      	adds	r2, #1
 800e33e:	d112      	bne.n	800e366 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800e340:	6803      	ldr	r3, [r0, #0]
 800e342:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e346:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e34a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e34e:	2500      	movs	r5, #0
 800e350:	9500      	str	r5, [sp, #0]
 800e352:	466d      	mov	r5, sp
 800e354:	4629      	mov	r1, r5
 800e356:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e35a:	6a1b      	ldr	r3, [r3, #32]
 800e35c:	4798      	blx	r3
 800e35e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e362:	e884 0003 	stmia.w	r4, {r0, r1}
 800e366:	4620      	mov	r0, r4
 800e368:	b003      	add	sp, #12
 800e36a:	bd30      	pop	{r4, r5, pc}

0800e36c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800e36c:	b513      	push	{r0, r1, r4, lr}
 800e36e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800e372:	3301      	adds	r3, #1
 800e374:	4604      	mov	r4, r0
 800e376:	d109      	bne.n	800e38c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800e378:	4601      	mov	r1, r0
 800e37a:	4668      	mov	r0, sp
 800e37c:	f7ff fdbf 	bl	800defe <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e380:	f8bd 3000 	ldrh.w	r3, [sp]
 800e384:	8423      	strh	r3, [r4, #32]
 800e386:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e38a:	8463      	strh	r3, [r4, #34]	; 0x22
 800e38c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800e390:	b002      	add	sp, #8
 800e392:	bd10      	pop	{r4, pc}

0800e394 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800e394:	b513      	push	{r0, r1, r4, lr}
 800e396:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800e39a:	3301      	adds	r3, #1
 800e39c:	4604      	mov	r4, r0
 800e39e:	d109      	bne.n	800e3b4 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800e3a0:	4601      	mov	r1, r0
 800e3a2:	4668      	mov	r0, sp
 800e3a4:	f7ff fdab 	bl	800defe <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e3a8:	f8bd 3000 	ldrh.w	r3, [sp]
 800e3ac:	8423      	strh	r3, [r4, #32]
 800e3ae:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e3b2:	8463      	strh	r3, [r4, #34]	; 0x22
 800e3b4:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800e3b8:	b002      	add	sp, #8
 800e3ba:	bd10      	pop	{r4, pc}

0800e3bc <_ZN8touchgfx6ScreenC1Ev>:
 800e3bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e3be:	4605      	mov	r5, r0
 800e3c0:	4b17      	ldr	r3, [pc, #92]	; (800e420 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800e3c2:	f845 3b04 	str.w	r3, [r5], #4
 800e3c6:	2301      	movs	r3, #1
 800e3c8:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
 800e3cc:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 800e3d0:	4b14      	ldr	r3, [pc, #80]	; (800e424 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800e3d2:	4915      	ldr	r1, [pc, #84]	; (800e428 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800e3d4:	f9b3 7000 	ldrsh.w	r7, [r3]
 800e3d8:	4b14      	ldr	r3, [pc, #80]	; (800e42c <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800e3da:	6041      	str	r1, [r0, #4]
 800e3dc:	2200      	movs	r2, #0
 800e3de:	8102      	strh	r2, [r0, #8]
 800e3e0:	8142      	strh	r2, [r0, #10]
 800e3e2:	8182      	strh	r2, [r0, #12]
 800e3e4:	81c2      	strh	r2, [r0, #14]
 800e3e6:	8202      	strh	r2, [r0, #16]
 800e3e8:	8242      	strh	r2, [r0, #18]
 800e3ea:	8282      	strh	r2, [r0, #20]
 800e3ec:	82c2      	strh	r2, [r0, #22]
 800e3ee:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800e3f2:	6202      	str	r2, [r0, #32]
 800e3f4:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800e3f8:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 800e3fc:	6342      	str	r2, [r0, #52]	; 0x34
 800e3fe:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e402:	4611      	mov	r1, r2
 800e404:	4604      	mov	r4, r0
 800e406:	4628      	mov	r0, r5
 800e408:	f7fa ff89 	bl	800931e <_ZN8touchgfx8Drawable5setXYEss>
 800e40c:	4639      	mov	r1, r7
 800e40e:	4628      	mov	r0, r5
 800e410:	f7fa ffa3 	bl	800935a <_ZN8touchgfx8Drawable8setWidthEs>
 800e414:	4628      	mov	r0, r5
 800e416:	4631      	mov	r1, r6
 800e418:	f7fa ffae 	bl	8009378 <_ZN8touchgfx8Drawable9setHeightEs>
 800e41c:	4620      	mov	r0, r4
 800e41e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e420:	0801d980 	.word	0x0801d980
 800e424:	200268f4 	.word	0x200268f4
 800e428:	0801ccf0 	.word	0x0801ccf0
 800e42c:	200268f6 	.word	0x200268f6

0800e430 <_ZN8touchgfx6Screen4drawEv>:
 800e430:	b507      	push	{r0, r1, r2, lr}
 800e432:	4b09      	ldr	r3, [pc, #36]	; (800e458 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800e434:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e438:	4b08      	ldr	r3, [pc, #32]	; (800e45c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800e43a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e43e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e442:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e446:	6803      	ldr	r3, [r0, #0]
 800e448:	2100      	movs	r1, #0
 800e44a:	9100      	str	r1, [sp, #0]
 800e44c:	689b      	ldr	r3, [r3, #8]
 800e44e:	4669      	mov	r1, sp
 800e450:	4798      	blx	r3
 800e452:	b003      	add	sp, #12
 800e454:	f85d fb04 	ldr.w	pc, [sp], #4
 800e458:	200268f4 	.word	0x200268f4
 800e45c:	200268f6 	.word	0x200268f6

0800e460 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800e460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e464:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800e468:	b089      	sub	sp, #36	; 0x24
 800e46a:	4680      	mov	r8, r0
 800e46c:	460c      	mov	r4, r1
 800e46e:	4615      	mov	r5, r2
 800e470:	b16b      	cbz	r3, 800e48e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800e472:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800e476:	b153      	cbz	r3, 800e48e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800e478:	4628      	mov	r0, r5
 800e47a:	f7ff ff5b 	bl	800e334 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e47e:	4621      	mov	r1, r4
 800e480:	f7fe ffe2 	bl	800d448 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e484:	69eb      	ldr	r3, [r5, #28]
 800e486:	b928      	cbnz	r0, 800e494 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x34>
 800e488:	461d      	mov	r5, r3
 800e48a:	2b00      	cmp	r3, #0
 800e48c:	d1f4      	bne.n	800e478 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x18>
 800e48e:	b009      	add	sp, #36	; 0x24
 800e490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e494:	ae04      	add	r6, sp, #16
 800e496:	2b00      	cmp	r3, #0
 800e498:	d051      	beq.n	800e53e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800e49a:	682b      	ldr	r3, [r5, #0]
 800e49c:	4629      	mov	r1, r5
 800e49e:	68db      	ldr	r3, [r3, #12]
 800e4a0:	a802      	add	r0, sp, #8
 800e4a2:	4798      	blx	r3
 800e4a4:	4628      	mov	r0, r5
 800e4a6:	f7ff ff61 	bl	800e36c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e4aa:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800e4ae:	4407      	add	r7, r0
 800e4b0:	4628      	mov	r0, r5
 800e4b2:	f7ff ff6f 	bl	800e394 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e4b6:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e4ba:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e4be:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e4c2:	4418      	add	r0, r3
 800e4c4:	4621      	mov	r1, r4
 800e4c6:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800e4ca:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e4ce:	b23f      	sxth	r7, r7
 800e4d0:	4630      	mov	r0, r6
 800e4d2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e4d6:	f8ad 7010 	strh.w	r7, [sp, #16]
 800e4da:	f7fd fc05 	bl	800bce8 <_ZN8touchgfx4RectaNERKS0_>
 800e4de:	4628      	mov	r0, r5
 800e4e0:	f7ff ff28 	bl	800e334 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e4e4:	4602      	mov	r2, r0
 800e4e6:	e896 0003 	ldmia.w	r6, {r0, r1}
 800e4ea:	ab06      	add	r3, sp, #24
 800e4ec:	e883 0003 	stmia.w	r3, {r0, r1}
 800e4f0:	4611      	mov	r1, r2
 800e4f2:	4618      	mov	r0, r3
 800e4f4:	f7fd fbf8 	bl	800bce8 <_ZN8touchgfx4RectaNERKS0_>
 800e4f8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e4fc:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e500:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800e504:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800e508:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800e50c:	4299      	cmp	r1, r3
 800e50e:	d10b      	bne.n	800e528 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800e510:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e514:	4552      	cmp	r2, sl
 800e516:	d107      	bne.n	800e528 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800e518:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800e51c:	455a      	cmp	r2, fp
 800e51e:	d103      	bne.n	800e528 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800e520:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e524:	454a      	cmp	r2, r9
 800e526:	d00a      	beq.n	800e53e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800e528:	f1bb 0f00 	cmp.w	fp, #0
 800e52c:	d002      	beq.n	800e534 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd4>
 800e52e:	f1b9 0f00 	cmp.w	r9, #0
 800e532:	d12e      	bne.n	800e592 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x132>
 800e534:	69ea      	ldr	r2, [r5, #28]
 800e536:	4621      	mov	r1, r4
 800e538:	4640      	mov	r0, r8
 800e53a:	f7ff ff91 	bl	800e460 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e53e:	4628      	mov	r0, r5
 800e540:	f7ff fef8 	bl	800e334 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e544:	6861      	ldr	r1, [r4, #4]
 800e546:	4602      	mov	r2, r0
 800e548:	6820      	ldr	r0, [r4, #0]
 800e54a:	4633      	mov	r3, r6
 800e54c:	c303      	stmia	r3!, {r0, r1}
 800e54e:	4611      	mov	r1, r2
 800e550:	4630      	mov	r0, r6
 800e552:	f7fd fbc9 	bl	800bce8 <_ZN8touchgfx4RectaNERKS0_>
 800e556:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e55a:	2b00      	cmp	r3, #0
 800e55c:	d097      	beq.n	800e48e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800e55e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e562:	2b00      	cmp	r3, #0
 800e564:	d093      	beq.n	800e48e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800e566:	4628      	mov	r0, r5
 800e568:	f7ff ff00 	bl	800e36c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e56c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e570:	1a18      	subs	r0, r3, r0
 800e572:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e576:	4628      	mov	r0, r5
 800e578:	f7ff ff0c 	bl	800e394 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e57c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e580:	1a18      	subs	r0, r3, r0
 800e582:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e586:	682b      	ldr	r3, [r5, #0]
 800e588:	4631      	mov	r1, r6
 800e58a:	689b      	ldr	r3, [r3, #8]
 800e58c:	4628      	mov	r0, r5
 800e58e:	4798      	blx	r3
 800e590:	e77d      	b.n	800e48e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800e592:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e596:	fa1f f08a 	uxth.w	r0, sl
 800e59a:	4552      	cmp	r2, sl
 800e59c:	9000      	str	r0, [sp, #0]
 800e59e:	da12      	bge.n	800e5c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x166>
 800e5a0:	9301      	str	r3, [sp, #4]
 800e5a2:	9b00      	ldr	r3, [sp, #0]
 800e5a4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e5a8:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e5ac:	1a9a      	subs	r2, r3, r2
 800e5ae:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e5b2:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e5b6:	f8ad 2016 	strh.w	r2, [sp, #22]
 800e5ba:	69ea      	ldr	r2, [r5, #28]
 800e5bc:	4631      	mov	r1, r6
 800e5be:	4640      	mov	r0, r8
 800e5c0:	f7ff ff4e 	bl	800e460 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e5c4:	9b01      	ldr	r3, [sp, #4]
 800e5c6:	f9b4 2000 	ldrsh.w	r2, [r4]
 800e5ca:	429a      	cmp	r2, r3
 800e5cc:	b29f      	uxth	r7, r3
 800e5ce:	da0d      	bge.n	800e5ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x18c>
 800e5d0:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e5d4:	1aba      	subs	r2, r7, r2
 800e5d6:	f8ad a012 	strh.w	sl, [sp, #18]
 800e5da:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e5de:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e5e2:	69ea      	ldr	r2, [r5, #28]
 800e5e4:	4631      	mov	r1, r6
 800e5e6:	4640      	mov	r0, r8
 800e5e8:	f7ff ff3a 	bl	800e460 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e5ec:	8822      	ldrh	r2, [r4, #0]
 800e5ee:	88a3      	ldrh	r3, [r4, #4]
 800e5f0:	445f      	add	r7, fp
 800e5f2:	4413      	add	r3, r2
 800e5f4:	b29b      	uxth	r3, r3
 800e5f6:	b2bf      	uxth	r7, r7
 800e5f8:	b23a      	sxth	r2, r7
 800e5fa:	b219      	sxth	r1, r3
 800e5fc:	4291      	cmp	r1, r2
 800e5fe:	dd0d      	ble.n	800e61c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1bc>
 800e600:	1bdb      	subs	r3, r3, r7
 800e602:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e606:	f8ad a012 	strh.w	sl, [sp, #18]
 800e60a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e60e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e612:	69ea      	ldr	r2, [r5, #28]
 800e614:	4631      	mov	r1, r6
 800e616:	4640      	mov	r0, r8
 800e618:	f7ff ff22 	bl	800e460 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e61c:	88e2      	ldrh	r2, [r4, #6]
 800e61e:	8863      	ldrh	r3, [r4, #2]
 800e620:	4413      	add	r3, r2
 800e622:	9a00      	ldr	r2, [sp, #0]
 800e624:	444a      	add	r2, r9
 800e626:	b29b      	uxth	r3, r3
 800e628:	fa1f f982 	uxth.w	r9, r2
 800e62c:	fa0f f289 	sxth.w	r2, r9
 800e630:	b219      	sxth	r1, r3
 800e632:	428a      	cmp	r2, r1
 800e634:	da83      	bge.n	800e53e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800e636:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e63a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e63e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e642:	eba3 0309 	sub.w	r3, r3, r9
 800e646:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e64a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e64e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e652:	69ea      	ldr	r2, [r5, #28]
 800e654:	4631      	mov	r1, r6
 800e656:	e76f      	b.n	800e538 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd8>

0800e658 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e658:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e65a:	aa02      	add	r2, sp, #8
 800e65c:	2300      	movs	r3, #0
 800e65e:	f842 3d04 	str.w	r3, [r2, #-4]!
 800e662:	4604      	mov	r4, r0
 800e664:	3004      	adds	r0, #4
 800e666:	460d      	mov	r5, r1
 800e668:	f7fd fc15 	bl	800be96 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e66c:	9a01      	ldr	r2, [sp, #4]
 800e66e:	b11a      	cbz	r2, 800e678 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800e670:	4629      	mov	r1, r5
 800e672:	4620      	mov	r0, r4
 800e674:	f7ff fef4 	bl	800e460 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e678:	b003      	add	sp, #12
 800e67a:	bd30      	pop	{r4, r5, pc}

0800e67c <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e67c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e67e:	4602      	mov	r2, r0
 800e680:	4604      	mov	r4, r0
 800e682:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e686:	460d      	mov	r5, r1
 800e688:	6851      	ldr	r1, [r2, #4]
 800e68a:	466b      	mov	r3, sp
 800e68c:	c303      	stmia	r3!, {r0, r1}
 800e68e:	4629      	mov	r1, r5
 800e690:	4668      	mov	r0, sp
 800e692:	f7fd fb29 	bl	800bce8 <_ZN8touchgfx4RectaNERKS0_>
 800e696:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e69a:	4669      	mov	r1, sp
 800e69c:	b123      	cbz	r3, 800e6a8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800e69e:	4620      	mov	r0, r4
 800e6a0:	f7ff ffda 	bl	800e658 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e6a4:	b003      	add	sp, #12
 800e6a6:	bd30      	pop	{r4, r5, pc}
 800e6a8:	1d20      	adds	r0, r4, #4
 800e6aa:	f7fd fbbb 	bl	800be24 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e6ae:	e7f9      	b.n	800e6a4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800e6b0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e6b0:	680a      	ldr	r2, [r1, #0]
 800e6b2:	460b      	mov	r3, r1
 800e6b4:	6952      	ldr	r2, [r2, #20]
 800e6b6:	1d01      	adds	r1, r0, #4
 800e6b8:	4618      	mov	r0, r3
 800e6ba:	4710      	bx	r2

0800e6bc <_ZNK8touchgfx9GlyphNode3topEv.isra.2>:
 800e6bc:	f011 0f40 	tst.w	r1, #64	; 0x40
 800e6c0:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 800e6c4:	4b03      	ldr	r3, [pc, #12]	; (800e6d4 <_ZNK8touchgfx9GlyphNode3topEv.isra.2+0x18>)
 800e6c6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e6ca:	bf08      	it	eq
 800e6cc:	2300      	moveq	r3, #0
 800e6ce:	4308      	orrs	r0, r1
 800e6d0:	4318      	orrs	r0, r3
 800e6d2:	4770      	bx	lr
 800e6d4:	fffffe00 	.word	0xfffffe00

0800e6d8 <_ZN8touchgfx9GlyphNode6setTopEs>:
 800e6d8:	7b43      	ldrb	r3, [r0, #13]
 800e6da:	7201      	strb	r1, [r0, #8]
 800e6dc:	b289      	uxth	r1, r1
 800e6de:	f003 039f 	and.w	r3, r3, #159	; 0x9f
 800e6e2:	05ca      	lsls	r2, r1, #23
 800e6e4:	bf48      	it	mi
 800e6e6:	f043 0320 	orrmi.w	r3, r3, #32
 800e6ea:	7343      	strb	r3, [r0, #13]
 800e6ec:	058b      	lsls	r3, r1, #22
 800e6ee:	bf42      	ittt	mi
 800e6f0:	7b43      	ldrbmi	r3, [r0, #13]
 800e6f2:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 800e6f6:	7343      	strbmi	r3, [r0, #13]
 800e6f8:	4770      	bx	lr

0800e6fa <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e6fa:	b530      	push	{r4, r5, lr}
 800e6fc:	2500      	movs	r5, #0
 800e6fe:	2401      	movs	r4, #1
 800e700:	6843      	ldr	r3, [r0, #4]
 800e702:	b913      	cbnz	r3, 800e70a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e704:	6803      	ldr	r3, [r0, #0]
 800e706:	b1f3      	cbz	r3, 800e746 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e708:	6043      	str	r3, [r0, #4]
 800e70a:	7c03      	ldrb	r3, [r0, #16]
 800e70c:	b143      	cbz	r3, 800e720 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e70e:	68c3      	ldr	r3, [r0, #12]
 800e710:	b12b      	cbz	r3, 800e71e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e712:	881a      	ldrh	r2, [r3, #0]
 800e714:	b11a      	cbz	r2, 800e71e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e716:	1c9a      	adds	r2, r3, #2
 800e718:	60c2      	str	r2, [r0, #12]
 800e71a:	8818      	ldrh	r0, [r3, #0]
 800e71c:	bd30      	pop	{r4, r5, pc}
 800e71e:	7405      	strb	r5, [r0, #16]
 800e720:	6843      	ldr	r3, [r0, #4]
 800e722:	8819      	ldrh	r1, [r3, #0]
 800e724:	b179      	cbz	r1, 800e746 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e726:	1c9a      	adds	r2, r3, #2
 800e728:	2902      	cmp	r1, #2
 800e72a:	6042      	str	r2, [r0, #4]
 800e72c:	d1f5      	bne.n	800e71a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e72e:	6883      	ldr	r3, [r0, #8]
 800e730:	1d1a      	adds	r2, r3, #4
 800e732:	6082      	str	r2, [r0, #8]
 800e734:	681b      	ldr	r3, [r3, #0]
 800e736:	60c3      	str	r3, [r0, #12]
 800e738:	2b00      	cmp	r3, #0
 800e73a:	d0e1      	beq.n	800e700 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e73c:	881b      	ldrh	r3, [r3, #0]
 800e73e:	2b00      	cmp	r3, #0
 800e740:	d0de      	beq.n	800e700 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e742:	7404      	strb	r4, [r0, #16]
 800e744:	e7dc      	b.n	800e700 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e746:	2000      	movs	r0, #0
 800e748:	e7e8      	b.n	800e71c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e74a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e74a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e74c:	4605      	mov	r5, r0
 800e74e:	4608      	mov	r0, r1
 800e750:	b1e9      	cbz	r1, 800e78e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e752:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800e756:	460b      	mov	r3, r1
 800e758:	f101 0708 	add.w	r7, r1, #8
 800e75c:	4622      	mov	r2, r4
 800e75e:	6818      	ldr	r0, [r3, #0]
 800e760:	6859      	ldr	r1, [r3, #4]
 800e762:	4626      	mov	r6, r4
 800e764:	c603      	stmia	r6!, {r0, r1}
 800e766:	3308      	adds	r3, #8
 800e768:	42bb      	cmp	r3, r7
 800e76a:	4634      	mov	r4, r6
 800e76c:	d1f7      	bne.n	800e75e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e76e:	6818      	ldr	r0, [r3, #0]
 800e770:	6030      	str	r0, [r6, #0]
 800e772:	889b      	ldrh	r3, [r3, #4]
 800e774:	80b3      	strh	r3, [r6, #4]
 800e776:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800e77a:	015b      	lsls	r3, r3, #5
 800e77c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e780:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800e784:	430b      	orrs	r3, r1
 800e786:	425b      	negs	r3, r3
 800e788:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800e78c:	4610      	mov	r0, r2
 800e78e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e790 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e790:	b538      	push	{r3, r4, r5, lr}
 800e792:	460c      	mov	r4, r1
 800e794:	6811      	ldr	r1, [r2, #0]
 800e796:	4610      	mov	r0, r2
 800e798:	68cd      	ldr	r5, [r1, #12]
 800e79a:	4619      	mov	r1, r3
 800e79c:	47a8      	blx	r5
 800e79e:	2800      	cmp	r0, #0
 800e7a0:	bf08      	it	eq
 800e7a2:	4620      	moveq	r0, r4
 800e7a4:	bd38      	pop	{r3, r4, r5, pc}

0800e7a6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800e7a6:	b570      	push	{r4, r5, r6, lr}
 800e7a8:	8810      	ldrh	r0, [r2, #0]
 800e7aa:	4298      	cmp	r0, r3
 800e7ac:	d817      	bhi.n	800e7de <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e7ae:	1e48      	subs	r0, r1, #1
 800e7b0:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800e7b4:	4298      	cmp	r0, r3
 800e7b6:	d312      	bcc.n	800e7de <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e7b8:	2400      	movs	r4, #0
 800e7ba:	428c      	cmp	r4, r1
 800e7bc:	d20f      	bcs.n	800e7de <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e7be:	1860      	adds	r0, r4, r1
 800e7c0:	1040      	asrs	r0, r0, #1
 800e7c2:	0085      	lsls	r5, r0, #2
 800e7c4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800e7c8:	42b3      	cmp	r3, r6
 800e7ca:	d902      	bls.n	800e7d2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800e7cc:	3001      	adds	r0, #1
 800e7ce:	b284      	uxth	r4, r0
 800e7d0:	e7f3      	b.n	800e7ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800e7d2:	d102      	bne.n	800e7da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x34>
 800e7d4:	442a      	add	r2, r5
 800e7d6:	8850      	ldrh	r0, [r2, #2]
 800e7d8:	bd70      	pop	{r4, r5, r6, pc}
 800e7da:	b281      	uxth	r1, r0
 800e7dc:	e7ed      	b.n	800e7ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800e7de:	2000      	movs	r0, #0
 800e7e0:	e7fa      	b.n	800e7d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
	...

0800e7e4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>:
 800e7e4:	b510      	push	{r4, lr}
 800e7e6:	8ac3      	ldrh	r3, [r0, #22]
 800e7e8:	428b      	cmp	r3, r1
 800e7ea:	d805      	bhi.n	800e7f8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x14>
 800e7ec:	4b07      	ldr	r3, [pc, #28]	; (800e80c <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x28>)
 800e7ee:	4a08      	ldr	r2, [pc, #32]	; (800e810 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x2c>)
 800e7f0:	4808      	ldr	r0, [pc, #32]	; (800e814 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x30>)
 800e7f2:	21fd      	movs	r1, #253	; 0xfd
 800e7f4:	f00c f8f6 	bl	801a9e4 <__assert_func>
 800e7f8:	8a83      	ldrh	r3, [r0, #20]
 800e7fa:	240a      	movs	r4, #10
 800e7fc:	4419      	add	r1, r3
 800e7fe:	fbb1 f3f4 	udiv	r3, r1, r4
 800e802:	fb04 1113 	mls	r1, r4, r3, r1
 800e806:	f820 2011 	strh.w	r2, [r0, r1, lsl #1]
 800e80a:	bd10      	pop	{r4, pc}
 800e80c:	0801d9cd 	.word	0x0801d9cd
 800e810:	0801ddfc 	.word	0x0801ddfc
 800e814:	0801d9db 	.word	0x0801d9db

0800e818 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>:
 800e818:	b508      	push	{r3, lr}
 800e81a:	8ac3      	ldrh	r3, [r0, #22]
 800e81c:	428b      	cmp	r3, r1
 800e81e:	d805      	bhi.n	800e82c <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x14>
 800e820:	4b07      	ldr	r3, [pc, #28]	; (800e840 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x28>)
 800e822:	4a08      	ldr	r2, [pc, #32]	; (800e844 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x2c>)
 800e824:	4808      	ldr	r0, [pc, #32]	; (800e848 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x30>)
 800e826:	21d3      	movs	r1, #211	; 0xd3
 800e828:	f00c f8dc 	bl	801a9e4 <__assert_func>
 800e82c:	8a83      	ldrh	r3, [r0, #20]
 800e82e:	220a      	movs	r2, #10
 800e830:	4419      	add	r1, r3
 800e832:	fbb1 f3f2 	udiv	r3, r1, r2
 800e836:	fb02 1113 	mls	r1, r2, r3, r1
 800e83a:	f830 0011 	ldrh.w	r0, [r0, r1, lsl #1]
 800e83e:	bd08      	pop	{r3, pc}
 800e840:	0801d9cd 	.word	0x0801d9cd
 800e844:	0801db4c 	.word	0x0801db4c
 800e848:	0801d9db 	.word	0x0801d9db

0800e84c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e84c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e850:	4604      	mov	r4, r0
 800e852:	4688      	mov	r8, r1
 800e854:	4615      	mov	r5, r2
 800e856:	b94a      	cbnz	r2, 800e86c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20>
 800e858:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800e85c:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800e860:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800e864:	4691      	mov	r9, r2
 800e866:	4648      	mov	r0, r9
 800e868:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e86c:	f100 0640 	add.w	r6, r0, #64	; 0x40
 800e870:	8892      	ldrh	r2, [r2, #4]
 800e872:	462b      	mov	r3, r5
 800e874:	f105 0c08 	add.w	ip, r5, #8
 800e878:	46b3      	mov	fp, r6
 800e87a:	6818      	ldr	r0, [r3, #0]
 800e87c:	6859      	ldr	r1, [r3, #4]
 800e87e:	4637      	mov	r7, r6
 800e880:	c703      	stmia	r7!, {r0, r1}
 800e882:	3308      	adds	r3, #8
 800e884:	4563      	cmp	r3, ip
 800e886:	463e      	mov	r6, r7
 800e888:	d1f7      	bne.n	800e87a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x2e>
 800e88a:	6818      	ldr	r0, [r3, #0]
 800e88c:	6038      	str	r0, [r7, #0]
 800e88e:	889b      	ldrh	r3, [r3, #4]
 800e890:	80bb      	strh	r3, [r7, #4]
 800e892:	f894 704d 	ldrb.w	r7, [r4, #77]	; 0x4d
 800e896:	f46f 6363 	mvn.w	r3, #3632	; 0xe30
 800e89a:	ea4f 1a07 	mov.w	sl, r7, lsl #4
 800e89e:	f40a 7180 	and.w	r1, sl, #256	; 0x100
 800e8a2:	18d3      	adds	r3, r2, r3
 800e8a4:	f894 a047 	ldrb.w	sl, [r4, #71]	; 0x47
 800e8a8:	b298      	uxth	r0, r3
 800e8aa:	ea4a 0a01 	orr.w	sl, sl, r1
 800e8ae:	281d      	cmp	r0, #29
 800e8b0:	fa1f f68a 	uxth.w	r6, sl
 800e8b4:	46d9      	mov	r9, fp
 800e8b6:	d842      	bhi.n	800e93e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf2>
 800e8b8:	2301      	movs	r3, #1
 800e8ba:	4950      	ldr	r1, [pc, #320]	; (800e9fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b0>)
 800e8bc:	4083      	lsls	r3, r0
 800e8be:	420b      	tst	r3, r1
 800e8c0:	ea4f 0aea 	mov.w	sl, sl, asr #3
 800e8c4:	d114      	bne.n	800e8f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800e8c6:	f413 7f60 	tst.w	r3, #896	; 0x380
 800e8ca:	d03c      	beq.n	800e946 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xfa>
 800e8cc:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800e8d0:	fa1f fa8a 	uxth.w	sl, sl
 800e8d4:	eba1 010a 	sub.w	r1, r1, sl
 800e8d8:	4658      	mov	r0, fp
 800e8da:	b209      	sxth	r1, r1
 800e8dc:	f7ff fefc 	bl	800e6d8 <_ZN8touchgfx9GlyphNode6setTopEs>
 800e8e0:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 800e8e4:	1b86      	subs	r6, r0, r6
 800e8e6:	eba6 0a0a 	sub.w	sl, r6, sl
 800e8ea:	f8a4 a050 	strh.w	sl, [r4, #80]	; 0x50
 800e8ee:	e7ba      	b.n	800e866 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e8f0:	2100      	movs	r1, #0
 800e8f2:	f104 001a 	add.w	r0, r4, #26
 800e8f6:	f7ff ff8f 	bl	800e818 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800e8fa:	f640 6333 	movw	r3, #3635	; 0xe33
 800e8fe:	4298      	cmp	r0, r3
 800e900:	4601      	mov	r1, r0
 800e902:	d10a      	bne.n	800e91a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xce>
 800e904:	f8d8 3000 	ldr.w	r3, [r8]
 800e908:	4640      	mov	r0, r8
 800e90a:	68db      	ldr	r3, [r3, #12]
 800e90c:	4798      	blx	r3
 800e90e:	7b41      	ldrb	r1, [r0, #13]
 800e910:	7a00      	ldrb	r0, [r0, #8]
 800e912:	f7ff fed3 	bl	800e6bc <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800e916:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800e91a:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800e91e:	4431      	add	r1, r6
 800e920:	4451      	add	r1, sl
 800e922:	b209      	sxth	r1, r1
 800e924:	f8a4 104e 	strh.w	r1, [r4, #78]	; 0x4e
 800e928:	4658      	mov	r0, fp
 800e92a:	f7ff fed5 	bl	800e6d8 <_ZN8touchgfx9GlyphNode6setTopEs>
 800e92e:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800e932:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800e936:	1a9b      	subs	r3, r3, r2
 800e938:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800e93c:	e793      	b.n	800e866 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e93e:	f640 631b 	movw	r3, #3611	; 0xe1b
 800e942:	429a      	cmp	r2, r3
 800e944:	d005      	beq.n	800e952 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x106>
 800e946:	f022 0302 	bic.w	r3, r2, #2
 800e94a:	f640 611d 	movw	r1, #3613	; 0xe1d
 800e94e:	428b      	cmp	r3, r1
 800e950:	d119      	bne.n	800e986 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
 800e952:	1e53      	subs	r3, r2, #1
 800e954:	b29b      	uxth	r3, r3
 800e956:	4642      	mov	r2, r8
 800e958:	4629      	mov	r1, r5
 800e95a:	4620      	mov	r0, r4
 800e95c:	f7ff ff18 	bl	800e790 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e960:	7b41      	ldrb	r1, [r0, #13]
 800e962:	7a00      	ldrb	r0, [r0, #8]
 800e964:	f7ff feaa 	bl	800e6bc <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800e968:	f994 304d 	ldrsb.w	r3, [r4, #77]	; 0x4d
 800e96c:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800e970:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e974:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800e978:	4313      	orrs	r3, r2
 800e97a:	115a      	asrs	r2, r3, #5
 800e97c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800e980:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e984:	e02d      	b.n	800e9e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x196>
 800e986:	4639      	mov	r1, r7
 800e988:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800e98c:	f7ff fe96 	bl	800e6bc <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800e990:	f640 6109 	movw	r1, #3593	; 0xe09
 800e994:	f022 0310 	bic.w	r3, r2, #16
 800e998:	428b      	cmp	r3, r1
 800e99a:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800e99e:	d003      	beq.n	800e9a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15c>
 800e9a0:	f640 6313 	movw	r3, #3603	; 0xe13
 800e9a4:	429a      	cmp	r2, r3
 800e9a6:	d126      	bne.n	800e9f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1aa>
 800e9a8:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800e9ac:	b27f      	sxtb	r7, r7
 800e9ae:	f407 7780 	and.w	r7, r7, #256	; 0x100
 800e9b2:	431f      	orrs	r7, r3
 800e9b4:	f640 6313 	movw	r3, #3603	; 0xe13
 800e9b8:	429a      	cmp	r2, r3
 800e9ba:	bf1a      	itte	ne
 800e9bc:	f102 33ff 	addne.w	r3, r2, #4294967295
 800e9c0:	b29b      	uxthne	r3, r3
 800e9c2:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800e9c6:	4642      	mov	r2, r8
 800e9c8:	4629      	mov	r1, r5
 800e9ca:	4620      	mov	r0, r4
 800e9cc:	f7ff fee0 	bl	800e790 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e9d0:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800e9d4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e9d8:	7a83      	ldrb	r3, [r0, #10]
 800e9da:	4313      	orrs	r3, r2
 800e9dc:	1aff      	subs	r7, r7, r3
 800e9de:	f8a4 7052 	strh.w	r7, [r4, #82]	; 0x52
 800e9e2:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800e9e6:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800e9ea:	f7ff fe67 	bl	800e6bc <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800e9ee:	1b80      	subs	r0, r0, r6
 800e9f0:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 800e9f4:	e737      	b.n	800e866 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e9f6:	2300      	movs	r3, #0
 800e9f8:	e7c2      	b.n	800e980 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x134>
 800e9fa:	bf00      	nop
 800e9fc:	3fc00079 	.word	0x3fc00079

0800ea00 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800ea00:	3a01      	subs	r2, #1
 800ea02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea06:	b292      	uxth	r2, r2
 800ea08:	460c      	mov	r4, r1
 800ea0a:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800ea0e:	42b2      	cmp	r2, r6
 800ea10:	d018      	beq.n	800ea44 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x44>
 800ea12:	8b01      	ldrh	r1, [r0, #24]
 800ea14:	f834 5b02 	ldrh.w	r5, [r4], #2
 800ea18:	4291      	cmp	r1, r2
 800ea1a:	d805      	bhi.n	800ea28 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x28>
 800ea1c:	4b14      	ldr	r3, [pc, #80]	; (800ea70 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x70>)
 800ea1e:	4a15      	ldr	r2, [pc, #84]	; (800ea74 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x74>)
 800ea20:	4815      	ldr	r0, [pc, #84]	; (800ea78 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x78>)
 800ea22:	21d3      	movs	r1, #211	; 0xd3
 800ea24:	f00b ffde 	bl	801a9e4 <__assert_func>
 800ea28:	8ac1      	ldrh	r1, [r0, #22]
 800ea2a:	4411      	add	r1, r2
 800ea2c:	f001 0101 	and.w	r1, r1, #1
 800ea30:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800ea34:	3a01      	subs	r2, #1
 800ea36:	8a49      	ldrh	r1, [r1, #18]
 800ea38:	428d      	cmp	r5, r1
 800ea3a:	b292      	uxth	r2, r2
 800ea3c:	d0e7      	beq.n	800ea0e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xe>
 800ea3e:	2000      	movs	r0, #0
 800ea40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea44:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 800ea48:	2600      	movs	r6, #0
 800ea4a:	441f      	add	r7, r3
 800ea4c:	f100 051a 	add.w	r5, r0, #26
 800ea50:	b2b1      	uxth	r1, r6
 800ea52:	42b9      	cmp	r1, r7
 800ea54:	da09      	bge.n	800ea6a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x6a>
 800ea56:	4628      	mov	r0, r5
 800ea58:	f7ff fede 	bl	800e818 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800ea5c:	f834 8016 	ldrh.w	r8, [r4, r6, lsl #1]
 800ea60:	4540      	cmp	r0, r8
 800ea62:	f106 0601 	add.w	r6, r6, #1
 800ea66:	d0f3      	beq.n	800ea50 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x50>
 800ea68:	e7e9      	b.n	800ea3e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800ea6a:	2001      	movs	r0, #1
 800ea6c:	e7e8      	b.n	800ea40 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800ea6e:	bf00      	nop
 800ea70:	0801d9cd 	.word	0x0801d9cd
 800ea74:	0801df5c 	.word	0x0801df5c
 800ea78:	0801d9db 	.word	0x0801d9db

0800ea7c <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt>:
 800ea7c:	b538      	push	{r3, r4, r5, lr}
 800ea7e:	8ac3      	ldrh	r3, [r0, #22]
 800ea80:	428b      	cmp	r3, r1
 800ea82:	d205      	bcs.n	800ea90 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x14>
 800ea84:	4b08      	ldr	r3, [pc, #32]	; (800eaa8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x2c>)
 800ea86:	4a09      	ldr	r2, [pc, #36]	; (800eaac <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x30>)
 800ea88:	4809      	ldr	r0, [pc, #36]	; (800eab0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x34>)
 800ea8a:	21d8      	movs	r1, #216	; 0xd8
 800ea8c:	f00b ffaa 	bl	801a9e4 <__assert_func>
 800ea90:	8a82      	ldrh	r2, [r0, #20]
 800ea92:	250a      	movs	r5, #10
 800ea94:	440a      	add	r2, r1
 800ea96:	1a5b      	subs	r3, r3, r1
 800ea98:	fbb2 f4f5 	udiv	r4, r2, r5
 800ea9c:	fb05 2214 	mls	r2, r5, r4, r2
 800eaa0:	8282      	strh	r2, [r0, #20]
 800eaa2:	82c3      	strh	r3, [r0, #22]
 800eaa4:	bd38      	pop	{r3, r4, r5, pc}
 800eaa6:	bf00      	nop
 800eaa8:	0801d9c1 	.word	0x0801d9c1
 800eaac:	0801dd78 	.word	0x0801dd78
 800eab0:	0801d9db 	.word	0x0801d9db

0800eab4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>:
 800eab4:	b538      	push	{r3, r4, r5, lr}
 800eab6:	8ac3      	ldrh	r3, [r0, #22]
 800eab8:	2b09      	cmp	r3, #9
 800eaba:	d905      	bls.n	800eac8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x14>
 800eabc:	4b08      	ldr	r3, [pc, #32]	; (800eae0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x2c>)
 800eabe:	4a09      	ldr	r2, [pc, #36]	; (800eae4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x30>)
 800eac0:	4809      	ldr	r0, [pc, #36]	; (800eae8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x34>)
 800eac2:	21f7      	movs	r1, #247	; 0xf7
 800eac4:	f00b ff8e 	bl	801a9e4 <__assert_func>
 800eac8:	8a82      	ldrh	r2, [r0, #20]
 800eaca:	250a      	movs	r5, #10
 800eacc:	441a      	add	r2, r3
 800eace:	fbb2 f4f5 	udiv	r4, r2, r5
 800ead2:	fb05 2214 	mls	r2, r5, r4, r2
 800ead6:	3301      	adds	r3, #1
 800ead8:	f820 1012 	strh.w	r1, [r0, r2, lsl #1]
 800eadc:	82c3      	strh	r3, [r0, #22]
 800eade:	bd38      	pop	{r3, r4, r5, pc}
 800eae0:	0801d9b5 	.word	0x0801d9b5
 800eae4:	0801dcc9 	.word	0x0801dcc9
 800eae8:	0801d9db 	.word	0x0801d9db

0800eaec <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800eaec:	b538      	push	{r3, r4, r5, lr}
 800eaee:	4604      	mov	r4, r0
 800eaf0:	f100 051a 	add.w	r5, r0, #26
 800eaf4:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800eaf6:	2b0a      	cmp	r3, #10
 800eaf8:	d01c      	beq.n	800eb34 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800eafa:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800eafc:	b962      	cbnz	r2, 800eb18 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800eafe:	f104 051a 	add.w	r5, r4, #26
 800eb02:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800eb04:	2b0a      	cmp	r3, #10
 800eb06:	d015      	beq.n	800eb34 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800eb08:	4620      	mov	r0, r4
 800eb0a:	f7ff fdf6 	bl	800e6fa <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800eb0e:	4601      	mov	r1, r0
 800eb10:	4628      	mov	r0, r5
 800eb12:	f7ff ffcf 	bl	800eab4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>
 800eb16:	e7f4      	b.n	800eb02 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x16>
 800eb18:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800eb1a:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 800eb1e:	3301      	adds	r3, #1
 800eb20:	f003 0301 	and.w	r3, r3, #1
 800eb24:	3a01      	subs	r2, #1
 800eb26:	8e49      	ldrh	r1, [r1, #50]	; 0x32
 800eb28:	86e3      	strh	r3, [r4, #54]	; 0x36
 800eb2a:	8722      	strh	r2, [r4, #56]	; 0x38
 800eb2c:	4628      	mov	r0, r5
 800eb2e:	f7ff ffc1 	bl	800eab4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>
 800eb32:	e7df      	b.n	800eaf4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8>
 800eb34:	bd38      	pop	{r3, r4, r5, pc}
	...

0800eb38 <_ZN8touchgfx12TextProvider18initializeInternalEv>:
 800eb38:	2300      	movs	r3, #0
 800eb3a:	b510      	push	{r4, lr}
 800eb3c:	6043      	str	r3, [r0, #4]
 800eb3e:	60c3      	str	r3, [r0, #12]
 800eb40:	7403      	strb	r3, [r0, #16]
 800eb42:	8603      	strh	r3, [r0, #48]	; 0x30
 800eb44:	8303      	strh	r3, [r0, #24]
 800eb46:	8703      	strh	r3, [r0, #56]	; 0x38
 800eb48:	4604      	mov	r4, r0
 800eb4a:	f7ff ffcf 	bl	800eaec <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800eb4e:	4a0a      	ldr	r2, [pc, #40]	; (800eb78 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x40>)
 800eb50:	6813      	ldr	r3, [r2, #0]
 800eb52:	4611      	mov	r1, r2
 800eb54:	b913      	cbnz	r3, 800eb5c <_ZN8touchgfx12TextProvider18initializeInternalEv+0x24>
 800eb56:	6852      	ldr	r2, [r2, #4]
 800eb58:	07d0      	lsls	r0, r2, #31
 800eb5a:	d50b      	bpl.n	800eb74 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x3c>
 800eb5c:	6849      	ldr	r1, [r1, #4]
 800eb5e:	104a      	asrs	r2, r1, #1
 800eb60:	07c9      	lsls	r1, r1, #31
 800eb62:	eb04 0002 	add.w	r0, r4, r2
 800eb66:	bf48      	it	mi
 800eb68:	58a2      	ldrmi	r2, [r4, r2]
 800eb6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eb6e:	bf48      	it	mi
 800eb70:	58d3      	ldrmi	r3, [r2, r3]
 800eb72:	4718      	bx	r3
 800eb74:	bd10      	pop	{r4, pc}
 800eb76:	bf00      	nop
 800eb78:	20025990 	.word	0x20025990

0800eb7c <_ZN8touchgfx12TextProviderC1Ev>:
 800eb7c:	b510      	push	{r4, lr}
 800eb7e:	2300      	movs	r3, #0
 800eb80:	2201      	movs	r2, #1
 800eb82:	4604      	mov	r4, r0
 800eb84:	e9c0 3300 	strd	r3, r3, [r0]
 800eb88:	60c3      	str	r3, [r0, #12]
 800eb8a:	7403      	strb	r3, [r0, #16]
 800eb8c:	82c3      	strh	r3, [r0, #22]
 800eb8e:	8303      	strh	r3, [r0, #24]
 800eb90:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800eb92:	8603      	strh	r3, [r0, #48]	; 0x30
 800eb94:	86c3      	strh	r3, [r0, #54]	; 0x36
 800eb96:	8703      	strh	r3, [r0, #56]	; 0x38
 800eb98:	63c3      	str	r3, [r0, #60]	; 0x3c
 800eb9a:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800eb9e:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800eba2:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800eba6:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800ebaa:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800ebae:	f7ff ffc3 	bl	800eb38 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800ebb2:	4620      	mov	r0, r4
 800ebb4:	bd10      	pop	{r4, pc}

0800ebb6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800ebb6:	b410      	push	{r4}
 800ebb8:	6082      	str	r2, [r0, #8]
 800ebba:	6001      	str	r1, [r0, #0]
 800ebbc:	63c3      	str	r3, [r0, #60]	; 0x3c
 800ebbe:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ebc2:	f7ff bfb9 	b.w	800eb38 <_ZN8touchgfx12TextProvider18initializeInternalEv>
	...

0800ebc8 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>:
 800ebc8:	b508      	push	{r3, lr}
 800ebca:	88c2      	ldrh	r2, [r0, #6]
 800ebcc:	440a      	add	r2, r1
 800ebce:	2a02      	cmp	r2, #2
 800ebd0:	dd05      	ble.n	800ebde <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x16>
 800ebd2:	4b06      	ldr	r3, [pc, #24]	; (800ebec <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x24>)
 800ebd4:	4a06      	ldr	r2, [pc, #24]	; (800ebf0 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x28>)
 800ebd6:	4807      	ldr	r0, [pc, #28]	; (800ebf4 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x2c>)
 800ebd8:	21ec      	movs	r1, #236	; 0xec
 800ebda:	f00b ff03 	bl	801a9e4 <__assert_func>
 800ebde:	8883      	ldrh	r3, [r0, #4]
 800ebe0:	80c2      	strh	r2, [r0, #6]
 800ebe2:	1a59      	subs	r1, r3, r1
 800ebe4:	f001 0101 	and.w	r1, r1, #1
 800ebe8:	8081      	strh	r1, [r0, #4]
 800ebea:	bd08      	pop	{r3, pc}
 800ebec:	0801da07 	.word	0x0801da07
 800ebf0:	0801ded5 	.word	0x0801ded5
 800ebf4:	0801d9db 	.word	0x0801d9db

0800ebf8 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>:
 800ebf8:	b508      	push	{r3, lr}
 800ebfa:	88c3      	ldrh	r3, [r0, #6]
 800ebfc:	428b      	cmp	r3, r1
 800ebfe:	d805      	bhi.n	800ec0c <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x14>
 800ec00:	4b06      	ldr	r3, [pc, #24]	; (800ec1c <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x24>)
 800ec02:	4a07      	ldr	r2, [pc, #28]	; (800ec20 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x28>)
 800ec04:	4807      	ldr	r0, [pc, #28]	; (800ec24 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x2c>)
 800ec06:	21fd      	movs	r1, #253	; 0xfd
 800ec08:	f00b feec 	bl	801a9e4 <__assert_func>
 800ec0c:	8883      	ldrh	r3, [r0, #4]
 800ec0e:	4419      	add	r1, r3
 800ec10:	f001 0101 	and.w	r1, r1, #1
 800ec14:	f820 2011 	strh.w	r2, [r0, r1, lsl #1]
 800ec18:	bd08      	pop	{r3, pc}
 800ec1a:	bf00      	nop
 800ec1c:	0801d9cd 	.word	0x0801d9cd
 800ec20:	0801e02d 	.word	0x0801e02d
 800ec24:	0801d9db 	.word	0x0801d9db

0800ec28 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800ec28:	b570      	push	{r4, r5, r6, lr}
 800ec2a:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800ec2c:	4604      	mov	r4, r0
 800ec2e:	b92a      	cbnz	r2, 800ec3c <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800ec30:	4b12      	ldr	r3, [pc, #72]	; (800ec7c <_ZN8touchgfx12TextProvider11getNextCharEv+0x54>)
 800ec32:	4a13      	ldr	r2, [pc, #76]	; (800ec80 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800ec34:	4813      	ldr	r0, [pc, #76]	; (800ec84 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800ec36:	21de      	movs	r1, #222	; 0xde
 800ec38:	f00b fed4 	bl	801a9e4 <__assert_func>
 800ec3c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ec3e:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800ec42:	260a      	movs	r6, #10
 800ec44:	3301      	adds	r3, #1
 800ec46:	8b4d      	ldrh	r5, [r1, #26]
 800ec48:	fbb3 f1f6 	udiv	r1, r3, r6
 800ec4c:	3a01      	subs	r2, #1
 800ec4e:	fb06 3311 	mls	r3, r6, r1, r3
 800ec52:	8602      	strh	r2, [r0, #48]	; 0x30
 800ec54:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800ec56:	f7ff ff49 	bl	800eaec <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ec5a:	8b23      	ldrh	r3, [r4, #24]
 800ec5c:	2b02      	cmp	r3, #2
 800ec5e:	bf04      	itt	eq
 800ec60:	2301      	moveq	r3, #1
 800ec62:	8323      	strheq	r3, [r4, #24]
 800ec64:	3412      	adds	r4, #18
 800ec66:	4620      	mov	r0, r4
 800ec68:	2101      	movs	r1, #1
 800ec6a:	f7ff ffad 	bl	800ebc8 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>
 800ec6e:	4620      	mov	r0, r4
 800ec70:	462a      	mov	r2, r5
 800ec72:	2100      	movs	r1, #0
 800ec74:	f7ff ffc0 	bl	800ebf8 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>
 800ec78:	4628      	mov	r0, r5
 800ec7a:	bd70      	pop	{r4, r5, r6, pc}
 800ec7c:	0801d9ac 	.word	0x0801d9ac
 800ec80:	0801dc1e 	.word	0x0801dc1e
 800ec84:	0801d9db 	.word	0x0801d9db

0800ec88 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800ec88:	428a      	cmp	r2, r1
 800ec8a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec8e:	4604      	mov	r4, r0
 800ec90:	460e      	mov	r6, r1
 800ec92:	4615      	mov	r5, r2
 800ec94:	469a      	mov	sl, r3
 800ec96:	d92b      	bls.n	800ecf0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x68>
 800ec98:	1a57      	subs	r7, r2, r1
 800ec9a:	b2bf      	uxth	r7, r7
 800ec9c:	f04f 0800 	mov.w	r8, #0
 800eca0:	f100 0932 	add.w	r9, r0, #50	; 0x32
 800eca4:	f04f 0b0a 	mov.w	fp, #10
 800eca8:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ecaa:	b92b      	cbnz	r3, 800ecb8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x30>
 800ecac:	4b24      	ldr	r3, [pc, #144]	; (800ed40 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xb8>)
 800ecae:	4a25      	ldr	r2, [pc, #148]	; (800ed44 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xbc>)
 800ecb0:	21e6      	movs	r1, #230	; 0xe6
 800ecb2:	4825      	ldr	r0, [pc, #148]	; (800ed48 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc0>)
 800ecb4:	f00b fe96 	bl	801a9e4 <__assert_func>
 800ecb8:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800ecba:	3b01      	subs	r3, #1
 800ecbc:	b29b      	uxth	r3, r3
 800ecbe:	441a      	add	r2, r3
 800ecc0:	8623      	strh	r3, [r4, #48]	; 0x30
 800ecc2:	fbb2 f3fb 	udiv	r3, r2, fp
 800ecc6:	fb0b 2313 	mls	r3, fp, r3, r2
 800ecca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ecce:	2101      	movs	r1, #1
 800ecd0:	8b5a      	ldrh	r2, [r3, #26]
 800ecd2:	9201      	str	r2, [sp, #4]
 800ecd4:	4648      	mov	r0, r9
 800ecd6:	f7ff ff77 	bl	800ebc8 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>
 800ecda:	f108 0801 	add.w	r8, r8, #1
 800ecde:	9a01      	ldr	r2, [sp, #4]
 800ece0:	2100      	movs	r1, #0
 800ece2:	4648      	mov	r0, r9
 800ece4:	f7ff ff88 	bl	800ebf8 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>
 800ece8:	fa1f f388 	uxth.w	r3, r8
 800ecec:	429f      	cmp	r7, r3
 800ecee:	d8db      	bhi.n	800eca8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x20>
 800ecf0:	f104 071a 	add.w	r7, r4, #26
 800ecf4:	4631      	mov	r1, r6
 800ecf6:	4638      	mov	r0, r7
 800ecf8:	f7ff fec0 	bl	800ea7c <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt>
 800ecfc:	260a      	movs	r6, #10
 800ecfe:	b1c5      	cbz	r5, 800ed32 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 800ed00:	3d01      	subs	r5, #1
 800ed02:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ed04:	b2ad      	uxth	r5, r5
 800ed06:	2b09      	cmp	r3, #9
 800ed08:	f83a 2015 	ldrh.w	r2, [sl, r5, lsl #1]
 800ed0c:	d903      	bls.n	800ed16 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8e>
 800ed0e:	4b0f      	ldr	r3, [pc, #60]	; (800ed4c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc4>)
 800ed10:	4a0f      	ldr	r2, [pc, #60]	; (800ed50 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc8>)
 800ed12:	21ec      	movs	r1, #236	; 0xec
 800ed14:	e7cd      	b.n	800ecb2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2a>
 800ed16:	8de1      	ldrh	r1, [r4, #46]	; 0x2e
 800ed18:	3109      	adds	r1, #9
 800ed1a:	3301      	adds	r3, #1
 800ed1c:	fbb1 f0f6 	udiv	r0, r1, r6
 800ed20:	fb06 1110 	mls	r1, r6, r0, r1
 800ed24:	85e1      	strh	r1, [r4, #46]	; 0x2e
 800ed26:	8623      	strh	r3, [r4, #48]	; 0x30
 800ed28:	2100      	movs	r1, #0
 800ed2a:	4638      	mov	r0, r7
 800ed2c:	f7ff fd5a 	bl	800e7e4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800ed30:	e7e5      	b.n	800ecfe <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x76>
 800ed32:	4620      	mov	r0, r4
 800ed34:	b003      	add	sp, #12
 800ed36:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed3a:	f7ff bed7 	b.w	800eaec <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ed3e:	bf00      	nop
 800ed40:	0801d9ac 	.word	0x0801d9ac
 800ed44:	0801daa2 	.word	0x0801daa2
 800ed48:	0801d9db 	.word	0x0801d9db
 800ed4c:	0801da07 	.word	0x0801da07
 800ed50:	0801da1a 	.word	0x0801da1a

0800ed54 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800ed54:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed58:	4605      	mov	r5, r0
 800ed5a:	4616      	mov	r6, r2
 800ed5c:	1c8c      	adds	r4, r1, #2
 800ed5e:	8809      	ldrh	r1, [r1, #0]
 800ed60:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800ed64:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800ed68:	42b3      	cmp	r3, r6
 800ed6a:	d124      	bne.n	800edb6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800ed6c:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800ed70:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800ed74:	f001 070f 	and.w	r7, r1, #15
 800ed78:	f8cd 8000 	str.w	r8, [sp]
 800ed7c:	464b      	mov	r3, r9
 800ed7e:	4652      	mov	r2, sl
 800ed80:	4621      	mov	r1, r4
 800ed82:	4628      	mov	r0, r5
 800ed84:	f7ff fe3c 	bl	800ea00 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800ed88:	4683      	mov	fp, r0
 800ed8a:	b168      	cbz	r0, 800eda8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800ed8c:	eb0a 0109 	add.w	r1, sl, r9
 800ed90:	4441      	add	r1, r8
 800ed92:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800ed96:	463a      	mov	r2, r7
 800ed98:	4649      	mov	r1, r9
 800ed9a:	4628      	mov	r0, r5
 800ed9c:	f7ff ff74 	bl	800ec88 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800eda0:	4658      	mov	r0, fp
 800eda2:	b003      	add	sp, #12
 800eda4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eda8:	eb07 010a 	add.w	r1, r7, sl
 800edac:	4449      	add	r1, r9
 800edae:	4441      	add	r1, r8
 800edb0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800edb4:	e7d2      	b.n	800ed5c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800edb6:	f04f 0b00 	mov.w	fp, #0
 800edba:	e7f1      	b.n	800eda0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800edbc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800edbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800edc0:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800edc2:	886f      	ldrh	r7, [r5, #2]
 800edc4:	4604      	mov	r4, r0
 800edc6:	087f      	lsrs	r7, r7, #1
 800edc8:	260b      	movs	r6, #11
 800edca:	f100 091a 	add.w	r9, r0, #26
 800edce:	3e01      	subs	r6, #1
 800edd0:	d013      	beq.n	800edfa <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800edd2:	2100      	movs	r1, #0
 800edd4:	4648      	mov	r0, r9
 800edd6:	f7ff fd1f 	bl	800e818 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800edda:	462a      	mov	r2, r5
 800eddc:	4680      	mov	r8, r0
 800edde:	4603      	mov	r3, r0
 800ede0:	4639      	mov	r1, r7
 800ede2:	4620      	mov	r0, r4
 800ede4:	f7ff fcdf 	bl	800e7a6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800ede8:	b138      	cbz	r0, 800edfa <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800edea:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800edee:	4642      	mov	r2, r8
 800edf0:	4620      	mov	r0, r4
 800edf2:	f7ff ffaf 	bl	800ed54 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800edf6:	2800      	cmp	r0, #0
 800edf8:	d1e9      	bne.n	800edce <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x12>
 800edfa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0800ee00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:
 800ee00:	b570      	push	{r4, r5, r6, lr}
 800ee02:	4b1e      	ldr	r3, [pc, #120]	; (800ee7c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800ee04:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ee08:	4604      	mov	r4, r0
 800ee0a:	f003 0501 	and.w	r5, r3, #1
 800ee0e:	b902      	cbnz	r2, 800ee12 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
 800ee10:	b165      	cbz	r5, 800ee2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2c>
 800ee12:	105b      	asrs	r3, r3, #1
 800ee14:	f104 061a 	add.w	r6, r4, #26
 800ee18:	18e0      	adds	r0, r4, r3
 800ee1a:	b10d      	cbz	r5, 800ee20 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
 800ee1c:	58e3      	ldr	r3, [r4, r3]
 800ee1e:	589a      	ldr	r2, [r3, r2]
 800ee20:	4790      	blx	r2
 800ee22:	2100      	movs	r1, #0
 800ee24:	4602      	mov	r2, r0
 800ee26:	4630      	mov	r0, r6
 800ee28:	f7ff fcdc 	bl	800e7e4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800ee2c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ee2e:	b303      	cbz	r3, 800ee72 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800ee30:	f104 051a 	add.w	r5, r4, #26
 800ee34:	2100      	movs	r1, #0
 800ee36:	4628      	mov	r0, r5
 800ee38:	f7ff fcee 	bl	800e818 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800ee3c:	b1c8      	cbz	r0, 800ee72 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800ee3e:	4620      	mov	r0, r4
 800ee40:	f7ff ffbc 	bl	800edbc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
 800ee44:	2101      	movs	r1, #1
 800ee46:	4628      	mov	r0, r5
 800ee48:	f7ff fce6 	bl	800e818 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800ee4c:	f640 133f 	movw	r3, #2367	; 0x93f
 800ee50:	4298      	cmp	r0, r3
 800ee52:	4606      	mov	r6, r0
 800ee54:	d10d      	bne.n	800ee72 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800ee56:	2100      	movs	r1, #0
 800ee58:	4628      	mov	r0, r5
 800ee5a:	f7ff fcdd 	bl	800e818 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800ee5e:	2101      	movs	r1, #1
 800ee60:	4602      	mov	r2, r0
 800ee62:	4628      	mov	r0, r5
 800ee64:	f7ff fcbe 	bl	800e7e4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800ee68:	4632      	mov	r2, r6
 800ee6a:	2100      	movs	r1, #0
 800ee6c:	4628      	mov	r0, r5
 800ee6e:	f7ff fcb9 	bl	800e7e4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800ee72:	4620      	mov	r0, r4
 800ee74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ee78:	f7ff bed6 	b.w	800ec28 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ee7c:	20025998 	.word	0x20025998

0800ee80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800ee80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ee82:	4617      	mov	r7, r2
 800ee84:	461e      	mov	r6, r3
 800ee86:	4605      	mov	r5, r0
 800ee88:	f7ff ffba 	bl	800ee00 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ee8c:	683b      	ldr	r3, [r7, #0]
 800ee8e:	4604      	mov	r4, r0
 800ee90:	68db      	ldr	r3, [r3, #12]
 800ee92:	4601      	mov	r1, r0
 800ee94:	4638      	mov	r0, r7
 800ee96:	4798      	blx	r3
 800ee98:	f5a4 6360 	sub.w	r3, r4, #3584	; 0xe00
 800ee9c:	b29b      	uxth	r3, r3
 800ee9e:	2b7f      	cmp	r3, #127	; 0x7f
 800eea0:	4602      	mov	r2, r0
 800eea2:	6030      	str	r0, [r6, #0]
 800eea4:	d813      	bhi.n	800eece <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x4e>
 800eea6:	4639      	mov	r1, r7
 800eea8:	4628      	mov	r0, r5
 800eeaa:	f7ff fccf 	bl	800e84c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800eeae:	6030      	str	r0, [r6, #0]
 800eeb0:	6833      	ldr	r3, [r6, #0]
 800eeb2:	b143      	cbz	r3, 800eec6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800eeb4:	f993 200d 	ldrsb.w	r2, [r3, #13]
 800eeb8:	7a9b      	ldrb	r3, [r3, #10]
 800eeba:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800eebe:	4313      	orrs	r3, r2
 800eec0:	bf0c      	ite	eq
 800eec2:	2301      	moveq	r3, #1
 800eec4:	2300      	movne	r3, #0
 800eec6:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800eeca:	4620      	mov	r0, r4
 800eecc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800eece:	f895 3055 	ldrb.w	r3, [r5, #85]	; 0x55
 800eed2:	2b00      	cmp	r3, #0
 800eed4:	d0ec      	beq.n	800eeb0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x30>
 800eed6:	f640 1302 	movw	r3, #2306	; 0x902
 800eeda:	429c      	cmp	r4, r3
 800eedc:	d1e8      	bne.n	800eeb0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x30>
 800eede:	4601      	mov	r1, r0
 800eee0:	4628      	mov	r0, r5
 800eee2:	f7ff fc32 	bl	800e74a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800eee6:	e7e2      	b.n	800eeae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>

0800eee8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800eee8:	4b01      	ldr	r3, [pc, #4]	; (800eef0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800eeea:	6018      	str	r0, [r3, #0]
 800eeec:	4770      	bx	lr
 800eeee:	bf00      	nop
 800eef0:	20026980 	.word	0x20026980

0800eef4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800eef4:	4b07      	ldr	r3, [pc, #28]	; (800ef14 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x20>)
 800eef6:	881a      	ldrh	r2, [r3, #0]
 800eef8:	4282      	cmp	r2, r0
 800eefa:	d809      	bhi.n	800ef10 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800eefc:	4b06      	ldr	r3, [pc, #24]	; (800ef18 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x24>)
 800eefe:	881b      	ldrh	r3, [r3, #0]
 800ef00:	4413      	add	r3, r2
 800ef02:	4298      	cmp	r0, r3
 800ef04:	da04      	bge.n	800ef10 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800ef06:	4b05      	ldr	r3, [pc, #20]	; (800ef1c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x28>)
 800ef08:	681b      	ldr	r3, [r3, #0]
 800ef0a:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800ef0e:	4770      	bx	lr
 800ef10:	2000      	movs	r0, #0
 800ef12:	4770      	bx	lr
 800ef14:	200269a0 	.word	0x200269a0
 800ef18:	200269a4 	.word	0x200269a4
 800ef1c:	20026984 	.word	0x20026984

0800ef20 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800ef20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ef24:	4d26      	ldr	r5, [pc, #152]	; (800efc0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800ef26:	682b      	ldr	r3, [r5, #0]
 800ef28:	2b00      	cmp	r3, #0
 800ef2a:	d046      	beq.n	800efba <_ZN8touchgfx6Bitmap10clearCacheEv+0x9a>
 800ef2c:	4a25      	ldr	r2, [pc, #148]	; (800efc4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800ef2e:	4f26      	ldr	r7, [pc, #152]	; (800efc8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800ef30:	8810      	ldrh	r0, [r2, #0]
 800ef32:	883c      	ldrh	r4, [r7, #0]
 800ef34:	4e25      	ldr	r6, [pc, #148]	; (800efcc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800ef36:	4420      	add	r0, r4
 800ef38:	1c42      	adds	r2, r0, #1
 800ef3a:	f022 0201 	bic.w	r2, r2, #1
 800ef3e:	0412      	lsls	r2, r2, #16
 800ef40:	0c12      	lsrs	r2, r2, #16
 800ef42:	0051      	lsls	r1, r2, #1
 800ef44:	220e      	movs	r2, #14
 800ef46:	fb02 fc04 	mul.w	ip, r2, r4
 800ef4a:	ea4f 0880 	mov.w	r8, r0, lsl #2
 800ef4e:	4c20      	ldr	r4, [pc, #128]	; (800efd0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800ef50:	eb03 0208 	add.w	r2, r3, r8
 800ef54:	eb08 0e01 	add.w	lr, r8, r1
 800ef58:	6022      	str	r2, [r4, #0]
 800ef5a:	eb03 020e 	add.w	r2, r3, lr
 800ef5e:	6032      	str	r2, [r6, #0]
 800ef60:	44e6      	add	lr, ip
 800ef62:	4a1c      	ldr	r2, [pc, #112]	; (800efd4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800ef64:	4473      	add	r3, lr
 800ef66:	6013      	str	r3, [r2, #0]
 800ef68:	4a1b      	ldr	r2, [pc, #108]	; (800efd8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800ef6a:	2300      	movs	r3, #0
 800ef6c:	8013      	strh	r3, [r2, #0]
 800ef6e:	4a1b      	ldr	r2, [pc, #108]	; (800efdc <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800ef70:	6812      	ldr	r2, [r2, #0]
 800ef72:	eba2 0208 	sub.w	r2, r2, r8
 800ef76:	1a52      	subs	r2, r2, r1
 800ef78:	4919      	ldr	r1, [pc, #100]	; (800efe0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800ef7a:	eba2 020c 	sub.w	r2, r2, ip
 800ef7e:	600a      	str	r2, [r1, #0]
 800ef80:	4a18      	ldr	r2, [pc, #96]	; (800efe4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800ef82:	469c      	mov	ip, r3
 800ef84:	8013      	strh	r3, [r2, #0]
 800ef86:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ef8a:	4283      	cmp	r3, r0
 800ef8c:	d10d      	bne.n	800efaa <_ZN8touchgfx6Bitmap10clearCacheEv+0x8a>
 800ef8e:	883d      	ldrh	r5, [r7, #0]
 800ef90:	6830      	ldr	r0, [r6, #0]
 800ef92:	2300      	movs	r3, #0
 800ef94:	240e      	movs	r4, #14
 800ef96:	429d      	cmp	r5, r3
 800ef98:	d90f      	bls.n	800efba <_ZN8touchgfx6Bitmap10clearCacheEv+0x9a>
 800ef9a:	fb04 0203 	mla	r2, r4, r3, r0
 800ef9e:	3301      	adds	r3, #1
 800efa0:	7b11      	ldrb	r1, [r2, #12]
 800efa2:	f36f 1145 	bfc	r1, #5, #1
 800efa6:	7311      	strb	r1, [r2, #12]
 800efa8:	e7f5      	b.n	800ef96 <_ZN8touchgfx6Bitmap10clearCacheEv+0x76>
 800efaa:	682a      	ldr	r2, [r5, #0]
 800efac:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800efb0:	6822      	ldr	r2, [r4, #0]
 800efb2:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800efb6:	3301      	adds	r3, #1
 800efb8:	e7e7      	b.n	800ef8a <_ZN8touchgfx6Bitmap10clearCacheEv+0x6a>
 800efba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800efbe:	bf00      	nop
 800efc0:	20026984 	.word	0x20026984
 800efc4:	200269a0 	.word	0x200269a0
 800efc8:	200269a4 	.word	0x200269a4
 800efcc:	20026988 	.word	0x20026988
 800efd0:	20026998 	.word	0x20026998
 800efd4:	20026990 	.word	0x20026990
 800efd8:	200269a2 	.word	0x200269a2
 800efdc:	2002698c 	.word	0x2002698c
 800efe0:	2002699c 	.word	0x2002699c
 800efe4:	20026994 	.word	0x20026994

0800efe8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800efe8:	b510      	push	{r4, lr}
 800efea:	4b10      	ldr	r3, [pc, #64]	; (800f02c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800efec:	681b      	ldr	r3, [r3, #0]
 800efee:	b9db      	cbnz	r3, 800f028 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800eff0:	b1d1      	cbz	r1, 800f028 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800eff2:	4b0f      	ldr	r3, [pc, #60]	; (800f030 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800eff4:	801a      	strh	r2, [r3, #0]
 800eff6:	4b0f      	ldr	r3, [pc, #60]	; (800f034 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800eff8:	881b      	ldrh	r3, [r3, #0]
 800effa:	b292      	uxth	r2, r2
 800effc:	240e      	movs	r4, #14
 800effe:	4413      	add	r3, r2
 800f000:	4362      	muls	r2, r4
 800f002:	2406      	movs	r4, #6
 800f004:	fb04 2203 	mla	r2, r4, r3, r2
 800f008:	428a      	cmp	r2, r1
 800f00a:	d305      	bcc.n	800f018 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800f00c:	4b0a      	ldr	r3, [pc, #40]	; (800f038 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800f00e:	4a0b      	ldr	r2, [pc, #44]	; (800f03c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800f010:	480b      	ldr	r0, [pc, #44]	; (800f040 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800f012:	2137      	movs	r1, #55	; 0x37
 800f014:	f00b fce6 	bl	801a9e4 <__assert_func>
 800f018:	4b0a      	ldr	r3, [pc, #40]	; (800f044 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800f01a:	6019      	str	r1, [r3, #0]
 800f01c:	4b0a      	ldr	r3, [pc, #40]	; (800f048 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800f01e:	6018      	str	r0, [r3, #0]
 800f020:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f024:	f7ff bf7c 	b.w	800ef20 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800f028:	bd10      	pop	{r4, pc}
 800f02a:	bf00      	nop
 800f02c:	20026990 	.word	0x20026990
 800f030:	200269a4 	.word	0x200269a4
 800f034:	200269a0 	.word	0x200269a0
 800f038:	0801e162 	.word	0x0801e162
 800f03c:	0801e1bb 	.word	0x0801e1bb
 800f040:	0801e13d 	.word	0x0801e13d
 800f044:	2002698c 	.word	0x2002698c
 800f048:	20026984 	.word	0x20026984

0800f04c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800f04c:	b470      	push	{r4, r5, r6}
 800f04e:	4c07      	ldr	r4, [pc, #28]	; (800f06c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800f050:	6826      	ldr	r6, [r4, #0]
 800f052:	4605      	mov	r5, r0
 800f054:	4610      	mov	r0, r2
 800f056:	9a03      	ldr	r2, [sp, #12]
 800f058:	b936      	cbnz	r6, 800f068 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800f05a:	6025      	str	r5, [r4, #0]
 800f05c:	4c04      	ldr	r4, [pc, #16]	; (800f070 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800f05e:	8021      	strh	r1, [r4, #0]
 800f060:	bc70      	pop	{r4, r5, r6}
 800f062:	4619      	mov	r1, r3
 800f064:	f7ff bfc0 	b.w	800efe8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800f068:	bc70      	pop	{r4, r5, r6}
 800f06a:	4770      	bx	lr
 800f06c:	200269a8 	.word	0x200269a8
 800f070:	200269a0 	.word	0x200269a0

0800f074 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800f074:	b508      	push	{r3, lr}
 800f076:	4b14      	ldr	r3, [pc, #80]	; (800f0c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800f078:	6819      	ldr	r1, [r3, #0]
 800f07a:	b931      	cbnz	r1, 800f08a <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800f07c:	4b13      	ldr	r3, [pc, #76]	; (800f0cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800f07e:	4a14      	ldr	r2, [pc, #80]	; (800f0d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800f080:	4814      	ldr	r0, [pc, #80]	; (800f0d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800f082:	f240 21e6 	movw	r1, #742	; 0x2e6
 800f086:	f00b fcad 	bl	801a9e4 <__assert_func>
 800f08a:	4a13      	ldr	r2, [pc, #76]	; (800f0d8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800f08c:	8803      	ldrh	r3, [r0, #0]
 800f08e:	8812      	ldrh	r2, [r2, #0]
 800f090:	4293      	cmp	r3, r2
 800f092:	d204      	bcs.n	800f09e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800f094:	2214      	movs	r2, #20
 800f096:	fb02 1303 	mla	r3, r2, r3, r1
 800f09a:	8918      	ldrh	r0, [r3, #8]
 800f09c:	bd08      	pop	{r3, pc}
 800f09e:	490f      	ldr	r1, [pc, #60]	; (800f0dc <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800f0a0:	8809      	ldrh	r1, [r1, #0]
 800f0a2:	4411      	add	r1, r2
 800f0a4:	428b      	cmp	r3, r1
 800f0a6:	da06      	bge.n	800f0b6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800f0a8:	1a9b      	subs	r3, r3, r2
 800f0aa:	4a0d      	ldr	r2, [pc, #52]	; (800f0e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800f0ac:	6812      	ldr	r2, [r2, #0]
 800f0ae:	210e      	movs	r1, #14
 800f0b0:	fb01 2303 	mla	r3, r1, r3, r2
 800f0b4:	e7f1      	b.n	800f09a <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800f0b6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f0ba:	4293      	cmp	r3, r2
 800f0bc:	bf0a      	itet	eq
 800f0be:	4b09      	ldreq	r3, [pc, #36]	; (800f0e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800f0c0:	2000      	movne	r0, #0
 800f0c2:	8818      	ldrheq	r0, [r3, #0]
 800f0c4:	e7ea      	b.n	800f09c <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800f0c6:	bf00      	nop
 800f0c8:	200269a8 	.word	0x200269a8
 800f0cc:	0801d564 	.word	0x0801d564
 800f0d0:	0801e268 	.word	0x0801e268
 800f0d4:	0801e13d 	.word	0x0801e13d
 800f0d8:	200269a0 	.word	0x200269a0
 800f0dc:	200269a4 	.word	0x200269a4
 800f0e0:	20026988 	.word	0x20026988
 800f0e4:	200268f4 	.word	0x200268f4

0800f0e8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800f0e8:	b508      	push	{r3, lr}
 800f0ea:	4b14      	ldr	r3, [pc, #80]	; (800f13c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800f0ec:	6819      	ldr	r1, [r3, #0]
 800f0ee:	b931      	cbnz	r1, 800f0fe <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800f0f0:	4b13      	ldr	r3, [pc, #76]	; (800f140 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800f0f2:	4a14      	ldr	r2, [pc, #80]	; (800f144 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800f0f4:	4814      	ldr	r0, [pc, #80]	; (800f148 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800f0f6:	f240 21fa 	movw	r1, #762	; 0x2fa
 800f0fa:	f00b fc73 	bl	801a9e4 <__assert_func>
 800f0fe:	4a13      	ldr	r2, [pc, #76]	; (800f14c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800f100:	8803      	ldrh	r3, [r0, #0]
 800f102:	8812      	ldrh	r2, [r2, #0]
 800f104:	4293      	cmp	r3, r2
 800f106:	d204      	bcs.n	800f112 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800f108:	2214      	movs	r2, #20
 800f10a:	fb02 1303 	mla	r3, r2, r3, r1
 800f10e:	8958      	ldrh	r0, [r3, #10]
 800f110:	bd08      	pop	{r3, pc}
 800f112:	490f      	ldr	r1, [pc, #60]	; (800f150 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800f114:	8809      	ldrh	r1, [r1, #0]
 800f116:	4411      	add	r1, r2
 800f118:	428b      	cmp	r3, r1
 800f11a:	da06      	bge.n	800f12a <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800f11c:	1a9b      	subs	r3, r3, r2
 800f11e:	4a0d      	ldr	r2, [pc, #52]	; (800f154 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800f120:	6812      	ldr	r2, [r2, #0]
 800f122:	210e      	movs	r1, #14
 800f124:	fb01 2303 	mla	r3, r1, r3, r2
 800f128:	e7f1      	b.n	800f10e <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800f12a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f12e:	4293      	cmp	r3, r2
 800f130:	bf0a      	itet	eq
 800f132:	4b09      	ldreq	r3, [pc, #36]	; (800f158 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800f134:	2000      	movne	r0, #0
 800f136:	8818      	ldrheq	r0, [r3, #0]
 800f138:	e7ea      	b.n	800f110 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800f13a:	bf00      	nop
 800f13c:	200269a8 	.word	0x200269a8
 800f140:	0801d564 	.word	0x0801d564
 800f144:	0801e294 	.word	0x0801e294
 800f148:	0801e13d 	.word	0x0801e13d
 800f14c:	200269a0 	.word	0x200269a0
 800f150:	200269a4 	.word	0x200269a4
 800f154:	20026988 	.word	0x20026988
 800f158:	200268f6 	.word	0x200268f6

0800f15c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800f15c:	b510      	push	{r4, lr}
 800f15e:	4b23      	ldr	r3, [pc, #140]	; (800f1ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800f160:	681c      	ldr	r4, [r3, #0]
 800f162:	b934      	cbnz	r4, 800f172 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800f164:	4b22      	ldr	r3, [pc, #136]	; (800f1f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800f166:	4a23      	ldr	r2, [pc, #140]	; (800f1f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800f168:	4823      	ldr	r0, [pc, #140]	; (800f1f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800f16a:	f240 310e 	movw	r1, #782	; 0x30e
 800f16e:	f00b fc39 	bl	801a9e4 <__assert_func>
 800f172:	4a22      	ldr	r2, [pc, #136]	; (800f1fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800f174:	880b      	ldrh	r3, [r1, #0]
 800f176:	8812      	ldrh	r2, [r2, #0]
 800f178:	4293      	cmp	r3, r2
 800f17a:	d211      	bcs.n	800f1a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800f17c:	2214      	movs	r2, #20
 800f17e:	fb02 4303 	mla	r3, r2, r3, r4
 800f182:	8a1a      	ldrh	r2, [r3, #16]
 800f184:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800f188:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800f18c:	8a5b      	ldrh	r3, [r3, #18]
 800f18e:	8004      	strh	r4, [r0, #0]
 800f190:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f194:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800f198:	8041      	strh	r1, [r0, #2]
 800f19a:	8082      	strh	r2, [r0, #4]
 800f19c:	80c3      	strh	r3, [r0, #6]
 800f19e:	e00e      	b.n	800f1be <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800f1a0:	4917      	ldr	r1, [pc, #92]	; (800f200 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800f1a2:	8809      	ldrh	r1, [r1, #0]
 800f1a4:	4411      	add	r1, r2
 800f1a6:	428b      	cmp	r3, r1
 800f1a8:	da0a      	bge.n	800f1c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800f1aa:	1a9b      	subs	r3, r3, r2
 800f1ac:	4a15      	ldr	r2, [pc, #84]	; (800f204 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800f1ae:	6812      	ldr	r2, [r2, #0]
 800f1b0:	210e      	movs	r1, #14
 800f1b2:	fb01 2303 	mla	r3, r1, r3, r2
 800f1b6:	681a      	ldr	r2, [r3, #0]
 800f1b8:	6002      	str	r2, [r0, #0]
 800f1ba:	685a      	ldr	r2, [r3, #4]
 800f1bc:	6042      	str	r2, [r0, #4]
 800f1be:	bd10      	pop	{r4, pc}
 800f1c0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f1c4:	4293      	cmp	r3, r2
 800f1c6:	d10b      	bne.n	800f1e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800f1c8:	4b0f      	ldr	r3, [pc, #60]	; (800f208 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800f1ca:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f1ce:	4b0f      	ldr	r3, [pc, #60]	; (800f20c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800f1d0:	8081      	strh	r1, [r0, #4]
 800f1d2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f1d6:	80c2      	strh	r2, [r0, #6]
 800f1d8:	2300      	movs	r3, #0
 800f1da:	8003      	strh	r3, [r0, #0]
 800f1dc:	8043      	strh	r3, [r0, #2]
 800f1de:	e7ee      	b.n	800f1be <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800f1e0:	2300      	movs	r3, #0
 800f1e2:	8003      	strh	r3, [r0, #0]
 800f1e4:	8043      	strh	r3, [r0, #2]
 800f1e6:	8083      	strh	r3, [r0, #4]
 800f1e8:	e7d8      	b.n	800f19c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800f1ea:	bf00      	nop
 800f1ec:	200269a8 	.word	0x200269a8
 800f1f0:	0801d564 	.word	0x0801d564
 800f1f4:	0801e201 	.word	0x0801e201
 800f1f8:	0801e13d 	.word	0x0801e13d
 800f1fc:	200269a0 	.word	0x200269a0
 800f200:	200269a4 	.word	0x200269a4
 800f204:	20026988 	.word	0x20026988
 800f208:	200268f4 	.word	0x200268f4
 800f20c:	200268f6 	.word	0x200268f6

0800f210 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800f210:	4b18      	ldr	r3, [pc, #96]	; (800f274 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800f212:	681b      	ldr	r3, [r3, #0]
 800f214:	b34b      	cbz	r3, 800f26a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800f216:	4a18      	ldr	r2, [pc, #96]	; (800f278 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800f218:	8800      	ldrh	r0, [r0, #0]
 800f21a:	8812      	ldrh	r2, [r2, #0]
 800f21c:	4290      	cmp	r0, r2
 800f21e:	d211      	bcs.n	800f244 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800f220:	2214      	movs	r2, #20
 800f222:	fb02 3300 	mla	r3, r2, r0, r3
 800f226:	8a1a      	ldrh	r2, [r3, #16]
 800f228:	8919      	ldrh	r1, [r3, #8]
 800f22a:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f22e:	428a      	cmp	r2, r1
 800f230:	db1d      	blt.n	800f26e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800f232:	8a58      	ldrh	r0, [r3, #18]
 800f234:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800f238:	895b      	ldrh	r3, [r3, #10]
 800f23a:	4298      	cmp	r0, r3
 800f23c:	bfac      	ite	ge
 800f23e:	2000      	movge	r0, #0
 800f240:	2001      	movlt	r0, #1
 800f242:	4770      	bx	lr
 800f244:	4b0d      	ldr	r3, [pc, #52]	; (800f27c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800f246:	881b      	ldrh	r3, [r3, #0]
 800f248:	4413      	add	r3, r2
 800f24a:	4298      	cmp	r0, r3
 800f24c:	da0d      	bge.n	800f26a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800f24e:	4b0c      	ldr	r3, [pc, #48]	; (800f280 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800f250:	681b      	ldr	r3, [r3, #0]
 800f252:	1a80      	subs	r0, r0, r2
 800f254:	220e      	movs	r2, #14
 800f256:	fb02 3300 	mla	r3, r2, r0, r3
 800f25a:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800f25e:	891a      	ldrh	r2, [r3, #8]
 800f260:	4291      	cmp	r1, r2
 800f262:	db04      	blt.n	800f26e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800f264:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800f268:	e7e6      	b.n	800f238 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800f26a:	2000      	movs	r0, #0
 800f26c:	4770      	bx	lr
 800f26e:	2001      	movs	r0, #1
 800f270:	4770      	bx	lr
 800f272:	bf00      	nop
 800f274:	200269a8 	.word	0x200269a8
 800f278:	200269a0 	.word	0x200269a0
 800f27c:	200269a4 	.word	0x200269a4
 800f280:	20026988 	.word	0x20026988

0800f284 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800f284:	b508      	push	{r3, lr}
 800f286:	4b12      	ldr	r3, [pc, #72]	; (800f2d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800f288:	6819      	ldr	r1, [r3, #0]
 800f28a:	b931      	cbnz	r1, 800f29a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800f28c:	4b11      	ldr	r3, [pc, #68]	; (800f2d4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800f28e:	4a12      	ldr	r2, [pc, #72]	; (800f2d8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800f290:	4812      	ldr	r0, [pc, #72]	; (800f2dc <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800f292:	f240 3132 	movw	r1, #818	; 0x332
 800f296:	f00b fba5 	bl	801a9e4 <__assert_func>
 800f29a:	8803      	ldrh	r3, [r0, #0]
 800f29c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f2a0:	4293      	cmp	r3, r2
 800f2a2:	d012      	beq.n	800f2ca <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800f2a4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f2a8:	4293      	cmp	r3, r2
 800f2aa:	d103      	bne.n	800f2b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800f2ac:	4b0c      	ldr	r3, [pc, #48]	; (800f2e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800f2ae:	681b      	ldr	r3, [r3, #0]
 800f2b0:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800f2b2:	bd08      	pop	{r3, pc}
 800f2b4:	4a0b      	ldr	r2, [pc, #44]	; (800f2e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800f2b6:	6812      	ldr	r2, [r2, #0]
 800f2b8:	b11a      	cbz	r2, 800f2c2 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800f2ba:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800f2be:	2800      	cmp	r0, #0
 800f2c0:	d1f7      	bne.n	800f2b2 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f2c2:	2214      	movs	r2, #20
 800f2c4:	4353      	muls	r3, r2
 800f2c6:	58c8      	ldr	r0, [r1, r3]
 800f2c8:	e7f3      	b.n	800f2b2 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f2ca:	2000      	movs	r0, #0
 800f2cc:	e7f1      	b.n	800f2b2 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f2ce:	bf00      	nop
 800f2d0:	200269a8 	.word	0x200269a8
 800f2d4:	0801d564 	.word	0x0801d564
 800f2d8:	0801e237 	.word	0x0801e237
 800f2dc:	0801e13d 	.word	0x0801e13d
 800f2e0:	20026900 	.word	0x20026900
 800f2e4:	20026984 	.word	0x20026984

0800f2e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800f2e8:	8802      	ldrh	r2, [r0, #0]
 800f2ea:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800f2ee:	429a      	cmp	r2, r3
 800f2f0:	d840      	bhi.n	800f374 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800f2f2:	4b21      	ldr	r3, [pc, #132]	; (800f378 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>)
 800f2f4:	881b      	ldrh	r3, [r3, #0]
 800f2f6:	429a      	cmp	r2, r3
 800f2f8:	d220      	bcs.n	800f33c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x54>
 800f2fa:	4b20      	ldr	r3, [pc, #128]	; (800f37c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 800f2fc:	6819      	ldr	r1, [r3, #0]
 800f2fe:	2314      	movs	r3, #20
 800f300:	fb03 1302 	mla	r3, r3, r2, r1
 800f304:	6858      	ldr	r0, [r3, #4]
 800f306:	2800      	cmp	r0, #0
 800f308:	d035      	beq.n	800f376 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800f30a:	491d      	ldr	r1, [pc, #116]	; (800f380 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800f30c:	6809      	ldr	r1, [r1, #0]
 800f30e:	2900      	cmp	r1, #0
 800f310:	d031      	beq.n	800f376 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800f312:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800f316:	b371      	cbz	r1, 800f376 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800f318:	895a      	ldrh	r2, [r3, #10]
 800f31a:	8918      	ldrh	r0, [r3, #8]
 800f31c:	4350      	muls	r0, r2
 800f31e:	7c5a      	ldrb	r2, [r3, #17]
 800f320:	7cdb      	ldrb	r3, [r3, #19]
 800f322:	0952      	lsrs	r2, r2, #5
 800f324:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800f328:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800f32c:	2b0b      	cmp	r3, #11
 800f32e:	bf18      	it	ne
 800f330:	0040      	lslne	r0, r0, #1
 800f332:	3003      	adds	r0, #3
 800f334:	f020 0003 	bic.w	r0, r0, #3
 800f338:	4408      	add	r0, r1
 800f33a:	4770      	bx	lr
 800f33c:	4911      	ldr	r1, [pc, #68]	; (800f384 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800f33e:	8809      	ldrh	r1, [r1, #0]
 800f340:	4419      	add	r1, r3
 800f342:	428a      	cmp	r2, r1
 800f344:	da16      	bge.n	800f374 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800f346:	4910      	ldr	r1, [pc, #64]	; (800f388 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800f348:	6809      	ldr	r1, [r1, #0]
 800f34a:	1ad3      	subs	r3, r2, r3
 800f34c:	200e      	movs	r0, #14
 800f34e:	fb00 1303 	mla	r3, r0, r3, r1
 800f352:	7b19      	ldrb	r1, [r3, #12]
 800f354:	f001 011f 	and.w	r1, r1, #31
 800f358:	290b      	cmp	r1, #11
 800f35a:	d10b      	bne.n	800f374 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800f35c:	8919      	ldrh	r1, [r3, #8]
 800f35e:	8958      	ldrh	r0, [r3, #10]
 800f360:	4b07      	ldr	r3, [pc, #28]	; (800f380 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800f362:	4348      	muls	r0, r1
 800f364:	6819      	ldr	r1, [r3, #0]
 800f366:	3003      	adds	r0, #3
 800f368:	f020 0303 	bic.w	r3, r0, #3
 800f36c:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800f370:	4418      	add	r0, r3
 800f372:	4770      	bx	lr
 800f374:	2000      	movs	r0, #0
 800f376:	4770      	bx	lr
 800f378:	200269a0 	.word	0x200269a0
 800f37c:	200269a8 	.word	0x200269a8
 800f380:	20026984 	.word	0x20026984
 800f384:	200269a4 	.word	0x200269a4
 800f388:	20026988 	.word	0x20026988

0800f38c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800f38c:	4b19      	ldr	r3, [pc, #100]	; (800f3f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800f38e:	6819      	ldr	r1, [r3, #0]
 800f390:	8803      	ldrh	r3, [r0, #0]
 800f392:	b1e9      	cbz	r1, 800f3d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800f394:	4a18      	ldr	r2, [pc, #96]	; (800f3f8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800f396:	8812      	ldrh	r2, [r2, #0]
 800f398:	429a      	cmp	r2, r3
 800f39a:	d90a      	bls.n	800f3b2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800f39c:	2214      	movs	r2, #20
 800f39e:	fb02 1303 	mla	r3, r2, r3, r1
 800f3a2:	7c58      	ldrb	r0, [r3, #17]
 800f3a4:	0942      	lsrs	r2, r0, #5
 800f3a6:	7cd8      	ldrb	r0, [r3, #19]
 800f3a8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800f3ac:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800f3b0:	4770      	bx	lr
 800f3b2:	4912      	ldr	r1, [pc, #72]	; (800f3fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 800f3b4:	8809      	ldrh	r1, [r1, #0]
 800f3b6:	4411      	add	r1, r2
 800f3b8:	428b      	cmp	r3, r1
 800f3ba:	da09      	bge.n	800f3d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800f3bc:	1a9b      	subs	r3, r3, r2
 800f3be:	4a10      	ldr	r2, [pc, #64]	; (800f400 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 800f3c0:	6812      	ldr	r2, [r2, #0]
 800f3c2:	210e      	movs	r1, #14
 800f3c4:	fb01 2303 	mla	r3, r1, r3, r2
 800f3c8:	7b18      	ldrb	r0, [r3, #12]
 800f3ca:	f000 001f 	and.w	r0, r0, #31
 800f3ce:	4770      	bx	lr
 800f3d0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f3d4:	4293      	cmp	r3, r2
 800f3d6:	d10a      	bne.n	800f3ee <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800f3d8:	4b0a      	ldr	r3, [pc, #40]	; (800f404 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 800f3da:	681b      	ldr	r3, [r3, #0]
 800f3dc:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f3e0:	b10a      	cbz	r2, 800f3e6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800f3e2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800f3e4:	b900      	cbnz	r0, 800f3e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800f3e6:	6898      	ldr	r0, [r3, #8]
 800f3e8:	6803      	ldr	r3, [r0, #0]
 800f3ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f3ec:	4718      	bx	r3
 800f3ee:	2000      	movs	r0, #0
 800f3f0:	4770      	bx	lr
 800f3f2:	bf00      	nop
 800f3f4:	200269a8 	.word	0x200269a8
 800f3f8:	200269a0 	.word	0x200269a0
 800f3fc:	200269a4 	.word	0x200269a4
 800f400:	20026988 	.word	0x20026988
 800f404:	20026900 	.word	0x20026900

0800f408 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800f408:	2010      	movs	r0, #16
 800f40a:	4770      	bx	lr

0800f40c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800f40c:	2000      	movs	r0, #0
 800f40e:	4770      	bx	lr

0800f410 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 800f410:	00d2      	lsls	r2, r2, #3
 800f412:	0209      	lsls	r1, r1, #8
 800f414:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800f418:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 800f41c:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 800f420:	4310      	orrs	r0, r2
 800f422:	4770      	bx	lr

0800f424 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 800f424:	1209      	asrs	r1, r1, #8
 800f426:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800f42a:	4770      	bx	lr

0800f42c <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 800f42c:	f3c1 01cc 	ubfx	r1, r1, #3, #13
 800f430:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 800f434:	4770      	bx	lr

0800f436 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 800f436:	00c9      	lsls	r1, r1, #3
 800f438:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800f43c:	4770      	bx	lr

0800f43e <_ZN8touchgfx8LCD16bpp4initEv>:
 800f43e:	4770      	bx	lr

0800f440 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800f440:	2bff      	cmp	r3, #255	; 0xff
 800f442:	d050      	beq.n	800f4e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800f444:	2a0b      	cmp	r2, #11
 800f446:	d04a      	beq.n	800f4de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800f448:	d80e      	bhi.n	800f468 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800f44a:	2a03      	cmp	r2, #3
 800f44c:	d03f      	beq.n	800f4ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800f44e:	d804      	bhi.n	800f45a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800f450:	2a01      	cmp	r2, #1
 800f452:	d03e      	beq.n	800f4d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800f454:	d93f      	bls.n	800f4d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800f456:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800f458:	4770      	bx	lr
 800f45a:	2a09      	cmp	r2, #9
 800f45c:	d03f      	beq.n	800f4de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800f45e:	d83c      	bhi.n	800f4da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800f460:	2a08      	cmp	r2, #8
 800f462:	d03a      	beq.n	800f4da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800f464:	2000      	movs	r0, #0
 800f466:	4770      	bx	lr
 800f468:	2a2f      	cmp	r2, #47	; 0x2f
 800f46a:	d024      	beq.n	800f4b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800f46c:	d80d      	bhi.n	800f48a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800f46e:	2a2d      	cmp	r2, #45	; 0x2d
 800f470:	d014      	beq.n	800f49c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800f472:	d826      	bhi.n	800f4c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800f474:	2a2c      	cmp	r2, #44	; 0x2c
 800f476:	d1f5      	bne.n	800f464 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f478:	684b      	ldr	r3, [r1, #4]
 800f47a:	781b      	ldrb	r3, [r3, #0]
 800f47c:	2b01      	cmp	r3, #1
 800f47e:	d018      	beq.n	800f4b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800f480:	d323      	bcc.n	800f4ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800f482:	2b02      	cmp	r3, #2
 800f484:	d1ee      	bne.n	800f464 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f486:	6880      	ldr	r0, [r0, #8]
 800f488:	4770      	bx	lr
 800f48a:	2a31      	cmp	r2, #49	; 0x31
 800f48c:	d004      	beq.n	800f498 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800f48e:	d328      	bcc.n	800f4e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800f490:	2a32      	cmp	r2, #50	; 0x32
 800f492:	d026      	beq.n	800f4e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800f494:	2a33      	cmp	r2, #51	; 0x33
 800f496:	d1e5      	bne.n	800f464 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f498:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800f49a:	4770      	bx	lr
 800f49c:	684b      	ldr	r3, [r1, #4]
 800f49e:	781b      	ldrb	r3, [r3, #0]
 800f4a0:	2b01      	cmp	r3, #1
 800f4a2:	d004      	beq.n	800f4ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800f4a4:	d30b      	bcc.n	800f4be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800f4a6:	2b02      	cmp	r3, #2
 800f4a8:	d1dc      	bne.n	800f464 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f4aa:	6900      	ldr	r0, [r0, #16]
 800f4ac:	4770      	bx	lr
 800f4ae:	6a00      	ldr	r0, [r0, #32]
 800f4b0:	4770      	bx	lr
 800f4b2:	6980      	ldr	r0, [r0, #24]
 800f4b4:	4770      	bx	lr
 800f4b6:	684b      	ldr	r3, [r1, #4]
 800f4b8:	781b      	ldrb	r3, [r3, #0]
 800f4ba:	2b00      	cmp	r3, #0
 800f4bc:	d1d2      	bne.n	800f464 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f4be:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800f4c0:	4770      	bx	lr
 800f4c2:	684b      	ldr	r3, [r1, #4]
 800f4c4:	781b      	ldrb	r3, [r3, #0]
 800f4c6:	2b00      	cmp	r3, #0
 800f4c8:	d1cc      	bne.n	800f464 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f4ca:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800f4cc:	4770      	bx	lr
 800f4ce:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800f4d0:	4770      	bx	lr
 800f4d2:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800f4d4:	4770      	bx	lr
 800f4d6:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800f4d8:	4770      	bx	lr
 800f4da:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800f4dc:	4770      	bx	lr
 800f4de:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800f4e0:	4770      	bx	lr
 800f4e2:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800f4e4:	4770      	bx	lr
 800f4e6:	2a0b      	cmp	r2, #11
 800f4e8:	d049      	beq.n	800f57e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800f4ea:	d80e      	bhi.n	800f50a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800f4ec:	2a03      	cmp	r2, #3
 800f4ee:	d040      	beq.n	800f572 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800f4f0:	d804      	bhi.n	800f4fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800f4f2:	2a01      	cmp	r2, #1
 800f4f4:	d03f      	beq.n	800f576 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800f4f6:	d940      	bls.n	800f57a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800f4f8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800f4fa:	4770      	bx	lr
 800f4fc:	2a09      	cmp	r2, #9
 800f4fe:	d03e      	beq.n	800f57e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800f500:	d801      	bhi.n	800f506 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800f502:	2a08      	cmp	r2, #8
 800f504:	d1ae      	bne.n	800f464 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f506:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800f508:	4770      	bx	lr
 800f50a:	2a2f      	cmp	r2, #47	; 0x2f
 800f50c:	d024      	beq.n	800f558 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800f50e:	d80d      	bhi.n	800f52c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800f510:	2a2d      	cmp	r2, #45	; 0x2d
 800f512:	d014      	beq.n	800f53e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800f514:	d826      	bhi.n	800f564 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800f516:	2a2c      	cmp	r2, #44	; 0x2c
 800f518:	d1a4      	bne.n	800f464 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f51a:	684b      	ldr	r3, [r1, #4]
 800f51c:	781b      	ldrb	r3, [r3, #0]
 800f51e:	2b01      	cmp	r3, #1
 800f520:	d018      	beq.n	800f554 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800f522:	d324      	bcc.n	800f56e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800f524:	2b02      	cmp	r3, #2
 800f526:	d19d      	bne.n	800f464 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f528:	68c0      	ldr	r0, [r0, #12]
 800f52a:	4770      	bx	lr
 800f52c:	2a31      	cmp	r2, #49	; 0x31
 800f52e:	d004      	beq.n	800f53a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800f530:	d327      	bcc.n	800f582 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800f532:	2a32      	cmp	r2, #50	; 0x32
 800f534:	d025      	beq.n	800f582 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800f536:	2a33      	cmp	r2, #51	; 0x33
 800f538:	d194      	bne.n	800f464 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f53a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800f53c:	4770      	bx	lr
 800f53e:	684b      	ldr	r3, [r1, #4]
 800f540:	781b      	ldrb	r3, [r3, #0]
 800f542:	2b01      	cmp	r3, #1
 800f544:	d004      	beq.n	800f550 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800f546:	d30b      	bcc.n	800f560 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800f548:	2b02      	cmp	r3, #2
 800f54a:	d18b      	bne.n	800f464 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f54c:	6940      	ldr	r0, [r0, #20]
 800f54e:	4770      	bx	lr
 800f550:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800f552:	4770      	bx	lr
 800f554:	69c0      	ldr	r0, [r0, #28]
 800f556:	4770      	bx	lr
 800f558:	684b      	ldr	r3, [r1, #4]
 800f55a:	781b      	ldrb	r3, [r3, #0]
 800f55c:	2b00      	cmp	r3, #0
 800f55e:	d181      	bne.n	800f464 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f560:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800f562:	4770      	bx	lr
 800f564:	684b      	ldr	r3, [r1, #4]
 800f566:	781b      	ldrb	r3, [r3, #0]
 800f568:	2b00      	cmp	r3, #0
 800f56a:	f47f af7b 	bne.w	800f464 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f56e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800f570:	4770      	bx	lr
 800f572:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f574:	4770      	bx	lr
 800f576:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800f578:	4770      	bx	lr
 800f57a:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800f57c:	4770      	bx	lr
 800f57e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800f580:	4770      	bx	lr
 800f582:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800f584:	4770      	bx	lr

0800f586 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f586:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f58a:	b087      	sub	sp, #28
 800f58c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800f58e:	9205      	str	r2, [sp, #20]
 800f590:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f594:	9202      	str	r2, [sp, #8]
 800f596:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800f59a:	9101      	str	r1, [sp, #4]
 800f59c:	6871      	ldr	r1, [r6, #4]
 800f59e:	981a      	ldr	r0, [sp, #104]	; 0x68
 800f5a0:	f89d 406c 	ldrb.w	r4, [sp, #108]	; 0x6c
 800f5a4:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800f5a8:	fb01 2505 	mla	r5, r1, r5, r2
 800f5ac:	6832      	ldr	r2, [r6, #0]
 800f5ae:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800f5b2:	6802      	ldr	r2, [r0, #0]
 800f5b4:	9203      	str	r2, [sp, #12]
 800f5b6:	6842      	ldr	r2, [r0, #4]
 800f5b8:	fa1f fe84 	uxth.w	lr, r4
 800f5bc:	3204      	adds	r2, #4
 800f5be:	43e4      	mvns	r4, r4
 800f5c0:	9204      	str	r2, [sp, #16]
 800f5c2:	b2e4      	uxtb	r4, r4
 800f5c4:	9a01      	ldr	r2, [sp, #4]
 800f5c6:	2a00      	cmp	r2, #0
 800f5c8:	dc03      	bgt.n	800f5d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800f5ca:	9a05      	ldr	r2, [sp, #20]
 800f5cc:	2a00      	cmp	r2, #0
 800f5ce:	f340 8119 	ble.w	800f804 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800f5d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f5d4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f5d8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f5da:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f5de:	2b00      	cmp	r3, #0
 800f5e0:	dd0f      	ble.n	800f602 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800f5e2:	1408      	asrs	r0, r1, #16
 800f5e4:	d406      	bmi.n	800f5f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f5e6:	4540      	cmp	r0, r8
 800f5e8:	da04      	bge.n	800f5f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f5ea:	1410      	asrs	r0, r2, #16
 800f5ec:	d402      	bmi.n	800f5f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f5ee:	9e02      	ldr	r6, [sp, #8]
 800f5f0:	42b0      	cmp	r0, r6
 800f5f2:	db07      	blt.n	800f604 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800f5f4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f5f6:	4401      	add	r1, r0
 800f5f8:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f5fa:	3b01      	subs	r3, #1
 800f5fc:	4402      	add	r2, r0
 800f5fe:	3502      	adds	r5, #2
 800f600:	e7ed      	b.n	800f5de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800f602:	d00f      	beq.n	800f624 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800f604:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f606:	1e58      	subs	r0, r3, #1
 800f608:	fb06 1600 	mla	r6, r6, r0, r1
 800f60c:	1436      	asrs	r6, r6, #16
 800f60e:	d547      	bpl.n	800f6a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800f610:	469b      	mov	fp, r3
 800f612:	46aa      	mov	sl, r5
 800f614:	f1bb 0f00 	cmp.w	fp, #0
 800f618:	f300 809e 	bgt.w	800f758 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 800f61c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f620:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800f624:	9b01      	ldr	r3, [sp, #4]
 800f626:	2b00      	cmp	r3, #0
 800f628:	f340 80ec 	ble.w	800f804 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800f62c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f630:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f634:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800f638:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f63a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f63e:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f642:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f646:	eef0 6a62 	vmov.f32	s13, s5
 800f64a:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f64e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f652:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f656:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800f65a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f65e:	eef0 6a43 	vmov.f32	s13, s6
 800f662:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f666:	ee12 2a90 	vmov	r2, s5
 800f66a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f66e:	fb92 f3f3 	sdiv	r3, r2, r3
 800f672:	ee13 2a10 	vmov	r2, s6
 800f676:	9313      	str	r3, [sp, #76]	; 0x4c
 800f678:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f67a:	fb92 f3f3 	sdiv	r3, r2, r3
 800f67e:	9314      	str	r3, [sp, #80]	; 0x50
 800f680:	9b01      	ldr	r3, [sp, #4]
 800f682:	9a05      	ldr	r2, [sp, #20]
 800f684:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f688:	3b01      	subs	r3, #1
 800f68a:	9301      	str	r3, [sp, #4]
 800f68c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800f690:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f692:	eeb0 3a67 	vmov.f32	s6, s15
 800f696:	bf08      	it	eq
 800f698:	4613      	moveq	r3, r2
 800f69a:	eef0 2a47 	vmov.f32	s5, s14
 800f69e:	e791      	b.n	800f5c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800f6a0:	4546      	cmp	r6, r8
 800f6a2:	dab5      	bge.n	800f610 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f6a4:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800f6a6:	fb06 2000 	mla	r0, r6, r0, r2
 800f6aa:	1400      	asrs	r0, r0, #16
 800f6ac:	d4b0      	bmi.n	800f610 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f6ae:	9e02      	ldr	r6, [sp, #8]
 800f6b0:	42b0      	cmp	r0, r6
 800f6b2:	daad      	bge.n	800f610 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f6b4:	469a      	mov	sl, r3
 800f6b6:	46ab      	mov	fp, r5
 800f6b8:	f1ba 0f00 	cmp.w	sl, #0
 800f6bc:	ddae      	ble.n	800f61c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f6be:	9f03      	ldr	r7, [sp, #12]
 800f6c0:	1410      	asrs	r0, r2, #16
 800f6c2:	140e      	asrs	r6, r1, #16
 800f6c4:	fb08 7000 	mla	r0, r8, r0, r7
 800f6c8:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f6cc:	5d80      	ldrb	r0, [r0, r6]
 800f6ce:	9e04      	ldr	r6, [sp, #16]
 800f6d0:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800f6d4:	f8bb 6000 	ldrh.w	r6, [fp]
 800f6d8:	1237      	asrs	r7, r6, #8
 800f6da:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f6de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f6e2:	fb17 f704 	smulbb	r7, r7, r4
 800f6e6:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800f6ea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f6ee:	00f6      	lsls	r6, r6, #3
 800f6f0:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800f6f4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f6f8:	10c7      	asrs	r7, r0, #3
 800f6fa:	b2f6      	uxtb	r6, r6
 800f6fc:	00c0      	lsls	r0, r0, #3
 800f6fe:	fb19 f904 	smulbb	r9, r9, r4
 800f702:	fb16 f604 	smulbb	r6, r6, r4
 800f706:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f70a:	b2c0      	uxtb	r0, r0
 800f70c:	fa1f fc8c 	uxth.w	ip, ip
 800f710:	fb07 970e 	mla	r7, r7, lr, r9
 800f714:	fb00 600e 	mla	r0, r0, lr, r6
 800f718:	b280      	uxth	r0, r0
 800f71a:	b2bf      	uxth	r7, r7
 800f71c:	f10c 0601 	add.w	r6, ip, #1
 800f720:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800f724:	f107 0901 	add.w	r9, r7, #1
 800f728:	1c46      	adds	r6, r0, #1
 800f72a:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800f72e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800f732:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f734:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f738:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f73c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f740:	ea4c 0c06 	orr.w	ip, ip, r6
 800f744:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f748:	4401      	add	r1, r0
 800f74a:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f74c:	ea4c 0c09 	orr.w	ip, ip, r9
 800f750:	f82b cb02 	strh.w	ip, [fp], #2
 800f754:	4402      	add	r2, r0
 800f756:	e7af      	b.n	800f6b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800f758:	140e      	asrs	r6, r1, #16
 800f75a:	d44a      	bmi.n	800f7f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f75c:	4546      	cmp	r6, r8
 800f75e:	da48      	bge.n	800f7f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f760:	1410      	asrs	r0, r2, #16
 800f762:	d446      	bmi.n	800f7f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f764:	9f02      	ldr	r7, [sp, #8]
 800f766:	42b8      	cmp	r0, r7
 800f768:	da43      	bge.n	800f7f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f76a:	9f03      	ldr	r7, [sp, #12]
 800f76c:	fb08 7000 	mla	r0, r8, r0, r7
 800f770:	5d80      	ldrb	r0, [r0, r6]
 800f772:	9e04      	ldr	r6, [sp, #16]
 800f774:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800f778:	f8ba 6000 	ldrh.w	r6, [sl]
 800f77c:	1237      	asrs	r7, r6, #8
 800f77e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f782:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f786:	fb17 f704 	smulbb	r7, r7, r4
 800f78a:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800f78e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f792:	00f6      	lsls	r6, r6, #3
 800f794:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800f798:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f79c:	10c7      	asrs	r7, r0, #3
 800f79e:	b2f6      	uxtb	r6, r6
 800f7a0:	00c0      	lsls	r0, r0, #3
 800f7a2:	fb19 f904 	smulbb	r9, r9, r4
 800f7a6:	fb16 f604 	smulbb	r6, r6, r4
 800f7aa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f7ae:	b2c0      	uxtb	r0, r0
 800f7b0:	fa1f fc8c 	uxth.w	ip, ip
 800f7b4:	fb07 970e 	mla	r7, r7, lr, r9
 800f7b8:	fb00 600e 	mla	r0, r0, lr, r6
 800f7bc:	b2bf      	uxth	r7, r7
 800f7be:	b280      	uxth	r0, r0
 800f7c0:	f10c 0601 	add.w	r6, ip, #1
 800f7c4:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800f7c8:	f107 0901 	add.w	r9, r7, #1
 800f7cc:	1c46      	adds	r6, r0, #1
 800f7ce:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800f7d2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800f7d6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f7da:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f7de:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f7e2:	ea4c 0c06 	orr.w	ip, ip, r6
 800f7e6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f7ea:	ea4c 0c09 	orr.w	ip, ip, r9
 800f7ee:	f8aa c000 	strh.w	ip, [sl]
 800f7f2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f7f4:	4401      	add	r1, r0
 800f7f6:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f7f8:	f10a 0a02 	add.w	sl, sl, #2
 800f7fc:	4402      	add	r2, r0
 800f7fe:	f10b 3bff 	add.w	fp, fp, #4294967295
 800f802:	e707      	b.n	800f614 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800f804:	b007      	add	sp, #28
 800f806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f80a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f80a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f80e:	b085      	sub	sp, #20
 800f810:	e9dd 7611 	ldrd	r7, r6, [sp, #68]	; 0x44
 800f814:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f816:	9203      	str	r2, [sp, #12]
 800f818:	6842      	ldr	r2, [r0, #4]
 800f81a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800f81c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800f81e:	6800      	ldr	r0, [r0, #0]
 800f820:	f9bd c058 	ldrsh.w	ip, [sp, #88]	; 0x58
 800f824:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800f828:	4696      	mov	lr, r2
 800f82a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f82c:	fb0e 2505 	mla	r5, lr, r5, r2
 800f830:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f834:	6860      	ldr	r0, [r4, #4]
 800f836:	6822      	ldr	r2, [r4, #0]
 800f838:	9201      	str	r2, [sp, #4]
 800f83a:	1d02      	adds	r2, r0, #4
 800f83c:	9202      	str	r2, [sp, #8]
 800f83e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f842:	2900      	cmp	r1, #0
 800f844:	dc03      	bgt.n	800f84e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800f846:	9a03      	ldr	r2, [sp, #12]
 800f848:	2a00      	cmp	r2, #0
 800f84a:	f340 809b 	ble.w	800f984 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800f84e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f850:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800f854:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f856:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f85a:	2b00      	cmp	r3, #0
 800f85c:	dd0e      	ble.n	800f87c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800f85e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 800f862:	d406      	bmi.n	800f872 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f864:	45e6      	cmp	lr, ip
 800f866:	da04      	bge.n	800f872 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f868:	ea5f 4e20 	movs.w	lr, r0, asr #16
 800f86c:	d401      	bmi.n	800f872 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f86e:	45c6      	cmp	lr, r8
 800f870:	db05      	blt.n	800f87e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800f872:	443c      	add	r4, r7
 800f874:	4430      	add	r0, r6
 800f876:	3b01      	subs	r3, #1
 800f878:	3502      	adds	r5, #2
 800f87a:	e7ee      	b.n	800f85a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800f87c:	d010      	beq.n	800f8a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f87e:	f103 3eff 	add.w	lr, r3, #4294967295
 800f882:	fb07 490e 	mla	r9, r7, lr, r4
 800f886:	ea5f 4929 	movs.w	r9, r9, asr #16
 800f88a:	d53d      	bpl.n	800f908 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 800f88c:	469e      	mov	lr, r3
 800f88e:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 800f892:	f1be 0f00 	cmp.w	lr, #0
 800f896:	dc58      	bgt.n	800f94a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x140>
 800f898:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f89c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800f8a0:	2900      	cmp	r1, #0
 800f8a2:	dd6f      	ble.n	800f984 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800f8a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f8a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f8ac:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f8b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f8b2:	3901      	subs	r1, #1
 800f8b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f8b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f8bc:	eeb0 6a62 	vmov.f32	s12, s5
 800f8c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f8c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f8c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f8cc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f8d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f8d4:	eeb0 6a43 	vmov.f32	s12, s6
 800f8d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f8dc:	ee12 2a90 	vmov	r2, s5
 800f8e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f8e4:	fb92 f7f3 	sdiv	r7, r2, r3
 800f8e8:	ee13 2a10 	vmov	r2, s6
 800f8ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f8f0:	fb92 f6f3 	sdiv	r6, r2, r3
 800f8f4:	9a03      	ldr	r2, [sp, #12]
 800f8f6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f8fa:	bf08      	it	eq
 800f8fc:	4613      	moveq	r3, r2
 800f8fe:	eeb0 3a67 	vmov.f32	s6, s15
 800f902:	eef0 2a47 	vmov.f32	s5, s14
 800f906:	e79c      	b.n	800f842 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 800f908:	45e1      	cmp	r9, ip
 800f90a:	dabf      	bge.n	800f88c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800f90c:	fb06 0e0e 	mla	lr, r6, lr, r0
 800f910:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800f914:	d4ba      	bmi.n	800f88c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800f916:	45c6      	cmp	lr, r8
 800f918:	dab8      	bge.n	800f88c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800f91a:	469e      	mov	lr, r3
 800f91c:	46aa      	mov	sl, r5
 800f91e:	f1be 0f00 	cmp.w	lr, #0
 800f922:	ddb9      	ble.n	800f898 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800f924:	9a01      	ldr	r2, [sp, #4]
 800f926:	ea4f 4920 	mov.w	r9, r0, asr #16
 800f92a:	ea4f 4b24 	mov.w	fp, r4, asr #16
 800f92e:	fb0c 2909 	mla	r9, ip, r9, r2
 800f932:	9a02      	ldr	r2, [sp, #8]
 800f934:	f819 900b 	ldrb.w	r9, [r9, fp]
 800f938:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 800f93c:	f82a 9b02 	strh.w	r9, [sl], #2
 800f940:	443c      	add	r4, r7
 800f942:	4430      	add	r0, r6
 800f944:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f948:	e7e9      	b.n	800f91e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800f94a:	ea5f 4a24 	movs.w	sl, r4, asr #16
 800f94e:	d414      	bmi.n	800f97a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f950:	45e2      	cmp	sl, ip
 800f952:	da12      	bge.n	800f97a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f954:	ea5f 4920 	movs.w	r9, r0, asr #16
 800f958:	d40f      	bmi.n	800f97a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f95a:	45c1      	cmp	r9, r8
 800f95c:	da0d      	bge.n	800f97a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f95e:	9a01      	ldr	r2, [sp, #4]
 800f960:	fb0c 2909 	mla	r9, ip, r9, r2
 800f964:	9a02      	ldr	r2, [sp, #8]
 800f966:	f819 900a 	ldrb.w	r9, [r9, sl]
 800f96a:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 800f96e:	f06f 0201 	mvn.w	r2, #1
 800f972:	fb02 f90e 	mul.w	r9, r2, lr
 800f976:	f82b a009 	strh.w	sl, [fp, r9]
 800f97a:	443c      	add	r4, r7
 800f97c:	4430      	add	r0, r6
 800f97e:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f982:	e786      	b.n	800f892 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800f984:	b005      	add	sp, #20
 800f986:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f98a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f98a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f98e:	b087      	sub	sp, #28
 800f990:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800f992:	9205      	str	r2, [sp, #20]
 800f994:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f998:	9202      	str	r2, [sp, #8]
 800f99a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800f99e:	9101      	str	r1, [sp, #4]
 800f9a0:	6871      	ldr	r1, [r6, #4]
 800f9a2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800f9a4:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
 800f9a8:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800f9ac:	fb01 2404 	mla	r4, r1, r4, r2
 800f9b0:	6832      	ldr	r2, [r6, #0]
 800f9b2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f9b6:	682a      	ldr	r2, [r5, #0]
 800f9b8:	9203      	str	r2, [sp, #12]
 800f9ba:	686a      	ldr	r2, [r5, #4]
 800f9bc:	fa1f fc80 	uxth.w	ip, r0
 800f9c0:	3204      	adds	r2, #4
 800f9c2:	43c0      	mvns	r0, r0
 800f9c4:	9200      	str	r2, [sp, #0]
 800f9c6:	b2c0      	uxtb	r0, r0
 800f9c8:	9a01      	ldr	r2, [sp, #4]
 800f9ca:	2a00      	cmp	r2, #0
 800f9cc:	dc03      	bgt.n	800f9d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800f9ce:	9a05      	ldr	r2, [sp, #20]
 800f9d0:	2a00      	cmp	r2, #0
 800f9d2:	f340 811b 	ble.w	800fc0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800f9d6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f9d8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f9dc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f9de:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f9e2:	2b00      	cmp	r3, #0
 800f9e4:	dd0f      	ble.n	800fa06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800f9e6:	140d      	asrs	r5, r1, #16
 800f9e8:	d406      	bmi.n	800f9f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f9ea:	4575      	cmp	r5, lr
 800f9ec:	da04      	bge.n	800f9f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f9ee:	1415      	asrs	r5, r2, #16
 800f9f0:	d402      	bmi.n	800f9f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f9f2:	9e02      	ldr	r6, [sp, #8]
 800f9f4:	42b5      	cmp	r5, r6
 800f9f6:	db07      	blt.n	800fa08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800f9f8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f9fa:	4429      	add	r1, r5
 800f9fc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f9fe:	3b01      	subs	r3, #1
 800fa00:	442a      	add	r2, r5
 800fa02:	3402      	adds	r4, #2
 800fa04:	e7ed      	b.n	800f9e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800fa06:	d00f      	beq.n	800fa28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800fa08:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800fa0a:	1e5d      	subs	r5, r3, #1
 800fa0c:	fb06 1605 	mla	r6, r6, r5, r1
 800fa10:	1436      	asrs	r6, r6, #16
 800fa12:	d547      	bpl.n	800faa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800fa14:	469a      	mov	sl, r3
 800fa16:	46a1      	mov	r9, r4
 800fa18:	f1ba 0f00 	cmp.w	sl, #0
 800fa1c:	f300 809f 	bgt.w	800fb5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800fa20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fa24:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fa28:	9b01      	ldr	r3, [sp, #4]
 800fa2a:	2b00      	cmp	r3, #0
 800fa2c:	f340 80ee 	ble.w	800fc0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800fa30:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fa34:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800fa38:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800fa3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fa3e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fa42:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fa46:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fa4a:	eef0 6a62 	vmov.f32	s13, s5
 800fa4e:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fa52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fa56:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fa5a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800fa5e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fa62:	eef0 6a43 	vmov.f32	s13, s6
 800fa66:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fa6a:	ee12 2a90 	vmov	r2, s5
 800fa6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fa72:	fb92 f3f3 	sdiv	r3, r2, r3
 800fa76:	ee13 2a10 	vmov	r2, s6
 800fa7a:	9313      	str	r3, [sp, #76]	; 0x4c
 800fa7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fa7e:	fb92 f3f3 	sdiv	r3, r2, r3
 800fa82:	9314      	str	r3, [sp, #80]	; 0x50
 800fa84:	9b01      	ldr	r3, [sp, #4]
 800fa86:	9a05      	ldr	r2, [sp, #20]
 800fa88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fa8c:	3b01      	subs	r3, #1
 800fa8e:	9301      	str	r3, [sp, #4]
 800fa90:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800fa94:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fa96:	eeb0 3a67 	vmov.f32	s6, s15
 800fa9a:	bf08      	it	eq
 800fa9c:	4613      	moveq	r3, r2
 800fa9e:	eef0 2a47 	vmov.f32	s5, s14
 800faa2:	e791      	b.n	800f9c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800faa4:	4576      	cmp	r6, lr
 800faa6:	dab5      	bge.n	800fa14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800faa8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800faaa:	fb06 2505 	mla	r5, r6, r5, r2
 800faae:	142d      	asrs	r5, r5, #16
 800fab0:	d4b0      	bmi.n	800fa14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800fab2:	9e02      	ldr	r6, [sp, #8]
 800fab4:	42b5      	cmp	r5, r6
 800fab6:	daad      	bge.n	800fa14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800fab8:	4699      	mov	r9, r3
 800faba:	46a2      	mov	sl, r4
 800fabc:	f1b9 0f00 	cmp.w	r9, #0
 800fac0:	ddae      	ble.n	800fa20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800fac2:	9f03      	ldr	r7, [sp, #12]
 800fac4:	1415      	asrs	r5, r2, #16
 800fac6:	140e      	asrs	r6, r1, #16
 800fac8:	fb0e 7505 	mla	r5, lr, r5, r7
 800facc:	f109 39ff 	add.w	r9, r9, #4294967295
 800fad0:	f815 8006 	ldrb.w	r8, [r5, r6]
 800fad4:	9d00      	ldr	r5, [sp, #0]
 800fad6:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800fada:	eb05 0b08 	add.w	fp, r5, r8
 800fade:	f8ba 5000 	ldrh.w	r5, [sl]
 800fae2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800fae6:	f89b b001 	ldrb.w	fp, [fp, #1]
 800faea:	122f      	asrs	r7, r5, #8
 800faec:	fb16 f60c 	smulbb	r6, r6, ip
 800faf0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800faf4:	fb07 6700 	mla	r7, r7, r0, r6
 800faf8:	10ee      	asrs	r6, r5, #3
 800fafa:	fb1b fb0c 	smulbb	fp, fp, ip
 800fafe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fb02:	fb06 b600 	mla	r6, r6, r0, fp
 800fb06:	b2b6      	uxth	r6, r6
 800fb08:	9604      	str	r6, [sp, #16]
 800fb0a:	9e00      	ldr	r6, [sp, #0]
 800fb0c:	00ed      	lsls	r5, r5, #3
 800fb0e:	f816 8008 	ldrb.w	r8, [r6, r8]
 800fb12:	b2ed      	uxtb	r5, r5
 800fb14:	fb15 f500 	smulbb	r5, r5, r0
 800fb18:	b2bf      	uxth	r7, r7
 800fb1a:	fb08 580c 	mla	r8, r8, ip, r5
 800fb1e:	fa1f f888 	uxth.w	r8, r8
 800fb22:	1c7d      	adds	r5, r7, #1
 800fb24:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800fb28:	f108 0501 	add.w	r5, r8, #1
 800fb2c:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800fb30:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fb34:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fb38:	432f      	orrs	r7, r5
 800fb3a:	9d04      	ldr	r5, [sp, #16]
 800fb3c:	f105 0b01 	add.w	fp, r5, #1
 800fb40:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800fb44:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fb46:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800fb4a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800fb4e:	4429      	add	r1, r5
 800fb50:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fb52:	ea47 070b 	orr.w	r7, r7, fp
 800fb56:	f82a 7b02 	strh.w	r7, [sl], #2
 800fb5a:	442a      	add	r2, r5
 800fb5c:	e7ae      	b.n	800fabc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800fb5e:	140e      	asrs	r6, r1, #16
 800fb60:	d44b      	bmi.n	800fbfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800fb62:	4576      	cmp	r6, lr
 800fb64:	da49      	bge.n	800fbfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800fb66:	1415      	asrs	r5, r2, #16
 800fb68:	d447      	bmi.n	800fbfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800fb6a:	9f02      	ldr	r7, [sp, #8]
 800fb6c:	42bd      	cmp	r5, r7
 800fb6e:	da44      	bge.n	800fbfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800fb70:	9f03      	ldr	r7, [sp, #12]
 800fb72:	fb0e 7505 	mla	r5, lr, r5, r7
 800fb76:	f815 8006 	ldrb.w	r8, [r5, r6]
 800fb7a:	9d00      	ldr	r5, [sp, #0]
 800fb7c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800fb80:	eb05 0b08 	add.w	fp, r5, r8
 800fb84:	f8b9 5000 	ldrh.w	r5, [r9]
 800fb88:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800fb8c:	f89b b001 	ldrb.w	fp, [fp, #1]
 800fb90:	122f      	asrs	r7, r5, #8
 800fb92:	fb16 f60c 	smulbb	r6, r6, ip
 800fb96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fb9a:	fb07 6700 	mla	r7, r7, r0, r6
 800fb9e:	10ee      	asrs	r6, r5, #3
 800fba0:	fb1b fb0c 	smulbb	fp, fp, ip
 800fba4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fba8:	fb06 b600 	mla	r6, r6, r0, fp
 800fbac:	b2b6      	uxth	r6, r6
 800fbae:	9604      	str	r6, [sp, #16]
 800fbb0:	9e00      	ldr	r6, [sp, #0]
 800fbb2:	00ed      	lsls	r5, r5, #3
 800fbb4:	f816 8008 	ldrb.w	r8, [r6, r8]
 800fbb8:	b2ed      	uxtb	r5, r5
 800fbba:	fb15 f500 	smulbb	r5, r5, r0
 800fbbe:	b2bf      	uxth	r7, r7
 800fbc0:	fb08 580c 	mla	r8, r8, ip, r5
 800fbc4:	fa1f f888 	uxth.w	r8, r8
 800fbc8:	1c7d      	adds	r5, r7, #1
 800fbca:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800fbce:	f108 0501 	add.w	r5, r8, #1
 800fbd2:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800fbd6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fbda:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fbde:	432f      	orrs	r7, r5
 800fbe0:	9d04      	ldr	r5, [sp, #16]
 800fbe2:	f105 0b01 	add.w	fp, r5, #1
 800fbe6:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800fbea:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800fbee:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800fbf2:	ea47 070b 	orr.w	r7, r7, fp
 800fbf6:	f8a9 7000 	strh.w	r7, [r9]
 800fbfa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fbfc:	4429      	add	r1, r5
 800fbfe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fc00:	f109 0902 	add.w	r9, r9, #2
 800fc04:	442a      	add	r2, r5
 800fc06:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fc0a:	e705      	b.n	800fa18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800fc0c:	b007      	add	sp, #28
 800fc0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800fc14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fc14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc18:	b085      	sub	sp, #20
 800fc1a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fc1e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800fc20:	9203      	str	r2, [sp, #12]
 800fc22:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800fc26:	6870      	ldr	r0, [r6, #4]
 800fc28:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800fc2a:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 800fc2e:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800fc32:	9101      	str	r1, [sp, #4]
 800fc34:	fb00 2404 	mla	r4, r0, r4, r2
 800fc38:	6832      	ldr	r2, [r6, #0]
 800fc3a:	686e      	ldr	r6, [r5, #4]
 800fc3c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fc40:	682a      	ldr	r2, [r5, #0]
 800fc42:	9202      	str	r2, [sp, #8]
 800fc44:	3604      	adds	r6, #4
 800fc46:	9a01      	ldr	r2, [sp, #4]
 800fc48:	2a00      	cmp	r2, #0
 800fc4a:	dc03      	bgt.n	800fc54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 800fc4c:	9a03      	ldr	r2, [sp, #12]
 800fc4e:	2a00      	cmp	r2, #0
 800fc50:	f340 80c7 	ble.w	800fde2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800fc54:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fc56:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800fc5a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fc5c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fc60:	2b00      	cmp	r3, #0
 800fc62:	dd0e      	ble.n	800fc82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800fc64:	1405      	asrs	r5, r0, #16
 800fc66:	d405      	bmi.n	800fc74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800fc68:	42bd      	cmp	r5, r7
 800fc6a:	da03      	bge.n	800fc74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800fc6c:	1415      	asrs	r5, r2, #16
 800fc6e:	d401      	bmi.n	800fc74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800fc70:	4545      	cmp	r5, r8
 800fc72:	db07      	blt.n	800fc84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800fc74:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800fc76:	4428      	add	r0, r5
 800fc78:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800fc7a:	3b01      	subs	r3, #1
 800fc7c:	442a      	add	r2, r5
 800fc7e:	3402      	adds	r4, #2
 800fc80:	e7ee      	b.n	800fc60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800fc82:	d010      	beq.n	800fca6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800fc84:	9911      	ldr	r1, [sp, #68]	; 0x44
 800fc86:	1e5d      	subs	r5, r3, #1
 800fc88:	fb01 0c05 	mla	ip, r1, r5, r0
 800fc8c:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 800fc90:	d545      	bpl.n	800fd1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 800fc92:	469e      	mov	lr, r3
 800fc94:	eb04 0b43 	add.w	fp, r4, r3, lsl #1
 800fc98:	f1be 0f00 	cmp.w	lr, #0
 800fc9c:	dc72      	bgt.n	800fd84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800fc9e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fca2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fca6:	9b01      	ldr	r3, [sp, #4]
 800fca8:	2b00      	cmp	r3, #0
 800fcaa:	f340 809a 	ble.w	800fde2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800fcae:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fcb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fcb6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fcba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fcbc:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fcc0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fcc4:	eeb0 6a62 	vmov.f32	s12, s5
 800fcc8:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fccc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fcd0:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fcd4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800fcd8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fcdc:	eeb0 6a43 	vmov.f32	s12, s6
 800fce0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fce4:	ee12 2a90 	vmov	r2, s5
 800fce8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fcec:	fb92 f3f3 	sdiv	r3, r2, r3
 800fcf0:	ee13 2a10 	vmov	r2, s6
 800fcf4:	9311      	str	r3, [sp, #68]	; 0x44
 800fcf6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fcf8:	fb92 f3f3 	sdiv	r3, r2, r3
 800fcfc:	9312      	str	r3, [sp, #72]	; 0x48
 800fcfe:	9b01      	ldr	r3, [sp, #4]
 800fd00:	9a03      	ldr	r2, [sp, #12]
 800fd02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fd06:	3b01      	subs	r3, #1
 800fd08:	9301      	str	r3, [sp, #4]
 800fd0a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800fd0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fd10:	eeb0 3a67 	vmov.f32	s6, s15
 800fd14:	bf08      	it	eq
 800fd16:	4613      	moveq	r3, r2
 800fd18:	eef0 2a47 	vmov.f32	s5, s14
 800fd1c:	e793      	b.n	800fc46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32>
 800fd1e:	45bc      	cmp	ip, r7
 800fd20:	dab7      	bge.n	800fc92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fd22:	9912      	ldr	r1, [sp, #72]	; 0x48
 800fd24:	fb01 2505 	mla	r5, r1, r5, r2
 800fd28:	142d      	asrs	r5, r5, #16
 800fd2a:	d4b2      	bmi.n	800fc92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fd2c:	4545      	cmp	r5, r8
 800fd2e:	dab0      	bge.n	800fc92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fd30:	469e      	mov	lr, r3
 800fd32:	46a2      	mov	sl, r4
 800fd34:	f1be 0f00 	cmp.w	lr, #0
 800fd38:	ddb1      	ble.n	800fc9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800fd3a:	9902      	ldr	r1, [sp, #8]
 800fd3c:	1415      	asrs	r5, r2, #16
 800fd3e:	fb07 1505 	mla	r5, r7, r5, r1
 800fd42:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800fd46:	4928      	ldr	r1, [pc, #160]	; (800fde8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>)
 800fd48:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800fd4c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800fd50:	eb06 0b0c 	add.w	fp, r6, ip
 800fd54:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fd58:	f89b 5001 	ldrb.w	r5, [fp, #1]
 800fd5c:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800fd60:	00ed      	lsls	r5, r5, #3
 800fd62:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800fd66:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800fd6a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800fd6c:	ea49 0505 	orr.w	r5, r9, r5
 800fd70:	f816 900c 	ldrb.w	r9, [r6, ip]
 800fd74:	4408      	add	r0, r1
 800fd76:	9912      	ldr	r1, [sp, #72]	; 0x48
 800fd78:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 800fd7c:	f82a 5b02 	strh.w	r5, [sl], #2
 800fd80:	440a      	add	r2, r1
 800fd82:	e7d7      	b.n	800fd34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x120>
 800fd84:	ea5f 4c20 	movs.w	ip, r0, asr #16
 800fd88:	d424      	bmi.n	800fdd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800fd8a:	45bc      	cmp	ip, r7
 800fd8c:	da22      	bge.n	800fdd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800fd8e:	1415      	asrs	r5, r2, #16
 800fd90:	d420      	bmi.n	800fdd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800fd92:	4545      	cmp	r5, r8
 800fd94:	da1e      	bge.n	800fdd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800fd96:	9902      	ldr	r1, [sp, #8]
 800fd98:	fb07 1505 	mla	r5, r7, r5, r1
 800fd9c:	f06f 0101 	mvn.w	r1, #1
 800fda0:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800fda4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800fda8:	eb06 050c 	add.w	r5, r6, ip
 800fdac:	fb01 f90e 	mul.w	r9, r1, lr
 800fdb0:	f895 a002 	ldrb.w	sl, [r5, #2]
 800fdb4:	786d      	ldrb	r5, [r5, #1]
 800fdb6:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 800fdba:	00ed      	lsls	r5, r5, #3
 800fdbc:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 800fdc0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800fdc4:	ea4a 0505 	orr.w	r5, sl, r5
 800fdc8:	f816 a00c 	ldrb.w	sl, [r6, ip]
 800fdcc:	ea45 05da 	orr.w	r5, r5, sl, lsr #3
 800fdd0:	f82b 5009 	strh.w	r5, [fp, r9]
 800fdd4:	9911      	ldr	r1, [sp, #68]	; 0x44
 800fdd6:	4408      	add	r0, r1
 800fdd8:	9912      	ldr	r1, [sp, #72]	; 0x48
 800fdda:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fdde:	440a      	add	r2, r1
 800fde0:	e75a      	b.n	800fc98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 800fde2:	b005      	add	sp, #20
 800fde4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fde8:	fffff800 	.word	0xfffff800

0800fdec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fdec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fdf0:	b087      	sub	sp, #28
 800fdf2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fdf6:	9204      	str	r2, [sp, #16]
 800fdf8:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800fdfc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800fdfe:	9201      	str	r2, [sp, #4]
 800fe00:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800fe04:	9205      	str	r2, [sp, #20]
 800fe06:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800fe0a:	9100      	str	r1, [sp, #0]
 800fe0c:	6869      	ldr	r1, [r5, #4]
 800fe0e:	981a      	ldr	r0, [sp, #104]	; 0x68
 800fe10:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800fe14:	fb01 2404 	mla	r4, r1, r4, r2
 800fe18:	682a      	ldr	r2, [r5, #0]
 800fe1a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fe1e:	6802      	ldr	r2, [r0, #0]
 800fe20:	9202      	str	r2, [sp, #8]
 800fe22:	6842      	ldr	r2, [r0, #4]
 800fe24:	3204      	adds	r2, #4
 800fe26:	9203      	str	r2, [sp, #12]
 800fe28:	9a00      	ldr	r2, [sp, #0]
 800fe2a:	2a00      	cmp	r2, #0
 800fe2c:	dc03      	bgt.n	800fe36 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 800fe2e:	9a04      	ldr	r2, [sp, #16]
 800fe30:	2a00      	cmp	r2, #0
 800fe32:	f340 812c 	ble.w	801008e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800fe36:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fe38:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800fe3c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fe3e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fe42:	2b00      	cmp	r3, #0
 800fe44:	dd0f      	ble.n	800fe66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800fe46:	1402      	asrs	r2, r0, #16
 800fe48:	d406      	bmi.n	800fe58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800fe4a:	4572      	cmp	r2, lr
 800fe4c:	da04      	bge.n	800fe58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800fe4e:	140a      	asrs	r2, r1, #16
 800fe50:	d402      	bmi.n	800fe58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800fe52:	9d01      	ldr	r5, [sp, #4]
 800fe54:	42aa      	cmp	r2, r5
 800fe56:	db07      	blt.n	800fe68 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800fe58:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fe5a:	4410      	add	r0, r2
 800fe5c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fe5e:	3b01      	subs	r3, #1
 800fe60:	4411      	add	r1, r2
 800fe62:	3402      	adds	r4, #2
 800fe64:	e7ed      	b.n	800fe42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56>
 800fe66:	d00f      	beq.n	800fe88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800fe68:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fe6a:	1e5a      	subs	r2, r3, #1
 800fe6c:	fb05 0502 	mla	r5, r5, r2, r0
 800fe70:	142d      	asrs	r5, r5, #16
 800fe72:	d545      	bpl.n	800ff00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800fe74:	4699      	mov	r9, r3
 800fe76:	46a0      	mov	r8, r4
 800fe78:	f1b9 0f00 	cmp.w	r9, #0
 800fe7c:	f300 80a7 	bgt.w	800ffce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800fe80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fe84:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fe88:	9b00      	ldr	r3, [sp, #0]
 800fe8a:	2b00      	cmp	r3, #0
 800fe8c:	f340 80ff 	ble.w	801008e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800fe90:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fe94:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fe98:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fe9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fea2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fea6:	eeb0 6a62 	vmov.f32	s12, s5
 800feaa:	ee61 7a27 	vmul.f32	s15, s2, s15
 800feae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800feb2:	ee77 2a62 	vsub.f32	s5, s14, s5
 800feb6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800feba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800febe:	eeb0 6a43 	vmov.f32	s12, s6
 800fec2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fec6:	ee12 2a90 	vmov	r2, s5
 800feca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fece:	fb92 f3f3 	sdiv	r3, r2, r3
 800fed2:	ee13 2a10 	vmov	r2, s6
 800fed6:	9313      	str	r3, [sp, #76]	; 0x4c
 800fed8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800feda:	fb92 f3f3 	sdiv	r3, r2, r3
 800fede:	9314      	str	r3, [sp, #80]	; 0x50
 800fee0:	9b00      	ldr	r3, [sp, #0]
 800fee2:	9a04      	ldr	r2, [sp, #16]
 800fee4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fee8:	3b01      	subs	r3, #1
 800feea:	9300      	str	r3, [sp, #0]
 800feec:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800fef0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fef2:	eeb0 3a67 	vmov.f32	s6, s15
 800fef6:	bf08      	it	eq
 800fef8:	4613      	moveq	r3, r2
 800fefa:	eef0 2a47 	vmov.f32	s5, s14
 800fefe:	e793      	b.n	800fe28 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3c>
 800ff00:	4575      	cmp	r5, lr
 800ff02:	dab7      	bge.n	800fe74 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800ff04:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ff06:	fb05 1202 	mla	r2, r5, r2, r1
 800ff0a:	1412      	asrs	r2, r2, #16
 800ff0c:	d4b2      	bmi.n	800fe74 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800ff0e:	9d01      	ldr	r5, [sp, #4]
 800ff10:	42aa      	cmp	r2, r5
 800ff12:	daaf      	bge.n	800fe74 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800ff14:	f04f 0800 	mov.w	r8, #0
 800ff18:	eba3 0208 	sub.w	r2, r3, r8
 800ff1c:	2a00      	cmp	r2, #0
 800ff1e:	ddaf      	ble.n	800fe80 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 800ff20:	9e02      	ldr	r6, [sp, #8]
 800ff22:	140a      	asrs	r2, r1, #16
 800ff24:	1405      	asrs	r5, r0, #16
 800ff26:	fb0e 6202 	mla	r2, lr, r2, r6
 800ff2a:	5d52      	ldrb	r2, [r2, r5]
 800ff2c:	9d03      	ldr	r5, [sp, #12]
 800ff2e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800ff32:	0e2e      	lsrs	r6, r5, #24
 800ff34:	d044      	beq.n	800ffc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800ff36:	9a05      	ldr	r2, [sp, #20]
 800ff38:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 800ff3c:	4356      	muls	r6, r2
 800ff3e:	1c72      	adds	r2, r6, #1
 800ff40:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800ff44:	1212      	asrs	r2, r2, #8
 800ff46:	fa1f f982 	uxth.w	r9, r2
 800ff4a:	ea4f 272c 	mov.w	r7, ip, asr #8
 800ff4e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800ff52:	43d2      	mvns	r2, r2
 800ff54:	b2d2      	uxtb	r2, r2
 800ff56:	fb16 f609 	smulbb	r6, r6, r9
 800ff5a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ff5e:	fb07 6702 	mla	r7, r7, r2, r6
 800ff62:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800ff66:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800ff6a:	b2ed      	uxtb	r5, r5
 800ff6c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800ff70:	fa5f fc8c 	uxtb.w	ip, ip
 800ff74:	fb15 f509 	smulbb	r5, r5, r9
 800ff78:	fb0c 5502 	mla	r5, ip, r2, r5
 800ff7c:	b2bf      	uxth	r7, r7
 800ff7e:	fb1a fa09 	smulbb	sl, sl, r9
 800ff82:	b2ad      	uxth	r5, r5
 800ff84:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ff88:	fb06 a602 	mla	r6, r6, r2, sl
 800ff8c:	1c7a      	adds	r2, r7, #1
 800ff8e:	f105 0a01 	add.w	sl, r5, #1
 800ff92:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800ff96:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800ff9a:	b2b6      	uxth	r6, r6
 800ff9c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ffa0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ffa4:	ea47 070a 	orr.w	r7, r7, sl
 800ffa8:	f106 0a01 	add.w	sl, r6, #1
 800ffac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800ffb0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ffb4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800ffb8:	ea47 070a 	orr.w	r7, r7, sl
 800ffbc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800ffc0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ffc2:	4410      	add	r0, r2
 800ffc4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ffc6:	f108 0801 	add.w	r8, r8, #1
 800ffca:	4411      	add	r1, r2
 800ffcc:	e7a4      	b.n	800ff18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 800ffce:	1405      	asrs	r5, r0, #16
 800ffd0:	d454      	bmi.n	801007c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800ffd2:	4575      	cmp	r5, lr
 800ffd4:	da52      	bge.n	801007c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800ffd6:	140a      	asrs	r2, r1, #16
 800ffd8:	d450      	bmi.n	801007c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800ffda:	9e01      	ldr	r6, [sp, #4]
 800ffdc:	42b2      	cmp	r2, r6
 800ffde:	da4d      	bge.n	801007c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800ffe0:	9e02      	ldr	r6, [sp, #8]
 800ffe2:	fb0e 6202 	mla	r2, lr, r2, r6
 800ffe6:	5d52      	ldrb	r2, [r2, r5]
 800ffe8:	9d03      	ldr	r5, [sp, #12]
 800ffea:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800ffee:	0e2e      	lsrs	r6, r5, #24
 800fff0:	d044      	beq.n	801007c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800fff2:	9a05      	ldr	r2, [sp, #20]
 800fff4:	f8b8 c000 	ldrh.w	ip, [r8]
 800fff8:	4356      	muls	r6, r2
 800fffa:	1c72      	adds	r2, r6, #1
 800fffc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010000:	1212      	asrs	r2, r2, #8
 8010002:	fa1f fa82 	uxth.w	sl, r2
 8010006:	ea4f 272c 	mov.w	r7, ip, asr #8
 801000a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801000e:	43d2      	mvns	r2, r2
 8010010:	b2d2      	uxtb	r2, r2
 8010012:	fb16 f60a 	smulbb	r6, r6, sl
 8010016:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801001a:	fb07 6702 	mla	r7, r7, r2, r6
 801001e:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 8010022:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010026:	b2ed      	uxtb	r5, r5
 8010028:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801002c:	fa5f fc8c 	uxtb.w	ip, ip
 8010030:	fb15 f50a 	smulbb	r5, r5, sl
 8010034:	fb0c 5502 	mla	r5, ip, r2, r5
 8010038:	b2bf      	uxth	r7, r7
 801003a:	fb1b fb0a 	smulbb	fp, fp, sl
 801003e:	b2ad      	uxth	r5, r5
 8010040:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010044:	fb06 b602 	mla	r6, r6, r2, fp
 8010048:	1c7a      	adds	r2, r7, #1
 801004a:	f105 0b01 	add.w	fp, r5, #1
 801004e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010052:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 8010056:	b2b6      	uxth	r6, r6
 8010058:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801005c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010060:	ea47 070b 	orr.w	r7, r7, fp
 8010064:	f106 0b01 	add.w	fp, r6, #1
 8010068:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801006c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010070:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010074:	ea47 070b 	orr.w	r7, r7, fp
 8010078:	f8a8 7000 	strh.w	r7, [r8]
 801007c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801007e:	4410      	add	r0, r2
 8010080:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010082:	f108 0802 	add.w	r8, r8, #2
 8010086:	4411      	add	r1, r2
 8010088:	f109 39ff 	add.w	r9, r9, #4294967295
 801008c:	e6f4      	b.n	800fe78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 801008e:	b007      	add	sp, #28
 8010090:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010094 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010098:	b087      	sub	sp, #28
 801009a:	468b      	mov	fp, r1
 801009c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801009e:	9205      	str	r2, [sp, #20]
 80100a0:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80100a4:	9201      	str	r2, [sp, #4]
 80100a6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80100aa:	6869      	ldr	r1, [r5, #4]
 80100ac:	981a      	ldr	r0, [sp, #104]	; 0x68
 80100ae:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 80100b2:	fb01 2404 	mla	r4, r1, r4, r2
 80100b6:	682a      	ldr	r2, [r5, #0]
 80100b8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80100bc:	6802      	ldr	r2, [r0, #0]
 80100be:	9203      	str	r2, [sp, #12]
 80100c0:	6842      	ldr	r2, [r0, #4]
 80100c2:	3204      	adds	r2, #4
 80100c4:	9204      	str	r2, [sp, #16]
 80100c6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80100ca:	f1bb 0f00 	cmp.w	fp, #0
 80100ce:	dc03      	bgt.n	80100d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 80100d0:	9a05      	ldr	r2, [sp, #20]
 80100d2:	2a00      	cmp	r2, #0
 80100d4:	f340 814a 	ble.w	801036c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 80100d8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80100da:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80100de:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80100e0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80100e4:	2b00      	cmp	r3, #0
 80100e6:	dd0f      	ble.n	8010108 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80100e8:	1408      	asrs	r0, r1, #16
 80100ea:	d406      	bmi.n	80100fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 80100ec:	4540      	cmp	r0, r8
 80100ee:	da04      	bge.n	80100fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 80100f0:	1410      	asrs	r0, r2, #16
 80100f2:	d402      	bmi.n	80100fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 80100f4:	9d01      	ldr	r5, [sp, #4]
 80100f6:	42a8      	cmp	r0, r5
 80100f8:	db07      	blt.n	801010a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 80100fa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80100fc:	4401      	add	r1, r0
 80100fe:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010100:	3b01      	subs	r3, #1
 8010102:	4402      	add	r2, r0
 8010104:	3402      	adds	r4, #2
 8010106:	e7ed      	b.n	80100e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8010108:	d018      	beq.n	801013c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa8>
 801010a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801010c:	1e58      	subs	r0, r3, #1
 801010e:	fb05 1500 	mla	r5, r5, r0, r1
 8010112:	142d      	asrs	r5, r5, #16
 8010114:	d40a      	bmi.n	801012c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010116:	4545      	cmp	r5, r8
 8010118:	da08      	bge.n	801012c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 801011a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801011c:	fb05 2000 	mla	r0, r5, r0, r2
 8010120:	1400      	asrs	r0, r0, #16
 8010122:	d403      	bmi.n	801012c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010124:	9d01      	ldr	r5, [sp, #4]
 8010126:	42a8      	cmp	r0, r5
 8010128:	f2c0 80b7 	blt.w	801029a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x206>
 801012c:	2600      	movs	r6, #0
 801012e:	1998      	adds	r0, r3, r6
 8010130:	2800      	cmp	r0, #0
 8010132:	dc3e      	bgt.n	80101b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11e>
 8010134:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010138:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801013c:	f1bb 0f00 	cmp.w	fp, #0
 8010140:	f340 8114 	ble.w	801036c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 8010144:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010148:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801014c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010150:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010152:	f1bb 0b01 	subs.w	fp, fp, #1
 8010156:	ee31 1a05 	vadd.f32	s2, s2, s10
 801015a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801015e:	eeb0 6a62 	vmov.f32	s12, s5
 8010162:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010166:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801016a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801016e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010172:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010176:	eeb0 6a43 	vmov.f32	s12, s6
 801017a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801017e:	ee12 2a90 	vmov	r2, s5
 8010182:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010186:	fb92 f3f3 	sdiv	r3, r2, r3
 801018a:	ee13 2a10 	vmov	r2, s6
 801018e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010192:	9313      	str	r3, [sp, #76]	; 0x4c
 8010194:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010196:	fb92 f3f3 	sdiv	r3, r2, r3
 801019a:	9a05      	ldr	r2, [sp, #20]
 801019c:	9314      	str	r3, [sp, #80]	; 0x50
 801019e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80101a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80101a4:	eeb0 3a67 	vmov.f32	s6, s15
 80101a8:	bf08      	it	eq
 80101aa:	4613      	moveq	r3, r2
 80101ac:	eef0 2a47 	vmov.f32	s5, s14
 80101b0:	e78b      	b.n	80100ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 80101b2:	140d      	asrs	r5, r1, #16
 80101b4:	d459      	bmi.n	801026a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80101b6:	4545      	cmp	r5, r8
 80101b8:	da57      	bge.n	801026a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80101ba:	1410      	asrs	r0, r2, #16
 80101bc:	d455      	bmi.n	801026a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80101be:	9f01      	ldr	r7, [sp, #4]
 80101c0:	42b8      	cmp	r0, r7
 80101c2:	da52      	bge.n	801026a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80101c4:	9f03      	ldr	r7, [sp, #12]
 80101c6:	fb08 7000 	mla	r0, r8, r0, r7
 80101ca:	5d40      	ldrb	r0, [r0, r5]
 80101cc:	9d04      	ldr	r5, [sp, #16]
 80101ce:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80101d2:	0e07      	lsrs	r7, r0, #24
 80101d4:	2fff      	cmp	r7, #255	; 0xff
 80101d6:	d04e      	beq.n	8010276 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 80101d8:	b2fd      	uxtb	r5, r7
 80101da:	2f00      	cmp	r7, #0
 80101dc:	d045      	beq.n	801026a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80101de:	f06f 0701 	mvn.w	r7, #1
 80101e2:	4377      	muls	r7, r6
 80101e4:	fa1f f985 	uxth.w	r9, r5
 80101e8:	f834 e007 	ldrh.w	lr, [r4, r7]
 80101ec:	9702      	str	r7, [sp, #8]
 80101ee:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80101f2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80101f6:	43ed      	mvns	r5, r5
 80101f8:	b2ed      	uxtb	r5, r5
 80101fa:	fb17 f709 	smulbb	r7, r7, r9
 80101fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010202:	fb0c 7c05 	mla	ip, ip, r5, r7
 8010206:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801020a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801020e:	b2c0      	uxtb	r0, r0
 8010210:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010214:	fa5f fe8e 	uxtb.w	lr, lr
 8010218:	fb10 f009 	smulbb	r0, r0, r9
 801021c:	fb0e 0005 	mla	r0, lr, r5, r0
 8010220:	b280      	uxth	r0, r0
 8010222:	fa1f fc8c 	uxth.w	ip, ip
 8010226:	fb1a fa09 	smulbb	sl, sl, r9
 801022a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801022e:	fb07 a705 	mla	r7, r7, r5, sl
 8010232:	f100 0a01 	add.w	sl, r0, #1
 8010236:	f10c 0501 	add.w	r5, ip, #1
 801023a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801023e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010242:	b2bf      	uxth	r7, r7
 8010244:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010248:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801024c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010250:	f107 0a01 	add.w	sl, r7, #1
 8010254:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010258:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801025c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010260:	9802      	ldr	r0, [sp, #8]
 8010262:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010266:	f824 c000 	strh.w	ip, [r4, r0]
 801026a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801026c:	4401      	add	r1, r0
 801026e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010270:	3e01      	subs	r6, #1
 8010272:	4402      	add	r2, r0
 8010274:	e75b      	b.n	801012e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8010276:	f06f 0501 	mvn.w	r5, #1
 801027a:	fb05 f706 	mul.w	r7, r5, r6
 801027e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010282:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010286:	0945      	lsrs	r5, r0, #5
 8010288:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801028c:	ea4c 0505 	orr.w	r5, ip, r5
 8010290:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010294:	4305      	orrs	r5, r0
 8010296:	53e5      	strh	r5, [r4, r7]
 8010298:	e7e7      	b.n	801026a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801029a:	f04f 0e00 	mov.w	lr, #0
 801029e:	eba3 000e 	sub.w	r0, r3, lr
 80102a2:	2800      	cmp	r0, #0
 80102a4:	f77f af46 	ble.w	8010134 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 80102a8:	9e03      	ldr	r6, [sp, #12]
 80102aa:	1410      	asrs	r0, r2, #16
 80102ac:	140d      	asrs	r5, r1, #16
 80102ae:	fb08 6000 	mla	r0, r8, r0, r6
 80102b2:	5d40      	ldrb	r0, [r0, r5]
 80102b4:	9d04      	ldr	r5, [sp, #16]
 80102b6:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80102ba:	0e06      	lsrs	r6, r0, #24
 80102bc:	2eff      	cmp	r6, #255	; 0xff
 80102be:	d048      	beq.n	8010352 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 80102c0:	b2f5      	uxtb	r5, r6
 80102c2:	2e00      	cmp	r6, #0
 80102c4:	d03e      	beq.n	8010344 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80102c6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80102ca:	fa1f f985 	uxth.w	r9, r5
 80102ce:	ea4f 272c 	mov.w	r7, ip, asr #8
 80102d2:	f3c0 4607 	ubfx	r6, r0, #16, #8
 80102d6:	43ed      	mvns	r5, r5
 80102d8:	b2ed      	uxtb	r5, r5
 80102da:	fb16 f609 	smulbb	r6, r6, r9
 80102de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80102e2:	fb07 6705 	mla	r7, r7, r5, r6
 80102e6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80102ea:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80102ee:	b2c0      	uxtb	r0, r0
 80102f0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80102f4:	fa5f fc8c 	uxtb.w	ip, ip
 80102f8:	fb10 f009 	smulbb	r0, r0, r9
 80102fc:	fb0c 0005 	mla	r0, ip, r5, r0
 8010300:	b2bf      	uxth	r7, r7
 8010302:	fb1a fa09 	smulbb	sl, sl, r9
 8010306:	b280      	uxth	r0, r0
 8010308:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801030c:	fb06 a605 	mla	r6, r6, r5, sl
 8010310:	1c7d      	adds	r5, r7, #1
 8010312:	f100 0a01 	add.w	sl, r0, #1
 8010316:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 801031a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801031e:	b2b6      	uxth	r6, r6
 8010320:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010324:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010328:	ea47 070a 	orr.w	r7, r7, sl
 801032c:	f106 0a01 	add.w	sl, r6, #1
 8010330:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010334:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010338:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801033c:	ea47 070a 	orr.w	r7, r7, sl
 8010340:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8010344:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010346:	4401      	add	r1, r0
 8010348:	9814      	ldr	r0, [sp, #80]	; 0x50
 801034a:	f10e 0e01 	add.w	lr, lr, #1
 801034e:	4402      	add	r2, r0
 8010350:	e7a5      	b.n	801029e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20a>
 8010352:	4d08      	ldr	r5, [pc, #32]	; (8010374 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e0>)
 8010354:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 8010358:	0945      	lsrs	r5, r0, #5
 801035a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801035e:	4335      	orrs	r5, r6
 8010360:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010364:	4305      	orrs	r5, r0
 8010366:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 801036a:	e7eb      	b.n	8010344 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801036c:	b007      	add	sp, #28
 801036e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010372:	bf00      	nop
 8010374:	fffff800 	.word	0xfffff800

08010378 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801037c:	b087      	sub	sp, #28
 801037e:	468b      	mov	fp, r1
 8010380:	9204      	str	r2, [sp, #16]
 8010382:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010386:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8010388:	9201      	str	r2, [sp, #4]
 801038a:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 801038e:	9205      	str	r2, [sp, #20]
 8010390:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010394:	6869      	ldr	r1, [r5, #4]
 8010396:	981a      	ldr	r0, [sp, #104]	; 0x68
 8010398:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 801039c:	fb01 2404 	mla	r4, r1, r4, r2
 80103a0:	682a      	ldr	r2, [r5, #0]
 80103a2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80103a6:	6802      	ldr	r2, [r0, #0]
 80103a8:	9202      	str	r2, [sp, #8]
 80103aa:	6842      	ldr	r2, [r0, #4]
 80103ac:	9203      	str	r2, [sp, #12]
 80103ae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80103b2:	f1bb 0f00 	cmp.w	fp, #0
 80103b6:	dc03      	bgt.n	80103c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 80103b8:	9a04      	ldr	r2, [sp, #16]
 80103ba:	2a00      	cmp	r2, #0
 80103bc:	f340 8136 	ble.w	801062c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 80103c0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80103c2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80103c6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80103c8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80103cc:	2b00      	cmp	r3, #0
 80103ce:	dd0f      	ble.n	80103f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80103d0:	1408      	asrs	r0, r1, #16
 80103d2:	d406      	bmi.n	80103e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80103d4:	4540      	cmp	r0, r8
 80103d6:	da04      	bge.n	80103e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80103d8:	1410      	asrs	r0, r2, #16
 80103da:	d402      	bmi.n	80103e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80103dc:	9d01      	ldr	r5, [sp, #4]
 80103de:	42a8      	cmp	r0, r5
 80103e0:	db07      	blt.n	80103f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 80103e2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80103e4:	4401      	add	r1, r0
 80103e6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80103e8:	3b01      	subs	r3, #1
 80103ea:	4402      	add	r2, r0
 80103ec:	3402      	adds	r4, #2
 80103ee:	e7ed      	b.n	80103cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 80103f0:	d00f      	beq.n	8010412 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 80103f2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80103f4:	1e58      	subs	r0, r3, #1
 80103f6:	fb05 1500 	mla	r5, r5, r0, r1
 80103fa:	142d      	asrs	r5, r5, #16
 80103fc:	d544      	bpl.n	8010488 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 80103fe:	9300      	str	r3, [sp, #0]
 8010400:	46a2      	mov	sl, r4
 8010402:	9800      	ldr	r0, [sp, #0]
 8010404:	2800      	cmp	r0, #0
 8010406:	f300 80ab 	bgt.w	8010560 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 801040a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801040e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010412:	f1bb 0f00 	cmp.w	fp, #0
 8010416:	f340 8109 	ble.w	801062c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 801041a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801041e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010422:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010426:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010428:	f1bb 0b01 	subs.w	fp, fp, #1
 801042c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010430:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010434:	eeb0 6a62 	vmov.f32	s12, s5
 8010438:	ee61 7a27 	vmul.f32	s15, s2, s15
 801043c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010440:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010444:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010448:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801044c:	eeb0 6a43 	vmov.f32	s12, s6
 8010450:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010454:	ee12 2a90 	vmov	r2, s5
 8010458:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801045c:	fb92 f3f3 	sdiv	r3, r2, r3
 8010460:	ee13 2a10 	vmov	r2, s6
 8010464:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010468:	9313      	str	r3, [sp, #76]	; 0x4c
 801046a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801046c:	fb92 f3f3 	sdiv	r3, r2, r3
 8010470:	9a04      	ldr	r2, [sp, #16]
 8010472:	9314      	str	r3, [sp, #80]	; 0x50
 8010474:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010478:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801047a:	eeb0 3a67 	vmov.f32	s6, s15
 801047e:	bf08      	it	eq
 8010480:	4613      	moveq	r3, r2
 8010482:	eef0 2a47 	vmov.f32	s5, s14
 8010486:	e794      	b.n	80103b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8010488:	4545      	cmp	r5, r8
 801048a:	dab8      	bge.n	80103fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 801048c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801048e:	fb05 2000 	mla	r0, r5, r0, r2
 8010492:	1400      	asrs	r0, r0, #16
 8010494:	d4b3      	bmi.n	80103fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 8010496:	9d01      	ldr	r5, [sp, #4]
 8010498:	42a8      	cmp	r0, r5
 801049a:	dab0      	bge.n	80103fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 801049c:	f04f 0900 	mov.w	r9, #0
 80104a0:	eba3 0009 	sub.w	r0, r3, r9
 80104a4:	2800      	cmp	r0, #0
 80104a6:	ddb0      	ble.n	801040a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80104a8:	140d      	asrs	r5, r1, #16
 80104aa:	1410      	asrs	r0, r2, #16
 80104ac:	fb08 5000 	mla	r0, r8, r0, r5
 80104b0:	9d03      	ldr	r5, [sp, #12]
 80104b2:	5c2e      	ldrb	r6, [r5, r0]
 80104b4:	2e00      	cmp	r6, #0
 80104b6:	d04c      	beq.n	8010552 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1da>
 80104b8:	9d02      	ldr	r5, [sp, #8]
 80104ba:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 80104be:	9805      	ldr	r0, [sp, #20]
 80104c0:	f834 5019 	ldrh.w	r5, [r4, r9, lsl #1]
 80104c4:	4346      	muls	r6, r0
 80104c6:	1c70      	adds	r0, r6, #1
 80104c8:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 80104cc:	1200      	asrs	r0, r0, #8
 80104ce:	b287      	uxth	r7, r0
 80104d0:	122e      	asrs	r6, r5, #8
 80104d2:	43c0      	mvns	r0, r0
 80104d4:	b2c0      	uxtb	r0, r0
 80104d6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80104da:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80104de:	fb16 f600 	smulbb	r6, r6, r0
 80104e2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80104e6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80104ea:	00ed      	lsls	r5, r5, #3
 80104ec:	fb0c 6c07 	mla	ip, ip, r7, r6
 80104f0:	b2ed      	uxtb	r5, r5
 80104f2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80104f6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80104fa:	fb15 f500 	smulbb	r5, r5, r0
 80104fe:	fa5f fe8e 	uxtb.w	lr, lr
 8010502:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010506:	fb0e 5507 	mla	r5, lr, r7, r5
 801050a:	fb1a fa00 	smulbb	sl, sl, r0
 801050e:	fa1f fc8c 	uxth.w	ip, ip
 8010512:	b2ad      	uxth	r5, r5
 8010514:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010518:	fb06 a607 	mla	r6, r6, r7, sl
 801051c:	f10c 0001 	add.w	r0, ip, #1
 8010520:	f105 0a01 	add.w	sl, r5, #1
 8010524:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8010528:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801052c:	b2b6      	uxth	r6, r6
 801052e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010532:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010536:	ea4c 0c0a 	orr.w	ip, ip, sl
 801053a:	f106 0a01 	add.w	sl, r6, #1
 801053e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010542:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010546:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801054a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801054e:	f824 c019 	strh.w	ip, [r4, r9, lsl #1]
 8010552:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010554:	4401      	add	r1, r0
 8010556:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010558:	f109 0901 	add.w	r9, r9, #1
 801055c:	4402      	add	r2, r0
 801055e:	e79f      	b.n	80104a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x128>
 8010560:	1408      	asrs	r0, r1, #16
 8010562:	d459      	bmi.n	8010618 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010564:	4540      	cmp	r0, r8
 8010566:	da57      	bge.n	8010618 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010568:	1415      	asrs	r5, r2, #16
 801056a:	d455      	bmi.n	8010618 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 801056c:	9e01      	ldr	r6, [sp, #4]
 801056e:	42b5      	cmp	r5, r6
 8010570:	da52      	bge.n	8010618 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010572:	fb08 0005 	mla	r0, r8, r5, r0
 8010576:	9d03      	ldr	r5, [sp, #12]
 8010578:	5c2e      	ldrb	r6, [r5, r0]
 801057a:	2e00      	cmp	r6, #0
 801057c:	d04c      	beq.n	8010618 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 801057e:	9d02      	ldr	r5, [sp, #8]
 8010580:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 8010584:	9805      	ldr	r0, [sp, #20]
 8010586:	f8ba 5000 	ldrh.w	r5, [sl]
 801058a:	4346      	muls	r6, r0
 801058c:	1c70      	adds	r0, r6, #1
 801058e:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 8010592:	1200      	asrs	r0, r0, #8
 8010594:	b287      	uxth	r7, r0
 8010596:	122e      	asrs	r6, r5, #8
 8010598:	43c0      	mvns	r0, r0
 801059a:	b2c0      	uxtb	r0, r0
 801059c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80105a0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80105a4:	fb16 f600 	smulbb	r6, r6, r0
 80105a8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80105ac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80105b0:	00ed      	lsls	r5, r5, #3
 80105b2:	fb0c 6c07 	mla	ip, ip, r7, r6
 80105b6:	b2ed      	uxtb	r5, r5
 80105b8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80105bc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80105c0:	fb15 f500 	smulbb	r5, r5, r0
 80105c4:	fa5f fe8e 	uxtb.w	lr, lr
 80105c8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80105cc:	fb0e 5507 	mla	r5, lr, r7, r5
 80105d0:	fb19 f900 	smulbb	r9, r9, r0
 80105d4:	fa1f fc8c 	uxth.w	ip, ip
 80105d8:	b2ad      	uxth	r5, r5
 80105da:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80105de:	fb06 9607 	mla	r6, r6, r7, r9
 80105e2:	f10c 0001 	add.w	r0, ip, #1
 80105e6:	f105 0901 	add.w	r9, r5, #1
 80105ea:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 80105ee:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 80105f2:	b2b6      	uxth	r6, r6
 80105f4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80105f8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80105fc:	ea4c 0c09 	orr.w	ip, ip, r9
 8010600:	f106 0901 	add.w	r9, r6, #1
 8010604:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 8010608:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801060c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8010610:	ea4c 0c09 	orr.w	ip, ip, r9
 8010614:	f8aa c000 	strh.w	ip, [sl]
 8010618:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801061a:	4401      	add	r1, r0
 801061c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801061e:	4402      	add	r2, r0
 8010620:	9800      	ldr	r0, [sp, #0]
 8010622:	3801      	subs	r0, #1
 8010624:	f10a 0a02 	add.w	sl, sl, #2
 8010628:	9000      	str	r0, [sp, #0]
 801062a:	e6ea      	b.n	8010402 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 801062c:	b007      	add	sp, #28
 801062e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010632 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010632:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010636:	b087      	sub	sp, #28
 8010638:	468b      	mov	fp, r1
 801063a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801063c:	9205      	str	r2, [sp, #20]
 801063e:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010642:	9202      	str	r2, [sp, #8]
 8010644:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010648:	6869      	ldr	r1, [r5, #4]
 801064a:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 801064c:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 8010650:	fb01 2000 	mla	r0, r1, r0, r2
 8010654:	682a      	ldr	r2, [r5, #0]
 8010656:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801065a:	6822      	ldr	r2, [r4, #0]
 801065c:	9201      	str	r2, [sp, #4]
 801065e:	6862      	ldr	r2, [r4, #4]
 8010660:	9204      	str	r2, [sp, #16]
 8010662:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010666:	f1bb 0f00 	cmp.w	fp, #0
 801066a:	dc03      	bgt.n	8010674 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 801066c:	9a05      	ldr	r2, [sp, #20]
 801066e:	2a00      	cmp	r2, #0
 8010670:	f340 813d 	ble.w	80108ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8010674:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010676:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801067a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801067c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010680:	2b00      	cmp	r3, #0
 8010682:	dd0f      	ble.n	80106a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8010684:	140c      	asrs	r4, r1, #16
 8010686:	d406      	bmi.n	8010696 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8010688:	454c      	cmp	r4, r9
 801068a:	da04      	bge.n	8010696 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 801068c:	1414      	asrs	r4, r2, #16
 801068e:	d402      	bmi.n	8010696 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8010690:	9d02      	ldr	r5, [sp, #8]
 8010692:	42ac      	cmp	r4, r5
 8010694:	db07      	blt.n	80106a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8010696:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010698:	4421      	add	r1, r4
 801069a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801069c:	3b01      	subs	r3, #1
 801069e:	4422      	add	r2, r4
 80106a0:	3002      	adds	r0, #2
 80106a2:	e7ed      	b.n	8010680 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e>
 80106a4:	d018      	beq.n	80106d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa6>
 80106a6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80106a8:	1e5c      	subs	r4, r3, #1
 80106aa:	fb05 1504 	mla	r5, r5, r4, r1
 80106ae:	142d      	asrs	r5, r5, #16
 80106b0:	d40a      	bmi.n	80106c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 80106b2:	454d      	cmp	r5, r9
 80106b4:	da08      	bge.n	80106c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 80106b6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80106b8:	fb05 2404 	mla	r4, r5, r4, r2
 80106bc:	1424      	asrs	r4, r4, #16
 80106be:	d403      	bmi.n	80106c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 80106c0:	9d02      	ldr	r5, [sp, #8]
 80106c2:	42ac      	cmp	r4, r5
 80106c4:	f2c0 80ae 	blt.w	8010824 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f2>
 80106c8:	2600      	movs	r6, #0
 80106ca:	199c      	adds	r4, r3, r6
 80106cc:	2c00      	cmp	r4, #0
 80106ce:	dc3e      	bgt.n	801074e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 80106d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80106d4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80106d8:	f1bb 0f00 	cmp.w	fp, #0
 80106dc:	f340 8107 	ble.w	80108ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 80106e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80106e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80106e8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80106ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80106ee:	f1bb 0b01 	subs.w	fp, fp, #1
 80106f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80106f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80106fa:	eeb0 6a62 	vmov.f32	s12, s5
 80106fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010702:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010706:	ee77 2a62 	vsub.f32	s5, s14, s5
 801070a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801070e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010712:	eeb0 6a43 	vmov.f32	s12, s6
 8010716:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801071a:	ee12 2a90 	vmov	r2, s5
 801071e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010722:	fb92 f3f3 	sdiv	r3, r2, r3
 8010726:	ee13 2a10 	vmov	r2, s6
 801072a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801072e:	9313      	str	r3, [sp, #76]	; 0x4c
 8010730:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010732:	fb92 f3f3 	sdiv	r3, r2, r3
 8010736:	9a05      	ldr	r2, [sp, #20]
 8010738:	9314      	str	r3, [sp, #80]	; 0x50
 801073a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801073e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010740:	eeb0 3a67 	vmov.f32	s6, s15
 8010744:	bf08      	it	eq
 8010746:	4613      	moveq	r3, r2
 8010748:	eef0 2a47 	vmov.f32	s5, s14
 801074c:	e78b      	b.n	8010666 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34>
 801074e:	140c      	asrs	r4, r1, #16
 8010750:	d45a      	bmi.n	8010808 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010752:	454c      	cmp	r4, r9
 8010754:	da58      	bge.n	8010808 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010756:	1415      	asrs	r5, r2, #16
 8010758:	d456      	bmi.n	8010808 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801075a:	9f02      	ldr	r7, [sp, #8]
 801075c:	42bd      	cmp	r5, r7
 801075e:	da53      	bge.n	8010808 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010760:	fb09 4505 	mla	r5, r9, r5, r4
 8010764:	9c04      	ldr	r4, [sp, #16]
 8010766:	5d64      	ldrb	r4, [r4, r5]
 8010768:	2cff      	cmp	r4, #255	; 0xff
 801076a:	d053      	beq.n	8010814 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 801076c:	2c00      	cmp	r4, #0
 801076e:	d04b      	beq.n	8010808 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010770:	9f01      	ldr	r7, [sp, #4]
 8010772:	f837 8015 	ldrh.w	r8, [r7, r5, lsl #1]
 8010776:	f06f 0501 	mvn.w	r5, #1
 801077a:	4375      	muls	r5, r6
 801077c:	9503      	str	r5, [sp, #12]
 801077e:	5b45      	ldrh	r5, [r0, r5]
 8010780:	fa1f fc84 	uxth.w	ip, r4
 8010784:	122f      	asrs	r7, r5, #8
 8010786:	43e4      	mvns	r4, r4
 8010788:	b2e4      	uxtb	r4, r4
 801078a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801078e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010792:	fb17 f704 	smulbb	r7, r7, r4
 8010796:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801079a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801079e:	00ed      	lsls	r5, r5, #3
 80107a0:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80107a4:	b2ed      	uxtb	r5, r5
 80107a6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80107aa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80107ae:	fb15 f504 	smulbb	r5, r5, r4
 80107b2:	fa5f f888 	uxtb.w	r8, r8
 80107b6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80107ba:	fb08 550c 	mla	r5, r8, ip, r5
 80107be:	fb1a fa04 	smulbb	sl, sl, r4
 80107c2:	fa1f fe8e 	uxth.w	lr, lr
 80107c6:	b2ad      	uxth	r5, r5
 80107c8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80107cc:	fb07 a70c 	mla	r7, r7, ip, sl
 80107d0:	f10e 0401 	add.w	r4, lr, #1
 80107d4:	f105 0a01 	add.w	sl, r5, #1
 80107d8:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80107dc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80107e0:	b2bf      	uxth	r7, r7
 80107e2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80107e6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80107ea:	ea4e 0e0a 	orr.w	lr, lr, sl
 80107ee:	f107 0a01 	add.w	sl, r7, #1
 80107f2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80107f6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80107fa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80107fe:	9c03      	ldr	r4, [sp, #12]
 8010800:	ea4e 0e0a 	orr.w	lr, lr, sl
 8010804:	f820 e004 	strh.w	lr, [r0, r4]
 8010808:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801080a:	4421      	add	r1, r4
 801080c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801080e:	3e01      	subs	r6, #1
 8010810:	4422      	add	r2, r4
 8010812:	e75a      	b.n	80106ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010814:	9c01      	ldr	r4, [sp, #4]
 8010816:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801081a:	f06f 0401 	mvn.w	r4, #1
 801081e:	4374      	muls	r4, r6
 8010820:	5305      	strh	r5, [r0, r4]
 8010822:	e7f1      	b.n	8010808 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010824:	f04f 0800 	mov.w	r8, #0
 8010828:	eba3 0408 	sub.w	r4, r3, r8
 801082c:	2c00      	cmp	r4, #0
 801082e:	f77f af4f 	ble.w	80106d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8010832:	140c      	asrs	r4, r1, #16
 8010834:	1415      	asrs	r5, r2, #16
 8010836:	fb09 4505 	mla	r5, r9, r5, r4
 801083a:	9c04      	ldr	r4, [sp, #16]
 801083c:	5d64      	ldrb	r4, [r4, r5]
 801083e:	2cff      	cmp	r4, #255	; 0xff
 8010840:	d04f      	beq.n	80108e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8010842:	2c00      	cmp	r4, #0
 8010844:	d046      	beq.n	80108d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 8010846:	9e01      	ldr	r6, [sp, #4]
 8010848:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801084c:	f830 5018 	ldrh.w	r5, [r0, r8, lsl #1]
 8010850:	b2a7      	uxth	r7, r4
 8010852:	122e      	asrs	r6, r5, #8
 8010854:	43e4      	mvns	r4, r4
 8010856:	b2e4      	uxtb	r4, r4
 8010858:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801085c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010860:	fb16 f604 	smulbb	r6, r6, r4
 8010864:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010868:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801086c:	00ed      	lsls	r5, r5, #3
 801086e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010872:	b2ed      	uxtb	r5, r5
 8010874:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010878:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801087c:	fb15 f504 	smulbb	r5, r5, r4
 8010880:	fa5f fe8e 	uxtb.w	lr, lr
 8010884:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010888:	fb0e 5507 	mla	r5, lr, r7, r5
 801088c:	fb1a fa04 	smulbb	sl, sl, r4
 8010890:	fa1f fc8c 	uxth.w	ip, ip
 8010894:	b2ad      	uxth	r5, r5
 8010896:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801089a:	fb06 a607 	mla	r6, r6, r7, sl
 801089e:	f10c 0401 	add.w	r4, ip, #1
 80108a2:	f105 0a01 	add.w	sl, r5, #1
 80108a6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80108aa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80108ae:	b2b6      	uxth	r6, r6
 80108b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80108b4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80108b8:	ea4c 0c0a 	orr.w	ip, ip, sl
 80108bc:	f106 0a01 	add.w	sl, r6, #1
 80108c0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80108c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80108c8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80108cc:	ea4c 0c0a 	orr.w	ip, ip, sl
 80108d0:	f820 c018 	strh.w	ip, [r0, r8, lsl #1]
 80108d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80108d6:	4421      	add	r1, r4
 80108d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80108da:	f108 0801 	add.w	r8, r8, #1
 80108de:	4422      	add	r2, r4
 80108e0:	e7a2      	b.n	8010828 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80108e2:	9c01      	ldr	r4, [sp, #4]
 80108e4:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80108e8:	f820 4018 	strh.w	r4, [r0, r8, lsl #1]
 80108ec:	e7f2      	b.n	80108d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 80108ee:	b007      	add	sp, #28
 80108f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080108f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80108f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108f8:	b085      	sub	sp, #20
 80108fa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80108fc:	9203      	str	r2, [sp, #12]
 80108fe:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8010902:	9201      	str	r2, [sp, #4]
 8010904:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010908:	9100      	str	r1, [sp, #0]
 801090a:	6841      	ldr	r1, [r0, #4]
 801090c:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 8010910:	f9bd 8058 	ldrsh.w	r8, [sp, #88]	; 0x58
 8010914:	fb01 2404 	mla	r4, r1, r4, r2
 8010918:	6802      	ldr	r2, [r0, #0]
 801091a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801091e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010920:	fa1f fe85 	uxth.w	lr, r5
 8010924:	6812      	ldr	r2, [r2, #0]
 8010926:	9202      	str	r2, [sp, #8]
 8010928:	43ed      	mvns	r5, r5
 801092a:	b2ed      	uxtb	r5, r5
 801092c:	9a00      	ldr	r2, [sp, #0]
 801092e:	2a00      	cmp	r2, #0
 8010930:	dc03      	bgt.n	801093a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 8010932:	9a03      	ldr	r2, [sp, #12]
 8010934:	2a00      	cmp	r2, #0
 8010936:	f340 8117 	ble.w	8010b68 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 801093a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801093c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010940:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010942:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010946:	2b00      	cmp	r3, #0
 8010948:	dd0f      	ble.n	801096a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801094a:	1408      	asrs	r0, r1, #16
 801094c:	d406      	bmi.n	801095c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801094e:	4540      	cmp	r0, r8
 8010950:	da04      	bge.n	801095c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010952:	1410      	asrs	r0, r2, #16
 8010954:	d402      	bmi.n	801095c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010956:	9e01      	ldr	r6, [sp, #4]
 8010958:	42b0      	cmp	r0, r6
 801095a:	db07      	blt.n	801096c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801095c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801095e:	4401      	add	r1, r0
 8010960:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010962:	3b01      	subs	r3, #1
 8010964:	4402      	add	r2, r0
 8010966:	3402      	adds	r4, #2
 8010968:	e7ed      	b.n	8010946 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52>
 801096a:	d069      	beq.n	8010a40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x14c>
 801096c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801096e:	1e58      	subs	r0, r3, #1
 8010970:	fb06 1600 	mla	r6, r6, r0, r1
 8010974:	1436      	asrs	r6, r6, #16
 8010976:	d459      	bmi.n	8010a2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8010978:	4546      	cmp	r6, r8
 801097a:	da57      	bge.n	8010a2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 801097c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801097e:	fb06 2000 	mla	r0, r6, r0, r2
 8010982:	1400      	asrs	r0, r0, #16
 8010984:	d452      	bmi.n	8010a2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8010986:	9e01      	ldr	r6, [sp, #4]
 8010988:	42b0      	cmp	r0, r6
 801098a:	da4f      	bge.n	8010a2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 801098c:	469a      	mov	sl, r3
 801098e:	46a3      	mov	fp, r4
 8010990:	f1ba 0f00 	cmp.w	sl, #0
 8010994:	dd50      	ble.n	8010a38 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x144>
 8010996:	140e      	asrs	r6, r1, #16
 8010998:	1410      	asrs	r0, r2, #16
 801099a:	fb08 6000 	mla	r0, r8, r0, r6
 801099e:	9e02      	ldr	r6, [sp, #8]
 80109a0:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 80109a4:	f8bb 6000 	ldrh.w	r6, [fp]
 80109a8:	1237      	asrs	r7, r6, #8
 80109aa:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80109ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80109b2:	fb17 f705 	smulbb	r7, r7, r5
 80109b6:	ea4f 09e6 	mov.w	r9, r6, asr #3
 80109ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80109be:	00f6      	lsls	r6, r6, #3
 80109c0:	fb0c 7c0e 	mla	ip, ip, lr, r7
 80109c4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80109c8:	10c7      	asrs	r7, r0, #3
 80109ca:	b2f6      	uxtb	r6, r6
 80109cc:	00c0      	lsls	r0, r0, #3
 80109ce:	fb19 f905 	smulbb	r9, r9, r5
 80109d2:	fb16 f605 	smulbb	r6, r6, r5
 80109d6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80109da:	b2c0      	uxtb	r0, r0
 80109dc:	fa1f fc8c 	uxth.w	ip, ip
 80109e0:	fb07 970e 	mla	r7, r7, lr, r9
 80109e4:	fb00 600e 	mla	r0, r0, lr, r6
 80109e8:	b280      	uxth	r0, r0
 80109ea:	b2bf      	uxth	r7, r7
 80109ec:	f10c 0601 	add.w	r6, ip, #1
 80109f0:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 80109f4:	f107 0901 	add.w	r9, r7, #1
 80109f8:	1c46      	adds	r6, r0, #1
 80109fa:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80109fe:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8010a02:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010a04:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010a08:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010a0c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8010a10:	ea4c 0c06 	orr.w	ip, ip, r6
 8010a14:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8010a18:	4401      	add	r1, r0
 8010a1a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010a1c:	ea4c 0c09 	orr.w	ip, ip, r9
 8010a20:	f82b cb02 	strh.w	ip, [fp], #2
 8010a24:	4402      	add	r2, r0
 8010a26:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010a2a:	e7b1      	b.n	8010990 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8010a2c:	f04f 0900 	mov.w	r9, #0
 8010a30:	eb03 0009 	add.w	r0, r3, r9
 8010a34:	2800      	cmp	r0, #0
 8010a36:	dc41      	bgt.n	8010abc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c8>
 8010a38:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010a3c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010a40:	9b00      	ldr	r3, [sp, #0]
 8010a42:	2b00      	cmp	r3, #0
 8010a44:	f340 8090 	ble.w	8010b68 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8010a48:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010a4c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010a50:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010a54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010a56:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010a5a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010a5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010a62:	eef0 6a62 	vmov.f32	s13, s5
 8010a66:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010a6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010a6e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010a72:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8010a76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010a7a:	eef0 6a43 	vmov.f32	s13, s6
 8010a7e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010a82:	ee12 2a90 	vmov	r2, s5
 8010a86:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010a8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8010a8e:	ee13 2a10 	vmov	r2, s6
 8010a92:	9311      	str	r3, [sp, #68]	; 0x44
 8010a94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010a96:	fb92 f3f3 	sdiv	r3, r2, r3
 8010a9a:	9312      	str	r3, [sp, #72]	; 0x48
 8010a9c:	9b00      	ldr	r3, [sp, #0]
 8010a9e:	9a03      	ldr	r2, [sp, #12]
 8010aa0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010aa4:	3b01      	subs	r3, #1
 8010aa6:	9300      	str	r3, [sp, #0]
 8010aa8:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8010aac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010aae:	eeb0 3a67 	vmov.f32	s6, s15
 8010ab2:	bf08      	it	eq
 8010ab4:	4613      	moveq	r3, r2
 8010ab6:	eef0 2a47 	vmov.f32	s5, s14
 8010aba:	e737      	b.n	801092c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 8010abc:	140e      	asrs	r6, r1, #16
 8010abe:	d44c      	bmi.n	8010b5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8010ac0:	4546      	cmp	r6, r8
 8010ac2:	da4a      	bge.n	8010b5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8010ac4:	1410      	asrs	r0, r2, #16
 8010ac6:	d448      	bmi.n	8010b5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8010ac8:	9f01      	ldr	r7, [sp, #4]
 8010aca:	42b8      	cmp	r0, r7
 8010acc:	da45      	bge.n	8010b5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8010ace:	fb08 6000 	mla	r0, r8, r0, r6
 8010ad2:	9e02      	ldr	r6, [sp, #8]
 8010ad4:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8010ad8:	f06f 0601 	mvn.w	r6, #1
 8010adc:	fb06 fb09 	mul.w	fp, r6, r9
 8010ae0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010ae4:	f834 600b 	ldrh.w	r6, [r4, fp]
 8010ae8:	1237      	asrs	r7, r6, #8
 8010aea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010aee:	fb17 f705 	smulbb	r7, r7, r5
 8010af2:	ea4f 0ae6 	mov.w	sl, r6, asr #3
 8010af6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010afa:	00f6      	lsls	r6, r6, #3
 8010afc:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8010b00:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010b04:	10c7      	asrs	r7, r0, #3
 8010b06:	b2f6      	uxtb	r6, r6
 8010b08:	00c0      	lsls	r0, r0, #3
 8010b0a:	fb1a fa05 	smulbb	sl, sl, r5
 8010b0e:	fb16 f605 	smulbb	r6, r6, r5
 8010b12:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010b16:	b2c0      	uxtb	r0, r0
 8010b18:	fa1f fc8c 	uxth.w	ip, ip
 8010b1c:	fb07 a70e 	mla	r7, r7, lr, sl
 8010b20:	fb00 600e 	mla	r0, r0, lr, r6
 8010b24:	b2bf      	uxth	r7, r7
 8010b26:	b280      	uxth	r0, r0
 8010b28:	f10c 0601 	add.w	r6, ip, #1
 8010b2c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8010b30:	f107 0a01 	add.w	sl, r7, #1
 8010b34:	1c46      	adds	r6, r0, #1
 8010b36:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8010b3a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010b3e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010b42:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010b46:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010b4a:	ea4c 0c06 	orr.w	ip, ip, r6
 8010b4e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010b52:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010b56:	f824 c00b 	strh.w	ip, [r4, fp]
 8010b5a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010b5c:	4401      	add	r1, r0
 8010b5e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010b60:	f109 39ff 	add.w	r9, r9, #4294967295
 8010b64:	4402      	add	r2, r0
 8010b66:	e763      	b.n	8010a30 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x13c>
 8010b68:	b005      	add	sp, #20
 8010b6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010b6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010b6e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b72:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010b74:	9201      	str	r2, [sp, #4]
 8010b76:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 8010b7a:	6844      	ldr	r4, [r0, #4]
 8010b7c:	6800      	ldr	r0, [r0, #0]
 8010b7e:	f9bd c050 	ldrsh.w	ip, [sp, #80]	; 0x50
 8010b82:	f9bd e054 	ldrsh.w	lr, [sp, #84]	; 0x54
 8010b86:	fb04 2505 	mla	r5, r4, r5, r2
 8010b8a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010b8e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8010b90:	e9dd 760f 	ldrd	r7, r6, [sp, #60]	; 0x3c
 8010b94:	6802      	ldr	r2, [r0, #0]
 8010b96:	9200      	str	r2, [sp, #0]
 8010b98:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010b9c:	2900      	cmp	r1, #0
 8010b9e:	dc03      	bgt.n	8010ba8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8010ba0:	9a01      	ldr	r2, [sp, #4]
 8010ba2:	2a00      	cmp	r2, #0
 8010ba4:	f340 8095 	ble.w	8010cd2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 8010ba8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010baa:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8010bae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8010bb0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010bb4:	2b00      	cmp	r3, #0
 8010bb6:	dd0e      	ble.n	8010bd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010bb8:	ea5f 4824 	movs.w	r8, r4, asr #16
 8010bbc:	d406      	bmi.n	8010bcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8010bbe:	45e0      	cmp	r8, ip
 8010bc0:	da04      	bge.n	8010bcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8010bc2:	ea5f 4820 	movs.w	r8, r0, asr #16
 8010bc6:	d401      	bmi.n	8010bcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8010bc8:	45f0      	cmp	r8, lr
 8010bca:	db05      	blt.n	8010bd8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010bcc:	443c      	add	r4, r7
 8010bce:	4430      	add	r0, r6
 8010bd0:	3b01      	subs	r3, #1
 8010bd2:	3502      	adds	r5, #2
 8010bd4:	e7ee      	b.n	8010bb4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 8010bd6:	d010      	beq.n	8010bfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8010bd8:	f103 38ff 	add.w	r8, r3, #4294967295
 8010bdc:	fb07 4908 	mla	r9, r7, r8, r4
 8010be0:	ea5f 4929 	movs.w	r9, r9, asr #16
 8010be4:	d53d      	bpl.n	8010c62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8010be6:	4698      	mov	r8, r3
 8010be8:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 8010bec:	f1b8 0f00 	cmp.w	r8, #0
 8010bf0:	dc55      	bgt.n	8010c9e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x130>
 8010bf2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010bf6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8010bfa:	2900      	cmp	r1, #0
 8010bfc:	dd69      	ble.n	8010cd2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 8010bfe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010c02:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010c06:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010c0a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010c0c:	3901      	subs	r1, #1
 8010c0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010c12:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010c16:	eeb0 6a62 	vmov.f32	s12, s5
 8010c1a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010c1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c22:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010c26:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 8010c2a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010c2e:	eeb0 6a43 	vmov.f32	s12, s6
 8010c32:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010c36:	ee12 2a90 	vmov	r2, s5
 8010c3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010c3e:	fb92 f7f3 	sdiv	r7, r2, r3
 8010c42:	ee13 2a10 	vmov	r2, s6
 8010c46:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c4a:	fb92 f6f3 	sdiv	r6, r2, r3
 8010c4e:	9a01      	ldr	r2, [sp, #4]
 8010c50:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8010c54:	bf08      	it	eq
 8010c56:	4613      	moveq	r3, r2
 8010c58:	eeb0 3a67 	vmov.f32	s6, s15
 8010c5c:	eef0 2a47 	vmov.f32	s5, s14
 8010c60:	e79c      	b.n	8010b9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e>
 8010c62:	45e1      	cmp	r9, ip
 8010c64:	dabf      	bge.n	8010be6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010c66:	fb06 0808 	mla	r8, r6, r8, r0
 8010c6a:	ea5f 4828 	movs.w	r8, r8, asr #16
 8010c6e:	d4ba      	bmi.n	8010be6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010c70:	45f0      	cmp	r8, lr
 8010c72:	dab8      	bge.n	8010be6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010c74:	4698      	mov	r8, r3
 8010c76:	46aa      	mov	sl, r5
 8010c78:	f1b8 0f00 	cmp.w	r8, #0
 8010c7c:	ddb9      	ble.n	8010bf2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 8010c7e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8010c82:	ea4f 4b24 	mov.w	fp, r4, asr #16
 8010c86:	fb0c b909 	mla	r9, ip, r9, fp
 8010c8a:	9a00      	ldr	r2, [sp, #0]
 8010c8c:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 8010c90:	f82a 9b02 	strh.w	r9, [sl], #2
 8010c94:	443c      	add	r4, r7
 8010c96:	4430      	add	r0, r6
 8010c98:	f108 38ff 	add.w	r8, r8, #4294967295
 8010c9c:	e7ec      	b.n	8010c78 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8010c9e:	ea5f 4a24 	movs.w	sl, r4, asr #16
 8010ca2:	d411      	bmi.n	8010cc8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010ca4:	45e2      	cmp	sl, ip
 8010ca6:	da0f      	bge.n	8010cc8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010ca8:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010cac:	d40c      	bmi.n	8010cc8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010cae:	45f1      	cmp	r9, lr
 8010cb0:	da0a      	bge.n	8010cc8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010cb2:	fb0c a909 	mla	r9, ip, r9, sl
 8010cb6:	9a00      	ldr	r2, [sp, #0]
 8010cb8:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 8010cbc:	f06f 0201 	mvn.w	r2, #1
 8010cc0:	fb02 f908 	mul.w	r9, r2, r8
 8010cc4:	f82b a009 	strh.w	sl, [fp, r9]
 8010cc8:	443c      	add	r4, r7
 8010cca:	4430      	add	r0, r6
 8010ccc:	f108 38ff 	add.w	r8, r8, #4294967295
 8010cd0:	e78c      	b.n	8010bec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010cd2:	b003      	add	sp, #12
 8010cd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010cd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cdc:	b087      	sub	sp, #28
 8010cde:	468b      	mov	fp, r1
 8010ce0:	9204      	str	r2, [sp, #16]
 8010ce2:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010ce6:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010ce8:	9201      	str	r2, [sp, #4]
 8010cea:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8010cee:	9205      	str	r2, [sp, #20]
 8010cf0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010cf4:	6841      	ldr	r1, [r0, #4]
 8010cf6:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8010cfa:	fb01 2404 	mla	r4, r1, r4, r2
 8010cfe:	6802      	ldr	r2, [r0, #0]
 8010d00:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010d04:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8010d06:	6812      	ldr	r2, [r2, #0]
 8010d08:	9203      	str	r2, [sp, #12]
 8010d0a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010d0e:	f1bb 0f00 	cmp.w	fp, #0
 8010d12:	dc03      	bgt.n	8010d1c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 8010d14:	9a04      	ldr	r2, [sp, #16]
 8010d16:	2a00      	cmp	r2, #0
 8010d18:	f340 812c 	ble.w	8010f74 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 8010d1c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010d1e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010d22:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010d24:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010d28:	2b00      	cmp	r3, #0
 8010d2a:	dd0f      	ble.n	8010d4c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8010d2c:	1402      	asrs	r2, r0, #16
 8010d2e:	d406      	bmi.n	8010d3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010d30:	4542      	cmp	r2, r8
 8010d32:	da04      	bge.n	8010d3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010d34:	140a      	asrs	r2, r1, #16
 8010d36:	d402      	bmi.n	8010d3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010d38:	9d01      	ldr	r5, [sp, #4]
 8010d3a:	42aa      	cmp	r2, r5
 8010d3c:	db07      	blt.n	8010d4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8010d3e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010d40:	4410      	add	r0, r2
 8010d42:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010d44:	3b01      	subs	r3, #1
 8010d46:	4411      	add	r1, r2
 8010d48:	3402      	adds	r4, #2
 8010d4a:	e7ed      	b.n	8010d28 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8010d4c:	d01a      	beq.n	8010d84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 8010d4e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010d50:	1e5a      	subs	r2, r3, #1
 8010d52:	fb05 0502 	mla	r5, r5, r2, r0
 8010d56:	142d      	asrs	r5, r5, #16
 8010d58:	d40a      	bmi.n	8010d70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010d5a:	4545      	cmp	r5, r8
 8010d5c:	da08      	bge.n	8010d70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010d5e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010d60:	fb05 1202 	mla	r2, r5, r2, r1
 8010d64:	1412      	asrs	r2, r2, #16
 8010d66:	d403      	bmi.n	8010d70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010d68:	9d01      	ldr	r5, [sp, #4]
 8010d6a:	42aa      	cmp	r2, r5
 8010d6c:	f2c0 80a6 	blt.w	8010ebc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8010d70:	f04f 0c00 	mov.w	ip, #0
 8010d74:	eb03 020c 	add.w	r2, r3, ip
 8010d78:	2a00      	cmp	r2, #0
 8010d7a:	dc3e      	bgt.n	8010dfa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x122>
 8010d7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010d80:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010d84:	f1bb 0f00 	cmp.w	fp, #0
 8010d88:	f340 80f4 	ble.w	8010f74 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 8010d8c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010d90:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010d94:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010d98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010d9a:	f1bb 0b01 	subs.w	fp, fp, #1
 8010d9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010da2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010da6:	eeb0 6a62 	vmov.f32	s12, s5
 8010daa:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010dae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010db2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010db6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010dba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010dbe:	eeb0 6a43 	vmov.f32	s12, s6
 8010dc2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010dc6:	ee12 2a90 	vmov	r2, s5
 8010dca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010dce:	fb92 f3f3 	sdiv	r3, r2, r3
 8010dd2:	ee13 2a10 	vmov	r2, s6
 8010dd6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010dda:	9313      	str	r3, [sp, #76]	; 0x4c
 8010ddc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010dde:	fb92 f3f3 	sdiv	r3, r2, r3
 8010de2:	9a04      	ldr	r2, [sp, #16]
 8010de4:	9314      	str	r3, [sp, #80]	; 0x50
 8010de6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010dea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010dec:	eeb0 3a67 	vmov.f32	s6, s15
 8010df0:	bf08      	it	eq
 8010df2:	4613      	moveq	r3, r2
 8010df4:	eef0 2a47 	vmov.f32	s5, s14
 8010df8:	e789      	b.n	8010d0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 8010dfa:	1405      	asrs	r5, r0, #16
 8010dfc:	d457      	bmi.n	8010eae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010dfe:	4545      	cmp	r5, r8
 8010e00:	da55      	bge.n	8010eae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010e02:	140a      	asrs	r2, r1, #16
 8010e04:	d453      	bmi.n	8010eae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010e06:	9e01      	ldr	r6, [sp, #4]
 8010e08:	42b2      	cmp	r2, r6
 8010e0a:	da50      	bge.n	8010eae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010e0c:	fb08 5202 	mla	r2, r8, r2, r5
 8010e10:	9d03      	ldr	r5, [sp, #12]
 8010e12:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010e16:	0e2e      	lsrs	r6, r5, #24
 8010e18:	d049      	beq.n	8010eae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010e1a:	f06f 0201 	mvn.w	r2, #1
 8010e1e:	fb02 f20c 	mul.w	r2, r2, ip
 8010e22:	9202      	str	r2, [sp, #8]
 8010e24:	f834 e002 	ldrh.w	lr, [r4, r2]
 8010e28:	9a05      	ldr	r2, [sp, #20]
 8010e2a:	4356      	muls	r6, r2
 8010e2c:	1c72      	adds	r2, r6, #1
 8010e2e:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010e32:	1212      	asrs	r2, r2, #8
 8010e34:	fa1f f982 	uxth.w	r9, r2
 8010e38:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010e3c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010e40:	43d2      	mvns	r2, r2
 8010e42:	b2d2      	uxtb	r2, r2
 8010e44:	fb16 f609 	smulbb	r6, r6, r9
 8010e48:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010e4c:	fb07 6702 	mla	r7, r7, r2, r6
 8010e50:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010e54:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010e58:	b2ed      	uxtb	r5, r5
 8010e5a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010e5e:	fa5f fe8e 	uxtb.w	lr, lr
 8010e62:	fb15 f509 	smulbb	r5, r5, r9
 8010e66:	fb0e 5502 	mla	r5, lr, r2, r5
 8010e6a:	b2bf      	uxth	r7, r7
 8010e6c:	fb1a fa09 	smulbb	sl, sl, r9
 8010e70:	b2ad      	uxth	r5, r5
 8010e72:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010e76:	fb06 a602 	mla	r6, r6, r2, sl
 8010e7a:	1c7a      	adds	r2, r7, #1
 8010e7c:	f105 0a01 	add.w	sl, r5, #1
 8010e80:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010e84:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010e88:	b2b6      	uxth	r6, r6
 8010e8a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010e8e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010e92:	ea47 070a 	orr.w	r7, r7, sl
 8010e96:	f106 0a01 	add.w	sl, r6, #1
 8010e9a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010e9e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010ea2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010ea6:	9a02      	ldr	r2, [sp, #8]
 8010ea8:	ea47 070a 	orr.w	r7, r7, sl
 8010eac:	52a7      	strh	r7, [r4, r2]
 8010eae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010eb0:	4410      	add	r0, r2
 8010eb2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010eb4:	f10c 3cff 	add.w	ip, ip, #4294967295
 8010eb8:	4411      	add	r1, r2
 8010eba:	e75b      	b.n	8010d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8010ebc:	f04f 0e00 	mov.w	lr, #0
 8010ec0:	eba3 020e 	sub.w	r2, r3, lr
 8010ec4:	2a00      	cmp	r2, #0
 8010ec6:	f77f af59 	ble.w	8010d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8010eca:	1405      	asrs	r5, r0, #16
 8010ecc:	140a      	asrs	r2, r1, #16
 8010ece:	fb08 5202 	mla	r2, r8, r2, r5
 8010ed2:	9d03      	ldr	r5, [sp, #12]
 8010ed4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010ed8:	0e2e      	lsrs	r6, r5, #24
 8010eda:	d044      	beq.n	8010f66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28e>
 8010edc:	9a05      	ldr	r2, [sp, #20]
 8010ede:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8010ee2:	4356      	muls	r6, r2
 8010ee4:	1c72      	adds	r2, r6, #1
 8010ee6:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010eea:	1212      	asrs	r2, r2, #8
 8010eec:	fa1f f982 	uxth.w	r9, r2
 8010ef0:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010ef4:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010ef8:	43d2      	mvns	r2, r2
 8010efa:	b2d2      	uxtb	r2, r2
 8010efc:	fb16 f609 	smulbb	r6, r6, r9
 8010f00:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010f04:	fb07 6702 	mla	r7, r7, r2, r6
 8010f08:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010f0c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010f10:	b2ed      	uxtb	r5, r5
 8010f12:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010f16:	fa5f fc8c 	uxtb.w	ip, ip
 8010f1a:	fb15 f509 	smulbb	r5, r5, r9
 8010f1e:	fb0c 5502 	mla	r5, ip, r2, r5
 8010f22:	b2bf      	uxth	r7, r7
 8010f24:	fb1a fa09 	smulbb	sl, sl, r9
 8010f28:	b2ad      	uxth	r5, r5
 8010f2a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010f2e:	fb06 a602 	mla	r6, r6, r2, sl
 8010f32:	1c7a      	adds	r2, r7, #1
 8010f34:	f105 0a01 	add.w	sl, r5, #1
 8010f38:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010f3c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010f40:	b2b6      	uxth	r6, r6
 8010f42:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010f46:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010f4a:	ea47 070a 	orr.w	r7, r7, sl
 8010f4e:	f106 0a01 	add.w	sl, r6, #1
 8010f52:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010f56:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010f5a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010f5e:	ea47 070a 	orr.w	r7, r7, sl
 8010f62:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8010f66:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010f68:	4410      	add	r0, r2
 8010f6a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010f6c:	f10e 0e01 	add.w	lr, lr, #1
 8010f70:	4411      	add	r1, r2
 8010f72:	e7a5      	b.n	8010ec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8010f74:	b007      	add	sp, #28
 8010f76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08010f7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010f7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f80:	b087      	sub	sp, #28
 8010f82:	468b      	mov	fp, r1
 8010f84:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010f86:	9205      	str	r2, [sp, #20]
 8010f88:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010f8c:	9201      	str	r2, [sp, #4]
 8010f8e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010f92:	6861      	ldr	r1, [r4, #4]
 8010f94:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 8010f98:	fb01 2000 	mla	r0, r1, r0, r2
 8010f9c:	6822      	ldr	r2, [r4, #0]
 8010f9e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010fa2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8010fa4:	6812      	ldr	r2, [r2, #0]
 8010fa6:	9203      	str	r2, [sp, #12]
 8010fa8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010fac:	f1bb 0f00 	cmp.w	fp, #0
 8010fb0:	dc03      	bgt.n	8010fba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 8010fb2:	9a05      	ldr	r2, [sp, #20]
 8010fb4:	2a00      	cmp	r2, #0
 8010fb6:	f340 814b 	ble.w	8011250 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 8010fba:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010fbc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010fc0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010fc2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010fc6:	2b00      	cmp	r3, #0
 8010fc8:	dd0f      	ble.n	8010fea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010fca:	140c      	asrs	r4, r1, #16
 8010fcc:	d406      	bmi.n	8010fdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010fce:	454c      	cmp	r4, r9
 8010fd0:	da04      	bge.n	8010fdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010fd2:	1414      	asrs	r4, r2, #16
 8010fd4:	d402      	bmi.n	8010fdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010fd6:	9d01      	ldr	r5, [sp, #4]
 8010fd8:	42ac      	cmp	r4, r5
 8010fda:	db07      	blt.n	8010fec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8010fdc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010fde:	4421      	add	r1, r4
 8010fe0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010fe2:	3b01      	subs	r3, #1
 8010fe4:	4422      	add	r2, r4
 8010fe6:	3002      	adds	r0, #2
 8010fe8:	e7ed      	b.n	8010fc6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 8010fea:	d018      	beq.n	801101e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa2>
 8010fec:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010fee:	1e5c      	subs	r4, r3, #1
 8010ff0:	fb05 1504 	mla	r5, r5, r4, r1
 8010ff4:	142d      	asrs	r5, r5, #16
 8010ff6:	d40a      	bmi.n	801100e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010ff8:	454d      	cmp	r5, r9
 8010ffa:	da08      	bge.n	801100e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010ffc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010ffe:	fb05 2404 	mla	r4, r5, r4, r2
 8011002:	1424      	asrs	r4, r4, #16
 8011004:	d403      	bmi.n	801100e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8011006:	9d01      	ldr	r5, [sp, #4]
 8011008:	42ac      	cmp	r4, r5
 801100a:	f2c0 80bb 	blt.w	8011184 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x208>
 801100e:	2700      	movs	r7, #0
 8011010:	19dc      	adds	r4, r3, r7
 8011012:	2c00      	cmp	r4, #0
 8011014:	dc3e      	bgt.n	8011094 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x118>
 8011016:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801101a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801101e:	f1bb 0f00 	cmp.w	fp, #0
 8011022:	f340 8115 	ble.w	8011250 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 8011026:	ee30 0a04 	vadd.f32	s0, s0, s8
 801102a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801102e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011032:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011034:	f1bb 0b01 	subs.w	fp, fp, #1
 8011038:	ee31 1a05 	vadd.f32	s2, s2, s10
 801103c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011040:	eeb0 6a62 	vmov.f32	s12, s5
 8011044:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011048:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801104c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011050:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011054:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011058:	eeb0 6a43 	vmov.f32	s12, s6
 801105c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011060:	ee12 2a90 	vmov	r2, s5
 8011064:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011068:	fb92 f3f3 	sdiv	r3, r2, r3
 801106c:	ee13 2a10 	vmov	r2, s6
 8011070:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011074:	9313      	str	r3, [sp, #76]	; 0x4c
 8011076:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011078:	fb92 f3f3 	sdiv	r3, r2, r3
 801107c:	9a05      	ldr	r2, [sp, #20]
 801107e:	9314      	str	r3, [sp, #80]	; 0x50
 8011080:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011084:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011086:	eeb0 3a67 	vmov.f32	s6, s15
 801108a:	bf08      	it	eq
 801108c:	4613      	moveq	r3, r2
 801108e:	eef0 2a47 	vmov.f32	s5, s14
 8011092:	e78b      	b.n	8010fac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30>
 8011094:	140d      	asrs	r5, r1, #16
 8011096:	d45c      	bmi.n	8011152 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011098:	454d      	cmp	r5, r9
 801109a:	da5a      	bge.n	8011152 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801109c:	1414      	asrs	r4, r2, #16
 801109e:	d458      	bmi.n	8011152 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80110a0:	9e01      	ldr	r6, [sp, #4]
 80110a2:	42b4      	cmp	r4, r6
 80110a4:	da55      	bge.n	8011152 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80110a6:	fb09 5404 	mla	r4, r9, r4, r5
 80110aa:	9d03      	ldr	r5, [sp, #12]
 80110ac:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 80110b0:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 80110b4:	d04d      	beq.n	8011152 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80110b6:	0a26      	lsrs	r6, r4, #8
 80110b8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80110bc:	fa5f f58e 	uxtb.w	r5, lr
 80110c0:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 80110c4:	9604      	str	r6, [sp, #16]
 80110c6:	d04a      	beq.n	801115e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 80110c8:	f06f 0601 	mvn.w	r6, #1
 80110cc:	437e      	muls	r6, r7
 80110ce:	fa1f fa85 	uxth.w	sl, r5
 80110d2:	f830 8006 	ldrh.w	r8, [r0, r6]
 80110d6:	9602      	str	r6, [sp, #8]
 80110d8:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80110dc:	43ed      	mvns	r5, r5
 80110de:	fa5f fc8c 	uxtb.w	ip, ip
 80110e2:	b2ed      	uxtb	r5, r5
 80110e4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80110e8:	fb1c fc0a 	smulbb	ip, ip, sl
 80110ec:	fb0e cc05 	mla	ip, lr, r5, ip
 80110f0:	b2e4      	uxtb	r4, r4
 80110f2:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 80110f6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80110fa:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80110fe:	fa5f f888 	uxtb.w	r8, r8
 8011102:	fb14 f40a 	smulbb	r4, r4, sl
 8011106:	fb08 4405 	mla	r4, r8, r5, r4
 801110a:	b2a4      	uxth	r4, r4
 801110c:	fa1f fc8c 	uxth.w	ip, ip
 8011110:	fb16 f60a 	smulbb	r6, r6, sl
 8011114:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8011118:	fb0e 6e05 	mla	lr, lr, r5, r6
 801111c:	1c66      	adds	r6, r4, #1
 801111e:	f10c 0501 	add.w	r5, ip, #1
 8011122:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011126:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801112a:	fa1f fe8e 	uxth.w	lr, lr
 801112e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011132:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011136:	ea4c 0c06 	orr.w	ip, ip, r6
 801113a:	f10e 0601 	add.w	r6, lr, #1
 801113e:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 8011142:	0976      	lsrs	r6, r6, #5
 8011144:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011148:	9c02      	ldr	r4, [sp, #8]
 801114a:	ea4c 0c06 	orr.w	ip, ip, r6
 801114e:	f820 c004 	strh.w	ip, [r0, r4]
 8011152:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011154:	4421      	add	r1, r4
 8011156:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011158:	3f01      	subs	r7, #1
 801115a:	4422      	add	r2, r4
 801115c:	e758      	b.n	8011010 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801115e:	4e3e      	ldr	r6, [pc, #248]	; (8011258 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011160:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011164:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 8011168:	ea4c 0c04 	orr.w	ip, ip, r4
 801116c:	9c04      	ldr	r4, [sp, #16]
 801116e:	f06f 0501 	mvn.w	r5, #1
 8011172:	00e6      	lsls	r6, r4, #3
 8011174:	437d      	muls	r5, r7
 8011176:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 801117a:	ea4c 0c04 	orr.w	ip, ip, r4
 801117e:	f820 c005 	strh.w	ip, [r0, r5]
 8011182:	e7e6      	b.n	8011152 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011184:	f04f 0800 	mov.w	r8, #0
 8011188:	eba3 0408 	sub.w	r4, r3, r8
 801118c:	2c00      	cmp	r4, #0
 801118e:	f77f af42 	ble.w	8011016 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8011192:	140d      	asrs	r5, r1, #16
 8011194:	1414      	asrs	r4, r2, #16
 8011196:	fb09 5404 	mla	r4, r9, r4, r5
 801119a:	9d03      	ldr	r5, [sp, #12]
 801119c:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 80111a0:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 80111a4:	d042      	beq.n	801122c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80111a6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80111aa:	fa5f f58c 	uxtb.w	r5, ip
 80111ae:	ea4f 4714 	mov.w	r7, r4, lsr #16
 80111b2:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80111b6:	d040      	beq.n	801123a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 80111b8:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 80111bc:	fa1f fa85 	uxth.w	sl, r5
 80111c0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80111c4:	43ed      	mvns	r5, r5
 80111c6:	b2ff      	uxtb	r7, r7
 80111c8:	b2ed      	uxtb	r5, r5
 80111ca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80111ce:	fb17 f70a 	smulbb	r7, r7, sl
 80111d2:	fb0c 7705 	mla	r7, ip, r5, r7
 80111d6:	b2e4      	uxtb	r4, r4
 80111d8:	ea4f 0cee 	mov.w	ip, lr, asr #3
 80111dc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80111e0:	fa5f fe8e 	uxtb.w	lr, lr
 80111e4:	fb14 f40a 	smulbb	r4, r4, sl
 80111e8:	fb0e 4405 	mla	r4, lr, r5, r4
 80111ec:	b2f6      	uxtb	r6, r6
 80111ee:	b2bf      	uxth	r7, r7
 80111f0:	fb16 f60a 	smulbb	r6, r6, sl
 80111f4:	b2a4      	uxth	r4, r4
 80111f6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80111fa:	fb0c 6c05 	mla	ip, ip, r5, r6
 80111fe:	1c7d      	adds	r5, r7, #1
 8011200:	1c66      	adds	r6, r4, #1
 8011202:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8011206:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801120a:	fa1f fc8c 	uxth.w	ip, ip
 801120e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011212:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011216:	4337      	orrs	r7, r6
 8011218:	f10c 0601 	add.w	r6, ip, #1
 801121c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011220:	0976      	lsrs	r6, r6, #5
 8011222:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011226:	4337      	orrs	r7, r6
 8011228:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 801122c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801122e:	4421      	add	r1, r4
 8011230:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011232:	f108 0801 	add.w	r8, r8, #1
 8011236:	4422      	add	r2, r4
 8011238:	e7a6      	b.n	8011188 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20c>
 801123a:	4d07      	ldr	r5, [pc, #28]	; (8011258 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 801123c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011240:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 8011244:	00f6      	lsls	r6, r6, #3
 8011246:	4327      	orrs	r7, r4
 8011248:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 801124c:	4327      	orrs	r7, r4
 801124e:	e7eb      	b.n	8011228 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ac>
 8011250:	b007      	add	sp, #28
 8011252:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011256:	bf00      	nop
 8011258:	fffff800 	.word	0xfffff800

0801125c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801125c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011260:	b089      	sub	sp, #36	; 0x24
 8011262:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011266:	9206      	str	r2, [sp, #24]
 8011268:	f9bd 2068 	ldrsh.w	r2, [sp, #104]	; 0x68
 801126c:	9202      	str	r2, [sp, #8]
 801126e:	f9bd 206c 	ldrsh.w	r2, [sp, #108]	; 0x6c
 8011272:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8011274:	9203      	str	r2, [sp, #12]
 8011276:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801127a:	9207      	str	r2, [sp, #28]
 801127c:	e9dd 2518 	ldrd	r2, r5, [sp, #96]	; 0x60
 8011280:	6860      	ldr	r0, [r4, #4]
 8011282:	9101      	str	r1, [sp, #4]
 8011284:	fb00 2505 	mla	r5, r0, r5, r2
 8011288:	6822      	ldr	r2, [r4, #0]
 801128a:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801128e:	9a02      	ldr	r2, [sp, #8]
 8011290:	3201      	adds	r2, #1
 8011292:	f022 0201 	bic.w	r2, r2, #1
 8011296:	9204      	str	r2, [sp, #16]
 8011298:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801129a:	6812      	ldr	r2, [r2, #0]
 801129c:	9205      	str	r2, [sp, #20]
 801129e:	9a01      	ldr	r2, [sp, #4]
 80112a0:	2a00      	cmp	r2, #0
 80112a2:	dc03      	bgt.n	80112ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 80112a4:	9a06      	ldr	r2, [sp, #24]
 80112a6:	2a00      	cmp	r2, #0
 80112a8:	f340 8153 	ble.w	8011552 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 80112ac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80112ae:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 80112b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80112b4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80112b8:	2b00      	cmp	r3, #0
 80112ba:	dd10      	ble.n	80112de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 80112bc:	1422      	asrs	r2, r4, #16
 80112be:	d407      	bmi.n	80112d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80112c0:	9e02      	ldr	r6, [sp, #8]
 80112c2:	4296      	cmp	r6, r2
 80112c4:	dd04      	ble.n	80112d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80112c6:	1402      	asrs	r2, r0, #16
 80112c8:	d402      	bmi.n	80112d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80112ca:	9e03      	ldr	r6, [sp, #12]
 80112cc:	42b2      	cmp	r2, r6
 80112ce:	db07      	blt.n	80112e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 80112d0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80112d2:	4414      	add	r4, r2
 80112d4:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80112d6:	3b01      	subs	r3, #1
 80112d8:	4410      	add	r0, r2
 80112da:	3502      	adds	r5, #2
 80112dc:	e7ec      	b.n	80112b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5c>
 80112de:	d00f      	beq.n	8011300 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 80112e0:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80112e2:	1e5a      	subs	r2, r3, #1
 80112e4:	fb06 4602 	mla	r6, r6, r2, r4
 80112e8:	1436      	asrs	r6, r6, #16
 80112ea:	d545      	bpl.n	8011378 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 80112ec:	469a      	mov	sl, r3
 80112ee:	46a9      	mov	r9, r5
 80112f0:	f1ba 0f00 	cmp.w	sl, #0
 80112f4:	f300 80ba 	bgt.w	801146c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x210>
 80112f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80112fc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011300:	9b01      	ldr	r3, [sp, #4]
 8011302:	2b00      	cmp	r3, #0
 8011304:	f340 8125 	ble.w	8011552 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8011308:	ee30 0a04 	vadd.f32	s0, s0, s8
 801130c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011310:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011314:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011316:	ee31 1a05 	vadd.f32	s2, s2, s10
 801131a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801131e:	eeb0 6a62 	vmov.f32	s12, s5
 8011322:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011326:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801132a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801132e:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 8011332:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011336:	eeb0 6a43 	vmov.f32	s12, s6
 801133a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801133e:	ee12 2a90 	vmov	r2, s5
 8011342:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011346:	fb92 f3f3 	sdiv	r3, r2, r3
 801134a:	ee13 2a10 	vmov	r2, s6
 801134e:	9315      	str	r3, [sp, #84]	; 0x54
 8011350:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011352:	fb92 f3f3 	sdiv	r3, r2, r3
 8011356:	9316      	str	r3, [sp, #88]	; 0x58
 8011358:	9b01      	ldr	r3, [sp, #4]
 801135a:	9a06      	ldr	r2, [sp, #24]
 801135c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011360:	3b01      	subs	r3, #1
 8011362:	9301      	str	r3, [sp, #4]
 8011364:	ed8d 6a14 	vstr	s12, [sp, #80]	; 0x50
 8011368:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801136a:	eeb0 3a67 	vmov.f32	s6, s15
 801136e:	bf08      	it	eq
 8011370:	4613      	moveq	r3, r2
 8011372:	eef0 2a47 	vmov.f32	s5, s14
 8011376:	e792      	b.n	801129e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 8011378:	9f02      	ldr	r7, [sp, #8]
 801137a:	42b7      	cmp	r7, r6
 801137c:	ddb6      	ble.n	80112ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 801137e:	9e16      	ldr	r6, [sp, #88]	; 0x58
 8011380:	fb06 0202 	mla	r2, r6, r2, r0
 8011384:	1412      	asrs	r2, r2, #16
 8011386:	d4b1      	bmi.n	80112ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 8011388:	9e03      	ldr	r6, [sp, #12]
 801138a:	42b2      	cmp	r2, r6
 801138c:	daae      	bge.n	80112ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 801138e:	f04f 0800 	mov.w	r8, #0
 8011392:	eba3 0208 	sub.w	r2, r3, r8
 8011396:	2a00      	cmp	r2, #0
 8011398:	ddae      	ble.n	80112f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801139a:	9904      	ldr	r1, [sp, #16]
 801139c:	1422      	asrs	r2, r4, #16
 801139e:	1406      	asrs	r6, r0, #16
 80113a0:	fb01 2606 	mla	r6, r1, r6, r2
 80113a4:	0872      	lsrs	r2, r6, #1
 80113a6:	9905      	ldr	r1, [sp, #20]
 80113a8:	5c8a      	ldrb	r2, [r1, r2]
 80113aa:	07f1      	lsls	r1, r6, #31
 80113ac:	bf54      	ite	pl
 80113ae:	f002 020f 	andpl.w	r2, r2, #15
 80113b2:	1112      	asrmi	r2, r2, #4
 80113b4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80113b8:	b2d2      	uxtb	r2, r2
 80113ba:	2a00      	cmp	r2, #0
 80113bc:	d04f      	beq.n	801145e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 80113be:	4966      	ldr	r1, [pc, #408]	; (8011558 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 80113c0:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80113c4:	680e      	ldr	r6, [r1, #0]
 80113c6:	9907      	ldr	r1, [sp, #28]
 80113c8:	434a      	muls	r2, r1
 80113ca:	1c57      	adds	r7, r2, #1
 80113cc:	eb07 2222 	add.w	r2, r7, r2, asr #8
 80113d0:	1212      	asrs	r2, r2, #8
 80113d2:	ea4f 2c26 	mov.w	ip, r6, asr #8
 80113d6:	fa1f fa82 	uxth.w	sl, r2
 80113da:	ea4f 272e 	mov.w	r7, lr, asr #8
 80113de:	43d2      	mvns	r2, r2
 80113e0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80113e4:	b2d2      	uxtb	r2, r2
 80113e6:	fb1c fc0a 	smulbb	ip, ip, sl
 80113ea:	f3c6 09cc 	ubfx	r9, r6, #3, #13
 80113ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80113f2:	495a      	ldr	r1, [pc, #360]	; (801155c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>)
 80113f4:	fb07 c702 	mla	r7, r7, r2, ip
 80113f8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80113fc:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8011400:	fb19 f90a 	smulbb	r9, r9, sl
 8011404:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011408:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 801140c:	fb0c 9c02 	mla	ip, ip, r2, r9
 8011410:	b2f6      	uxtb	r6, r6
 8011412:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011416:	fa1f fc8c 	uxth.w	ip, ip
 801141a:	fa5f fe8e 	uxtb.w	lr, lr
 801141e:	fb16 f60a 	smulbb	r6, r6, sl
 8011422:	b2bf      	uxth	r7, r7
 8011424:	fb0e 6602 	mla	r6, lr, r2, r6
 8011428:	f10c 0901 	add.w	r9, ip, #1
 801142c:	b2b6      	uxth	r6, r6
 801142e:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011432:	f107 0b01 	add.w	fp, r7, #1
 8011436:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801143a:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 801143e:	f106 0e01 	add.w	lr, r6, #1
 8011442:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8011446:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801144a:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 801144e:	ea4c 0c07 	orr.w	ip, ip, r7
 8011452:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8011456:	ea4c 0c0e 	orr.w	ip, ip, lr
 801145a:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801145e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8011460:	4414      	add	r4, r2
 8011462:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8011464:	f108 0801 	add.w	r8, r8, #1
 8011468:	4410      	add	r0, r2
 801146a:	e792      	b.n	8011392 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x136>
 801146c:	1422      	asrs	r2, r4, #16
 801146e:	d467      	bmi.n	8011540 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8011470:	9e02      	ldr	r6, [sp, #8]
 8011472:	4296      	cmp	r6, r2
 8011474:	dd64      	ble.n	8011540 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8011476:	1406      	asrs	r6, r0, #16
 8011478:	d462      	bmi.n	8011540 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 801147a:	9f03      	ldr	r7, [sp, #12]
 801147c:	42be      	cmp	r6, r7
 801147e:	da5f      	bge.n	8011540 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8011480:	9f04      	ldr	r7, [sp, #16]
 8011482:	fb06 2607 	mla	r6, r6, r7, r2
 8011486:	0872      	lsrs	r2, r6, #1
 8011488:	9f05      	ldr	r7, [sp, #20]
 801148a:	5cba      	ldrb	r2, [r7, r2]
 801148c:	07f6      	lsls	r6, r6, #31
 801148e:	bf54      	ite	pl
 8011490:	f002 020f 	andpl.w	r2, r2, #15
 8011494:	1112      	asrmi	r2, r2, #4
 8011496:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801149a:	b2d2      	uxtb	r2, r2
 801149c:	2a00      	cmp	r2, #0
 801149e:	d04f      	beq.n	8011540 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 80114a0:	9f07      	ldr	r7, [sp, #28]
 80114a2:	4e2d      	ldr	r6, [pc, #180]	; (8011558 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 80114a4:	f8b9 e000 	ldrh.w	lr, [r9]
 80114a8:	6836      	ldr	r6, [r6, #0]
 80114aa:	492c      	ldr	r1, [pc, #176]	; (801155c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>)
 80114ac:	437a      	muls	r2, r7
 80114ae:	1c57      	adds	r7, r2, #1
 80114b0:	eb07 2222 	add.w	r2, r7, r2, asr #8
 80114b4:	1212      	asrs	r2, r2, #8
 80114b6:	ea4f 2c26 	mov.w	ip, r6, asr #8
 80114ba:	fa1f fb82 	uxth.w	fp, r2
 80114be:	ea4f 272e 	mov.w	r7, lr, asr #8
 80114c2:	43d2      	mvns	r2, r2
 80114c4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80114c8:	b2d2      	uxtb	r2, r2
 80114ca:	fb1c fc0b 	smulbb	ip, ip, fp
 80114ce:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 80114d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80114d6:	fb07 c702 	mla	r7, r7, r2, ip
 80114da:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80114de:	ea4f 0cee 	mov.w	ip, lr, asr #3
 80114e2:	fb18 f80b 	smulbb	r8, r8, fp
 80114e6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80114ea:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 80114ee:	fb0c 8c02 	mla	ip, ip, r2, r8
 80114f2:	b2f6      	uxtb	r6, r6
 80114f4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80114f8:	fa1f fc8c 	uxth.w	ip, ip
 80114fc:	fa5f fe8e 	uxtb.w	lr, lr
 8011500:	fb16 f60b 	smulbb	r6, r6, fp
 8011504:	b2bf      	uxth	r7, r7
 8011506:	fb0e 6602 	mla	r6, lr, r2, r6
 801150a:	f10c 0801 	add.w	r8, ip, #1
 801150e:	b2b6      	uxth	r6, r6
 8011510:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 8011514:	f107 0801 	add.w	r8, r7, #1
 8011518:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801151c:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8011520:	f106 0e01 	add.w	lr, r6, #1
 8011524:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8011528:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801152c:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8011530:	ea4c 0c07 	orr.w	ip, ip, r7
 8011534:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8011538:	ea4c 0c0e 	orr.w	ip, ip, lr
 801153c:	f8a9 c000 	strh.w	ip, [r9]
 8011540:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8011542:	4414      	add	r4, r2
 8011544:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8011546:	f109 0902 	add.w	r9, r9, #2
 801154a:	4410      	add	r0, r2
 801154c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8011550:	e6ce      	b.n	80112f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8011552:	b009      	add	sp, #36	; 0x24
 8011554:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011558:	20026908 	.word	0x20026908
 801155c:	0007fff8 	.word	0x0007fff8

08011560 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011564:	b087      	sub	sp, #28
 8011566:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801156a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801156c:	9205      	str	r2, [sp, #20]
 801156e:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8011572:	9201      	str	r2, [sp, #4]
 8011574:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8011578:	6860      	ldr	r0, [r4, #4]
 801157a:	f9bd b060 	ldrsh.w	fp, [sp, #96]	; 0x60
 801157e:	9100      	str	r1, [sp, #0]
 8011580:	fb00 2505 	mla	r5, r0, r5, r2
 8011584:	6822      	ldr	r2, [r4, #0]
 8011586:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801158a:	f10b 0201 	add.w	r2, fp, #1
 801158e:	f022 0201 	bic.w	r2, r2, #1
 8011592:	9203      	str	r2, [sp, #12]
 8011594:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8011596:	6812      	ldr	r2, [r2, #0]
 8011598:	9204      	str	r2, [sp, #16]
 801159a:	9a00      	ldr	r2, [sp, #0]
 801159c:	2a00      	cmp	r2, #0
 801159e:	dc03      	bgt.n	80115a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 80115a0:	9a05      	ldr	r2, [sp, #20]
 80115a2:	2a00      	cmp	r2, #0
 80115a4:	f340 815c 	ble.w	8011860 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>
 80115a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80115aa:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 80115ae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80115b0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80115b4:	2b00      	cmp	r3, #0
 80115b6:	dd0f      	ble.n	80115d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80115b8:	1422      	asrs	r2, r4, #16
 80115ba:	d406      	bmi.n	80115ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80115bc:	4593      	cmp	fp, r2
 80115be:	dd04      	ble.n	80115ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80115c0:	1402      	asrs	r2, r0, #16
 80115c2:	d402      	bmi.n	80115ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80115c4:	9e01      	ldr	r6, [sp, #4]
 80115c6:	42b2      	cmp	r2, r6
 80115c8:	db07      	blt.n	80115da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 80115ca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80115cc:	4414      	add	r4, r2
 80115ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80115d0:	3b01      	subs	r3, #1
 80115d2:	4410      	add	r0, r2
 80115d4:	3502      	adds	r5, #2
 80115d6:	e7ed      	b.n	80115b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 80115d8:	d018      	beq.n	801160c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 80115da:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80115dc:	1e5a      	subs	r2, r3, #1
 80115de:	fb06 4602 	mla	r6, r6, r2, r4
 80115e2:	1436      	asrs	r6, r6, #16
 80115e4:	d40a      	bmi.n	80115fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80115e6:	45b3      	cmp	fp, r6
 80115e8:	dd08      	ble.n	80115fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80115ea:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80115ec:	fb06 0202 	mla	r2, r6, r2, r0
 80115f0:	1412      	asrs	r2, r2, #16
 80115f2:	d403      	bmi.n	80115fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80115f4:	9e01      	ldr	r6, [sp, #4]
 80115f6:	42b2      	cmp	r2, r6
 80115f8:	f2c0 80bf 	blt.w	801177a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21a>
 80115fc:	2700      	movs	r7, #0
 80115fe:	19da      	adds	r2, r3, r7
 8011600:	2a00      	cmp	r2, #0
 8011602:	dc3f      	bgt.n	8011684 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x124>
 8011604:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011608:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801160c:	9b00      	ldr	r3, [sp, #0]
 801160e:	2b00      	cmp	r3, #0
 8011610:	f340 8126 	ble.w	8011860 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>
 8011614:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011618:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801161c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011620:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011622:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011626:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801162a:	eeb0 6a62 	vmov.f32	s12, s5
 801162e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011632:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011636:	ee77 2a62 	vsub.f32	s5, s14, s5
 801163a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801163e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011642:	eeb0 6a43 	vmov.f32	s12, s6
 8011646:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801164a:	ee12 2a90 	vmov	r2, s5
 801164e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011652:	fb92 f3f3 	sdiv	r3, r2, r3
 8011656:	ee13 2a10 	vmov	r2, s6
 801165a:	9313      	str	r3, [sp, #76]	; 0x4c
 801165c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801165e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011662:	9314      	str	r3, [sp, #80]	; 0x50
 8011664:	9b00      	ldr	r3, [sp, #0]
 8011666:	9a05      	ldr	r2, [sp, #20]
 8011668:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801166c:	3b01      	subs	r3, #1
 801166e:	9300      	str	r3, [sp, #0]
 8011670:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011674:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011676:	eeb0 3a67 	vmov.f32	s6, s15
 801167a:	bf08      	it	eq
 801167c:	4613      	moveq	r3, r2
 801167e:	eef0 2a47 	vmov.f32	s5, s14
 8011682:	e78a      	b.n	801159a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8011684:	1422      	asrs	r2, r4, #16
 8011686:	d466      	bmi.n	8011756 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011688:	4593      	cmp	fp, r2
 801168a:	dd64      	ble.n	8011756 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801168c:	1406      	asrs	r6, r0, #16
 801168e:	d462      	bmi.n	8011756 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011690:	9901      	ldr	r1, [sp, #4]
 8011692:	428e      	cmp	r6, r1
 8011694:	da5f      	bge.n	8011756 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011696:	9903      	ldr	r1, [sp, #12]
 8011698:	fb06 2601 	mla	r6, r6, r1, r2
 801169c:	0872      	lsrs	r2, r6, #1
 801169e:	9904      	ldr	r1, [sp, #16]
 80116a0:	5c8a      	ldrb	r2, [r1, r2]
 80116a2:	07f6      	lsls	r6, r6, #31
 80116a4:	bf54      	ite	pl
 80116a6:	f002 020f 	andpl.w	r2, r2, #15
 80116aa:	1112      	asrmi	r2, r2, #4
 80116ac:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80116b0:	b2d2      	uxtb	r2, r2
 80116b2:	2a00      	cmp	r2, #0
 80116b4:	d04f      	beq.n	8011756 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80116b6:	496c      	ldr	r1, [pc, #432]	; (8011868 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x308>)
 80116b8:	680e      	ldr	r6, [r1, #0]
 80116ba:	496c      	ldr	r1, [pc, #432]	; (801186c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30c>)
 80116bc:	ea4f 2926 	mov.w	r9, r6, asr #8
 80116c0:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 80116c4:	2aff      	cmp	r2, #255	; 0xff
 80116c6:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 80116ca:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80116ce:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80116d2:	b2f6      	uxtb	r6, r6
 80116d4:	d045      	beq.n	8011762 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 80116d6:	f06f 0101 	mvn.w	r1, #1
 80116da:	4379      	muls	r1, r7
 80116dc:	fa1f fa82 	uxth.w	sl, r2
 80116e0:	f835 e001 	ldrh.w	lr, [r5, r1]
 80116e4:	9102      	str	r1, [sp, #8]
 80116e6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80116ea:	43d2      	mvns	r2, r2
 80116ec:	b2d2      	uxtb	r2, r2
 80116ee:	fb19 f90a 	smulbb	r9, r9, sl
 80116f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80116f6:	fb0c 9c02 	mla	ip, ip, r2, r9
 80116fa:	ea4f 09ee 	mov.w	r9, lr, asr #3
 80116fe:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011702:	fb18 f80a 	smulbb	r8, r8, sl
 8011706:	fb09 8802 	mla	r8, r9, r2, r8
 801170a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801170e:	fa1f f888 	uxth.w	r8, r8
 8011712:	fa5f fe8e 	uxtb.w	lr, lr
 8011716:	fb16 f60a 	smulbb	r6, r6, sl
 801171a:	fa1f fc8c 	uxth.w	ip, ip
 801171e:	fb0e 6602 	mla	r6, lr, r2, r6
 8011722:	f108 0901 	add.w	r9, r8, #1
 8011726:	b2b6      	uxth	r6, r6
 8011728:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 801172c:	f10c 0901 	add.w	r9, ip, #1
 8011730:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011734:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011738:	1c72      	adds	r2, r6, #1
 801173a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801173e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011742:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8011746:	ea48 080c 	orr.w	r8, r8, ip
 801174a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801174e:	ea48 0806 	orr.w	r8, r8, r6
 8011752:	f825 8001 	strh.w	r8, [r5, r1]
 8011756:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011758:	4414      	add	r4, r2
 801175a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801175c:	3f01      	subs	r7, #1
 801175e:	4410      	add	r0, r2
 8011760:	e74d      	b.n	80115fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8011762:	f06f 0201 	mvn.w	r2, #1
 8011766:	08f6      	lsrs	r6, r6, #3
 8011768:	fb02 fe07 	mul.w	lr, r2, r7
 801176c:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 8011770:	ea46 06c8 	orr.w	r6, r6, r8, lsl #3
 8011774:	f825 600e 	strh.w	r6, [r5, lr]
 8011778:	e7ed      	b.n	8011756 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801177a:	f04f 0e00 	mov.w	lr, #0
 801177e:	eba3 020e 	sub.w	r2, r3, lr
 8011782:	2a00      	cmp	r2, #0
 8011784:	f77f af3e 	ble.w	8011604 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8011788:	9903      	ldr	r1, [sp, #12]
 801178a:	1422      	asrs	r2, r4, #16
 801178c:	1406      	asrs	r6, r0, #16
 801178e:	fb01 2606 	mla	r6, r1, r6, r2
 8011792:	0872      	lsrs	r2, r6, #1
 8011794:	9904      	ldr	r1, [sp, #16]
 8011796:	5c8a      	ldrb	r2, [r1, r2]
 8011798:	07f1      	lsls	r1, r6, #31
 801179a:	bf54      	ite	pl
 801179c:	f002 020f 	andpl.w	r2, r2, #15
 80117a0:	1112      	asrmi	r2, r2, #4
 80117a2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80117a6:	b2d2      	uxtb	r2, r2
 80117a8:	2a00      	cmp	r2, #0
 80117aa:	d04a      	beq.n	8011842 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e2>
 80117ac:	492e      	ldr	r1, [pc, #184]	; (8011868 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x308>)
 80117ae:	680e      	ldr	r6, [r1, #0]
 80117b0:	492e      	ldr	r1, [pc, #184]	; (801186c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30c>)
 80117b2:	ea4f 2926 	mov.w	r9, r6, asr #8
 80117b6:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 80117ba:	2aff      	cmp	r2, #255	; 0xff
 80117bc:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 80117c0:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80117c4:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80117c8:	b2f6      	uxtb	r6, r6
 80117ca:	d041      	beq.n	8011850 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f0>
 80117cc:	f835 c01e 	ldrh.w	ip, [r5, lr, lsl #1]
 80117d0:	fa1f fa82 	uxth.w	sl, r2
 80117d4:	ea4f 272c 	mov.w	r7, ip, asr #8
 80117d8:	43d2      	mvns	r2, r2
 80117da:	b2d2      	uxtb	r2, r2
 80117dc:	fb19 f90a 	smulbb	r9, r9, sl
 80117e0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80117e4:	fb07 9702 	mla	r7, r7, r2, r9
 80117e8:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80117ec:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80117f0:	fb18 f80a 	smulbb	r8, r8, sl
 80117f4:	fb09 8802 	mla	r8, r9, r2, r8
 80117f8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80117fc:	fa1f f888 	uxth.w	r8, r8
 8011800:	fa5f fc8c 	uxtb.w	ip, ip
 8011804:	fb16 f60a 	smulbb	r6, r6, sl
 8011808:	b2bf      	uxth	r7, r7
 801180a:	fb0c 6602 	mla	r6, ip, r2, r6
 801180e:	f108 0901 	add.w	r9, r8, #1
 8011812:	b2b6      	uxth	r6, r6
 8011814:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 8011818:	f107 0901 	add.w	r9, r7, #1
 801181c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011820:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8011824:	1c72      	adds	r2, r6, #1
 8011826:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801182a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801182e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8011832:	ea48 0807 	orr.w	r8, r8, r7
 8011836:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801183a:	ea48 0806 	orr.w	r8, r8, r6
 801183e:	f825 801e 	strh.w	r8, [r5, lr, lsl #1]
 8011842:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011844:	4414      	add	r4, r2
 8011846:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011848:	f10e 0e01 	add.w	lr, lr, #1
 801184c:	4410      	add	r0, r2
 801184e:	e796      	b.n	801177e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21e>
 8011850:	08f6      	lsrs	r6, r6, #3
 8011852:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 8011856:	ea46 06c8 	orr.w	r6, r6, r8, lsl #3
 801185a:	f825 601e 	strh.w	r6, [r5, lr, lsl #1]
 801185e:	e7f0      	b.n	8011842 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e2>
 8011860:	b007      	add	sp, #28
 8011862:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011866:	bf00      	nop
 8011868:	20026908 	.word	0x20026908
 801186c:	0007fff8 	.word	0x0007fff8

08011870 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8011870:	4770      	bx	lr

08011872 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8011872:	4770      	bx	lr

08011874 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8011874:	4770      	bx	lr

08011876 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8011876:	4770      	bx	lr

08011878 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8011878:	4770      	bx	lr

0801187a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801187a:	4770      	bx	lr

0801187c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801187c:	4770      	bx	lr

0801187e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801187e:	4770      	bx	lr

08011880 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8011880:	4770      	bx	lr

08011882 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8011882:	4770      	bx	lr

08011884 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8011884:	4770      	bx	lr

08011886 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8011886:	4770      	bx	lr

08011888 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8011888:	4770      	bx	lr

0801188a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801188a:	4770      	bx	lr

0801188c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801188c:	4770      	bx	lr

0801188e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801188e:	4770      	bx	lr

08011890 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8011890:	4770      	bx	lr

08011892 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8011892:	4770      	bx	lr

08011894 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8011894:	4770      	bx	lr

08011896 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8011896:	4770      	bx	lr

08011898 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8011898:	4770      	bx	lr

0801189a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801189a:	4770      	bx	lr

0801189c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801189c:	4770      	bx	lr

0801189e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801189e:	4770      	bx	lr

080118a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80118a0:	4770      	bx	lr

080118a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80118a2:	4770      	bx	lr

080118a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80118a4:	4770      	bx	lr

080118a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80118a6:	4770      	bx	lr

080118a8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80118a8:	b508      	push	{r3, lr}
 80118aa:	4b06      	ldr	r3, [pc, #24]	; (80118c4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 80118ac:	8818      	ldrh	r0, [r3, #0]
 80118ae:	b928      	cbnz	r0, 80118bc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 80118b0:	4b05      	ldr	r3, [pc, #20]	; (80118c8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 80118b2:	4a06      	ldr	r2, [pc, #24]	; (80118cc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 80118b4:	4806      	ldr	r0, [pc, #24]	; (80118d0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 80118b6:	21d7      	movs	r1, #215	; 0xd7
 80118b8:	f009 f894 	bl	801a9e4 <__assert_func>
 80118bc:	0040      	lsls	r0, r0, #1
 80118be:	b280      	uxth	r0, r0
 80118c0:	bd08      	pop	{r3, pc}
 80118c2:	bf00      	nop
 80118c4:	200268fa 	.word	0x200268fa
 80118c8:	0801e661 	.word	0x0801e661
 80118cc:	0801ebe7 	.word	0x0801ebe7
 80118d0:	0801e6a3 	.word	0x0801e6a3

080118d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80118d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80118d8:	b08d      	sub	sp, #52	; 0x34
 80118da:	460f      	mov	r7, r1
 80118dc:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 80118e0:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80118e4:	4616      	mov	r6, r2
 80118e6:	f1b9 0f00 	cmp.w	r9, #0
 80118ea:	d046      	beq.n	801197a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 80118ec:	6810      	ldr	r0, [r2, #0]
 80118ee:	6851      	ldr	r1, [r2, #4]
 80118f0:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8011ab8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>
 80118f4:	ad08      	add	r5, sp, #32
 80118f6:	c503      	stmia	r5!, {r0, r1}
 80118f8:	6818      	ldr	r0, [r3, #0]
 80118fa:	6859      	ldr	r1, [r3, #4]
 80118fc:	ad0a      	add	r5, sp, #40	; 0x28
 80118fe:	c503      	stmia	r5!, {r0, r1}
 8011900:	a808      	add	r0, sp, #32
 8011902:	f7fb fca5 	bl	800d250 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011906:	4631      	mov	r1, r6
 8011908:	a80a      	add	r0, sp, #40	; 0x28
 801190a:	f7fb fc89 	bl	800d220 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801190e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8011912:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8011916:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 801191a:	f8d8 0000 	ldr.w	r0, [r8]
 801191e:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 8011922:	fb16 2103 	smlabb	r1, r6, r3, r2
 8011926:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801192a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801192e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8011932:	440a      	add	r2, r1
 8011934:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011938:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801193c:	4413      	add	r3, r2
 801193e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011942:	6803      	ldr	r3, [r0, #0]
 8011944:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011946:	4798      	blx	r3
 8011948:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801194c:	d018      	beq.n	8011980 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801194e:	f010 0f04 	tst.w	r0, #4
 8011952:	d019      	beq.n	8011988 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8011954:	f8d8 0000 	ldr.w	r0, [r8]
 8011958:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801195c:	6801      	ldr	r1, [r0, #0]
 801195e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8011962:	e9cd 9403 	strd	r9, r4, [sp, #12]
 8011966:	b2bf      	uxth	r7, r7
 8011968:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 801196c:	9402      	str	r4, [sp, #8]
 801196e:	b2ad      	uxth	r5, r5
 8011970:	9701      	str	r7, [sp, #4]
 8011972:	9500      	str	r5, [sp, #0]
 8011974:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 8011976:	4631      	mov	r1, r6
 8011978:	47a0      	blx	r4
 801197a:	b00d      	add	sp, #52	; 0x34
 801197c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011980:	b914      	cbnz	r4, 8011988 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8011982:	f010 0f01 	tst.w	r0, #1
 8011986:	e7e4      	b.n	8011952 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8011988:	f8d8 0000 	ldr.w	r0, [r8]
 801198c:	6803      	ldr	r3, [r0, #0]
 801198e:	6a1b      	ldr	r3, [r3, #32]
 8011990:	4798      	blx	r3
 8011992:	4a48      	ldr	r2, [pc, #288]	; (8011ab4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e0>)
 8011994:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8011998:	8814      	ldrh	r4, [r2, #0]
 801199a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801199e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80119a2:	fb01 3404 	mla	r4, r1, r4, r3
 80119a6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80119aa:	4692      	mov	sl, r2
 80119ac:	d118      	bne.n	80119e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x10c>
 80119ae:	ea4f 0b45 	mov.w	fp, r5, lsl #1
 80119b2:	f04f 0900 	mov.w	r9, #0
 80119b6:	f8d8 0000 	ldr.w	r0, [r8]
 80119ba:	45b9      	cmp	r9, r7
 80119bc:	6803      	ldr	r3, [r0, #0]
 80119be:	da73      	bge.n	8011aa8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 80119c0:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80119c2:	4632      	mov	r2, r6
 80119c4:	465b      	mov	r3, fp
 80119c6:	4621      	mov	r1, r4
 80119c8:	47a8      	blx	r5
 80119ca:	f8ba 3000 	ldrh.w	r3, [sl]
 80119ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80119d2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80119d6:	f109 0901 	add.w	r9, r9, #1
 80119da:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80119de:	e7ea      	b.n	80119b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xe2>
 80119e0:	f1c9 08ff 	rsb	r8, r9, #255	; 0xff
 80119e4:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 80119e8:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 80119ec:	f04f 0b00 	mov.w	fp, #0
 80119f0:	fa1f f389 	uxth.w	r3, r9
 80119f4:	fa1f f888 	uxth.w	r8, r8
 80119f8:	9207      	str	r2, [sp, #28]
 80119fa:	45bb      	cmp	fp, r7
 80119fc:	da54      	bge.n	8011aa8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 80119fe:	f04f 0e00 	mov.w	lr, #0
 8011a02:	45ae      	cmp	lr, r5
 8011a04:	da41      	bge.n	8011a8a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1b6>
 8011a06:	f834 101e 	ldrh.w	r1, [r4, lr, lsl #1]
 8011a0a:	f836 201e 	ldrh.w	r2, [r6, lr, lsl #1]
 8011a0e:	1208      	asrs	r0, r1, #8
 8011a10:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8011a14:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8011a18:	fb10 f008 	smulbb	r0, r0, r8
 8011a1c:	ea4f 09e1 	mov.w	r9, r1, asr #3
 8011a20:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011a24:	00c9      	lsls	r1, r1, #3
 8011a26:	fb0c 0c03 	mla	ip, ip, r3, r0
 8011a2a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011a2e:	10d0      	asrs	r0, r2, #3
 8011a30:	b2c9      	uxtb	r1, r1
 8011a32:	00d2      	lsls	r2, r2, #3
 8011a34:	fa1f fc8c 	uxth.w	ip, ip
 8011a38:	fb19 f908 	smulbb	r9, r9, r8
 8011a3c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8011a40:	b2d2      	uxtb	r2, r2
 8011a42:	fb11 f108 	smulbb	r1, r1, r8
 8011a46:	fb00 9003 	mla	r0, r0, r3, r9
 8011a4a:	fb02 1203 	mla	r2, r2, r3, r1
 8011a4e:	f10c 0901 	add.w	r9, ip, #1
 8011a52:	b292      	uxth	r2, r2
 8011a54:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011a58:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8011a5c:	f102 0c01 	add.w	ip, r2, #1
 8011a60:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8011a64:	b280      	uxth	r0, r0
 8011a66:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011a6a:	ea49 0c02 	orr.w	ip, r9, r2
 8011a6e:	f100 0901 	add.w	r9, r0, #1
 8011a72:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 8011a76:	0940      	lsrs	r0, r0, #5
 8011a78:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8011a7c:	ea4c 0c00 	orr.w	ip, ip, r0
 8011a80:	f824 c01e 	strh.w	ip, [r4, lr, lsl #1]
 8011a84:	f10e 0e01 	add.w	lr, lr, #1
 8011a88:	e7bb      	b.n	8011a02 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x12e>
 8011a8a:	9a07      	ldr	r2, [sp, #28]
 8011a8c:	8812      	ldrh	r2, [r2, #0]
 8011a8e:	1b52      	subs	r2, r2, r5
 8011a90:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 8011a94:	4414      	add	r4, r2
 8011a96:	f9bd 2024 	ldrsh.w	r2, [sp, #36]	; 0x24
 8011a9a:	1b52      	subs	r2, r2, r5
 8011a9c:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 8011aa0:	4416      	add	r6, r2
 8011aa2:	f10b 0b01 	add.w	fp, fp, #1
 8011aa6:	e7a8      	b.n	80119fa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x126>
 8011aa8:	4b03      	ldr	r3, [pc, #12]	; (8011ab8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>)
 8011aaa:	6818      	ldr	r0, [r3, #0]
 8011aac:	6803      	ldr	r3, [r0, #0]
 8011aae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011ab0:	4798      	blx	r3
 8011ab2:	e762      	b.n	801197a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8011ab4:	200268fa 	.word	0x200268fa
 8011ab8:	20026900 	.word	0x20026900

08011abc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8011abc:	b510      	push	{r4, lr}
 8011abe:	2104      	movs	r1, #4
 8011ac0:	4604      	mov	r4, r0
 8011ac2:	f008 ff63 	bl	801a98c <_ZdlPvj>
 8011ac6:	4620      	mov	r0, r4
 8011ac8:	bd10      	pop	{r4, pc}

08011aca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8011aca:	b510      	push	{r4, lr}
 8011acc:	2104      	movs	r1, #4
 8011ace:	4604      	mov	r4, r0
 8011ad0:	f008 ff5c 	bl	801a98c <_ZdlPvj>
 8011ad4:	4620      	mov	r0, r4
 8011ad6:	bd10      	pop	{r4, pc}

08011ad8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8011ad8:	b510      	push	{r4, lr}
 8011ada:	2104      	movs	r1, #4
 8011adc:	4604      	mov	r4, r0
 8011ade:	f008 ff55 	bl	801a98c <_ZdlPvj>
 8011ae2:	4620      	mov	r0, r4
 8011ae4:	bd10      	pop	{r4, pc}

08011ae6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8011ae6:	b510      	push	{r4, lr}
 8011ae8:	2104      	movs	r1, #4
 8011aea:	4604      	mov	r4, r0
 8011aec:	f008 ff4e 	bl	801a98c <_ZdlPvj>
 8011af0:	4620      	mov	r0, r4
 8011af2:	bd10      	pop	{r4, pc}

08011af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8011af4:	b510      	push	{r4, lr}
 8011af6:	2104      	movs	r1, #4
 8011af8:	4604      	mov	r4, r0
 8011afa:	f008 ff47 	bl	801a98c <_ZdlPvj>
 8011afe:	4620      	mov	r0, r4
 8011b00:	bd10      	pop	{r4, pc}

08011b02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8011b02:	b510      	push	{r4, lr}
 8011b04:	2104      	movs	r1, #4
 8011b06:	4604      	mov	r4, r0
 8011b08:	f008 ff40 	bl	801a98c <_ZdlPvj>
 8011b0c:	4620      	mov	r0, r4
 8011b0e:	bd10      	pop	{r4, pc}

08011b10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8011b10:	b510      	push	{r4, lr}
 8011b12:	2104      	movs	r1, #4
 8011b14:	4604      	mov	r4, r0
 8011b16:	f008 ff39 	bl	801a98c <_ZdlPvj>
 8011b1a:	4620      	mov	r0, r4
 8011b1c:	bd10      	pop	{r4, pc}

08011b1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8011b1e:	b510      	push	{r4, lr}
 8011b20:	2104      	movs	r1, #4
 8011b22:	4604      	mov	r4, r0
 8011b24:	f008 ff32 	bl	801a98c <_ZdlPvj>
 8011b28:	4620      	mov	r0, r4
 8011b2a:	bd10      	pop	{r4, pc}

08011b2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8011b2c:	b510      	push	{r4, lr}
 8011b2e:	2104      	movs	r1, #4
 8011b30:	4604      	mov	r4, r0
 8011b32:	f008 ff2b 	bl	801a98c <_ZdlPvj>
 8011b36:	4620      	mov	r0, r4
 8011b38:	bd10      	pop	{r4, pc}

08011b3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8011b3a:	b510      	push	{r4, lr}
 8011b3c:	2104      	movs	r1, #4
 8011b3e:	4604      	mov	r4, r0
 8011b40:	f008 ff24 	bl	801a98c <_ZdlPvj>
 8011b44:	4620      	mov	r0, r4
 8011b46:	bd10      	pop	{r4, pc}

08011b48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8011b48:	b510      	push	{r4, lr}
 8011b4a:	2104      	movs	r1, #4
 8011b4c:	4604      	mov	r4, r0
 8011b4e:	f008 ff1d 	bl	801a98c <_ZdlPvj>
 8011b52:	4620      	mov	r0, r4
 8011b54:	bd10      	pop	{r4, pc}

08011b56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011b56:	b510      	push	{r4, lr}
 8011b58:	2104      	movs	r1, #4
 8011b5a:	4604      	mov	r4, r0
 8011b5c:	f008 ff16 	bl	801a98c <_ZdlPvj>
 8011b60:	4620      	mov	r0, r4
 8011b62:	bd10      	pop	{r4, pc}

08011b64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8011b64:	b510      	push	{r4, lr}
 8011b66:	2104      	movs	r1, #4
 8011b68:	4604      	mov	r4, r0
 8011b6a:	f008 ff0f 	bl	801a98c <_ZdlPvj>
 8011b6e:	4620      	mov	r0, r4
 8011b70:	bd10      	pop	{r4, pc}

08011b72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8011b72:	b510      	push	{r4, lr}
 8011b74:	2104      	movs	r1, #4
 8011b76:	4604      	mov	r4, r0
 8011b78:	f008 ff08 	bl	801a98c <_ZdlPvj>
 8011b7c:	4620      	mov	r0, r4
 8011b7e:	bd10      	pop	{r4, pc}

08011b80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8011b80:	b510      	push	{r4, lr}
 8011b82:	2104      	movs	r1, #4
 8011b84:	4604      	mov	r4, r0
 8011b86:	f008 ff01 	bl	801a98c <_ZdlPvj>
 8011b8a:	4620      	mov	r0, r4
 8011b8c:	bd10      	pop	{r4, pc}

08011b8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8011b8e:	b510      	push	{r4, lr}
 8011b90:	2104      	movs	r1, #4
 8011b92:	4604      	mov	r4, r0
 8011b94:	f008 fefa 	bl	801a98c <_ZdlPvj>
 8011b98:	4620      	mov	r0, r4
 8011b9a:	bd10      	pop	{r4, pc}

08011b9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8011b9c:	b510      	push	{r4, lr}
 8011b9e:	2104      	movs	r1, #4
 8011ba0:	4604      	mov	r4, r0
 8011ba2:	f008 fef3 	bl	801a98c <_ZdlPvj>
 8011ba6:	4620      	mov	r0, r4
 8011ba8:	bd10      	pop	{r4, pc}

08011baa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8011baa:	b510      	push	{r4, lr}
 8011bac:	2104      	movs	r1, #4
 8011bae:	4604      	mov	r4, r0
 8011bb0:	f008 feec 	bl	801a98c <_ZdlPvj>
 8011bb4:	4620      	mov	r0, r4
 8011bb6:	bd10      	pop	{r4, pc}

08011bb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8011bb8:	b510      	push	{r4, lr}
 8011bba:	2104      	movs	r1, #4
 8011bbc:	4604      	mov	r4, r0
 8011bbe:	f008 fee5 	bl	801a98c <_ZdlPvj>
 8011bc2:	4620      	mov	r0, r4
 8011bc4:	bd10      	pop	{r4, pc}

08011bc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011bc6:	b510      	push	{r4, lr}
 8011bc8:	2104      	movs	r1, #4
 8011bca:	4604      	mov	r4, r0
 8011bcc:	f008 fede 	bl	801a98c <_ZdlPvj>
 8011bd0:	4620      	mov	r0, r4
 8011bd2:	bd10      	pop	{r4, pc}

08011bd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8011bd4:	b510      	push	{r4, lr}
 8011bd6:	2104      	movs	r1, #4
 8011bd8:	4604      	mov	r4, r0
 8011bda:	f008 fed7 	bl	801a98c <_ZdlPvj>
 8011bde:	4620      	mov	r0, r4
 8011be0:	bd10      	pop	{r4, pc}

08011be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8011be2:	b510      	push	{r4, lr}
 8011be4:	2104      	movs	r1, #4
 8011be6:	4604      	mov	r4, r0
 8011be8:	f008 fed0 	bl	801a98c <_ZdlPvj>
 8011bec:	4620      	mov	r0, r4
 8011bee:	bd10      	pop	{r4, pc}

08011bf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8011bf0:	b510      	push	{r4, lr}
 8011bf2:	2104      	movs	r1, #4
 8011bf4:	4604      	mov	r4, r0
 8011bf6:	f008 fec9 	bl	801a98c <_ZdlPvj>
 8011bfa:	4620      	mov	r0, r4
 8011bfc:	bd10      	pop	{r4, pc}

08011bfe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011bfe:	b510      	push	{r4, lr}
 8011c00:	2104      	movs	r1, #4
 8011c02:	4604      	mov	r4, r0
 8011c04:	f008 fec2 	bl	801a98c <_ZdlPvj>
 8011c08:	4620      	mov	r0, r4
 8011c0a:	bd10      	pop	{r4, pc}

08011c0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8011c0c:	b510      	push	{r4, lr}
 8011c0e:	2104      	movs	r1, #4
 8011c10:	4604      	mov	r4, r0
 8011c12:	f008 febb 	bl	801a98c <_ZdlPvj>
 8011c16:	4620      	mov	r0, r4
 8011c18:	bd10      	pop	{r4, pc}

08011c1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8011c1a:	b510      	push	{r4, lr}
 8011c1c:	2104      	movs	r1, #4
 8011c1e:	4604      	mov	r4, r0
 8011c20:	f008 feb4 	bl	801a98c <_ZdlPvj>
 8011c24:	4620      	mov	r0, r4
 8011c26:	bd10      	pop	{r4, pc}

08011c28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8011c28:	b510      	push	{r4, lr}
 8011c2a:	2104      	movs	r1, #4
 8011c2c:	4604      	mov	r4, r0
 8011c2e:	f008 fead 	bl	801a98c <_ZdlPvj>
 8011c32:	4620      	mov	r0, r4
 8011c34:	bd10      	pop	{r4, pc}

08011c36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8011c36:	b510      	push	{r4, lr}
 8011c38:	2104      	movs	r1, #4
 8011c3a:	4604      	mov	r4, r0
 8011c3c:	f008 fea6 	bl	801a98c <_ZdlPvj>
 8011c40:	4620      	mov	r0, r4
 8011c42:	bd10      	pop	{r4, pc}

08011c44 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8011c44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c48:	460e      	mov	r6, r1
 8011c4a:	b08b      	sub	sp, #44	; 0x2c
 8011c4c:	4615      	mov	r5, r2
 8011c4e:	461c      	mov	r4, r3
 8011c50:	b323      	cbz	r3, 8011c9c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8011c52:	4608      	mov	r0, r1
 8011c54:	f7fa f88c 	bl	800bd70 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011c58:	bb00      	cbnz	r0, 8011c9c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8011c5a:	6830      	ldr	r0, [r6, #0]
 8011c5c:	6871      	ldr	r1, [r6, #4]
 8011c5e:	4e55      	ldr	r6, [pc, #340]	; (8011db4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8011c60:	ab08      	add	r3, sp, #32
 8011c62:	c303      	stmia	r3!, {r0, r1}
 8011c64:	a808      	add	r0, sp, #32
 8011c66:	f7fb faf3 	bl	800d250 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011c6a:	6830      	ldr	r0, [r6, #0]
 8011c6c:	6803      	ldr	r3, [r0, #0]
 8011c6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011c70:	4798      	blx	r3
 8011c72:	2cff      	cmp	r4, #255	; 0xff
 8011c74:	d015      	beq.n	8011ca2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5e>
 8011c76:	f010 0f08 	tst.w	r0, #8
 8011c7a:	d015      	beq.n	8011ca8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x64>
 8011c7c:	6830      	ldr	r0, [r6, #0]
 8011c7e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8011c82:	6801      	ldr	r1, [r0, #0]
 8011c84:	9402      	str	r4, [sp, #8]
 8011c86:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8011c8a:	9401      	str	r4, [sp, #4]
 8011c8c:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8011c90:	9400      	str	r4, [sp, #0]
 8011c92:	6c8c      	ldr	r4, [r1, #72]	; 0x48
 8011c94:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8011c98:	4629      	mov	r1, r5
 8011c9a:	47a0      	blx	r4
 8011c9c:	b00b      	add	sp, #44	; 0x2c
 8011c9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ca2:	f010 0f02 	tst.w	r0, #2
 8011ca6:	e7e8      	b.n	8011c7a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8011ca8:	6830      	ldr	r0, [r6, #0]
 8011caa:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8011cae:	6803      	ldr	r3, [r0, #0]
 8011cb0:	f9bd 9026 	ldrsh.w	r9, [sp, #38]	; 0x26
 8011cb4:	6a1b      	ldr	r3, [r3, #32]
 8011cb6:	4798      	blx	r3
 8011cb8:	4a3f      	ldr	r2, [pc, #252]	; (8011db8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x174>)
 8011cba:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8011cbe:	8816      	ldrh	r6, [r2, #0]
 8011cc0:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8011cc4:	2cff      	cmp	r4, #255	; 0xff
 8011cc6:	fb06 1303 	mla	r3, r6, r3, r1
 8011cca:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011cce:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 8011cd2:	4616      	mov	r6, r2
 8011cd4:	ea28 71e8 	bic.w	r1, r8, r8, asr #31
 8011cd8:	d10a      	bne.n	8011cf0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xac>
 8011cda:	0049      	lsls	r1, r1, #1
 8011cdc:	2200      	movs	r2, #0
 8011cde:	454a      	cmp	r2, r9
 8011ce0:	da62      	bge.n	8011da8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x164>
 8011ce2:	2300      	movs	r3, #0
 8011ce4:	4543      	cmp	r3, r8
 8011ce6:	da58      	bge.n	8011d9a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x156>
 8011ce8:	f820 5013 	strh.w	r5, [r0, r3, lsl #1]
 8011cec:	3301      	adds	r3, #1
 8011cee:	e7f9      	b.n	8011ce4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>
 8011cf0:	122b      	asrs	r3, r5, #8
 8011cf2:	f1c4 07ff 	rsb	r7, r4, #255	; 0xff
 8011cf6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8011cfa:	b2a4      	uxth	r4, r4
 8011cfc:	4363      	muls	r3, r4
 8011cfe:	9305      	str	r3, [sp, #20]
 8011d00:	f3c5 06cc 	ubfx	r6, r5, #3, #13
 8011d04:	00eb      	lsls	r3, r5, #3
 8011d06:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011d0a:	b2db      	uxtb	r3, r3
 8011d0c:	0049      	lsls	r1, r1, #1
 8011d0e:	4366      	muls	r6, r4
 8011d10:	4363      	muls	r3, r4
 8011d12:	9106      	str	r1, [sp, #24]
 8011d14:	f04f 0c00 	mov.w	ip, #0
 8011d18:	b2bf      	uxth	r7, r7
 8011d1a:	9207      	str	r2, [sp, #28]
 8011d1c:	45cc      	cmp	ip, r9
 8011d1e:	da43      	bge.n	8011da8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x164>
 8011d20:	4682      	mov	sl, r0
 8011d22:	f04f 0e00 	mov.w	lr, #0
 8011d26:	45c6      	cmp	lr, r8
 8011d28:	da2d      	bge.n	8011d86 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x142>
 8011d2a:	f8ba 2000 	ldrh.w	r2, [sl]
 8011d2e:	9905      	ldr	r1, [sp, #20]
 8011d30:	1214      	asrs	r4, r2, #8
 8011d32:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8011d36:	fb14 f407 	smulbb	r4, r4, r7
 8011d3a:	440c      	add	r4, r1
 8011d3c:	10d1      	asrs	r1, r2, #3
 8011d3e:	00d2      	lsls	r2, r2, #3
 8011d40:	b2d2      	uxtb	r2, r2
 8011d42:	fb12 f207 	smulbb	r2, r2, r7
 8011d46:	b2a4      	uxth	r4, r4
 8011d48:	441a      	add	r2, r3
 8011d4a:	b292      	uxth	r2, r2
 8011d4c:	1c65      	adds	r5, r4, #1
 8011d4e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8011d52:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8011d56:	fb11 f107 	smulbb	r1, r1, r7
 8011d5a:	1c55      	adds	r5, r2, #1
 8011d5c:	4431      	add	r1, r6
 8011d5e:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 8011d62:	b289      	uxth	r1, r1
 8011d64:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011d68:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8011d6c:	4314      	orrs	r4, r2
 8011d6e:	1c4a      	adds	r2, r1, #1
 8011d70:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8011d74:	0949      	lsrs	r1, r1, #5
 8011d76:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8011d7a:	430c      	orrs	r4, r1
 8011d7c:	f82a 4b02 	strh.w	r4, [sl], #2
 8011d80:	f10e 0e01 	add.w	lr, lr, #1
 8011d84:	e7cf      	b.n	8011d26 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xe2>
 8011d86:	9a07      	ldr	r2, [sp, #28]
 8011d88:	9906      	ldr	r1, [sp, #24]
 8011d8a:	8812      	ldrh	r2, [r2, #0]
 8011d8c:	ebcb 0242 	rsb	r2, fp, r2, lsl #1
 8011d90:	440a      	add	r2, r1
 8011d92:	4410      	add	r0, r2
 8011d94:	f10c 0c01 	add.w	ip, ip, #1
 8011d98:	e7c0      	b.n	8011d1c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd8>
 8011d9a:	8833      	ldrh	r3, [r6, #0]
 8011d9c:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 8011da0:	440b      	add	r3, r1
 8011da2:	4418      	add	r0, r3
 8011da4:	3201      	adds	r2, #1
 8011da6:	e79a      	b.n	8011cde <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9a>
 8011da8:	4b02      	ldr	r3, [pc, #8]	; (8011db4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8011daa:	6818      	ldr	r0, [r3, #0]
 8011dac:	6803      	ldr	r3, [r0, #0]
 8011dae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011db0:	4798      	blx	r3
 8011db2:	e773      	b.n	8011c9c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8011db4:	20026900 	.word	0x20026900
 8011db8:	200268fa 	.word	0x200268fa

08011dbc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8011dbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011dc0:	4d9b      	ldr	r5, [pc, #620]	; (8012030 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8011dc2:	4690      	mov	r8, r2
 8011dc4:	682a      	ldr	r2, [r5, #0]
 8011dc6:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8011dca:	2a02      	cmp	r2, #2
 8011dcc:	b08f      	sub	sp, #60	; 0x3c
 8011dce:	4604      	mov	r4, r0
 8011dd0:	4689      	mov	r9, r1
 8011dd2:	d106      	bne.n	8011de2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8011dd4:	4b97      	ldr	r3, [pc, #604]	; (8012034 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8011dd6:	4a98      	ldr	r2, [pc, #608]	; (8012038 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011dd8:	f240 21c2 	movw	r1, #706	; 0x2c2
 8011ddc:	4897      	ldr	r0, [pc, #604]	; (801203c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8011dde:	f008 fe01 	bl	801a9e4 <__assert_func>
 8011de2:	ae0e      	add	r6, sp, #56	; 0x38
 8011de4:	f826 3d24 	strh.w	r3, [r6, #-36]!
 8011de8:	4630      	mov	r0, r6
 8011dea:	f7fd facf 	bl	800f38c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011dee:	6823      	ldr	r3, [r4, #0]
 8011df0:	4607      	mov	r7, r0
 8011df2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011df4:	4620      	mov	r0, r4
 8011df6:	4798      	blx	r3
 8011df8:	4287      	cmp	r7, r0
 8011dfa:	d004      	beq.n	8011e06 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8011dfc:	4b90      	ldr	r3, [pc, #576]	; (8012040 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8011dfe:	4a8e      	ldr	r2, [pc, #568]	; (8012038 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011e00:	f44f 7131 	mov.w	r1, #708	; 0x2c4
 8011e04:	e7ea      	b.n	8011ddc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011e06:	4630      	mov	r0, r6
 8011e08:	f7fd fa3c 	bl	800f284 <_ZNK8touchgfx6Bitmap7getDataEv>
 8011e0c:	4607      	mov	r7, r0
 8011e0e:	b920      	cbnz	r0, 8011e1a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8011e10:	4b8c      	ldr	r3, [pc, #560]	; (8012044 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x288>)
 8011e12:	4a89      	ldr	r2, [pc, #548]	; (8012038 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011e14:	f240 21c6 	movw	r1, #710	; 0x2c6
 8011e18:	e7e0      	b.n	8011ddc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011e1a:	f8d8 0000 	ldr.w	r0, [r8]
 8011e1e:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8011e22:	f9b8 a000 	ldrsh.w	sl, [r8]
 8011e26:	ab06      	add	r3, sp, #24
 8011e28:	c303      	stmia	r3!, {r0, r1}
 8011e2a:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8011e2e:	f8d9 0000 	ldr.w	r0, [r9]
 8011e32:	f9b8 9002 	ldrsh.w	r9, [r8, #2]
 8011e36:	ab08      	add	r3, sp, #32
 8011e38:	c303      	stmia	r3!, {r0, r1}
 8011e3a:	4630      	mov	r0, r6
 8011e3c:	f7fd f91a 	bl	800f074 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011e40:	4680      	mov	r8, r0
 8011e42:	4630      	mov	r0, r6
 8011e44:	f7fd f950 	bl	800f0e8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011e48:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011e4c:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8011e50:	f10d 0920 	add.w	r9, sp, #32
 8011e54:	a806      	add	r0, sp, #24
 8011e56:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8011e5a:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 8011e5e:	f7fb f9f7 	bl	800d250 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011e62:	4648      	mov	r0, r9
 8011e64:	f7fb f9f4 	bl	800d250 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011e68:	a80a      	add	r0, sp, #40	; 0x28
 8011e6a:	f7fb f9f1 	bl	800d250 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011e6e:	4e76      	ldr	r6, [pc, #472]	; (8012048 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28c>)
 8011e70:	4b76      	ldr	r3, [pc, #472]	; (801204c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8011e72:	f9b6 2000 	ldrsh.w	r2, [r6]
 8011e76:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011e7a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011e7e:	2100      	movs	r1, #0
 8011e80:	910c      	str	r1, [sp, #48]	; 0x30
 8011e82:	4648      	mov	r0, r9
 8011e84:	a90c      	add	r1, sp, #48	; 0x30
 8011e86:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011e8a:	f7f9 ff2d 	bl	800bce8 <_ZN8touchgfx4RectaNERKS0_>
 8011e8e:	4648      	mov	r0, r9
 8011e90:	f7f9 ff6e 	bl	800bd70 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011e94:	2800      	cmp	r0, #0
 8011e96:	f040 80bd 	bne.w	8012014 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011e9a:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8011e9e:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8011ea2:	4288      	cmp	r0, r1
 8011ea4:	db37      	blt.n	8011f16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8011ea6:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8011eaa:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011eae:	429a      	cmp	r2, r3
 8011eb0:	db31      	blt.n	8011f16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8011eb2:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
 8011eb6:	4460      	add	r0, ip
 8011eb8:	f8bd c01c 	ldrh.w	ip, [sp, #28]
 8011ebc:	4461      	add	r1, ip
 8011ebe:	b200      	sxth	r0, r0
 8011ec0:	b209      	sxth	r1, r1
 8011ec2:	4288      	cmp	r0, r1
 8011ec4:	dc27      	bgt.n	8011f16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8011ec6:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8011eca:	440a      	add	r2, r1
 8011ecc:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8011ed0:	440b      	add	r3, r1
 8011ed2:	b212      	sxth	r2, r2
 8011ed4:	b21b      	sxth	r3, r3
 8011ed6:	429a      	cmp	r2, r3
 8011ed8:	dc1d      	bgt.n	8011f16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8011eda:	6823      	ldr	r3, [r4, #0]
 8011edc:	4620      	mov	r0, r4
 8011ede:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011ee0:	4798      	blx	r3
 8011ee2:	4682      	mov	sl, r0
 8011ee4:	6828      	ldr	r0, [r5, #0]
 8011ee6:	6803      	ldr	r3, [r0, #0]
 8011ee8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011eea:	4798      	blx	r3
 8011eec:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8011ef0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011ef4:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8011ef8:	1a9b      	subs	r3, r3, r2
 8011efa:	b29b      	uxth	r3, r3
 8011efc:	b21c      	sxth	r4, r3
 8011efe:	2c00      	cmp	r4, #0
 8011f00:	dc0e      	bgt.n	8011f20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x164>
 8011f02:	bf1f      	itttt	ne
 8011f04:	f8ad 2020 	strhne.w	r2, [sp, #32]
 8011f08:	f8bd 2024 	ldrhne.w	r2, [sp, #36]	; 0x24
 8011f0c:	189b      	addne	r3, r3, r2
 8011f0e:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8011f12:	463c      	mov	r4, r7
 8011f14:	e00a      	b.n	8011f2c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x170>
 8011f16:	4b4e      	ldr	r3, [pc, #312]	; (8012050 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x294>)
 8011f18:	4a47      	ldr	r2, [pc, #284]	; (8012038 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011f1a:	f44f 7135 	mov.w	r1, #724	; 0x2d4
 8011f1e:	e75d      	b.n	8011ddc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011f20:	ebab 0303 	sub.w	r3, fp, r3
 8011f24:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 8011f28:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8011f2c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8011f30:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8011f34:	1a5b      	subs	r3, r3, r1
 8011f36:	b29b      	uxth	r3, r3
 8011f38:	b21a      	sxth	r2, r3
 8011f3a:	2a00      	cmp	r2, #0
 8011f3c:	dd4a      	ble.n	8011fd4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x218>
 8011f3e:	fb02 f20b 	mul.w	r2, r2, fp
 8011f42:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 8011f46:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 8011f4a:	1ad3      	subs	r3, r2, r3
 8011f4c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011f50:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8011f54:	2b00      	cmp	r3, #0
 8011f56:	dd5d      	ble.n	8012014 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011f58:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8011f5c:	f1bc 0f00 	cmp.w	ip, #0
 8011f60:	dd58      	ble.n	8012014 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011f62:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 8011f66:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8011f6a:	fb0a f801 	mul.w	r8, sl, r1
 8011f6e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8011f72:	4480      	add	r8, r0
 8011f74:	8830      	ldrh	r0, [r6, #0]
 8011f76:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 8011f7a:	42b3      	cmp	r3, r6
 8011f7c:	bfa8      	it	ge
 8011f7e:	4633      	movge	r3, r6
 8011f80:	1a82      	subs	r2, r0, r2
 8011f82:	4293      	cmp	r3, r2
 8011f84:	bfa8      	it	ge
 8011f86:	4613      	movge	r3, r2
 8011f88:	4a30      	ldr	r2, [pc, #192]	; (801204c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8011f8a:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 8011f8e:	8812      	ldrh	r2, [r2, #0]
 8011f90:	4566      	cmp	r6, ip
 8011f92:	eba2 0101 	sub.w	r1, r2, r1
 8011f96:	bfa8      	it	ge
 8011f98:	4666      	movge	r6, ip
 8011f9a:	428e      	cmp	r6, r1
 8011f9c:	4632      	mov	r2, r6
 8011f9e:	bfa8      	it	ge
 8011fa0:	460a      	movge	r2, r1
 8011fa2:	4298      	cmp	r0, r3
 8011fa4:	9202      	str	r2, [sp, #8]
 8011fa6:	d01e      	beq.n	8011fe6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22a>
 8011fa8:	005b      	lsls	r3, r3, #1
 8011faa:	9303      	str	r3, [sp, #12]
 8011fac:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8011fb0:	f04f 0900 	mov.w	r9, #0
 8011fb4:	9b02      	ldr	r3, [sp, #8]
 8011fb6:	454b      	cmp	r3, r9
 8011fb8:	dd2c      	ble.n	8012014 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011fba:	6828      	ldr	r0, [r5, #0]
 8011fbc:	6803      	ldr	r3, [r0, #0]
 8011fbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011fc0:	4642      	mov	r2, r8
 8011fc2:	461e      	mov	r6, r3
 8011fc4:	4621      	mov	r1, r4
 8011fc6:	9b03      	ldr	r3, [sp, #12]
 8011fc8:	47b0      	blx	r6
 8011fca:	44d0      	add	r8, sl
 8011fcc:	445c      	add	r4, fp
 8011fce:	f109 0901 	add.w	r9, r9, #1
 8011fd2:	e7ef      	b.n	8011fb4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f8>
 8011fd4:	bf1f      	itttt	ne
 8011fd6:	f8bd 2026 	ldrhne.w	r2, [sp, #38]	; 0x26
 8011fda:	f8ad 1022 	strhne.w	r1, [sp, #34]	; 0x22
 8011fde:	189b      	addne	r3, r3, r2
 8011fe0:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8011fe4:	e7b4      	b.n	8011f50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x194>
 8011fe6:	4558      	cmp	r0, fp
 8011fe8:	d1de      	bne.n	8011fa8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ec>
 8011fea:	6828      	ldr	r0, [r5, #0]
 8011fec:	6803      	ldr	r3, [r0, #0]
 8011fee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011ff0:	4798      	blx	r3
 8011ff2:	07c3      	lsls	r3, r0, #31
 8011ff4:	d512      	bpl.n	801201c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 8011ff6:	6828      	ldr	r0, [r5, #0]
 8011ff8:	9b02      	ldr	r3, [sp, #8]
 8011ffa:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 8011ffe:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8012002:	6803      	ldr	r3, [r0, #0]
 8012004:	f8cd b000 	str.w	fp, [sp]
 8012008:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 801200a:	e899 0006 	ldmia.w	r9, {r1, r2}
 801200e:	4623      	mov	r3, r4
 8012010:	47a8      	blx	r5
 8012012:	4607      	mov	r7, r0
 8012014:	4638      	mov	r0, r7
 8012016:	b00f      	add	sp, #60	; 0x3c
 8012018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801201c:	6828      	ldr	r0, [r5, #0]
 801201e:	6803      	ldr	r3, [r0, #0]
 8012020:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8012022:	9b02      	ldr	r3, [sp, #8]
 8012024:	4642      	mov	r2, r8
 8012026:	fb03 f30a 	mul.w	r3, r3, sl
 801202a:	4621      	mov	r1, r4
 801202c:	47a8      	blx	r5
 801202e:	e7f1      	b.n	8012014 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8012030:	20026900 	.word	0x20026900
 8012034:	0801e453 	.word	0x0801e453
 8012038:	0801ec97 	.word	0x0801ec97
 801203c:	0801e507 	.word	0x0801e507
 8012040:	0801e539 	.word	0x0801e539
 8012044:	0801e58e 	.word	0x0801e58e
 8012048:	200268fa 	.word	0x200268fa
 801204c:	200268fc 	.word	0x200268fc
 8012050:	0801e5cc 	.word	0x0801e5cc

08012054 <_ZN8touchgfx8LCD16bppC1Ev>:
 8012054:	2200      	movs	r2, #0
 8012056:	4910      	ldr	r1, [pc, #64]	; (8012098 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8012058:	6042      	str	r2, [r0, #4]
 801205a:	6001      	str	r1, [r0, #0]
 801205c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8012060:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8012064:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8012068:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801206c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8012070:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8012074:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8012078:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801207c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8012080:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8012084:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8012088:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801208c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8012090:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8012094:	4770      	bx	lr
 8012096:	bf00      	nop
 8012098:	0801e910 	.word	0x0801e910

0801209c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801209c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80120a0:	460c      	mov	r4, r1
 80120a2:	b08d      	sub	sp, #52	; 0x34
 80120a4:	4682      	mov	sl, r0
 80120a6:	6808      	ldr	r0, [r1, #0]
 80120a8:	6849      	ldr	r1, [r1, #4]
 80120aa:	469b      	mov	fp, r3
 80120ac:	ab08      	add	r3, sp, #32
 80120ae:	c303      	stmia	r3!, {r0, r1}
 80120b0:	6810      	ldr	r0, [r2, #0]
 80120b2:	6851      	ldr	r1, [r2, #4]
 80120b4:	ab0a      	add	r3, sp, #40	; 0x28
 80120b6:	c303      	stmia	r3!, {r0, r1}
 80120b8:	a808      	add	r0, sp, #32
 80120ba:	f7fb f8c9 	bl	800d250 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80120be:	4621      	mov	r1, r4
 80120c0:	a80a      	add	r0, sp, #40	; 0x28
 80120c2:	f7fb f8ad 	bl	800d220 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80120c6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80120ca:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80120ce:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80120d2:	4c60      	ldr	r4, [pc, #384]	; (8012254 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 80120d4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80120d8:	6820      	ldr	r0, [r4, #0]
 80120da:	f9bd 902e 	ldrsh.w	r9, [sp, #46]	; 0x2e
 80120de:	fb11 2103 	smlabb	r1, r1, r3, r2
 80120e2:	eb0a 0a81 	add.w	sl, sl, r1, lsl #2
 80120e6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80120ea:	440a      	add	r2, r1
 80120ec:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80120f0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80120f4:	4413      	add	r3, r2
 80120f6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80120fa:	6803      	ldr	r3, [r0, #0]
 80120fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80120fe:	4798      	blx	r3
 8012100:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012104:	d119      	bne.n	801213a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8012106:	f010 0f20 	tst.w	r0, #32
 801210a:	6820      	ldr	r0, [r4, #0]
 801210c:	d018      	beq.n	8012140 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801210e:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8012112:	6801      	ldr	r1, [r0, #0]
 8012114:	9402      	str	r4, [sp, #8]
 8012116:	fa1f f489 	uxth.w	r4, r9
 801211a:	9401      	str	r4, [sp, #4]
 801211c:	fa1f f488 	uxth.w	r4, r8
 8012120:	f8cd b00c 	str.w	fp, [sp, #12]
 8012124:	9400      	str	r4, [sp, #0]
 8012126:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8012128:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801212c:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012130:	4651      	mov	r1, sl
 8012132:	47a0      	blx	r4
 8012134:	b00d      	add	sp, #52	; 0x34
 8012136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801213a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801213e:	e7e4      	b.n	801210a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8012140:	6803      	ldr	r3, [r0, #0]
 8012142:	6a1b      	ldr	r3, [r3, #32]
 8012144:	4798      	blx	r3
 8012146:	4a44      	ldr	r2, [pc, #272]	; (8012258 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1bc>)
 8012148:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801214c:	8813      	ldrh	r3, [r2, #0]
 801214e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8012152:	9207      	str	r2, [sp, #28]
 8012154:	fb04 1303 	mla	r3, r4, r3, r1
 8012158:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801215c:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 8012160:	0099      	lsls	r1, r3, #2
 8012162:	005b      	lsls	r3, r3, #1
 8012164:	9106      	str	r1, [sp, #24]
 8012166:	9305      	str	r3, [sp, #20]
 8012168:	f04f 0c00 	mov.w	ip, #0
 801216c:	45cc      	cmp	ip, r9
 801216e:	da6b      	bge.n	8012248 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1ac>
 8012170:	2300      	movs	r3, #0
 8012172:	4543      	cmp	r3, r8
 8012174:	da55      	bge.n	8012222 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x186>
 8012176:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
 801217a:	0e25      	lsrs	r5, r4, #24
 801217c:	d013      	beq.n	80121a6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 801217e:	2dff      	cmp	r5, #255	; 0xff
 8012180:	ea4f 2714 	mov.w	r7, r4, lsr #8
 8012184:	d111      	bne.n	80121aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8012186:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801218a:	d10e      	bne.n	80121aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 801218c:	0962      	lsrs	r2, r4, #5
 801218e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8012192:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012196:	f027 0707 	bic.w	r7, r7, #7
 801219a:	4317      	orrs	r7, r2
 801219c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80121a0:	433c      	orrs	r4, r7
 80121a2:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 80121a6:	3301      	adds	r3, #1
 80121a8:	e7e3      	b.n	8012172 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd6>
 80121aa:	fb0b f505 	mul.w	r5, fp, r5
 80121ae:	1c6a      	adds	r2, r5, #1
 80121b0:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 80121b4:	eb02 2225 	add.w	r2, r2, r5, asr #8
 80121b8:	1212      	asrs	r2, r2, #8
 80121ba:	fa1f fe82 	uxth.w	lr, r2
 80121be:	120e      	asrs	r6, r1, #8
 80121c0:	f3c4 4507 	ubfx	r5, r4, #16, #8
 80121c4:	43d2      	mvns	r2, r2
 80121c6:	b2d2      	uxtb	r2, r2
 80121c8:	fb15 f50e 	smulbb	r5, r5, lr
 80121cc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80121d0:	fb06 5602 	mla	r6, r6, r2, r5
 80121d4:	b2e4      	uxtb	r4, r4
 80121d6:	10cd      	asrs	r5, r1, #3
 80121d8:	00c9      	lsls	r1, r1, #3
 80121da:	b2c9      	uxtb	r1, r1
 80121dc:	fb14 f40e 	smulbb	r4, r4, lr
 80121e0:	fb01 4402 	mla	r4, r1, r2, r4
 80121e4:	b2ff      	uxtb	r7, r7
 80121e6:	b2b6      	uxth	r6, r6
 80121e8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80121ec:	b2a4      	uxth	r4, r4
 80121ee:	fb17 f70e 	smulbb	r7, r7, lr
 80121f2:	fb05 7702 	mla	r7, r5, r2, r7
 80121f6:	1c72      	adds	r2, r6, #1
 80121f8:	1c65      	adds	r5, r4, #1
 80121fa:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80121fe:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 8012202:	b2bf      	uxth	r7, r7
 8012204:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012208:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801220c:	432e      	orrs	r6, r5
 801220e:	1c7d      	adds	r5, r7, #1
 8012210:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8012214:	097f      	lsrs	r7, r7, #5
 8012216:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801221a:	433e      	orrs	r6, r7
 801221c:	f820 6013 	strh.w	r6, [r0, r3, lsl #1]
 8012220:	e7c1      	b.n	80121a6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8012222:	9b07      	ldr	r3, [sp, #28]
 8012224:	9a05      	ldr	r2, [sp, #20]
 8012226:	881b      	ldrh	r3, [r3, #0]
 8012228:	eba3 0308 	sub.w	r3, r3, r8
 801222c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012230:	4418      	add	r0, r3
 8012232:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8012236:	9a06      	ldr	r2, [sp, #24]
 8012238:	eba3 0308 	sub.w	r3, r3, r8
 801223c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8012240:	449a      	add	sl, r3
 8012242:	f10c 0c01 	add.w	ip, ip, #1
 8012246:	e791      	b.n	801216c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd0>
 8012248:	4b02      	ldr	r3, [pc, #8]	; (8012254 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 801224a:	6818      	ldr	r0, [r3, #0]
 801224c:	6803      	ldr	r3, [r0, #0]
 801224e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012250:	4798      	blx	r3
 8012252:	e76f      	b.n	8012134 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8012254:	20026900 	.word	0x20026900
 8012258:	200268fa 	.word	0x200268fa

0801225c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801225c:	b570      	push	{r4, r5, r6, lr}
 801225e:	9d04      	ldr	r5, [sp, #16]
 8012260:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8012264:	460c      	mov	r4, r1
 8012266:	4619      	mov	r1, r3
 8012268:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801226c:	2a0c      	cmp	r2, #12
 801226e:	d820      	bhi.n	80122b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8012270:	e8df f002 	tbb	[pc, r2]
 8012274:	18121807 	.word	0x18121807
 8012278:	18181818 	.word	0x18181818
 801227c:	18181818 	.word	0x18181818
 8012280:	18          	.byte	0x18
 8012281:	00          	.byte	0x00
 8012282:	6802      	ldr	r2, [r0, #0]
 8012284:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8012288:	6916      	ldr	r6, [r2, #16]
 801228a:	462b      	mov	r3, r5
 801228c:	460a      	mov	r2, r1
 801228e:	46b4      	mov	ip, r6
 8012290:	4621      	mov	r1, r4
 8012292:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012296:	4760      	bx	ip
 8012298:	462a      	mov	r2, r5
 801229a:	4620      	mov	r0, r4
 801229c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80122a0:	f7ff befc 	b.w	801209c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80122a4:	4b03      	ldr	r3, [pc, #12]	; (80122b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 80122a6:	4a04      	ldr	r2, [pc, #16]	; (80122b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 80122a8:	4804      	ldr	r0, [pc, #16]	; (80122bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 80122aa:	f240 21bb 	movw	r1, #699	; 0x2bb
 80122ae:	f008 fb99 	bl	801a9e4 <__assert_func>
 80122b2:	bd70      	pop	{r4, r5, r6, pc}
 80122b4:	0801e62c 	.word	0x0801e62c
 80122b8:	0801ed1d 	.word	0x0801ed1d
 80122bc:	0801e507 	.word	0x0801e507

080122c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80122c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122c4:	b093      	sub	sp, #76	; 0x4c
 80122c6:	880f      	ldrh	r7, [r1, #0]
 80122c8:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80122cc:	4681      	mov	r9, r0
 80122ce:	4688      	mov	r8, r1
 80122d0:	4615      	mov	r5, r2
 80122d2:	b12f      	cbz	r7, 80122e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 80122d4:	4b71      	ldr	r3, [pc, #452]	; (801249c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 80122d6:	4a72      	ldr	r2, [pc, #456]	; (80124a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 80122d8:	4872      	ldr	r0, [pc, #456]	; (80124a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 80122da:	21ec      	movs	r1, #236	; 0xec
 80122dc:	f008 fb82 	bl	801a9e4 <__assert_func>
 80122e0:	6810      	ldr	r0, [r2, #0]
 80122e2:	6851      	ldr	r1, [r2, #4]
 80122e4:	ac0e      	add	r4, sp, #56	; 0x38
 80122e6:	c403      	stmia	r4!, {r0, r1}
 80122e8:	6818      	ldr	r0, [r3, #0]
 80122ea:	6859      	ldr	r1, [r3, #4]
 80122ec:	ac10      	add	r4, sp, #64	; 0x40
 80122ee:	c403      	stmia	r4!, {r0, r1}
 80122f0:	a80e      	add	r0, sp, #56	; 0x38
 80122f2:	f7fa ffad 	bl	800d250 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80122f6:	4629      	mov	r1, r5
 80122f8:	a810      	add	r0, sp, #64	; 0x40
 80122fa:	f7fa ff91 	bl	800d220 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80122fe:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012302:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012306:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801230a:	4d67      	ldr	r5, [pc, #412]	; (80124a8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 801230c:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8012310:	6828      	ldr	r0, [r5, #0]
 8012312:	4c66      	ldr	r4, [pc, #408]	; (80124ac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ec>)
 8012314:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012318:	4489      	add	r9, r1
 801231a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801231e:	440a      	add	r2, r1
 8012320:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012324:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012328:	4413      	add	r3, r2
 801232a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801232e:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8012332:	930a      	str	r3, [sp, #40]	; 0x28
 8012334:	6803      	ldr	r3, [r0, #0]
 8012336:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801233a:	4798      	blx	r3
 801233c:	2801      	cmp	r0, #1
 801233e:	d11d      	bne.n	801237c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbc>
 8012340:	220b      	movs	r2, #11
 8012342:	9708      	str	r7, [sp, #32]
 8012344:	9207      	str	r2, [sp, #28]
 8012346:	8822      	ldrh	r2, [r4, #0]
 8012348:	f8cd a010 	str.w	sl, [sp, #16]
 801234c:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8012350:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8012354:	9203      	str	r2, [sp, #12]
 8012356:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801235a:	9202      	str	r2, [sp, #8]
 801235c:	fa1f f28b 	uxth.w	r2, fp
 8012360:	9201      	str	r2, [sp, #4]
 8012362:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8012366:	9200      	str	r2, [sp, #0]
 8012368:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801236c:	6828      	ldr	r0, [r5, #0]
 801236e:	4642      	mov	r2, r8
 8012370:	4649      	mov	r1, r9
 8012372:	f7fa f907 	bl	800c584 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8012376:	b013      	add	sp, #76	; 0x4c
 8012378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801237c:	6828      	ldr	r0, [r5, #0]
 801237e:	6803      	ldr	r3, [r0, #0]
 8012380:	6a1b      	ldr	r3, [r3, #32]
 8012382:	4798      	blx	r3
 8012384:	8823      	ldrh	r3, [r4, #0]
 8012386:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801238a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801238e:	fb01 2303 	mla	r3, r1, r3, r2
 8012392:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012396:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
 801239a:	930b      	str	r3, [sp, #44]	; 0x2c
 801239c:	005b      	lsls	r3, r3, #1
 801239e:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 80123a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80123a4:	429f      	cmp	r7, r3
 80123a6:	da72      	bge.n	801248e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ce>
 80123a8:	2100      	movs	r1, #0
 80123aa:	4559      	cmp	r1, fp
 80123ac:	da5e      	bge.n	801246c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 80123ae:	f819 3001 	ldrb.w	r3, [r9, r1]
 80123b2:	2204      	movs	r2, #4
 80123b4:	fb12 2303 	smlabb	r3, r2, r3, r2
 80123b8:	f858 2003 	ldr.w	r2, [r8, r3]
 80123bc:	0e15      	lsrs	r5, r2, #24
 80123be:	d013      	beq.n	80123e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80123c0:	2dff      	cmp	r5, #255	; 0xff
 80123c2:	ea4f 2412 	mov.w	r4, r2, lsr #8
 80123c6:	d111      	bne.n	80123ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80123c8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80123cc:	d10e      	bne.n	80123ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80123ce:	0953      	lsrs	r3, r2, #5
 80123d0:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 80123d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80123d8:	f024 0407 	bic.w	r4, r4, #7
 80123dc:	431c      	orrs	r4, r3
 80123de:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80123e2:	4314      	orrs	r4, r2
 80123e4:	f820 4011 	strh.w	r4, [r0, r1, lsl #1]
 80123e8:	3101      	adds	r1, #1
 80123ea:	e7de      	b.n	80123aa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xea>
 80123ec:	fb0a f505 	mul.w	r5, sl, r5
 80123f0:	1c6b      	adds	r3, r5, #1
 80123f2:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 80123f6:	eb03 2325 	add.w	r3, r3, r5, asr #8
 80123fa:	121b      	asrs	r3, r3, #8
 80123fc:	fa1f fe83 	uxth.w	lr, r3
 8012400:	ea4f 262c 	mov.w	r6, ip, asr #8
 8012404:	f3c2 4507 	ubfx	r5, r2, #16, #8
 8012408:	43db      	mvns	r3, r3
 801240a:	b2db      	uxtb	r3, r3
 801240c:	fb15 f50e 	smulbb	r5, r5, lr
 8012410:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012414:	fb06 5603 	mla	r6, r6, r3, r5
 8012418:	b2d2      	uxtb	r2, r2
 801241a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801241e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012422:	fa5f fc8c 	uxtb.w	ip, ip
 8012426:	fb12 f20e 	smulbb	r2, r2, lr
 801242a:	fb0c 2203 	mla	r2, ip, r3, r2
 801242e:	b2e4      	uxtb	r4, r4
 8012430:	b2b6      	uxth	r6, r6
 8012432:	fb14 f40e 	smulbb	r4, r4, lr
 8012436:	b292      	uxth	r2, r2
 8012438:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801243c:	fb05 4503 	mla	r5, r5, r3, r4
 8012440:	1c73      	adds	r3, r6, #1
 8012442:	1c54      	adds	r4, r2, #1
 8012444:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8012448:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 801244c:	b2ad      	uxth	r5, r5
 801244e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8012452:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8012456:	4326      	orrs	r6, r4
 8012458:	1c6c      	adds	r4, r5, #1
 801245a:	eb04 2415 	add.w	r4, r4, r5, lsr #8
 801245e:	0964      	lsrs	r4, r4, #5
 8012460:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8012464:	4326      	orrs	r6, r4
 8012466:	f820 6011 	strh.w	r6, [r0, r1, lsl #1]
 801246a:	e7bd      	b.n	80123e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801246c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801246e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8012470:	881b      	ldrh	r3, [r3, #0]
 8012472:	eba3 030b 	sub.w	r3, r3, fp
 8012476:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801247a:	4418      	add	r0, r3
 801247c:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8012480:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012482:	eba3 030b 	sub.w	r3, r3, fp
 8012486:	4413      	add	r3, r2
 8012488:	4499      	add	r9, r3
 801248a:	3701      	adds	r7, #1
 801248c:	e789      	b.n	80123a2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801248e:	4b06      	ldr	r3, [pc, #24]	; (80124a8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8012490:	6818      	ldr	r0, [r3, #0]
 8012492:	6803      	ldr	r3, [r0, #0]
 8012494:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012496:	4798      	blx	r3
 8012498:	e76d      	b.n	8012376 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb6>
 801249a:	bf00      	nop
 801249c:	0801e403 	.word	0x0801e403
 80124a0:	0801eaee 	.word	0x0801eaee
 80124a4:	0801e507 	.word	0x0801e507
 80124a8:	20026900 	.word	0x20026900
 80124ac:	200268fa 	.word	0x200268fa

080124b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80124b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124b4:	4614      	mov	r4, r2
 80124b6:	880a      	ldrh	r2, [r1, #0]
 80124b8:	b093      	sub	sp, #76	; 0x4c
 80124ba:	2a02      	cmp	r2, #2
 80124bc:	4606      	mov	r6, r0
 80124be:	4689      	mov	r9, r1
 80124c0:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 80124c4:	d006      	beq.n	80124d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 80124c6:	4b7a      	ldr	r3, [pc, #488]	; (80126b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 80124c8:	4a7a      	ldr	r2, [pc, #488]	; (80126b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 80124ca:	487b      	ldr	r0, [pc, #492]	; (80126b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x208>)
 80124cc:	f44f 71a3 	mov.w	r1, #326	; 0x146
 80124d0:	f008 fa88 	bl	801a9e4 <__assert_func>
 80124d4:	2f00      	cmp	r7, #0
 80124d6:	d04b      	beq.n	8012570 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 80124d8:	6820      	ldr	r0, [r4, #0]
 80124da:	6861      	ldr	r1, [r4, #4]
 80124dc:	f8df a1e0 	ldr.w	sl, [pc, #480]	; 80126c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>
 80124e0:	ad0e      	add	r5, sp, #56	; 0x38
 80124e2:	c503      	stmia	r5!, {r0, r1}
 80124e4:	6818      	ldr	r0, [r3, #0]
 80124e6:	6859      	ldr	r1, [r3, #4]
 80124e8:	ad10      	add	r5, sp, #64	; 0x40
 80124ea:	c503      	stmia	r5!, {r0, r1}
 80124ec:	a80e      	add	r0, sp, #56	; 0x38
 80124ee:	f7fa feaf 	bl	800d250 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80124f2:	4621      	mov	r1, r4
 80124f4:	a810      	add	r0, sp, #64	; 0x40
 80124f6:	f7fa fe93 	bl	800d220 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80124fa:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80124fe:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012502:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012506:	f8da 0000 	ldr.w	r0, [sl]
 801250a:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	; 0x44
 801250e:	f9bd 8046 	ldrsh.w	r8, [sp, #70]	; 0x46
 8012512:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012516:	1874      	adds	r4, r6, r1
 8012518:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801251c:	4e67      	ldr	r6, [pc, #412]	; (80126bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x20c>)
 801251e:	440a      	add	r2, r1
 8012520:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012524:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012528:	4413      	add	r3, r2
 801252a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801252e:	6803      	ldr	r3, [r0, #0]
 8012530:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012534:	4798      	blx	r3
 8012536:	2801      	cmp	r0, #1
 8012538:	d11d      	bne.n	8012576 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 801253a:	2200      	movs	r2, #0
 801253c:	210b      	movs	r1, #11
 801253e:	e9cd 1207 	strd	r1, r2, [sp, #28]
 8012542:	8831      	ldrh	r1, [r6, #0]
 8012544:	9704      	str	r7, [sp, #16]
 8012546:	e9cd 2105 	strd	r2, r1, [sp, #20]
 801254a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801254e:	9203      	str	r2, [sp, #12]
 8012550:	fa1f f288 	uxth.w	r2, r8
 8012554:	9202      	str	r2, [sp, #8]
 8012556:	b2ad      	uxth	r5, r5
 8012558:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801255c:	9200      	str	r2, [sp, #0]
 801255e:	9501      	str	r5, [sp, #4]
 8012560:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012564:	f8da 0000 	ldr.w	r0, [sl]
 8012568:	464a      	mov	r2, r9
 801256a:	4621      	mov	r1, r4
 801256c:	f7fa f80a 	bl	800c584 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8012570:	b013      	add	sp, #76	; 0x4c
 8012572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012576:	f8da 0000 	ldr.w	r0, [sl]
 801257a:	6803      	ldr	r3, [r0, #0]
 801257c:	6a1b      	ldr	r3, [r3, #32]
 801257e:	4798      	blx	r3
 8012580:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012584:	8833      	ldrh	r3, [r6, #0]
 8012586:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801258a:	fb01 2303 	mla	r3, r1, r3, r2
 801258e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012592:	2fff      	cmp	r7, #255	; 0xff
 8012594:	f109 0304 	add.w	r3, r9, #4
 8012598:	930a      	str	r3, [sp, #40]	; 0x28
 801259a:	ea25 72e5 	bic.w	r2, r5, r5, asr #31
 801259e:	d111      	bne.n	80125c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x114>
 80125a0:	b212      	sxth	r2, r2
 80125a2:	ea4f 0e42 	mov.w	lr, r2, lsl #1
 80125a6:	2100      	movs	r1, #0
 80125a8:	4541      	cmp	r1, r8
 80125aa:	da7a      	bge.n	80126a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 80125ac:	2300      	movs	r3, #0
 80125ae:	42ab      	cmp	r3, r5
 80125b0:	da6b      	bge.n	801268a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1da>
 80125b2:	f814 c003 	ldrb.w	ip, [r4, r3]
 80125b6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80125b8:	f837 c01c 	ldrh.w	ip, [r7, ip, lsl #1]
 80125bc:	f820 c013 	strh.w	ip, [r0, r3, lsl #1]
 80125c0:	3301      	adds	r3, #1
 80125c2:	e7f4      	b.n	80125ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xfe>
 80125c4:	b213      	sxth	r3, r2
 80125c6:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 80125ca:	930b      	str	r3, [sp, #44]	; 0x2c
 80125cc:	005b      	lsls	r3, r3, #1
 80125ce:	930c      	str	r3, [sp, #48]	; 0x30
 80125d0:	f04f 0900 	mov.w	r9, #0
 80125d4:	b2ba      	uxth	r2, r7
 80125d6:	fa1f fc8c 	uxth.w	ip, ip
 80125da:	960d      	str	r6, [sp, #52]	; 0x34
 80125dc:	45c1      	cmp	r9, r8
 80125de:	da60      	bge.n	80126a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 80125e0:	46a3      	mov	fp, r4
 80125e2:	4682      	mov	sl, r0
 80125e4:	ebab 0304 	sub.w	r3, fp, r4
 80125e8:	429d      	cmp	r5, r3
 80125ea:	dd3e      	ble.n	801266a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ba>
 80125ec:	f81b 3b01 	ldrb.w	r3, [fp], #1
 80125f0:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80125f2:	f8ba 1000 	ldrh.w	r1, [sl]
 80125f6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80125fa:	120e      	asrs	r6, r1, #8
 80125fc:	121f      	asrs	r7, r3, #8
 80125fe:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012602:	fb16 f60c 	smulbb	r6, r6, ip
 8012606:	ea4f 0ee1 	mov.w	lr, r1, asr #3
 801260a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801260e:	00c9      	lsls	r1, r1, #3
 8012610:	fb07 6702 	mla	r7, r7, r2, r6
 8012614:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8012618:	10de      	asrs	r6, r3, #3
 801261a:	b2c9      	uxtb	r1, r1
 801261c:	00db      	lsls	r3, r3, #3
 801261e:	fb1e fe0c 	smulbb	lr, lr, ip
 8012622:	fb11 f10c 	smulbb	r1, r1, ip
 8012626:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801262a:	b2db      	uxtb	r3, r3
 801262c:	b2bf      	uxth	r7, r7
 801262e:	fb06 e602 	mla	r6, r6, r2, lr
 8012632:	fb03 1302 	mla	r3, r3, r2, r1
 8012636:	b2b6      	uxth	r6, r6
 8012638:	b29b      	uxth	r3, r3
 801263a:	1c79      	adds	r1, r7, #1
 801263c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8012640:	f106 0e01 	add.w	lr, r6, #1
 8012644:	1c59      	adds	r1, r3, #1
 8012646:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801264a:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 801264e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012652:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8012656:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801265a:	430f      	orrs	r7, r1
 801265c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8012660:	ea47 070e 	orr.w	r7, r7, lr
 8012664:	f82a 7b02 	strh.w	r7, [sl], #2
 8012668:	e7bc      	b.n	80125e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x134>
 801266a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801266c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801266e:	881b      	ldrh	r3, [r3, #0]
 8012670:	1b5b      	subs	r3, r3, r5
 8012672:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8012676:	4418      	add	r0, r3
 8012678:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 801267c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801267e:	1b5b      	subs	r3, r3, r5
 8012680:	440b      	add	r3, r1
 8012682:	441c      	add	r4, r3
 8012684:	f109 0901 	add.w	r9, r9, #1
 8012688:	e7a8      	b.n	80125dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x12c>
 801268a:	8833      	ldrh	r3, [r6, #0]
 801268c:	1b5b      	subs	r3, r3, r5
 801268e:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 8012692:	4418      	add	r0, r3
 8012694:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8012698:	1b5b      	subs	r3, r3, r5
 801269a:	4413      	add	r3, r2
 801269c:	441c      	add	r4, r3
 801269e:	3101      	adds	r1, #1
 80126a0:	e782      	b.n	80125a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xf8>
 80126a2:	4b07      	ldr	r3, [pc, #28]	; (80126c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>)
 80126a4:	6818      	ldr	r0, [r3, #0]
 80126a6:	6803      	ldr	r3, [r0, #0]
 80126a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80126aa:	4798      	blx	r3
 80126ac:	e760      	b.n	8012570 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 80126ae:	bf00      	nop
 80126b0:	0801e2c1 	.word	0x0801e2c1
 80126b4:	0801e958 	.word	0x0801e958
 80126b8:	0801e507 	.word	0x0801e507
 80126bc:	200268fa 	.word	0x200268fa
 80126c0:	20026900 	.word	0x20026900

080126c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80126c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80126c8:	4616      	mov	r6, r2
 80126ca:	880a      	ldrh	r2, [r1, #0]
 80126cc:	b093      	sub	sp, #76	; 0x4c
 80126ce:	2a01      	cmp	r2, #1
 80126d0:	4681      	mov	r9, r0
 80126d2:	4688      	mov	r8, r1
 80126d4:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80126d8:	d006      	beq.n	80126e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 80126da:	4b6c      	ldr	r3, [pc, #432]	; (801288c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80126dc:	4a6c      	ldr	r2, [pc, #432]	; (8012890 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 80126de:	486d      	ldr	r0, [pc, #436]	; (8012894 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>)
 80126e0:	f240 11a1 	movw	r1, #417	; 0x1a1
 80126e4:	f008 f97e 	bl	801a9e4 <__assert_func>
 80126e8:	f1ba 0f00 	cmp.w	sl, #0
 80126ec:	d04a      	beq.n	8012784 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80126ee:	6830      	ldr	r0, [r6, #0]
 80126f0:	6871      	ldr	r1, [r6, #4]
 80126f2:	4d69      	ldr	r5, [pc, #420]	; (8012898 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 80126f4:	ac0e      	add	r4, sp, #56	; 0x38
 80126f6:	c403      	stmia	r4!, {r0, r1}
 80126f8:	6818      	ldr	r0, [r3, #0]
 80126fa:	6859      	ldr	r1, [r3, #4]
 80126fc:	ac10      	add	r4, sp, #64	; 0x40
 80126fe:	c403      	stmia	r4!, {r0, r1}
 8012700:	a80e      	add	r0, sp, #56	; 0x38
 8012702:	f7fa fda5 	bl	800d250 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012706:	4631      	mov	r1, r6
 8012708:	a810      	add	r0, sp, #64	; 0x40
 801270a:	f7fa fd89 	bl	800d220 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801270e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012712:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012716:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801271a:	6828      	ldr	r0, [r5, #0]
 801271c:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
 8012720:	4c5e      	ldr	r4, [pc, #376]	; (801289c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8012722:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012726:	4489      	add	r9, r1
 8012728:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801272c:	440a      	add	r2, r1
 801272e:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012732:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012736:	4413      	add	r3, r2
 8012738:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801273c:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8012740:	930a      	str	r3, [sp, #40]	; 0x28
 8012742:	6803      	ldr	r3, [r0, #0]
 8012744:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012748:	4798      	blx	r3
 801274a:	2801      	cmp	r0, #1
 801274c:	d11d      	bne.n	801278a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 801274e:	220b      	movs	r2, #11
 8012750:	2100      	movs	r1, #0
 8012752:	e9cd 2107 	strd	r2, r1, [sp, #28]
 8012756:	8822      	ldrh	r2, [r4, #0]
 8012758:	f8cd a010 	str.w	sl, [sp, #16]
 801275c:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8012760:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8012764:	9203      	str	r2, [sp, #12]
 8012766:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801276a:	9202      	str	r2, [sp, #8]
 801276c:	b2b6      	uxth	r6, r6
 801276e:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8012772:	9200      	str	r2, [sp, #0]
 8012774:	9601      	str	r6, [sp, #4]
 8012776:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801277a:	6828      	ldr	r0, [r5, #0]
 801277c:	4642      	mov	r2, r8
 801277e:	4649      	mov	r1, r9
 8012780:	f7f9 ff00 	bl	800c584 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8012784:	b013      	add	sp, #76	; 0x4c
 8012786:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801278a:	6828      	ldr	r0, [r5, #0]
 801278c:	6803      	ldr	r3, [r0, #0]
 801278e:	6a1b      	ldr	r3, [r3, #32]
 8012790:	4798      	blx	r3
 8012792:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8012796:	8823      	ldrh	r3, [r4, #0]
 8012798:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801279c:	940d      	str	r4, [sp, #52]	; 0x34
 801279e:	fb01 2303 	mla	r3, r1, r3, r2
 80127a2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80127a6:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 80127aa:	930b      	str	r3, [sp, #44]	; 0x2c
 80127ac:	ea6f 010a 	mvn.w	r1, sl
 80127b0:	005b      	lsls	r3, r3, #1
 80127b2:	930c      	str	r3, [sp, #48]	; 0x30
 80127b4:	f04f 0e00 	mov.w	lr, #0
 80127b8:	b2c9      	uxtb	r1, r1
 80127ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80127bc:	459e      	cmp	lr, r3
 80127be:	da5f      	bge.n	8012880 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80127c0:	2700      	movs	r7, #0
 80127c2:	fa1f fb8a 	uxth.w	fp, sl
 80127c6:	42b7      	cmp	r7, r6
 80127c8:	da4a      	bge.n	8012860 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 80127ca:	f819 3007 	ldrb.w	r3, [r9, r7]
 80127ce:	2203      	movs	r2, #3
 80127d0:	2404      	movs	r4, #4
 80127d2:	fb12 4303 	smlabb	r3, r2, r3, r4
 80127d6:	eb08 0403 	add.w	r4, r8, r3
 80127da:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80127de:	78a2      	ldrb	r2, [r4, #2]
 80127e0:	7865      	ldrb	r5, [r4, #1]
 80127e2:	f818 c003 	ldrb.w	ip, [r8, r3]
 80127e6:	d10c      	bne.n	8012802 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x13e>
 80127e8:	4b2d      	ldr	r3, [pc, #180]	; (80128a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 80127ea:	00ed      	lsls	r5, r5, #3
 80127ec:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 80127f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80127f4:	432a      	orrs	r2, r5
 80127f6:	ea42 02dc 	orr.w	r2, r2, ip, lsr #3
 80127fa:	f820 2017 	strh.w	r2, [r0, r7, lsl #1]
 80127fe:	3701      	adds	r7, #1
 8012800:	e7e1      	b.n	80127c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x102>
 8012802:	f830 3017 	ldrh.w	r3, [r0, r7, lsl #1]
 8012806:	121c      	asrs	r4, r3, #8
 8012808:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801280c:	fb12 f20b 	smulbb	r2, r2, fp
 8012810:	fb04 2201 	mla	r2, r4, r1, r2
 8012814:	10dc      	asrs	r4, r3, #3
 8012816:	00db      	lsls	r3, r3, #3
 8012818:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801281c:	b2db      	uxtb	r3, r3
 801281e:	fb15 f50b 	smulbb	r5, r5, fp
 8012822:	fb1c fc0b 	smulbb	ip, ip, fp
 8012826:	b292      	uxth	r2, r2
 8012828:	fb04 5501 	mla	r5, r4, r1, r5
 801282c:	fb03 cc01 	mla	ip, r3, r1, ip
 8012830:	b2ad      	uxth	r5, r5
 8012832:	fa1f fc8c 	uxth.w	ip, ip
 8012836:	1c53      	adds	r3, r2, #1
 8012838:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801283c:	1c6c      	adds	r4, r5, #1
 801283e:	f10c 0301 	add.w	r3, ip, #1
 8012842:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8012846:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 801284a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801284e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8012852:	096d      	lsrs	r5, r5, #5
 8012854:	ea42 020c 	orr.w	r2, r2, ip
 8012858:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801285c:	432a      	orrs	r2, r5
 801285e:	e7cc      	b.n	80127fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x136>
 8012860:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012862:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8012864:	881b      	ldrh	r3, [r3, #0]
 8012866:	1b9b      	subs	r3, r3, r6
 8012868:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801286c:	4418      	add	r0, r3
 801286e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8012872:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012874:	1b9b      	subs	r3, r3, r6
 8012876:	4413      	add	r3, r2
 8012878:	4499      	add	r9, r3
 801287a:	f10e 0e01 	add.w	lr, lr, #1
 801287e:	e79c      	b.n	80127ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf6>
 8012880:	4b05      	ldr	r3, [pc, #20]	; (8012898 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 8012882:	6818      	ldr	r0, [r3, #0]
 8012884:	6803      	ldr	r3, [r0, #0]
 8012886:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012888:	4798      	blx	r3
 801288a:	e77b      	b.n	8012784 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 801288c:	0801e30f 	.word	0x0801e30f
 8012890:	0801e9e1 	.word	0x0801e9e1
 8012894:	0801e507 	.word	0x0801e507
 8012898:	20026900 	.word	0x20026900
 801289c:	200268fa 	.word	0x200268fa
 80128a0:	fffff800 	.word	0xfffff800

080128a4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80128a4:	b430      	push	{r4, r5}
 80128a6:	780d      	ldrb	r5, [r1, #0]
 80128a8:	f89d 4008 	ldrb.w	r4, [sp, #8]
 80128ac:	2d01      	cmp	r5, #1
 80128ae:	d00a      	beq.n	80128c6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 80128b0:	d305      	bcc.n	80128be <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 80128b2:	2d02      	cmp	r5, #2
 80128b4:	d10b      	bne.n	80128ce <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 80128b6:	9402      	str	r4, [sp, #8]
 80128b8:	bc30      	pop	{r4, r5}
 80128ba:	f7ff bdf9 	b.w	80124b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80128be:	9402      	str	r4, [sp, #8]
 80128c0:	bc30      	pop	{r4, r5}
 80128c2:	f7ff bcfd 	b.w	80122c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80128c6:	9402      	str	r4, [sp, #8]
 80128c8:	bc30      	pop	{r4, r5}
 80128ca:	f7ff befb 	b.w	80126c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80128ce:	bc30      	pop	{r4, r5}
 80128d0:	4770      	bx	lr
	...

080128d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80128d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128d8:	4605      	mov	r5, r0
 80128da:	b089      	sub	sp, #36	; 0x24
 80128dc:	6810      	ldr	r0, [r2, #0]
 80128de:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 80128e2:	460c      	mov	r4, r1
 80128e4:	6851      	ldr	r1, [r2, #4]
 80128e6:	ae04      	add	r6, sp, #16
 80128e8:	c603      	stmia	r6!, {r0, r1}
 80128ea:	6818      	ldr	r0, [r3, #0]
 80128ec:	6859      	ldr	r1, [r3, #4]
 80128ee:	ae06      	add	r6, sp, #24
 80128f0:	4617      	mov	r7, r2
 80128f2:	c603      	stmia	r6!, {r0, r1}
 80128f4:	a804      	add	r0, sp, #16
 80128f6:	f7fa fcab 	bl	800d250 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80128fa:	4639      	mov	r1, r7
 80128fc:	a806      	add	r0, sp, #24
 80128fe:	f7fa fc8f 	bl	800d220 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012902:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8012906:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801290a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801290e:	f9bd 801c 	ldrsh.w	r8, [sp, #28]
 8012912:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012916:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 801291a:	440c      	add	r4, r1
 801291c:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8012920:	440a      	add	r2, r1
 8012922:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012926:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801292a:	4413      	add	r3, r2
 801292c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012930:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012934:	9300      	str	r3, [sp, #0]
 8012936:	4b80      	ldr	r3, [pc, #512]	; (8012b38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8012938:	6818      	ldr	r0, [r3, #0]
 801293a:	6803      	ldr	r3, [r0, #0]
 801293c:	6a1b      	ldr	r3, [r3, #32]
 801293e:	4798      	blx	r3
 8012940:	4b7e      	ldr	r3, [pc, #504]	; (8012b3c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x268>)
 8012942:	f9bd 601a 	ldrsh.w	r6, [sp, #26]
 8012946:	881a      	ldrh	r2, [r3, #0]
 8012948:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 801294c:	fb06 1202 	mla	r2, r6, r2, r1
 8012950:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012954:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012958:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
 801295c:	b212      	sxth	r2, r2
 801295e:	d117      	bne.n	8012990 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xbc>
 8012960:	9201      	str	r2, [sp, #4]
 8012962:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 8012966:	f04f 0a00 	mov.w	sl, #0
 801296a:	9302      	str	r3, [sp, #8]
 801296c:	9b00      	ldr	r3, [sp, #0]
 801296e:	459a      	cmp	sl, r3
 8012970:	f280 80d9 	bge.w	8012b26 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 8012974:	2100      	movs	r1, #0
 8012976:	4541      	cmp	r1, r8
 8012978:	f280 80c1 	bge.w	8012afe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x22a>
 801297c:	5c63      	ldrb	r3, [r4, r1]
 801297e:	b12b      	cbz	r3, 801298c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8012980:	2bff      	cmp	r3, #255	; 0xff
 8012982:	f835 e011 	ldrh.w	lr, [r5, r1, lsl #1]
 8012986:	d176      	bne.n	8012a76 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x1a2>
 8012988:	f820 e011 	strh.w	lr, [r0, r1, lsl #1]
 801298c:	3101      	adds	r1, #1
 801298e:	e7f2      	b.n	8012976 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa2>
 8012990:	9202      	str	r2, [sp, #8]
 8012992:	0052      	lsls	r2, r2, #1
 8012994:	9201      	str	r2, [sp, #4]
 8012996:	f04f 0b00 	mov.w	fp, #0
 801299a:	9303      	str	r3, [sp, #12]
 801299c:	9b00      	ldr	r3, [sp, #0]
 801299e:	459b      	cmp	fp, r3
 80129a0:	f280 80c1 	bge.w	8012b26 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 80129a4:	f04f 0c00 	mov.w	ip, #0
 80129a8:	45c4      	cmp	ip, r8
 80129aa:	da4f      	bge.n	8012a4c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x178>
 80129ac:	f814 300c 	ldrb.w	r3, [r4, ip]
 80129b0:	2b00      	cmp	r3, #0
 80129b2:	d048      	beq.n	8012a46 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 80129b4:	fb09 f303 	mul.w	r3, r9, r3
 80129b8:	1c5a      	adds	r2, r3, #1
 80129ba:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80129be:	121b      	asrs	r3, r3, #8
 80129c0:	d041      	beq.n	8012a46 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 80129c2:	f830 201c 	ldrh.w	r2, [r0, ip, lsl #1]
 80129c6:	f835 e01c 	ldrh.w	lr, [r5, ip, lsl #1]
 80129ca:	b29e      	uxth	r6, r3
 80129cc:	1211      	asrs	r1, r2, #8
 80129ce:	43db      	mvns	r3, r3
 80129d0:	b2db      	uxtb	r3, r3
 80129d2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80129d6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80129da:	fb11 f103 	smulbb	r1, r1, r3
 80129de:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80129e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80129e6:	00d2      	lsls	r2, r2, #3
 80129e8:	fb07 1706 	mla	r7, r7, r6, r1
 80129ec:	b2d2      	uxtb	r2, r2
 80129ee:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80129f2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80129f6:	fb12 f203 	smulbb	r2, r2, r3
 80129fa:	fa5f fe8e 	uxtb.w	lr, lr
 80129fe:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012a02:	fb0e 2206 	mla	r2, lr, r6, r2
 8012a06:	fb1a fa03 	smulbb	sl, sl, r3
 8012a0a:	b2bf      	uxth	r7, r7
 8012a0c:	b292      	uxth	r2, r2
 8012a0e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8012a12:	fb01 a106 	mla	r1, r1, r6, sl
 8012a16:	1c7b      	adds	r3, r7, #1
 8012a18:	f102 0a01 	add.w	sl, r2, #1
 8012a1c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8012a20:	eb0a 2a12 	add.w	sl, sl, r2, lsr #8
 8012a24:	b289      	uxth	r1, r1
 8012a26:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012a2a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012a2e:	ea47 070a 	orr.w	r7, r7, sl
 8012a32:	f101 0a01 	add.w	sl, r1, #1
 8012a36:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 8012a3a:	0949      	lsrs	r1, r1, #5
 8012a3c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012a40:	430f      	orrs	r7, r1
 8012a42:	f820 701c 	strh.w	r7, [r0, ip, lsl #1]
 8012a46:	f10c 0c01 	add.w	ip, ip, #1
 8012a4a:	e7ad      	b.n	80129a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xd4>
 8012a4c:	9b03      	ldr	r3, [sp, #12]
 8012a4e:	9a01      	ldr	r2, [sp, #4]
 8012a50:	881b      	ldrh	r3, [r3, #0]
 8012a52:	eba3 0308 	sub.w	r3, r3, r8
 8012a56:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012a5a:	4418      	add	r0, r3
 8012a5c:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012a60:	eba3 0308 	sub.w	r3, r3, r8
 8012a64:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8012a68:	4415      	add	r5, r2
 8012a6a:	9a02      	ldr	r2, [sp, #8]
 8012a6c:	4413      	add	r3, r2
 8012a6e:	441c      	add	r4, r3
 8012a70:	f10b 0b01 	add.w	fp, fp, #1
 8012a74:	e792      	b.n	801299c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xc8>
 8012a76:	f830 2011 	ldrh.w	r2, [r0, r1, lsl #1]
 8012a7a:	b29f      	uxth	r7, r3
 8012a7c:	1216      	asrs	r6, r2, #8
 8012a7e:	43db      	mvns	r3, r3
 8012a80:	b2db      	uxtb	r3, r3
 8012a82:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012a86:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012a8a:	fb16 f603 	smulbb	r6, r6, r3
 8012a8e:	ea4f 09e2 	mov.w	r9, r2, asr #3
 8012a92:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012a96:	00d2      	lsls	r2, r2, #3
 8012a98:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012a9c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012aa0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012aa4:	b2d2      	uxtb	r2, r2
 8012aa6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012aaa:	fa1f fc8c 	uxth.w	ip, ip
 8012aae:	fb19 f903 	smulbb	r9, r9, r3
 8012ab2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012ab6:	fa5f fe8e 	uxtb.w	lr, lr
 8012aba:	fb12 f203 	smulbb	r2, r2, r3
 8012abe:	fb06 9607 	mla	r6, r6, r7, r9
 8012ac2:	fb0e 2207 	mla	r2, lr, r7, r2
 8012ac6:	f10c 0901 	add.w	r9, ip, #1
 8012aca:	b292      	uxth	r2, r2
 8012acc:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8012ad0:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8012ad4:	f102 0c01 	add.w	ip, r2, #1
 8012ad8:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8012adc:	b2b6      	uxth	r6, r6
 8012ade:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012ae2:	ea49 0c02 	orr.w	ip, r9, r2
 8012ae6:	f106 0901 	add.w	r9, r6, #1
 8012aea:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8012aee:	0976      	lsrs	r6, r6, #5
 8012af0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012af4:	ea4c 0c06 	orr.w	ip, ip, r6
 8012af8:	f820 c011 	strh.w	ip, [r0, r1, lsl #1]
 8012afc:	e746      	b.n	801298c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8012afe:	9b02      	ldr	r3, [sp, #8]
 8012b00:	881b      	ldrh	r3, [r3, #0]
 8012b02:	eba3 0308 	sub.w	r3, r3, r8
 8012b06:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 8012b0a:	4418      	add	r0, r3
 8012b0c:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012b10:	eba3 0308 	sub.w	r3, r3, r8
 8012b14:	eb0b 0243 	add.w	r2, fp, r3, lsl #1
 8012b18:	4415      	add	r5, r2
 8012b1a:	9a01      	ldr	r2, [sp, #4]
 8012b1c:	4413      	add	r3, r2
 8012b1e:	441c      	add	r4, r3
 8012b20:	f10a 0a01 	add.w	sl, sl, #1
 8012b24:	e722      	b.n	801296c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x98>
 8012b26:	4b04      	ldr	r3, [pc, #16]	; (8012b38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8012b28:	6818      	ldr	r0, [r3, #0]
 8012b2a:	6803      	ldr	r3, [r0, #0]
 8012b2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012b2e:	4798      	blx	r3
 8012b30:	b009      	add	sp, #36	; 0x24
 8012b32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b36:	bf00      	nop
 8012b38:	20026900 	.word	0x20026900
 8012b3c:	200268fa 	.word	0x200268fa

08012b40 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8012b40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b44:	b089      	sub	sp, #36	; 0x24
 8012b46:	4682      	mov	sl, r0
 8012b48:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8012b4c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012b4e:	460d      	mov	r5, r1
 8012b50:	4691      	mov	r9, r2
 8012b52:	4698      	mov	r8, r3
 8012b54:	b3ae      	cbz	r6, 8012bc2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012b56:	4608      	mov	r0, r1
 8012b58:	f7fc fa8c 	bl	800f074 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012b5c:	4607      	mov	r7, r0
 8012b5e:	4628      	mov	r0, r5
 8012b60:	f7fc fac2 	bl	800f0e8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012b64:	f8ad 000e 	strh.w	r0, [sp, #14]
 8012b68:	4628      	mov	r0, r5
 8012b6a:	f8ad 9008 	strh.w	r9, [sp, #8]
 8012b6e:	f8ad 800a 	strh.w	r8, [sp, #10]
 8012b72:	f8ad 700c 	strh.w	r7, [sp, #12]
 8012b76:	f7fc fc09 	bl	800f38c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012b7a:	b178      	cbz	r0, 8012b9c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8012b7c:	4628      	mov	r0, r5
 8012b7e:	f7fc fc05 	bl	800f38c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012b82:	2802      	cmp	r0, #2
 8012b84:	d00a      	beq.n	8012b9c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8012b86:	4628      	mov	r0, r5
 8012b88:	f7fc fc00 	bl	800f38c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012b8c:	280b      	cmp	r0, #11
 8012b8e:	d005      	beq.n	8012b9c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8012b90:	4b69      	ldr	r3, [pc, #420]	; (8012d38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8012b92:	4a6a      	ldr	r2, [pc, #424]	; (8012d3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 8012b94:	486a      	ldr	r0, [pc, #424]	; (8012d40 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 8012b96:	214f      	movs	r1, #79	; 0x4f
 8012b98:	f007 ff24 	bl	801a9e4 <__assert_func>
 8012b9c:	4628      	mov	r0, r5
 8012b9e:	f7fc fb71 	bl	800f284 <_ZNK8touchgfx6Bitmap7getDataEv>
 8012ba2:	4607      	mov	r7, r0
 8012ba4:	4628      	mov	r0, r5
 8012ba6:	f7fc fb9f 	bl	800f2e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8012baa:	4681      	mov	r9, r0
 8012bac:	4628      	mov	r0, r5
 8012bae:	f7fc fbed 	bl	800f38c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012bb2:	2802      	cmp	r0, #2
 8012bb4:	d108      	bne.n	8012bc8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8012bb6:	4633      	mov	r3, r6
 8012bb8:	4622      	mov	r2, r4
 8012bba:	a902      	add	r1, sp, #8
 8012bbc:	4638      	mov	r0, r7
 8012bbe:	f7ff fa6d 	bl	801209c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012bc2:	b009      	add	sp, #36	; 0x24
 8012bc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012bc8:	4628      	mov	r0, r5
 8012bca:	f7fc fbdf 	bl	800f38c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012bce:	280b      	cmp	r0, #11
 8012bd0:	d107      	bne.n	8012be2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 8012bd2:	9600      	str	r6, [sp, #0]
 8012bd4:	4623      	mov	r3, r4
 8012bd6:	aa02      	add	r2, sp, #8
 8012bd8:	4649      	mov	r1, r9
 8012bda:	4638      	mov	r0, r7
 8012bdc:	f7ff fe62 	bl	80128a4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8012be0:	e7ef      	b.n	8012bc2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012be2:	4628      	mov	r0, r5
 8012be4:	f7fc fb14 	bl	800f210 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8012be8:	b950      	cbnz	r0, 8012c00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8012bea:	e9cd 6000 	strd	r6, r0, [sp]
 8012bee:	f8da 3000 	ldr.w	r3, [sl]
 8012bf2:	aa02      	add	r2, sp, #8
 8012bf4:	691d      	ldr	r5, [r3, #16]
 8012bf6:	4639      	mov	r1, r7
 8012bf8:	4623      	mov	r3, r4
 8012bfa:	4650      	mov	r0, sl
 8012bfc:	47a8      	blx	r5
 8012bfe:	e7e0      	b.n	8012bc2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012c00:	f10d 0818 	add.w	r8, sp, #24
 8012c04:	4629      	mov	r1, r5
 8012c06:	4640      	mov	r0, r8
 8012c08:	f7fc faa8 	bl	800f15c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012c0c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012c10:	ad04      	add	r5, sp, #16
 8012c12:	e885 0003 	stmia.w	r5, {r0, r1}
 8012c16:	4628      	mov	r0, r5
 8012c18:	4621      	mov	r1, r4
 8012c1a:	f7f9 f865 	bl	800bce8 <_ZN8touchgfx4RectaNERKS0_>
 8012c1e:	4628      	mov	r0, r5
 8012c20:	f7f9 f8a6 	bl	800bd70 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012c24:	b138      	cbz	r0, 8012c36 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 8012c26:	9600      	str	r6, [sp, #0]
 8012c28:	4623      	mov	r3, r4
 8012c2a:	aa02      	add	r2, sp, #8
 8012c2c:	4649      	mov	r1, r9
 8012c2e:	4638      	mov	r0, r7
 8012c30:	f7ff fe50 	bl	80128d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012c34:	e7c5      	b.n	8012bc2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012c36:	e9cd 6000 	strd	r6, r0, [sp]
 8012c3a:	f8da 3000 	ldr.w	r3, [sl]
 8012c3e:	aa02      	add	r2, sp, #8
 8012c40:	f8d3 b010 	ldr.w	fp, [r3, #16]
 8012c44:	4639      	mov	r1, r7
 8012c46:	462b      	mov	r3, r5
 8012c48:	4650      	mov	r0, sl
 8012c4a:	47d8      	blx	fp
 8012c4c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012c50:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012c54:	4293      	cmp	r3, r2
 8012c56:	dd13      	ble.n	8012c80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8012c58:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012c5c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012c60:	f8ad 0018 	strh.w	r0, [sp, #24]
 8012c64:	1a9b      	subs	r3, r3, r2
 8012c66:	f8ad 201a 	strh.w	r2, [sp, #26]
 8012c6a:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012c6e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012c72:	9600      	str	r6, [sp, #0]
 8012c74:	4643      	mov	r3, r8
 8012c76:	aa02      	add	r2, sp, #8
 8012c78:	4649      	mov	r1, r9
 8012c7a:	4638      	mov	r0, r7
 8012c7c:	f7ff fe2a 	bl	80128d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012c80:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8012c84:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012c88:	4293      	cmp	r3, r2
 8012c8a:	dd13      	ble.n	8012cb4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8012c8c:	1a9b      	subs	r3, r3, r2
 8012c8e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8012c92:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8012c96:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012c9a:	f8ad 001a 	strh.w	r0, [sp, #26]
 8012c9e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012ca2:	f8ad 101e 	strh.w	r1, [sp, #30]
 8012ca6:	9600      	str	r6, [sp, #0]
 8012ca8:	4643      	mov	r3, r8
 8012caa:	aa02      	add	r2, sp, #8
 8012cac:	4649      	mov	r1, r9
 8012cae:	4638      	mov	r0, r7
 8012cb0:	f7ff fe10 	bl	80128d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012cb4:	88a2      	ldrh	r2, [r4, #4]
 8012cb6:	8823      	ldrh	r3, [r4, #0]
 8012cb8:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8012cbc:	4413      	add	r3, r2
 8012cbe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012cc2:	440a      	add	r2, r1
 8012cc4:	b29b      	uxth	r3, r3
 8012cc6:	b292      	uxth	r2, r2
 8012cc8:	b211      	sxth	r1, r2
 8012cca:	b218      	sxth	r0, r3
 8012ccc:	4288      	cmp	r0, r1
 8012cce:	dd13      	ble.n	8012cf8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8012cd0:	1a9b      	subs	r3, r3, r2
 8012cd2:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8012cd6:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 8012cda:	f8ad 1018 	strh.w	r1, [sp, #24]
 8012cde:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012ce2:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012ce6:	9600      	str	r6, [sp, #0]
 8012ce8:	4643      	mov	r3, r8
 8012cea:	aa02      	add	r2, sp, #8
 8012cec:	4649      	mov	r1, r9
 8012cee:	4638      	mov	r0, r7
 8012cf0:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012cf4:	f7ff fdee 	bl	80128d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012cf8:	88e2      	ldrh	r2, [r4, #6]
 8012cfa:	8863      	ldrh	r3, [r4, #2]
 8012cfc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8012d00:	4413      	add	r3, r2
 8012d02:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012d06:	440a      	add	r2, r1
 8012d08:	b29b      	uxth	r3, r3
 8012d0a:	b292      	uxth	r2, r2
 8012d0c:	b211      	sxth	r1, r2
 8012d0e:	b218      	sxth	r0, r3
 8012d10:	4288      	cmp	r0, r1
 8012d12:	f77f af56 	ble.w	8012bc2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012d16:	f9b4 5000 	ldrsh.w	r5, [r4]
 8012d1a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012d1e:	f8ad 5018 	strh.w	r5, [sp, #24]
 8012d22:	1a9b      	subs	r3, r3, r2
 8012d24:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012d28:	f8ad 101a 	strh.w	r1, [sp, #26]
 8012d2c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8012d30:	9600      	str	r6, [sp, #0]
 8012d32:	4643      	mov	r3, r8
 8012d34:	e779      	b.n	8012c2a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 8012d36:	bf00      	nop
 8012d38:	0801e35d 	.word	0x0801e35d
 8012d3c:	0801ea6a 	.word	0x0801ea6a
 8012d40:	0801e507 	.word	0x0801e507

08012d44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8012d44:	b508      	push	{r3, lr}
 8012d46:	b180      	cbz	r0, 8012d6a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8012d48:	2902      	cmp	r1, #2
 8012d4a:	d014      	beq.n	8012d76 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8012d4c:	2903      	cmp	r1, #3
 8012d4e:	d01d      	beq.n	8012d8c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8012d50:	2901      	cmp	r1, #1
 8012d52:	d101      	bne.n	8012d58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8012d54:	2001      	movs	r0, #1
 8012d56:	bd08      	pop	{r3, pc}
 8012d58:	4b0e      	ldr	r3, [pc, #56]	; (8012d94 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8012d5a:	8818      	ldrh	r0, [r3, #0]
 8012d5c:	b990      	cbnz	r0, 8012d84 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8012d5e:	4b0e      	ldr	r3, [pc, #56]	; (8012d98 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8012d60:	4a0e      	ldr	r2, [pc, #56]	; (8012d9c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8012d62:	480f      	ldr	r0, [pc, #60]	; (8012da0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8012d64:	21d7      	movs	r1, #215	; 0xd7
 8012d66:	f007 fe3d 	bl	801a9e4 <__assert_func>
 8012d6a:	2902      	cmp	r1, #2
 8012d6c:	d00e      	beq.n	8012d8c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8012d6e:	2903      	cmp	r1, #3
 8012d70:	d0f2      	beq.n	8012d58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8012d72:	2901      	cmp	r1, #1
 8012d74:	d1ee      	bne.n	8012d54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8012d76:	4b07      	ldr	r3, [pc, #28]	; (8012d94 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8012d78:	8818      	ldrh	r0, [r3, #0]
 8012d7a:	2800      	cmp	r0, #0
 8012d7c:	d0ef      	beq.n	8012d5e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8012d7e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012d82:	e7e8      	b.n	8012d56 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012d84:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012d88:	4240      	negs	r0, r0
 8012d8a:	e7e4      	b.n	8012d56 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012d8c:	f04f 30ff 	mov.w	r0, #4294967295
 8012d90:	e7e1      	b.n	8012d56 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012d92:	bf00      	nop
 8012d94:	200268fa 	.word	0x200268fa
 8012d98:	0801e661 	.word	0x0801e661
 8012d9c:	0801ebe7 	.word	0x0801ebe7
 8012da0:	0801e6a3 	.word	0x0801e6a3

08012da4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8012da4:	b508      	push	{r3, lr}
 8012da6:	b180      	cbz	r0, 8012dca <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8012da8:	2902      	cmp	r1, #2
 8012daa:	d014      	beq.n	8012dd6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8012dac:	2903      	cmp	r1, #3
 8012dae:	d018      	beq.n	8012de2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8012db0:	2901      	cmp	r1, #1
 8012db2:	d001      	beq.n	8012db8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012db4:	2001      	movs	r0, #1
 8012db6:	e013      	b.n	8012de0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012db8:	4b0e      	ldr	r3, [pc, #56]	; (8012df4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8012dba:	8818      	ldrh	r0, [r3, #0]
 8012dbc:	b970      	cbnz	r0, 8012ddc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8012dbe:	4b0e      	ldr	r3, [pc, #56]	; (8012df8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8012dc0:	4a0e      	ldr	r2, [pc, #56]	; (8012dfc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8012dc2:	480f      	ldr	r0, [pc, #60]	; (8012e00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8012dc4:	21d7      	movs	r1, #215	; 0xd7
 8012dc6:	f007 fe0d 	bl	801a9e4 <__assert_func>
 8012dca:	2902      	cmp	r1, #2
 8012dcc:	d009      	beq.n	8012de2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8012dce:	2903      	cmp	r1, #3
 8012dd0:	d0f0      	beq.n	8012db4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8012dd2:	2901      	cmp	r1, #1
 8012dd4:	d1f0      	bne.n	8012db8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012dd6:	f04f 30ff 	mov.w	r0, #4294967295
 8012dda:	e001      	b.n	8012de0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012ddc:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012de0:	bd08      	pop	{r3, pc}
 8012de2:	4b04      	ldr	r3, [pc, #16]	; (8012df4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8012de4:	8818      	ldrh	r0, [r3, #0]
 8012de6:	2800      	cmp	r0, #0
 8012de8:	d0e9      	beq.n	8012dbe <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8012dea:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012dee:	4240      	negs	r0, r0
 8012df0:	e7f6      	b.n	8012de0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012df2:	bf00      	nop
 8012df4:	200268fa 	.word	0x200268fa
 8012df8:	0801e661 	.word	0x0801e661
 8012dfc:	0801ebe7 	.word	0x0801ebe7
 8012e00:	0801e6a3 	.word	0x0801e6a3

08012e04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8012e04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e08:	b097      	sub	sp, #92	; 0x5c
 8012e0a:	9109      	str	r1, [sp, #36]	; 0x24
 8012e0c:	a912      	add	r1, sp, #72	; 0x48
 8012e0e:	e881 000c 	stmia.w	r1, {r2, r3}
 8012e12:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 8012e16:	9306      	str	r3, [sp, #24]
 8012e18:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8012e1c:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8012e20:	930e      	str	r3, [sp, #56]	; 0x38
 8012e22:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 8012e26:	930a      	str	r3, [sp, #40]	; 0x28
 8012e28:	7b4b      	ldrb	r3, [r1, #13]
 8012e2a:	798f      	ldrb	r7, [r1, #6]
 8012e2c:	f9bd 4080 	ldrsh.w	r4, [sp, #128]	; 0x80
 8012e30:	f8bd 6088 	ldrh.w	r6, [sp, #136]	; 0x88
 8012e34:	f8bd 508c 	ldrh.w	r5, [sp, #140]	; 0x8c
 8012e38:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8012e3c:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8012e40:	0158      	lsls	r0, r3, #5
 8012e42:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8012e46:	4338      	orrs	r0, r7
 8012e48:	9008      	str	r0, [sp, #32]
 8012e4a:	f000 8149 	beq.w	80130e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8012e4e:	011b      	lsls	r3, r3, #4
 8012e50:	79c8      	ldrb	r0, [r1, #7]
 8012e52:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012e56:	4303      	orrs	r3, r0
 8012e58:	9307      	str	r3, [sp, #28]
 8012e5a:	f000 8141 	beq.w	80130e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8012e5e:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8012e62:	b29b      	uxth	r3, r3
 8012e64:	2e00      	cmp	r6, #0
 8012e66:	f000 80e5 	beq.w	8013034 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x230>
 8012e6a:	1af6      	subs	r6, r6, r3
 8012e6c:	b2b6      	uxth	r6, r6
 8012e6e:	0433      	lsls	r3, r6, #16
 8012e70:	d502      	bpl.n	8012e78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8012e72:	1ba4      	subs	r4, r4, r6
 8012e74:	b224      	sxth	r4, r4
 8012e76:	2600      	movs	r6, #0
 8012e78:	f9b2 1000 	ldrsh.w	r1, [r2]
 8012e7c:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 8012e80:	f8bd 7020 	ldrh.w	r7, [sp, #32]
 8012e84:	428c      	cmp	r4, r1
 8012e86:	b28b      	uxth	r3, r1
 8012e88:	bfbf      	itttt	lt
 8012e8a:	18f6      	addlt	r6, r6, r3
 8012e8c:	1b34      	sublt	r4, r6, r4
 8012e8e:	b2a6      	uxthlt	r6, r4
 8012e90:	460c      	movlt	r4, r1
 8012e92:	8891      	ldrh	r1, [r2, #4]
 8012e94:	440b      	add	r3, r1
 8012e96:	b21b      	sxth	r3, r3
 8012e98:	930d      	str	r3, [sp, #52]	; 0x34
 8012e9a:	88d3      	ldrh	r3, [r2, #6]
 8012e9c:	9a06      	ldr	r2, [sp, #24]
 8012e9e:	449a      	add	sl, r3
 8012ea0:	fa0f f38a 	sxth.w	r3, sl
 8012ea4:	930c      	str	r3, [sp, #48]	; 0x30
 8012ea6:	4bb5      	ldr	r3, [pc, #724]	; (801317c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 8012ea8:	f8bd a01c 	ldrh.w	sl, [sp, #28]
 8012eac:	f893 9000 	ldrb.w	r9, [r3]
 8012eb0:	f109 3cff 	add.w	ip, r9, #4294967295
 8012eb4:	f1dc 0300 	rsbs	r3, ip, #0
 8012eb8:	eb43 030c 	adc.w	r3, r3, ip
 8012ebc:	930b      	str	r3, [sp, #44]	; 0x2c
 8012ebe:	4621      	mov	r1, r4
 8012ec0:	465b      	mov	r3, fp
 8012ec2:	a812      	add	r0, sp, #72	; 0x48
 8012ec4:	f7fa f89d 	bl	800d002 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8012ec8:	4621      	mov	r1, r4
 8012eca:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8012ece:	465b      	mov	r3, fp
 8012ed0:	9a06      	ldr	r2, [sp, #24]
 8012ed2:	a812      	add	r0, sp, #72	; 0x48
 8012ed4:	f7fa f8ad 	bl	800d032 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8012ed8:	a916      	add	r1, sp, #88	; 0x58
 8012eda:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8012ede:	a815      	add	r0, sp, #84	; 0x54
 8012ee0:	f7fa f988 	bl	800d1f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8012ee4:	f1bb 0f00 	cmp.w	fp, #0
 8012ee8:	f040 80a7 	bne.w	801303a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x236>
 8012eec:	f1b9 0f01 	cmp.w	r9, #1
 8012ef0:	f040 80ab 	bne.w	801304a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x246>
 8012ef4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012ef6:	2b00      	cmp	r3, #0
 8012ef8:	f040 80f7 	bne.w	80130ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e6>
 8012efc:	4ba0      	ldr	r3, [pc, #640]	; (8013180 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 8012efe:	6818      	ldr	r0, [r3, #0]
 8012f00:	6803      	ldr	r3, [r0, #0]
 8012f02:	6a1b      	ldr	r3, [r3, #32]
 8012f04:	4798      	blx	r3
 8012f06:	4a9f      	ldr	r2, [pc, #636]	; (8013184 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8012f08:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8012f0c:	8811      	ldrh	r1, [r2, #0]
 8012f0e:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8012f12:	fb01 2303 	mla	r3, r1, r3, r2
 8012f16:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012f1a:	f04f 0901 	mov.w	r9, #1
 8012f1e:	9307      	str	r3, [sp, #28]
 8012f20:	fa09 f308 	lsl.w	r3, r9, r8
 8012f24:	3b01      	subs	r3, #1
 8012f26:	b2db      	uxtb	r3, r3
 8012f28:	45c8      	cmp	r8, r9
 8012f2a:	930f      	str	r3, [sp, #60]	; 0x3c
 8012f2c:	f000 80df 	beq.w	80130ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ea>
 8012f30:	f1b8 0f02 	cmp.w	r8, #2
 8012f34:	f000 8153 	beq.w	80131de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3da>
 8012f38:	f1b8 0f04 	cmp.w	r8, #4
 8012f3c:	f000 8146 	beq.w	80131cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c8>
 8012f40:	b906      	cbnz	r6, 8012f44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x140>
 8012f42:	b175      	cbz	r5, 8012f62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15e>
 8012f44:	fb17 6305 	smlabb	r3, r7, r5, r6
 8012f48:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8012f4a:	fb13 f308 	smulbb	r3, r3, r8
 8012f4e:	b29b      	uxth	r3, r3
 8012f50:	ebaa 0a05 	sub.w	sl, sl, r5
 8012f54:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 8012f58:	9226      	str	r2, [sp, #152]	; 0x98
 8012f5a:	fa1f fa8a 	uxth.w	sl, sl
 8012f5e:	f003 0507 	and.w	r5, r3, #7
 8012f62:	4659      	mov	r1, fp
 8012f64:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8012f66:	f7ff feed 	bl	8012d44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8012f6a:	4659      	mov	r1, fp
 8012f6c:	9010      	str	r0, [sp, #64]	; 0x40
 8012f6e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8012f70:	f7ff ff18 	bl	8012da4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8012f74:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012f76:	9a06      	ldr	r2, [sp, #24]
 8012f78:	1a9a      	subs	r2, r3, r2
 8012f7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012f7c:	1ba4      	subs	r4, r4, r6
 8012f7e:	1b1c      	subs	r4, r3, r4
 8012f80:	9b08      	ldr	r3, [sp, #32]
 8012f82:	4592      	cmp	sl, r2
 8012f84:	bfa8      	it	ge
 8012f86:	4692      	movge	sl, r2
 8012f88:	429c      	cmp	r4, r3
 8012f8a:	bfd4      	ite	le
 8012f8c:	ebc6 0604 	rsble	r6, r6, r4
 8012f90:	ebc6 0603 	rsbgt	r6, r6, r3
 8012f94:	1bbf      	subs	r7, r7, r6
 8012f96:	fb08 f307 	mul.w	r3, r8, r7
 8012f9a:	930b      	str	r3, [sp, #44]	; 0x2c
 8012f9c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8012f9e:	781a      	ldrb	r2, [r3, #0]
 8012fa0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012fa2:	1219      	asrs	r1, r3, #8
 8012fa4:	f001 03f8 	and.w	r3, r1, #248	; 0xf8
 8012fa8:	930c      	str	r3, [sp, #48]	; 0x30
 8012faa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012fac:	f3c3 01cc 	ubfx	r1, r3, #3, #13
 8012fb0:	f001 03fc 	and.w	r3, r1, #252	; 0xfc
 8012fb4:	930d      	str	r3, [sp, #52]	; 0x34
 8012fb6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012fb8:	00d9      	lsls	r1, r3, #3
 8012fba:	f001 03f8 	and.w	r3, r1, #248	; 0xf8
 8012fbe:	930e      	str	r3, [sp, #56]	; 0x38
 8012fc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012fc2:	0059      	lsls	r1, r3, #1
 8012fc4:	fb03 0016 	mls	r0, r3, r6, r0
 8012fc8:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 8012fcc:	434b      	muls	r3, r1
 8012fce:	9106      	str	r1, [sp, #24]
 8012fd0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8012fd2:	412a      	asrs	r2, r5
 8012fd4:	b289      	uxth	r1, r1
 8012fd6:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8012fda:	b2d2      	uxtb	r2, r2
 8012fdc:	9110      	str	r1, [sp, #64]	; 0x40
 8012fde:	9311      	str	r3, [sp, #68]	; 0x44
 8012fe0:	f1ba 0f00 	cmp.w	sl, #0
 8012fe4:	f340 80e4 	ble.w	80131b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8012fe8:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8012fec:	46b6      	mov	lr, r6
 8012fee:	f1be 0f00 	cmp.w	lr, #0
 8012ff2:	f340 80c9 	ble.w	8013188 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>
 8012ff6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012ff8:	4013      	ands	r3, r2
 8012ffa:	d009      	beq.n	8013010 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x20c>
 8012ffc:	fb13 f309 	smulbb	r3, r3, r9
 8013000:	2bfe      	cmp	r3, #254	; 0xfe
 8013002:	dd77      	ble.n	80130f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>
 8013004:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013006:	29ff      	cmp	r1, #255	; 0xff
 8013008:	d174      	bne.n	80130f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>
 801300a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801300c:	f8ac 0000 	strh.w	r0, [ip]
 8013010:	4445      	add	r5, r8
 8013012:	b2ad      	uxth	r5, r5
 8013014:	2d07      	cmp	r5, #7
 8013016:	bf81      	itttt	hi
 8013018:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 801301a:	785a      	ldrbhi	r2, [r3, #1]
 801301c:	3301      	addhi	r3, #1
 801301e:	9326      	strhi	r3, [sp, #152]	; 0x98
 8013020:	9b06      	ldr	r3, [sp, #24]
 8013022:	bf9a      	itte	ls
 8013024:	fa42 f208 	asrls.w	r2, r2, r8
 8013028:	b2d2      	uxtbls	r2, r2
 801302a:	2500      	movhi	r5, #0
 801302c:	449c      	add	ip, r3
 801302e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013032:	e7dc      	b.n	8012fee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ea>
 8013034:	441c      	add	r4, r3
 8013036:	b224      	sxth	r4, r4
 8013038:	e71e      	b.n	8012e78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 801303a:	f1bb 0f01 	cmp.w	fp, #1
 801303e:	f47f af59 	bne.w	8012ef4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013042:	f1b9 0f01 	cmp.w	r9, #1
 8013046:	f47f af55 	bne.w	8012ef4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801304a:	f8df 9134 	ldr.w	r9, [pc, #308]	; 8013180 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801304e:	f8d9 0000 	ldr.w	r0, [r9]
 8013052:	6803      	ldr	r3, [r0, #0]
 8013054:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013056:	4798      	blx	r3
 8013058:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 801305c:	464a      	mov	r2, r9
 801305e:	d006      	beq.n	801306e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 8013060:	f1b8 0f04 	cmp.w	r8, #4
 8013064:	d13f      	bne.n	80130e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8013066:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013068:	3300      	adds	r3, #0
 801306a:	bf18      	it	ne
 801306c:	2301      	movne	r3, #1
 801306e:	05c0      	lsls	r0, r0, #23
 8013070:	f140 80a7 	bpl.w	80131c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 8013074:	f1b8 0f08 	cmp.w	r8, #8
 8013078:	f040 80a3 	bne.w	80131c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 801307c:	2b00      	cmp	r3, #0
 801307e:	bf0c      	ite	eq
 8013080:	f44f 7180 	moveq.w	r1, #256	; 0x100
 8013084:	2180      	movne	r1, #128	; 0x80
 8013086:	2e00      	cmp	r6, #0
 8013088:	f47f af34 	bne.w	8012ef4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801308c:	2d00      	cmp	r5, #0
 801308e:	f47f af31 	bne.w	8012ef4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013092:	9b08      	ldr	r3, [sp, #32]
 8013094:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013096:	18e3      	adds	r3, r4, r3
 8013098:	4283      	cmp	r3, r0
 801309a:	f73f af2b 	bgt.w	8012ef4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801309e:	e9dd 0306 	ldrd	r0, r3, [sp, #24]
 80130a2:	4403      	add	r3, r0
 80130a4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80130a6:	4283      	cmp	r3, r0
 80130a8:	f73f af24 	bgt.w	8012ef4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80130ac:	6810      	ldr	r0, [r2, #0]
 80130ae:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 80130b2:	6804      	ldr	r4, [r0, #0]
 80130b4:	9105      	str	r1, [sp, #20]
 80130b6:	f1b8 0f08 	cmp.w	r8, #8
 80130ba:	bf18      	it	ne
 80130bc:	3701      	addne	r7, #1
 80130be:	990a      	ldr	r1, [sp, #40]	; 0x28
 80130c0:	9104      	str	r1, [sp, #16]
 80130c2:	bf18      	it	ne
 80130c4:	f027 0701 	bicne.w	r7, r7, #1
 80130c8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80130ca:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 80130ce:	bf18      	it	ne
 80130d0:	b2bf      	uxthne	r7, r7
 80130d2:	e9cd 7102 	strd	r7, r1, [sp, #8]
 80130d6:	e9cd 7a00 	strd	r7, sl, [sp]
 80130da:	9926      	ldr	r1, [sp, #152]	; 0x98
 80130dc:	6c24      	ldr	r4, [r4, #64]	; 0x40
 80130de:	47a0      	blx	r4
 80130e0:	b017      	add	sp, #92	; 0x5c
 80130e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130e6:	2300      	movs	r3, #0
 80130e8:	e7c1      	b.n	801306e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 80130ea:	9809      	ldr	r0, [sp, #36]	; 0x24
 80130ec:	e70b      	b.n	8012f06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 80130ee:	f04f 09ff 	mov.w	r9, #255	; 0xff
 80130f2:	e725      	b.n	8012f40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 80130f4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80130f6:	f8bc 4000 	ldrh.w	r4, [ip]
 80130fa:	fb11 f303 	smulbb	r3, r1, r3
 80130fe:	b29b      	uxth	r3, r3
 8013100:	1c59      	adds	r1, r3, #1
 8013102:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8013106:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801310a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801310c:	b29f      	uxth	r7, r3
 801310e:	1220      	asrs	r0, r4, #8
 8013110:	43db      	mvns	r3, r3
 8013112:	b2db      	uxtb	r3, r3
 8013114:	fb11 f107 	smulbb	r1, r1, r7
 8013118:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801311c:	fb00 1003 	mla	r0, r0, r3, r1
 8013120:	b281      	uxth	r1, r0
 8013122:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013124:	9108      	str	r1, [sp, #32]
 8013126:	fb17 fb00 	smulbb	fp, r7, r0
 801312a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801312c:	10e1      	asrs	r1, r4, #3
 801312e:	00e4      	lsls	r4, r4, #3
 8013130:	fb17 f700 	smulbb	r7, r7, r0
 8013134:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013138:	b2e4      	uxtb	r4, r4
 801313a:	fb01 b103 	mla	r1, r1, r3, fp
 801313e:	fb04 7703 	mla	r7, r4, r3, r7
 8013142:	9b08      	ldr	r3, [sp, #32]
 8013144:	9808      	ldr	r0, [sp, #32]
 8013146:	b2bf      	uxth	r7, r7
 8013148:	3301      	adds	r3, #1
 801314a:	f107 0b01 	add.w	fp, r7, #1
 801314e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8013152:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 8013156:	b289      	uxth	r1, r1
 8013158:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801315c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8013160:	ea40 000b 	orr.w	r0, r0, fp
 8013164:	f101 0b01 	add.w	fp, r1, #1
 8013168:	eb0b 2b11 	add.w	fp, fp, r1, lsr #8
 801316c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013170:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013174:	ea40 000b 	orr.w	r0, r0, fp
 8013178:	e748      	b.n	801300c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 801317a:	bf00      	nop
 801317c:	200268f8 	.word	0x200268f8
 8013180:	20026900 	.word	0x20026900
 8013184:	200268fa 	.word	0x200268fa
 8013188:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801318a:	b153      	cbz	r3, 80131a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39e>
 801318c:	441d      	add	r5, r3
 801318e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013190:	b2ad      	uxth	r5, r5
 8013192:	eb03 03d5 	add.w	r3, r3, r5, lsr #3
 8013196:	f005 0507 	and.w	r5, r5, #7
 801319a:	781a      	ldrb	r2, [r3, #0]
 801319c:	9326      	str	r3, [sp, #152]	; 0x98
 801319e:	412a      	asrs	r2, r5
 80131a0:	b2d2      	uxtb	r2, r2
 80131a2:	9b07      	ldr	r3, [sp, #28]
 80131a4:	9911      	ldr	r1, [sp, #68]	; 0x44
 80131a6:	440b      	add	r3, r1
 80131a8:	9307      	str	r3, [sp, #28]
 80131aa:	f10a 3aff 	add.w	sl, sl, #4294967295
 80131ae:	e717      	b.n	8012fe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1dc>
 80131b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80131b2:	2b00      	cmp	r3, #0
 80131b4:	d194      	bne.n	80130e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 80131b6:	4b0b      	ldr	r3, [pc, #44]	; (80131e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e0>)
 80131b8:	6818      	ldr	r0, [r3, #0]
 80131ba:	6803      	ldr	r3, [r0, #0]
 80131bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80131be:	4798      	blx	r3
 80131c0:	e78e      	b.n	80130e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 80131c2:	2b00      	cmp	r3, #0
 80131c4:	f43f ae96 	beq.w	8012ef4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80131c8:	2180      	movs	r1, #128	; 0x80
 80131ca:	e75c      	b.n	8013086 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x282>
 80131cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80131ce:	b11b      	cbz	r3, 80131d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d4>
 80131d0:	07fb      	lsls	r3, r7, #31
 80131d2:	d501      	bpl.n	80131d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d4>
 80131d4:	3701      	adds	r7, #1
 80131d6:	b2bf      	uxth	r7, r7
 80131d8:	f04f 0911 	mov.w	r9, #17
 80131dc:	e6b0      	b.n	8012f40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 80131de:	f04f 0955 	mov.w	r9, #85	; 0x55
 80131e2:	e6ad      	b.n	8012f40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 80131e4:	20026900 	.word	0x20026900

080131e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80131e8:	b538      	push	{r3, r4, r5, lr}
 80131ea:	4c15      	ldr	r4, [pc, #84]	; (8013240 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80131ec:	7823      	ldrb	r3, [r4, #0]
 80131ee:	f3bf 8f5b 	dmb	ish
 80131f2:	07da      	lsls	r2, r3, #31
 80131f4:	4605      	mov	r5, r0
 80131f6:	d40b      	bmi.n	8013210 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80131f8:	4620      	mov	r0, r4
 80131fa:	f007 fbc9 	bl	801a990 <__cxa_guard_acquire>
 80131fe:	b138      	cbz	r0, 8013210 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013200:	4620      	mov	r0, r4
 8013202:	f007 fbd1 	bl	801a9a8 <__cxa_guard_release>
 8013206:	4a0f      	ldr	r2, [pc, #60]	; (8013244 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013208:	490f      	ldr	r1, [pc, #60]	; (8013248 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801320a:	4810      	ldr	r0, [pc, #64]	; (801324c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801320c:	f007 fbb6 	bl	801a97c <__aeabi_atexit>
 8013210:	4c0f      	ldr	r4, [pc, #60]	; (8013250 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8013212:	7823      	ldrb	r3, [r4, #0]
 8013214:	f3bf 8f5b 	dmb	ish
 8013218:	07db      	lsls	r3, r3, #31
 801321a:	d40b      	bmi.n	8013234 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801321c:	4620      	mov	r0, r4
 801321e:	f007 fbb7 	bl	801a990 <__cxa_guard_acquire>
 8013222:	b138      	cbz	r0, 8013234 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8013224:	4620      	mov	r0, r4
 8013226:	f007 fbbf 	bl	801a9a8 <__cxa_guard_release>
 801322a:	4a06      	ldr	r2, [pc, #24]	; (8013244 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801322c:	4909      	ldr	r1, [pc, #36]	; (8013254 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801322e:	480a      	ldr	r0, [pc, #40]	; (8013258 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013230:	f007 fba4 	bl	801a97c <__aeabi_atexit>
 8013234:	4b05      	ldr	r3, [pc, #20]	; (801324c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8013236:	612b      	str	r3, [r5, #16]
 8013238:	4b07      	ldr	r3, [pc, #28]	; (8013258 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801323a:	616b      	str	r3, [r5, #20]
 801323c:	bd38      	pop	{r3, r4, r5, pc}
 801323e:	bf00      	nop
 8013240:	200269ec 	.word	0x200269ec
 8013244:	20000000 	.word	0x20000000
 8013248:	080118a3 	.word	0x080118a3
 801324c:	20000060 	.word	0x20000060
 8013250:	200269f0 	.word	0x200269f0
 8013254:	080118a1 	.word	0x080118a1
 8013258:	20000064 	.word	0x20000064

0801325c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801325c:	b538      	push	{r3, r4, r5, lr}
 801325e:	4c15      	ldr	r4, [pc, #84]	; (80132b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8013260:	7823      	ldrb	r3, [r4, #0]
 8013262:	f3bf 8f5b 	dmb	ish
 8013266:	07da      	lsls	r2, r3, #31
 8013268:	4605      	mov	r5, r0
 801326a:	d40b      	bmi.n	8013284 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801326c:	4620      	mov	r0, r4
 801326e:	f007 fb8f 	bl	801a990 <__cxa_guard_acquire>
 8013272:	b138      	cbz	r0, 8013284 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013274:	4620      	mov	r0, r4
 8013276:	f007 fb97 	bl	801a9a8 <__cxa_guard_release>
 801327a:	4a0f      	ldr	r2, [pc, #60]	; (80132b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801327c:	490f      	ldr	r1, [pc, #60]	; (80132bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801327e:	4810      	ldr	r0, [pc, #64]	; (80132c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013280:	f007 fb7c 	bl	801a97c <__aeabi_atexit>
 8013284:	4c0f      	ldr	r4, [pc, #60]	; (80132c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8013286:	7823      	ldrb	r3, [r4, #0]
 8013288:	f3bf 8f5b 	dmb	ish
 801328c:	07db      	lsls	r3, r3, #31
 801328e:	d40b      	bmi.n	80132a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013290:	4620      	mov	r0, r4
 8013292:	f007 fb7d 	bl	801a990 <__cxa_guard_acquire>
 8013296:	b138      	cbz	r0, 80132a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013298:	4620      	mov	r0, r4
 801329a:	f007 fb85 	bl	801a9a8 <__cxa_guard_release>
 801329e:	4a06      	ldr	r2, [pc, #24]	; (80132b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80132a0:	4909      	ldr	r1, [pc, #36]	; (80132c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80132a2:	480a      	ldr	r0, [pc, #40]	; (80132cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80132a4:	f007 fb6a 	bl	801a97c <__aeabi_atexit>
 80132a8:	4b05      	ldr	r3, [pc, #20]	; (80132c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80132aa:	60ab      	str	r3, [r5, #8]
 80132ac:	4b07      	ldr	r3, [pc, #28]	; (80132cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80132ae:	60eb      	str	r3, [r5, #12]
 80132b0:	bd38      	pop	{r3, r4, r5, pc}
 80132b2:	bf00      	nop
 80132b4:	200269c4 	.word	0x200269c4
 80132b8:	20000000 	.word	0x20000000
 80132bc:	080118a7 	.word	0x080118a7
 80132c0:	20000038 	.word	0x20000038
 80132c4:	200269c8 	.word	0x200269c8
 80132c8:	080118a5 	.word	0x080118a5
 80132cc:	2000003c 	.word	0x2000003c

080132d0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80132d0:	b510      	push	{r4, lr}
 80132d2:	4604      	mov	r4, r0
 80132d4:	f7ff ff88 	bl	80131e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80132d8:	4620      	mov	r0, r4
 80132da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80132de:	f7ff bfbd 	b.w	801325c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080132e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80132e4:	b538      	push	{r3, r4, r5, lr}
 80132e6:	4c15      	ldr	r4, [pc, #84]	; (801333c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80132e8:	7823      	ldrb	r3, [r4, #0]
 80132ea:	f3bf 8f5b 	dmb	ish
 80132ee:	07da      	lsls	r2, r3, #31
 80132f0:	4605      	mov	r5, r0
 80132f2:	d40b      	bmi.n	801330c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80132f4:	4620      	mov	r0, r4
 80132f6:	f007 fb4b 	bl	801a990 <__cxa_guard_acquire>
 80132fa:	b138      	cbz	r0, 801330c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80132fc:	4620      	mov	r0, r4
 80132fe:	f007 fb53 	bl	801a9a8 <__cxa_guard_release>
 8013302:	4a0f      	ldr	r2, [pc, #60]	; (8013340 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013304:	490f      	ldr	r1, [pc, #60]	; (8013344 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8013306:	4810      	ldr	r0, [pc, #64]	; (8013348 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013308:	f007 fb38 	bl	801a97c <__aeabi_atexit>
 801330c:	4c0f      	ldr	r4, [pc, #60]	; (801334c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801330e:	7823      	ldrb	r3, [r4, #0]
 8013310:	f3bf 8f5b 	dmb	ish
 8013314:	07db      	lsls	r3, r3, #31
 8013316:	d40b      	bmi.n	8013330 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013318:	4620      	mov	r0, r4
 801331a:	f007 fb39 	bl	801a990 <__cxa_guard_acquire>
 801331e:	b138      	cbz	r0, 8013330 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013320:	4620      	mov	r0, r4
 8013322:	f007 fb41 	bl	801a9a8 <__cxa_guard_release>
 8013326:	4a06      	ldr	r2, [pc, #24]	; (8013340 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013328:	4909      	ldr	r1, [pc, #36]	; (8013350 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801332a:	480a      	ldr	r0, [pc, #40]	; (8013354 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801332c:	f007 fb26 	bl	801a97c <__aeabi_atexit>
 8013330:	4b05      	ldr	r3, [pc, #20]	; (8013348 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013332:	622b      	str	r3, [r5, #32]
 8013334:	4b07      	ldr	r3, [pc, #28]	; (8013354 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013336:	626b      	str	r3, [r5, #36]	; 0x24
 8013338:	bd38      	pop	{r3, r4, r5, pc}
 801333a:	bf00      	nop
 801333c:	200269f4 	.word	0x200269f4
 8013340:	20000000 	.word	0x20000000
 8013344:	0801189b 	.word	0x0801189b
 8013348:	20000068 	.word	0x20000068
 801334c:	200269f8 	.word	0x200269f8
 8013350:	08011899 	.word	0x08011899
 8013354:	2000006c 	.word	0x2000006c

08013358 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8013358:	b538      	push	{r3, r4, r5, lr}
 801335a:	4c15      	ldr	r4, [pc, #84]	; (80133b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801335c:	7823      	ldrb	r3, [r4, #0]
 801335e:	f3bf 8f5b 	dmb	ish
 8013362:	07da      	lsls	r2, r3, #31
 8013364:	4605      	mov	r5, r0
 8013366:	d40b      	bmi.n	8013380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013368:	4620      	mov	r0, r4
 801336a:	f007 fb11 	bl	801a990 <__cxa_guard_acquire>
 801336e:	b138      	cbz	r0, 8013380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013370:	4620      	mov	r0, r4
 8013372:	f007 fb19 	bl	801a9a8 <__cxa_guard_release>
 8013376:	4a0f      	ldr	r2, [pc, #60]	; (80133b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013378:	490f      	ldr	r1, [pc, #60]	; (80133b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801337a:	4810      	ldr	r0, [pc, #64]	; (80133bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801337c:	f007 fafe 	bl	801a97c <__aeabi_atexit>
 8013380:	4c0f      	ldr	r4, [pc, #60]	; (80133c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8013382:	7823      	ldrb	r3, [r4, #0]
 8013384:	f3bf 8f5b 	dmb	ish
 8013388:	07db      	lsls	r3, r3, #31
 801338a:	d40b      	bmi.n	80133a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801338c:	4620      	mov	r0, r4
 801338e:	f007 faff 	bl	801a990 <__cxa_guard_acquire>
 8013392:	b138      	cbz	r0, 80133a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013394:	4620      	mov	r0, r4
 8013396:	f007 fb07 	bl	801a9a8 <__cxa_guard_release>
 801339a:	4a06      	ldr	r2, [pc, #24]	; (80133b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801339c:	4909      	ldr	r1, [pc, #36]	; (80133c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801339e:	480a      	ldr	r0, [pc, #40]	; (80133c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80133a0:	f007 faec 	bl	801a97c <__aeabi_atexit>
 80133a4:	4b05      	ldr	r3, [pc, #20]	; (80133bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80133a6:	61ab      	str	r3, [r5, #24]
 80133a8:	4b07      	ldr	r3, [pc, #28]	; (80133c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80133aa:	61eb      	str	r3, [r5, #28]
 80133ac:	bd38      	pop	{r3, r4, r5, pc}
 80133ae:	bf00      	nop
 80133b0:	200269cc 	.word	0x200269cc
 80133b4:	20000000 	.word	0x20000000
 80133b8:	0801189f 	.word	0x0801189f
 80133bc:	20000040 	.word	0x20000040
 80133c0:	200269d0 	.word	0x200269d0
 80133c4:	0801189d 	.word	0x0801189d
 80133c8:	20000044 	.word	0x20000044

080133cc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80133cc:	b510      	push	{r4, lr}
 80133ce:	4604      	mov	r4, r0
 80133d0:	f7ff ff88 	bl	80132e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80133d4:	4620      	mov	r0, r4
 80133d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80133da:	f7ff bfbd 	b.w	8013358 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080133e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80133e0:	b538      	push	{r3, r4, r5, lr}
 80133e2:	4c15      	ldr	r4, [pc, #84]	; (8013438 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80133e4:	7823      	ldrb	r3, [r4, #0]
 80133e6:	f3bf 8f5b 	dmb	ish
 80133ea:	07da      	lsls	r2, r3, #31
 80133ec:	4605      	mov	r5, r0
 80133ee:	d40b      	bmi.n	8013408 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80133f0:	4620      	mov	r0, r4
 80133f2:	f007 facd 	bl	801a990 <__cxa_guard_acquire>
 80133f6:	b138      	cbz	r0, 8013408 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80133f8:	4620      	mov	r0, r4
 80133fa:	f007 fad5 	bl	801a9a8 <__cxa_guard_release>
 80133fe:	4a0f      	ldr	r2, [pc, #60]	; (801343c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013400:	490f      	ldr	r1, [pc, #60]	; (8013440 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8013402:	4810      	ldr	r0, [pc, #64]	; (8013444 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013404:	f007 faba 	bl	801a97c <__aeabi_atexit>
 8013408:	4c0f      	ldr	r4, [pc, #60]	; (8013448 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801340a:	7823      	ldrb	r3, [r4, #0]
 801340c:	f3bf 8f5b 	dmb	ish
 8013410:	07db      	lsls	r3, r3, #31
 8013412:	d40b      	bmi.n	801342c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013414:	4620      	mov	r0, r4
 8013416:	f007 fabb 	bl	801a990 <__cxa_guard_acquire>
 801341a:	b138      	cbz	r0, 801342c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801341c:	4620      	mov	r0, r4
 801341e:	f007 fac3 	bl	801a9a8 <__cxa_guard_release>
 8013422:	4a06      	ldr	r2, [pc, #24]	; (801343c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013424:	4909      	ldr	r1, [pc, #36]	; (801344c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8013426:	480a      	ldr	r0, [pc, #40]	; (8013450 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013428:	f007 faa8 	bl	801a97c <__aeabi_atexit>
 801342c:	4b05      	ldr	r3, [pc, #20]	; (8013444 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801342e:	632b      	str	r3, [r5, #48]	; 0x30
 8013430:	4b07      	ldr	r3, [pc, #28]	; (8013450 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013432:	636b      	str	r3, [r5, #52]	; 0x34
 8013434:	bd38      	pop	{r3, r4, r5, pc}
 8013436:	bf00      	nop
 8013438:	20026a04 	.word	0x20026a04
 801343c:	20000000 	.word	0x20000000
 8013440:	08011893 	.word	0x08011893
 8013444:	20000078 	.word	0x20000078
 8013448:	20026a08 	.word	0x20026a08
 801344c:	08011891 	.word	0x08011891
 8013450:	2000007c 	.word	0x2000007c

08013454 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8013454:	b538      	push	{r3, r4, r5, lr}
 8013456:	4c15      	ldr	r4, [pc, #84]	; (80134ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8013458:	7823      	ldrb	r3, [r4, #0]
 801345a:	f3bf 8f5b 	dmb	ish
 801345e:	07da      	lsls	r2, r3, #31
 8013460:	4605      	mov	r5, r0
 8013462:	d40b      	bmi.n	801347c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013464:	4620      	mov	r0, r4
 8013466:	f007 fa93 	bl	801a990 <__cxa_guard_acquire>
 801346a:	b138      	cbz	r0, 801347c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801346c:	4620      	mov	r0, r4
 801346e:	f007 fa9b 	bl	801a9a8 <__cxa_guard_release>
 8013472:	4a0f      	ldr	r2, [pc, #60]	; (80134b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013474:	490f      	ldr	r1, [pc, #60]	; (80134b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8013476:	4810      	ldr	r0, [pc, #64]	; (80134b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013478:	f007 fa80 	bl	801a97c <__aeabi_atexit>
 801347c:	4c0f      	ldr	r4, [pc, #60]	; (80134bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801347e:	7823      	ldrb	r3, [r4, #0]
 8013480:	f3bf 8f5b 	dmb	ish
 8013484:	07db      	lsls	r3, r3, #31
 8013486:	d40b      	bmi.n	80134a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013488:	4620      	mov	r0, r4
 801348a:	f007 fa81 	bl	801a990 <__cxa_guard_acquire>
 801348e:	b138      	cbz	r0, 80134a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013490:	4620      	mov	r0, r4
 8013492:	f007 fa89 	bl	801a9a8 <__cxa_guard_release>
 8013496:	4a06      	ldr	r2, [pc, #24]	; (80134b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013498:	4909      	ldr	r1, [pc, #36]	; (80134c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801349a:	480a      	ldr	r0, [pc, #40]	; (80134c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801349c:	f007 fa6e 	bl	801a97c <__aeabi_atexit>
 80134a0:	4b05      	ldr	r3, [pc, #20]	; (80134b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80134a2:	62ab      	str	r3, [r5, #40]	; 0x28
 80134a4:	4b07      	ldr	r3, [pc, #28]	; (80134c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80134a6:	62eb      	str	r3, [r5, #44]	; 0x2c
 80134a8:	bd38      	pop	{r3, r4, r5, pc}
 80134aa:	bf00      	nop
 80134ac:	200269d4 	.word	0x200269d4
 80134b0:	20000000 	.word	0x20000000
 80134b4:	08011897 	.word	0x08011897
 80134b8:	20000048 	.word	0x20000048
 80134bc:	200269d8 	.word	0x200269d8
 80134c0:	08011895 	.word	0x08011895
 80134c4:	2000004c 	.word	0x2000004c

080134c8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80134c8:	b510      	push	{r4, lr}
 80134ca:	4604      	mov	r4, r0
 80134cc:	f7ff ff88 	bl	80133e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80134d0:	4620      	mov	r0, r4
 80134d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80134d6:	f7ff bfbd 	b.w	8013454 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080134dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80134dc:	b538      	push	{r3, r4, r5, lr}
 80134de:	4c15      	ldr	r4, [pc, #84]	; (8013534 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80134e0:	7823      	ldrb	r3, [r4, #0]
 80134e2:	f3bf 8f5b 	dmb	ish
 80134e6:	07da      	lsls	r2, r3, #31
 80134e8:	4605      	mov	r5, r0
 80134ea:	d40b      	bmi.n	8013504 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80134ec:	4620      	mov	r0, r4
 80134ee:	f007 fa4f 	bl	801a990 <__cxa_guard_acquire>
 80134f2:	b138      	cbz	r0, 8013504 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80134f4:	4620      	mov	r0, r4
 80134f6:	f007 fa57 	bl	801a9a8 <__cxa_guard_release>
 80134fa:	4a0f      	ldr	r2, [pc, #60]	; (8013538 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80134fc:	490f      	ldr	r1, [pc, #60]	; (801353c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80134fe:	4810      	ldr	r0, [pc, #64]	; (8013540 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013500:	f007 fa3c 	bl	801a97c <__aeabi_atexit>
 8013504:	4c0f      	ldr	r4, [pc, #60]	; (8013544 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8013506:	7823      	ldrb	r3, [r4, #0]
 8013508:	f3bf 8f5b 	dmb	ish
 801350c:	07db      	lsls	r3, r3, #31
 801350e:	d40b      	bmi.n	8013528 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013510:	4620      	mov	r0, r4
 8013512:	f007 fa3d 	bl	801a990 <__cxa_guard_acquire>
 8013516:	b138      	cbz	r0, 8013528 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013518:	4620      	mov	r0, r4
 801351a:	f007 fa45 	bl	801a9a8 <__cxa_guard_release>
 801351e:	4a06      	ldr	r2, [pc, #24]	; (8013538 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013520:	4909      	ldr	r1, [pc, #36]	; (8013548 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8013522:	480a      	ldr	r0, [pc, #40]	; (801354c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013524:	f007 fa2a 	bl	801a97c <__aeabi_atexit>
 8013528:	4b05      	ldr	r3, [pc, #20]	; (8013540 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801352a:	652b      	str	r3, [r5, #80]	; 0x50
 801352c:	4b07      	ldr	r3, [pc, #28]	; (801354c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801352e:	656b      	str	r3, [r5, #84]	; 0x54
 8013530:	bd38      	pop	{r3, r4, r5, pc}
 8013532:	bf00      	nop
 8013534:	20026a0c 	.word	0x20026a0c
 8013538:	20000000 	.word	0x20000000
 801353c:	08011883 	.word	0x08011883
 8013540:	20000080 	.word	0x20000080
 8013544:	20026a10 	.word	0x20026a10
 8013548:	08011881 	.word	0x08011881
 801354c:	20000084 	.word	0x20000084

08013550 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8013550:	b538      	push	{r3, r4, r5, lr}
 8013552:	4c15      	ldr	r4, [pc, #84]	; (80135a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8013554:	7823      	ldrb	r3, [r4, #0]
 8013556:	f3bf 8f5b 	dmb	ish
 801355a:	07da      	lsls	r2, r3, #31
 801355c:	4605      	mov	r5, r0
 801355e:	d40b      	bmi.n	8013578 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013560:	4620      	mov	r0, r4
 8013562:	f007 fa15 	bl	801a990 <__cxa_guard_acquire>
 8013566:	b138      	cbz	r0, 8013578 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013568:	4620      	mov	r0, r4
 801356a:	f007 fa1d 	bl	801a9a8 <__cxa_guard_release>
 801356e:	4a0f      	ldr	r2, [pc, #60]	; (80135ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013570:	490f      	ldr	r1, [pc, #60]	; (80135b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8013572:	4810      	ldr	r0, [pc, #64]	; (80135b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013574:	f007 fa02 	bl	801a97c <__aeabi_atexit>
 8013578:	4c0f      	ldr	r4, [pc, #60]	; (80135b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801357a:	7823      	ldrb	r3, [r4, #0]
 801357c:	f3bf 8f5b 	dmb	ish
 8013580:	07db      	lsls	r3, r3, #31
 8013582:	d40b      	bmi.n	801359c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013584:	4620      	mov	r0, r4
 8013586:	f007 fa03 	bl	801a990 <__cxa_guard_acquire>
 801358a:	b138      	cbz	r0, 801359c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801358c:	4620      	mov	r0, r4
 801358e:	f007 fa0b 	bl	801a9a8 <__cxa_guard_release>
 8013592:	4a06      	ldr	r2, [pc, #24]	; (80135ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013594:	4909      	ldr	r1, [pc, #36]	; (80135bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8013596:	480a      	ldr	r0, [pc, #40]	; (80135c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013598:	f007 f9f0 	bl	801a97c <__aeabi_atexit>
 801359c:	4b05      	ldr	r3, [pc, #20]	; (80135b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801359e:	64ab      	str	r3, [r5, #72]	; 0x48
 80135a0:	4b07      	ldr	r3, [pc, #28]	; (80135c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80135a2:	64eb      	str	r3, [r5, #76]	; 0x4c
 80135a4:	bd38      	pop	{r3, r4, r5, pc}
 80135a6:	bf00      	nop
 80135a8:	20026a14 	.word	0x20026a14
 80135ac:	20000000 	.word	0x20000000
 80135b0:	08011887 	.word	0x08011887
 80135b4:	20000088 	.word	0x20000088
 80135b8:	20026a18 	.word	0x20026a18
 80135bc:	08011885 	.word	0x08011885
 80135c0:	2000008c 	.word	0x2000008c

080135c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80135c4:	b538      	push	{r3, r4, r5, lr}
 80135c6:	4c15      	ldr	r4, [pc, #84]	; (801361c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80135c8:	7823      	ldrb	r3, [r4, #0]
 80135ca:	f3bf 8f5b 	dmb	ish
 80135ce:	07da      	lsls	r2, r3, #31
 80135d0:	4605      	mov	r5, r0
 80135d2:	d40b      	bmi.n	80135ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80135d4:	4620      	mov	r0, r4
 80135d6:	f007 f9db 	bl	801a990 <__cxa_guard_acquire>
 80135da:	b138      	cbz	r0, 80135ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80135dc:	4620      	mov	r0, r4
 80135de:	f007 f9e3 	bl	801a9a8 <__cxa_guard_release>
 80135e2:	4a0f      	ldr	r2, [pc, #60]	; (8013620 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80135e4:	490f      	ldr	r1, [pc, #60]	; (8013624 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80135e6:	4810      	ldr	r0, [pc, #64]	; (8013628 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80135e8:	f007 f9c8 	bl	801a97c <__aeabi_atexit>
 80135ec:	4c0f      	ldr	r4, [pc, #60]	; (801362c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80135ee:	7823      	ldrb	r3, [r4, #0]
 80135f0:	f3bf 8f5b 	dmb	ish
 80135f4:	07db      	lsls	r3, r3, #31
 80135f6:	d40b      	bmi.n	8013610 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80135f8:	4620      	mov	r0, r4
 80135fa:	f007 f9c9 	bl	801a990 <__cxa_guard_acquire>
 80135fe:	b138      	cbz	r0, 8013610 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8013600:	4620      	mov	r0, r4
 8013602:	f007 f9d1 	bl	801a9a8 <__cxa_guard_release>
 8013606:	4a06      	ldr	r2, [pc, #24]	; (8013620 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8013608:	4909      	ldr	r1, [pc, #36]	; (8013630 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801360a:	480a      	ldr	r0, [pc, #40]	; (8013634 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801360c:	f007 f9b6 	bl	801a97c <__aeabi_atexit>
 8013610:	4b05      	ldr	r3, [pc, #20]	; (8013628 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8013612:	642b      	str	r3, [r5, #64]	; 0x40
 8013614:	4b07      	ldr	r3, [pc, #28]	; (8013634 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8013616:	646b      	str	r3, [r5, #68]	; 0x44
 8013618:	bd38      	pop	{r3, r4, r5, pc}
 801361a:	bf00      	nop
 801361c:	200269dc 	.word	0x200269dc
 8013620:	20000000 	.word	0x20000000
 8013624:	0801188b 	.word	0x0801188b
 8013628:	20000050 	.word	0x20000050
 801362c:	200269e0 	.word	0x200269e0
 8013630:	08011889 	.word	0x08011889
 8013634:	20000054 	.word	0x20000054

08013638 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8013638:	b538      	push	{r3, r4, r5, lr}
 801363a:	4c15      	ldr	r4, [pc, #84]	; (8013690 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801363c:	7823      	ldrb	r3, [r4, #0]
 801363e:	f3bf 8f5b 	dmb	ish
 8013642:	07da      	lsls	r2, r3, #31
 8013644:	4605      	mov	r5, r0
 8013646:	d40b      	bmi.n	8013660 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013648:	4620      	mov	r0, r4
 801364a:	f007 f9a1 	bl	801a990 <__cxa_guard_acquire>
 801364e:	b138      	cbz	r0, 8013660 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013650:	4620      	mov	r0, r4
 8013652:	f007 f9a9 	bl	801a9a8 <__cxa_guard_release>
 8013656:	4a0f      	ldr	r2, [pc, #60]	; (8013694 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8013658:	490f      	ldr	r1, [pc, #60]	; (8013698 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801365a:	4810      	ldr	r0, [pc, #64]	; (801369c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801365c:	f007 f98e 	bl	801a97c <__aeabi_atexit>
 8013660:	4c0f      	ldr	r4, [pc, #60]	; (80136a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8013662:	7823      	ldrb	r3, [r4, #0]
 8013664:	f3bf 8f5b 	dmb	ish
 8013668:	07db      	lsls	r3, r3, #31
 801366a:	d40b      	bmi.n	8013684 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801366c:	4620      	mov	r0, r4
 801366e:	f007 f98f 	bl	801a990 <__cxa_guard_acquire>
 8013672:	b138      	cbz	r0, 8013684 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8013674:	4620      	mov	r0, r4
 8013676:	f007 f997 	bl	801a9a8 <__cxa_guard_release>
 801367a:	4a06      	ldr	r2, [pc, #24]	; (8013694 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801367c:	4909      	ldr	r1, [pc, #36]	; (80136a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801367e:	480a      	ldr	r0, [pc, #40]	; (80136a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8013680:	f007 f97c 	bl	801a97c <__aeabi_atexit>
 8013684:	4b05      	ldr	r3, [pc, #20]	; (801369c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8013686:	63ab      	str	r3, [r5, #56]	; 0x38
 8013688:	4b07      	ldr	r3, [pc, #28]	; (80136a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801368a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801368c:	bd38      	pop	{r3, r4, r5, pc}
 801368e:	bf00      	nop
 8013690:	200269fc 	.word	0x200269fc
 8013694:	20000000 	.word	0x20000000
 8013698:	0801188f 	.word	0x0801188f
 801369c:	20000070 	.word	0x20000070
 80136a0:	20026a00 	.word	0x20026a00
 80136a4:	0801188d 	.word	0x0801188d
 80136a8:	20000074 	.word	0x20000074

080136ac <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80136ac:	b510      	push	{r4, lr}
 80136ae:	4604      	mov	r4, r0
 80136b0:	f7ff ff14 	bl	80134dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80136b4:	4620      	mov	r0, r4
 80136b6:	f7ff ff85 	bl	80135c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80136ba:	4620      	mov	r0, r4
 80136bc:	f7ff ff48 	bl	8013550 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80136c0:	4620      	mov	r0, r4
 80136c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80136c6:	f7ff bfb7 	b.w	8013638 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080136cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80136cc:	b538      	push	{r3, r4, r5, lr}
 80136ce:	4c15      	ldr	r4, [pc, #84]	; (8013724 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80136d0:	7823      	ldrb	r3, [r4, #0]
 80136d2:	f3bf 8f5b 	dmb	ish
 80136d6:	07da      	lsls	r2, r3, #31
 80136d8:	4605      	mov	r5, r0
 80136da:	d40b      	bmi.n	80136f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80136dc:	4620      	mov	r0, r4
 80136de:	f007 f957 	bl	801a990 <__cxa_guard_acquire>
 80136e2:	b138      	cbz	r0, 80136f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80136e4:	4620      	mov	r0, r4
 80136e6:	f007 f95f 	bl	801a9a8 <__cxa_guard_release>
 80136ea:	4a0f      	ldr	r2, [pc, #60]	; (8013728 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80136ec:	490f      	ldr	r1, [pc, #60]	; (801372c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80136ee:	4810      	ldr	r0, [pc, #64]	; (8013730 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80136f0:	f007 f944 	bl	801a97c <__aeabi_atexit>
 80136f4:	4c0f      	ldr	r4, [pc, #60]	; (8013734 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80136f6:	7823      	ldrb	r3, [r4, #0]
 80136f8:	f3bf 8f5b 	dmb	ish
 80136fc:	07db      	lsls	r3, r3, #31
 80136fe:	d40b      	bmi.n	8013718 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8013700:	4620      	mov	r0, r4
 8013702:	f007 f945 	bl	801a990 <__cxa_guard_acquire>
 8013706:	b138      	cbz	r0, 8013718 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8013708:	4620      	mov	r0, r4
 801370a:	f007 f94d 	bl	801a9a8 <__cxa_guard_release>
 801370e:	4a06      	ldr	r2, [pc, #24]	; (8013728 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8013710:	4909      	ldr	r1, [pc, #36]	; (8013738 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8013712:	480a      	ldr	r0, [pc, #40]	; (801373c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8013714:	f007 f932 	bl	801a97c <__aeabi_atexit>
 8013718:	4b05      	ldr	r3, [pc, #20]	; (8013730 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801371a:	662b      	str	r3, [r5, #96]	; 0x60
 801371c:	4b07      	ldr	r3, [pc, #28]	; (801373c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801371e:	666b      	str	r3, [r5, #100]	; 0x64
 8013720:	bd38      	pop	{r3, r4, r5, pc}
 8013722:	bf00      	nop
 8013724:	200269e4 	.word	0x200269e4
 8013728:	20000000 	.word	0x20000000
 801372c:	0801187b 	.word	0x0801187b
 8013730:	20000058 	.word	0x20000058
 8013734:	200269e8 	.word	0x200269e8
 8013738:	08011879 	.word	0x08011879
 801373c:	2000005c 	.word	0x2000005c

08013740 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8013740:	b538      	push	{r3, r4, r5, lr}
 8013742:	4c15      	ldr	r4, [pc, #84]	; (8013798 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8013744:	7823      	ldrb	r3, [r4, #0]
 8013746:	f3bf 8f5b 	dmb	ish
 801374a:	07da      	lsls	r2, r3, #31
 801374c:	4605      	mov	r5, r0
 801374e:	d40b      	bmi.n	8013768 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013750:	4620      	mov	r0, r4
 8013752:	f007 f91d 	bl	801a990 <__cxa_guard_acquire>
 8013756:	b138      	cbz	r0, 8013768 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013758:	4620      	mov	r0, r4
 801375a:	f007 f925 	bl	801a9a8 <__cxa_guard_release>
 801375e:	4a0f      	ldr	r2, [pc, #60]	; (801379c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8013760:	490f      	ldr	r1, [pc, #60]	; (80137a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8013762:	4810      	ldr	r0, [pc, #64]	; (80137a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8013764:	f007 f90a 	bl	801a97c <__aeabi_atexit>
 8013768:	4c0f      	ldr	r4, [pc, #60]	; (80137a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801376a:	7823      	ldrb	r3, [r4, #0]
 801376c:	f3bf 8f5b 	dmb	ish
 8013770:	07db      	lsls	r3, r3, #31
 8013772:	d40b      	bmi.n	801378c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8013774:	4620      	mov	r0, r4
 8013776:	f007 f90b 	bl	801a990 <__cxa_guard_acquire>
 801377a:	b138      	cbz	r0, 801378c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801377c:	4620      	mov	r0, r4
 801377e:	f007 f913 	bl	801a9a8 <__cxa_guard_release>
 8013782:	4a06      	ldr	r2, [pc, #24]	; (801379c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8013784:	4909      	ldr	r1, [pc, #36]	; (80137ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8013786:	480a      	ldr	r0, [pc, #40]	; (80137b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8013788:	f007 f8f8 	bl	801a97c <__aeabi_atexit>
 801378c:	4b05      	ldr	r3, [pc, #20]	; (80137a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801378e:	65ab      	str	r3, [r5, #88]	; 0x58
 8013790:	4b07      	ldr	r3, [pc, #28]	; (80137b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8013792:	65eb      	str	r3, [r5, #92]	; 0x5c
 8013794:	bd38      	pop	{r3, r4, r5, pc}
 8013796:	bf00      	nop
 8013798:	200269bc 	.word	0x200269bc
 801379c:	20000000 	.word	0x20000000
 80137a0:	0801187f 	.word	0x0801187f
 80137a4:	20000030 	.word	0x20000030
 80137a8:	200269c0 	.word	0x200269c0
 80137ac:	0801187d 	.word	0x0801187d
 80137b0:	20000034 	.word	0x20000034

080137b4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80137b4:	b510      	push	{r4, lr}
 80137b6:	4604      	mov	r4, r0
 80137b8:	f7ff ff88 	bl	80136cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80137bc:	4620      	mov	r0, r4
 80137be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80137c2:	f7ff bfbd 	b.w	8013740 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080137c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80137c8:	b538      	push	{r3, r4, r5, lr}
 80137ca:	4c15      	ldr	r4, [pc, #84]	; (8013820 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80137cc:	7823      	ldrb	r3, [r4, #0]
 80137ce:	f3bf 8f5b 	dmb	ish
 80137d2:	07da      	lsls	r2, r3, #31
 80137d4:	4605      	mov	r5, r0
 80137d6:	d40b      	bmi.n	80137f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80137d8:	4620      	mov	r0, r4
 80137da:	f007 f8d9 	bl	801a990 <__cxa_guard_acquire>
 80137de:	b138      	cbz	r0, 80137f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80137e0:	4620      	mov	r0, r4
 80137e2:	f007 f8e1 	bl	801a9a8 <__cxa_guard_release>
 80137e6:	4a0f      	ldr	r2, [pc, #60]	; (8013824 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80137e8:	490f      	ldr	r1, [pc, #60]	; (8013828 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80137ea:	4810      	ldr	r0, [pc, #64]	; (801382c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80137ec:	f007 f8c6 	bl	801a97c <__aeabi_atexit>
 80137f0:	4c0f      	ldr	r4, [pc, #60]	; (8013830 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80137f2:	7823      	ldrb	r3, [r4, #0]
 80137f4:	f3bf 8f5b 	dmb	ish
 80137f8:	07db      	lsls	r3, r3, #31
 80137fa:	d40b      	bmi.n	8013814 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80137fc:	4620      	mov	r0, r4
 80137fe:	f007 f8c7 	bl	801a990 <__cxa_guard_acquire>
 8013802:	b138      	cbz	r0, 8013814 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8013804:	4620      	mov	r0, r4
 8013806:	f007 f8cf 	bl	801a9a8 <__cxa_guard_release>
 801380a:	4a06      	ldr	r2, [pc, #24]	; (8013824 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801380c:	4909      	ldr	r1, [pc, #36]	; (8013834 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801380e:	480a      	ldr	r0, [pc, #40]	; (8013838 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8013810:	f007 f8b4 	bl	801a97c <__aeabi_atexit>
 8013814:	4b05      	ldr	r3, [pc, #20]	; (801382c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8013816:	672b      	str	r3, [r5, #112]	; 0x70
 8013818:	4b07      	ldr	r3, [pc, #28]	; (8013838 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801381a:	676b      	str	r3, [r5, #116]	; 0x74
 801381c:	bd38      	pop	{r3, r4, r5, pc}
 801381e:	bf00      	nop
 8013820:	200269b4 	.word	0x200269b4
 8013824:	20000000 	.word	0x20000000
 8013828:	08011873 	.word	0x08011873
 801382c:	20000028 	.word	0x20000028
 8013830:	200269b8 	.word	0x200269b8
 8013834:	08011871 	.word	0x08011871
 8013838:	2000002c 	.word	0x2000002c

0801383c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801383c:	b538      	push	{r3, r4, r5, lr}
 801383e:	4c15      	ldr	r4, [pc, #84]	; (8013894 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8013840:	7823      	ldrb	r3, [r4, #0]
 8013842:	f3bf 8f5b 	dmb	ish
 8013846:	07da      	lsls	r2, r3, #31
 8013848:	4605      	mov	r5, r0
 801384a:	d40b      	bmi.n	8013864 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801384c:	4620      	mov	r0, r4
 801384e:	f007 f89f 	bl	801a990 <__cxa_guard_acquire>
 8013852:	b138      	cbz	r0, 8013864 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8013854:	4620      	mov	r0, r4
 8013856:	f007 f8a7 	bl	801a9a8 <__cxa_guard_release>
 801385a:	4a0f      	ldr	r2, [pc, #60]	; (8013898 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801385c:	490f      	ldr	r1, [pc, #60]	; (801389c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801385e:	4810      	ldr	r0, [pc, #64]	; (80138a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8013860:	f007 f88c 	bl	801a97c <__aeabi_atexit>
 8013864:	4c0f      	ldr	r4, [pc, #60]	; (80138a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8013866:	7823      	ldrb	r3, [r4, #0]
 8013868:	f3bf 8f5b 	dmb	ish
 801386c:	07db      	lsls	r3, r3, #31
 801386e:	d40b      	bmi.n	8013888 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8013870:	4620      	mov	r0, r4
 8013872:	f007 f88d 	bl	801a990 <__cxa_guard_acquire>
 8013876:	b138      	cbz	r0, 8013888 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8013878:	4620      	mov	r0, r4
 801387a:	f007 f895 	bl	801a9a8 <__cxa_guard_release>
 801387e:	4a06      	ldr	r2, [pc, #24]	; (8013898 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8013880:	4909      	ldr	r1, [pc, #36]	; (80138a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8013882:	480a      	ldr	r0, [pc, #40]	; (80138ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8013884:	f007 f87a 	bl	801a97c <__aeabi_atexit>
 8013888:	4b05      	ldr	r3, [pc, #20]	; (80138a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801388a:	66ab      	str	r3, [r5, #104]	; 0x68
 801388c:	4b07      	ldr	r3, [pc, #28]	; (80138ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801388e:	66eb      	str	r3, [r5, #108]	; 0x6c
 8013890:	bd38      	pop	{r3, r4, r5, pc}
 8013892:	bf00      	nop
 8013894:	200269ac 	.word	0x200269ac
 8013898:	20000000 	.word	0x20000000
 801389c:	08011877 	.word	0x08011877
 80138a0:	20000020 	.word	0x20000020
 80138a4:	200269b0 	.word	0x200269b0
 80138a8:	08011875 	.word	0x08011875
 80138ac:	20000024 	.word	0x20000024

080138b0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80138b0:	b510      	push	{r4, lr}
 80138b2:	4604      	mov	r4, r0
 80138b4:	f7ff ff88 	bl	80137c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80138b8:	4620      	mov	r0, r4
 80138ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80138be:	f7ff bfbd 	b.w	801383c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080138c2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80138c2:	b510      	push	{r4, lr}
 80138c4:	4604      	mov	r4, r0
 80138c6:	f7ff fff3 	bl	80138b0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80138ca:	4620      	mov	r0, r4
 80138cc:	f7ff ff72 	bl	80137b4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80138d0:	4620      	mov	r0, r4
 80138d2:	f7ff fdf9 	bl	80134c8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80138d6:	4620      	mov	r0, r4
 80138d8:	f7ff fcfa 	bl	80132d0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80138dc:	4620      	mov	r0, r4
 80138de:	f7ff fd75 	bl	80133cc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80138e2:	4620      	mov	r0, r4
 80138e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80138e8:	f7ff bee0 	b.w	80136ac <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080138ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80138ec:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138f0:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 80138f4:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 80138f8:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80138fc:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8013900:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8013904:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8013908:	8808      	ldrh	r0, [r1, #0]
 801390a:	fb0e 4708 	mla	r7, lr, r8, r4
 801390e:	f1be 0f00 	cmp.w	lr, #0
 8013912:	eb02 0a07 	add.w	sl, r2, r7
 8013916:	db37      	blt.n	8013988 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8013918:	45f3      	cmp	fp, lr
 801391a:	dd35      	ble.n	8013988 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 801391c:	2c00      	cmp	r4, #0
 801391e:	db31      	blt.n	8013984 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8013920:	45a0      	cmp	r8, r4
 8013922:	dd2f      	ble.n	8013984 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8013924:	5dd2      	ldrb	r2, [r2, r7]
 8013926:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 801392a:	1c62      	adds	r2, r4, #1
 801392c:	d42f      	bmi.n	801398e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801392e:	4590      	cmp	r8, r2
 8013930:	dd2d      	ble.n	801398e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8013932:	b366      	cbz	r6, 801398e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8013934:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8013938:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801393c:	f11e 0e01 	adds.w	lr, lr, #1
 8013940:	d429      	bmi.n	8013996 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8013942:	45f3      	cmp	fp, lr
 8013944:	dd27      	ble.n	8013996 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8013946:	f1bc 0f00 	cmp.w	ip, #0
 801394a:	f000 80a0 	beq.w	8013a8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 801394e:	2c00      	cmp	r4, #0
 8013950:	db1f      	blt.n	8013992 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8013952:	45a0      	cmp	r8, r4
 8013954:	dd1d      	ble.n	8013992 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8013956:	f81a 2008 	ldrb.w	r2, [sl, r8]
 801395a:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 801395e:	3401      	adds	r4, #1
 8013960:	d41c      	bmi.n	801399c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8013962:	45a0      	cmp	r8, r4
 8013964:	dd1a      	ble.n	801399c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8013966:	b1de      	cbz	r6, 80139a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8013968:	44d0      	add	r8, sl
 801396a:	f898 2001 	ldrb.w	r2, [r8, #1]
 801396e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8013972:	2e0f      	cmp	r6, #15
 8013974:	d915      	bls.n	80139a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8013976:	4b49      	ldr	r3, [pc, #292]	; (8013a9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8013978:	4a49      	ldr	r2, [pc, #292]	; (8013aa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 801397a:	484a      	ldr	r0, [pc, #296]	; (8013aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 801397c:	f240 3155 	movw	r1, #853	; 0x355
 8013980:	f007 f830 	bl	801a9e4 <__assert_func>
 8013984:	4681      	mov	r9, r0
 8013986:	e7d0      	b.n	801392a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8013988:	4607      	mov	r7, r0
 801398a:	4681      	mov	r9, r0
 801398c:	e7d6      	b.n	801393c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801398e:	4607      	mov	r7, r0
 8013990:	e7d4      	b.n	801393c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8013992:	4686      	mov	lr, r0
 8013994:	e7e3      	b.n	801395e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8013996:	4603      	mov	r3, r0
 8013998:	4686      	mov	lr, r0
 801399a:	e7ea      	b.n	8013972 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801399c:	4603      	mov	r3, r0
 801399e:	e7e8      	b.n	8013972 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80139a0:	4603      	mov	r3, r0
 80139a2:	f1bc 0f0f 	cmp.w	ip, #15
 80139a6:	d8e6      	bhi.n	8013976 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80139a8:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80139ac:	fb16 f80c 	smulbb	r8, r6, ip
 80139b0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80139b4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80139b8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80139bc:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80139c0:	ea44 0909 	orr.w	r9, r4, r9
 80139c4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80139c8:	f1cc 0410 	rsb	r4, ip, #16
 80139cc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80139d0:	1ba4      	subs	r4, r4, r6
 80139d2:	041a      	lsls	r2, r3, #16
 80139d4:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 80139d8:	ea4a 0707 	orr.w	r7, sl, r7
 80139dc:	4377      	muls	r7, r6
 80139de:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80139e2:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 80139e6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80139ea:	fb04 7409 	mla	r4, r4, r9, r7
 80139ee:	4313      	orrs	r3, r2
 80139f0:	ea4f 420e 	mov.w	r2, lr, lsl #16
 80139f4:	fb08 4303 	mla	r3, r8, r3, r4
 80139f8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80139fc:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8013a00:	4322      	orrs	r2, r4
 8013a02:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8013a06:	fb0c 3202 	mla	r2, ip, r2, r3
 8013a0a:	0d53      	lsrs	r3, r2, #21
 8013a0c:	0952      	lsrs	r2, r2, #5
 8013a0e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013a12:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8013a16:	431a      	orrs	r2, r3
 8013a18:	b293      	uxth	r3, r2
 8013a1a:	b2af      	uxth	r7, r5
 8013a1c:	1202      	asrs	r2, r0, #8
 8013a1e:	43ed      	mvns	r5, r5
 8013a20:	b2ed      	uxtb	r5, r5
 8013a22:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8013a26:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8013a2a:	fb12 f205 	smulbb	r2, r2, r5
 8013a2e:	10c6      	asrs	r6, r0, #3
 8013a30:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013a34:	fb0c 2c07 	mla	ip, ip, r7, r2
 8013a38:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013a3c:	10da      	asrs	r2, r3, #3
 8013a3e:	fb16 f605 	smulbb	r6, r6, r5
 8013a42:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8013a46:	fb02 6207 	mla	r2, r2, r7, r6
 8013a4a:	b296      	uxth	r6, r2
 8013a4c:	00c2      	lsls	r2, r0, #3
 8013a4e:	00dc      	lsls	r4, r3, #3
 8013a50:	b2d2      	uxtb	r2, r2
 8013a52:	b2e4      	uxtb	r4, r4
 8013a54:	fb12 f205 	smulbb	r2, r2, r5
 8013a58:	fb04 2207 	mla	r2, r4, r7, r2
 8013a5c:	fa1f fc8c 	uxth.w	ip, ip
 8013a60:	b292      	uxth	r2, r2
 8013a62:	f10c 0301 	add.w	r3, ip, #1
 8013a66:	1c50      	adds	r0, r2, #1
 8013a68:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8013a6c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8013a70:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013a74:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8013a78:	4313      	orrs	r3, r2
 8013a7a:	1c72      	adds	r2, r6, #1
 8013a7c:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8013a80:	0952      	lsrs	r2, r2, #5
 8013a82:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013a86:	4313      	orrs	r3, r2
 8013a88:	800b      	strh	r3, [r1, #0]
 8013a8a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a8e:	2e0f      	cmp	r6, #15
 8013a90:	f63f af71 	bhi.w	8013976 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8013a94:	4603      	mov	r3, r0
 8013a96:	4686      	mov	lr, r0
 8013a98:	e786      	b.n	80139a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8013a9a:	bf00      	nop
 8013a9c:	0801e61b 	.word	0x0801e61b
 8013aa0:	0801ec22 	.word	0x0801ec22
 8013aa4:	0801e6a3 	.word	0x0801e6a3

08013aa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8013aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013aac:	ed2d 8b08 	vpush	{d8-d11}
 8013ab0:	b09b      	sub	sp, #108	; 0x6c
 8013ab2:	e9dd 982d 	ldrd	r9, r8, [sp, #180]	; 0xb4
 8013ab6:	9309      	str	r3, [sp, #36]	; 0x24
 8013ab8:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8013abc:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 8013abe:	930a      	str	r3, [sp, #40]	; 0x28
 8013ac0:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8013ac4:	930e      	str	r3, [sp, #56]	; 0x38
 8013ac6:	910d      	str	r1, [sp, #52]	; 0x34
 8013ac8:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8013acc:	9018      	str	r0, [sp, #96]	; 0x60
 8013ace:	6870      	ldr	r0, [r6, #4]
 8013ad0:	9217      	str	r2, [sp, #92]	; 0x5c
 8013ad2:	fb00 1303 	mla	r3, r0, r3, r1
 8013ad6:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8013ad8:	6831      	ldr	r1, [r6, #0]
 8013ada:	6856      	ldr	r6, [r2, #4]
 8013adc:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8013ae0:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8013ae4:	6813      	ldr	r3, [r2, #0]
 8013ae6:	930c      	str	r3, [sp, #48]	; 0x30
 8013ae8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013aea:	43db      	mvns	r3, r3
 8013aec:	b2db      	uxtb	r3, r3
 8013aee:	eeb0 aa40 	vmov.f32	s20, s0
 8013af2:	eef0 9a60 	vmov.f32	s19, s1
 8013af6:	eeb0 9a41 	vmov.f32	s18, s2
 8013afa:	eeb0 8a62 	vmov.f32	s16, s5
 8013afe:	eef0 8a43 	vmov.f32	s17, s6
 8013b02:	eef0 ba44 	vmov.f32	s23, s8
 8013b06:	eeb0 ba64 	vmov.f32	s22, s9
 8013b0a:	eef0 aa45 	vmov.f32	s21, s10
 8013b0e:	3604      	adds	r6, #4
 8013b10:	930b      	str	r3, [sp, #44]	; 0x2c
 8013b12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013b14:	2b00      	cmp	r3, #0
 8013b16:	dc03      	bgt.n	8013b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8013b18:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8013b1a:	2b00      	cmp	r3, #0
 8013b1c:	f340 8215 	ble.w	8013f4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8013b20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013b22:	2b00      	cmp	r3, #0
 8013b24:	f340 8102 	ble.w	8013d2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8013b28:	ea5f 4229 	movs.w	r2, r9, asr #16
 8013b2c:	ea4f 4328 	mov.w	r3, r8, asr #16
 8013b30:	d42c      	bmi.n	8013b8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8013b32:	1c51      	adds	r1, r2, #1
 8013b34:	428c      	cmp	r4, r1
 8013b36:	dd2c      	ble.n	8013b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013b38:	2b00      	cmp	r3, #0
 8013b3a:	db2a      	blt.n	8013b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013b3c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8013b3e:	1c59      	adds	r1, r3, #1
 8013b40:	4288      	cmp	r0, r1
 8013b42:	dd26      	ble.n	8013b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013b44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013b46:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013b48:	3b01      	subs	r3, #1
 8013b4a:	fb02 9203 	mla	r2, r2, r3, r9
 8013b4e:	1412      	asrs	r2, r2, #16
 8013b50:	d429      	bmi.n	8013ba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013b52:	3201      	adds	r2, #1
 8013b54:	4294      	cmp	r4, r2
 8013b56:	dd26      	ble.n	8013ba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013b58:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8013b5a:	fb02 8303 	mla	r3, r2, r3, r8
 8013b5e:	141b      	asrs	r3, r3, #16
 8013b60:	d421      	bmi.n	8013ba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013b62:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013b64:	3301      	adds	r3, #1
 8013b66:	429a      	cmp	r2, r3
 8013b68:	dd1d      	ble.n	8013ba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013b6a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013b6e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8013b72:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8013b76:	9312      	str	r3, [sp, #72]	; 0x48
 8013b78:	f1be 0f00 	cmp.w	lr, #0
 8013b7c:	f300 8138 	bgt.w	8013df0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x348>
 8013b80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013b82:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8013b86:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8013b8a:	e0d1      	b.n	8013d30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x288>
 8013b8c:	1c51      	adds	r1, r2, #1
 8013b8e:	f040 80c3 	bne.w	8013d18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8013b92:	42a2      	cmp	r2, r4
 8013b94:	f280 80c0 	bge.w	8013d18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8013b98:	1c5f      	adds	r7, r3, #1
 8013b9a:	f2c0 80bd 	blt.w	8013d18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8013b9e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013ba0:	4293      	cmp	r3, r2
 8013ba2:	f280 80b9 	bge.w	8013d18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8013ba6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8013baa:	4657      	mov	r7, sl
 8013bac:	f1bb 0f00 	cmp.w	fp, #0
 8013bb0:	dde6      	ble.n	8013b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8013bb2:	ea5f 4229 	movs.w	r2, r9, asr #16
 8013bb6:	ea4f 4328 	mov.w	r3, r8, asr #16
 8013bba:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8013bbe:	f3c8 3103 	ubfx	r1, r8, #12, #4
 8013bc2:	f100 80fc 	bmi.w	8013dbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x316>
 8013bc6:	f102 0c01 	add.w	ip, r2, #1
 8013bca:	4564      	cmp	r4, ip
 8013bcc:	f340 80f9 	ble.w	8013dc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8013bd0:	2b00      	cmp	r3, #0
 8013bd2:	f2c0 80f6 	blt.w	8013dc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8013bd6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8013bd8:	f103 0c01 	add.w	ip, r3, #1
 8013bdc:	4565      	cmp	r5, ip
 8013bde:	f340 80f0 	ble.w	8013dc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8013be2:	fb03 2304 	mla	r3, r3, r4, r2
 8013be6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8013be8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013bea:	441a      	add	r2, r3
 8013bec:	5ceb      	ldrb	r3, [r5, r3]
 8013bee:	f836 e013 	ldrh.w	lr, [r6, r3, lsl #1]
 8013bf2:	2800      	cmp	r0, #0
 8013bf4:	f000 80db 	beq.w	8013dae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x306>
 8013bf8:	7853      	ldrb	r3, [r2, #1]
 8013bfa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013bfe:	9313      	str	r3, [sp, #76]	; 0x4c
 8013c00:	b141      	cbz	r1, 8013c14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013c02:	1913      	adds	r3, r2, r4
 8013c04:	5d12      	ldrb	r2, [r2, r4]
 8013c06:	785b      	ldrb	r3, [r3, #1]
 8013c08:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8013c0c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013c10:	9210      	str	r2, [sp, #64]	; 0x40
 8013c12:	9314      	str	r3, [sp, #80]	; 0x50
 8013c14:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013c16:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8013c18:	fb10 f201 	smulbb	r2, r0, r1
 8013c1c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013c20:	10d2      	asrs	r2, r2, #3
 8013c22:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013c26:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013c2a:	ea4c 0c03 	orr.w	ip, ip, r3
 8013c2e:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8013c32:	930f      	str	r3, [sp, #60]	; 0x3c
 8013c34:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8013c36:	041b      	lsls	r3, r3, #16
 8013c38:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8013c3c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013c40:	432b      	orrs	r3, r5
 8013c42:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8013c44:	4353      	muls	r3, r2
 8013c46:	fb05 330c 	mla	r3, r5, ip, r3
 8013c4a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8013c4e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013c52:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8013c56:	ea4c 0e0e 	orr.w	lr, ip, lr
 8013c5a:	f1c1 0c10 	rsb	ip, r1, #16
 8013c5e:	ebac 0c00 	sub.w	ip, ip, r0
 8013c62:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8013c66:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8013c6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013c6c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8013c6e:	0418      	lsls	r0, r3, #16
 8013c70:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8013c74:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013c78:	4318      	orrs	r0, r3
 8013c7a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8013c7e:	fb02 c200 	mla	r2, r2, r0, ip
 8013c82:	0d53      	lsrs	r3, r2, #21
 8013c84:	0952      	lsrs	r2, r2, #5
 8013c86:	f8b7 c000 	ldrh.w	ip, [r7]
 8013c8a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013c8e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8013c92:	431a      	orrs	r2, r3
 8013c94:	b292      	uxth	r2, r2
 8013c96:	ea4f 212c 	mov.w	r1, ip, asr #8
 8013c9a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013c9e:	1210      	asrs	r0, r2, #8
 8013ca0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013ca4:	fb11 f105 	smulbb	r1, r1, r5
 8013ca8:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8013cac:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013cb0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013cb4:	fb00 1003 	mla	r0, r0, r3, r1
 8013cb8:	fa5f fc8c 	uxtb.w	ip, ip
 8013cbc:	10d1      	asrs	r1, r2, #3
 8013cbe:	00d2      	lsls	r2, r2, #3
 8013cc0:	fb1c fc05 	smulbb	ip, ip, r5
 8013cc4:	b2d2      	uxtb	r2, r2
 8013cc6:	fb02 c203 	mla	r2, r2, r3, ip
 8013cca:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013cce:	b280      	uxth	r0, r0
 8013cd0:	b292      	uxth	r2, r2
 8013cd2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013cd6:	fb1e fe05 	smulbb	lr, lr, r5
 8013cda:	fb01 e103 	mla	r1, r1, r3, lr
 8013cde:	f102 0c01 	add.w	ip, r2, #1
 8013ce2:	1c43      	adds	r3, r0, #1
 8013ce4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8013ce8:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8013cec:	b289      	uxth	r1, r1
 8013cee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013cf2:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8013cf6:	4313      	orrs	r3, r2
 8013cf8:	1c4a      	adds	r2, r1, #1
 8013cfa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8013cfe:	0949      	lsrs	r1, r1, #5
 8013d00:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013d04:	430b      	orrs	r3, r1
 8013d06:	803b      	strh	r3, [r7, #0]
 8013d08:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8013d0a:	4499      	add	r9, r3
 8013d0c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8013d0e:	3702      	adds	r7, #2
 8013d10:	4498      	add	r8, r3
 8013d12:	f10b 3bff 	add.w	fp, fp, #4294967295
 8013d16:	e749      	b.n	8013bac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8013d18:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8013d1a:	4499      	add	r9, r3
 8013d1c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8013d1e:	4498      	add	r8, r3
 8013d20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013d22:	3b01      	subs	r3, #1
 8013d24:	9309      	str	r3, [sp, #36]	; 0x24
 8013d26:	f10a 0a02 	add.w	sl, sl, #2
 8013d2a:	e6f9      	b.n	8013b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8013d2c:	f47f af0a 	bne.w	8013b44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8013d30:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013d32:	2b00      	cmp	r3, #0
 8013d34:	f340 8109 	ble.w	8013f4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8013d38:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8013d3c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013d40:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8013d44:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013d46:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8013d4a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8013d4e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013d52:	eef0 6a48 	vmov.f32	s13, s16
 8013d56:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013d5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013d5e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013d62:	ee16 9a90 	vmov	r9, s13
 8013d66:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013d6a:	eef0 6a68 	vmov.f32	s13, s17
 8013d6e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013d72:	ee18 2a10 	vmov	r2, s16
 8013d76:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013d7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8013d7e:	ee18 2a90 	vmov	r2, s17
 8013d82:	932f      	str	r3, [sp, #188]	; 0xbc
 8013d84:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013d86:	fb92 f3f3 	sdiv	r3, r2, r3
 8013d8a:	9330      	str	r3, [sp, #192]	; 0xc0
 8013d8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013d8e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8013d90:	3b01      	subs	r3, #1
 8013d92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013d96:	930d      	str	r3, [sp, #52]	; 0x34
 8013d98:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013d9a:	bf08      	it	eq
 8013d9c:	4613      	moveq	r3, r2
 8013d9e:	ee16 8a90 	vmov	r8, s13
 8013da2:	9309      	str	r3, [sp, #36]	; 0x24
 8013da4:	eef0 8a67 	vmov.f32	s17, s15
 8013da8:	eeb0 8a47 	vmov.f32	s16, s14
 8013dac:	e6b1      	b.n	8013b12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8013dae:	2900      	cmp	r1, #0
 8013db0:	f43f af30 	beq.w	8013c14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013db4:	5d13      	ldrb	r3, [r2, r4]
 8013db6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013dba:	9310      	str	r3, [sp, #64]	; 0x40
 8013dbc:	e72a      	b.n	8013c14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013dbe:	1c55      	adds	r5, r2, #1
 8013dc0:	d1a2      	bne.n	8013d08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013dc2:	4294      	cmp	r4, r2
 8013dc4:	dda0      	ble.n	8013d08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013dc6:	1c5d      	adds	r5, r3, #1
 8013dc8:	db9e      	blt.n	8013d08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013dca:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8013dcc:	429d      	cmp	r5, r3
 8013dce:	dd9b      	ble.n	8013d08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013dd0:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8013dd4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8013dd6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013dd8:	9202      	str	r2, [sp, #8]
 8013dda:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8013dde:	e9cd 4300 	strd	r4, r3, [sp]
 8013de2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013de4:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013de6:	4633      	mov	r3, r6
 8013de8:	4639      	mov	r1, r7
 8013dea:	f7ff fd7f 	bl	80138ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8013dee:	e78b      	b.n	8013d08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013df0:	ea4f 4329 	mov.w	r3, r9, asr #16
 8013df4:	ea4f 4228 	mov.w	r2, r8, asr #16
 8013df8:	fb04 3202 	mla	r2, r4, r2, r3
 8013dfc:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013dfe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013e00:	4413      	add	r3, r2
 8013e02:	5c8a      	ldrb	r2, [r1, r2]
 8013e04:	f3c9 3c03 	ubfx	ip, r9, #12, #4
 8013e08:	f3c8 3003 	ubfx	r0, r8, #12, #4
 8013e0c:	f836 1012 	ldrh.w	r1, [r6, r2, lsl #1]
 8013e10:	f1bc 0f00 	cmp.w	ip, #0
 8013e14:	f000 8091 	beq.w	8013f3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x492>
 8013e18:	785a      	ldrb	r2, [r3, #1]
 8013e1a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8013e1e:	9215      	str	r2, [sp, #84]	; 0x54
 8013e20:	b140      	cbz	r0, 8013e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8013e22:	191a      	adds	r2, r3, r4
 8013e24:	5d1b      	ldrb	r3, [r3, r4]
 8013e26:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013e2a:	9311      	str	r3, [sp, #68]	; 0x44
 8013e2c:	7853      	ldrb	r3, [r2, #1]
 8013e2e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013e32:	9316      	str	r3, [sp, #88]	; 0x58
 8013e34:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013e36:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8013e38:	fb1c f200 	smulbb	r2, ip, r0
 8013e3c:	041f      	lsls	r7, r3, #16
 8013e3e:	10d2      	asrs	r2, r2, #3
 8013e40:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013e44:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8013e48:	431f      	orrs	r7, r3
 8013e4a:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8013e4e:	9319      	str	r3, [sp, #100]	; 0x64
 8013e50:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8013e52:	041b      	lsls	r3, r3, #16
 8013e54:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8013e58:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013e5c:	ea43 030b 	orr.w	r3, r3, fp
 8013e60:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8013e62:	4353      	muls	r3, r2
 8013e64:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8013e68:	fb05 3707 	mla	r7, r5, r7, r3
 8013e6c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8013e70:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8013e74:	ea43 0b01 	orr.w	fp, r3, r1
 8013e78:	f1c0 0110 	rsb	r1, r0, #16
 8013e7c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013e7e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8013e80:	eba1 0c0c 	sub.w	ip, r1, ip
 8013e84:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8013e88:	fb0c 770b 	mla	r7, ip, fp, r7
 8013e8c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013e90:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8013e94:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013e98:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8013e9c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8013ea0:	fb02 770c 	mla	r7, r2, ip, r7
 8013ea4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013ea6:	0d79      	lsrs	r1, r7, #21
 8013ea8:	8812      	ldrh	r2, [r2, #0]
 8013eaa:	097f      	lsrs	r7, r7, #5
 8013eac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013eb0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013eb4:	430f      	orrs	r7, r1
 8013eb6:	1211      	asrs	r1, r2, #8
 8013eb8:	b2bb      	uxth	r3, r7
 8013eba:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013ebe:	fb11 f105 	smulbb	r1, r1, r5
 8013ec2:	1218      	asrs	r0, r3, #8
 8013ec4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013ec6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013eca:	fb00 1005 	mla	r0, r0, r5, r1
 8013ece:	10d7      	asrs	r7, r2, #3
 8013ed0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8013ed2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013ed6:	fb17 f705 	smulbb	r7, r7, r5
 8013eda:	10d9      	asrs	r1, r3, #3
 8013edc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013ede:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013ee2:	fb01 7105 	mla	r1, r1, r5, r7
 8013ee6:	00d2      	lsls	r2, r2, #3
 8013ee8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8013eea:	b2d2      	uxtb	r2, r2
 8013eec:	fb12 f205 	smulbb	r2, r2, r5
 8013ef0:	00db      	lsls	r3, r3, #3
 8013ef2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013ef4:	b2db      	uxtb	r3, r3
 8013ef6:	b280      	uxth	r0, r0
 8013ef8:	fb03 2305 	mla	r3, r3, r5, r2
 8013efc:	b29b      	uxth	r3, r3
 8013efe:	b289      	uxth	r1, r1
 8013f00:	1c42      	adds	r2, r0, #1
 8013f02:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8013f06:	1c4f      	adds	r7, r1, #1
 8013f08:	1c5a      	adds	r2, r3, #1
 8013f0a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8013f0e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8013f12:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8013f16:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013f1a:	0949      	lsrs	r1, r1, #5
 8013f1c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013f1e:	4310      	orrs	r0, r2
 8013f20:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013f24:	4308      	orrs	r0, r1
 8013f26:	f823 0b02 	strh.w	r0, [r3], #2
 8013f2a:	930f      	str	r3, [sp, #60]	; 0x3c
 8013f2c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8013f2e:	4499      	add	r9, r3
 8013f30:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8013f32:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013f36:	4498      	add	r8, r3
 8013f38:	e61e      	b.n	8013b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8013f3a:	2800      	cmp	r0, #0
 8013f3c:	f43f af7a 	beq.w	8013e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8013f40:	5d1b      	ldrb	r3, [r3, r4]
 8013f42:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013f46:	9311      	str	r3, [sp, #68]	; 0x44
 8013f48:	e774      	b.n	8013e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8013f4a:	b01b      	add	sp, #108	; 0x6c
 8013f4c:	ecbd 8b08 	vpop	{d8-d11}
 8013f50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8013f54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013f58:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8013f5c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8013f60:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8013f64:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8013f68:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8013f6c:	8808      	ldrh	r0, [r1, #0]
 8013f6e:	fb06 570e 	mla	r7, r6, lr, r5
 8013f72:	2e00      	cmp	r6, #0
 8013f74:	eb02 0807 	add.w	r8, r2, r7
 8013f78:	db38      	blt.n	8013fec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8013f7a:	45b1      	cmp	r9, r6
 8013f7c:	dd36      	ble.n	8013fec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8013f7e:	2d00      	cmp	r5, #0
 8013f80:	db32      	blt.n	8013fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8013f82:	45ae      	cmp	lr, r5
 8013f84:	dd30      	ble.n	8013fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8013f86:	5dd2      	ldrb	r2, [r2, r7]
 8013f88:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8013f8c:	1c6a      	adds	r2, r5, #1
 8013f8e:	d430      	bmi.n	8013ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8013f90:	4596      	cmp	lr, r2
 8013f92:	dd2e      	ble.n	8013ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8013f94:	b36c      	cbz	r4, 8013ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8013f96:	f898 2001 	ldrb.w	r2, [r8, #1]
 8013f9a:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8013f9e:	3601      	adds	r6, #1
 8013fa0:	d42b      	bmi.n	8013ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8013fa2:	45b1      	cmp	r9, r6
 8013fa4:	dd29      	ble.n	8013ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8013fa6:	f1bc 0f00 	cmp.w	ip, #0
 8013faa:	d028      	beq.n	8013ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8013fac:	2d00      	cmp	r5, #0
 8013fae:	db22      	blt.n	8013ff6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8013fb0:	45ae      	cmp	lr, r5
 8013fb2:	dd20      	ble.n	8013ff6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8013fb4:	f818 600e 	ldrb.w	r6, [r8, lr]
 8013fb8:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8013fbc:	3501      	adds	r5, #1
 8013fbe:	d407      	bmi.n	8013fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013fc0:	45ae      	cmp	lr, r5
 8013fc2:	dd05      	ble.n	8013fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013fc4:	b134      	cbz	r4, 8013fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8013fc6:	44c6      	add	lr, r8
 8013fc8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8013fcc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013fd0:	2c0f      	cmp	r4, #15
 8013fd2:	d802      	bhi.n	8013fda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8013fd4:	f1bc 0f0f 	cmp.w	ip, #15
 8013fd8:	d914      	bls.n	8014004 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8013fda:	4b26      	ldr	r3, [pc, #152]	; (8014074 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8013fdc:	4a26      	ldr	r2, [pc, #152]	; (8014078 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8013fde:	4827      	ldr	r0, [pc, #156]	; (801407c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8013fe0:	f240 3155 	movw	r1, #853	; 0x355
 8013fe4:	f006 fcfe 	bl	801a9e4 <__assert_func>
 8013fe8:	4607      	mov	r7, r0
 8013fea:	e7cf      	b.n	8013f8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8013fec:	4602      	mov	r2, r0
 8013fee:	4607      	mov	r7, r0
 8013ff0:	e7d5      	b.n	8013f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8013ff2:	4602      	mov	r2, r0
 8013ff4:	e7d3      	b.n	8013f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8013ff6:	4606      	mov	r6, r0
 8013ff8:	e7e0      	b.n	8013fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8013ffa:	4606      	mov	r6, r0
 8013ffc:	e7e8      	b.n	8013fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013ffe:	2c0f      	cmp	r4, #15
 8014000:	d8eb      	bhi.n	8013fda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014002:	4606      	mov	r6, r0
 8014004:	043d      	lsls	r5, r7, #16
 8014006:	fb14 f30c 	smulbb	r3, r4, ip
 801400a:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801400e:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8014012:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014016:	10db      	asrs	r3, r3, #3
 8014018:	432f      	orrs	r7, r5
 801401a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801401e:	f1cc 0510 	rsb	r5, ip, #16
 8014022:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014026:	1b2d      	subs	r5, r5, r4
 8014028:	ea4e 0202 	orr.w	r2, lr, r2
 801402c:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8014030:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8014034:	4354      	muls	r4, r2
 8014036:	fb05 4507 	mla	r5, r5, r7, r4
 801403a:	0404      	lsls	r4, r0, #16
 801403c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014040:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014044:	4320      	orrs	r0, r4
 8014046:	fb03 5400 	mla	r4, r3, r0, r5
 801404a:	0430      	lsls	r0, r6, #16
 801404c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014050:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8014054:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8014058:	4330      	orrs	r0, r6
 801405a:	fb03 4000 	mla	r0, r3, r0, r4
 801405e:	0d43      	lsrs	r3, r0, #21
 8014060:	0940      	lsrs	r0, r0, #5
 8014062:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014066:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801406a:	4318      	orrs	r0, r3
 801406c:	8008      	strh	r0, [r1, #0]
 801406e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014072:	bf00      	nop
 8014074:	0801e61b 	.word	0x0801e61b
 8014078:	0801ec22 	.word	0x0801ec22
 801407c:	0801e6a3 	.word	0x0801e6a3

08014080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014084:	ed2d 8b0a 	vpush	{d8-d12}
 8014088:	b095      	sub	sp, #84	; 0x54
 801408a:	e9dd 9629 	ldrd	r9, r6, [sp, #164]	; 0xa4
 801408e:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 8014090:	9306      	str	r3, [sp, #24]
 8014092:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8014096:	9109      	str	r1, [sp, #36]	; 0x24
 8014098:	9307      	str	r3, [sp, #28]
 801409a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801409e:	9012      	str	r0, [sp, #72]	; 0x48
 80140a0:	6878      	ldr	r0, [r7, #4]
 80140a2:	9211      	str	r2, [sp, #68]	; 0x44
 80140a4:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80140a6:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 80140aa:	fb00 1303 	mla	r3, r0, r3, r1
 80140ae:	6839      	ldr	r1, [r7, #0]
 80140b0:	6857      	ldr	r7, [r2, #4]
 80140b2:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 80140b6:	6813      	ldr	r3, [r2, #0]
 80140b8:	9308      	str	r3, [sp, #32]
 80140ba:	eeb0 aa40 	vmov.f32	s20, s0
 80140be:	eef0 9a60 	vmov.f32	s19, s1
 80140c2:	eeb0 9a41 	vmov.f32	s18, s2
 80140c6:	eeb0 8a62 	vmov.f32	s16, s5
 80140ca:	eef0 8a43 	vmov.f32	s17, s6
 80140ce:	eeb0 ca44 	vmov.f32	s24, s8
 80140d2:	eef0 ba64 	vmov.f32	s23, s9
 80140d6:	eeb0 ba45 	vmov.f32	s22, s10
 80140da:	3704      	adds	r7, #4
 80140dc:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 80140e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80140e2:	2b00      	cmp	r3, #0
 80140e4:	dc03      	bgt.n	80140ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80140e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80140e8:	2b00      	cmp	r3, #0
 80140ea:	f340 819a 	ble.w	8014422 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 80140ee:	9b06      	ldr	r3, [sp, #24]
 80140f0:	2b00      	cmp	r3, #0
 80140f2:	f340 80c4 	ble.w	801427e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80140f6:	ea5f 4229 	movs.w	r2, r9, asr #16
 80140fa:	ea4f 4326 	mov.w	r3, r6, asr #16
 80140fe:	d429      	bmi.n	8014154 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8014100:	1c51      	adds	r1, r2, #1
 8014102:	428c      	cmp	r4, r1
 8014104:	dd29      	ble.n	801415a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8014106:	2b00      	cmp	r3, #0
 8014108:	db27      	blt.n	801415a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 801410a:	9807      	ldr	r0, [sp, #28]
 801410c:	1c59      	adds	r1, r3, #1
 801410e:	4288      	cmp	r0, r1
 8014110:	dd23      	ble.n	801415a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8014112:	9b06      	ldr	r3, [sp, #24]
 8014114:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014116:	3b01      	subs	r3, #1
 8014118:	fb02 9203 	mla	r2, r2, r3, r9
 801411c:	1412      	asrs	r2, r2, #16
 801411e:	d425      	bmi.n	801416c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8014120:	3201      	adds	r2, #1
 8014122:	4294      	cmp	r4, r2
 8014124:	dd22      	ble.n	801416c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8014126:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014128:	fb02 6303 	mla	r3, r2, r3, r6
 801412c:	141b      	asrs	r3, r3, #16
 801412e:	d41d      	bmi.n	801416c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8014130:	9a07      	ldr	r2, [sp, #28]
 8014132:	3301      	adds	r3, #1
 8014134:	429a      	cmp	r2, r3
 8014136:	dd19      	ble.n	801416c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8014138:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801413c:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 8014140:	f1b8 0f00 	cmp.w	r8, #0
 8014144:	f300 80f8 	bgt.w	8014338 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b8>
 8014148:	9b06      	ldr	r3, [sp, #24]
 801414a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801414e:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8014152:	e096      	b.n	8014282 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8014154:	1c51      	adds	r1, r2, #1
 8014156:	f040 8088 	bne.w	801426a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 801415a:	42a2      	cmp	r2, r4
 801415c:	f280 8085 	bge.w	801426a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8014160:	1c5a      	adds	r2, r3, #1
 8014162:	f2c0 8082 	blt.w	801426a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8014166:	9a07      	ldr	r2, [sp, #28]
 8014168:	4293      	cmp	r3, r2
 801416a:	da7e      	bge.n	801426a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 801416c:	f8dd b018 	ldr.w	fp, [sp, #24]
 8014170:	46d0      	mov	r8, sl
 8014172:	f1bb 0f00 	cmp.w	fp, #0
 8014176:	dde7      	ble.n	8014148 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8014178:	ea5f 4229 	movs.w	r2, r9, asr #16
 801417c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8014180:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8014184:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8014188:	f100 80c0 	bmi.w	801430c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 801418c:	f102 0c01 	add.w	ip, r2, #1
 8014190:	4564      	cmp	r4, ip
 8014192:	f340 80bd 	ble.w	8014310 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8014196:	2b00      	cmp	r3, #0
 8014198:	f2c0 80ba 	blt.w	8014310 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 801419c:	9d07      	ldr	r5, [sp, #28]
 801419e:	f103 0c01 	add.w	ip, r3, #1
 80141a2:	4565      	cmp	r5, ip
 80141a4:	f340 80b4 	ble.w	8014310 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 80141a8:	fb03 2304 	mla	r3, r3, r4, r2
 80141ac:	9d08      	ldr	r5, [sp, #32]
 80141ae:	9a08      	ldr	r2, [sp, #32]
 80141b0:	441a      	add	r2, r3
 80141b2:	5ceb      	ldrb	r3, [r5, r3]
 80141b4:	f837 e013 	ldrh.w	lr, [r7, r3, lsl #1]
 80141b8:	2800      	cmp	r0, #0
 80141ba:	f000 809f 	beq.w	80142fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27c>
 80141be:	7853      	ldrb	r3, [r2, #1]
 80141c0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80141c4:	930d      	str	r3, [sp, #52]	; 0x34
 80141c6:	b141      	cbz	r1, 80141da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 80141c8:	1913      	adds	r3, r2, r4
 80141ca:	5d12      	ldrb	r2, [r2, r4]
 80141cc:	785b      	ldrb	r3, [r3, #1]
 80141ce:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80141d2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80141d6:	920a      	str	r2, [sp, #40]	; 0x28
 80141d8:	930e      	str	r3, [sp, #56]	; 0x38
 80141da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80141dc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80141de:	fb10 f201 	smulbb	r2, r0, r1
 80141e2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80141e6:	10d2      	asrs	r2, r2, #3
 80141e8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80141ec:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80141f0:	ea4c 0c03 	orr.w	ip, ip, r3
 80141f4:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 80141f8:	930c      	str	r3, [sp, #48]	; 0x30
 80141fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80141fc:	041b      	lsls	r3, r3, #16
 80141fe:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8014202:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014206:	432b      	orrs	r3, r5
 8014208:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801420a:	4353      	muls	r3, r2
 801420c:	fb05 330c 	mla	r3, r5, ip, r3
 8014210:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014214:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014218:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801421c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014220:	f1c1 0c10 	rsb	ip, r1, #16
 8014224:	ebac 0c00 	sub.w	ip, ip, r0
 8014228:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801422c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014230:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014232:	0418      	lsls	r0, r3, #16
 8014234:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014238:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801423c:	4318      	orrs	r0, r3
 801423e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014242:	fb02 c200 	mla	r2, r2, r0, ip
 8014246:	0d53      	lsrs	r3, r2, #21
 8014248:	0952      	lsrs	r2, r2, #5
 801424a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801424e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014252:	431a      	orrs	r2, r3
 8014254:	f8a8 2000 	strh.w	r2, [r8]
 8014258:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801425a:	4499      	add	r9, r3
 801425c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801425e:	f108 0802 	add.w	r8, r8, #2
 8014262:	441e      	add	r6, r3
 8014264:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014268:	e783      	b.n	8014172 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801426a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801426c:	4499      	add	r9, r3
 801426e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014270:	441e      	add	r6, r3
 8014272:	9b06      	ldr	r3, [sp, #24]
 8014274:	3b01      	subs	r3, #1
 8014276:	9306      	str	r3, [sp, #24]
 8014278:	f10a 0a02 	add.w	sl, sl, #2
 801427c:	e737      	b.n	80140ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801427e:	f47f af48 	bne.w	8014112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8014282:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014284:	2b00      	cmp	r3, #0
 8014286:	f340 80cc 	ble.w	8014422 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 801428a:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801428e:	ee79 9aab 	vadd.f32	s19, s19, s23
 8014292:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8014296:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014298:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801429c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80142a0:	eef0 6a48 	vmov.f32	s13, s16
 80142a4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80142a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80142ac:	ee37 8a48 	vsub.f32	s16, s14, s16
 80142b0:	ee16 9a90 	vmov	r9, s13
 80142b4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80142b8:	eef0 6a68 	vmov.f32	s13, s17
 80142bc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80142c0:	ee18 2a10 	vmov	r2, s16
 80142c4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80142c8:	fb92 f3f3 	sdiv	r3, r2, r3
 80142cc:	ee18 2a90 	vmov	r2, s17
 80142d0:	932b      	str	r3, [sp, #172]	; 0xac
 80142d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80142d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80142d8:	932c      	str	r3, [sp, #176]	; 0xb0
 80142da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80142dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80142de:	3b01      	subs	r3, #1
 80142e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80142e4:	9309      	str	r3, [sp, #36]	; 0x24
 80142e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80142e8:	bf08      	it	eq
 80142ea:	4613      	moveq	r3, r2
 80142ec:	ee16 6a90 	vmov	r6, s13
 80142f0:	9306      	str	r3, [sp, #24]
 80142f2:	eef0 8a67 	vmov.f32	s17, s15
 80142f6:	eeb0 8a47 	vmov.f32	s16, s14
 80142fa:	e6f1      	b.n	80140e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 80142fc:	2900      	cmp	r1, #0
 80142fe:	f43f af6c 	beq.w	80141da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8014302:	5d13      	ldrb	r3, [r2, r4]
 8014304:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014308:	930a      	str	r3, [sp, #40]	; 0x28
 801430a:	e766      	b.n	80141da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 801430c:	1c55      	adds	r5, r2, #1
 801430e:	d1a3      	bne.n	8014258 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014310:	4294      	cmp	r4, r2
 8014312:	dda1      	ble.n	8014258 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014314:	1c5d      	adds	r5, r3, #1
 8014316:	db9f      	blt.n	8014258 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014318:	9d07      	ldr	r5, [sp, #28]
 801431a:	429d      	cmp	r5, r3
 801431c:	dd9c      	ble.n	8014258 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 801431e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8014322:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8014326:	e9cd 4500 	strd	r4, r5, [sp]
 801432a:	463b      	mov	r3, r7
 801432c:	9a08      	ldr	r2, [sp, #32]
 801432e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014330:	4641      	mov	r1, r8
 8014332:	f7ff fe0f 	bl	8013f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8014336:	e78f      	b.n	8014258 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014338:	ea4f 4329 	mov.w	r3, r9, asr #16
 801433c:	1432      	asrs	r2, r6, #16
 801433e:	fb04 3202 	mla	r2, r4, r2, r3
 8014342:	9908      	ldr	r1, [sp, #32]
 8014344:	9b08      	ldr	r3, [sp, #32]
 8014346:	4413      	add	r3, r2
 8014348:	5c8a      	ldrb	r2, [r1, r2]
 801434a:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 801434e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8014352:	f837 1012 	ldrh.w	r1, [r7, r2, lsl #1]
 8014356:	f1be 0f00 	cmp.w	lr, #0
 801435a:	d05b      	beq.n	8014414 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x394>
 801435c:	785a      	ldrb	r2, [r3, #1]
 801435e:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8014362:	920f      	str	r2, [sp, #60]	; 0x3c
 8014364:	b140      	cbz	r0, 8014378 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014366:	191a      	adds	r2, r3, r4
 8014368:	5d1b      	ldrb	r3, [r3, r4]
 801436a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801436e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014370:	7853      	ldrb	r3, [r2, #1]
 8014372:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014376:	9310      	str	r3, [sp, #64]	; 0x40
 8014378:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801437a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801437c:	fb1e f200 	smulbb	r2, lr, r0
 8014380:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014384:	10d2      	asrs	r2, r2, #3
 8014386:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801438a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801438e:	ea4c 0c03 	orr.w	ip, ip, r3
 8014392:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8014396:	9313      	str	r3, [sp, #76]	; 0x4c
 8014398:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801439a:	041b      	lsls	r3, r3, #16
 801439c:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80143a0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80143a4:	ea43 030b 	orr.w	r3, r3, fp
 80143a8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80143aa:	4353      	muls	r3, r2
 80143ac:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80143b0:	fb05 3c0c 	mla	ip, r5, ip, r3
 80143b4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80143b8:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80143bc:	ea43 0b01 	orr.w	fp, r3, r1
 80143c0:	f1c0 0110 	rsb	r1, r0, #16
 80143c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80143c6:	eba1 0e0e 	sub.w	lr, r1, lr
 80143ca:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80143ce:	fb0e cc0b 	mla	ip, lr, fp, ip
 80143d2:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80143d6:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80143da:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80143de:	ea4b 0e0e 	orr.w	lr, fp, lr
 80143e2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80143e6:	fb02 cc0e 	mla	ip, r2, lr, ip
 80143ea:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80143ee:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80143f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80143f6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80143fa:	ea43 0c0c 	orr.w	ip, r3, ip
 80143fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014400:	f823 cb02 	strh.w	ip, [r3], #2
 8014404:	930c      	str	r3, [sp, #48]	; 0x30
 8014406:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014408:	4499      	add	r9, r3
 801440a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801440c:	f108 38ff 	add.w	r8, r8, #4294967295
 8014410:	441e      	add	r6, r3
 8014412:	e695      	b.n	8014140 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8014414:	2800      	cmp	r0, #0
 8014416:	d0af      	beq.n	8014378 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014418:	5d1b      	ldrb	r3, [r3, r4]
 801441a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801441e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014420:	e7aa      	b.n	8014378 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014422:	b015      	add	sp, #84	; 0x54
 8014424:	ecbd 8b0a 	vpop	{d8-d12}
 8014428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801442c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801442c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014430:	468b      	mov	fp, r1
 8014432:	8809      	ldrh	r1, [r1, #0]
 8014434:	b089      	sub	sp, #36	; 0x24
 8014436:	10cd      	asrs	r5, r1, #3
 8014438:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 801443c:	ea4f 2921 	mov.w	r9, r1, asr #8
 8014440:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014444:	00c9      	lsls	r1, r1, #3
 8014446:	9500      	str	r5, [sp, #0]
 8014448:	b2c9      	uxtb	r1, r1
 801444a:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 801444e:	9101      	str	r1, [sp, #4]
 8014450:	9900      	ldr	r1, [sp, #0]
 8014452:	9202      	str	r2, [sp, #8]
 8014454:	fb04 650e 	mla	r5, r4, lr, r6
 8014458:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801445c:	eb02 0805 	add.w	r8, r2, r5
 8014460:	0209      	lsls	r1, r1, #8
 8014462:	9a01      	ldr	r2, [sp, #4]
 8014464:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8014468:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 801446c:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8014470:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8014474:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8014478:	4311      	orrs	r1, r2
 801447a:	2c00      	cmp	r4, #0
 801447c:	9107      	str	r1, [sp, #28]
 801447e:	db43      	blt.n	8014508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014480:	45a2      	cmp	sl, r4
 8014482:	dd41      	ble.n	8014508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014484:	2e00      	cmp	r6, #0
 8014486:	db3d      	blt.n	8014504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8014488:	45b6      	cmp	lr, r6
 801448a:	dd3b      	ble.n	8014504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801448c:	9a02      	ldr	r2, [sp, #8]
 801448e:	5d55      	ldrb	r5, [r2, r5]
 8014490:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014494:	441d      	add	r5, r3
 8014496:	1c72      	adds	r2, r6, #1
 8014498:	d439      	bmi.n	801450e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801449a:	4596      	cmp	lr, r2
 801449c:	dd37      	ble.n	801450e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801449e:	2f00      	cmp	r7, #0
 80144a0:	d035      	beq.n	801450e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80144a2:	f898 1001 	ldrb.w	r1, [r8, #1]
 80144a6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80144aa:	4419      	add	r1, r3
 80144ac:	3401      	adds	r4, #1
 80144ae:	d432      	bmi.n	8014516 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80144b0:	45a2      	cmp	sl, r4
 80144b2:	dd30      	ble.n	8014516 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80144b4:	b378      	cbz	r0, 8014516 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80144b6:	2e00      	cmp	r6, #0
 80144b8:	db2b      	blt.n	8014512 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80144ba:	45b6      	cmp	lr, r6
 80144bc:	dd29      	ble.n	8014512 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80144be:	f818 400e 	ldrb.w	r4, [r8, lr]
 80144c2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80144c6:	441c      	add	r4, r3
 80144c8:	3601      	adds	r6, #1
 80144ca:	d427      	bmi.n	801451c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80144cc:	45b6      	cmp	lr, r6
 80144ce:	dd25      	ble.n	801451c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80144d0:	b327      	cbz	r7, 801451c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80144d2:	44c6      	add	lr, r8
 80144d4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80144d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80144dc:	4413      	add	r3, r2
 80144de:	782a      	ldrb	r2, [r5, #0]
 80144e0:	9202      	str	r2, [sp, #8]
 80144e2:	780a      	ldrb	r2, [r1, #0]
 80144e4:	9203      	str	r2, [sp, #12]
 80144e6:	7822      	ldrb	r2, [r4, #0]
 80144e8:	9204      	str	r2, [sp, #16]
 80144ea:	2f0f      	cmp	r7, #15
 80144ec:	781a      	ldrb	r2, [r3, #0]
 80144ee:	9205      	str	r2, [sp, #20]
 80144f0:	d801      	bhi.n	80144f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 80144f2:	280f      	cmp	r0, #15
 80144f4:	d914      	bls.n	8014520 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 80144f6:	4b3f      	ldr	r3, [pc, #252]	; (80145f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 80144f8:	4a3f      	ldr	r2, [pc, #252]	; (80145f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 80144fa:	4840      	ldr	r0, [pc, #256]	; (80145fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 80144fc:	f240 3173 	movw	r1, #883	; 0x373
 8014500:	f006 fa70 	bl	801a9e4 <__assert_func>
 8014504:	ad07      	add	r5, sp, #28
 8014506:	e7c6      	b.n	8014496 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8014508:	a907      	add	r1, sp, #28
 801450a:	460d      	mov	r5, r1
 801450c:	e7ce      	b.n	80144ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801450e:	a907      	add	r1, sp, #28
 8014510:	e7cc      	b.n	80144ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014512:	ac07      	add	r4, sp, #28
 8014514:	e7d8      	b.n	80144c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8014516:	ab07      	add	r3, sp, #28
 8014518:	461c      	mov	r4, r3
 801451a:	e7e0      	b.n	80144de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 801451c:	ab07      	add	r3, sp, #28
 801451e:	e7de      	b.n	80144de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014520:	b2ba      	uxth	r2, r7
 8014522:	b280      	uxth	r0, r0
 8014524:	fb02 fa00 	mul.w	sl, r2, r0
 8014528:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 801452c:	0112      	lsls	r2, r2, #4
 801452e:	b280      	uxth	r0, r0
 8014530:	f891 8002 	ldrb.w	r8, [r1, #2]
 8014534:	7849      	ldrb	r1, [r1, #1]
 8014536:	78ae      	ldrb	r6, [r5, #2]
 8014538:	786d      	ldrb	r5, [r5, #1]
 801453a:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 801453e:	eba2 020a 	sub.w	r2, r2, sl
 8014542:	b292      	uxth	r2, r2
 8014544:	ebae 0e00 	sub.w	lr, lr, r0
 8014548:	fa1f fe8e 	uxth.w	lr, lr
 801454c:	4351      	muls	r1, r2
 801454e:	fb02 f808 	mul.w	r8, r2, r8
 8014552:	fb0e 8806 	mla	r8, lr, r6, r8
 8014556:	fb0e 1505 	mla	r5, lr, r5, r1
 801455a:	78a6      	ldrb	r6, [r4, #2]
 801455c:	7861      	ldrb	r1, [r4, #1]
 801455e:	fa1f f78c 	uxth.w	r7, ip
 8014562:	fb00 8806 	mla	r8, r0, r6, r8
 8014566:	fb00 5501 	mla	r5, r0, r1, r5
 801456a:	789e      	ldrb	r6, [r3, #2]
 801456c:	7859      	ldrb	r1, [r3, #1]
 801456e:	9b00      	ldr	r3, [sp, #0]
 8014570:	ea6f 0c0c 	mvn.w	ip, ip
 8014574:	fa5f fc8c 	uxtb.w	ip, ip
 8014578:	fb0a 5101 	mla	r1, sl, r1, r5
 801457c:	fb13 f50c 	smulbb	r5, r3, ip
 8014580:	9b03      	ldr	r3, [sp, #12]
 8014582:	435a      	muls	r2, r3
 8014584:	9b02      	ldr	r3, [sp, #8]
 8014586:	fb0e 2203 	mla	r2, lr, r3, r2
 801458a:	9b04      	ldr	r3, [sp, #16]
 801458c:	fb00 2003 	mla	r0, r0, r3, r2
 8014590:	9b05      	ldr	r3, [sp, #20]
 8014592:	fb0a 8606 	mla	r6, sl, r6, r8
 8014596:	fb0a 0a03 	mla	sl, sl, r3, r0
 801459a:	9b01      	ldr	r3, [sp, #4]
 801459c:	fb19 f90c 	smulbb	r9, r9, ip
 80145a0:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 80145a4:	fb13 fc0c 	smulbb	ip, r3, ip
 80145a8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80145ac:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80145b0:	fb06 9607 	mla	r6, r6, r7, r9
 80145b4:	fb01 5107 	mla	r1, r1, r7, r5
 80145b8:	fb0a c707 	mla	r7, sl, r7, ip
 80145bc:	b2b6      	uxth	r6, r6
 80145be:	b289      	uxth	r1, r1
 80145c0:	b2bf      	uxth	r7, r7
 80145c2:	f106 0901 	add.w	r9, r6, #1
 80145c6:	f107 0c01 	add.w	ip, r7, #1
 80145ca:	1c4d      	adds	r5, r1, #1
 80145cc:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80145d0:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 80145d4:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 80145d8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80145dc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80145e0:	0949      	lsrs	r1, r1, #5
 80145e2:	433e      	orrs	r6, r7
 80145e4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80145e8:	430e      	orrs	r6, r1
 80145ea:	f8ab 6000 	strh.w	r6, [fp]
 80145ee:	b009      	add	sp, #36	; 0x24
 80145f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80145f4:	0801e61b 	.word	0x0801e61b
 80145f8:	0801eb79 	.word	0x0801eb79
 80145fc:	0801e6a3 	.word	0x0801e6a3

08014600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014604:	ed2d 8b08 	vpush	{d8-d11}
 8014608:	b097      	sub	sp, #92	; 0x5c
 801460a:	eeb0 aa40 	vmov.f32	s20, s0
 801460e:	9309      	str	r3, [sp, #36]	; 0x24
 8014610:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8014614:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8014616:	930b      	str	r3, [sp, #44]	; 0x2c
 8014618:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 801461c:	9310      	str	r3, [sp, #64]	; 0x40
 801461e:	910f      	str	r1, [sp, #60]	; 0x3c
 8014620:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8014624:	9015      	str	r0, [sp, #84]	; 0x54
 8014626:	6860      	ldr	r0, [r4, #4]
 8014628:	9213      	str	r2, [sp, #76]	; 0x4c
 801462a:	fb00 1303 	mla	r3, r0, r3, r1
 801462e:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014630:	6821      	ldr	r1, [r4, #0]
 8014632:	6854      	ldr	r4, [r2, #4]
 8014634:	f9bd 50c0 	ldrsh.w	r5, [sp, #192]	; 0xc0
 8014638:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801463c:	930a      	str	r3, [sp, #40]	; 0x28
 801463e:	6813      	ldr	r3, [r2, #0]
 8014640:	930e      	str	r3, [sp, #56]	; 0x38
 8014642:	1d23      	adds	r3, r4, #4
 8014644:	9308      	str	r3, [sp, #32]
 8014646:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014648:	43db      	mvns	r3, r3
 801464a:	b2db      	uxtb	r3, r3
 801464c:	eef0 9a60 	vmov.f32	s19, s1
 8014650:	eeb0 9a41 	vmov.f32	s18, s2
 8014654:	eeb0 8a62 	vmov.f32	s16, s5
 8014658:	eef0 8a43 	vmov.f32	s17, s6
 801465c:	eef0 ba44 	vmov.f32	s23, s8
 8014660:	eeb0 ba64 	vmov.f32	s22, s9
 8014664:	eef0 aa45 	vmov.f32	s21, s10
 8014668:	930c      	str	r3, [sp, #48]	; 0x30
 801466a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801466c:	2b00      	cmp	r3, #0
 801466e:	dc03      	bgt.n	8014678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8014670:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014672:	2b00      	cmp	r3, #0
 8014674:	f340 825c 	ble.w	8014b30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8014678:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801467a:	2b00      	cmp	r3, #0
 801467c:	f340 8127 	ble.w	80148ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ce>
 8014680:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014682:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014684:	1412      	asrs	r2, r2, #16
 8014686:	ea4f 4323 	mov.w	r3, r3, asr #16
 801468a:	d430      	bmi.n	80146ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801468c:	1c51      	adds	r1, r2, #1
 801468e:	428d      	cmp	r5, r1
 8014690:	dd30      	ble.n	80146f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8014692:	2b00      	cmp	r3, #0
 8014694:	db2e      	blt.n	80146f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8014696:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014698:	1c59      	adds	r1, r3, #1
 801469a:	4288      	cmp	r0, r1
 801469c:	dd2a      	ble.n	80146f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 801469e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80146a0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80146a2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80146a4:	3b01      	subs	r3, #1
 80146a6:	fb02 1203 	mla	r2, r2, r3, r1
 80146aa:	1412      	asrs	r2, r2, #16
 80146ac:	d42c      	bmi.n	8014708 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 80146ae:	3201      	adds	r2, #1
 80146b0:	4295      	cmp	r5, r2
 80146b2:	dd29      	ble.n	8014708 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 80146b4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80146b6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80146b8:	fb02 1303 	mla	r3, r2, r3, r1
 80146bc:	141b      	asrs	r3, r3, #16
 80146be:	d423      	bmi.n	8014708 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 80146c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80146c2:	3301      	adds	r3, #1
 80146c4:	429a      	cmp	r2, r3
 80146c6:	dd1f      	ble.n	8014708 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 80146c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80146ca:	9311      	str	r3, [sp, #68]	; 0x44
 80146cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80146ce:	930d      	str	r3, [sp, #52]	; 0x34
 80146d0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80146d4:	9312      	str	r3, [sp, #72]	; 0x48
 80146d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80146d8:	2b00      	cmp	r3, #0
 80146da:	f300 8161 	bgt.w	80149a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a0>
 80146de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80146e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80146e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80146e6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80146ea:	930a      	str	r3, [sp, #40]	; 0x28
 80146ec:	e0f1      	b.n	80148d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 80146ee:	1c51      	adds	r1, r2, #1
 80146f0:	f040 80de 	bne.w	80148b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80146f4:	42aa      	cmp	r2, r5
 80146f6:	f280 80db 	bge.w	80148b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80146fa:	1c5f      	adds	r7, r3, #1
 80146fc:	f2c0 80d8 	blt.w	80148b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014700:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014702:	4293      	cmp	r3, r2
 8014704:	f280 80d4 	bge.w	80148b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014708:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801470a:	9311      	str	r3, [sp, #68]	; 0x44
 801470c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801470e:	930d      	str	r3, [sp, #52]	; 0x34
 8014710:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014712:	2b00      	cmp	r3, #0
 8014714:	dde3      	ble.n	80146de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8014716:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014718:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801471a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801471c:	141a      	asrs	r2, r3, #16
 801471e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014720:	1400      	asrs	r0, r0, #16
 8014722:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014726:	f3c1 3103 	ubfx	r1, r1, #12, #4
 801472a:	f100 8120 	bmi.w	801496e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36e>
 801472e:	1c46      	adds	r6, r0, #1
 8014730:	42b5      	cmp	r5, r6
 8014732:	f340 811e 	ble.w	8014972 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8014736:	2a00      	cmp	r2, #0
 8014738:	f2c0 811b 	blt.w	8014972 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 801473c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801473e:	1c56      	adds	r6, r2, #1
 8014740:	42b7      	cmp	r7, r6
 8014742:	f340 8116 	ble.w	8014972 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8014746:	fb02 0005 	mla	r0, r2, r5, r0
 801474a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801474c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801474e:	9c08      	ldr	r4, [sp, #32]
 8014750:	4402      	add	r2, r0
 8014752:	5c30      	ldrb	r0, [r6, r0]
 8014754:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014758:	9014      	str	r0, [sp, #80]	; 0x50
 801475a:	1826      	adds	r6, r4, r0
 801475c:	2b00      	cmp	r3, #0
 801475e:	f000 80f7 	beq.w	8014950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x350>
 8014762:	f892 e001 	ldrb.w	lr, [r2, #1]
 8014766:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801476a:	44a6      	add	lr, r4
 801476c:	2900      	cmp	r1, #0
 801476e:	f000 80f8 	beq.w	8014962 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 8014772:	1950      	adds	r0, r2, r5
 8014774:	5d52      	ldrb	r2, [r2, r5]
 8014776:	7840      	ldrb	r0, [r0, #1]
 8014778:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801477c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014780:	4422      	add	r2, r4
 8014782:	4420      	add	r0, r4
 8014784:	b29b      	uxth	r3, r3
 8014786:	b289      	uxth	r1, r1
 8014788:	fb03 fa01 	mul.w	sl, r3, r1
 801478c:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 8014790:	011b      	lsls	r3, r3, #4
 8014792:	b289      	uxth	r1, r1
 8014794:	f89e c002 	ldrb.w	ip, [lr, #2]
 8014798:	f896 b002 	ldrb.w	fp, [r6, #2]
 801479c:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801479e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80147a0:	f8b7 8000 	ldrh.w	r8, [r7]
 80147a4:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 80147a8:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 80147ac:	eba3 030a 	sub.w	r3, r3, sl
 80147b0:	b29b      	uxth	r3, r3
 80147b2:	eba9 0901 	sub.w	r9, r9, r1
 80147b6:	fa1f f989 	uxth.w	r9, r9
 80147ba:	fb03 fc0c 	mul.w	ip, r3, ip
 80147be:	fb09 cc0b 	mla	ip, r9, fp, ip
 80147c2:	f892 b002 	ldrb.w	fp, [r2, #2]
 80147c6:	fb01 cc0b 	mla	ip, r1, fp, ip
 80147ca:	f890 b002 	ldrb.w	fp, [r0, #2]
 80147ce:	fb0a cc0b 	mla	ip, sl, fp, ip
 80147d2:	ea4f 2b28 	mov.w	fp, r8, asr #8
 80147d6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80147da:	fb1b fb04 	smulbb	fp, fp, r4
 80147de:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80147e2:	fb0c bc07 	mla	ip, ip, r7, fp
 80147e6:	f896 b001 	ldrb.w	fp, [r6, #1]
 80147ea:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80147ee:	f89e e000 	ldrb.w	lr, [lr]
 80147f2:	435e      	muls	r6, r3
 80147f4:	fb09 660b 	mla	r6, r9, fp, r6
 80147f8:	f892 b001 	ldrb.w	fp, [r2, #1]
 80147fc:	fb01 660b 	mla	r6, r1, fp, r6
 8014800:	f890 b001 	ldrb.w	fp, [r0, #1]
 8014804:	fb0a 660b 	mla	r6, sl, fp, r6
 8014808:	ea4f 0be8 	mov.w	fp, r8, asr #3
 801480c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8014810:	fb1b fb04 	smulbb	fp, fp, r4
 8014814:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014818:	fb06 b607 	mla	r6, r6, r7, fp
 801481c:	b2b4      	uxth	r4, r6
 801481e:	9412      	str	r4, [sp, #72]	; 0x48
 8014820:	9e08      	ldr	r6, [sp, #32]
 8014822:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014824:	f816 b004 	ldrb.w	fp, [r6, r4]
 8014828:	fb03 f30e 	mul.w	r3, r3, lr
 801482c:	f892 e000 	ldrb.w	lr, [r2]
 8014830:	fb09 330b 	mla	r3, r9, fp, r3
 8014834:	fb01 330e 	mla	r3, r1, lr, r3
 8014838:	f890 e000 	ldrb.w	lr, [r0]
 801483c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014840:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8014844:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014846:	fa5f f888 	uxtb.w	r8, r8
 801484a:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 801484e:	fb18 f803 	smulbb	r8, r8, r3
 8014852:	fb0e 8807 	mla	r8, lr, r7, r8
 8014856:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014858:	fa1f fc8c 	uxth.w	ip, ip
 801485c:	fa1f f888 	uxth.w	r8, r8
 8014860:	f103 0b01 	add.w	fp, r3, #1
 8014864:	f10c 0201 	add.w	r2, ip, #1
 8014868:	f108 0e01 	add.w	lr, r8, #1
 801486c:	eb0b 2613 	add.w	r6, fp, r3, lsr #8
 8014870:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014874:	eb0e 2818 	add.w	r8, lr, r8, lsr #8
 8014878:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801487c:	f3c8 28c4 	ubfx	r8, r8, #11, #5
 8014880:	0976      	lsrs	r6, r6, #5
 8014882:	ea4c 0c08 	orr.w	ip, ip, r8
 8014886:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801488a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801488c:	ea4c 0606 	orr.w	r6, ip, r6
 8014890:	801e      	strh	r6, [r3, #0]
 8014892:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014894:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014896:	3302      	adds	r3, #2
 8014898:	930d      	str	r3, [sp, #52]	; 0x34
 801489a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801489c:	4413      	add	r3, r2
 801489e:	9329      	str	r3, [sp, #164]	; 0xa4
 80148a0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80148a2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80148a4:	4413      	add	r3, r2
 80148a6:	932a      	str	r3, [sp, #168]	; 0xa8
 80148a8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80148aa:	3b01      	subs	r3, #1
 80148ac:	9311      	str	r3, [sp, #68]	; 0x44
 80148ae:	e72f      	b.n	8014710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 80148b0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80148b2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80148b4:	4413      	add	r3, r2
 80148b6:	9329      	str	r3, [sp, #164]	; 0xa4
 80148b8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80148ba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80148bc:	4413      	add	r3, r2
 80148be:	932a      	str	r3, [sp, #168]	; 0xa8
 80148c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80148c2:	3b01      	subs	r3, #1
 80148c4:	9309      	str	r3, [sp, #36]	; 0x24
 80148c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80148c8:	3302      	adds	r3, #2
 80148ca:	930a      	str	r3, [sp, #40]	; 0x28
 80148cc:	e6d4      	b.n	8014678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80148ce:	f47f aee6 	bne.w	801469e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80148d2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80148d4:	2b00      	cmp	r3, #0
 80148d6:	f340 812b 	ble.w	8014b30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 80148da:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80148de:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80148e2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80148e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80148e8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80148ec:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80148f0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80148f4:	eef0 6a48 	vmov.f32	s13, s16
 80148f8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80148fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014900:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014904:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8014908:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801490c:	eef0 6a68 	vmov.f32	s13, s17
 8014910:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014914:	ee18 2a10 	vmov	r2, s16
 8014918:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801491c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014920:	ee18 2a90 	vmov	r2, s17
 8014924:	932b      	str	r3, [sp, #172]	; 0xac
 8014926:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014928:	fb92 f3f3 	sdiv	r3, r2, r3
 801492c:	932c      	str	r3, [sp, #176]	; 0xb0
 801492e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014930:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014932:	3b01      	subs	r3, #1
 8014934:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014938:	930f      	str	r3, [sp, #60]	; 0x3c
 801493a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801493c:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8014940:	bf08      	it	eq
 8014942:	4613      	moveq	r3, r2
 8014944:	9309      	str	r3, [sp, #36]	; 0x24
 8014946:	eef0 8a67 	vmov.f32	s17, s15
 801494a:	eeb0 8a47 	vmov.f32	s16, s14
 801494e:	e68c      	b.n	801466a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8014950:	b151      	cbz	r1, 8014968 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8014952:	5d52      	ldrb	r2, [r2, r5]
 8014954:	9808      	ldr	r0, [sp, #32]
 8014956:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801495a:	4402      	add	r2, r0
 801495c:	4630      	mov	r0, r6
 801495e:	46b6      	mov	lr, r6
 8014960:	e710      	b.n	8014784 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 8014962:	4630      	mov	r0, r6
 8014964:	4632      	mov	r2, r6
 8014966:	e70d      	b.n	8014784 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 8014968:	4630      	mov	r0, r6
 801496a:	4632      	mov	r2, r6
 801496c:	e7f7      	b.n	801495e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x35e>
 801496e:	1c46      	adds	r6, r0, #1
 8014970:	d18f      	bne.n	8014892 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8014972:	4285      	cmp	r5, r0
 8014974:	dd8d      	ble.n	8014892 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8014976:	1c54      	adds	r4, r2, #1
 8014978:	db8b      	blt.n	8014892 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 801497a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801497c:	4294      	cmp	r4, r2
 801497e:	dd88      	ble.n	8014892 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8014980:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8014984:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014986:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014988:	9002      	str	r0, [sp, #8]
 801498a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801498e:	e9cd 5300 	strd	r5, r3, [sp]
 8014992:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 8014996:	9b08      	ldr	r3, [sp, #32]
 8014998:	9815      	ldr	r0, [sp, #84]	; 0x54
 801499a:	f7ff fd47 	bl	801442c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801499e:	e778      	b.n	8014892 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80149a0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80149a2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80149a4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80149a6:	1410      	asrs	r0, r2, #16
 80149a8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80149ac:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80149ae:	1412      	asrs	r2, r2, #16
 80149b0:	fb05 2000 	mla	r0, r5, r0, r2
 80149b4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80149b6:	f814 a000 	ldrb.w	sl, [r4, r0]
 80149ba:	4402      	add	r2, r0
 80149bc:	9808      	ldr	r0, [sp, #32]
 80149be:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80149c2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80149c6:	eb00 060a 	add.w	r6, r0, sl
 80149ca:	2b00      	cmp	r3, #0
 80149cc:	f000 80a1 	beq.w	8014b12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 80149d0:	f892 c001 	ldrb.w	ip, [r2, #1]
 80149d4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80149d8:	4484      	add	ip, r0
 80149da:	2900      	cmp	r1, #0
 80149dc:	f000 80a2 	beq.w	8014b24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 80149e0:	1950      	adds	r0, r2, r5
 80149e2:	5d52      	ldrb	r2, [r2, r5]
 80149e4:	7840      	ldrb	r0, [r0, #1]
 80149e6:	9c08      	ldr	r4, [sp, #32]
 80149e8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80149ec:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80149f0:	4422      	add	r2, r4
 80149f2:	4420      	add	r0, r4
 80149f4:	b29b      	uxth	r3, r3
 80149f6:	b289      	uxth	r1, r1
 80149f8:	fb03 f901 	mul.w	r9, r3, r1
 80149fc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014a00:	011b      	lsls	r3, r3, #4
 8014a02:	b289      	uxth	r1, r1
 8014a04:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8014a08:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014a0c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014a0e:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8014a12:	eba3 0309 	sub.w	r3, r3, r9
 8014a16:	b29b      	uxth	r3, r3
 8014a18:	eba8 0801 	sub.w	r8, r8, r1
 8014a1c:	fa1f f888 	uxth.w	r8, r8
 8014a20:	435f      	muls	r7, r3
 8014a22:	fb08 770b 	mla	r7, r8, fp, r7
 8014a26:	f892 b002 	ldrb.w	fp, [r2, #2]
 8014a2a:	f8b4 e000 	ldrh.w	lr, [r4]
 8014a2e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014a30:	fb01 770b 	mla	r7, r1, fp, r7
 8014a34:	f890 b002 	ldrb.w	fp, [r0, #2]
 8014a38:	fb09 770b 	mla	r7, r9, fp, r7
 8014a3c:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8014a40:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8014a44:	fb1b fb04 	smulbb	fp, fp, r4
 8014a48:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014a4a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8014a4e:	fb07 b704 	mla	r7, r7, r4, fp
 8014a52:	f896 b001 	ldrb.w	fp, [r6, #1]
 8014a56:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8014a5a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014a5c:	f89c c000 	ldrb.w	ip, [ip]
 8014a60:	435e      	muls	r6, r3
 8014a62:	fb08 660b 	mla	r6, r8, fp, r6
 8014a66:	f892 b001 	ldrb.w	fp, [r2, #1]
 8014a6a:	fb01 660b 	mla	r6, r1, fp, r6
 8014a6e:	f890 b001 	ldrb.w	fp, [r0, #1]
 8014a72:	fb09 660b 	mla	r6, r9, fp, r6
 8014a76:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8014a7a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8014a7e:	fb1b fb04 	smulbb	fp, fp, r4
 8014a82:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014a84:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014a88:	fb06 b604 	mla	r6, r6, r4, fp
 8014a8c:	9c08      	ldr	r4, [sp, #32]
 8014a8e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8014a92:	fb03 f30c 	mul.w	r3, r3, ip
 8014a96:	f892 c000 	ldrb.w	ip, [r2]
 8014a9a:	fb08 330a 	mla	r3, r8, sl, r3
 8014a9e:	fb01 330c 	mla	r3, r1, ip, r3
 8014aa2:	f890 c000 	ldrb.w	ip, [r0]
 8014aa6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014aaa:	fb09 3c0c 	mla	ip, r9, ip, r3
 8014aae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014ab0:	fa5f fe8e 	uxtb.w	lr, lr
 8014ab4:	fb1e fe03 	smulbb	lr, lr, r3
 8014ab8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014aba:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8014abe:	fb0c ec03 	mla	ip, ip, r3, lr
 8014ac2:	b2bf      	uxth	r7, r7
 8014ac4:	b2b6      	uxth	r6, r6
 8014ac6:	fa1f fc8c 	uxth.w	ip, ip
 8014aca:	1c7b      	adds	r3, r7, #1
 8014acc:	f10c 0201 	add.w	r2, ip, #1
 8014ad0:	f106 0b01 	add.w	fp, r6, #1
 8014ad4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8014ad8:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8014adc:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8014ae0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014ae4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014ae8:	0976      	lsrs	r6, r6, #5
 8014aea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014aec:	4317      	orrs	r7, r2
 8014aee:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014af2:	4337      	orrs	r7, r6
 8014af4:	f823 7b02 	strh.w	r7, [r3], #2
 8014af8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014afa:	930d      	str	r3, [sp, #52]	; 0x34
 8014afc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014afe:	4413      	add	r3, r2
 8014b00:	9329      	str	r3, [sp, #164]	; 0xa4
 8014b02:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014b04:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014b06:	4413      	add	r3, r2
 8014b08:	932a      	str	r3, [sp, #168]	; 0xa8
 8014b0a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014b0c:	3b01      	subs	r3, #1
 8014b0e:	9311      	str	r3, [sp, #68]	; 0x44
 8014b10:	e5e1      	b.n	80146d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8014b12:	b151      	cbz	r1, 8014b2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52a>
 8014b14:	5d52      	ldrb	r2, [r2, r5]
 8014b16:	9808      	ldr	r0, [sp, #32]
 8014b18:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014b1c:	4402      	add	r2, r0
 8014b1e:	4630      	mov	r0, r6
 8014b20:	46b4      	mov	ip, r6
 8014b22:	e767      	b.n	80149f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8014b24:	4630      	mov	r0, r6
 8014b26:	4632      	mov	r2, r6
 8014b28:	e764      	b.n	80149f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8014b2a:	4630      	mov	r0, r6
 8014b2c:	4632      	mov	r2, r6
 8014b2e:	e7f7      	b.n	8014b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>
 8014b30:	b017      	add	sp, #92	; 0x5c
 8014b32:	ecbd 8b08 	vpop	{d8-d11}
 8014b36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8014b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b40:	880e      	ldrh	r6, [r1, #0]
 8014b42:	b085      	sub	sp, #20
 8014b44:	0230      	lsls	r0, r6, #8
 8014b46:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8014b4a:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8014b4e:	0170      	lsls	r0, r6, #5
 8014b50:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8014b54:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8014b58:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8014b5c:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8014b60:	00f6      	lsls	r6, r6, #3
 8014b62:	ea4b 0000 	orr.w	r0, fp, r0
 8014b66:	b2f6      	uxtb	r6, r6
 8014b68:	4691      	mov	r9, r2
 8014b6a:	fb05 7a0c 	mla	sl, r5, ip, r7
 8014b6e:	4306      	orrs	r6, r0
 8014b70:	2d00      	cmp	r5, #0
 8014b72:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8014b76:	9603      	str	r6, [sp, #12]
 8014b78:	eb09 0e0a 	add.w	lr, r9, sl
 8014b7c:	db42      	blt.n	8014c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8014b7e:	45a8      	cmp	r8, r5
 8014b80:	dd40      	ble.n	8014c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8014b82:	2f00      	cmp	r7, #0
 8014b84:	db3c      	blt.n	8014c00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8014b86:	45bc      	cmp	ip, r7
 8014b88:	dd3a      	ble.n	8014c00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8014b8a:	f819 600a 	ldrb.w	r6, [r9, sl]
 8014b8e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014b92:	441e      	add	r6, r3
 8014b94:	1c78      	adds	r0, r7, #1
 8014b96:	d438      	bmi.n	8014c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8014b98:	4584      	cmp	ip, r0
 8014b9a:	dd36      	ble.n	8014c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8014b9c:	b3aa      	cbz	r2, 8014c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8014b9e:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8014ba2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014ba6:	4418      	add	r0, r3
 8014ba8:	3501      	adds	r5, #1
 8014baa:	d432      	bmi.n	8014c12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8014bac:	45a8      	cmp	r8, r5
 8014bae:	dd30      	ble.n	8014c12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8014bb0:	b37c      	cbz	r4, 8014c12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8014bb2:	2f00      	cmp	r7, #0
 8014bb4:	db2b      	blt.n	8014c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8014bb6:	45bc      	cmp	ip, r7
 8014bb8:	dd29      	ble.n	8014c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8014bba:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8014bbe:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014bc2:	441d      	add	r5, r3
 8014bc4:	3701      	adds	r7, #1
 8014bc6:	d427      	bmi.n	8014c18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8014bc8:	45bc      	cmp	ip, r7
 8014bca:	dd25      	ble.n	8014c18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8014bcc:	b322      	cbz	r2, 8014c18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8014bce:	44f4      	add	ip, lr
 8014bd0:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8014bd4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8014bd8:	443b      	add	r3, r7
 8014bda:	781f      	ldrb	r7, [r3, #0]
 8014bdc:	f896 a000 	ldrb.w	sl, [r6]
 8014be0:	f890 b000 	ldrb.w	fp, [r0]
 8014be4:	f895 9000 	ldrb.w	r9, [r5]
 8014be8:	9700      	str	r7, [sp, #0]
 8014bea:	2a0f      	cmp	r2, #15
 8014bec:	d801      	bhi.n	8014bf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 8014bee:	2c0f      	cmp	r4, #15
 8014bf0:	d914      	bls.n	8014c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 8014bf2:	4b2c      	ldr	r3, [pc, #176]	; (8014ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8014bf4:	4a2c      	ldr	r2, [pc, #176]	; (8014ca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8014bf6:	482d      	ldr	r0, [pc, #180]	; (8014cac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8014bf8:	f240 3173 	movw	r1, #883	; 0x373
 8014bfc:	f005 fef2 	bl	801a9e4 <__assert_func>
 8014c00:	ae03      	add	r6, sp, #12
 8014c02:	e7c7      	b.n	8014b94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8014c04:	a803      	add	r0, sp, #12
 8014c06:	4606      	mov	r6, r0
 8014c08:	e7ce      	b.n	8014ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8014c0a:	a803      	add	r0, sp, #12
 8014c0c:	e7cc      	b.n	8014ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8014c0e:	ad03      	add	r5, sp, #12
 8014c10:	e7d8      	b.n	8014bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 8014c12:	ab03      	add	r3, sp, #12
 8014c14:	461d      	mov	r5, r3
 8014c16:	e7e0      	b.n	8014bda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8014c18:	ab03      	add	r3, sp, #12
 8014c1a:	e7de      	b.n	8014bda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8014c1c:	b292      	uxth	r2, r2
 8014c1e:	b2a4      	uxth	r4, r4
 8014c20:	fb02 f804 	mul.w	r8, r2, r4
 8014c24:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 8014c28:	0112      	lsls	r2, r2, #4
 8014c2a:	b2a4      	uxth	r4, r4
 8014c2c:	f890 e002 	ldrb.w	lr, [r0, #2]
 8014c30:	78b7      	ldrb	r7, [r6, #2]
 8014c32:	7840      	ldrb	r0, [r0, #1]
 8014c34:	7876      	ldrb	r6, [r6, #1]
 8014c36:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8014c3a:	eba2 0208 	sub.w	r2, r2, r8
 8014c3e:	b292      	uxth	r2, r2
 8014c40:	ebac 0c04 	sub.w	ip, ip, r4
 8014c44:	fa1f fc8c 	uxth.w	ip, ip
 8014c48:	fb02 fe0e 	mul.w	lr, r2, lr
 8014c4c:	fb0c ee07 	mla	lr, ip, r7, lr
 8014c50:	78af      	ldrb	r7, [r5, #2]
 8014c52:	fb04 ee07 	mla	lr, r4, r7, lr
 8014c56:	789f      	ldrb	r7, [r3, #2]
 8014c58:	785b      	ldrb	r3, [r3, #1]
 8014c5a:	fb08 e707 	mla	r7, r8, r7, lr
 8014c5e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014c62:	fb02 fe0b 	mul.w	lr, r2, fp
 8014c66:	4342      	muls	r2, r0
 8014c68:	7868      	ldrb	r0, [r5, #1]
 8014c6a:	9701      	str	r7, [sp, #4]
 8014c6c:	fb0c ee0a 	mla	lr, ip, sl, lr
 8014c70:	9f00      	ldr	r7, [sp, #0]
 8014c72:	fb0c 2206 	mla	r2, ip, r6, r2
 8014c76:	fb04 ee09 	mla	lr, r4, r9, lr
 8014c7a:	fb04 2400 	mla	r4, r4, r0, r2
 8014c7e:	fb08 ee07 	mla	lr, r8, r7, lr
 8014c82:	9f01      	ldr	r7, [sp, #4]
 8014c84:	fb08 4803 	mla	r8, r8, r3, r4
 8014c88:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8014c8c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014c90:	ea47 070e 	orr.w	r7, r7, lr
 8014c94:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014c98:	ea47 0708 	orr.w	r7, r7, r8
 8014c9c:	800f      	strh	r7, [r1, #0]
 8014c9e:	b005      	add	sp, #20
 8014ca0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ca4:	0801e61b 	.word	0x0801e61b
 8014ca8:	0801eb79 	.word	0x0801eb79
 8014cac:	0801e6a3 	.word	0x0801e6a3

08014cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014cb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014cb4:	ed2d 8b0a 	vpush	{d8-d12}
 8014cb8:	b091      	sub	sp, #68	; 0x44
 8014cba:	eeb0 aa40 	vmov.f32	s20, s0
 8014cbe:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8014cc0:	9307      	str	r3, [sp, #28]
 8014cc2:	f9bd 30b4 	ldrsh.w	r3, [sp, #180]	; 0xb4
 8014cc6:	910c      	str	r1, [sp, #48]	; 0x30
 8014cc8:	9309      	str	r3, [sp, #36]	; 0x24
 8014cca:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8014cce:	900f      	str	r0, [sp, #60]	; 0x3c
 8014cd0:	6860      	ldr	r0, [r4, #4]
 8014cd2:	920e      	str	r2, [sp, #56]	; 0x38
 8014cd4:	fb00 1303 	mla	r3, r0, r3, r1
 8014cd8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8014cda:	6821      	ldr	r1, [r4, #0]
 8014cdc:	6854      	ldr	r4, [r2, #4]
 8014cde:	f8dd b098 	ldr.w	fp, [sp, #152]	; 0x98
 8014ce2:	f9bd 50b0 	ldrsh.w	r5, [sp, #176]	; 0xb0
 8014ce6:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8014cea:	9308      	str	r3, [sp, #32]
 8014cec:	6813      	ldr	r3, [r2, #0]
 8014cee:	930a      	str	r3, [sp, #40]	; 0x28
 8014cf0:	eef0 9a60 	vmov.f32	s19, s1
 8014cf4:	eeb0 9a41 	vmov.f32	s18, s2
 8014cf8:	eeb0 8a62 	vmov.f32	s16, s5
 8014cfc:	eef0 8a43 	vmov.f32	s17, s6
 8014d00:	eeb0 ca44 	vmov.f32	s24, s8
 8014d04:	eef0 ba64 	vmov.f32	s23, s9
 8014d08:	eeb0 ba45 	vmov.f32	s22, s10
 8014d0c:	3404      	adds	r4, #4
 8014d0e:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8014d12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014d14:	2b00      	cmp	r3, #0
 8014d16:	dc03      	bgt.n	8014d20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8014d18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014d1a:	2b00      	cmp	r3, #0
 8014d1c:	f340 81cb 	ble.w	80150b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8014d20:	9b07      	ldr	r3, [sp, #28]
 8014d22:	2b00      	cmp	r3, #0
 8014d24:	f340 80dd 	ble.w	8014ee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x232>
 8014d28:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8014d2a:	1412      	asrs	r2, r2, #16
 8014d2c:	ea4f 432b 	mov.w	r3, fp, asr #16
 8014d30:	d42c      	bmi.n	8014d8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8014d32:	1c51      	adds	r1, r2, #1
 8014d34:	428d      	cmp	r5, r1
 8014d36:	dd2c      	ble.n	8014d92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8014d38:	2b00      	cmp	r3, #0
 8014d3a:	db2a      	blt.n	8014d92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8014d3c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014d3e:	1c59      	adds	r1, r3, #1
 8014d40:	4288      	cmp	r0, r1
 8014d42:	dd26      	ble.n	8014d92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8014d44:	9b07      	ldr	r3, [sp, #28]
 8014d46:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014d48:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014d4a:	3b01      	subs	r3, #1
 8014d4c:	fb02 1203 	mla	r2, r2, r3, r1
 8014d50:	1412      	asrs	r2, r2, #16
 8014d52:	d428      	bmi.n	8014da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014d54:	3201      	adds	r2, #1
 8014d56:	4295      	cmp	r5, r2
 8014d58:	dd25      	ble.n	8014da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014d5a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8014d5c:	fb02 b303 	mla	r3, r2, r3, fp
 8014d60:	141b      	asrs	r3, r3, #16
 8014d62:	d420      	bmi.n	8014da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014d64:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014d66:	3301      	adds	r3, #1
 8014d68:	429a      	cmp	r2, r3
 8014d6a:	dd1c      	ble.n	8014da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014d6c:	9b07      	ldr	r3, [sp, #28]
 8014d6e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014d70:	9b08      	ldr	r3, [sp, #32]
 8014d72:	930d      	str	r3, [sp, #52]	; 0x34
 8014d74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014d76:	2b00      	cmp	r3, #0
 8014d78:	f300 8116 	bgt.w	8014fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014d7c:	9b07      	ldr	r3, [sp, #28]
 8014d7e:	9a08      	ldr	r2, [sp, #32]
 8014d80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014d84:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014d88:	9308      	str	r3, [sp, #32]
 8014d8a:	e0ac      	b.n	8014ee6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x236>
 8014d8c:	1c51      	adds	r1, r2, #1
 8014d8e:	f040 809b 	bne.w	8014ec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014d92:	42aa      	cmp	r2, r5
 8014d94:	f280 8098 	bge.w	8014ec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014d98:	1c5a      	adds	r2, r3, #1
 8014d9a:	f2c0 8095 	blt.w	8014ec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014d9e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014da0:	4293      	cmp	r3, r2
 8014da2:	f280 8091 	bge.w	8014ec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014da6:	9b07      	ldr	r3, [sp, #28]
 8014da8:	930d      	str	r3, [sp, #52]	; 0x34
 8014daa:	9b08      	ldr	r3, [sp, #32]
 8014dac:	930b      	str	r3, [sp, #44]	; 0x2c
 8014dae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014db0:	2b00      	cmp	r3, #0
 8014db2:	dde3      	ble.n	8014d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8014db4:	9825      	ldr	r0, [sp, #148]	; 0x94
 8014db6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014db8:	1400      	asrs	r0, r0, #16
 8014dba:	ea4f 422b 	mov.w	r2, fp, asr #16
 8014dbe:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014dc2:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8014dc6:	f100 80d9 	bmi.w	8014f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2cc>
 8014dca:	1c46      	adds	r6, r0, #1
 8014dcc:	42b5      	cmp	r5, r6
 8014dce:	f340 80d7 	ble.w	8014f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8014dd2:	2a00      	cmp	r2, #0
 8014dd4:	f2c0 80d4 	blt.w	8014f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8014dd8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8014dda:	1c56      	adds	r6, r2, #1
 8014ddc:	42b7      	cmp	r7, r6
 8014dde:	f340 80cf 	ble.w	8014f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8014de2:	fb02 0005 	mla	r0, r2, r5, r0
 8014de6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8014de8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014dea:	4402      	add	r2, r0
 8014dec:	5c30      	ldrb	r0, [r6, r0]
 8014dee:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8014df2:	eb04 0c08 	add.w	ip, r4, r8
 8014df6:	2b00      	cmp	r3, #0
 8014df8:	f000 80b2 	beq.w	8014f60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014dfc:	7856      	ldrb	r6, [r2, #1]
 8014dfe:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014e02:	4426      	add	r6, r4
 8014e04:	2900      	cmp	r1, #0
 8014e06:	f000 80b3 	beq.w	8014f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8014e0a:	1950      	adds	r0, r2, r5
 8014e0c:	5d52      	ldrb	r2, [r2, r5]
 8014e0e:	7840      	ldrb	r0, [r0, #1]
 8014e10:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014e14:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014e18:	4422      	add	r2, r4
 8014e1a:	4420      	add	r0, r4
 8014e1c:	b29b      	uxth	r3, r3
 8014e1e:	b289      	uxth	r1, r1
 8014e20:	fb03 f901 	mul.w	r9, r3, r1
 8014e24:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014e28:	011b      	lsls	r3, r3, #4
 8014e2a:	b289      	uxth	r1, r1
 8014e2c:	78b7      	ldrb	r7, [r6, #2]
 8014e2e:	f89c a002 	ldrb.w	sl, [ip, #2]
 8014e32:	f89c c001 	ldrb.w	ip, [ip, #1]
 8014e36:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8014e3a:	eba3 0309 	sub.w	r3, r3, r9
 8014e3e:	b29b      	uxth	r3, r3
 8014e40:	ebae 0e01 	sub.w	lr, lr, r1
 8014e44:	fa1f fe8e 	uxth.w	lr, lr
 8014e48:	435f      	muls	r7, r3
 8014e4a:	fb0e 770a 	mla	r7, lr, sl, r7
 8014e4e:	f892 a002 	ldrb.w	sl, [r2, #2]
 8014e52:	fb01 770a 	mla	r7, r1, sl, r7
 8014e56:	f890 a002 	ldrb.w	sl, [r0, #2]
 8014e5a:	fb09 7a0a 	mla	sl, r9, sl, r7
 8014e5e:	f814 7008 	ldrb.w	r7, [r4, r8]
 8014e62:	f896 8000 	ldrb.w	r8, [r6]
 8014e66:	7876      	ldrb	r6, [r6, #1]
 8014e68:	fb03 f808 	mul.w	r8, r3, r8
 8014e6c:	fb0e 8807 	mla	r8, lr, r7, r8
 8014e70:	7817      	ldrb	r7, [r2, #0]
 8014e72:	fb01 8807 	mla	r8, r1, r7, r8
 8014e76:	7807      	ldrb	r7, [r0, #0]
 8014e78:	fb09 8707 	mla	r7, r9, r7, r8
 8014e7c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8014e80:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014e84:	ea4a 0707 	orr.w	r7, sl, r7
 8014e88:	4373      	muls	r3, r6
 8014e8a:	f892 a001 	ldrb.w	sl, [r2, #1]
 8014e8e:	fb0e 330c 	mla	r3, lr, ip, r3
 8014e92:	fb01 310a 	mla	r1, r1, sl, r3
 8014e96:	f890 a001 	ldrb.w	sl, [r0, #1]
 8014e9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014e9c:	fb09 1a0a 	mla	sl, r9, sl, r1
 8014ea0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014ea4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014ea8:	ea47 070a 	orr.w	r7, r7, sl
 8014eac:	801f      	strh	r7, [r3, #0]
 8014eae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014eb0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014eb2:	3302      	adds	r3, #2
 8014eb4:	930b      	str	r3, [sp, #44]	; 0x2c
 8014eb6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014eb8:	4413      	add	r3, r2
 8014eba:	9325      	str	r3, [sp, #148]	; 0x94
 8014ebc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014ebe:	449b      	add	fp, r3
 8014ec0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014ec2:	3b01      	subs	r3, #1
 8014ec4:	930d      	str	r3, [sp, #52]	; 0x34
 8014ec6:	e772      	b.n	8014dae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014ec8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014eca:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014ecc:	4413      	add	r3, r2
 8014ece:	9325      	str	r3, [sp, #148]	; 0x94
 8014ed0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014ed2:	449b      	add	fp, r3
 8014ed4:	9b07      	ldr	r3, [sp, #28]
 8014ed6:	3b01      	subs	r3, #1
 8014ed8:	9307      	str	r3, [sp, #28]
 8014eda:	9b08      	ldr	r3, [sp, #32]
 8014edc:	3302      	adds	r3, #2
 8014ede:	9308      	str	r3, [sp, #32]
 8014ee0:	e71e      	b.n	8014d20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8014ee2:	f47f af2f 	bne.w	8014d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8014ee6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014ee8:	2b00      	cmp	r3, #0
 8014eea:	f340 80e4 	ble.w	80150b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8014eee:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8014ef2:	ee79 9aab 	vadd.f32	s19, s19, s23
 8014ef6:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8014efa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014efc:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8014f00:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014f04:	eef0 6a48 	vmov.f32	s13, s16
 8014f08:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014f0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014f10:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014f14:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8014f18:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014f1c:	eef0 6a68 	vmov.f32	s13, s17
 8014f20:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014f24:	ee18 2a10 	vmov	r2, s16
 8014f28:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014f2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f30:	ee18 2a90 	vmov	r2, s17
 8014f34:	9327      	str	r3, [sp, #156]	; 0x9c
 8014f36:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014f38:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f3c:	9328      	str	r3, [sp, #160]	; 0xa0
 8014f3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014f40:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014f42:	3b01      	subs	r3, #1
 8014f44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014f48:	930c      	str	r3, [sp, #48]	; 0x30
 8014f4a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014f4c:	bf08      	it	eq
 8014f4e:	4613      	moveq	r3, r2
 8014f50:	ee16 ba90 	vmov	fp, s13
 8014f54:	9307      	str	r3, [sp, #28]
 8014f56:	eef0 8a67 	vmov.f32	s17, s15
 8014f5a:	eeb0 8a47 	vmov.f32	s16, s14
 8014f5e:	e6d8      	b.n	8014d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8014f60:	b149      	cbz	r1, 8014f76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c6>
 8014f62:	5d52      	ldrb	r2, [r2, r5]
 8014f64:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014f68:	4422      	add	r2, r4
 8014f6a:	4660      	mov	r0, ip
 8014f6c:	4666      	mov	r6, ip
 8014f6e:	e755      	b.n	8014e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8014f70:	4660      	mov	r0, ip
 8014f72:	4662      	mov	r2, ip
 8014f74:	e752      	b.n	8014e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8014f76:	4660      	mov	r0, ip
 8014f78:	4662      	mov	r2, ip
 8014f7a:	e7f7      	b.n	8014f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8014f7c:	1c47      	adds	r7, r0, #1
 8014f7e:	d196      	bne.n	8014eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014f80:	4285      	cmp	r5, r0
 8014f82:	dd94      	ble.n	8014eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014f84:	1c56      	adds	r6, r2, #1
 8014f86:	db92      	blt.n	8014eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014f88:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8014f8a:	4296      	cmp	r6, r2
 8014f8c:	dd8f      	ble.n	8014eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014f8e:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8014f92:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8014f96:	e9cd 5600 	strd	r5, r6, [sp]
 8014f9a:	4623      	mov	r3, r4
 8014f9c:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
 8014fa0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014fa2:	f7ff fdcb 	bl	8014b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8014fa6:	e782      	b.n	8014eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014fa8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8014faa:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8014fac:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014fae:	1412      	asrs	r2, r2, #16
 8014fb0:	ea4f 402b 	mov.w	r0, fp, asr #16
 8014fb4:	fb05 2000 	mla	r0, r5, r0, r2
 8014fb8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014fba:	f816 8000 	ldrb.w	r8, [r6, r0]
 8014fbe:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014fc2:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8014fc6:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8014fca:	4402      	add	r2, r0
 8014fcc:	eb04 0c08 	add.w	ip, r4, r8
 8014fd0:	2b00      	cmp	r3, #0
 8014fd2:	d062      	beq.n	801509a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ea>
 8014fd4:	7856      	ldrb	r6, [r2, #1]
 8014fd6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014fda:	4426      	add	r6, r4
 8014fdc:	2900      	cmp	r1, #0
 8014fde:	d064      	beq.n	80150aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3fa>
 8014fe0:	1950      	adds	r0, r2, r5
 8014fe2:	5d52      	ldrb	r2, [r2, r5]
 8014fe4:	7840      	ldrb	r0, [r0, #1]
 8014fe6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014fea:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014fee:	4422      	add	r2, r4
 8014ff0:	4420      	add	r0, r4
 8014ff2:	b29b      	uxth	r3, r3
 8014ff4:	b289      	uxth	r1, r1
 8014ff6:	fb03 f901 	mul.w	r9, r3, r1
 8014ffa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014ffe:	011b      	lsls	r3, r3, #4
 8015000:	b289      	uxth	r1, r1
 8015002:	78b7      	ldrb	r7, [r6, #2]
 8015004:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015008:	f89c c001 	ldrb.w	ip, [ip, #1]
 801500c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015010:	eba3 0309 	sub.w	r3, r3, r9
 8015014:	b29b      	uxth	r3, r3
 8015016:	ebae 0e01 	sub.w	lr, lr, r1
 801501a:	fa1f fe8e 	uxth.w	lr, lr
 801501e:	435f      	muls	r7, r3
 8015020:	fb0e 770a 	mla	r7, lr, sl, r7
 8015024:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015028:	fb01 770a 	mla	r7, r1, sl, r7
 801502c:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015030:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015034:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015038:	f896 8000 	ldrb.w	r8, [r6]
 801503c:	7876      	ldrb	r6, [r6, #1]
 801503e:	fb03 f808 	mul.w	r8, r3, r8
 8015042:	fb0e 8807 	mla	r8, lr, r7, r8
 8015046:	7817      	ldrb	r7, [r2, #0]
 8015048:	fb01 8807 	mla	r8, r1, r7, r8
 801504c:	7807      	ldrb	r7, [r0, #0]
 801504e:	fb09 8707 	mla	r7, r9, r7, r8
 8015052:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015056:	4373      	muls	r3, r6
 8015058:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801505c:	7856      	ldrb	r6, [r2, #1]
 801505e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015060:	ea4a 0707 	orr.w	r7, sl, r7
 8015064:	fb0e 330c 	mla	r3, lr, ip, r3
 8015068:	f890 a001 	ldrb.w	sl, [r0, #1]
 801506c:	fb01 3306 	mla	r3, r1, r6, r3
 8015070:	fb09 3a0a 	mla	sl, r9, sl, r3
 8015074:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015078:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801507a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801507e:	ea47 070a 	orr.w	r7, r7, sl
 8015082:	f823 7b02 	strh.w	r7, [r3], #2
 8015086:	930d      	str	r3, [sp, #52]	; 0x34
 8015088:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801508a:	4413      	add	r3, r2
 801508c:	9325      	str	r3, [sp, #148]	; 0x94
 801508e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015090:	449b      	add	fp, r3
 8015092:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015094:	3b01      	subs	r3, #1
 8015096:	930b      	str	r3, [sp, #44]	; 0x2c
 8015098:	e66c      	b.n	8014d74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 801509a:	b149      	cbz	r1, 80150b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x400>
 801509c:	5d52      	ldrb	r2, [r2, r5]
 801509e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80150a2:	4422      	add	r2, r4
 80150a4:	4660      	mov	r0, ip
 80150a6:	4666      	mov	r6, ip
 80150a8:	e7a3      	b.n	8014ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 80150aa:	4660      	mov	r0, ip
 80150ac:	4662      	mov	r2, ip
 80150ae:	e7a0      	b.n	8014ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 80150b0:	4660      	mov	r0, ip
 80150b2:	4662      	mov	r2, ip
 80150b4:	e7f7      	b.n	80150a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f6>
 80150b6:	b011      	add	sp, #68	; 0x44
 80150b8:	ecbd 8b0a 	vpop	{d8-d12}
 80150bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080150c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80150c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150c4:	8808      	ldrh	r0, [r1, #0]
 80150c6:	b085      	sub	sp, #20
 80150c8:	1206      	asrs	r6, r0, #8
 80150ca:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 80150ce:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80150d2:	9600      	str	r6, [sp, #0]
 80150d4:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80150d8:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 80150dc:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 80150e0:	10c6      	asrs	r6, r0, #3
 80150e2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80150e6:	9601      	str	r6, [sp, #4]
 80150e8:	00c0      	lsls	r0, r0, #3
 80150ea:	fb04 560c 	mla	r6, r4, ip, r5
 80150ee:	b2c0      	uxtb	r0, r0
 80150f0:	4692      	mov	sl, r2
 80150f2:	eb02 0e06 	add.w	lr, r2, r6
 80150f6:	9a00      	ldr	r2, [sp, #0]
 80150f8:	9002      	str	r0, [sp, #8]
 80150fa:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 80150fe:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8015102:	9a01      	ldr	r2, [sp, #4]
 8015104:	2c00      	cmp	r4, #0
 8015106:	4698      	mov	r8, r3
 8015108:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 801510c:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8015110:	db3e      	blt.n	8015190 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8015112:	45a1      	cmp	r9, r4
 8015114:	dd3c      	ble.n	8015190 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8015116:	2d00      	cmp	r5, #0
 8015118:	db38      	blt.n	801518c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 801511a:	45ac      	cmp	ip, r5
 801511c:	dd36      	ble.n	801518c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 801511e:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8015122:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8015126:	1c6e      	adds	r6, r5, #1
 8015128:	d435      	bmi.n	8015196 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 801512a:	45b4      	cmp	ip, r6
 801512c:	dd33      	ble.n	8015196 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 801512e:	b393      	cbz	r3, 8015196 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8015130:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8015134:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8015138:	3401      	adds	r4, #1
 801513a:	d430      	bmi.n	801519e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 801513c:	45a1      	cmp	r9, r4
 801513e:	dd2e      	ble.n	801519e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8015140:	b36f      	cbz	r7, 801519e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8015142:	2d00      	cmp	r5, #0
 8015144:	db29      	blt.n	801519a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8015146:	45ac      	cmp	ip, r5
 8015148:	dd27      	ble.n	801519a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 801514a:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801514e:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8015152:	3501      	adds	r5, #1
 8015154:	d407      	bmi.n	8015166 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8015156:	45ac      	cmp	ip, r5
 8015158:	dd05      	ble.n	8015166 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801515a:	b123      	cbz	r3, 8015166 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801515c:	44f4      	add	ip, lr
 801515e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8015162:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8015166:	2b0f      	cmp	r3, #15
 8015168:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801516c:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015170:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8015174:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8015178:	d801      	bhi.n	801517e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801517a:	2f0f      	cmp	r7, #15
 801517c:	d911      	bls.n	80151a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe2>
 801517e:	4b7f      	ldr	r3, [pc, #508]	; (801537c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>)
 8015180:	4a7f      	ldr	r2, [pc, #508]	; (8015380 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>)
 8015182:	4880      	ldr	r0, [pc, #512]	; (8015384 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8015184:	f240 3173 	movw	r1, #883	; 0x373
 8015188:	f005 fc2c 	bl	801a9e4 <__assert_func>
 801518c:	4602      	mov	r2, r0
 801518e:	e7ca      	b.n	8015126 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 8015190:	4606      	mov	r6, r0
 8015192:	4602      	mov	r2, r0
 8015194:	e7d0      	b.n	8015138 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8015196:	4606      	mov	r6, r0
 8015198:	e7ce      	b.n	8015138 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 801519a:	4604      	mov	r4, r0
 801519c:	e7d9      	b.n	8015152 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x92>
 801519e:	4604      	mov	r4, r0
 80151a0:	e7e1      	b.n	8015166 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80151a2:	b29b      	uxth	r3, r3
 80151a4:	b2bf      	uxth	r7, r7
 80151a6:	fb03 fe07 	mul.w	lr, r3, r7
 80151aa:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80151ae:	011b      	lsls	r3, r3, #4
 80151b0:	eba3 0c0e 	sub.w	ip, r3, lr
 80151b4:	b2bf      	uxth	r7, r7
 80151b6:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 80151ba:	fa1f fc8c 	uxth.w	ip, ip
 80151be:	1bed      	subs	r5, r5, r7
 80151c0:	b2ad      	uxth	r5, r5
 80151c2:	fb0c f30a 	mul.w	r3, ip, sl
 80151c6:	fb05 330b 	mla	r3, r5, fp, r3
 80151ca:	fb07 3309 	mla	r3, r7, r9, r3
 80151ce:	fb0e 3308 	mla	r3, lr, r8, r3
 80151d2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80151d6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80151da:	9303      	str	r3, [sp, #12]
 80151dc:	d018      	beq.n	8015210 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x150>
 80151de:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80151e2:	fb0b f303 	mul.w	r3, fp, r3
 80151e6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80151ea:	fb0b fb02 	mul.w	fp, fp, r2
 80151ee:	0a1a      	lsrs	r2, r3, #8
 80151f0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80151f4:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80151f8:	441a      	add	r2, r3
 80151fa:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 80151fe:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8015202:	0a12      	lsrs	r2, r2, #8
 8015204:	0a1b      	lsrs	r3, r3, #8
 8015206:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801520a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801520e:	431a      	orrs	r2, r3
 8015210:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015214:	d019      	beq.n	801524a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x18a>
 8015216:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801521a:	fb0a fb0b 	mul.w	fp, sl, fp
 801521e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015222:	fb0a fa06 	mul.w	sl, sl, r6
 8015226:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801522a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801522e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015232:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8015236:	445e      	add	r6, fp
 8015238:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801523c:	0a36      	lsrs	r6, r6, #8
 801523e:	0a1b      	lsrs	r3, r3, #8
 8015240:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015244:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015248:	431e      	orrs	r6, r3
 801524a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801524e:	d019      	beq.n	8015284 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1c4>
 8015250:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8015254:	fb09 fa0a 	mul.w	sl, r9, sl
 8015258:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801525c:	fb09 f904 	mul.w	r9, r9, r4
 8015260:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8015264:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015268:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801526c:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8015270:	4454      	add	r4, sl
 8015272:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8015276:	0a24      	lsrs	r4, r4, #8
 8015278:	0a1b      	lsrs	r3, r3, #8
 801527a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801527e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015282:	431c      	orrs	r4, r3
 8015284:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015288:	d019      	beq.n	80152be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1fe>
 801528a:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 801528e:	fb08 f909 	mul.w	r9, r8, r9
 8015292:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015296:	fb08 f800 	mul.w	r8, r8, r0
 801529a:	ea4f 2019 	mov.w	r0, r9, lsr #8
 801529e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80152a2:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80152a6:	f508 7380 	add.w	r3, r8, #256	; 0x100
 80152aa:	4448      	add	r0, r9
 80152ac:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80152b0:	0a00      	lsrs	r0, r0, #8
 80152b2:	0a1b      	lsrs	r3, r3, #8
 80152b4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80152b8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80152bc:	4318      	orrs	r0, r3
 80152be:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80152c2:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80152c6:	fb0c f808 	mul.w	r8, ip, r8
 80152ca:	fb05 8803 	mla	r8, r5, r3, r8
 80152ce:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 80152d2:	fb07 8803 	mla	r8, r7, r3, r8
 80152d6:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 80152da:	fb0e 8303 	mla	r3, lr, r3, r8
 80152de:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80152e2:	fb0c f606 	mul.w	r6, ip, r6
 80152e6:	0a1b      	lsrs	r3, r3, #8
 80152e8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80152ec:	fb05 6202 	mla	r2, r5, r2, r6
 80152f0:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 80152f4:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 80152f8:	fb07 2703 	mla	r7, r7, r3, r2
 80152fc:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8015300:	b295      	uxth	r5, r2
 8015302:	9a03      	ldr	r2, [sp, #12]
 8015304:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8015308:	436a      	muls	r2, r5
 801530a:	fb0e 7303 	mla	r3, lr, r3, r7
 801530e:	1c50      	adds	r0, r2, #1
 8015310:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8015314:	0a1b      	lsrs	r3, r3, #8
 8015316:	9a00      	ldr	r2, [sp, #0]
 8015318:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801531c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8015320:	ea48 0303 	orr.w	r3, r8, r3
 8015324:	b2c0      	uxtb	r0, r0
 8015326:	fb12 f200 	smulbb	r2, r2, r0
 801532a:	0c1e      	lsrs	r6, r3, #16
 801532c:	fb06 2605 	mla	r6, r6, r5, r2
 8015330:	9a01      	ldr	r2, [sp, #4]
 8015332:	f3c3 2407 	ubfx	r4, r3, #8, #8
 8015336:	fb12 f200 	smulbb	r2, r2, r0
 801533a:	fb04 2205 	mla	r2, r4, r5, r2
 801533e:	b294      	uxth	r4, r2
 8015340:	9a02      	ldr	r2, [sp, #8]
 8015342:	b2db      	uxtb	r3, r3
 8015344:	fb12 f200 	smulbb	r2, r2, r0
 8015348:	fb03 2205 	mla	r2, r3, r5, r2
 801534c:	b2b6      	uxth	r6, r6
 801534e:	b292      	uxth	r2, r2
 8015350:	1c73      	adds	r3, r6, #1
 8015352:	1c50      	adds	r0, r2, #1
 8015354:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8015358:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801535c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015360:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015364:	4313      	orrs	r3, r2
 8015366:	1c62      	adds	r2, r4, #1
 8015368:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801536c:	0952      	lsrs	r2, r2, #5
 801536e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015372:	4313      	orrs	r3, r2
 8015374:	800b      	strh	r3, [r1, #0]
 8015376:	b005      	add	sp, #20
 8015378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801537c:	0801e61b 	.word	0x0801e61b
 8015380:	0801eb79 	.word	0x0801eb79
 8015384:	0801e6a3 	.word	0x0801e6a3

08015388 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801538c:	ed2d 8b08 	vpush	{d8-d11}
 8015390:	b09b      	sub	sp, #108	; 0x6c
 8015392:	eeb0 aa40 	vmov.f32	s20, s0
 8015396:	9309      	str	r3, [sp, #36]	; 0x24
 8015398:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 801539c:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 801539e:	9311      	str	r3, [sp, #68]	; 0x44
 80153a0:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80153a4:	9114      	str	r1, [sp, #80]	; 0x50
 80153a6:	9317      	str	r3, [sp, #92]	; 0x5c
 80153a8:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 80153ac:	9019      	str	r0, [sp, #100]	; 0x64
 80153ae:	6868      	ldr	r0, [r5, #4]
 80153b0:	9218      	str	r2, [sp, #96]	; 0x60
 80153b2:	fb00 1303 	mla	r3, r0, r3, r1
 80153b6:	6829      	ldr	r1, [r5, #0]
 80153b8:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 80153ba:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 80153be:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80153c2:	930c      	str	r3, [sp, #48]	; 0x30
 80153c4:	6813      	ldr	r3, [r2, #0]
 80153c6:	9313      	str	r3, [sp, #76]	; 0x4c
 80153c8:	6853      	ldr	r3, [r2, #4]
 80153ca:	3304      	adds	r3, #4
 80153cc:	eef0 9a60 	vmov.f32	s19, s1
 80153d0:	eeb0 9a41 	vmov.f32	s18, s2
 80153d4:	eeb0 8a62 	vmov.f32	s16, s5
 80153d8:	eef0 8a43 	vmov.f32	s17, s6
 80153dc:	eef0 ba44 	vmov.f32	s23, s8
 80153e0:	eeb0 ba64 	vmov.f32	s22, s9
 80153e4:	eef0 aa45 	vmov.f32	s21, s10
 80153e8:	9308      	str	r3, [sp, #32]
 80153ea:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80153ec:	2b00      	cmp	r3, #0
 80153ee:	dc03      	bgt.n	80153f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80153f0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80153f2:	2b00      	cmp	r3, #0
 80153f4:	f340 8363 	ble.w	8015abe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 80153f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80153fa:	2b00      	cmp	r3, #0
 80153fc:	f340 81ad 	ble.w	801575a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d2>
 8015400:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015402:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015404:	1412      	asrs	r2, r2, #16
 8015406:	ea4f 4323 	mov.w	r3, r3, asr #16
 801540a:	d42f      	bmi.n	801546c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801540c:	1c51      	adds	r1, r2, #1
 801540e:	428c      	cmp	r4, r1
 8015410:	dd2f      	ble.n	8015472 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8015412:	2b00      	cmp	r3, #0
 8015414:	db2d      	blt.n	8015472 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8015416:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015418:	1c59      	adds	r1, r3, #1
 801541a:	4288      	cmp	r0, r1
 801541c:	dd29      	ble.n	8015472 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 801541e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015420:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015422:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8015424:	3b01      	subs	r3, #1
 8015426:	fb02 1203 	mla	r2, r2, r3, r1
 801542a:	1412      	asrs	r2, r2, #16
 801542c:	d42b      	bmi.n	8015486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801542e:	3201      	adds	r2, #1
 8015430:	4294      	cmp	r4, r2
 8015432:	dd28      	ble.n	8015486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015434:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015436:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8015438:	fb02 1303 	mla	r3, r2, r3, r1
 801543c:	141b      	asrs	r3, r3, #16
 801543e:	d422      	bmi.n	8015486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015440:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015442:	3301      	adds	r3, #1
 8015444:	429a      	cmp	r2, r3
 8015446:	dd1e      	ble.n	8015486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015448:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801544a:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 801544e:	f8bd b05c 	ldrh.w	fp, [sp, #92]	; 0x5c
 8015452:	9312      	str	r3, [sp, #72]	; 0x48
 8015454:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015456:	2b00      	cmp	r3, #0
 8015458:	f300 81ea 	bgt.w	8015830 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a8>
 801545c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801545e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015460:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015464:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015468:	930c      	str	r3, [sp, #48]	; 0x30
 801546a:	e178      	b.n	801575e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d6>
 801546c:	1c51      	adds	r1, r2, #1
 801546e:	f040 8165 	bne.w	801573c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8015472:	42a2      	cmp	r2, r4
 8015474:	f280 8162 	bge.w	801573c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8015478:	1c5f      	adds	r7, r3, #1
 801547a:	f2c0 815f 	blt.w	801573c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801547e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015480:	4293      	cmp	r3, r2
 8015482:	f280 815b 	bge.w	801573c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8015486:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015488:	9316      	str	r3, [sp, #88]	; 0x58
 801548a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801548c:	9312      	str	r3, [sp, #72]	; 0x48
 801548e:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8015492:	9315      	str	r3, [sp, #84]	; 0x54
 8015494:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8015496:	2b00      	cmp	r3, #0
 8015498:	dde0      	ble.n	801545c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 801549a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801549c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801549e:	f3c2 3003 	ubfx	r0, r2, #12, #4
 80154a2:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80154a4:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80154a8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80154aa:	1412      	asrs	r2, r2, #16
 80154ac:	ea4f 4323 	mov.w	r3, r3, asr #16
 80154b0:	f100 81a5 	bmi.w	80157fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x476>
 80154b4:	1c55      	adds	r5, r2, #1
 80154b6:	42ac      	cmp	r4, r5
 80154b8:	f340 81a3 	ble.w	8015802 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 80154bc:	2b00      	cmp	r3, #0
 80154be:	f2c0 81a0 	blt.w	8015802 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 80154c2:	9f11      	ldr	r7, [sp, #68]	; 0x44
 80154c4:	1c5d      	adds	r5, r3, #1
 80154c6:	42af      	cmp	r7, r5
 80154c8:	f340 819b 	ble.w	8015802 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 80154cc:	fb03 2304 	mla	r3, r3, r4, r2
 80154d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80154d2:	18d5      	adds	r5, r2, r3
 80154d4:	5cd3      	ldrb	r3, [r2, r3]
 80154d6:	9a08      	ldr	r2, [sp, #32]
 80154d8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80154dc:	0e1f      	lsrs	r7, r3, #24
 80154de:	2800      	cmp	r0, #0
 80154e0:	f000 817c 	beq.w	80157dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x454>
 80154e4:	786a      	ldrb	r2, [r5, #1]
 80154e6:	9e08      	ldr	r6, [sp, #32]
 80154e8:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 80154ec:	920d      	str	r2, [sp, #52]	; 0x34
 80154ee:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80154f2:	2900      	cmp	r1, #0
 80154f4:	f000 817d 	beq.w	80157f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46a>
 80154f8:	192a      	adds	r2, r5, r4
 80154fa:	5d2d      	ldrb	r5, [r5, r4]
 80154fc:	7852      	ldrb	r2, [r2, #1]
 80154fe:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 8015502:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8015506:	950a      	str	r5, [sp, #40]	; 0x28
 8015508:	ea4f 6915 	mov.w	r9, r5, lsr #24
 801550c:	920e      	str	r2, [sp, #56]	; 0x38
 801550e:	0e15      	lsrs	r5, r2, #24
 8015510:	b280      	uxth	r0, r0
 8015512:	b289      	uxth	r1, r1
 8015514:	fb00 fa01 	mul.w	sl, r0, r1
 8015518:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 801551c:	0100      	lsls	r0, r0, #4
 801551e:	eba0 080a 	sub.w	r8, r0, sl
 8015522:	b289      	uxth	r1, r1
 8015524:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8015528:	fa1f f888 	uxth.w	r8, r8
 801552c:	1a52      	subs	r2, r2, r1
 801552e:	b292      	uxth	r2, r2
 8015530:	fb08 f00e 	mul.w	r0, r8, lr
 8015534:	fb02 0007 	mla	r0, r2, r7, r0
 8015538:	fb01 0009 	mla	r0, r1, r9, r0
 801553c:	fb0a 0005 	mla	r0, sl, r5, r0
 8015540:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8015544:	2800      	cmp	r0, #0
 8015546:	f000 80ea 	beq.w	801571e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801554a:	2fff      	cmp	r7, #255	; 0xff
 801554c:	d01a      	beq.n	8015584 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fc>
 801554e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8015552:	fb07 fc0c 	mul.w	ip, r7, ip
 8015556:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801555a:	435f      	muls	r7, r3
 801555c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8015560:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015564:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015568:	f507 7b80 	add.w	fp, r7, #256	; 0x100
 801556c:	4463      	add	r3, ip
 801556e:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 8015572:	0a1b      	lsrs	r3, r3, #8
 8015574:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8015578:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801557c:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8015580:	ea43 030b 	orr.w	r3, r3, fp
 8015584:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015588:	d01e      	beq.n	80155c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x240>
 801558a:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 801558c:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015590:	fb0e fb0b 	mul.w	fp, lr, fp
 8015594:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8015598:	fb0e fe07 	mul.w	lr, lr, r7
 801559c:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 80155a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80155a4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80155a8:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 80155ac:	44dc      	add	ip, fp
 80155ae:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 80155b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80155b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80155ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80155be:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80155c2:	ea4c 060e 	orr.w	r6, ip, lr
 80155c6:	960d      	str	r6, [sp, #52]	; 0x34
 80155c8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80155cc:	d01e      	beq.n	801560c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 80155ce:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80155d0:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 80155d4:	fb09 fe0e 	mul.w	lr, r9, lr
 80155d8:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 80155dc:	fb09 f907 	mul.w	r9, r9, r7
 80155e0:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80155e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80155e8:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80155ec:	f509 7780 	add.w	r7, r9, #256	; 0x100
 80155f0:	44f4      	add	ip, lr
 80155f2:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 80155f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80155fa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80155fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015602:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8015606:	ea4c 0609 	orr.w	r6, ip, r9
 801560a:	960a      	str	r6, [sp, #40]	; 0x28
 801560c:	2dff      	cmp	r5, #255	; 0xff
 801560e:	d01c      	beq.n	801564a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c2>
 8015610:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015612:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8015616:	fb05 fe0e 	mul.w	lr, r5, lr
 801561a:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 801561e:	437d      	muls	r5, r7
 8015620:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8015624:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015628:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801562c:	f505 7780 	add.w	r7, r5, #256	; 0x100
 8015630:	44f4      	add	ip, lr
 8015632:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 8015636:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801563a:	0a2d      	lsrs	r5, r5, #8
 801563c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015640:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8015644:	ea4c 0505 	orr.w	r5, ip, r5
 8015648:	950e      	str	r5, [sp, #56]	; 0x38
 801564a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801564c:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801564e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8015652:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8015656:	fb08 f505 	mul.w	r5, r8, r5
 801565a:	fb02 5507 	mla	r5, r2, r7, r5
 801565e:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 8015662:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015664:	fb01 5507 	mla	r5, r1, r7, r5
 8015668:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 801566c:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 801566e:	fb0a 5507 	mla	r5, sl, r7, r5
 8015672:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8015676:	fb08 f807 	mul.w	r8, r8, r7
 801567a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801567e:	fb02 8303 	mla	r3, r2, r3, r8
 8015682:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015684:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8015686:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801568a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801568c:	fb01 330c 	mla	r3, r1, ip, r3
 8015690:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8015694:	fb0a 3a01 	mla	sl, sl, r1, r3
 8015698:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801569a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801569c:	881f      	ldrh	r7, [r3, #0]
 801569e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80156a0:	0a2d      	lsrs	r5, r5, #8
 80156a2:	4343      	muls	r3, r0
 80156a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80156a8:	1c58      	adds	r0, r3, #1
 80156aa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80156ae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80156b2:	ea45 050a 	orr.w	r5, r5, sl
 80156b6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80156ba:	0c29      	lsrs	r1, r5, #16
 80156bc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80156c0:	123b      	asrs	r3, r7, #8
 80156c2:	b2c0      	uxtb	r0, r0
 80156c4:	fb11 f102 	smulbb	r1, r1, r2
 80156c8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80156cc:	fb03 1300 	mla	r3, r3, r0, r1
 80156d0:	b299      	uxth	r1, r3
 80156d2:	10fa      	asrs	r2, r7, #3
 80156d4:	f3c5 2307 	ubfx	r3, r5, #8, #8
 80156d8:	fb13 f306 	smulbb	r3, r3, r6
 80156dc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80156e0:	fb02 3200 	mla	r2, r2, r0, r3
 80156e4:	b2ed      	uxtb	r5, r5
 80156e6:	00fb      	lsls	r3, r7, #3
 80156e8:	b2db      	uxtb	r3, r3
 80156ea:	fb15 f506 	smulbb	r5, r5, r6
 80156ee:	fb03 5500 	mla	r5, r3, r0, r5
 80156f2:	b292      	uxth	r2, r2
 80156f4:	b2ad      	uxth	r5, r5
 80156f6:	1c4b      	adds	r3, r1, #1
 80156f8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80156fc:	1c68      	adds	r0, r5, #1
 80156fe:	1c51      	adds	r1, r2, #1
 8015700:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8015704:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015708:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801570c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015710:	0952      	lsrs	r2, r2, #5
 8015712:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015716:	432b      	orrs	r3, r5
 8015718:	4313      	orrs	r3, r2
 801571a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801571c:	8013      	strh	r3, [r2, #0]
 801571e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015720:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015722:	3302      	adds	r3, #2
 8015724:	9312      	str	r3, [sp, #72]	; 0x48
 8015726:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015728:	4413      	add	r3, r2
 801572a:	932d      	str	r3, [sp, #180]	; 0xb4
 801572c:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 801572e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015730:	4413      	add	r3, r2
 8015732:	932e      	str	r3, [sp, #184]	; 0xb8
 8015734:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8015736:	3b01      	subs	r3, #1
 8015738:	9316      	str	r3, [sp, #88]	; 0x58
 801573a:	e6ab      	b.n	8015494 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10c>
 801573c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801573e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015740:	4413      	add	r3, r2
 8015742:	932d      	str	r3, [sp, #180]	; 0xb4
 8015744:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015746:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015748:	4413      	add	r3, r2
 801574a:	932e      	str	r3, [sp, #184]	; 0xb8
 801574c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801574e:	3b01      	subs	r3, #1
 8015750:	9309      	str	r3, [sp, #36]	; 0x24
 8015752:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015754:	3302      	adds	r3, #2
 8015756:	930c      	str	r3, [sp, #48]	; 0x30
 8015758:	e64e      	b.n	80153f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801575a:	f47f ae60 	bne.w	801541e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 801575e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015760:	2b00      	cmp	r3, #0
 8015762:	f340 81ac 	ble.w	8015abe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8015766:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801576a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801576e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015772:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015774:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015778:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801577c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015780:	eef0 6a48 	vmov.f32	s13, s16
 8015784:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015788:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801578c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015790:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8015794:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015798:	eef0 6a68 	vmov.f32	s13, s17
 801579c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80157a0:	ee18 2a10 	vmov	r2, s16
 80157a4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80157a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80157ac:	ee18 2a90 	vmov	r2, s17
 80157b0:	932f      	str	r3, [sp, #188]	; 0xbc
 80157b2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80157b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80157b8:	9330      	str	r3, [sp, #192]	; 0xc0
 80157ba:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80157bc:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80157be:	3b01      	subs	r3, #1
 80157c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80157c4:	9314      	str	r3, [sp, #80]	; 0x50
 80157c6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80157c8:	edcd 6a2e 	vstr	s13, [sp, #184]	; 0xb8
 80157cc:	bf08      	it	eq
 80157ce:	4613      	moveq	r3, r2
 80157d0:	9309      	str	r3, [sp, #36]	; 0x24
 80157d2:	eef0 8a67 	vmov.f32	s17, s15
 80157d6:	eeb0 8a47 	vmov.f32	s16, s14
 80157da:	e606      	b.n	80153ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 80157dc:	b161      	cbz	r1, 80157f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80157de:	5d2a      	ldrb	r2, [r5, r4]
 80157e0:	9d08      	ldr	r5, [sp, #32]
 80157e2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80157e6:	920a      	str	r2, [sp, #40]	; 0x28
 80157e8:	ea4f 6912 	mov.w	r9, r2, lsr #24
 80157ec:	25ff      	movs	r5, #255	; 0xff
 80157ee:	46ae      	mov	lr, r5
 80157f0:	e68e      	b.n	8015510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 80157f2:	25ff      	movs	r5, #255	; 0xff
 80157f4:	46a9      	mov	r9, r5
 80157f6:	e68b      	b.n	8015510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 80157f8:	25ff      	movs	r5, #255	; 0xff
 80157fa:	46a9      	mov	r9, r5
 80157fc:	e7f7      	b.n	80157ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80157fe:	1c56      	adds	r6, r2, #1
 8015800:	d18d      	bne.n	801571e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015802:	4294      	cmp	r4, r2
 8015804:	dd8b      	ble.n	801571e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015806:	1c5d      	adds	r5, r3, #1
 8015808:	db89      	blt.n	801571e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801580a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801580c:	429d      	cmp	r5, r3
 801580e:	dd86      	ble.n	801571e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015810:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8015814:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8015816:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015818:	9202      	str	r2, [sp, #8]
 801581a:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801581e:	e9cd 4300 	strd	r4, r3, [sp]
 8015822:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
 8015826:	9b08      	ldr	r3, [sp, #32]
 8015828:	9819      	ldr	r0, [sp, #100]	; 0x64
 801582a:	f7ff fc49 	bl	80150c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801582e:	e776      	b.n	801571e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015830:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015832:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015834:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8015838:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801583a:	1412      	asrs	r2, r2, #16
 801583c:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8015840:	141b      	asrs	r3, r3, #16
 8015842:	fb04 2303 	mla	r3, r4, r3, r2
 8015846:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015848:	18d5      	adds	r5, r2, r3
 801584a:	5cd3      	ldrb	r3, [r2, r3]
 801584c:	9a08      	ldr	r2, [sp, #32]
 801584e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8015852:	0e1e      	lsrs	r6, r3, #24
 8015854:	2900      	cmp	r1, #0
 8015856:	f000 8121 	beq.w	8015a9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 801585a:	786a      	ldrb	r2, [r5, #1]
 801585c:	9f08      	ldr	r7, [sp, #32]
 801585e:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8015862:	920f      	str	r2, [sp, #60]	; 0x3c
 8015864:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8015868:	2800      	cmp	r0, #0
 801586a:	f000 8122 	beq.w	8015ab2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72a>
 801586e:	192a      	adds	r2, r5, r4
 8015870:	5d2d      	ldrb	r5, [r5, r4]
 8015872:	7852      	ldrb	r2, [r2, #1]
 8015874:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 8015878:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 801587c:	950b      	str	r5, [sp, #44]	; 0x2c
 801587e:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8015882:	9210      	str	r2, [sp, #64]	; 0x40
 8015884:	0e15      	lsrs	r5, r2, #24
 8015886:	b289      	uxth	r1, r1
 8015888:	b280      	uxth	r0, r0
 801588a:	fb01 f900 	mul.w	r9, r1, r0
 801588e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8015892:	0109      	lsls	r1, r1, #4
 8015894:	eba1 0e09 	sub.w	lr, r1, r9
 8015898:	b280      	uxth	r0, r0
 801589a:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 801589e:	fa1f fe8e 	uxth.w	lr, lr
 80158a2:	1a12      	subs	r2, r2, r0
 80158a4:	b292      	uxth	r2, r2
 80158a6:	fb0e f10c 	mul.w	r1, lr, ip
 80158aa:	fb02 1106 	mla	r1, r2, r6, r1
 80158ae:	fb00 1108 	mla	r1, r0, r8, r1
 80158b2:	fb09 1105 	mla	r1, r9, r5, r1
 80158b6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80158ba:	2900      	cmp	r1, #0
 80158bc:	f000 80e0 	beq.w	8015a80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f8>
 80158c0:	2eff      	cmp	r6, #255	; 0xff
 80158c2:	d016      	beq.n	80158f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56a>
 80158c4:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80158c8:	4377      	muls	r7, r6
 80158ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80158ce:	435e      	muls	r6, r3
 80158d0:	0a3b      	lsrs	r3, r7, #8
 80158d2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80158d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80158da:	443b      	add	r3, r7
 80158dc:	f506 7780 	add.w	r7, r6, #256	; 0x100
 80158e0:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80158e4:	0a1b      	lsrs	r3, r3, #8
 80158e6:	0a3f      	lsrs	r7, r7, #8
 80158e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80158ec:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80158f0:	433b      	orrs	r3, r7
 80158f2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80158f6:	d01d      	beq.n	8015934 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ac>
 80158f8:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80158fa:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80158fc:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015900:	fb0c f606 	mul.w	r6, ip, r6
 8015904:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8015908:	fb0c fc07 	mul.w	ip, ip, r7
 801590c:	0a37      	lsrs	r7, r6, #8
 801590e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015912:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8015916:	4437      	add	r7, r6
 8015918:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 801591c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8015920:	0a3f      	lsrs	r7, r7, #8
 8015922:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015926:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801592a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801592e:	ea47 060c 	orr.w	r6, r7, ip
 8015932:	960f      	str	r6, [sp, #60]	; 0x3c
 8015934:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015938:	d01d      	beq.n	8015976 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ee>
 801593a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 801593c:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8015940:	fb08 fc0c 	mul.w	ip, r8, ip
 8015944:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015948:	fb08 f806 	mul.w	r8, r8, r6
 801594c:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8015950:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8015954:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015958:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801595c:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8015960:	4467      	add	r7, ip
 8015962:	0a3f      	lsrs	r7, r7, #8
 8015964:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015968:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801596c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8015970:	ea47 0608 	orr.w	r6, r7, r8
 8015974:	960b      	str	r6, [sp, #44]	; 0x2c
 8015976:	2dff      	cmp	r5, #255	; 0xff
 8015978:	d01a      	beq.n	80159b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x628>
 801597a:	9e10      	ldr	r6, [sp, #64]	; 0x40
 801597c:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8015980:	fb05 fc0c 	mul.w	ip, r5, ip
 8015984:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015988:	4375      	muls	r5, r6
 801598a:	ea4f 271c 	mov.w	r7, ip, lsr #8
 801598e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015992:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015996:	f505 7680 	add.w	r6, r5, #256	; 0x100
 801599a:	4467      	add	r7, ip
 801599c:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 80159a0:	0a3f      	lsrs	r7, r7, #8
 80159a2:	0a2d      	lsrs	r5, r5, #8
 80159a4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80159a8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80159ac:	433d      	orrs	r5, r7
 80159ae:	9510      	str	r5, [sp, #64]	; 0x40
 80159b0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80159b2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80159b6:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 80159ba:	fb0e f505 	mul.w	r5, lr, r5
 80159be:	fb02 5506 	mla	r5, r2, r6, r5
 80159c2:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80159c4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80159c8:	fb00 5506 	mla	r5, r0, r6, r5
 80159cc:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80159ce:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80159d2:	fb09 5506 	mla	r5, r9, r6, r5
 80159d6:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80159d8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80159dc:	fb0e fe06 	mul.w	lr, lr, r6
 80159e0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80159e4:	fb02 e303 	mla	r3, r2, r3, lr
 80159e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80159ea:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80159ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80159f0:	fb00 3307 	mla	r3, r0, r7, r3
 80159f4:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80159f8:	fb09 3c0c 	mla	ip, r9, ip, r3
 80159fc:	fb01 f10b 	mul.w	r1, r1, fp
 8015a00:	0a2d      	lsrs	r5, r5, #8
 8015a02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015a06:	f8ba 0000 	ldrh.w	r0, [sl]
 8015a0a:	1c4b      	adds	r3, r1, #1
 8015a0c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8015a10:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015a14:	ea45 050c 	orr.w	r5, r5, ip
 8015a18:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8015a1c:	1202      	asrs	r2, r0, #8
 8015a1e:	0c2b      	lsrs	r3, r5, #16
 8015a20:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8015a24:	b2c9      	uxtb	r1, r1
 8015a26:	fb13 f30b 	smulbb	r3, r3, fp
 8015a2a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015a2e:	fb02 3201 	mla	r2, r2, r1, r3
 8015a32:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8015a36:	10c3      	asrs	r3, r0, #3
 8015a38:	b2ed      	uxtb	r5, r5
 8015a3a:	00c0      	lsls	r0, r0, #3
 8015a3c:	b2c0      	uxtb	r0, r0
 8015a3e:	fb15 f50b 	smulbb	r5, r5, fp
 8015a42:	fb00 5001 	mla	r0, r0, r1, r5
 8015a46:	b292      	uxth	r2, r2
 8015a48:	fb16 f60b 	smulbb	r6, r6, fp
 8015a4c:	b280      	uxth	r0, r0
 8015a4e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8015a52:	fb03 6301 	mla	r3, r3, r1, r6
 8015a56:	1c51      	adds	r1, r2, #1
 8015a58:	1c46      	adds	r6, r0, #1
 8015a5a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015a5e:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8015a62:	b29b      	uxth	r3, r3
 8015a64:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015a68:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8015a6c:	4332      	orrs	r2, r6
 8015a6e:	1c5e      	adds	r6, r3, #1
 8015a70:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8015a74:	095b      	lsrs	r3, r3, #5
 8015a76:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015a7a:	431a      	orrs	r2, r3
 8015a7c:	f8aa 2000 	strh.w	r2, [sl]
 8015a80:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015a82:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015a84:	4413      	add	r3, r2
 8015a86:	932d      	str	r3, [sp, #180]	; 0xb4
 8015a88:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015a8a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015a8c:	4413      	add	r3, r2
 8015a8e:	932e      	str	r3, [sp, #184]	; 0xb8
 8015a90:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015a92:	3b01      	subs	r3, #1
 8015a94:	f10a 0a02 	add.w	sl, sl, #2
 8015a98:	9312      	str	r3, [sp, #72]	; 0x48
 8015a9a:	e4db      	b.n	8015454 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8015a9c:	b160      	cbz	r0, 8015ab8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8015a9e:	5d2a      	ldrb	r2, [r5, r4]
 8015aa0:	9d08      	ldr	r5, [sp, #32]
 8015aa2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8015aa6:	920b      	str	r2, [sp, #44]	; 0x2c
 8015aa8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8015aac:	25ff      	movs	r5, #255	; 0xff
 8015aae:	46ac      	mov	ip, r5
 8015ab0:	e6e9      	b.n	8015886 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8015ab2:	25ff      	movs	r5, #255	; 0xff
 8015ab4:	46a8      	mov	r8, r5
 8015ab6:	e6e6      	b.n	8015886 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8015ab8:	25ff      	movs	r5, #255	; 0xff
 8015aba:	46a8      	mov	r8, r5
 8015abc:	e7f7      	b.n	8015aae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x726>
 8015abe:	b01b      	add	sp, #108	; 0x6c
 8015ac0:	ecbd 8b08 	vpop	{d8-d11}
 8015ac4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015ac8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8015ac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015acc:	8808      	ldrh	r0, [r1, #0]
 8015ace:	b085      	sub	sp, #20
 8015ad0:	1206      	asrs	r6, r0, #8
 8015ad2:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8015ad6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015ada:	9600      	str	r6, [sp, #0]
 8015adc:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015ae0:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8015ae4:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8015ae8:	10c6      	asrs	r6, r0, #3
 8015aea:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015aee:	9601      	str	r6, [sp, #4]
 8015af0:	00c0      	lsls	r0, r0, #3
 8015af2:	fb04 560c 	mla	r6, r4, ip, r5
 8015af6:	b2c0      	uxtb	r0, r0
 8015af8:	4692      	mov	sl, r2
 8015afa:	eb02 0e06 	add.w	lr, r2, r6
 8015afe:	9a00      	ldr	r2, [sp, #0]
 8015b00:	9002      	str	r0, [sp, #8]
 8015b02:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8015b06:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8015b0a:	9a01      	ldr	r2, [sp, #4]
 8015b0c:	2c00      	cmp	r4, #0
 8015b0e:	4698      	mov	r8, r3
 8015b10:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8015b14:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8015b18:	db3e      	blt.n	8015b98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8015b1a:	45a1      	cmp	r9, r4
 8015b1c:	dd3c      	ble.n	8015b98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8015b1e:	2d00      	cmp	r5, #0
 8015b20:	db38      	blt.n	8015b94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8015b22:	45ac      	cmp	ip, r5
 8015b24:	dd36      	ble.n	8015b94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8015b26:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8015b2a:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8015b2e:	1c6e      	adds	r6, r5, #1
 8015b30:	d435      	bmi.n	8015b9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8015b32:	45b4      	cmp	ip, r6
 8015b34:	dd33      	ble.n	8015b9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8015b36:	b393      	cbz	r3, 8015b9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8015b38:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8015b3c:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8015b40:	3401      	adds	r4, #1
 8015b42:	d430      	bmi.n	8015ba6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8015b44:	45a1      	cmp	r9, r4
 8015b46:	dd2e      	ble.n	8015ba6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8015b48:	b36f      	cbz	r7, 8015ba6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8015b4a:	2d00      	cmp	r5, #0
 8015b4c:	db29      	blt.n	8015ba2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8015b4e:	45ac      	cmp	ip, r5
 8015b50:	dd27      	ble.n	8015ba2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8015b52:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8015b56:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8015b5a:	3501      	adds	r5, #1
 8015b5c:	d407      	bmi.n	8015b6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8015b5e:	45ac      	cmp	ip, r5
 8015b60:	dd05      	ble.n	8015b6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8015b62:	b123      	cbz	r3, 8015b6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8015b64:	44f4      	add	ip, lr
 8015b66:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8015b6a:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8015b6e:	2b0f      	cmp	r3, #15
 8015b70:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8015b74:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015b78:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8015b7c:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8015b80:	d801      	bhi.n	8015b86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8015b82:	2f0f      	cmp	r7, #15
 8015b84:	d911      	bls.n	8015baa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8015b86:	4b79      	ldr	r3, [pc, #484]	; (8015d6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>)
 8015b88:	4a79      	ldr	r2, [pc, #484]	; (8015d70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8015b8a:	487a      	ldr	r0, [pc, #488]	; (8015d74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8015b8c:	f240 3173 	movw	r1, #883	; 0x373
 8015b90:	f004 ff28 	bl	801a9e4 <__assert_func>
 8015b94:	4602      	mov	r2, r0
 8015b96:	e7ca      	b.n	8015b2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 8015b98:	4606      	mov	r6, r0
 8015b9a:	4602      	mov	r2, r0
 8015b9c:	e7d0      	b.n	8015b40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8015b9e:	4606      	mov	r6, r0
 8015ba0:	e7ce      	b.n	8015b40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8015ba2:	4604      	mov	r4, r0
 8015ba4:	e7d9      	b.n	8015b5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x92>
 8015ba6:	4604      	mov	r4, r0
 8015ba8:	e7e1      	b.n	8015b6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8015baa:	b29b      	uxth	r3, r3
 8015bac:	b2bf      	uxth	r7, r7
 8015bae:	fb03 fe07 	mul.w	lr, r3, r7
 8015bb2:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8015bb6:	011b      	lsls	r3, r3, #4
 8015bb8:	eba3 0c0e 	sub.w	ip, r3, lr
 8015bbc:	b2bf      	uxth	r7, r7
 8015bbe:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8015bc2:	fa1f fc8c 	uxth.w	ip, ip
 8015bc6:	1bed      	subs	r5, r5, r7
 8015bc8:	b2ad      	uxth	r5, r5
 8015bca:	fb0c f30a 	mul.w	r3, ip, sl
 8015bce:	fb05 330b 	mla	r3, r5, fp, r3
 8015bd2:	fb07 3309 	mla	r3, r7, r9, r3
 8015bd6:	fb0e 3308 	mla	r3, lr, r8, r3
 8015bda:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015bde:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015be2:	9303      	str	r3, [sp, #12]
 8015be4:	d018      	beq.n	8015c18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 8015be6:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8015bea:	fb0b f303 	mul.w	r3, fp, r3
 8015bee:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015bf2:	fb0b fb02 	mul.w	fp, fp, r2
 8015bf6:	0a1a      	lsrs	r2, r3, #8
 8015bf8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015bfc:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8015c00:	441a      	add	r2, r3
 8015c02:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8015c06:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8015c0a:	0a12      	lsrs	r2, r2, #8
 8015c0c:	0a1b      	lsrs	r3, r3, #8
 8015c0e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015c12:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015c16:	431a      	orrs	r2, r3
 8015c18:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015c1c:	d019      	beq.n	8015c52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x18a>
 8015c1e:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015c22:	fb0a fb0b 	mul.w	fp, sl, fp
 8015c26:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015c2a:	fb0a fa06 	mul.w	sl, sl, r6
 8015c2e:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8015c32:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015c36:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015c3a:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8015c3e:	445e      	add	r6, fp
 8015c40:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8015c44:	0a36      	lsrs	r6, r6, #8
 8015c46:	0a1b      	lsrs	r3, r3, #8
 8015c48:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015c4c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015c50:	431e      	orrs	r6, r3
 8015c52:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015c56:	d019      	beq.n	8015c8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1c4>
 8015c58:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8015c5c:	fb09 fa0a 	mul.w	sl, r9, sl
 8015c60:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015c64:	fb09 f904 	mul.w	r9, r9, r4
 8015c68:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8015c6c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015c70:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015c74:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8015c78:	4454      	add	r4, sl
 8015c7a:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8015c7e:	0a24      	lsrs	r4, r4, #8
 8015c80:	0a1b      	lsrs	r3, r3, #8
 8015c82:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015c86:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015c8a:	431c      	orrs	r4, r3
 8015c8c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015c90:	d019      	beq.n	8015cc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1fe>
 8015c92:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8015c96:	fb08 f909 	mul.w	r9, r8, r9
 8015c9a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015c9e:	fb08 f800 	mul.w	r8, r8, r0
 8015ca2:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8015ca6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015caa:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8015cae:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8015cb2:	4448      	add	r0, r9
 8015cb4:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8015cb8:	0a00      	lsrs	r0, r0, #8
 8015cba:	0a1b      	lsrs	r3, r3, #8
 8015cbc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015cc0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015cc4:	4318      	orrs	r0, r3
 8015cc6:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015cca:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8015cce:	fb0c f808 	mul.w	r8, ip, r8
 8015cd2:	fb05 8803 	mla	r8, r5, r3, r8
 8015cd6:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8015cda:	fb07 8803 	mla	r8, r7, r3, r8
 8015cde:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8015ce2:	fb0e 8303 	mla	r3, lr, r3, r8
 8015ce6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015cea:	0a1b      	lsrs	r3, r3, #8
 8015cec:	fb0c f606 	mul.w	r6, ip, r6
 8015cf0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015cf4:	fb05 6202 	mla	r2, r5, r2, r6
 8015cf8:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8015cfc:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8015d00:	fb07 2703 	mla	r7, r7, r3, r2
 8015d04:	9a03      	ldr	r2, [sp, #12]
 8015d06:	9c02      	ldr	r4, [sp, #8]
 8015d08:	9d01      	ldr	r5, [sp, #4]
 8015d0a:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8015d0e:	fb0e 7303 	mla	r3, lr, r3, r7
 8015d12:	43d0      	mvns	r0, r2
 8015d14:	9a00      	ldr	r2, [sp, #0]
 8015d16:	b2c0      	uxtb	r0, r0
 8015d18:	0a1b      	lsrs	r3, r3, #8
 8015d1a:	4342      	muls	r2, r0
 8015d1c:	4344      	muls	r4, r0
 8015d1e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015d22:	ea48 0303 	orr.w	r3, r8, r3
 8015d26:	4345      	muls	r5, r0
 8015d28:	4620      	mov	r0, r4
 8015d2a:	1c54      	adds	r4, r2, #1
 8015d2c:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8015d30:	0c1a      	lsrs	r2, r3, #16
 8015d32:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8015d36:	4a10      	ldr	r2, [pc, #64]	; (8015d78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8015d38:	ea02 2204 	and.w	r2, r2, r4, lsl #8
 8015d3c:	1c44      	adds	r4, r0, #1
 8015d3e:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 8015d42:	b2d8      	uxtb	r0, r3
 8015d44:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8015d48:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8015d4c:	1c68      	adds	r0, r5, #1
 8015d4e:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 8015d52:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015d56:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8015d5a:	00db      	lsls	r3, r3, #3
 8015d5c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015d60:	4313      	orrs	r3, r2
 8015d62:	800b      	strh	r3, [r1, #0]
 8015d64:	b005      	add	sp, #20
 8015d66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d6a:	bf00      	nop
 8015d6c:	0801e61b 	.word	0x0801e61b
 8015d70:	0801eb79 	.word	0x0801eb79
 8015d74:	0801e6a3 	.word	0x0801e6a3
 8015d78:	fffff800 	.word	0xfffff800

08015d7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015d7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d80:	ed2d 8b08 	vpush	{d8-d11}
 8015d84:	b097      	sub	sp, #92	; 0x5c
 8015d86:	eeb0 aa40 	vmov.f32	s20, s0
 8015d8a:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 8015d8c:	9307      	str	r3, [sp, #28]
 8015d8e:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8015d92:	9112      	str	r1, [sp, #72]	; 0x48
 8015d94:	930f      	str	r3, [sp, #60]	; 0x3c
 8015d96:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8015d9a:	9015      	str	r0, [sp, #84]	; 0x54
 8015d9c:	6868      	ldr	r0, [r5, #4]
 8015d9e:	9214      	str	r2, [sp, #80]	; 0x50
 8015da0:	fb00 1303 	mla	r3, r0, r3, r1
 8015da4:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8015da6:	6829      	ldr	r1, [r5, #0]
 8015da8:	6855      	ldr	r5, [r2, #4]
 8015daa:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8015dae:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015db2:	930a      	str	r3, [sp, #40]	; 0x28
 8015db4:	6813      	ldr	r3, [r2, #0]
 8015db6:	9311      	str	r3, [sp, #68]	; 0x44
 8015db8:	eef0 9a60 	vmov.f32	s19, s1
 8015dbc:	eeb0 9a41 	vmov.f32	s18, s2
 8015dc0:	eeb0 8a62 	vmov.f32	s16, s5
 8015dc4:	eef0 8a43 	vmov.f32	s17, s6
 8015dc8:	eef0 ba44 	vmov.f32	s23, s8
 8015dcc:	eeb0 ba64 	vmov.f32	s22, s9
 8015dd0:	eef0 aa45 	vmov.f32	s21, s10
 8015dd4:	3504      	adds	r5, #4
 8015dd6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015dd8:	2b00      	cmp	r3, #0
 8015dda:	dc03      	bgt.n	8015de4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8015ddc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015dde:	2b00      	cmp	r3, #0
 8015de0:	f340 834d 	ble.w	801647e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8015de4:	9b07      	ldr	r3, [sp, #28]
 8015de6:	2b00      	cmp	r3, #0
 8015de8:	f340 819c 	ble.w	8016124 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a8>
 8015dec:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015dee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015df0:	1412      	asrs	r2, r2, #16
 8015df2:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015df6:	d42d      	bmi.n	8015e54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8015df8:	1c51      	adds	r1, r2, #1
 8015dfa:	428c      	cmp	r4, r1
 8015dfc:	dd2d      	ble.n	8015e5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8015dfe:	2b00      	cmp	r3, #0
 8015e00:	db2b      	blt.n	8015e5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8015e02:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015e04:	1c59      	adds	r1, r3, #1
 8015e06:	4288      	cmp	r0, r1
 8015e08:	dd27      	ble.n	8015e5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8015e0a:	9b07      	ldr	r3, [sp, #28]
 8015e0c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015e0e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015e10:	3b01      	subs	r3, #1
 8015e12:	fb02 1203 	mla	r2, r2, r3, r1
 8015e16:	1412      	asrs	r2, r2, #16
 8015e18:	d429      	bmi.n	8015e6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015e1a:	3201      	adds	r2, #1
 8015e1c:	4294      	cmp	r4, r2
 8015e1e:	dd26      	ble.n	8015e6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015e20:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015e22:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015e24:	fb02 1303 	mla	r3, r2, r3, r1
 8015e28:	141b      	asrs	r3, r3, #16
 8015e2a:	d420      	bmi.n	8015e6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015e2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015e2e:	3301      	adds	r3, #1
 8015e30:	429a      	cmp	r2, r3
 8015e32:	dd1c      	ble.n	8015e6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015e34:	9b07      	ldr	r3, [sp, #28]
 8015e36:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8015e3a:	9310      	str	r3, [sp, #64]	; 0x40
 8015e3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e3e:	2b00      	cmp	r3, #0
 8015e40:	f300 81da 	bgt.w	80161f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8015e44:	9b07      	ldr	r3, [sp, #28]
 8015e46:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015e48:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015e4c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015e50:	930a      	str	r3, [sp, #40]	; 0x28
 8015e52:	e169      	b.n	8016128 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8015e54:	1c51      	adds	r1, r2, #1
 8015e56:	f040 8156 	bne.w	8016106 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015e5a:	42a2      	cmp	r2, r4
 8015e5c:	f280 8153 	bge.w	8016106 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015e60:	1c5a      	adds	r2, r3, #1
 8015e62:	f2c0 8150 	blt.w	8016106 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015e66:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015e68:	4293      	cmp	r3, r2
 8015e6a:	f280 814c 	bge.w	8016106 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015e6e:	9b07      	ldr	r3, [sp, #28]
 8015e70:	9313      	str	r3, [sp, #76]	; 0x4c
 8015e72:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015e74:	9310      	str	r3, [sp, #64]	; 0x40
 8015e76:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015e78:	2b00      	cmp	r3, #0
 8015e7a:	dde3      	ble.n	8015e44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8015e7c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015e7e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015e80:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015e84:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015e86:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8015e8a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015e8c:	1412      	asrs	r2, r2, #16
 8015e8e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015e92:	f100 8198 	bmi.w	80161c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44a>
 8015e96:	1c56      	adds	r6, r2, #1
 8015e98:	42b4      	cmp	r4, r6
 8015e9a:	f340 8196 	ble.w	80161ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8015e9e:	2b00      	cmp	r3, #0
 8015ea0:	f2c0 8193 	blt.w	80161ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8015ea4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015ea6:	1c5e      	adds	r6, r3, #1
 8015ea8:	42b7      	cmp	r7, r6
 8015eaa:	f340 818e 	ble.w	80161ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8015eae:	fb03 2304 	mla	r3, r3, r4, r2
 8015eb2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015eb4:	18d6      	adds	r6, r2, r3
 8015eb6:	5cd3      	ldrb	r3, [r2, r3]
 8015eb8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8015ebc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8015ec0:	2900      	cmp	r1, #0
 8015ec2:	f000 8170 	beq.w	80161a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42a>
 8015ec6:	7872      	ldrb	r2, [r6, #1]
 8015ec8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8015ecc:	920b      	str	r2, [sp, #44]	; 0x2c
 8015ece:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8015ed2:	2800      	cmp	r0, #0
 8015ed4:	f000 8171 	beq.w	80161ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43e>
 8015ed8:	1932      	adds	r2, r6, r4
 8015eda:	5d36      	ldrb	r6, [r6, r4]
 8015edc:	7852      	ldrb	r2, [r2, #1]
 8015ede:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8015ee2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8015ee6:	9608      	str	r6, [sp, #32]
 8015ee8:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015eec:	920c      	str	r2, [sp, #48]	; 0x30
 8015eee:	0e16      	lsrs	r6, r2, #24
 8015ef0:	b289      	uxth	r1, r1
 8015ef2:	b280      	uxth	r0, r0
 8015ef4:	fb01 fb00 	mul.w	fp, r1, r0
 8015ef8:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8015efc:	0109      	lsls	r1, r1, #4
 8015efe:	eba1 090b 	sub.w	r9, r1, fp
 8015f02:	b280      	uxth	r0, r0
 8015f04:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8015f08:	fa1f f989 	uxth.w	r9, r9
 8015f0c:	1a12      	subs	r2, r2, r0
 8015f0e:	b292      	uxth	r2, r2
 8015f10:	fb09 f108 	mul.w	r1, r9, r8
 8015f14:	fb02 110c 	mla	r1, r2, ip, r1
 8015f18:	fb00 110a 	mla	r1, r0, sl, r1
 8015f1c:	fb0b 1106 	mla	r1, fp, r6, r1
 8015f20:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8015f24:	2900      	cmp	r1, #0
 8015f26:	f000 80df 	beq.w	80160e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015f2a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015f2e:	d01b      	beq.n	8015f68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ec>
 8015f30:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8015f34:	fb0c fe0e 	mul.w	lr, ip, lr
 8015f38:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015f3c:	fb0c fc03 	mul.w	ip, ip, r3
 8015f40:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8015f44:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015f48:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8015f4c:	4473      	add	r3, lr
 8015f4e:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8015f52:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8015f56:	0a1b      	lsrs	r3, r3, #8
 8015f58:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015f5c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015f60:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8015f64:	ea43 030e 	orr.w	r3, r3, lr
 8015f68:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015f6c:	d01e      	beq.n	8015fac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 8015f6e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8015f70:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8015f74:	fb08 fc0c 	mul.w	ip, r8, ip
 8015f78:	f407 4e7f 	and.w	lr, r7, #65280	; 0xff00
 8015f7c:	fb08 f80e 	mul.w	r8, r8, lr
 8015f80:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8015f84:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015f88:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015f8c:	44e6      	add	lr, ip
 8015f8e:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8015f92:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8015f96:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015f9a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015f9e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015fa2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8015fa6:	ea4e 0708 	orr.w	r7, lr, r8
 8015faa:	970b      	str	r7, [sp, #44]	; 0x2c
 8015fac:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015fb0:	d01e      	beq.n	8015ff0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8015fb2:	9f08      	ldr	r7, [sp, #32]
 8015fb4:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8015fb8:	fb0a f808 	mul.w	r8, sl, r8
 8015fbc:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8015fc0:	fb0a fa0c 	mul.w	sl, sl, ip
 8015fc4:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8015fc8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015fcc:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8015fd0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015fd4:	44c6      	add	lr, r8
 8015fd6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015fda:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015fde:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015fe2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015fe6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015fea:	ea4e 070a 	orr.w	r7, lr, sl
 8015fee:	9708      	str	r7, [sp, #32]
 8015ff0:	2eff      	cmp	r6, #255	; 0xff
 8015ff2:	d01d      	beq.n	8016030 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8015ff4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8015ff6:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8015ffa:	fb06 f808 	mul.w	r8, r6, r8
 8015ffe:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8016002:	fb06 f60c 	mul.w	r6, r6, ip
 8016006:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801600a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801600e:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8016012:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8016016:	44c6      	add	lr, r8
 8016018:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 801601c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016020:	0a36      	lsrs	r6, r6, #8
 8016022:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016026:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801602a:	ea4e 0606 	orr.w	r6, lr, r6
 801602e:	960c      	str	r6, [sp, #48]	; 0x30
 8016030:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8016032:	9f08      	ldr	r7, [sp, #32]
 8016034:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016038:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801603c:	fb09 f606 	mul.w	r6, r9, r6
 8016040:	fb02 660c 	mla	r6, r2, ip, r6
 8016044:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8016048:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801604a:	fb00 660c 	mla	r6, r0, ip, r6
 801604e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8016052:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8016054:	fb0b 660c 	mla	r6, fp, ip, r6
 8016058:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 801605c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016060:	fb09 f90c 	mul.w	r9, r9, ip
 8016064:	fb02 9303 	mla	r3, r2, r3, r9
 8016068:	9a08      	ldr	r2, [sp, #32]
 801606a:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 801606e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016070:	fb00 330e 	mla	r3, r0, lr, r3
 8016074:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8016078:	fb0b 3b00 	mla	fp, fp, r0, r3
 801607c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801607e:	881b      	ldrh	r3, [r3, #0]
 8016080:	43c9      	mvns	r1, r1
 8016082:	1218      	asrs	r0, r3, #8
 8016084:	b2c9      	uxtb	r1, r1
 8016086:	10da      	asrs	r2, r3, #3
 8016088:	0a36      	lsrs	r6, r6, #8
 801608a:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801608e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016092:	00db      	lsls	r3, r3, #3
 8016094:	4348      	muls	r0, r1
 8016096:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801609a:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801609e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80160a2:	b2db      	uxtb	r3, r3
 80160a4:	434b      	muls	r3, r1
 80160a6:	ea46 060b 	orr.w	r6, r6, fp
 80160aa:	434a      	muls	r2, r1
 80160ac:	1c41      	adds	r1, r0, #1
 80160ae:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80160b2:	0c30      	lsrs	r0, r6, #16
 80160b4:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 80160b8:	494e      	ldr	r1, [pc, #312]	; (80161f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>)
 80160ba:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 80160be:	1c59      	adds	r1, r3, #1
 80160c0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80160c4:	b2f3      	uxtb	r3, r6
 80160c6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80160ca:	1c51      	adds	r1, r2, #1
 80160cc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80160d0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80160d4:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 80160d8:	00f6      	lsls	r6, r6, #3
 80160da:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 80160de:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80160e2:	431e      	orrs	r6, r3
 80160e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80160e6:	801e      	strh	r6, [r3, #0]
 80160e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80160ea:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80160ec:	3302      	adds	r3, #2
 80160ee:	9310      	str	r3, [sp, #64]	; 0x40
 80160f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80160f2:	4413      	add	r3, r2
 80160f4:	9329      	str	r3, [sp, #164]	; 0xa4
 80160f6:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80160f8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80160fa:	4413      	add	r3, r2
 80160fc:	932a      	str	r3, [sp, #168]	; 0xa8
 80160fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016100:	3b01      	subs	r3, #1
 8016102:	9313      	str	r3, [sp, #76]	; 0x4c
 8016104:	e6b7      	b.n	8015e76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016106:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016108:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801610a:	4413      	add	r3, r2
 801610c:	9329      	str	r3, [sp, #164]	; 0xa4
 801610e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016110:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016112:	4413      	add	r3, r2
 8016114:	932a      	str	r3, [sp, #168]	; 0xa8
 8016116:	9b07      	ldr	r3, [sp, #28]
 8016118:	3b01      	subs	r3, #1
 801611a:	9307      	str	r3, [sp, #28]
 801611c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801611e:	3302      	adds	r3, #2
 8016120:	930a      	str	r3, [sp, #40]	; 0x28
 8016122:	e65f      	b.n	8015de4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8016124:	f47f ae71 	bne.w	8015e0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8016128:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801612a:	2b00      	cmp	r3, #0
 801612c:	f340 81a7 	ble.w	801647e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8016130:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016134:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016138:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801613c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801613e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016142:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016146:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801614a:	eef0 6a48 	vmov.f32	s13, s16
 801614e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016152:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016156:	ee37 8a48 	vsub.f32	s16, s14, s16
 801615a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801615e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016162:	eef0 6a68 	vmov.f32	s13, s17
 8016166:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801616a:	ee18 2a10 	vmov	r2, s16
 801616e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016172:	fb92 f3f3 	sdiv	r3, r2, r3
 8016176:	ee18 2a90 	vmov	r2, s17
 801617a:	932b      	str	r3, [sp, #172]	; 0xac
 801617c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801617e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016182:	932c      	str	r3, [sp, #176]	; 0xb0
 8016184:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016186:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016188:	3b01      	subs	r3, #1
 801618a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801618e:	9312      	str	r3, [sp, #72]	; 0x48
 8016190:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016192:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8016196:	bf08      	it	eq
 8016198:	4613      	moveq	r3, r2
 801619a:	9307      	str	r3, [sp, #28]
 801619c:	eef0 8a67 	vmov.f32	s17, s15
 80161a0:	eeb0 8a47 	vmov.f32	s16, s14
 80161a4:	e617      	b.n	8015dd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5a>
 80161a6:	b158      	cbz	r0, 80161c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x444>
 80161a8:	5d32      	ldrb	r2, [r6, r4]
 80161aa:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80161ae:	9208      	str	r2, [sp, #32]
 80161b0:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 80161b4:	26ff      	movs	r6, #255	; 0xff
 80161b6:	46b0      	mov	r8, r6
 80161b8:	e69a      	b.n	8015ef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 80161ba:	26ff      	movs	r6, #255	; 0xff
 80161bc:	46b2      	mov	sl, r6
 80161be:	e697      	b.n	8015ef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 80161c0:	26ff      	movs	r6, #255	; 0xff
 80161c2:	46b2      	mov	sl, r6
 80161c4:	e7f7      	b.n	80161b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43a>
 80161c6:	1c57      	adds	r7, r2, #1
 80161c8:	d18e      	bne.n	80160e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 80161ca:	4294      	cmp	r4, r2
 80161cc:	dd8c      	ble.n	80160e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 80161ce:	1c5e      	adds	r6, r3, #1
 80161d0:	db8a      	blt.n	80160e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 80161d2:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80161d4:	429e      	cmp	r6, r3
 80161d6:	dd87      	ble.n	80160e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 80161d8:	e9cd 1004 	strd	r1, r0, [sp, #16]
 80161dc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80161e0:	e9cd 4600 	strd	r4, r6, [sp]
 80161e4:	462b      	mov	r3, r5
 80161e6:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
 80161ea:	9815      	ldr	r0, [sp, #84]	; 0x54
 80161ec:	f7ff fc6c 	bl	8015ac8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80161f0:	e77a      	b.n	80160e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 80161f2:	bf00      	nop
 80161f4:	fffff800 	.word	0xfffff800
 80161f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80161fa:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80161fc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016200:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016202:	1409      	asrs	r1, r1, #16
 8016204:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8016208:	141b      	asrs	r3, r3, #16
 801620a:	fb04 1303 	mla	r3, r4, r3, r1
 801620e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8016210:	18ce      	adds	r6, r1, r3
 8016212:	5ccb      	ldrb	r3, [r1, r3]
 8016214:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8016218:	0e1f      	lsrs	r7, r3, #24
 801621a:	2a00      	cmp	r2, #0
 801621c:	f000 811f 	beq.w	801645e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8016220:	7871      	ldrb	r1, [r6, #1]
 8016222:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8016226:	910d      	str	r1, [sp, #52]	; 0x34
 8016228:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 801622c:	2800      	cmp	r0, #0
 801622e:	f000 8120 	beq.w	8016472 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8016232:	1931      	adds	r1, r6, r4
 8016234:	5d36      	ldrb	r6, [r6, r4]
 8016236:	7849      	ldrb	r1, [r1, #1]
 8016238:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 801623c:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8016240:	9609      	str	r6, [sp, #36]	; 0x24
 8016242:	ea4f 6916 	mov.w	r9, r6, lsr #24
 8016246:	910e      	str	r1, [sp, #56]	; 0x38
 8016248:	0e0e      	lsrs	r6, r1, #24
 801624a:	b292      	uxth	r2, r2
 801624c:	b280      	uxth	r0, r0
 801624e:	fb02 fa00 	mul.w	sl, r2, r0
 8016252:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8016256:	0112      	lsls	r2, r2, #4
 8016258:	eba2 080a 	sub.w	r8, r2, sl
 801625c:	b280      	uxth	r0, r0
 801625e:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8016262:	fa1f f888 	uxth.w	r8, r8
 8016266:	1a09      	subs	r1, r1, r0
 8016268:	b289      	uxth	r1, r1
 801626a:	fb08 f20e 	mul.w	r2, r8, lr
 801626e:	fb01 2207 	mla	r2, r1, r7, r2
 8016272:	fb00 2209 	mla	r2, r0, r9, r2
 8016276:	fb0a 2206 	mla	r2, sl, r6, r2
 801627a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801627e:	9213      	str	r2, [sp, #76]	; 0x4c
 8016280:	2a00      	cmp	r2, #0
 8016282:	f000 80de 	beq.w	8016442 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c6>
 8016286:	2fff      	cmp	r7, #255	; 0xff
 8016288:	d01a      	beq.n	80162c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 801628a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801628e:	fb07 fc0c 	mul.w	ip, r7, ip
 8016292:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016296:	435f      	muls	r7, r3
 8016298:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801629c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80162a0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80162a4:	4463      	add	r3, ip
 80162a6:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 80162aa:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 80162ae:	0a1b      	lsrs	r3, r3, #8
 80162b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80162b4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80162b8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80162bc:	ea43 030c 	orr.w	r3, r3, ip
 80162c0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80162c4:	d01f      	beq.n	8016306 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58a>
 80162c6:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80162c8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80162ca:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80162ce:	fb0e f707 	mul.w	r7, lr, r7
 80162d2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80162d6:	fb0e fe0c 	mul.w	lr, lr, ip
 80162da:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80162de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80162e2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80162e6:	44bc      	add	ip, r7
 80162e8:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 80162ec:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 80162f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80162f4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80162f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80162fc:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016300:	ea4c 020e 	orr.w	r2, ip, lr
 8016304:	920d      	str	r2, [sp, #52]	; 0x34
 8016306:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801630a:	d01e      	beq.n	801634a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ce>
 801630c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801630e:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8016312:	fb09 fe0e 	mul.w	lr, r9, lr
 8016316:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 801631a:	fb09 f907 	mul.w	r9, r9, r7
 801631e:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8016322:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016326:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801632a:	f509 7780 	add.w	r7, r9, #256	; 0x100
 801632e:	44f4      	add	ip, lr
 8016330:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8016334:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016338:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801633c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016340:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016344:	ea4c 0209 	orr.w	r2, ip, r9
 8016348:	9209      	str	r2, [sp, #36]	; 0x24
 801634a:	2eff      	cmp	r6, #255	; 0xff
 801634c:	d01c      	beq.n	8016388 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60c>
 801634e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016350:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8016354:	fb06 fe0e 	mul.w	lr, r6, lr
 8016358:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 801635c:	437e      	muls	r6, r7
 801635e:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8016362:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016366:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801636a:	f506 7780 	add.w	r7, r6, #256	; 0x100
 801636e:	44f4      	add	ip, lr
 8016370:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8016374:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016378:	0a36      	lsrs	r6, r6, #8
 801637a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801637e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016382:	ea4c 0206 	orr.w	r2, ip, r6
 8016386:	920e      	str	r2, [sp, #56]	; 0x38
 8016388:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801638a:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 801638e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016390:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8016394:	fb08 f606 	mul.w	r6, r8, r6
 8016398:	fb01 6607 	mla	r6, r1, r7, r6
 801639c:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 80163a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80163a2:	fb00 6607 	mla	r6, r0, r7, r6
 80163a6:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 80163aa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80163ac:	fb0a 6607 	mla	r6, sl, r7, r6
 80163b0:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80163b4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80163b6:	fb08 f807 	mul.w	r8, r8, r7
 80163ba:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80163be:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80163c2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80163c4:	fb01 8303 	mla	r3, r1, r3, r8
 80163c8:	fb00 330c 	mla	r3, r0, ip, r3
 80163cc:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 80163d0:	fb0a 3e0e 	mla	lr, sl, lr, r3
 80163d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80163d6:	f8bb 3000 	ldrh.w	r3, [fp]
 80163da:	43d2      	mvns	r2, r2
 80163dc:	1218      	asrs	r0, r3, #8
 80163de:	b2d2      	uxtb	r2, r2
 80163e0:	0a36      	lsrs	r6, r6, #8
 80163e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80163e6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80163ea:	4350      	muls	r0, r2
 80163ec:	10d9      	asrs	r1, r3, #3
 80163ee:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80163f2:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80163f6:	00db      	lsls	r3, r3, #3
 80163f8:	ea46 060e 	orr.w	r6, r6, lr
 80163fc:	1c47      	adds	r7, r0, #1
 80163fe:	b2db      	uxtb	r3, r3
 8016400:	4353      	muls	r3, r2
 8016402:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8016406:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801640a:	0c37      	lsrs	r7, r6, #16
 801640c:	4351      	muls	r1, r2
 801640e:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8016412:	4a1d      	ldr	r2, [pc, #116]	; (8016488 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>)
 8016414:	1c5f      	adds	r7, r3, #1
 8016416:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 801641a:	b2f7      	uxtb	r7, r6
 801641c:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8016420:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8016424:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8016428:	1c4b      	adds	r3, r1, #1
 801642a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801642e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8016432:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 8016436:	00f6      	lsls	r6, r6, #3
 8016438:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801643c:	4330      	orrs	r0, r6
 801643e:	f8ab 0000 	strh.w	r0, [fp]
 8016442:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016444:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016446:	4413      	add	r3, r2
 8016448:	9329      	str	r3, [sp, #164]	; 0xa4
 801644a:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801644c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801644e:	4413      	add	r3, r2
 8016450:	932a      	str	r3, [sp, #168]	; 0xa8
 8016452:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016454:	3b01      	subs	r3, #1
 8016456:	f10b 0b02 	add.w	fp, fp, #2
 801645a:	9310      	str	r3, [sp, #64]	; 0x40
 801645c:	e4ee      	b.n	8015e3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 801645e:	b158      	cbz	r0, 8016478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fc>
 8016460:	5d31      	ldrb	r1, [r6, r4]
 8016462:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8016466:	9109      	str	r1, [sp, #36]	; 0x24
 8016468:	ea4f 6911 	mov.w	r9, r1, lsr #24
 801646c:	26ff      	movs	r6, #255	; 0xff
 801646e:	46b6      	mov	lr, r6
 8016470:	e6eb      	b.n	801624a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8016472:	26ff      	movs	r6, #255	; 0xff
 8016474:	46b1      	mov	r9, r6
 8016476:	e6e8      	b.n	801624a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8016478:	26ff      	movs	r6, #255	; 0xff
 801647a:	46b1      	mov	r9, r6
 801647c:	e7f7      	b.n	801646e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f2>
 801647e:	b017      	add	sp, #92	; 0x5c
 8016480:	ecbd 8b08 	vpop	{d8-d11}
 8016484:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016488:	fffff800 	.word	0xfffff800

0801648c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801648c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016490:	b087      	sub	sp, #28
 8016492:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8016496:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 801649a:	9105      	str	r1, [sp, #20]
 801649c:	fb00 e604 	mla	r6, r0, r4, lr
 80164a0:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 80164a4:	9102      	str	r1, [sp, #8]
 80164a6:	eb02 0146 	add.w	r1, r2, r6, lsl #1
 80164aa:	9103      	str	r1, [sp, #12]
 80164ac:	9905      	ldr	r1, [sp, #20]
 80164ae:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 80164b2:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80164b6:	8809      	ldrh	r1, [r1, #0]
 80164b8:	2800      	cmp	r0, #0
 80164ba:	eb03 0a06 	add.w	sl, r3, r6
 80164be:	f2c0 80ca 	blt.w	8016656 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 80164c2:	4287      	cmp	r7, r0
 80164c4:	f340 80c7 	ble.w	8016656 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 80164c8:	f1be 0f00 	cmp.w	lr, #0
 80164cc:	f2c0 80bf 	blt.w	801664e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 80164d0:	4574      	cmp	r4, lr
 80164d2:	f340 80bc 	ble.w	801664e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 80164d6:	f813 c006 	ldrb.w	ip, [r3, r6]
 80164da:	f832 9016 	ldrh.w	r9, [r2, r6, lsl #1]
 80164de:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80164e2:	d01c      	beq.n	801651e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x92>
 80164e4:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 80164e8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80164ec:	4372      	muls	r2, r6
 80164ee:	f64f 081f 	movw	r8, #63519	; 0xf81f
 80164f2:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 80164f6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80164fa:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80164fe:	fb0c f609 	mul.w	r6, ip, r9
 8016502:	eb03 0902 	add.w	r9, r3, r2
 8016506:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 801650a:	f106 0820 	add.w	r8, r6, #32
 801650e:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8016512:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016516:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801651a:	ea49 0908 	orr.w	r9, r9, r8
 801651e:	fa1f f989 	uxth.w	r9, r9
 8016522:	f11e 0301 	adds.w	r3, lr, #1
 8016526:	f100 809b 	bmi.w	8016660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 801652a:	429c      	cmp	r4, r3
 801652c:	f340 8098 	ble.w	8016660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8016530:	2d00      	cmp	r5, #0
 8016532:	f000 8095 	beq.w	8016660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8016536:	f89a 6001 	ldrb.w	r6, [sl, #1]
 801653a:	9b03      	ldr	r3, [sp, #12]
 801653c:	2eff      	cmp	r6, #255	; 0xff
 801653e:	885b      	ldrh	r3, [r3, #2]
 8016540:	d01b      	beq.n	801657a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xee>
 8016542:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8016546:	ea4f 08e6 	mov.w	r8, r6, asr #3
 801654a:	fb08 f202 	mul.w	r2, r8, r2
 801654e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016552:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8016556:	fb06 f803 	mul.w	r8, r6, r3
 801655a:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801655e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016562:	441a      	add	r2, r3
 8016564:	f108 0320 	add.w	r3, r8, #32
 8016568:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 801656c:	0a1b      	lsrs	r3, r3, #8
 801656e:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8016572:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016576:	ea4b 0303 	orr.w	r3, fp, r3
 801657a:	b29b      	uxth	r3, r3
 801657c:	9301      	str	r3, [sp, #4]
 801657e:	3001      	adds	r0, #1
 8016580:	d474      	bmi.n	801666c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8016582:	4287      	cmp	r7, r0
 8016584:	dd72      	ble.n	801666c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8016586:	9a02      	ldr	r2, [sp, #8]
 8016588:	2a00      	cmp	r2, #0
 801658a:	f000 8121 	beq.w	80167d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>
 801658e:	f1be 0f00 	cmp.w	lr, #0
 8016592:	db68      	blt.n	8016666 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8016594:	4574      	cmp	r4, lr
 8016596:	dd66      	ble.n	8016666 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8016598:	f81a 7004 	ldrb.w	r7, [sl, r4]
 801659c:	9a03      	ldr	r2, [sp, #12]
 801659e:	2fff      	cmp	r7, #255	; 0xff
 80165a0:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 80165a4:	d01c      	beq.n	80165e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x154>
 80165a6:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 80165aa:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80165ae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80165b2:	fb07 fb00 	mul.w	fp, r7, r0
 80165b6:	fb08 f802 	mul.w	r8, r8, r2
 80165ba:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80165be:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 80165c2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80165c6:	4490      	add	r8, r2
 80165c8:	f10b 0220 	add.w	r2, fp, #32
 80165cc:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 80165d0:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80165d4:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 80165d8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80165dc:	ea40 000b 	orr.w	r0, r0, fp
 80165e0:	b280      	uxth	r0, r0
 80165e2:	f11e 0e01 	adds.w	lr, lr, #1
 80165e6:	d446      	bmi.n	8016676 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 80165e8:	4574      	cmp	r4, lr
 80165ea:	dd44      	ble.n	8016676 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 80165ec:	2d00      	cmp	r5, #0
 80165ee:	d045      	beq.n	801667c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f0>
 80165f0:	1c62      	adds	r2, r4, #1
 80165f2:	9b03      	ldr	r3, [sp, #12]
 80165f4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80165f8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80165fc:	2cff      	cmp	r4, #255	; 0xff
 80165fe:	d01c      	beq.n	801663a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ae>
 8016600:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8016604:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016608:	fb08 fe0e 	mul.w	lr, r8, lr
 801660c:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8016610:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016614:	fb04 f802 	mul.w	r8, r4, r2
 8016618:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 801661c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016620:	4472      	add	r2, lr
 8016622:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8016626:	f108 0a20 	add.w	sl, r8, #32
 801662a:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 801662e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016632:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016636:	ea42 020a 	orr.w	r2, r2, sl
 801663a:	b292      	uxth	r2, r2
 801663c:	2d0f      	cmp	r5, #15
 801663e:	d91f      	bls.n	8016680 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f4>
 8016640:	4b67      	ldr	r3, [pc, #412]	; (80167e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x354>)
 8016642:	4a68      	ldr	r2, [pc, #416]	; (80167e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x358>)
 8016644:	4868      	ldr	r0, [pc, #416]	; (80167e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x35c>)
 8016646:	f240 3173 	movw	r1, #883	; 0x373
 801664a:	f004 f9cb 	bl	801a9e4 <__assert_func>
 801664e:	4689      	mov	r9, r1
 8016650:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8016654:	e765      	b.n	8016522 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x96>
 8016656:	26ff      	movs	r6, #255	; 0xff
 8016658:	9101      	str	r1, [sp, #4]
 801665a:	4689      	mov	r9, r1
 801665c:	46b4      	mov	ip, r6
 801665e:	e78e      	b.n	801657e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8016660:	9101      	str	r1, [sp, #4]
 8016662:	26ff      	movs	r6, #255	; 0xff
 8016664:	e78b      	b.n	801657e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8016666:	4608      	mov	r0, r1
 8016668:	27ff      	movs	r7, #255	; 0xff
 801666a:	e7ba      	b.n	80165e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x156>
 801666c:	24ff      	movs	r4, #255	; 0xff
 801666e:	460a      	mov	r2, r1
 8016670:	4608      	mov	r0, r1
 8016672:	4627      	mov	r7, r4
 8016674:	e7e2      	b.n	801663c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8016676:	460a      	mov	r2, r1
 8016678:	24ff      	movs	r4, #255	; 0xff
 801667a:	e7df      	b.n	801663c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801667c:	460a      	mov	r2, r1
 801667e:	24ff      	movs	r4, #255	; 0xff
 8016680:	9b02      	ldr	r3, [sp, #8]
 8016682:	2b0f      	cmp	r3, #15
 8016684:	d8dc      	bhi.n	8016640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8016686:	f8bd e008 	ldrh.w	lr, [sp, #8]
 801668a:	fa1f f885 	uxth.w	r8, r5
 801668e:	fb08 fa0e 	mul.w	sl, r8, lr
 8016692:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8016696:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 801669a:	9303      	str	r3, [sp, #12]
 801669c:	fa1f f38e 	uxth.w	r3, lr
 80166a0:	9304      	str	r3, [sp, #16]
 80166a2:	ea4f 4809 	mov.w	r8, r9, lsl #16
 80166a6:	9b02      	ldr	r3, [sp, #8]
 80166a8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80166ac:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 80166b0:	fb15 fe03 	smulbb	lr, r5, r3
 80166b4:	ea48 0809 	orr.w	r8, r8, r9
 80166b8:	f1c3 0910 	rsb	r9, r3, #16
 80166bc:	9b01      	ldr	r3, [sp, #4]
 80166be:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80166c2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80166c6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80166ca:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80166ce:	eba9 0905 	sub.w	r9, r9, r5
 80166d2:	ea4b 0303 	orr.w	r3, fp, r3
 80166d6:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 80166da:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80166de:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 80166e2:	436b      	muls	r3, r5
 80166e4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80166e8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80166ec:	ea4b 0202 	orr.w	r2, fp, r2
 80166f0:	fb09 3308 	mla	r3, r9, r8, r3
 80166f4:	fb0e 3302 	mla	r3, lr, r2, r3
 80166f8:	0402      	lsls	r2, r0, #16
 80166fa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80166fe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016702:	4310      	orrs	r0, r2
 8016704:	9a02      	ldr	r2, [sp, #8]
 8016706:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 801670a:	fb0e 3e00 	mla	lr, lr, r0, r3
 801670e:	9803      	ldr	r0, [sp, #12]
 8016710:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
 8016714:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8016718:	9804      	ldr	r0, [sp, #16]
 801671a:	1a2d      	subs	r5, r5, r0
 801671c:	9803      	ldr	r0, [sp, #12]
 801671e:	eba0 000a 	sub.w	r0, r0, sl
 8016722:	b280      	uxth	r0, r0
 8016724:	b2ad      	uxth	r5, r5
 8016726:	4346      	muls	r6, r0
 8016728:	9804      	ldr	r0, [sp, #16]
 801672a:	fb0c 6605 	mla	r6, ip, r5, r6
 801672e:	fb00 6707 	mla	r7, r0, r7, r6
 8016732:	fb0a 7404 	mla	r4, sl, r4, r7
 8016736:	b292      	uxth	r2, r2
 8016738:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801673c:	4354      	muls	r4, r2
 801673e:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8016742:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8016746:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801674a:	f104 0a01 	add.w	sl, r4, #1
 801674e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016752:	ea43 0e0e 	orr.w	lr, r3, lr
 8016756:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801675a:	fa1f f38e 	uxth.w	r3, lr
 801675e:	1208      	asrs	r0, r1, #8
 8016760:	ea6f 2414 	mvn.w	r4, r4, lsr #8
 8016764:	b2e4      	uxtb	r4, r4
 8016766:	121d      	asrs	r5, r3, #8
 8016768:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801676c:	fb10 f004 	smulbb	r0, r0, r4
 8016770:	10ce      	asrs	r6, r1, #3
 8016772:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016776:	00c9      	lsls	r1, r1, #3
 8016778:	fb05 0502 	mla	r5, r5, r2, r0
 801677c:	b2c9      	uxtb	r1, r1
 801677e:	10d8      	asrs	r0, r3, #3
 8016780:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016784:	00db      	lsls	r3, r3, #3
 8016786:	fb16 f604 	smulbb	r6, r6, r4
 801678a:	b2db      	uxtb	r3, r3
 801678c:	fb11 f404 	smulbb	r4, r1, r4
 8016790:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016794:	fb00 6002 	mla	r0, r0, r2, r6
 8016798:	fb03 4202 	mla	r2, r3, r2, r4
 801679c:	b2ad      	uxth	r5, r5
 801679e:	b292      	uxth	r2, r2
 80167a0:	1c6b      	adds	r3, r5, #1
 80167a2:	1c51      	adds	r1, r2, #1
 80167a4:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 80167a8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80167ac:	b280      	uxth	r0, r0
 80167ae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80167b2:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80167b6:	4313      	orrs	r3, r2
 80167b8:	1c42      	adds	r2, r0, #1
 80167ba:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80167be:	0940      	lsrs	r0, r0, #5
 80167c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80167c4:	9a05      	ldr	r2, [sp, #20]
 80167c6:	4303      	orrs	r3, r0
 80167c8:	8013      	strh	r3, [r2, #0]
 80167ca:	b007      	add	sp, #28
 80167cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80167d0:	2d0f      	cmp	r5, #15
 80167d2:	f63f af35 	bhi.w	8016640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 80167d6:	24ff      	movs	r4, #255	; 0xff
 80167d8:	460a      	mov	r2, r1
 80167da:	4608      	mov	r0, r1
 80167dc:	4627      	mov	r7, r4
 80167de:	e752      	b.n	8016686 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1fa>
 80167e0:	0801e61b 	.word	0x0801e61b
 80167e4:	0801eb79 	.word	0x0801eb79
 80167e8:	0801e6a3 	.word	0x0801e6a3

080167ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80167ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80167f0:	ed2d 8b08 	vpush	{d8-d11}
 80167f4:	b099      	sub	sp, #100	; 0x64
 80167f6:	eeb0 aa40 	vmov.f32	s20, s0
 80167fa:	9308      	str	r3, [sp, #32]
 80167fc:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8016800:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 8016802:	930b      	str	r3, [sp, #44]	; 0x2c
 8016804:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8016808:	9314      	str	r3, [sp, #80]	; 0x50
 801680a:	9113      	str	r1, [sp, #76]	; 0x4c
 801680c:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8016810:	9017      	str	r0, [sp, #92]	; 0x5c
 8016812:	6870      	ldr	r0, [r6, #4]
 8016814:	9216      	str	r2, [sp, #88]	; 0x58
 8016816:	fb00 1303 	mla	r3, r0, r3, r1
 801681a:	6831      	ldr	r1, [r6, #0]
 801681c:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801681e:	f9bd 50c8 	ldrsh.w	r5, [sp, #200]	; 0xc8
 8016822:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8016826:	9309      	str	r3, [sp, #36]	; 0x24
 8016828:	6813      	ldr	r3, [r2, #0]
 801682a:	930c      	str	r3, [sp, #48]	; 0x30
 801682c:	6853      	ldr	r3, [r2, #4]
 801682e:	930d      	str	r3, [sp, #52]	; 0x34
 8016830:	006b      	lsls	r3, r5, #1
 8016832:	9312      	str	r3, [sp, #72]	; 0x48
 8016834:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8016838:	930a      	str	r3, [sp, #40]	; 0x28
 801683a:	eef0 9a60 	vmov.f32	s19, s1
 801683e:	eeb0 9a41 	vmov.f32	s18, s2
 8016842:	eeb0 8a62 	vmov.f32	s16, s5
 8016846:	eef0 8a43 	vmov.f32	s17, s6
 801684a:	eef0 ba44 	vmov.f32	s23, s8
 801684e:	eeb0 ba64 	vmov.f32	s22, s9
 8016852:	eef0 aa45 	vmov.f32	s21, s10
 8016856:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016858:	2b00      	cmp	r3, #0
 801685a:	dc03      	bgt.n	8016864 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801685c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801685e:	2b00      	cmp	r3, #0
 8016860:	f340 83bf 	ble.w	8016fe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 8016864:	9b08      	ldr	r3, [sp, #32]
 8016866:	2b00      	cmp	r3, #0
 8016868:	f340 81cb 	ble.w	8016c02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x416>
 801686c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801686e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016870:	1412      	asrs	r2, r2, #16
 8016872:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016876:	d42f      	bmi.n	80168d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8016878:	1c51      	adds	r1, r2, #1
 801687a:	428d      	cmp	r5, r1
 801687c:	dd2f      	ble.n	80168de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801687e:	2b00      	cmp	r3, #0
 8016880:	db2d      	blt.n	80168de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8016882:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016884:	1c59      	adds	r1, r3, #1
 8016886:	4288      	cmp	r0, r1
 8016888:	dd29      	ble.n	80168de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801688a:	9b08      	ldr	r3, [sp, #32]
 801688c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801688e:	992b      	ldr	r1, [sp, #172]	; 0xac
 8016890:	3b01      	subs	r3, #1
 8016892:	fb02 1203 	mla	r2, r2, r3, r1
 8016896:	1412      	asrs	r2, r2, #16
 8016898:	d42b      	bmi.n	80168f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 801689a:	3201      	adds	r2, #1
 801689c:	4295      	cmp	r5, r2
 801689e:	dd28      	ble.n	80168f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80168a0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80168a2:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80168a4:	fb02 1303 	mla	r3, r2, r3, r1
 80168a8:	141b      	asrs	r3, r3, #16
 80168aa:	d422      	bmi.n	80168f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80168ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80168ae:	3301      	adds	r3, #1
 80168b0:	429a      	cmp	r2, r3
 80168b2:	dd1e      	ble.n	80168f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80168b4:	9b08      	ldr	r3, [sp, #32]
 80168b6:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80168ba:	9315      	str	r3, [sp, #84]	; 0x54
 80168bc:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80168c0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80168c2:	2b00      	cmp	r3, #0
 80168c4:	f300 8217 	bgt.w	8016cf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50a>
 80168c8:	9b08      	ldr	r3, [sp, #32]
 80168ca:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80168ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80168d0:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80168d4:	9309      	str	r3, [sp, #36]	; 0x24
 80168d6:	e196      	b.n	8016c06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 80168d8:	1c57      	adds	r7, r2, #1
 80168da:	f040 8183 	bne.w	8016be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 80168de:	42aa      	cmp	r2, r5
 80168e0:	f280 8180 	bge.w	8016be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 80168e4:	1c5e      	adds	r6, r3, #1
 80168e6:	f2c0 817d 	blt.w	8016be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 80168ea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80168ec:	4293      	cmp	r3, r2
 80168ee:	f280 8179 	bge.w	8016be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 80168f2:	9b08      	ldr	r3, [sp, #32]
 80168f4:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80168f6:	9315      	str	r3, [sp, #84]	; 0x54
 80168f8:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80168fc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80168fe:	2b00      	cmp	r3, #0
 8016900:	dde2      	ble.n	80168c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8016902:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016904:	1419      	asrs	r1, r3, #16
 8016906:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016908:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801690c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801690e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8016912:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016914:	141b      	asrs	r3, r3, #16
 8016916:	f100 81d3 	bmi.w	8016cc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d4>
 801691a:	1c58      	adds	r0, r3, #1
 801691c:	4285      	cmp	r5, r0
 801691e:	f340 81d1 	ble.w	8016cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8016922:	2900      	cmp	r1, #0
 8016924:	f2c0 81ce 	blt.w	8016cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8016928:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801692a:	1c48      	adds	r0, r1, #1
 801692c:	4284      	cmp	r4, r0
 801692e:	f340 81c9 	ble.w	8016cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8016932:	fb01 3105 	mla	r1, r1, r5, r3
 8016936:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016938:	fa1f fe82 	uxth.w	lr, r2
 801693c:	eb03 0a01 	add.w	sl, r3, r1
 8016940:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8016944:	f813 9001 	ldrb.w	r9, [r3, r1]
 8016948:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801694c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8016950:	b29b      	uxth	r3, r3
 8016952:	f1bc 0f00 	cmp.w	ip, #0
 8016956:	f000 8195 	beq.w	8016c84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x498>
 801695a:	f81a 4005 	ldrb.w	r4, [sl, r5]
 801695e:	940e      	str	r4, [sp, #56]	; 0x38
 8016960:	eb0a 0b05 	add.w	fp, sl, r5
 8016964:	fa1f fa8c 	uxth.w	sl, ip
 8016968:	fb0a fe0e 	mul.w	lr, sl, lr
 801696c:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8016970:	fa1f fa8a 	uxth.w	sl, sl
 8016974:	eba0 000e 	sub.w	r0, r0, lr
 8016978:	eba3 030a 	sub.w	r3, r3, sl
 801697c:	b280      	uxth	r0, r0
 801697e:	fb08 f000 	mul.w	r0, r8, r0
 8016982:	b29b      	uxth	r3, r3
 8016984:	fb09 0303 	mla	r3, r9, r3, r0
 8016988:	980e      	ldr	r0, [sp, #56]	; 0x38
 801698a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801698e:	940f      	str	r4, [sp, #60]	; 0x3c
 8016990:	fb0a 3300 	mla	r3, sl, r0, r3
 8016994:	fb0e 3304 	mla	r3, lr, r4, r3
 8016998:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801699c:	2b00      	cmp	r3, #0
 801699e:	f000 8114 	beq.w	8016bca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80169a2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80169a4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80169a6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80169aa:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80169ae:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 80169b2:	f000 816c 	beq.w	8016c8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 80169b6:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80169ba:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80169be:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80169c2:	fb09 f101 	mul.w	r1, r9, r1
 80169c6:	fb0a fe0e 	mul.w	lr, sl, lr
 80169ca:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80169ce:	f101 0b20 	add.w	fp, r1, #32
 80169d2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80169d6:	44ce      	add	lr, r9
 80169d8:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 80169dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80169e0:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80169e4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80169e8:	ea4e 0909 	orr.w	r9, lr, r9
 80169ec:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80169f0:	8841      	ldrh	r1, [r0, #2]
 80169f2:	d019      	beq.n	8016a28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 80169f4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80169f8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80169fc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016a00:	fb0a fe0e 	mul.w	lr, sl, lr
 8016a04:	fb08 f801 	mul.w	r8, r8, r1
 8016a08:	f108 0b20 	add.w	fp, r8, #32
 8016a0c:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8016a10:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016a14:	448e      	add	lr, r1
 8016a16:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8016a1a:	0a09      	lsrs	r1, r1, #8
 8016a1c:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8016a20:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016a24:	ea4a 0101 	orr.w	r1, sl, r1
 8016a28:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8016a2c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016a30:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016a34:	ea4e 0909 	orr.w	r9, lr, r9
 8016a38:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8016a3c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016a40:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016a44:	ea4e 0e01 	orr.w	lr, lr, r1
 8016a48:	f1bc 0f00 	cmp.w	ip, #0
 8016a4c:	f000 8121 	beq.w	8016c92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8016a50:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016a52:	eb00 0801 	add.w	r8, r0, r1
 8016a56:	5a41      	ldrh	r1, [r0, r1]
 8016a58:	980e      	ldr	r0, [sp, #56]	; 0x38
 8016a5a:	28ff      	cmp	r0, #255	; 0xff
 8016a5c:	d019      	beq.n	8016a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8016a5e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016a60:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8016a64:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016a68:	fb04 fb01 	mul.w	fp, r4, r1
 8016a6c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016a70:	fb0a fa00 	mul.w	sl, sl, r0
 8016a74:	f10b 0020 	add.w	r0, fp, #32
 8016a78:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8016a7c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8016a80:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016a84:	4451      	add	r1, sl
 8016a86:	0a00      	lsrs	r0, r0, #8
 8016a88:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8016a8c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016a90:	4301      	orrs	r1, r0
 8016a92:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016a94:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8016a98:	2cff      	cmp	r4, #255	; 0xff
 8016a9a:	d01a      	beq.n	8016ad2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e6>
 8016a9c:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8016aa0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016aa4:	fb04 fb00 	mul.w	fp, r4, r0
 8016aa8:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016aac:	fb0a fa08 	mul.w	sl, sl, r8
 8016ab0:	f10b 0820 	add.w	r8, fp, #32
 8016ab4:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8016ab8:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8016abc:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016ac0:	4450      	add	r0, sl
 8016ac2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016ac6:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8016aca:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016ace:	ea40 0008 	orr.w	r0, r0, r8
 8016ad2:	fb1c f802 	smulbb	r8, ip, r2
 8016ad6:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8016ada:	f1cc 0a10 	rsb	sl, ip, #16
 8016ade:	ebaa 0a02 	sub.w	sl, sl, r2
 8016ae2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016ae6:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8016aea:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8016aee:	fb0e f202 	mul.w	r2, lr, r2
 8016af2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016af6:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8016afa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016afe:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8016b02:	fb09 220a 	mla	r2, r9, sl, r2
 8016b06:	ea4b 0101 	orr.w	r1, fp, r1
 8016b0a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016b0e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016b12:	fb0c 2201 	mla	r2, ip, r1, r2
 8016b16:	ea4e 0000 	orr.w	r0, lr, r0
 8016b1a:	fb08 2800 	mla	r8, r8, r0, r2
 8016b1e:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8016b22:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016b26:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016b2a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8016b2e:	ea42 0808 	orr.w	r8, r2, r8
 8016b32:	fa1f f288 	uxth.w	r2, r8
 8016b36:	2bff      	cmp	r3, #255	; 0xff
 8016b38:	d103      	bne.n	8016b42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x356>
 8016b3a:	9914      	ldr	r1, [sp, #80]	; 0x50
 8016b3c:	29ff      	cmp	r1, #255	; 0xff
 8016b3e:	f000 80bd 	beq.w	8016cbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d0>
 8016b42:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016b44:	f8b7 c000 	ldrh.w	ip, [r7]
 8016b48:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016b4a:	434b      	muls	r3, r1
 8016b4c:	f103 0e01 	add.w	lr, r3, #1
 8016b50:	eb0e 2323 	add.w	r3, lr, r3, asr #8
 8016b54:	ea6f 2e23 	mvn.w	lr, r3, asr #8
 8016b58:	ea4f 202c 	mov.w	r0, ip, asr #8
 8016b5c:	fa5f fe8e 	uxtb.w	lr, lr
 8016b60:	1213      	asrs	r3, r2, #8
 8016b62:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016b66:	fb10 f00e 	smulbb	r0, r0, lr
 8016b6a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8016b6e:	fb03 0301 	mla	r3, r3, r1, r0
 8016b72:	b298      	uxth	r0, r3
 8016b74:	ea4f 03ec 	mov.w	r3, ip, asr #3
 8016b78:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016b7c:	10d1      	asrs	r1, r2, #3
 8016b7e:	fa5f fc8c 	uxtb.w	ip, ip
 8016b82:	00d2      	lsls	r2, r2, #3
 8016b84:	fb1c fc0e 	smulbb	ip, ip, lr
 8016b88:	b2d2      	uxtb	r2, r2
 8016b8a:	fb02 c204 	mla	r2, r2, r4, ip
 8016b8e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8016b92:	fb13 f30e 	smulbb	r3, r3, lr
 8016b96:	b292      	uxth	r2, r2
 8016b98:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016b9c:	fb01 3104 	mla	r1, r1, r4, r3
 8016ba0:	f102 0c01 	add.w	ip, r2, #1
 8016ba4:	1c43      	adds	r3, r0, #1
 8016ba6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016baa:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016bae:	b289      	uxth	r1, r1
 8016bb0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016bb4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8016bb8:	4313      	orrs	r3, r2
 8016bba:	1c4a      	adds	r2, r1, #1
 8016bbc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016bc0:	0949      	lsrs	r1, r1, #5
 8016bc2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016bc6:	430b      	orrs	r3, r1
 8016bc8:	803b      	strh	r3, [r7, #0]
 8016bca:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016bcc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016bce:	4413      	add	r3, r2
 8016bd0:	932b      	str	r3, [sp, #172]	; 0xac
 8016bd2:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016bd4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016bd6:	441a      	add	r2, r3
 8016bd8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016bda:	922c      	str	r2, [sp, #176]	; 0xb0
 8016bdc:	3b01      	subs	r3, #1
 8016bde:	3702      	adds	r7, #2
 8016be0:	9315      	str	r3, [sp, #84]	; 0x54
 8016be2:	e68b      	b.n	80168fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8016be4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016be6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016be8:	4413      	add	r3, r2
 8016bea:	932b      	str	r3, [sp, #172]	; 0xac
 8016bec:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016bee:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016bf0:	441a      	add	r2, r3
 8016bf2:	9b08      	ldr	r3, [sp, #32]
 8016bf4:	922c      	str	r2, [sp, #176]	; 0xb0
 8016bf6:	3b01      	subs	r3, #1
 8016bf8:	9308      	str	r3, [sp, #32]
 8016bfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016bfc:	3302      	adds	r3, #2
 8016bfe:	9309      	str	r3, [sp, #36]	; 0x24
 8016c00:	e630      	b.n	8016864 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8016c02:	f47f ae42 	bne.w	801688a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8016c06:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016c08:	2b00      	cmp	r3, #0
 8016c0a:	f340 81ea 	ble.w	8016fe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 8016c0e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016c12:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016c16:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016c1a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016c1c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016c20:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016c24:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016c28:	eef0 6a48 	vmov.f32	s13, s16
 8016c2c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016c30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016c34:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016c38:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8016c3c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016c40:	eef0 6a68 	vmov.f32	s13, s17
 8016c44:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016c48:	ee18 2a10 	vmov	r2, s16
 8016c4c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016c50:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c54:	ee18 2a90 	vmov	r2, s17
 8016c58:	932d      	str	r3, [sp, #180]	; 0xb4
 8016c5a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016c5c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c60:	932e      	str	r3, [sp, #184]	; 0xb8
 8016c62:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016c64:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8016c66:	3b01      	subs	r3, #1
 8016c68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016c6c:	9313      	str	r3, [sp, #76]	; 0x4c
 8016c6e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016c70:	edcd 6a2c 	vstr	s13, [sp, #176]	; 0xb0
 8016c74:	bf08      	it	eq
 8016c76:	4613      	moveq	r3, r2
 8016c78:	9308      	str	r3, [sp, #32]
 8016c7a:	eef0 8a67 	vmov.f32	s17, s15
 8016c7e:	eeb0 8a47 	vmov.f32	s16, s14
 8016c82:	e5e8      	b.n	8016856 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8016c84:	fb08 f000 	mul.w	r0, r8, r0
 8016c88:	fb09 0303 	mla	r3, r9, r3, r0
 8016c8c:	e684      	b.n	8016998 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ac>
 8016c8e:	4689      	mov	r9, r1
 8016c90:	e6ac      	b.n	80169ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x200>
 8016c92:	f1c2 0010 	rsb	r0, r2, #16
 8016c96:	fb0e f202 	mul.w	r2, lr, r2
 8016c9a:	fb09 2900 	mla	r9, r9, r0, r2
 8016c9e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016ca2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8016ca6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016caa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016cae:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016cb2:	ea42 0909 	orr.w	r9, r2, r9
 8016cb6:	fa1f f289 	uxth.w	r2, r9
 8016cba:	e73c      	b.n	8016b36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8016cbc:	803a      	strh	r2, [r7, #0]
 8016cbe:	e784      	b.n	8016bca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016cc0:	1c5c      	adds	r4, r3, #1
 8016cc2:	d182      	bne.n	8016bca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016cc4:	429d      	cmp	r5, r3
 8016cc6:	dd80      	ble.n	8016bca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016cc8:	1c48      	adds	r0, r1, #1
 8016cca:	f6ff af7e 	blt.w	8016bca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016cce:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016cd0:	4288      	cmp	r0, r1
 8016cd2:	f77f af7a 	ble.w	8016bca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016cd6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8016cd8:	9302      	str	r3, [sp, #8]
 8016cda:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016cdc:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8016ce0:	e9cd c005 	strd	ip, r0, [sp, #20]
 8016ce4:	e9cd 5300 	strd	r5, r3, [sp]
 8016ce8:	4639      	mov	r1, r7
 8016cea:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8016cee:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8016cf0:	f7ff fbcc 	bl	801648c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8016cf4:	e769      	b.n	8016bca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016cf6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016cf8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016cfc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016cfe:	141f      	asrs	r7, r3, #16
 8016d00:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8016d04:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016d06:	141b      	asrs	r3, r3, #16
 8016d08:	fb05 3707 	mla	r7, r5, r7, r3
 8016d0c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016d0e:	fa1f fc82 	uxth.w	ip, r2
 8016d12:	eb03 0a07 	add.w	sl, r3, r7
 8016d16:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8016d1a:	f813 9007 	ldrb.w	r9, [r3, r7]
 8016d1e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016d22:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8016d26:	b29b      	uxth	r3, r3
 8016d28:	2800      	cmp	r0, #0
 8016d2a:	f000 813f 	beq.w	8016fac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c0>
 8016d2e:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8016d32:	9410      	str	r4, [sp, #64]	; 0x40
 8016d34:	eb0a 0b05 	add.w	fp, sl, r5
 8016d38:	fa1f fa80 	uxth.w	sl, r0
 8016d3c:	fb0a fc0c 	mul.w	ip, sl, ip
 8016d40:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8016d44:	fa1f fa8a 	uxth.w	sl, sl
 8016d48:	eba1 010c 	sub.w	r1, r1, ip
 8016d4c:	eba3 030a 	sub.w	r3, r3, sl
 8016d50:	b289      	uxth	r1, r1
 8016d52:	fb08 f101 	mul.w	r1, r8, r1
 8016d56:	b29b      	uxth	r3, r3
 8016d58:	fb09 1303 	mla	r3, r9, r3, r1
 8016d5c:	9910      	ldr	r1, [sp, #64]	; 0x40
 8016d5e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016d62:	9411      	str	r4, [sp, #68]	; 0x44
 8016d64:	fb0a 3301 	mla	r3, sl, r1, r3
 8016d68:	fb0c 3304 	mla	r3, ip, r4, r3
 8016d6c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016d70:	2b00      	cmp	r3, #0
 8016d72:	f000 810d 	beq.w	8016f90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8016d76:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016d78:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016d7a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016d7e:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8016d82:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8016d86:	f000 8116 	beq.w	8016fb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ca>
 8016d8a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016d8e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016d92:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016d96:	fb09 f707 	mul.w	r7, r9, r7
 8016d9a:	fb0a fc0c 	mul.w	ip, sl, ip
 8016d9e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8016da2:	f107 0b20 	add.w	fp, r7, #32
 8016da6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016daa:	44cc      	add	ip, r9
 8016dac:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8016db0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016db4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016db8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016dbc:	ea4c 0909 	orr.w	r9, ip, r9
 8016dc0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016dc4:	884f      	ldrh	r7, [r1, #2]
 8016dc6:	d019      	beq.n	8016dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x610>
 8016dc8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016dcc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8016dd0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016dd4:	fb08 f807 	mul.w	r8, r8, r7
 8016dd8:	fb0a fc0c 	mul.w	ip, sl, ip
 8016ddc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8016de0:	f108 0b20 	add.w	fp, r8, #32
 8016de4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016de8:	44bc      	add	ip, r7
 8016dea:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8016dee:	0a3f      	lsrs	r7, r7, #8
 8016df0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016df4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016df8:	ea4c 0707 	orr.w	r7, ip, r7
 8016dfc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8016e00:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8016e04:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016e08:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016e0c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016e10:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016e14:	ea4c 0909 	orr.w	r9, ip, r9
 8016e18:	ea4a 0707 	orr.w	r7, sl, r7
 8016e1c:	2800      	cmp	r0, #0
 8016e1e:	f000 80cc 	beq.w	8016fba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ce>
 8016e22:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016e24:	eb01 0c04 	add.w	ip, r1, r4
 8016e28:	f831 8004 	ldrh.w	r8, [r1, r4]
 8016e2c:	9910      	ldr	r1, [sp, #64]	; 0x40
 8016e2e:	29ff      	cmp	r1, #255	; 0xff
 8016e30:	d01a      	beq.n	8016e68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x67c>
 8016e32:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016e34:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8016e38:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016e3c:	fb04 fb08 	mul.w	fp, r4, r8
 8016e40:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016e44:	fb0a fa01 	mul.w	sl, sl, r1
 8016e48:	f10b 0120 	add.w	r1, fp, #32
 8016e4c:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 8016e50:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8016e54:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016e58:	44d0      	add	r8, sl
 8016e5a:	0a09      	lsrs	r1, r1, #8
 8016e5c:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 8016e60:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016e64:	ea48 0801 	orr.w	r8, r8, r1
 8016e68:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016e6a:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8016e6e:	2cff      	cmp	r4, #255	; 0xff
 8016e70:	d01a      	beq.n	8016ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6bc>
 8016e72:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8016e76:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016e7a:	fb04 fb01 	mul.w	fp, r4, r1
 8016e7e:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016e82:	fb0a fa0c 	mul.w	sl, sl, ip
 8016e86:	f10b 0c20 	add.w	ip, fp, #32
 8016e8a:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8016e8e:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8016e92:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016e96:	4451      	add	r1, sl
 8016e98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016e9c:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8016ea0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8016ea4:	ea41 010c 	orr.w	r1, r1, ip
 8016ea8:	fb10 fc02 	smulbb	ip, r0, r2
 8016eac:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8016eb0:	f1c0 0a10 	rsb	sl, r0, #16
 8016eb4:	ebaa 0a02 	sub.w	sl, sl, r2
 8016eb8:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8016ebc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8016ec0:	437a      	muls	r2, r7
 8016ec2:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8016ec6:	040f      	lsls	r7, r1, #16
 8016ec8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016ecc:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8016ed0:	fb09 220a 	mla	r2, r9, sl, r2
 8016ed4:	ea4b 0808 	orr.w	r8, fp, r8
 8016ed8:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8016edc:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8016ee0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016ee4:	fb00 2208 	mla	r2, r0, r8, r2
 8016ee8:	4339      	orrs	r1, r7
 8016eea:	fb0c 2201 	mla	r2, ip, r1, r2
 8016eee:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8016ef2:	0952      	lsrs	r2, r2, #5
 8016ef4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016ef8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016efc:	ea49 0202 	orr.w	r2, r9, r2
 8016f00:	2bff      	cmp	r3, #255	; 0xff
 8016f02:	b292      	uxth	r2, r2
 8016f04:	d102      	bne.n	8016f0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x720>
 8016f06:	9914      	ldr	r1, [sp, #80]	; 0x50
 8016f08:	29ff      	cmp	r1, #255	; 0xff
 8016f0a:	d067      	beq.n	8016fdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f0>
 8016f0c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016f0e:	f8be 0000 	ldrh.w	r0, [lr]
 8016f12:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016f14:	434b      	muls	r3, r1
 8016f16:	1c59      	adds	r1, r3, #1
 8016f18:	eb01 2323 	add.w	r3, r1, r3, asr #8
 8016f1c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8016f20:	1201      	asrs	r1, r0, #8
 8016f22:	b2db      	uxtb	r3, r3
 8016f24:	1217      	asrs	r7, r2, #8
 8016f26:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016f2a:	fb11 f103 	smulbb	r1, r1, r3
 8016f2e:	ea4f 0ce0 	mov.w	ip, r0, asr #3
 8016f32:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016f36:	00c0      	lsls	r0, r0, #3
 8016f38:	fb07 1704 	mla	r7, r7, r4, r1
 8016f3c:	b2c0      	uxtb	r0, r0
 8016f3e:	10d1      	asrs	r1, r2, #3
 8016f40:	00d2      	lsls	r2, r2, #3
 8016f42:	fb10 f003 	smulbb	r0, r0, r3
 8016f46:	b2d2      	uxtb	r2, r2
 8016f48:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016f4c:	fb02 0204 	mla	r2, r2, r4, r0
 8016f50:	fb1c fc03 	smulbb	ip, ip, r3
 8016f54:	b2bf      	uxth	r7, r7
 8016f56:	b292      	uxth	r2, r2
 8016f58:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016f5c:	fb01 c104 	mla	r1, r1, r4, ip
 8016f60:	1c7b      	adds	r3, r7, #1
 8016f62:	f102 0c01 	add.w	ip, r2, #1
 8016f66:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8016f6a:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 8016f6e:	b289      	uxth	r1, r1
 8016f70:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016f74:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016f78:	ea47 070c 	orr.w	r7, r7, ip
 8016f7c:	f101 0c01 	add.w	ip, r1, #1
 8016f80:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8016f84:	0949      	lsrs	r1, r1, #5
 8016f86:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016f8a:	430f      	orrs	r7, r1
 8016f8c:	f8ae 7000 	strh.w	r7, [lr]
 8016f90:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016f92:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016f94:	4413      	add	r3, r2
 8016f96:	932b      	str	r3, [sp, #172]	; 0xac
 8016f98:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016f9a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016f9c:	441a      	add	r2, r3
 8016f9e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016fa0:	922c      	str	r2, [sp, #176]	; 0xb0
 8016fa2:	3b01      	subs	r3, #1
 8016fa4:	f10e 0e02 	add.w	lr, lr, #2
 8016fa8:	9315      	str	r3, [sp, #84]	; 0x54
 8016faa:	e489      	b.n	80168c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8016fac:	fb08 f101 	mul.w	r1, r8, r1
 8016fb0:	fb09 1303 	mla	r3, r9, r3, r1
 8016fb4:	e6da      	b.n	8016d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x580>
 8016fb6:	46b9      	mov	r9, r7
 8016fb8:	e702      	b.n	8016dc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d4>
 8016fba:	f1c2 0110 	rsb	r1, r2, #16
 8016fbe:	437a      	muls	r2, r7
 8016fc0:	fb09 2901 	mla	r9, r9, r1, r2
 8016fc4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016fc8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8016fcc:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8016fd0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016fd4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016fd8:	4302      	orrs	r2, r0
 8016fda:	e791      	b.n	8016f00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8016fdc:	f8ae 2000 	strh.w	r2, [lr]
 8016fe0:	e7d6      	b.n	8016f90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8016fe2:	b019      	add	sp, #100	; 0x64
 8016fe4:	ecbd 8b08 	vpop	{d8-d11}
 8016fe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016fec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8016fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ff0:	b087      	sub	sp, #28
 8016ff2:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8016ff6:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8016ffa:	9105      	str	r1, [sp, #20]
 8016ffc:	fb00 e604 	mla	r6, r0, r4, lr
 8017000:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8017004:	9102      	str	r1, [sp, #8]
 8017006:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 801700a:	9103      	str	r1, [sp, #12]
 801700c:	9905      	ldr	r1, [sp, #20]
 801700e:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8017012:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8017016:	8809      	ldrh	r1, [r1, #0]
 8017018:	2800      	cmp	r0, #0
 801701a:	eb02 0a06 	add.w	sl, r2, r6
 801701e:	f2c0 80ca 	blt.w	80171b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8017022:	4287      	cmp	r7, r0
 8017024:	f340 80c7 	ble.w	80171b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8017028:	f1be 0f00 	cmp.w	lr, #0
 801702c:	f2c0 80bf 	blt.w	80171ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8017030:	4574      	cmp	r4, lr
 8017032:	f340 80bc 	ble.w	80171ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8017036:	f812 c006 	ldrb.w	ip, [r2, r6]
 801703a:	f833 9016 	ldrh.w	r9, [r3, r6, lsl #1]
 801703e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017042:	d01c      	beq.n	801707e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x92>
 8017044:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8017048:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801704c:	4372      	muls	r2, r6
 801704e:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8017052:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8017056:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801705a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801705e:	fb0c f609 	mul.w	r6, ip, r9
 8017062:	eb03 0902 	add.w	r9, r3, r2
 8017066:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 801706a:	f106 0820 	add.w	r8, r6, #32
 801706e:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8017072:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017076:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801707a:	ea49 0908 	orr.w	r9, r9, r8
 801707e:	fa1f f989 	uxth.w	r9, r9
 8017082:	f11e 0301 	adds.w	r3, lr, #1
 8017086:	f100 809b 	bmi.w	80171c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 801708a:	429c      	cmp	r4, r3
 801708c:	f340 8098 	ble.w	80171c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8017090:	2d00      	cmp	r5, #0
 8017092:	f000 8095 	beq.w	80171c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8017096:	f89a 6001 	ldrb.w	r6, [sl, #1]
 801709a:	9b03      	ldr	r3, [sp, #12]
 801709c:	2eff      	cmp	r6, #255	; 0xff
 801709e:	885b      	ldrh	r3, [r3, #2]
 80170a0:	d01b      	beq.n	80170da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xee>
 80170a2:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80170a6:	ea4f 08e6 	mov.w	r8, r6, asr #3
 80170aa:	fb08 f202 	mul.w	r2, r8, r2
 80170ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80170b2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80170b6:	fb06 f803 	mul.w	r8, r6, r3
 80170ba:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80170be:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80170c2:	441a      	add	r2, r3
 80170c4:	f108 0320 	add.w	r3, r8, #32
 80170c8:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80170cc:	0a1b      	lsrs	r3, r3, #8
 80170ce:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80170d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80170d6:	ea4b 0303 	orr.w	r3, fp, r3
 80170da:	b29b      	uxth	r3, r3
 80170dc:	9301      	str	r3, [sp, #4]
 80170de:	3001      	adds	r0, #1
 80170e0:	d474      	bmi.n	80171cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 80170e2:	4287      	cmp	r7, r0
 80170e4:	dd72      	ble.n	80171cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 80170e6:	9a02      	ldr	r2, [sp, #8]
 80170e8:	2a00      	cmp	r2, #0
 80170ea:	f000 8111 	beq.w	8017310 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>
 80170ee:	f1be 0f00 	cmp.w	lr, #0
 80170f2:	db68      	blt.n	80171c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 80170f4:	4574      	cmp	r4, lr
 80170f6:	dd66      	ble.n	80171c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 80170f8:	f81a 7004 	ldrb.w	r7, [sl, r4]
 80170fc:	9a03      	ldr	r2, [sp, #12]
 80170fe:	2fff      	cmp	r7, #255	; 0xff
 8017100:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8017104:	d01c      	beq.n	8017140 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x154>
 8017106:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 801710a:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801710e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017112:	fb07 fb00 	mul.w	fp, r7, r0
 8017116:	fb08 f802 	mul.w	r8, r8, r2
 801711a:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801711e:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8017122:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017126:	4490      	add	r8, r2
 8017128:	f10b 0220 	add.w	r2, fp, #32
 801712c:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8017130:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8017134:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8017138:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801713c:	ea40 000b 	orr.w	r0, r0, fp
 8017140:	b280      	uxth	r0, r0
 8017142:	f11e 0e01 	adds.w	lr, lr, #1
 8017146:	d446      	bmi.n	80171d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8017148:	4574      	cmp	r4, lr
 801714a:	dd44      	ble.n	80171d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 801714c:	2d00      	cmp	r5, #0
 801714e:	d045      	beq.n	80171dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f0>
 8017150:	1c62      	adds	r2, r4, #1
 8017152:	9b03      	ldr	r3, [sp, #12]
 8017154:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017158:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801715c:	2cff      	cmp	r4, #255	; 0xff
 801715e:	d01c      	beq.n	801719a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ae>
 8017160:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8017164:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017168:	fb08 fe0e 	mul.w	lr, r8, lr
 801716c:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8017170:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017174:	fb04 f802 	mul.w	r8, r4, r2
 8017178:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 801717c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017180:	4472      	add	r2, lr
 8017182:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8017186:	f108 0a20 	add.w	sl, r8, #32
 801718a:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 801718e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017192:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017196:	ea42 020a 	orr.w	r2, r2, sl
 801719a:	b292      	uxth	r2, r2
 801719c:	2d0f      	cmp	r5, #15
 801719e:	d91f      	bls.n	80171e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f4>
 80171a0:	4b5f      	ldr	r3, [pc, #380]	; (8017320 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x334>)
 80171a2:	4a60      	ldr	r2, [pc, #384]	; (8017324 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x338>)
 80171a4:	4860      	ldr	r0, [pc, #384]	; (8017328 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x33c>)
 80171a6:	f240 3173 	movw	r1, #883	; 0x373
 80171aa:	f003 fc1b 	bl	801a9e4 <__assert_func>
 80171ae:	4689      	mov	r9, r1
 80171b0:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80171b4:	e765      	b.n	8017082 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x96>
 80171b6:	26ff      	movs	r6, #255	; 0xff
 80171b8:	9101      	str	r1, [sp, #4]
 80171ba:	4689      	mov	r9, r1
 80171bc:	46b4      	mov	ip, r6
 80171be:	e78e      	b.n	80170de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 80171c0:	9101      	str	r1, [sp, #4]
 80171c2:	26ff      	movs	r6, #255	; 0xff
 80171c4:	e78b      	b.n	80170de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 80171c6:	4608      	mov	r0, r1
 80171c8:	27ff      	movs	r7, #255	; 0xff
 80171ca:	e7ba      	b.n	8017142 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x156>
 80171cc:	24ff      	movs	r4, #255	; 0xff
 80171ce:	460a      	mov	r2, r1
 80171d0:	4608      	mov	r0, r1
 80171d2:	4627      	mov	r7, r4
 80171d4:	e7e2      	b.n	801719c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 80171d6:	460a      	mov	r2, r1
 80171d8:	24ff      	movs	r4, #255	; 0xff
 80171da:	e7df      	b.n	801719c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 80171dc:	460a      	mov	r2, r1
 80171de:	24ff      	movs	r4, #255	; 0xff
 80171e0:	9b02      	ldr	r3, [sp, #8]
 80171e2:	2b0f      	cmp	r3, #15
 80171e4:	d8dc      	bhi.n	80171a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 80171e6:	f8bd e008 	ldrh.w	lr, [sp, #8]
 80171ea:	fa1f f885 	uxth.w	r8, r5
 80171ee:	fb08 fa0e 	mul.w	sl, r8, lr
 80171f2:	ea4f 1308 	mov.w	r3, r8, lsl #4
 80171f6:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 80171fa:	9303      	str	r3, [sp, #12]
 80171fc:	fa1f f38e 	uxth.w	r3, lr
 8017200:	9304      	str	r3, [sp, #16]
 8017202:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8017206:	9b02      	ldr	r3, [sp, #8]
 8017208:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801720c:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8017210:	fb15 fe03 	smulbb	lr, r5, r3
 8017214:	ea48 0809 	orr.w	r8, r8, r9
 8017218:	f1c3 0910 	rsb	r9, r3, #16
 801721c:	9b01      	ldr	r3, [sp, #4]
 801721e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8017222:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8017226:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801722a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801722e:	eba9 0905 	sub.w	r9, r9, r5
 8017232:	ea4b 0303 	orr.w	r3, fp, r3
 8017236:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 801723a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801723e:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 8017242:	436b      	muls	r3, r5
 8017244:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017248:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801724c:	ea4b 0202 	orr.w	r2, fp, r2
 8017250:	fb09 3308 	mla	r3, r9, r8, r3
 8017254:	fb0e 3302 	mla	r3, lr, r2, r3
 8017258:	0402      	lsls	r2, r0, #16
 801725a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801725e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017262:	4310      	orrs	r0, r2
 8017264:	9a02      	ldr	r2, [sp, #8]
 8017266:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 801726a:	9a03      	ldr	r2, [sp, #12]
 801726c:	fb0e 3e00 	mla	lr, lr, r0, r3
 8017270:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8017274:	9a04      	ldr	r2, [sp, #16]
 8017276:	1a80      	subs	r0, r0, r2
 8017278:	9a03      	ldr	r2, [sp, #12]
 801727a:	eba2 020a 	sub.w	r2, r2, sl
 801727e:	b292      	uxth	r2, r2
 8017280:	b280      	uxth	r0, r0
 8017282:	4356      	muls	r6, r2
 8017284:	9a04      	ldr	r2, [sp, #16]
 8017286:	fb0c 6600 	mla	r6, ip, r0, r6
 801728a:	fb02 6707 	mla	r7, r2, r7, r6
 801728e:	fb0a 7404 	mla	r4, sl, r4, r7
 8017292:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8017296:	1208      	asrs	r0, r1, #8
 8017298:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801729c:	ea6f 2424 	mvn.w	r4, r4, asr #8
 80172a0:	b2e4      	uxtb	r4, r4
 80172a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80172a6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80172aa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80172ae:	4360      	muls	r0, r4
 80172b0:	ea43 0e0e 	orr.w	lr, r3, lr
 80172b4:	fa1f f38e 	uxth.w	r3, lr
 80172b8:	1c42      	adds	r2, r0, #1
 80172ba:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80172be:	1218      	asrs	r0, r3, #8
 80172c0:	10cd      	asrs	r5, r1, #3
 80172c2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80172c6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80172ca:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80172ce:	4a17      	ldr	r2, [pc, #92]	; (801732c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x340>)
 80172d0:	4365      	muls	r5, r4
 80172d2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80172d6:	1c6a      	adds	r2, r5, #1
 80172d8:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80172dc:	00c9      	lsls	r1, r1, #3
 80172de:	10da      	asrs	r2, r3, #3
 80172e0:	b2c9      	uxtb	r1, r1
 80172e2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80172e6:	434c      	muls	r4, r1
 80172e8:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 80172ec:	1c61      	adds	r1, r4, #1
 80172ee:	00d2      	lsls	r2, r2, #3
 80172f0:	00db      	lsls	r3, r3, #3
 80172f2:	eb01 2414 	add.w	r4, r1, r4, lsr #8
 80172f6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80172fa:	b2db      	uxtb	r3, r3
 80172fc:	4302      	orrs	r2, r0
 80172fe:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8017302:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 8017306:	9a05      	ldr	r2, [sp, #20]
 8017308:	8013      	strh	r3, [r2, #0]
 801730a:	b007      	add	sp, #28
 801730c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017310:	2d0f      	cmp	r5, #15
 8017312:	f63f af45 	bhi.w	80171a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8017316:	24ff      	movs	r4, #255	; 0xff
 8017318:	460a      	mov	r2, r1
 801731a:	4608      	mov	r0, r1
 801731c:	4627      	mov	r7, r4
 801731e:	e762      	b.n	80171e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1fa>
 8017320:	0801e61b 	.word	0x0801e61b
 8017324:	0801eb79 	.word	0x0801eb79
 8017328:	0801e6a3 	.word	0x0801e6a3
 801732c:	fffff800 	.word	0xfffff800

08017330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017334:	ed2d 8b08 	vpush	{d8-d11}
 8017338:	b095      	sub	sp, #84	; 0x54
 801733a:	eeb0 aa40 	vmov.f32	s20, s0
 801733e:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8017340:	9306      	str	r3, [sp, #24]
 8017342:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8017346:	9110      	str	r1, [sp, #64]	; 0x40
 8017348:	9308      	str	r3, [sp, #32]
 801734a:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801734e:	9013      	str	r0, [sp, #76]	; 0x4c
 8017350:	6870      	ldr	r0, [r6, #4]
 8017352:	9212      	str	r2, [sp, #72]	; 0x48
 8017354:	fb00 1303 	mla	r3, r0, r3, r1
 8017358:	6831      	ldr	r1, [r6, #0]
 801735a:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 801735c:	f9bd 50b8 	ldrsh.w	r5, [sp, #184]	; 0xb8
 8017360:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8017364:	9307      	str	r3, [sp, #28]
 8017366:	6813      	ldr	r3, [r2, #0]
 8017368:	9309      	str	r3, [sp, #36]	; 0x24
 801736a:	6853      	ldr	r3, [r2, #4]
 801736c:	930a      	str	r3, [sp, #40]	; 0x28
 801736e:	006b      	lsls	r3, r5, #1
 8017370:	eef0 9a60 	vmov.f32	s19, s1
 8017374:	eeb0 9a41 	vmov.f32	s18, s2
 8017378:	eeb0 8a62 	vmov.f32	s16, s5
 801737c:	eef0 8a43 	vmov.f32	s17, s6
 8017380:	eef0 ba44 	vmov.f32	s23, s8
 8017384:	eeb0 ba64 	vmov.f32	s22, s9
 8017388:	eef0 aa45 	vmov.f32	s21, s10
 801738c:	930f      	str	r3, [sp, #60]	; 0x3c
 801738e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017390:	2b00      	cmp	r3, #0
 8017392:	dc03      	bgt.n	801739c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8017394:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017396:	2b00      	cmp	r3, #0
 8017398:	f340 83a3 	ble.w	8017ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 801739c:	9b06      	ldr	r3, [sp, #24]
 801739e:	2b00      	cmp	r3, #0
 80173a0:	f340 81bc 	ble.w	801771c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ec>
 80173a4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80173a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80173a8:	1412      	asrs	r2, r2, #16
 80173aa:	ea4f 4323 	mov.w	r3, r3, asr #16
 80173ae:	d42f      	bmi.n	8017410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 80173b0:	1c51      	adds	r1, r2, #1
 80173b2:	428d      	cmp	r5, r1
 80173b4:	dd2f      	ble.n	8017416 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 80173b6:	2b00      	cmp	r3, #0
 80173b8:	db2d      	blt.n	8017416 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 80173ba:	9808      	ldr	r0, [sp, #32]
 80173bc:	1c59      	adds	r1, r3, #1
 80173be:	4288      	cmp	r0, r1
 80173c0:	dd29      	ble.n	8017416 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 80173c2:	9b06      	ldr	r3, [sp, #24]
 80173c4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80173c6:	9927      	ldr	r1, [sp, #156]	; 0x9c
 80173c8:	3b01      	subs	r3, #1
 80173ca:	fb02 1203 	mla	r2, r2, r3, r1
 80173ce:	1412      	asrs	r2, r2, #16
 80173d0:	d42b      	bmi.n	801742a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80173d2:	3201      	adds	r2, #1
 80173d4:	4295      	cmp	r5, r2
 80173d6:	dd28      	ble.n	801742a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80173d8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80173da:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80173dc:	fb02 1303 	mla	r3, r2, r3, r1
 80173e0:	141b      	asrs	r3, r3, #16
 80173e2:	d422      	bmi.n	801742a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80173e4:	9a08      	ldr	r2, [sp, #32]
 80173e6:	3301      	adds	r3, #1
 80173e8:	429a      	cmp	r2, r3
 80173ea:	dd1e      	ble.n	801742a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80173ec:	9b06      	ldr	r3, [sp, #24]
 80173ee:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80173f2:	9311      	str	r3, [sp, #68]	; 0x44
 80173f4:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80173f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80173fa:	2b00      	cmp	r3, #0
 80173fc:	f300 8208 	bgt.w	8017810 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e0>
 8017400:	9b06      	ldr	r3, [sp, #24]
 8017402:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017406:	9b07      	ldr	r3, [sp, #28]
 8017408:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801740c:	9307      	str	r3, [sp, #28]
 801740e:	e187      	b.n	8017720 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f0>
 8017410:	1c57      	adds	r7, r2, #1
 8017412:	f040 8174 	bne.w	80176fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8017416:	42aa      	cmp	r2, r5
 8017418:	f280 8171 	bge.w	80176fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 801741c:	1c5e      	adds	r6, r3, #1
 801741e:	f2c0 816e 	blt.w	80176fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8017422:	9a08      	ldr	r2, [sp, #32]
 8017424:	4293      	cmp	r3, r2
 8017426:	f280 816a 	bge.w	80176fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 801742a:	9b06      	ldr	r3, [sp, #24]
 801742c:	9f07      	ldr	r7, [sp, #28]
 801742e:	9311      	str	r3, [sp, #68]	; 0x44
 8017430:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017434:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017436:	2b00      	cmp	r3, #0
 8017438:	dde2      	ble.n	8017400 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801743a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801743c:	1419      	asrs	r1, r3, #16
 801743e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017440:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017444:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017446:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801744a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801744c:	141b      	asrs	r3, r3, #16
 801744e:	f100 81c4 	bmi.w	80177da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4aa>
 8017452:	1c58      	adds	r0, r3, #1
 8017454:	4285      	cmp	r5, r0
 8017456:	f340 81c2 	ble.w	80177de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 801745a:	2900      	cmp	r1, #0
 801745c:	f2c0 81bf 	blt.w	80177de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8017460:	9c08      	ldr	r4, [sp, #32]
 8017462:	1c48      	adds	r0, r1, #1
 8017464:	4284      	cmp	r4, r0
 8017466:	f340 81ba 	ble.w	80177de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 801746a:	fb01 3105 	mla	r1, r1, r5, r3
 801746e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017470:	fa1f fe82 	uxth.w	lr, r2
 8017474:	eb03 0a01 	add.w	sl, r3, r1
 8017478:	ea4f 100e 	mov.w	r0, lr, lsl #4
 801747c:	f813 9001 	ldrb.w	r9, [r3, r1]
 8017480:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017484:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017488:	b29b      	uxth	r3, r3
 801748a:	f1bc 0f00 	cmp.w	ip, #0
 801748e:	f000 8186 	beq.w	801779e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46e>
 8017492:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8017496:	940b      	str	r4, [sp, #44]	; 0x2c
 8017498:	eb0a 0b05 	add.w	fp, sl, r5
 801749c:	fa1f fa8c 	uxth.w	sl, ip
 80174a0:	fb0a fe0e 	mul.w	lr, sl, lr
 80174a4:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80174a8:	fa1f fa8a 	uxth.w	sl, sl
 80174ac:	eba0 000e 	sub.w	r0, r0, lr
 80174b0:	eba3 030a 	sub.w	r3, r3, sl
 80174b4:	b280      	uxth	r0, r0
 80174b6:	fb08 f000 	mul.w	r0, r8, r0
 80174ba:	b29b      	uxth	r3, r3
 80174bc:	fb09 0303 	mla	r3, r9, r3, r0
 80174c0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80174c2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80174c6:	940c      	str	r4, [sp, #48]	; 0x30
 80174c8:	fb0a 3300 	mla	r3, sl, r0, r3
 80174cc:	fb0e 3304 	mla	r3, lr, r4, r3
 80174d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80174d4:	2b00      	cmp	r3, #0
 80174d6:	f000 8105 	beq.w	80176e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80174da:	9809      	ldr	r0, [sp, #36]	; 0x24
 80174dc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80174de:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80174e2:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80174e6:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 80174ea:	f000 815d 	beq.w	80177a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>
 80174ee:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80174f2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80174f6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80174fa:	fb09 f101 	mul.w	r1, r9, r1
 80174fe:	fb0a fe0e 	mul.w	lr, sl, lr
 8017502:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8017506:	f101 0b20 	add.w	fp, r1, #32
 801750a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801750e:	44ce      	add	lr, r9
 8017510:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8017514:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017518:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801751c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017520:	ea4e 0909 	orr.w	r9, lr, r9
 8017524:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017528:	8841      	ldrh	r1, [r0, #2]
 801752a:	d019      	beq.n	8017560 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 801752c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017530:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017534:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017538:	fb0a fe0e 	mul.w	lr, sl, lr
 801753c:	fb08 f801 	mul.w	r8, r8, r1
 8017540:	f108 0b20 	add.w	fp, r8, #32
 8017544:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8017548:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801754c:	448e      	add	lr, r1
 801754e:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8017552:	0a09      	lsrs	r1, r1, #8
 8017554:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8017558:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801755c:	ea4a 0101 	orr.w	r1, sl, r1
 8017560:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8017564:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017568:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801756c:	ea4e 0909 	orr.w	r9, lr, r9
 8017570:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8017574:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017578:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801757c:	ea4e 0e01 	orr.w	lr, lr, r1
 8017580:	f1bc 0f00 	cmp.w	ip, #0
 8017584:	f000 8112 	beq.w	80177ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8017588:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801758a:	eb00 0801 	add.w	r8, r0, r1
 801758e:	5a41      	ldrh	r1, [r0, r1]
 8017590:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017592:	28ff      	cmp	r0, #255	; 0xff
 8017594:	d019      	beq.n	80175ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29a>
 8017596:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017598:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801759c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80175a0:	fb04 fb01 	mul.w	fp, r4, r1
 80175a4:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80175a8:	fb0a fa00 	mul.w	sl, sl, r0
 80175ac:	f10b 0020 	add.w	r0, fp, #32
 80175b0:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 80175b4:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80175b8:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80175bc:	4451      	add	r1, sl
 80175be:	0a00      	lsrs	r0, r0, #8
 80175c0:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80175c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80175c8:	4301      	orrs	r1, r0
 80175ca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80175cc:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 80175d0:	2cff      	cmp	r4, #255	; 0xff
 80175d2:	d01a      	beq.n	801760a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2da>
 80175d4:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 80175d8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80175dc:	fb04 fb00 	mul.w	fp, r4, r0
 80175e0:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80175e4:	fb0a fa08 	mul.w	sl, sl, r8
 80175e8:	f10b 0820 	add.w	r8, fp, #32
 80175ec:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 80175f0:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 80175f4:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80175f8:	4450      	add	r0, sl
 80175fa:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80175fe:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8017602:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017606:	ea40 0008 	orr.w	r0, r0, r8
 801760a:	fb1c f802 	smulbb	r8, ip, r2
 801760e:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8017612:	f1cc 0a10 	rsb	sl, ip, #16
 8017616:	ebaa 0a02 	sub.w	sl, sl, r2
 801761a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801761e:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8017622:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8017626:	fb0e f202 	mul.w	r2, lr, r2
 801762a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801762e:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8017632:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017636:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801763a:	fb09 220a 	mla	r2, r9, sl, r2
 801763e:	ea4b 0101 	orr.w	r1, fp, r1
 8017642:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017646:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801764a:	fb0c 2201 	mla	r2, ip, r1, r2
 801764e:	ea4e 0000 	orr.w	r0, lr, r0
 8017652:	fb08 2800 	mla	r8, r8, r0, r2
 8017656:	ea4f 5258 	mov.w	r2, r8, lsr #21
 801765a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801765e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017662:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8017666:	ea42 0808 	orr.w	r8, r2, r8
 801766a:	fa1f f288 	uxth.w	r2, r8
 801766e:	2bff      	cmp	r3, #255	; 0xff
 8017670:	f000 80b1 	beq.w	80177d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8017674:	f8b7 8000 	ldrh.w	r8, [r7]
 8017678:	43db      	mvns	r3, r3
 801767a:	ea4f 2028 	mov.w	r0, r8, asr #8
 801767e:	fa5f fe83 	uxtb.w	lr, r3
 8017682:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017686:	fb00 f00e 	mul.w	r0, r0, lr
 801768a:	1c41      	adds	r1, r0, #1
 801768c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017690:	1210      	asrs	r0, r2, #8
 8017692:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8017696:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801769a:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 801769e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80176a2:	495a      	ldr	r1, [pc, #360]	; (801780c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4dc>)
 80176a4:	fb0c fc0e 	mul.w	ip, ip, lr
 80176a8:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 80176ac:	f10c 0101 	add.w	r1, ip, #1
 80176b0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80176b4:	10d1      	asrs	r1, r2, #3
 80176b6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80176ba:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 80176be:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 80176c2:	b2db      	uxtb	r3, r3
 80176c4:	00c9      	lsls	r1, r1, #3
 80176c6:	fb03 f30e 	mul.w	r3, r3, lr
 80176ca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80176ce:	4301      	orrs	r1, r0
 80176d0:	1c58      	adds	r0, r3, #1
 80176d2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80176d6:	00d3      	lsls	r3, r2, #3
 80176d8:	b2db      	uxtb	r3, r3
 80176da:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80176de:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 80176e2:	803b      	strh	r3, [r7, #0]
 80176e4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80176e6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80176e8:	4413      	add	r3, r2
 80176ea:	9327      	str	r3, [sp, #156]	; 0x9c
 80176ec:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80176ee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80176f0:	441a      	add	r2, r3
 80176f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80176f4:	9228      	str	r2, [sp, #160]	; 0xa0
 80176f6:	3b01      	subs	r3, #1
 80176f8:	3702      	adds	r7, #2
 80176fa:	9311      	str	r3, [sp, #68]	; 0x44
 80176fc:	e69a      	b.n	8017434 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80176fe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017700:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017702:	4413      	add	r3, r2
 8017704:	9327      	str	r3, [sp, #156]	; 0x9c
 8017706:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017708:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801770a:	441a      	add	r2, r3
 801770c:	9b06      	ldr	r3, [sp, #24]
 801770e:	9228      	str	r2, [sp, #160]	; 0xa0
 8017710:	3b01      	subs	r3, #1
 8017712:	9306      	str	r3, [sp, #24]
 8017714:	9b07      	ldr	r3, [sp, #28]
 8017716:	3302      	adds	r3, #2
 8017718:	9307      	str	r3, [sp, #28]
 801771a:	e63f      	b.n	801739c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 801771c:	f47f ae51 	bne.w	80173c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8017720:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017722:	2b00      	cmp	r3, #0
 8017724:	f340 81dd 	ble.w	8017ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8017728:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801772c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017730:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017734:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017736:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801773a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801773e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017742:	eef0 6a48 	vmov.f32	s13, s16
 8017746:	ee69 7a27 	vmul.f32	s15, s18, s15
 801774a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801774e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017752:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8017756:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801775a:	eef0 6a68 	vmov.f32	s13, s17
 801775e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017762:	ee18 2a10 	vmov	r2, s16
 8017766:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801776a:	fb92 f3f3 	sdiv	r3, r2, r3
 801776e:	ee18 2a90 	vmov	r2, s17
 8017772:	9329      	str	r3, [sp, #164]	; 0xa4
 8017774:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017776:	fb92 f3f3 	sdiv	r3, r2, r3
 801777a:	932a      	str	r3, [sp, #168]	; 0xa8
 801777c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801777e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017780:	3b01      	subs	r3, #1
 8017782:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017786:	9310      	str	r3, [sp, #64]	; 0x40
 8017788:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801778a:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 801778e:	bf08      	it	eq
 8017790:	4613      	moveq	r3, r2
 8017792:	9306      	str	r3, [sp, #24]
 8017794:	eef0 8a67 	vmov.f32	s17, s15
 8017798:	eeb0 8a47 	vmov.f32	s16, s14
 801779c:	e5f7      	b.n	801738e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 801779e:	fb08 f000 	mul.w	r0, r8, r0
 80177a2:	fb09 0303 	mla	r3, r9, r3, r0
 80177a6:	e693      	b.n	80174d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1a0>
 80177a8:	4689      	mov	r9, r1
 80177aa:	e6bb      	b.n	8017524 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 80177ac:	f1c2 0010 	rsb	r0, r2, #16
 80177b0:	fb0e f202 	mul.w	r2, lr, r2
 80177b4:	fb09 2900 	mla	r9, r9, r0, r2
 80177b8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80177bc:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80177c0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80177c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80177c8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80177cc:	ea42 0909 	orr.w	r9, r2, r9
 80177d0:	fa1f f289 	uxth.w	r2, r9
 80177d4:	e74b      	b.n	801766e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 80177d6:	803a      	strh	r2, [r7, #0]
 80177d8:	e784      	b.n	80176e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80177da:	1c5c      	adds	r4, r3, #1
 80177dc:	d182      	bne.n	80176e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80177de:	429d      	cmp	r5, r3
 80177e0:	dd80      	ble.n	80176e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80177e2:	1c48      	adds	r0, r1, #1
 80177e4:	f6ff af7e 	blt.w	80176e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80177e8:	9808      	ldr	r0, [sp, #32]
 80177ea:	4288      	cmp	r0, r1
 80177ec:	f77f af7a 	ble.w	80176e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80177f0:	e9cd 3102 	strd	r3, r1, [sp, #8]
 80177f4:	e9cd 2c04 	strd	r2, ip, [sp, #16]
 80177f8:	e9cd 5000 	strd	r5, r0, [sp]
 80177fc:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8017800:	4639      	mov	r1, r7
 8017802:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017804:	f7ff fbf2 	bl	8016fec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8017808:	e76c      	b.n	80176e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801780a:	bf00      	nop
 801780c:	fffff800 	.word	0xfffff800
 8017810:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017812:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017816:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017818:	141f      	asrs	r7, r3, #16
 801781a:	f3c3 3003 	ubfx	r0, r3, #12, #4
 801781e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017820:	141b      	asrs	r3, r3, #16
 8017822:	fb05 3707 	mla	r7, r5, r7, r3
 8017826:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017828:	fa1f fc82 	uxth.w	ip, r2
 801782c:	eb03 0a07 	add.w	sl, r3, r7
 8017830:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8017834:	f813 9007 	ldrb.w	r9, [r3, r7]
 8017838:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801783c:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8017840:	b29b      	uxth	r3, r3
 8017842:	2800      	cmp	r0, #0
 8017844:	f000 8132 	beq.w	8017aac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x77c>
 8017848:	f81a 4005 	ldrb.w	r4, [sl, r5]
 801784c:	940d      	str	r4, [sp, #52]	; 0x34
 801784e:	eb0a 0b05 	add.w	fp, sl, r5
 8017852:	fa1f fa80 	uxth.w	sl, r0
 8017856:	fb0a fc0c 	mul.w	ip, sl, ip
 801785a:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801785e:	fa1f fa8a 	uxth.w	sl, sl
 8017862:	eba1 010c 	sub.w	r1, r1, ip
 8017866:	eba3 030a 	sub.w	r3, r3, sl
 801786a:	b289      	uxth	r1, r1
 801786c:	fb08 f101 	mul.w	r1, r8, r1
 8017870:	b29b      	uxth	r3, r3
 8017872:	fb09 1303 	mla	r3, r9, r3, r1
 8017876:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017878:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801787c:	940e      	str	r4, [sp, #56]	; 0x38
 801787e:	fb0a 3301 	mla	r3, sl, r1, r3
 8017882:	fb0c 3304 	mla	r3, ip, r4, r3
 8017886:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801788a:	2b00      	cmp	r3, #0
 801788c:	f000 8100 	beq.w	8017a90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8017890:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017892:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017894:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017898:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 801789c:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80178a0:	f000 8109 	beq.w	8017ab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x786>
 80178a4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80178a8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80178ac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80178b0:	fb09 f707 	mul.w	r7, r9, r7
 80178b4:	fb0a fc0c 	mul.w	ip, sl, ip
 80178b8:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80178bc:	f107 0b20 	add.w	fp, r7, #32
 80178c0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80178c4:	44cc      	add	ip, r9
 80178c6:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80178ca:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80178ce:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80178d2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80178d6:	ea4c 0909 	orr.w	r9, ip, r9
 80178da:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80178de:	884f      	ldrh	r7, [r1, #2]
 80178e0:	d019      	beq.n	8017916 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e6>
 80178e2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80178e6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80178ea:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80178ee:	fb08 f807 	mul.w	r8, r8, r7
 80178f2:	fb0a fc0c 	mul.w	ip, sl, ip
 80178f6:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80178fa:	f108 0b20 	add.w	fp, r8, #32
 80178fe:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017902:	44bc      	add	ip, r7
 8017904:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8017908:	0a3f      	lsrs	r7, r7, #8
 801790a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801790e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017912:	ea4c 0707 	orr.w	r7, ip, r7
 8017916:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801791a:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801791e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017922:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017926:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801792a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801792e:	ea4c 0909 	orr.w	r9, ip, r9
 8017932:	ea4a 0707 	orr.w	r7, sl, r7
 8017936:	2800      	cmp	r0, #0
 8017938:	f000 80bf 	beq.w	8017aba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78a>
 801793c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801793e:	eb01 0c04 	add.w	ip, r1, r4
 8017942:	f831 8004 	ldrh.w	r8, [r1, r4]
 8017946:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017948:	29ff      	cmp	r1, #255	; 0xff
 801794a:	d01a      	beq.n	8017982 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x652>
 801794c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801794e:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8017952:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017956:	fb04 fb08 	mul.w	fp, r4, r8
 801795a:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801795e:	fb0a fa01 	mul.w	sl, sl, r1
 8017962:	f10b 0120 	add.w	r1, fp, #32
 8017966:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 801796a:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 801796e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017972:	44d0      	add	r8, sl
 8017974:	0a09      	lsrs	r1, r1, #8
 8017976:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 801797a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801797e:	ea48 0801 	orr.w	r8, r8, r1
 8017982:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017984:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8017988:	2cff      	cmp	r4, #255	; 0xff
 801798a:	d01a      	beq.n	80179c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x692>
 801798c:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8017990:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017994:	fb04 fb01 	mul.w	fp, r4, r1
 8017998:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801799c:	fb0a fa0c 	mul.w	sl, sl, ip
 80179a0:	f10b 0c20 	add.w	ip, fp, #32
 80179a4:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 80179a8:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 80179ac:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80179b0:	4451      	add	r1, sl
 80179b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80179b6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80179ba:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80179be:	ea41 010c 	orr.w	r1, r1, ip
 80179c2:	fb10 fc02 	smulbb	ip, r0, r2
 80179c6:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80179ca:	f1c0 0a10 	rsb	sl, r0, #16
 80179ce:	ebaa 0a02 	sub.w	sl, sl, r2
 80179d2:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 80179d6:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80179da:	437a      	muls	r2, r7
 80179dc:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 80179e0:	040f      	lsls	r7, r1, #16
 80179e2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80179e6:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80179ea:	fb09 220a 	mla	r2, r9, sl, r2
 80179ee:	ea4b 0808 	orr.w	r8, fp, r8
 80179f2:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 80179f6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80179fa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80179fe:	fb00 2208 	mla	r2, r0, r8, r2
 8017a02:	4339      	orrs	r1, r7
 8017a04:	fb0c 2201 	mla	r2, ip, r1, r2
 8017a08:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8017a0c:	0952      	lsrs	r2, r2, #5
 8017a0e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017a12:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017a16:	ea49 0202 	orr.w	r2, r9, r2
 8017a1a:	2bff      	cmp	r3, #255	; 0xff
 8017a1c:	b292      	uxth	r2, r2
 8017a1e:	d05d      	beq.n	8017adc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ac>
 8017a20:	f8be 8000 	ldrh.w	r8, [lr]
 8017a24:	4c31      	ldr	r4, [pc, #196]	; (8017aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7bc>)
 8017a26:	43db      	mvns	r3, r3
 8017a28:	ea4f 2028 	mov.w	r0, r8, asr #8
 8017a2c:	fa5f fc83 	uxtb.w	ip, r3
 8017a30:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017a34:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8017a38:	fb00 f00c 	mul.w	r0, r0, ip
 8017a3c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017a40:	fb07 f10c 	mul.w	r1, r7, ip
 8017a44:	1c47      	adds	r7, r0, #1
 8017a46:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8017a4a:	1217      	asrs	r7, r2, #8
 8017a4c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017a50:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8017a54:	1c4f      	adds	r7, r1, #1
 8017a56:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8017a5a:	10d1      	asrs	r1, r2, #3
 8017a5c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017a60:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8017a64:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8017a68:	b2db      	uxtb	r3, r3
 8017a6a:	00c9      	lsls	r1, r1, #3
 8017a6c:	fb03 f30c 	mul.w	r3, r3, ip
 8017a70:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017a74:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8017a78:	4308      	orrs	r0, r1
 8017a7a:	00d2      	lsls	r2, r2, #3
 8017a7c:	1c59      	adds	r1, r3, #1
 8017a7e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8017a82:	b2d2      	uxtb	r2, r2
 8017a84:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8017a88:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8017a8c:	f8ae 0000 	strh.w	r0, [lr]
 8017a90:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017a92:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017a94:	4413      	add	r3, r2
 8017a96:	9327      	str	r3, [sp, #156]	; 0x9c
 8017a98:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017a9a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017a9c:	441a      	add	r2, r3
 8017a9e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017aa0:	9228      	str	r2, [sp, #160]	; 0xa0
 8017aa2:	3b01      	subs	r3, #1
 8017aa4:	f10e 0e02 	add.w	lr, lr, #2
 8017aa8:	9311      	str	r3, [sp, #68]	; 0x44
 8017aaa:	e4a5      	b.n	80173f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8017aac:	fb08 f101 	mul.w	r1, r8, r1
 8017ab0:	fb09 1303 	mla	r3, r9, r3, r1
 8017ab4:	e6e7      	b.n	8017886 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x556>
 8017ab6:	46b9      	mov	r9, r7
 8017ab8:	e70f      	b.n	80178da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5aa>
 8017aba:	f1c2 0110 	rsb	r1, r2, #16
 8017abe:	437a      	muls	r2, r7
 8017ac0:	fb09 2901 	mla	r9, r9, r1, r2
 8017ac4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017ac8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017acc:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017ad0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017ad4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017ad8:	4302      	orrs	r2, r0
 8017ada:	e79e      	b.n	8017a1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6ea>
 8017adc:	f8ae 2000 	strh.w	r2, [lr]
 8017ae0:	e7d6      	b.n	8017a90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8017ae2:	b015      	add	sp, #84	; 0x54
 8017ae4:	ecbd 8b08 	vpop	{d8-d11}
 8017ae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017aec:	fffff800 	.word	0xfffff800

08017af0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8017af0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017af4:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8017af8:	fb0c 4e03 	mla	lr, ip, r3, r4
 8017afc:	f1bc 0f00 	cmp.w	ip, #0
 8017b00:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8017b04:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8017b08:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8017b0c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8017b10:	8808      	ldrh	r0, [r1, #0]
 8017b12:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8017b16:	db2f      	blt.n	8017b78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8017b18:	45e2      	cmp	sl, ip
 8017b1a:	dd2d      	ble.n	8017b78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8017b1c:	2c00      	cmp	r4, #0
 8017b1e:	db29      	blt.n	8017b74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8017b20:	42a3      	cmp	r3, r4
 8017b22:	dd27      	ble.n	8017b74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8017b24:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8017b28:	1c62      	adds	r2, r4, #1
 8017b2a:	d428      	bmi.n	8017b7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017b2c:	4293      	cmp	r3, r2
 8017b2e:	dd26      	ble.n	8017b7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017b30:	b32f      	cbz	r7, 8017b7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017b32:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8017b36:	f11c 0c01 	adds.w	ip, ip, #1
 8017b3a:	d424      	bmi.n	8017b86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8017b3c:	45e2      	cmp	sl, ip
 8017b3e:	dd22      	ble.n	8017b86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8017b40:	2e00      	cmp	r6, #0
 8017b42:	f000 809c 	beq.w	8017c7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 8017b46:	2c00      	cmp	r4, #0
 8017b48:	db1b      	blt.n	8017b82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8017b4a:	42a3      	cmp	r3, r4
 8017b4c:	dd19      	ble.n	8017b82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8017b4e:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8017b52:	3401      	adds	r4, #1
 8017b54:	d41a      	bmi.n	8017b8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8017b56:	42a3      	cmp	r3, r4
 8017b58:	dd18      	ble.n	8017b8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8017b5a:	b1cf      	cbz	r7, 8017b90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8017b5c:	3301      	adds	r3, #1
 8017b5e:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8017b62:	2f0f      	cmp	r7, #15
 8017b64:	d915      	bls.n	8017b92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8017b66:	4b49      	ldr	r3, [pc, #292]	; (8017c8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8017b68:	4a49      	ldr	r2, [pc, #292]	; (8017c90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8017b6a:	484a      	ldr	r0, [pc, #296]	; (8017c94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8017b6c:	f240 3155 	movw	r1, #853	; 0x355
 8017b70:	f002 ff38 	bl	801a9e4 <__assert_func>
 8017b74:	4681      	mov	r9, r0
 8017b76:	e7d7      	b.n	8017b28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8017b78:	4686      	mov	lr, r0
 8017b7a:	4681      	mov	r9, r0
 8017b7c:	e7db      	b.n	8017b36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8017b7e:	4686      	mov	lr, r0
 8017b80:	e7d9      	b.n	8017b36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8017b82:	4684      	mov	ip, r0
 8017b84:	e7e5      	b.n	8017b52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8017b86:	4603      	mov	r3, r0
 8017b88:	4684      	mov	ip, r0
 8017b8a:	e7ea      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8017b8c:	4603      	mov	r3, r0
 8017b8e:	e7e8      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8017b90:	4603      	mov	r3, r0
 8017b92:	2e0f      	cmp	r6, #15
 8017b94:	d8e7      	bhi.n	8017b66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8017b96:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8017b9a:	fb17 f806 	smulbb	r8, r7, r6
 8017b9e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8017ba2:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8017ba6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017baa:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8017bae:	ea44 0909 	orr.w	r9, r4, r9
 8017bb2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017bb6:	f1c6 0410 	rsb	r4, r6, #16
 8017bba:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017bbe:	1be4      	subs	r4, r4, r7
 8017bc0:	041a      	lsls	r2, r3, #16
 8017bc2:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8017bc6:	ea4a 0e0e 	orr.w	lr, sl, lr
 8017bca:	fb07 fe0e 	mul.w	lr, r7, lr
 8017bce:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017bd2:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8017bd6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017bda:	fb04 e409 	mla	r4, r4, r9, lr
 8017bde:	4313      	orrs	r3, r2
 8017be0:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8017be4:	fb08 4303 	mla	r3, r8, r3, r4
 8017be8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017bec:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8017bf0:	4322      	orrs	r2, r4
 8017bf2:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8017bf6:	fb06 3202 	mla	r2, r6, r2, r3
 8017bfa:	0d53      	lsrs	r3, r2, #21
 8017bfc:	0952      	lsrs	r2, r2, #5
 8017bfe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017c02:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017c06:	431a      	orrs	r2, r3
 8017c08:	b293      	uxth	r3, r2
 8017c0a:	b2af      	uxth	r7, r5
 8017c0c:	1202      	asrs	r2, r0, #8
 8017c0e:	43ed      	mvns	r5, r5
 8017c10:	b2ed      	uxtb	r5, r5
 8017c12:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017c16:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017c1a:	fb12 f205 	smulbb	r2, r2, r5
 8017c1e:	10c6      	asrs	r6, r0, #3
 8017c20:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017c24:	fb0c 2c07 	mla	ip, ip, r7, r2
 8017c28:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017c2c:	10da      	asrs	r2, r3, #3
 8017c2e:	fb16 f605 	smulbb	r6, r6, r5
 8017c32:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017c36:	fb02 6207 	mla	r2, r2, r7, r6
 8017c3a:	b296      	uxth	r6, r2
 8017c3c:	00c2      	lsls	r2, r0, #3
 8017c3e:	00dc      	lsls	r4, r3, #3
 8017c40:	b2d2      	uxtb	r2, r2
 8017c42:	b2e4      	uxtb	r4, r4
 8017c44:	fb12 f205 	smulbb	r2, r2, r5
 8017c48:	fb04 2207 	mla	r2, r4, r7, r2
 8017c4c:	fa1f fc8c 	uxth.w	ip, ip
 8017c50:	b292      	uxth	r2, r2
 8017c52:	f10c 0301 	add.w	r3, ip, #1
 8017c56:	1c50      	adds	r0, r2, #1
 8017c58:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8017c5c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8017c60:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017c64:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017c68:	4313      	orrs	r3, r2
 8017c6a:	1c72      	adds	r2, r6, #1
 8017c6c:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8017c70:	0952      	lsrs	r2, r2, #5
 8017c72:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017c76:	4313      	orrs	r3, r2
 8017c78:	800b      	strh	r3, [r1, #0]
 8017c7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017c7e:	2f0f      	cmp	r7, #15
 8017c80:	f63f af71 	bhi.w	8017b66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8017c84:	4603      	mov	r3, r0
 8017c86:	4684      	mov	ip, r0
 8017c88:	e785      	b.n	8017b96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8017c8a:	bf00      	nop
 8017c8c:	0801e61b 	.word	0x0801e61b
 8017c90:	0801ec22 	.word	0x0801ec22
 8017c94:	0801e6a3 	.word	0x0801e6a3

08017c98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017c98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c9c:	ed2d 8b08 	vpush	{d8-d11}
 8017ca0:	b095      	sub	sp, #84	; 0x54
 8017ca2:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8017ca6:	9306      	str	r3, [sp, #24]
 8017ca8:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8017cac:	9212      	str	r2, [sp, #72]	; 0x48
 8017cae:	9307      	str	r3, [sp, #28]
 8017cb0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017cb2:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8017cb6:	930c      	str	r3, [sp, #48]	; 0x30
 8017cb8:	910b      	str	r1, [sp, #44]	; 0x2c
 8017cba:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8017cbe:	9013      	str	r0, [sp, #76]	; 0x4c
 8017cc0:	6850      	ldr	r0, [r2, #4]
 8017cc2:	6812      	ldr	r2, [r2, #0]
 8017cc4:	f9bd 70b8 	ldrsh.w	r7, [sp, #184]	; 0xb8
 8017cc8:	fb00 1303 	mla	r3, r0, r3, r1
 8017ccc:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8017cd0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017cd2:	681b      	ldr	r3, [r3, #0]
 8017cd4:	9309      	str	r3, [sp, #36]	; 0x24
 8017cd6:	007b      	lsls	r3, r7, #1
 8017cd8:	930a      	str	r3, [sp, #40]	; 0x28
 8017cda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017cdc:	43db      	mvns	r3, r3
 8017cde:	b2db      	uxtb	r3, r3
 8017ce0:	eeb0 aa40 	vmov.f32	s20, s0
 8017ce4:	eef0 9a60 	vmov.f32	s19, s1
 8017ce8:	eeb0 9a41 	vmov.f32	s18, s2
 8017cec:	eeb0 8a62 	vmov.f32	s16, s5
 8017cf0:	eef0 8a43 	vmov.f32	s17, s6
 8017cf4:	eef0 ba44 	vmov.f32	s23, s8
 8017cf8:	eeb0 ba64 	vmov.f32	s22, s9
 8017cfc:	eef0 aa45 	vmov.f32	s21, s10
 8017d00:	9308      	str	r3, [sp, #32]
 8017d02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017d04:	2b00      	cmp	r3, #0
 8017d06:	dc03      	bgt.n	8017d10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8017d08:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017d0a:	2b00      	cmp	r3, #0
 8017d0c:	f340 81f3 	ble.w	80180f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8017d10:	9b06      	ldr	r3, [sp, #24]
 8017d12:	2b00      	cmp	r3, #0
 8017d14:	f340 80fa 	ble.w	8017f0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8017d18:	1422      	asrs	r2, r4, #16
 8017d1a:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017d1e:	d42b      	bmi.n	8017d78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8017d20:	1c51      	adds	r1, r2, #1
 8017d22:	428f      	cmp	r7, r1
 8017d24:	dd2b      	ble.n	8017d7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017d26:	2b00      	cmp	r3, #0
 8017d28:	db29      	blt.n	8017d7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017d2a:	9807      	ldr	r0, [sp, #28]
 8017d2c:	1c59      	adds	r1, r3, #1
 8017d2e:	4288      	cmp	r0, r1
 8017d30:	dd25      	ble.n	8017d7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017d32:	9b06      	ldr	r3, [sp, #24]
 8017d34:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017d36:	3b01      	subs	r3, #1
 8017d38:	fb02 4203 	mla	r2, r2, r3, r4
 8017d3c:	1412      	asrs	r2, r2, #16
 8017d3e:	d428      	bmi.n	8017d92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017d40:	3201      	adds	r2, #1
 8017d42:	4297      	cmp	r7, r2
 8017d44:	dd25      	ble.n	8017d92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017d46:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017d48:	fb02 6303 	mla	r3, r2, r3, r6
 8017d4c:	141b      	asrs	r3, r3, #16
 8017d4e:	d420      	bmi.n	8017d92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017d50:	9a07      	ldr	r2, [sp, #28]
 8017d52:	3301      	adds	r3, #1
 8017d54:	429a      	cmp	r2, r3
 8017d56:	dd1c      	ble.n	8017d92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017d58:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8017d5c:	f8bd a030 	ldrh.w	sl, [sp, #48]	; 0x30
 8017d60:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8017d64:	f1b8 0f00 	cmp.w	r8, #0
 8017d68:	f300 8129 	bgt.w	8017fbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x326>
 8017d6c:	9b06      	ldr	r3, [sp, #24]
 8017d6e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8017d72:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8017d76:	e0cb      	b.n	8017f10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x278>
 8017d78:	1c51      	adds	r1, r2, #1
 8017d7a:	f040 80bd 	bne.w	8017ef8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017d7e:	42ba      	cmp	r2, r7
 8017d80:	f280 80ba 	bge.w	8017ef8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017d84:	1c5a      	adds	r2, r3, #1
 8017d86:	f2c0 80b7 	blt.w	8017ef8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017d8a:	9a07      	ldr	r2, [sp, #28]
 8017d8c:	4293      	cmp	r3, r2
 8017d8e:	f280 80b3 	bge.w	8017ef8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017d92:	f8dd b018 	ldr.w	fp, [sp, #24]
 8017d96:	46c8      	mov	r8, r9
 8017d98:	f1bb 0f00 	cmp.w	fp, #0
 8017d9c:	dde6      	ble.n	8017d6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8017d9e:	1421      	asrs	r1, r4, #16
 8017da0:	ea4f 4226 	mov.w	r2, r6, asr #16
 8017da4:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8017da8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8017dac:	f100 80ef 	bmi.w	8017f8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8017db0:	f101 0c01 	add.w	ip, r1, #1
 8017db4:	4567      	cmp	r7, ip
 8017db6:	f340 80ec 	ble.w	8017f92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8017dba:	2a00      	cmp	r2, #0
 8017dbc:	f2c0 80e9 	blt.w	8017f92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8017dc0:	9d07      	ldr	r5, [sp, #28]
 8017dc2:	f102 0c01 	add.w	ip, r2, #1
 8017dc6:	4565      	cmp	r5, ip
 8017dc8:	f340 80e3 	ble.w	8017f92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8017dcc:	fb02 1207 	mla	r2, r2, r7, r1
 8017dd0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017dd2:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8017dd6:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8017dda:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8017dde:	b138      	cbz	r0, 8017df0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x158>
 8017de0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017de2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8017de4:	4472      	add	r2, lr
 8017de6:	f83e 5005 	ldrh.w	r5, [lr, r5]
 8017dea:	8852      	ldrh	r2, [r2, #2]
 8017dec:	950e      	str	r5, [sp, #56]	; 0x38
 8017dee:	920f      	str	r2, [sp, #60]	; 0x3c
 8017df0:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8017df4:	fb13 f200 	smulbb	r2, r3, r0
 8017df8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017dfc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017e00:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017e04:	10d2      	asrs	r2, r2, #3
 8017e06:	ea4e 0c0c 	orr.w	ip, lr, ip
 8017e0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017e0e:	f1c0 0e10 	rsb	lr, r0, #16
 8017e12:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017e16:	ebae 0e03 	sub.w	lr, lr, r3
 8017e1a:	ea4a 0101 	orr.w	r1, sl, r1
 8017e1e:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8017e22:	4359      	muls	r1, r3
 8017e24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017e26:	9d08      	ldr	r5, [sp, #32]
 8017e28:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8017e2c:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8017e30:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017e34:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017e38:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017e3c:	ea4c 0c03 	orr.w	ip, ip, r3
 8017e40:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017e42:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017e44:	041b      	lsls	r3, r3, #16
 8017e46:	fb02 ec0c 	mla	ip, r2, ip, lr
 8017e4a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8017e4e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017e52:	ea43 030e 	orr.w	r3, r3, lr
 8017e56:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8017e5a:	fb02 c203 	mla	r2, r2, r3, ip
 8017e5e:	0d53      	lsrs	r3, r2, #21
 8017e60:	0952      	lsrs	r2, r2, #5
 8017e62:	f8b8 c000 	ldrh.w	ip, [r8]
 8017e66:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017e6a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017e6e:	431a      	orrs	r2, r3
 8017e70:	b292      	uxth	r2, r2
 8017e72:	ea4f 212c 	mov.w	r1, ip, asr #8
 8017e76:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8017e7a:	1210      	asrs	r0, r2, #8
 8017e7c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017e80:	fb11 f105 	smulbb	r1, r1, r5
 8017e84:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8017e88:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017e8c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017e90:	fb00 1003 	mla	r0, r0, r3, r1
 8017e94:	fa5f fc8c 	uxtb.w	ip, ip
 8017e98:	10d1      	asrs	r1, r2, #3
 8017e9a:	00d2      	lsls	r2, r2, #3
 8017e9c:	fb1c fc05 	smulbb	ip, ip, r5
 8017ea0:	b2d2      	uxtb	r2, r2
 8017ea2:	fb02 c203 	mla	r2, r2, r3, ip
 8017ea6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8017eaa:	b280      	uxth	r0, r0
 8017eac:	b292      	uxth	r2, r2
 8017eae:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017eb2:	fb1e fe05 	smulbb	lr, lr, r5
 8017eb6:	fb01 e103 	mla	r1, r1, r3, lr
 8017eba:	f102 0c01 	add.w	ip, r2, #1
 8017ebe:	1c43      	adds	r3, r0, #1
 8017ec0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017ec4:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8017ec8:	b289      	uxth	r1, r1
 8017eca:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017ece:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017ed2:	4313      	orrs	r3, r2
 8017ed4:	1c4a      	adds	r2, r1, #1
 8017ed6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017eda:	0949      	lsrs	r1, r1, #5
 8017edc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017ee0:	430b      	orrs	r3, r1
 8017ee2:	f8a8 3000 	strh.w	r3, [r8]
 8017ee6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017ee8:	441c      	add	r4, r3
 8017eea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017eec:	f108 0802 	add.w	r8, r8, #2
 8017ef0:	441e      	add	r6, r3
 8017ef2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8017ef6:	e74f      	b.n	8017d98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8017ef8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017efa:	441c      	add	r4, r3
 8017efc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017efe:	441e      	add	r6, r3
 8017f00:	9b06      	ldr	r3, [sp, #24]
 8017f02:	3b01      	subs	r3, #1
 8017f04:	9306      	str	r3, [sp, #24]
 8017f06:	f109 0902 	add.w	r9, r9, #2
 8017f0a:	e701      	b.n	8017d10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8017f0c:	f47f af11 	bne.w	8017d32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8017f10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017f12:	2b00      	cmp	r3, #0
 8017f14:	f340 80ef 	ble.w	80180f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8017f18:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017f1c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017f20:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017f24:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017f26:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017f2a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017f2e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017f32:	eef0 6a48 	vmov.f32	s13, s16
 8017f36:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017f3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017f3e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017f42:	ee16 4a90 	vmov	r4, s13
 8017f46:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017f4a:	eef0 6a68 	vmov.f32	s13, s17
 8017f4e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017f52:	ee18 2a10 	vmov	r2, s16
 8017f56:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017f5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8017f5e:	ee18 2a90 	vmov	r2, s17
 8017f62:	9329      	str	r3, [sp, #164]	; 0xa4
 8017f64:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017f66:	fb92 f3f3 	sdiv	r3, r2, r3
 8017f6a:	932a      	str	r3, [sp, #168]	; 0xa8
 8017f6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017f6e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017f70:	3b01      	subs	r3, #1
 8017f72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017f76:	930b      	str	r3, [sp, #44]	; 0x2c
 8017f78:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017f7a:	bf08      	it	eq
 8017f7c:	4613      	moveq	r3, r2
 8017f7e:	ee16 6a90 	vmov	r6, s13
 8017f82:	9306      	str	r3, [sp, #24]
 8017f84:	eef0 8a67 	vmov.f32	s17, s15
 8017f88:	eeb0 8a47 	vmov.f32	s16, s14
 8017f8c:	e6b9      	b.n	8017d02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8017f8e:	1c4d      	adds	r5, r1, #1
 8017f90:	d1a9      	bne.n	8017ee6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017f92:	428f      	cmp	r7, r1
 8017f94:	dda7      	ble.n	8017ee6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017f96:	1c55      	adds	r5, r2, #1
 8017f98:	dba5      	blt.n	8017ee6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017f9a:	9d07      	ldr	r5, [sp, #28]
 8017f9c:	4295      	cmp	r5, r2
 8017f9e:	dda2      	ble.n	8017ee6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017fa0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017fa2:	9101      	str	r1, [sp, #4]
 8017fa4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8017fa8:	9b07      	ldr	r3, [sp, #28]
 8017faa:	9300      	str	r3, [sp, #0]
 8017fac:	e9cd 0504 	strd	r0, r5, [sp, #16]
 8017fb0:	463b      	mov	r3, r7
 8017fb2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017fb4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017fb6:	4641      	mov	r1, r8
 8017fb8:	f7ff fd9a 	bl	8017af0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8017fbc:	e793      	b.n	8017ee6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017fbe:	1422      	asrs	r2, r4, #16
 8017fc0:	1431      	asrs	r1, r6, #16
 8017fc2:	fb07 2101 	mla	r1, r7, r1, r2
 8017fc6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017fc8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017fca:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8017fce:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8017fd2:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8017fd6:	8851      	ldrh	r1, [r2, #2]
 8017fd8:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8017fdc:	f1be 0f00 	cmp.w	lr, #0
 8017fe0:	d006      	beq.n	8017ff0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 8017fe2:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017fe4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8017fe6:	1810      	adds	r0, r2, r0
 8017fe8:	5b52      	ldrh	r2, [r2, r5]
 8017fea:	9210      	str	r2, [sp, #64]	; 0x40
 8017fec:	8842      	ldrh	r2, [r0, #2]
 8017fee:	9211      	str	r2, [sp, #68]	; 0x44
 8017ff0:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8017ff4:	fb13 f20e 	smulbb	r2, r3, lr
 8017ff8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017ffc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018000:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018004:	10d2      	asrs	r2, r2, #3
 8018006:	ea40 000c 	orr.w	r0, r0, ip
 801800a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801800e:	f1ce 0c10 	rsb	ip, lr, #16
 8018012:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018016:	ebac 0c03 	sub.w	ip, ip, r3
 801801a:	ea4b 0101 	orr.w	r1, fp, r1
 801801e:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8018022:	4359      	muls	r1, r3
 8018024:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018026:	9d08      	ldr	r5, [sp, #32]
 8018028:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801802c:	fb0c 1c00 	mla	ip, ip, r0, r1
 8018030:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8018034:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8018038:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801803a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801803e:	ea4b 0000 	orr.w	r0, fp, r0
 8018042:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8018046:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801804a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801804e:	fb02 c000 	mla	r0, r2, r0, ip
 8018052:	ea4b 0b03 	orr.w	fp, fp, r3
 8018056:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 801805a:	fb02 0b0b 	mla	fp, r2, fp, r0
 801805e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018060:	ea4f 515b 	mov.w	r1, fp, lsr #21
 8018064:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018068:	8812      	ldrh	r2, [r2, #0]
 801806a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801806e:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8018072:	ea41 0b0b 	orr.w	fp, r1, fp
 8018076:	fa1f f38b 	uxth.w	r3, fp
 801807a:	1211      	asrs	r1, r2, #8
 801807c:	1218      	asrs	r0, r3, #8
 801807e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018082:	fb11 f105 	smulbb	r1, r1, r5
 8018086:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801808a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801808e:	00d2      	lsls	r2, r2, #3
 8018090:	fb00 100a 	mla	r0, r0, sl, r1
 8018094:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018098:	10d9      	asrs	r1, r3, #3
 801809a:	b2d2      	uxtb	r2, r2
 801809c:	00db      	lsls	r3, r3, #3
 801809e:	fb1c fc05 	smulbb	ip, ip, r5
 80180a2:	fb12 f205 	smulbb	r2, r2, r5
 80180a6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80180aa:	b2db      	uxtb	r3, r3
 80180ac:	b280      	uxth	r0, r0
 80180ae:	fb01 c10a 	mla	r1, r1, sl, ip
 80180b2:	fb03 230a 	mla	r3, r3, sl, r2
 80180b6:	b29b      	uxth	r3, r3
 80180b8:	b289      	uxth	r1, r1
 80180ba:	1c42      	adds	r2, r0, #1
 80180bc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80180c0:	f101 0c01 	add.w	ip, r1, #1
 80180c4:	1c5a      	adds	r2, r3, #1
 80180c6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80180ca:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 80180ce:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80180d2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80180d6:	0949      	lsrs	r1, r1, #5
 80180d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80180da:	4310      	orrs	r0, r2
 80180dc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80180e0:	4308      	orrs	r0, r1
 80180e2:	f823 0b02 	strh.w	r0, [r3], #2
 80180e6:	930d      	str	r3, [sp, #52]	; 0x34
 80180e8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80180ea:	441c      	add	r4, r3
 80180ec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80180ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80180f2:	441e      	add	r6, r3
 80180f4:	e636      	b.n	8017d64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 80180f6:	b015      	add	sp, #84	; 0x54
 80180f8:	ecbd 8b08 	vpop	{d8-d11}
 80180fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018100 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8018100:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018104:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8018108:	fb06 5c03 	mla	ip, r6, r3, r5
 801810c:	2e00      	cmp	r6, #0
 801810e:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8018112:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8018116:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 801811a:	8808      	ldrh	r0, [r1, #0]
 801811c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8018120:	db2e      	blt.n	8018180 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8018122:	45b0      	cmp	r8, r6
 8018124:	dd2c      	ble.n	8018180 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8018126:	2d00      	cmp	r5, #0
 8018128:	db28      	blt.n	801817c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801812a:	42ab      	cmp	r3, r5
 801812c:	dd26      	ble.n	801817c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801812e:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8018132:	1c6a      	adds	r2, r5, #1
 8018134:	d427      	bmi.n	8018186 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8018136:	4293      	cmp	r3, r2
 8018138:	dd25      	ble.n	8018186 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801813a:	b324      	cbz	r4, 8018186 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801813c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8018140:	3601      	adds	r6, #1
 8018142:	d424      	bmi.n	801818e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8018144:	45b0      	cmp	r8, r6
 8018146:	dd22      	ble.n	801818e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8018148:	b31f      	cbz	r7, 8018192 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 801814a:	2d00      	cmp	r5, #0
 801814c:	db1d      	blt.n	801818a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801814e:	42ab      	cmp	r3, r5
 8018150:	dd1b      	ble.n	801818a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8018152:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8018156:	3501      	adds	r5, #1
 8018158:	d405      	bmi.n	8018166 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801815a:	42ab      	cmp	r3, r5
 801815c:	dd03      	ble.n	8018166 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801815e:	b124      	cbz	r4, 801816a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8018160:	3301      	adds	r3, #1
 8018162:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8018166:	2c0f      	cmp	r4, #15
 8018168:	d801      	bhi.n	801816e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801816a:	2f0f      	cmp	r7, #15
 801816c:	d914      	bls.n	8018198 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 801816e:	4b27      	ldr	r3, [pc, #156]	; (801820c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8018170:	4a27      	ldr	r2, [pc, #156]	; (8018210 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8018172:	4828      	ldr	r0, [pc, #160]	; (8018214 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8018174:	f240 3155 	movw	r1, #853	; 0x355
 8018178:	f002 fc34 	bl	801a9e4 <__assert_func>
 801817c:	4684      	mov	ip, r0
 801817e:	e7d8      	b.n	8018132 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8018180:	4602      	mov	r2, r0
 8018182:	4684      	mov	ip, r0
 8018184:	e7dc      	b.n	8018140 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8018186:	4602      	mov	r2, r0
 8018188:	e7da      	b.n	8018140 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801818a:	4606      	mov	r6, r0
 801818c:	e7e3      	b.n	8018156 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 801818e:	4606      	mov	r6, r0
 8018190:	e7e9      	b.n	8018166 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018192:	2c0f      	cmp	r4, #15
 8018194:	d8eb      	bhi.n	801816e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8018196:	4606      	mov	r6, r0
 8018198:	ea4f 450c 	mov.w	r5, ip, lsl #16
 801819c:	fb14 f307 	smulbb	r3, r4, r7
 80181a0:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 80181a4:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 80181a8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80181ac:	10db      	asrs	r3, r3, #3
 80181ae:	ea45 0c0c 	orr.w	ip, r5, ip
 80181b2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80181b6:	f1c7 0510 	rsb	r5, r7, #16
 80181ba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80181be:	1b2d      	subs	r5, r5, r4
 80181c0:	ea4e 0202 	orr.w	r2, lr, r2
 80181c4:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80181c8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80181cc:	4354      	muls	r4, r2
 80181ce:	fb05 450c 	mla	r5, r5, ip, r4
 80181d2:	0404      	lsls	r4, r0, #16
 80181d4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80181d8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80181dc:	4320      	orrs	r0, r4
 80181de:	fb03 5400 	mla	r4, r3, r0, r5
 80181e2:	0430      	lsls	r0, r6, #16
 80181e4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80181e8:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80181ec:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 80181f0:	4330      	orrs	r0, r6
 80181f2:	fb07 4000 	mla	r0, r7, r0, r4
 80181f6:	0d43      	lsrs	r3, r0, #21
 80181f8:	0940      	lsrs	r0, r0, #5
 80181fa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80181fe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018202:	4318      	orrs	r0, r3
 8018204:	8008      	strh	r0, [r1, #0]
 8018206:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801820a:	bf00      	nop
 801820c:	0801e61b 	.word	0x0801e61b
 8018210:	0801ec22 	.word	0x0801ec22
 8018214:	0801e6a3 	.word	0x0801e6a3

08018218 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801821c:	ed2d 8b0a 	vpush	{d8-d12}
 8018220:	b093      	sub	sp, #76	; 0x4c
 8018222:	461d      	mov	r5, r3
 8018224:	9210      	str	r2, [sp, #64]	; 0x40
 8018226:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018228:	f9bd 20bc 	ldrsh.w	r2, [sp, #188]	; 0xbc
 801822c:	9208      	str	r2, [sp, #32]
 801822e:	e9dd 272c 	ldrd	r2, r7, [sp, #176]	; 0xb0
 8018232:	910b      	str	r1, [sp, #44]	; 0x2c
 8018234:	6859      	ldr	r1, [r3, #4]
 8018236:	681b      	ldr	r3, [r3, #0]
 8018238:	f9bd 80b8 	ldrsh.w	r8, [sp, #184]	; 0xb8
 801823c:	9011      	str	r0, [sp, #68]	; 0x44
 801823e:	fb01 2707 	mla	r7, r1, r7, r2
 8018242:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8018246:	9307      	str	r3, [sp, #28]
 8018248:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801824a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801824e:	681b      	ldr	r3, [r3, #0]
 8018250:	9309      	str	r3, [sp, #36]	; 0x24
 8018252:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018256:	eeb0 aa40 	vmov.f32	s20, s0
 801825a:	eef0 9a60 	vmov.f32	s19, s1
 801825e:	eeb0 9a41 	vmov.f32	s18, s2
 8018262:	eeb0 8a62 	vmov.f32	s16, s5
 8018266:	eef0 8a43 	vmov.f32	s17, s6
 801826a:	eeb0 ca44 	vmov.f32	s24, s8
 801826e:	eef0 ba64 	vmov.f32	s23, s9
 8018272:	eeb0 ba45 	vmov.f32	s22, s10
 8018276:	930a      	str	r3, [sp, #40]	; 0x28
 8018278:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 801827c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801827e:	2b00      	cmp	r3, #0
 8018280:	dc03      	bgt.n	801828a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8018282:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018284:	2b00      	cmp	r3, #0
 8018286:	f340 816c 	ble.w	8018562 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 801828a:	2d00      	cmp	r5, #0
 801828c:	f340 80b6 	ble.w	80183fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8018290:	1422      	asrs	r2, r4, #16
 8018292:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018296:	d428      	bmi.n	80182ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd2>
 8018298:	1c51      	adds	r1, r2, #1
 801829a:	4588      	cmp	r8, r1
 801829c:	dd27      	ble.n	80182ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801829e:	2b00      	cmp	r3, #0
 80182a0:	db25      	blt.n	80182ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 80182a2:	9808      	ldr	r0, [sp, #32]
 80182a4:	1c59      	adds	r1, r3, #1
 80182a6:	4288      	cmp	r0, r1
 80182a8:	dd21      	ble.n	80182ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 80182aa:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80182ac:	1e6b      	subs	r3, r5, #1
 80182ae:	fb02 4203 	mla	r2, r2, r3, r4
 80182b2:	1412      	asrs	r2, r2, #16
 80182b4:	d422      	bmi.n	80182fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80182b6:	3201      	adds	r2, #1
 80182b8:	4590      	cmp	r8, r2
 80182ba:	dd1f      	ble.n	80182fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80182bc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80182be:	fb02 6303 	mla	r3, r2, r3, r6
 80182c2:	141b      	asrs	r3, r3, #16
 80182c4:	d41a      	bmi.n	80182fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80182c6:	9a08      	ldr	r2, [sp, #32]
 80182c8:	3301      	adds	r3, #1
 80182ca:	429a      	cmp	r2, r3
 80182cc:	dd16      	ble.n	80182fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80182ce:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80182d2:	46a9      	mov	r9, r5
 80182d4:	f1b9 0f00 	cmp.w	r9, #0
 80182d8:	f300 80e4 	bgt.w	80184a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 80182dc:	9b07      	ldr	r3, [sp, #28]
 80182de:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80182e2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80182e6:	9307      	str	r3, [sp, #28]
 80182e8:	e08a      	b.n	8018400 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 80182ea:	1c51      	adds	r1, r2, #1
 80182ec:	d17d      	bne.n	80183ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 80182ee:	4542      	cmp	r2, r8
 80182f0:	da7b      	bge.n	80183ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 80182f2:	1c5a      	adds	r2, r3, #1
 80182f4:	db79      	blt.n	80183ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 80182f6:	9a08      	ldr	r2, [sp, #32]
 80182f8:	4293      	cmp	r3, r2
 80182fa:	da76      	bge.n	80183ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 80182fc:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8018300:	46aa      	mov	sl, r5
 8018302:	f1ba 0f00 	cmp.w	sl, #0
 8018306:	dde9      	ble.n	80182dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8018308:	1421      	asrs	r1, r4, #16
 801830a:	ea4f 4226 	mov.w	r2, r6, asr #16
 801830e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018312:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018316:	f100 80b0 	bmi.w	801847a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x262>
 801831a:	f101 0c01 	add.w	ip, r1, #1
 801831e:	45e0      	cmp	r8, ip
 8018320:	f340 80ad 	ble.w	801847e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8018324:	2a00      	cmp	r2, #0
 8018326:	f2c0 80aa 	blt.w	801847e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 801832a:	9f08      	ldr	r7, [sp, #32]
 801832c:	f102 0c01 	add.w	ip, r2, #1
 8018330:	4567      	cmp	r7, ip
 8018332:	f340 80a4 	ble.w	801847e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8018336:	fb02 1208 	mla	r2, r2, r8, r1
 801833a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801833c:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8018340:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8018344:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8018348:	b138      	cbz	r0, 801835a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x142>
 801834a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801834c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801834e:	4472      	add	r2, lr
 8018350:	f83e 7007 	ldrh.w	r7, [lr, r7]
 8018354:	8852      	ldrh	r2, [r2, #2]
 8018356:	970c      	str	r7, [sp, #48]	; 0x30
 8018358:	920d      	str	r2, [sp, #52]	; 0x34
 801835a:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 801835e:	fb13 f200 	smulbb	r2, r3, r0
 8018362:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018366:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801836a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801836e:	10d2      	asrs	r2, r2, #3
 8018370:	ea4e 0c0c 	orr.w	ip, lr, ip
 8018374:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018378:	f1c0 0e10 	rsb	lr, r0, #16
 801837c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018380:	ebae 0e03 	sub.w	lr, lr, r3
 8018384:	ea4b 0101 	orr.w	r1, fp, r1
 8018388:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 801838c:	4359      	muls	r1, r3
 801838e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018390:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8018394:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8018398:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801839c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80183a0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80183a4:	ea4c 0c03 	orr.w	ip, ip, r3
 80183a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80183aa:	990c      	ldr	r1, [sp, #48]	; 0x30
 80183ac:	041b      	lsls	r3, r3, #16
 80183ae:	fb02 ec0c 	mla	ip, r2, ip, lr
 80183b2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80183b6:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80183ba:	ea43 030e 	orr.w	r3, r3, lr
 80183be:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80183c2:	fb02 c203 	mla	r2, r2, r3, ip
 80183c6:	0d53      	lsrs	r3, r2, #21
 80183c8:	0952      	lsrs	r2, r2, #5
 80183ca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80183ce:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80183d2:	431a      	orrs	r2, r3
 80183d4:	f8a9 2000 	strh.w	r2, [r9]
 80183d8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80183da:	441c      	add	r4, r3
 80183dc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80183de:	f109 0902 	add.w	r9, r9, #2
 80183e2:	441e      	add	r6, r3
 80183e4:	f10a 3aff 	add.w	sl, sl, #4294967295
 80183e8:	e78b      	b.n	8018302 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80183ea:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80183ec:	441c      	add	r4, r3
 80183ee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80183f0:	441e      	add	r6, r3
 80183f2:	9b07      	ldr	r3, [sp, #28]
 80183f4:	3302      	adds	r3, #2
 80183f6:	3d01      	subs	r5, #1
 80183f8:	9307      	str	r3, [sp, #28]
 80183fa:	e746      	b.n	801828a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 80183fc:	f47f af55 	bne.w	80182aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8018400:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018402:	2b00      	cmp	r3, #0
 8018404:	f340 80ad 	ble.w	8018562 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8018408:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801840c:	ee79 9aab 	vadd.f32	s19, s19, s23
 8018410:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8018414:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018416:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801841a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801841e:	eef0 6a48 	vmov.f32	s13, s16
 8018422:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018426:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801842a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801842e:	ee16 4a90 	vmov	r4, s13
 8018432:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018436:	eef0 6a68 	vmov.f32	s13, s17
 801843a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801843e:	ee18 2a10 	vmov	r2, s16
 8018442:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018446:	fb92 f3f3 	sdiv	r3, r2, r3
 801844a:	ee18 2a90 	vmov	r2, s17
 801844e:	9329      	str	r3, [sp, #164]	; 0xa4
 8018450:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018452:	fb92 f3f3 	sdiv	r3, r2, r3
 8018456:	932a      	str	r3, [sp, #168]	; 0xa8
 8018458:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801845a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801845c:	3b01      	subs	r3, #1
 801845e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018462:	930b      	str	r3, [sp, #44]	; 0x2c
 8018464:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018466:	ee16 6a90 	vmov	r6, s13
 801846a:	bf14      	ite	ne
 801846c:	461d      	movne	r5, r3
 801846e:	4615      	moveq	r5, r2
 8018470:	eef0 8a67 	vmov.f32	s17, s15
 8018474:	eeb0 8a47 	vmov.f32	s16, s14
 8018478:	e700      	b.n	801827c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 801847a:	1c4f      	adds	r7, r1, #1
 801847c:	d1ac      	bne.n	80183d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801847e:	4588      	cmp	r8, r1
 8018480:	ddaa      	ble.n	80183d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018482:	1c57      	adds	r7, r2, #1
 8018484:	dba8      	blt.n	80183d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018486:	9f08      	ldr	r7, [sp, #32]
 8018488:	4297      	cmp	r7, r2
 801848a:	dda5      	ble.n	80183d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801848c:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8018490:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8018494:	9700      	str	r7, [sp, #0]
 8018496:	4643      	mov	r3, r8
 8018498:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801849a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801849c:	4649      	mov	r1, r9
 801849e:	f7ff fe2f 	bl	8018100 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80184a2:	e799      	b.n	80183d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80184a4:	1422      	asrs	r2, r4, #16
 80184a6:	1431      	asrs	r1, r6, #16
 80184a8:	fb08 2101 	mla	r1, r8, r1, r2
 80184ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80184ae:	9809      	ldr	r0, [sp, #36]	; 0x24
 80184b0:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 80184b4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80184b8:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 80184bc:	8851      	ldrh	r1, [r2, #2]
 80184be:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80184c2:	f1be 0f00 	cmp.w	lr, #0
 80184c6:	d006      	beq.n	80184d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 80184c8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80184ca:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80184cc:	1810      	adds	r0, r2, r0
 80184ce:	5bd2      	ldrh	r2, [r2, r7]
 80184d0:	920e      	str	r2, [sp, #56]	; 0x38
 80184d2:	8842      	ldrh	r2, [r0, #2]
 80184d4:	920f      	str	r2, [sp, #60]	; 0x3c
 80184d6:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80184da:	fb13 f20e 	smulbb	r2, r3, lr
 80184de:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80184e2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80184e6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80184ea:	10d2      	asrs	r2, r2, #3
 80184ec:	ea40 000c 	orr.w	r0, r0, ip
 80184f0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80184f4:	f1ce 0c10 	rsb	ip, lr, #16
 80184f8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80184fc:	ebac 0c03 	sub.w	ip, ip, r3
 8018500:	ea4a 0101 	orr.w	r1, sl, r1
 8018504:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8018508:	4359      	muls	r1, r3
 801850a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801850c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018510:	fb0c 1c00 	mla	ip, ip, r0, r1
 8018514:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8018518:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 801851c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801851e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018520:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018524:	041b      	lsls	r3, r3, #16
 8018526:	ea4a 0000 	orr.w	r0, sl, r0
 801852a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801852e:	f421 6afc 	bic.w	sl, r1, #2016	; 0x7e0
 8018532:	fb02 c000 	mla	r0, r2, r0, ip
 8018536:	ea43 0a0a 	orr.w	sl, r3, sl
 801853a:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 801853e:	fb02 000a 	mla	r0, r2, sl, r0
 8018542:	0d43      	lsrs	r3, r0, #21
 8018544:	0940      	lsrs	r0, r0, #5
 8018546:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801854a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801854e:	4318      	orrs	r0, r3
 8018550:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018552:	f82b 0b02 	strh.w	r0, [fp], #2
 8018556:	441c      	add	r4, r3
 8018558:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801855a:	f109 39ff 	add.w	r9, r9, #4294967295
 801855e:	441e      	add	r6, r3
 8018560:	e6b8      	b.n	80182d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xbc>
 8018562:	b013      	add	sp, #76	; 0x4c
 8018564:	ecbd 8b0a 	vpop	{d8-d12}
 8018568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801856c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801856c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018570:	8808      	ldrh	r0, [r1, #0]
 8018572:	b085      	sub	sp, #20
 8018574:	1206      	asrs	r6, r0, #8
 8018576:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 801857a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801857e:	9600      	str	r6, [sp, #0]
 8018580:	10c6      	asrs	r6, r0, #3
 8018582:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018586:	9601      	str	r6, [sp, #4]
 8018588:	00c0      	lsls	r0, r0, #3
 801858a:	fb04 c603 	mla	r6, r4, r3, ip
 801858e:	b2c0      	uxtb	r0, r0
 8018590:	4691      	mov	r9, r2
 8018592:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8018596:	9a00      	ldr	r2, [sp, #0]
 8018598:	9002      	str	r0, [sp, #8]
 801859a:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 801859e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80185a2:	9a01      	ldr	r2, [sp, #4]
 80185a4:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 80185a8:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80185ac:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 80185b0:	2c00      	cmp	r4, #0
 80185b2:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80185b6:	db3a      	blt.n	801862e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 80185b8:	45a0      	cmp	r8, r4
 80185ba:	dd38      	ble.n	801862e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 80185bc:	f1bc 0f00 	cmp.w	ip, #0
 80185c0:	db33      	blt.n	801862a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 80185c2:	4563      	cmp	r3, ip
 80185c4:	dd31      	ble.n	801862a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 80185c6:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 80185ca:	f11c 0601 	adds.w	r6, ip, #1
 80185ce:	d431      	bmi.n	8018634 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 80185d0:	42b3      	cmp	r3, r6
 80185d2:	dd2f      	ble.n	8018634 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 80185d4:	b375      	cbz	r5, 8018634 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 80185d6:	f8de 6004 	ldr.w	r6, [lr, #4]
 80185da:	3401      	adds	r4, #1
 80185dc:	d42e      	bmi.n	801863c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 80185de:	45a0      	cmp	r8, r4
 80185e0:	dd2c      	ble.n	801863c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 80185e2:	b35f      	cbz	r7, 801863c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 80185e4:	f1bc 0f00 	cmp.w	ip, #0
 80185e8:	db26      	blt.n	8018638 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 80185ea:	4563      	cmp	r3, ip
 80185ec:	dd24      	ble.n	8018638 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 80185ee:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 80185f2:	f11c 0c01 	adds.w	ip, ip, #1
 80185f6:	d405      	bmi.n	8018604 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80185f8:	4563      	cmp	r3, ip
 80185fa:	dd03      	ble.n	8018604 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80185fc:	b115      	cbz	r5, 8018604 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80185fe:	3301      	adds	r3, #1
 8018600:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8018604:	2d0f      	cmp	r5, #15
 8018606:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801860a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801860e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018612:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8018616:	d801      	bhi.n	801861c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 8018618:	2f0f      	cmp	r7, #15
 801861a:	d911      	bls.n	8018640 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 801861c:	4b82      	ldr	r3, [pc, #520]	; (8018828 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 801861e:	4a83      	ldr	r2, [pc, #524]	; (801882c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c0>)
 8018620:	4883      	ldr	r0, [pc, #524]	; (8018830 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c4>)
 8018622:	f240 3173 	movw	r1, #883	; 0x373
 8018626:	f002 f9dd 	bl	801a9e4 <__assert_func>
 801862a:	4602      	mov	r2, r0
 801862c:	e7cd      	b.n	80185ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801862e:	4606      	mov	r6, r0
 8018630:	4602      	mov	r2, r0
 8018632:	e7d2      	b.n	80185da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8018634:	4606      	mov	r6, r0
 8018636:	e7d0      	b.n	80185da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8018638:	4604      	mov	r4, r0
 801863a:	e7da      	b.n	80185f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x86>
 801863c:	4604      	mov	r4, r0
 801863e:	e7e1      	b.n	8018604 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8018640:	b2ab      	uxth	r3, r5
 8018642:	b2bf      	uxth	r7, r7
 8018644:	fb03 fe07 	mul.w	lr, r3, r7
 8018648:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801864c:	011b      	lsls	r3, r3, #4
 801864e:	eba3 0c0e 	sub.w	ip, r3, lr
 8018652:	b2bf      	uxth	r7, r7
 8018654:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8018658:	fa1f fc8c 	uxth.w	ip, ip
 801865c:	1bed      	subs	r5, r5, r7
 801865e:	b2ad      	uxth	r5, r5
 8018660:	fb0c f30a 	mul.w	r3, ip, sl
 8018664:	fb05 330b 	mla	r3, r5, fp, r3
 8018668:	fb07 3309 	mla	r3, r7, r9, r3
 801866c:	fb0e 3308 	mla	r3, lr, r8, r3
 8018670:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018674:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018678:	9303      	str	r3, [sp, #12]
 801867a:	d018      	beq.n	80186ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 801867c:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8018680:	fb0b f303 	mul.w	r3, fp, r3
 8018684:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018688:	fb0b fb02 	mul.w	fp, fp, r2
 801868c:	0a1a      	lsrs	r2, r3, #8
 801868e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018692:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8018696:	441a      	add	r2, r3
 8018698:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 801869c:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 80186a0:	0a12      	lsrs	r2, r2, #8
 80186a2:	0a1b      	lsrs	r3, r3, #8
 80186a4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80186a8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80186ac:	431a      	orrs	r2, r3
 80186ae:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80186b2:	d019      	beq.n	80186e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 80186b4:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80186b8:	fb0a fb0b 	mul.w	fp, sl, fp
 80186bc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80186c0:	fb0a fa06 	mul.w	sl, sl, r6
 80186c4:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80186c8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80186cc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80186d0:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 80186d4:	445e      	add	r6, fp
 80186d6:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80186da:	0a36      	lsrs	r6, r6, #8
 80186dc:	0a1b      	lsrs	r3, r3, #8
 80186de:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80186e2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80186e6:	431e      	orrs	r6, r3
 80186e8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80186ec:	d019      	beq.n	8018722 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 80186ee:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80186f2:	fb09 fa0a 	mul.w	sl, r9, sl
 80186f6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80186fa:	fb09 f904 	mul.w	r9, r9, r4
 80186fe:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8018702:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018706:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801870a:	f509 7380 	add.w	r3, r9, #256	; 0x100
 801870e:	4454      	add	r4, sl
 8018710:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8018714:	0a24      	lsrs	r4, r4, #8
 8018716:	0a1b      	lsrs	r3, r3, #8
 8018718:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801871c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018720:	431c      	orrs	r4, r3
 8018722:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018726:	d019      	beq.n	801875c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 8018728:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 801872c:	fb08 f909 	mul.w	r9, r8, r9
 8018730:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018734:	fb08 f800 	mul.w	r8, r8, r0
 8018738:	ea4f 2019 	mov.w	r0, r9, lsr #8
 801873c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018740:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8018744:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8018748:	4448      	add	r0, r9
 801874a:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 801874e:	0a00      	lsrs	r0, r0, #8
 8018750:	0a1b      	lsrs	r3, r3, #8
 8018752:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018756:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801875a:	4318      	orrs	r0, r3
 801875c:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018760:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018764:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8018768:	fb0c f808 	mul.w	r8, ip, r8
 801876c:	fb0c f606 	mul.w	r6, ip, r6
 8018770:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018774:	fb05 6202 	mla	r2, r5, r2, r6
 8018778:	fb05 8803 	mla	r8, r5, r3, r8
 801877c:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8018780:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018784:	fb07 8803 	mla	r8, r7, r3, r8
 8018788:	fb07 2704 	mla	r7, r7, r4, r2
 801878c:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8018790:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018794:	fb0e 8303 	mla	r3, lr, r3, r8
 8018798:	fb0e 7e00 	mla	lr, lr, r0, r7
 801879c:	0a1b      	lsrs	r3, r3, #8
 801879e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80187a2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80187a6:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 80187aa:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80187ae:	ea43 0e0e 	orr.w	lr, r3, lr
 80187b2:	9b03      	ldr	r3, [sp, #12]
 80187b4:	b2a4      	uxth	r4, r4
 80187b6:	4363      	muls	r3, r4
 80187b8:	1c5a      	adds	r2, r3, #1
 80187ba:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80187be:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 80187c2:	9b00      	ldr	r3, [sp, #0]
 80187c4:	b2d2      	uxtb	r2, r2
 80187c6:	ea4f 451e 	mov.w	r5, lr, lsr #16
 80187ca:	fb13 f302 	smulbb	r3, r3, r2
 80187ce:	fb05 3304 	mla	r3, r5, r4, r3
 80187d2:	b29d      	uxth	r5, r3
 80187d4:	9b01      	ldr	r3, [sp, #4]
 80187d6:	f3ce 2007 	ubfx	r0, lr, #8, #8
 80187da:	fb13 f302 	smulbb	r3, r3, r2
 80187de:	fb00 3004 	mla	r0, r0, r4, r3
 80187e2:	9b02      	ldr	r3, [sp, #8]
 80187e4:	fa5f fe8e 	uxtb.w	lr, lr
 80187e8:	fb13 f202 	smulbb	r2, r3, r2
 80187ec:	fb0e 2e04 	mla	lr, lr, r4, r2
 80187f0:	fa1f fe8e 	uxth.w	lr, lr
 80187f4:	b280      	uxth	r0, r0
 80187f6:	f10e 0201 	add.w	r2, lr, #1
 80187fa:	1c6b      	adds	r3, r5, #1
 80187fc:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8018800:	1c42      	adds	r2, r0, #1
 8018802:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8018806:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801880a:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801880e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018812:	0952      	lsrs	r2, r2, #5
 8018814:	ea43 030e 	orr.w	r3, r3, lr
 8018818:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801881c:	4313      	orrs	r3, r2
 801881e:	800b      	strh	r3, [r1, #0]
 8018820:	b005      	add	sp, #20
 8018822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018826:	bf00      	nop
 8018828:	0801e61b 	.word	0x0801e61b
 801882c:	0801eb79 	.word	0x0801eb79
 8018830:	0801e6a3 	.word	0x0801e6a3

08018834 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018838:	ed2d 8b08 	vpush	{d8-d11}
 801883c:	b099      	sub	sp, #100	; 0x64
 801883e:	eeb0 aa40 	vmov.f32	s20, s0
 8018842:	9306      	str	r3, [sp, #24]
 8018844:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 8018848:	9307      	str	r3, [sp, #28]
 801884a:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 801884e:	9216      	str	r2, [sp, #88]	; 0x58
 8018850:	9310      	str	r3, [sp, #64]	; 0x40
 8018852:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8018854:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8018858:	9113      	str	r1, [sp, #76]	; 0x4c
 801885a:	9315      	str	r3, [sp, #84]	; 0x54
 801885c:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8018860:	9017      	str	r0, [sp, #92]	; 0x5c
 8018862:	6850      	ldr	r0, [r2, #4]
 8018864:	6812      	ldr	r2, [r2, #0]
 8018866:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8018868:	fb00 1303 	mla	r3, r0, r3, r1
 801886c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018870:	930a      	str	r3, [sp, #40]	; 0x28
 8018872:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018874:	681b      	ldr	r3, [r3, #0]
 8018876:	9312      	str	r3, [sp, #72]	; 0x48
 8018878:	9b07      	ldr	r3, [sp, #28]
 801887a:	009b      	lsls	r3, r3, #2
 801887c:	eef0 9a60 	vmov.f32	s19, s1
 8018880:	eeb0 9a41 	vmov.f32	s18, s2
 8018884:	eeb0 8a62 	vmov.f32	s16, s5
 8018888:	eef0 8a43 	vmov.f32	s17, s6
 801888c:	eef0 ba44 	vmov.f32	s23, s8
 8018890:	eeb0 ba64 	vmov.f32	s22, s9
 8018894:	eef0 aa45 	vmov.f32	s21, s10
 8018898:	930e      	str	r3, [sp, #56]	; 0x38
 801889a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801889c:	2b00      	cmp	r3, #0
 801889e:	dc03      	bgt.n	80188a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80188a0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80188a2:	2b00      	cmp	r3, #0
 80188a4:	f340 8352 	ble.w	8018f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 80188a8:	9b06      	ldr	r3, [sp, #24]
 80188aa:	2b00      	cmp	r3, #0
 80188ac:	f340 81a8 	ble.w	8018c00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3cc>
 80188b0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80188b2:	1412      	asrs	r2, r2, #16
 80188b4:	ea4f 4324 	mov.w	r3, r4, asr #16
 80188b8:	d430      	bmi.n	801891c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 80188ba:	9807      	ldr	r0, [sp, #28]
 80188bc:	1c51      	adds	r1, r2, #1
 80188be:	4288      	cmp	r0, r1
 80188c0:	dd2f      	ble.n	8018922 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 80188c2:	2b00      	cmp	r3, #0
 80188c4:	db2d      	blt.n	8018922 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 80188c6:	9810      	ldr	r0, [sp, #64]	; 0x40
 80188c8:	1c59      	adds	r1, r3, #1
 80188ca:	4288      	cmp	r0, r1
 80188cc:	dd29      	ble.n	8018922 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 80188ce:	9b06      	ldr	r3, [sp, #24]
 80188d0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80188d2:	992b      	ldr	r1, [sp, #172]	; 0xac
 80188d4:	3b01      	subs	r3, #1
 80188d6:	fb02 1203 	mla	r2, r2, r3, r1
 80188da:	1412      	asrs	r2, r2, #16
 80188dc:	d42c      	bmi.n	8018938 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80188de:	9907      	ldr	r1, [sp, #28]
 80188e0:	3201      	adds	r2, #1
 80188e2:	4291      	cmp	r1, r2
 80188e4:	dd28      	ble.n	8018938 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80188e6:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80188e8:	fb02 4303 	mla	r3, r2, r3, r4
 80188ec:	141b      	asrs	r3, r3, #16
 80188ee:	d423      	bmi.n	8018938 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80188f0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80188f2:	3301      	adds	r3, #1
 80188f4:	429a      	cmp	r2, r3
 80188f6:	dd1f      	ble.n	8018938 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80188f8:	9b06      	ldr	r3, [sp, #24]
 80188fa:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80188fe:	f8bd b054 	ldrh.w	fp, [sp, #84]	; 0x54
 8018902:	9311      	str	r3, [sp, #68]	; 0x44
 8018904:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018906:	2b00      	cmp	r3, #0
 8018908:	f300 81e3 	bgt.w	8018cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x49e>
 801890c:	9b06      	ldr	r3, [sp, #24]
 801890e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018912:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018914:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018918:	930a      	str	r3, [sp, #40]	; 0x28
 801891a:	e173      	b.n	8018c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d0>
 801891c:	1c51      	adds	r1, r2, #1
 801891e:	f040 8162 	bne.w	8018be6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8018922:	9907      	ldr	r1, [sp, #28]
 8018924:	428a      	cmp	r2, r1
 8018926:	f280 815e 	bge.w	8018be6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 801892a:	1c5f      	adds	r7, r3, #1
 801892c:	f2c0 815b 	blt.w	8018be6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8018930:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018932:	4293      	cmp	r3, r2
 8018934:	f280 8157 	bge.w	8018be6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8018938:	9b06      	ldr	r3, [sp, #24]
 801893a:	9314      	str	r3, [sp, #80]	; 0x50
 801893c:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8018940:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018942:	9311      	str	r3, [sp, #68]	; 0x44
 8018944:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018946:	2b00      	cmp	r3, #0
 8018948:	dde0      	ble.n	801890c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 801894a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801894c:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8018950:	1412      	asrs	r2, r2, #16
 8018952:	ea4f 4324 	mov.w	r3, r4, asr #16
 8018956:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801895a:	f100 81a1 	bmi.w	8018ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46c>
 801895e:	9e07      	ldr	r6, [sp, #28]
 8018960:	1c55      	adds	r5, r2, #1
 8018962:	42ae      	cmp	r6, r5
 8018964:	f340 819e 	ble.w	8018ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8018968:	2b00      	cmp	r3, #0
 801896a:	f2c0 819b 	blt.w	8018ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 801896e:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8018970:	1c5d      	adds	r5, r3, #1
 8018972:	42ae      	cmp	r6, r5
 8018974:	f340 8196 	ble.w	8018ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8018978:	9d07      	ldr	r5, [sp, #28]
 801897a:	fb03 2305 	mla	r3, r3, r5, r2
 801897e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018980:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8018984:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8018988:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801898c:	2800      	cmp	r0, #0
 801898e:	f000 8178 	beq.w	8018c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8018992:	686a      	ldr	r2, [r5, #4]
 8018994:	920b      	str	r2, [sp, #44]	; 0x2c
 8018996:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801899a:	2900      	cmp	r1, #0
 801899c:	f000 817a 	beq.w	8018c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x460>
 80189a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80189a2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80189a4:	18aa      	adds	r2, r5, r2
 80189a6:	59ad      	ldr	r5, [r5, r6]
 80189a8:	6852      	ldr	r2, [r2, #4]
 80189aa:	9508      	str	r5, [sp, #32]
 80189ac:	ea4f 6a15 	mov.w	sl, r5, lsr #24
 80189b0:	920c      	str	r2, [sp, #48]	; 0x30
 80189b2:	0e15      	lsrs	r5, r2, #24
 80189b4:	b280      	uxth	r0, r0
 80189b6:	b289      	uxth	r1, r1
 80189b8:	fb00 fb01 	mul.w	fp, r0, r1
 80189bc:	ebcb 1101 	rsb	r1, fp, r1, lsl #4
 80189c0:	0100      	lsls	r0, r0, #4
 80189c2:	eba0 090b 	sub.w	r9, r0, fp
 80189c6:	b289      	uxth	r1, r1
 80189c8:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 80189cc:	fa1f f989 	uxth.w	r9, r9
 80189d0:	1a52      	subs	r2, r2, r1
 80189d2:	b292      	uxth	r2, r2
 80189d4:	fb09 f008 	mul.w	r0, r9, r8
 80189d8:	fb02 000c 	mla	r0, r2, ip, r0
 80189dc:	fb01 000a 	mla	r0, r1, sl, r0
 80189e0:	fb0b 0005 	mla	r0, fp, r5, r0
 80189e4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80189e8:	2800      	cmp	r0, #0
 80189ea:	f000 80ef 	beq.w	8018bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 80189ee:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80189f2:	d01b      	beq.n	8018a2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f8>
 80189f4:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80189f8:	fb0c fe0e 	mul.w	lr, ip, lr
 80189fc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018a00:	fb0c fc03 	mul.w	ip, ip, r3
 8018a04:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8018a08:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018a0c:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8018a10:	4473      	add	r3, lr
 8018a12:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8018a16:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8018a1a:	0a1b      	lsrs	r3, r3, #8
 8018a1c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018a20:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018a24:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018a28:	ea43 030e 	orr.w	r3, r3, lr
 8018a2c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018a30:	d01e      	beq.n	8018a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8018a32:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8018a34:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018a38:	fb08 fc0c 	mul.w	ip, r8, ip
 8018a3c:	f406 4e7f 	and.w	lr, r6, #65280	; 0xff00
 8018a40:	fb08 f80e 	mul.w	r8, r8, lr
 8018a44:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8018a48:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018a4c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018a50:	44e6      	add	lr, ip
 8018a52:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8018a56:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8018a5a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018a5e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8018a62:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018a66:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8018a6a:	ea4e 0608 	orr.w	r6, lr, r8
 8018a6e:	960b      	str	r6, [sp, #44]	; 0x2c
 8018a70:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018a74:	d01e      	beq.n	8018ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x280>
 8018a76:	9e08      	ldr	r6, [sp, #32]
 8018a78:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018a7c:	fb0a f808 	mul.w	r8, sl, r8
 8018a80:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8018a84:	fb0a fa0c 	mul.w	sl, sl, ip
 8018a88:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8018a8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018a90:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8018a94:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018a98:	44c6      	add	lr, r8
 8018a9a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018a9e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018aa2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018aa6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018aaa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018aae:	ea4e 060a 	orr.w	r6, lr, sl
 8018ab2:	9608      	str	r6, [sp, #32]
 8018ab4:	2dff      	cmp	r5, #255	; 0xff
 8018ab6:	d01d      	beq.n	8018af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8018ab8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8018aba:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018abe:	fb05 f808 	mul.w	r8, r5, r8
 8018ac2:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8018ac6:	fb05 f50c 	mul.w	r5, r5, ip
 8018aca:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8018ace:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018ad2:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8018ad6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8018ada:	44c6      	add	lr, r8
 8018adc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018ae0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018ae4:	0a2d      	lsrs	r5, r5, #8
 8018ae6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018aea:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8018aee:	ea4e 0505 	orr.w	r5, lr, r5
 8018af2:	950c      	str	r5, [sp, #48]	; 0x30
 8018af4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018af6:	9e08      	ldr	r6, [sp, #32]
 8018af8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018afc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018b00:	fb09 f505 	mul.w	r5, r9, r5
 8018b04:	fb02 550c 	mla	r5, r2, ip, r5
 8018b08:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018b0c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8018b0e:	fb01 550c 	mla	r5, r1, ip, r5
 8018b12:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018b16:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8018b18:	fb0b 550c 	mla	r5, fp, ip, r5
 8018b1c:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8018b20:	fb09 f90c 	mul.w	r9, r9, ip
 8018b24:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018b28:	fb02 9303 	mla	r3, r2, r3, r9
 8018b2c:	9a08      	ldr	r2, [sp, #32]
 8018b2e:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8018b32:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018b34:	fb01 330e 	mla	r3, r1, lr, r3
 8018b38:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8018b3c:	fb0b 3b01 	mla	fp, fp, r1, r3
 8018b40:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018b42:	0a2d      	lsrs	r5, r5, #8
 8018b44:	f8b3 c000 	ldrh.w	ip, [r3]
 8018b48:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8018b4c:	fb00 f307 	mul.w	r3, r0, r7
 8018b50:	1c58      	adds	r0, r3, #1
 8018b52:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018b56:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8018b5a:	ea45 050b 	orr.w	r5, r5, fp
 8018b5e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018b62:	0c29      	lsrs	r1, r5, #16
 8018b64:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8018b68:	ea4f 232c 	mov.w	r3, ip, asr #8
 8018b6c:	b2c0      	uxtb	r0, r0
 8018b6e:	fb11 f107 	smulbb	r1, r1, r7
 8018b72:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8018b76:	fb03 1300 	mla	r3, r3, r0, r1
 8018b7a:	b299      	uxth	r1, r3
 8018b7c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018b80:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8018b84:	fb13 f307 	smulbb	r3, r3, r7
 8018b88:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018b8c:	fb02 3200 	mla	r2, r2, r0, r3
 8018b90:	b2ed      	uxtb	r5, r5
 8018b92:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8018b96:	b2db      	uxtb	r3, r3
 8018b98:	fb15 f507 	smulbb	r5, r5, r7
 8018b9c:	fb03 5500 	mla	r5, r3, r0, r5
 8018ba0:	b292      	uxth	r2, r2
 8018ba2:	b2ad      	uxth	r5, r5
 8018ba4:	1c4b      	adds	r3, r1, #1
 8018ba6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018baa:	1c68      	adds	r0, r5, #1
 8018bac:	1c51      	adds	r1, r2, #1
 8018bae:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8018bb2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018bb6:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018bba:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018bbe:	0952      	lsrs	r2, r2, #5
 8018bc0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018bc4:	432b      	orrs	r3, r5
 8018bc6:	4313      	orrs	r3, r2
 8018bc8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018bca:	8013      	strh	r3, [r2, #0]
 8018bcc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018bce:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018bd0:	3302      	adds	r3, #2
 8018bd2:	9311      	str	r3, [sp, #68]	; 0x44
 8018bd4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018bd6:	4413      	add	r3, r2
 8018bd8:	932b      	str	r3, [sp, #172]	; 0xac
 8018bda:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018bdc:	441c      	add	r4, r3
 8018bde:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018be0:	3b01      	subs	r3, #1
 8018be2:	9314      	str	r3, [sp, #80]	; 0x50
 8018be4:	e6ae      	b.n	8018944 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8018be6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018be8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018bea:	4413      	add	r3, r2
 8018bec:	932b      	str	r3, [sp, #172]	; 0xac
 8018bee:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018bf0:	441c      	add	r4, r3
 8018bf2:	9b06      	ldr	r3, [sp, #24]
 8018bf4:	3b01      	subs	r3, #1
 8018bf6:	9306      	str	r3, [sp, #24]
 8018bf8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018bfa:	3302      	adds	r3, #2
 8018bfc:	930a      	str	r3, [sp, #40]	; 0x28
 8018bfe:	e653      	b.n	80188a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8018c00:	f47f ae65 	bne.w	80188ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8018c04:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018c06:	2b00      	cmp	r3, #0
 8018c08:	f340 81a0 	ble.w	8018f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8018c0c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018c10:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018c14:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018c18:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018c1a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018c1e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018c22:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018c26:	eef0 6a48 	vmov.f32	s13, s16
 8018c2a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018c2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c32:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018c36:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8018c3a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018c3e:	eef0 6a68 	vmov.f32	s13, s17
 8018c42:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018c46:	ee18 2a10 	vmov	r2, s16
 8018c4a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018c4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c52:	ee18 2a90 	vmov	r2, s17
 8018c56:	932d      	str	r3, [sp, #180]	; 0xb4
 8018c58:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018c5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c5e:	932e      	str	r3, [sp, #184]	; 0xb8
 8018c60:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018c62:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8018c64:	3b01      	subs	r3, #1
 8018c66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c6a:	9313      	str	r3, [sp, #76]	; 0x4c
 8018c6c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018c6e:	bf08      	it	eq
 8018c70:	4613      	moveq	r3, r2
 8018c72:	ee16 4a90 	vmov	r4, s13
 8018c76:	9306      	str	r3, [sp, #24]
 8018c78:	eef0 8a67 	vmov.f32	s17, s15
 8018c7c:	eeb0 8a47 	vmov.f32	s16, s14
 8018c80:	e60b      	b.n	801889a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8018c82:	b151      	cbz	r1, 8018c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8018c84:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018c86:	58aa      	ldr	r2, [r5, r2]
 8018c88:	9208      	str	r2, [sp, #32]
 8018c8a:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8018c8e:	25ff      	movs	r5, #255	; 0xff
 8018c90:	46a8      	mov	r8, r5
 8018c92:	e68f      	b.n	80189b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8018c94:	25ff      	movs	r5, #255	; 0xff
 8018c96:	46aa      	mov	sl, r5
 8018c98:	e68c      	b.n	80189b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8018c9a:	25ff      	movs	r5, #255	; 0xff
 8018c9c:	46aa      	mov	sl, r5
 8018c9e:	e7f7      	b.n	8018c90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45c>
 8018ca0:	1c56      	adds	r6, r2, #1
 8018ca2:	d193      	bne.n	8018bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018ca4:	9d07      	ldr	r5, [sp, #28]
 8018ca6:	4295      	cmp	r5, r2
 8018ca8:	dd90      	ble.n	8018bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018caa:	1c5d      	adds	r5, r3, #1
 8018cac:	db8e      	blt.n	8018bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018cae:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018cb0:	429d      	cmp	r5, r3
 8018cb2:	dd8b      	ble.n	8018bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018cb4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018cb6:	9201      	str	r2, [sp, #4]
 8018cb8:	e9cd 3002 	strd	r3, r0, [sp, #8]
 8018cbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018cbe:	9300      	str	r3, [sp, #0]
 8018cc0:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8018cc4:	9b07      	ldr	r3, [sp, #28]
 8018cc6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8018cc8:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
 8018ccc:	f7ff fc4e 	bl	801856c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8018cd0:	e77c      	b.n	8018bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018cd2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018cd4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018cd6:	9d07      	ldr	r5, [sp, #28]
 8018cd8:	1412      	asrs	r2, r2, #16
 8018cda:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8018cde:	1423      	asrs	r3, r4, #16
 8018ce0:	fb05 2303 	mla	r3, r5, r3, r2
 8018ce4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018ce6:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8018cea:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8018cee:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8018cf2:	0e1e      	lsrs	r6, r3, #24
 8018cf4:	2900      	cmp	r1, #0
 8018cf6:	f000 811a 	beq.w	8018f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fa>
 8018cfa:	686a      	ldr	r2, [r5, #4]
 8018cfc:	920d      	str	r2, [sp, #52]	; 0x34
 8018cfe:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8018d02:	2800      	cmp	r0, #0
 8018d04:	f000 811c 	beq.w	8018f40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>
 8018d08:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018d0a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8018d0c:	18aa      	adds	r2, r5, r2
 8018d0e:	59ed      	ldr	r5, [r5, r7]
 8018d10:	6852      	ldr	r2, [r2, #4]
 8018d12:	9509      	str	r5, [sp, #36]	; 0x24
 8018d14:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8018d18:	920f      	str	r2, [sp, #60]	; 0x3c
 8018d1a:	0e15      	lsrs	r5, r2, #24
 8018d1c:	b289      	uxth	r1, r1
 8018d1e:	b280      	uxth	r0, r0
 8018d20:	fb01 f900 	mul.w	r9, r1, r0
 8018d24:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8018d28:	0109      	lsls	r1, r1, #4
 8018d2a:	eba1 0e09 	sub.w	lr, r1, r9
 8018d2e:	b280      	uxth	r0, r0
 8018d30:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8018d34:	fa1f fe8e 	uxth.w	lr, lr
 8018d38:	1a12      	subs	r2, r2, r0
 8018d3a:	b292      	uxth	r2, r2
 8018d3c:	fb0e f10c 	mul.w	r1, lr, ip
 8018d40:	fb02 1106 	mla	r1, r2, r6, r1
 8018d44:	fb00 1108 	mla	r1, r0, r8, r1
 8018d48:	fb09 1105 	mla	r1, r9, r5, r1
 8018d4c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018d50:	2900      	cmp	r1, #0
 8018d52:	f000 80e0 	beq.w	8018f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8018d56:	2eff      	cmp	r6, #255	; 0xff
 8018d58:	d016      	beq.n	8018d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x554>
 8018d5a:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8018d5e:	4377      	muls	r7, r6
 8018d60:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018d64:	435e      	muls	r6, r3
 8018d66:	0a3b      	lsrs	r3, r7, #8
 8018d68:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018d6c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018d70:	443b      	add	r3, r7
 8018d72:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8018d76:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8018d7a:	0a1b      	lsrs	r3, r3, #8
 8018d7c:	0a3f      	lsrs	r7, r7, #8
 8018d7e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018d82:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8018d86:	433b      	orrs	r3, r7
 8018d88:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018d8c:	d01d      	beq.n	8018dca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 8018d8e:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8018d90:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8018d92:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018d96:	fb0c f606 	mul.w	r6, ip, r6
 8018d9a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8018d9e:	fb0c fc07 	mul.w	ip, ip, r7
 8018da2:	0a37      	lsrs	r7, r6, #8
 8018da4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018da8:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8018dac:	4437      	add	r7, r6
 8018dae:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8018db2:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8018db6:	0a3f      	lsrs	r7, r7, #8
 8018db8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018dbc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018dc0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018dc4:	ea47 060c 	orr.w	r6, r7, ip
 8018dc8:	960d      	str	r6, [sp, #52]	; 0x34
 8018dca:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018dce:	d01d      	beq.n	8018e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d8>
 8018dd0:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8018dd2:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018dd6:	fb08 fc0c 	mul.w	ip, r8, ip
 8018dda:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018dde:	fb08 f806 	mul.w	r8, r8, r6
 8018de2:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8018de6:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8018dea:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018dee:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018df2:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8018df6:	4467      	add	r7, ip
 8018df8:	0a3f      	lsrs	r7, r7, #8
 8018dfa:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8018dfe:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018e02:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8018e06:	ea47 0608 	orr.w	r6, r7, r8
 8018e0a:	9609      	str	r6, [sp, #36]	; 0x24
 8018e0c:	2dff      	cmp	r5, #255	; 0xff
 8018e0e:	d01a      	beq.n	8018e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x612>
 8018e10:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8018e12:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018e16:	fb05 fc0c 	mul.w	ip, r5, ip
 8018e1a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018e1e:	4375      	muls	r5, r6
 8018e20:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8018e24:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018e28:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018e2c:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8018e30:	4467      	add	r7, ip
 8018e32:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8018e36:	0a3f      	lsrs	r7, r7, #8
 8018e38:	0a2d      	lsrs	r5, r5, #8
 8018e3a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018e3e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8018e42:	433d      	orrs	r5, r7
 8018e44:	950f      	str	r5, [sp, #60]	; 0x3c
 8018e46:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018e48:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018e4c:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8018e50:	fb0e f505 	mul.w	r5, lr, r5
 8018e54:	fb02 5506 	mla	r5, r2, r6, r5
 8018e58:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8018e5a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018e5e:	fb00 5506 	mla	r5, r0, r6, r5
 8018e62:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8018e64:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018e68:	fb09 5506 	mla	r5, r9, r6, r5
 8018e6c:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8018e6e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018e72:	fb0e fe06 	mul.w	lr, lr, r6
 8018e76:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018e7a:	fb02 e303 	mla	r3, r2, r3, lr
 8018e7e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018e80:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8018e84:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018e86:	fb00 3307 	mla	r3, r0, r7, r3
 8018e8a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8018e8e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8018e92:	fb01 f10b 	mul.w	r1, r1, fp
 8018e96:	0a2d      	lsrs	r5, r5, #8
 8018e98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018e9c:	f8ba 0000 	ldrh.w	r0, [sl]
 8018ea0:	1c4b      	adds	r3, r1, #1
 8018ea2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018ea6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018eaa:	ea45 050c 	orr.w	r5, r5, ip
 8018eae:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018eb2:	1202      	asrs	r2, r0, #8
 8018eb4:	0c2b      	lsrs	r3, r5, #16
 8018eb6:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8018eba:	b2c9      	uxtb	r1, r1
 8018ebc:	fb13 f30b 	smulbb	r3, r3, fp
 8018ec0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018ec4:	fb02 3201 	mla	r2, r2, r1, r3
 8018ec8:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8018ecc:	10c3      	asrs	r3, r0, #3
 8018ece:	b2ed      	uxtb	r5, r5
 8018ed0:	00c0      	lsls	r0, r0, #3
 8018ed2:	b2c0      	uxtb	r0, r0
 8018ed4:	fb15 f50b 	smulbb	r5, r5, fp
 8018ed8:	fb00 5001 	mla	r0, r0, r1, r5
 8018edc:	b292      	uxth	r2, r2
 8018ede:	fb16 f60b 	smulbb	r6, r6, fp
 8018ee2:	b280      	uxth	r0, r0
 8018ee4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8018ee8:	fb03 6301 	mla	r3, r3, r1, r6
 8018eec:	1c51      	adds	r1, r2, #1
 8018eee:	1c46      	adds	r6, r0, #1
 8018ef0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018ef4:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8018ef8:	b29b      	uxth	r3, r3
 8018efa:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8018efe:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8018f02:	4332      	orrs	r2, r6
 8018f04:	1c5e      	adds	r6, r3, #1
 8018f06:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8018f0a:	095b      	lsrs	r3, r3, #5
 8018f0c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018f10:	431a      	orrs	r2, r3
 8018f12:	f8aa 2000 	strh.w	r2, [sl]
 8018f16:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018f18:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018f1a:	4413      	add	r3, r2
 8018f1c:	932b      	str	r3, [sp, #172]	; 0xac
 8018f1e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018f20:	441c      	add	r4, r3
 8018f22:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018f24:	3b01      	subs	r3, #1
 8018f26:	f10a 0a02 	add.w	sl, sl, #2
 8018f2a:	9311      	str	r3, [sp, #68]	; 0x44
 8018f2c:	e4ea      	b.n	8018904 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8018f2e:	b150      	cbz	r0, 8018f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x712>
 8018f30:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018f32:	58aa      	ldr	r2, [r5, r2]
 8018f34:	9209      	str	r2, [sp, #36]	; 0x24
 8018f36:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8018f3a:	25ff      	movs	r5, #255	; 0xff
 8018f3c:	46ac      	mov	ip, r5
 8018f3e:	e6ed      	b.n	8018d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8018f40:	25ff      	movs	r5, #255	; 0xff
 8018f42:	46a8      	mov	r8, r5
 8018f44:	e6ea      	b.n	8018d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8018f46:	25ff      	movs	r5, #255	; 0xff
 8018f48:	46a8      	mov	r8, r5
 8018f4a:	e7f7      	b.n	8018f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8018f4c:	b019      	add	sp, #100	; 0x64
 8018f4e:	ecbd 8b08 	vpop	{d8-d11}
 8018f52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018f58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8018f58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f5c:	8808      	ldrh	r0, [r1, #0]
 8018f5e:	b085      	sub	sp, #20
 8018f60:	1206      	asrs	r6, r0, #8
 8018f62:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8018f66:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018f6a:	9600      	str	r6, [sp, #0]
 8018f6c:	10c6      	asrs	r6, r0, #3
 8018f6e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018f72:	9601      	str	r6, [sp, #4]
 8018f74:	00c0      	lsls	r0, r0, #3
 8018f76:	fb04 c603 	mla	r6, r4, r3, ip
 8018f7a:	b2c0      	uxtb	r0, r0
 8018f7c:	4691      	mov	r9, r2
 8018f7e:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8018f82:	9a00      	ldr	r2, [sp, #0]
 8018f84:	9002      	str	r0, [sp, #8]
 8018f86:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8018f8a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8018f8e:	9a01      	ldr	r2, [sp, #4]
 8018f90:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8018f94:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8018f98:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8018f9c:	2c00      	cmp	r4, #0
 8018f9e:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8018fa2:	db3a      	blt.n	801901a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8018fa4:	45a0      	cmp	r8, r4
 8018fa6:	dd38      	ble.n	801901a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8018fa8:	f1bc 0f00 	cmp.w	ip, #0
 8018fac:	db33      	blt.n	8019016 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8018fae:	4563      	cmp	r3, ip
 8018fb0:	dd31      	ble.n	8019016 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8018fb2:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8018fb6:	f11c 0601 	adds.w	r6, ip, #1
 8018fba:	d431      	bmi.n	8019020 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8018fbc:	42b3      	cmp	r3, r6
 8018fbe:	dd2f      	ble.n	8019020 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8018fc0:	b375      	cbz	r5, 8019020 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8018fc2:	f8de 6004 	ldr.w	r6, [lr, #4]
 8018fc6:	3401      	adds	r4, #1
 8018fc8:	d42e      	bmi.n	8019028 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8018fca:	45a0      	cmp	r8, r4
 8018fcc:	dd2c      	ble.n	8019028 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8018fce:	b35f      	cbz	r7, 8019028 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8018fd0:	f1bc 0f00 	cmp.w	ip, #0
 8018fd4:	db26      	blt.n	8019024 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8018fd6:	4563      	cmp	r3, ip
 8018fd8:	dd24      	ble.n	8019024 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8018fda:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8018fde:	f11c 0c01 	adds.w	ip, ip, #1
 8018fe2:	d405      	bmi.n	8018ff0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8018fe4:	4563      	cmp	r3, ip
 8018fe6:	dd03      	ble.n	8018ff0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8018fe8:	b115      	cbz	r5, 8018ff0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8018fea:	3301      	adds	r3, #1
 8018fec:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8018ff0:	2d0f      	cmp	r5, #15
 8018ff2:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8018ff6:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8018ffa:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018ffe:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8019002:	d801      	bhi.n	8019008 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8019004:	2f0f      	cmp	r7, #15
 8019006:	d911      	bls.n	801902c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 8019008:	4b7b      	ldr	r3, [pc, #492]	; (80191f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801900a:	4a7c      	ldr	r2, [pc, #496]	; (80191fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 801900c:	487c      	ldr	r0, [pc, #496]	; (8019200 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a8>)
 801900e:	f240 3173 	movw	r1, #883	; 0x373
 8019012:	f001 fce7 	bl	801a9e4 <__assert_func>
 8019016:	4602      	mov	r2, r0
 8019018:	e7cd      	b.n	8018fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801901a:	4606      	mov	r6, r0
 801901c:	4602      	mov	r2, r0
 801901e:	e7d2      	b.n	8018fc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8019020:	4606      	mov	r6, r0
 8019022:	e7d0      	b.n	8018fc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8019024:	4604      	mov	r4, r0
 8019026:	e7da      	b.n	8018fde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8019028:	4604      	mov	r4, r0
 801902a:	e7e1      	b.n	8018ff0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 801902c:	b2ab      	uxth	r3, r5
 801902e:	b2bf      	uxth	r7, r7
 8019030:	fb03 fe07 	mul.w	lr, r3, r7
 8019034:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8019038:	011b      	lsls	r3, r3, #4
 801903a:	eba3 0c0e 	sub.w	ip, r3, lr
 801903e:	b2bf      	uxth	r7, r7
 8019040:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8019044:	fa1f fc8c 	uxth.w	ip, ip
 8019048:	1bed      	subs	r5, r5, r7
 801904a:	b2ad      	uxth	r5, r5
 801904c:	fb0c f30a 	mul.w	r3, ip, sl
 8019050:	fb05 330b 	mla	r3, r5, fp, r3
 8019054:	fb07 3309 	mla	r3, r7, r9, r3
 8019058:	fb0e 3308 	mla	r3, lr, r8, r3
 801905c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019060:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019064:	9303      	str	r3, [sp, #12]
 8019066:	d018      	beq.n	801909a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 8019068:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801906c:	fb0b f303 	mul.w	r3, fp, r3
 8019070:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019074:	fb0b fb02 	mul.w	fp, fp, r2
 8019078:	0a1a      	lsrs	r2, r3, #8
 801907a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801907e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8019082:	441a      	add	r2, r3
 8019084:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8019088:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 801908c:	0a12      	lsrs	r2, r2, #8
 801908e:	0a1b      	lsrs	r3, r3, #8
 8019090:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019094:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019098:	431a      	orrs	r2, r3
 801909a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801909e:	d019      	beq.n	80190d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 80190a0:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80190a4:	fb0a fb0b 	mul.w	fp, sl, fp
 80190a8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80190ac:	fb0a fa06 	mul.w	sl, sl, r6
 80190b0:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80190b4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80190b8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80190bc:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 80190c0:	445e      	add	r6, fp
 80190c2:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80190c6:	0a36      	lsrs	r6, r6, #8
 80190c8:	0a1b      	lsrs	r3, r3, #8
 80190ca:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80190ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80190d2:	431e      	orrs	r6, r3
 80190d4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80190d8:	d019      	beq.n	801910e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 80190da:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80190de:	fb09 fa0a 	mul.w	sl, r9, sl
 80190e2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80190e6:	fb09 f904 	mul.w	r9, r9, r4
 80190ea:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80190ee:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80190f2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80190f6:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80190fa:	4454      	add	r4, sl
 80190fc:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8019100:	0a24      	lsrs	r4, r4, #8
 8019102:	0a1b      	lsrs	r3, r3, #8
 8019104:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019108:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801910c:	431c      	orrs	r4, r3
 801910e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019112:	d019      	beq.n	8019148 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 8019114:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8019118:	fb08 f909 	mul.w	r9, r8, r9
 801911c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019120:	fb08 f800 	mul.w	r8, r8, r0
 8019124:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8019128:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801912c:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8019130:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8019134:	4448      	add	r0, r9
 8019136:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 801913a:	0a00      	lsrs	r0, r0, #8
 801913c:	0a1b      	lsrs	r3, r3, #8
 801913e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8019142:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019146:	4318      	orrs	r0, r3
 8019148:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801914c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019150:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8019154:	fb0c f808 	mul.w	r8, ip, r8
 8019158:	fb0c f606 	mul.w	r6, ip, r6
 801915c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019160:	fb05 8803 	mla	r8, r5, r3, r8
 8019164:	fb05 6202 	mla	r2, r5, r2, r6
 8019168:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801916c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019170:	fb07 8803 	mla	r8, r7, r3, r8
 8019174:	fb07 2704 	mla	r7, r7, r4, r2
 8019178:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801917c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019180:	fb0e 8303 	mla	r3, lr, r3, r8
 8019184:	fb0e 7e00 	mla	lr, lr, r0, r7
 8019188:	0a1b      	lsrs	r3, r3, #8
 801918a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801918e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019192:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019196:	ea43 0e0e 	orr.w	lr, r3, lr
 801919a:	9b03      	ldr	r3, [sp, #12]
 801919c:	9800      	ldr	r0, [sp, #0]
 801919e:	9c01      	ldr	r4, [sp, #4]
 80191a0:	9a02      	ldr	r2, [sp, #8]
 80191a2:	43db      	mvns	r3, r3
 80191a4:	b2db      	uxtb	r3, r3
 80191a6:	4358      	muls	r0, r3
 80191a8:	435c      	muls	r4, r3
 80191aa:	435a      	muls	r2, r3
 80191ac:	1c43      	adds	r3, r0, #1
 80191ae:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80191b2:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80191b6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80191ba:	4b12      	ldr	r3, [pc, #72]	; (8019204 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2ac>)
 80191bc:	ea03 2300 	and.w	r3, r3, r0, lsl #8
 80191c0:	1c50      	adds	r0, r2, #1
 80191c2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80191c6:	fa5f f28e 	uxtb.w	r2, lr
 80191ca:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80191ce:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 80191d2:	1c62      	adds	r2, r4, #1
 80191d4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80191d8:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 80191dc:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 80191e0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80191e4:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80191e8:	ea43 0e0e 	orr.w	lr, r3, lr
 80191ec:	f8a1 e000 	strh.w	lr, [r1]
 80191f0:	b005      	add	sp, #20
 80191f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80191f6:	bf00      	nop
 80191f8:	0801e61b 	.word	0x0801e61b
 80191fc:	0801eb79 	.word	0x0801eb79
 8019200:	0801e6a3 	.word	0x0801e6a3
 8019204:	fffff800 	.word	0xfffff800

08019208 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8019208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801920c:	ed2d 8b08 	vpush	{d8-d11}
 8019210:	b097      	sub	sp, #92	; 0x5c
 8019212:	eeb0 aa40 	vmov.f32	s20, s0
 8019216:	9306      	str	r3, [sp, #24]
 8019218:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 801921c:	9307      	str	r3, [sp, #28]
 801921e:	9214      	str	r2, [sp, #80]	; 0x50
 8019220:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8019224:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019226:	9112      	str	r1, [sp, #72]	; 0x48
 8019228:	9310      	str	r3, [sp, #64]	; 0x40
 801922a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801922e:	9015      	str	r0, [sp, #84]	; 0x54
 8019230:	6850      	ldr	r0, [r2, #4]
 8019232:	6812      	ldr	r2, [r2, #0]
 8019234:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8019236:	fb00 1303 	mla	r3, r0, r3, r1
 801923a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801923e:	930a      	str	r3, [sp, #40]	; 0x28
 8019240:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019242:	681b      	ldr	r3, [r3, #0]
 8019244:	9311      	str	r3, [sp, #68]	; 0x44
 8019246:	9b07      	ldr	r3, [sp, #28]
 8019248:	009b      	lsls	r3, r3, #2
 801924a:	eef0 9a60 	vmov.f32	s19, s1
 801924e:	eeb0 9a41 	vmov.f32	s18, s2
 8019252:	eeb0 8a62 	vmov.f32	s16, s5
 8019256:	eef0 8a43 	vmov.f32	s17, s6
 801925a:	eef0 ba44 	vmov.f32	s23, s8
 801925e:	eeb0 ba64 	vmov.f32	s22, s9
 8019262:	eef0 aa45 	vmov.f32	s21, s10
 8019266:	930e      	str	r3, [sp, #56]	; 0x38
 8019268:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801926a:	2b00      	cmp	r3, #0
 801926c:	dc03      	bgt.n	8019276 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801926e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019270:	2b00      	cmp	r3, #0
 8019272:	f340 8361 	ble.w	8019938 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8019276:	9b06      	ldr	r3, [sp, #24]
 8019278:	2b00      	cmp	r3, #0
 801927a:	f340 819b 	ble.w	80195b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 801927e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019280:	1412      	asrs	r2, r2, #16
 8019282:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019286:	d42e      	bmi.n	80192e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8019288:	9807      	ldr	r0, [sp, #28]
 801928a:	1c51      	adds	r1, r2, #1
 801928c:	4288      	cmp	r0, r1
 801928e:	dd2d      	ble.n	80192ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019290:	2b00      	cmp	r3, #0
 8019292:	db2b      	blt.n	80192ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019294:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019296:	1c59      	adds	r1, r3, #1
 8019298:	4288      	cmp	r0, r1
 801929a:	dd27      	ble.n	80192ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801929c:	9b06      	ldr	r3, [sp, #24]
 801929e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80192a0:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80192a2:	3b01      	subs	r3, #1
 80192a4:	fb02 1203 	mla	r2, r2, r3, r1
 80192a8:	1412      	asrs	r2, r2, #16
 80192aa:	d42a      	bmi.n	8019302 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80192ac:	9907      	ldr	r1, [sp, #28]
 80192ae:	3201      	adds	r2, #1
 80192b0:	4291      	cmp	r1, r2
 80192b2:	dd26      	ble.n	8019302 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80192b4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80192b6:	fb02 5303 	mla	r3, r2, r3, r5
 80192ba:	141b      	asrs	r3, r3, #16
 80192bc:	d421      	bmi.n	8019302 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80192be:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80192c0:	3301      	adds	r3, #1
 80192c2:	429a      	cmp	r2, r3
 80192c4:	dd1d      	ble.n	8019302 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80192c6:	9b06      	ldr	r3, [sp, #24]
 80192c8:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80192cc:	9313      	str	r3, [sp, #76]	; 0x4c
 80192ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80192d0:	2b00      	cmp	r3, #0
 80192d2:	f300 81e3 	bgt.w	801969c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x494>
 80192d6:	9b06      	ldr	r3, [sp, #24]
 80192d8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80192dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80192de:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80192e2:	930a      	str	r3, [sp, #40]	; 0x28
 80192e4:	e168      	b.n	80195b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b0>
 80192e6:	1c51      	adds	r1, r2, #1
 80192e8:	f040 8157 	bne.w	801959a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 80192ec:	9907      	ldr	r1, [sp, #28]
 80192ee:	428a      	cmp	r2, r1
 80192f0:	f280 8153 	bge.w	801959a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 80192f4:	1c5f      	adds	r7, r3, #1
 80192f6:	f2c0 8150 	blt.w	801959a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 80192fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80192fc:	4293      	cmp	r3, r2
 80192fe:	f280 814c 	bge.w	801959a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8019302:	9b06      	ldr	r3, [sp, #24]
 8019304:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019306:	9313      	str	r3, [sp, #76]	; 0x4c
 8019308:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801930a:	2b00      	cmp	r3, #0
 801930c:	dde3      	ble.n	80192d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 801930e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8019310:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019312:	1409      	asrs	r1, r1, #16
 8019314:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019318:	f3c2 3203 	ubfx	r2, r2, #12, #4
 801931c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019320:	f100 81a3 	bmi.w	801966a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x462>
 8019324:	9c07      	ldr	r4, [sp, #28]
 8019326:	1c4e      	adds	r6, r1, #1
 8019328:	42b4      	cmp	r4, r6
 801932a:	f340 81a0 	ble.w	801966e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801932e:	2b00      	cmp	r3, #0
 8019330:	f2c0 819d 	blt.w	801966e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8019334:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019336:	1c5e      	adds	r6, r3, #1
 8019338:	42b4      	cmp	r4, r6
 801933a:	f340 8198 	ble.w	801966e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801933e:	9c07      	ldr	r4, [sp, #28]
 8019340:	fb03 1304 	mla	r3, r3, r4, r1
 8019344:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019346:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 801934a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 801934e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019352:	2a00      	cmp	r2, #0
 8019354:	f000 816f 	beq.w	8019636 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8019358:	6871      	ldr	r1, [r6, #4]
 801935a:	910b      	str	r1, [sp, #44]	; 0x2c
 801935c:	ea4f 6811 	mov.w	r8, r1, lsr #24
 8019360:	2800      	cmp	r0, #0
 8019362:	f000 8171 	beq.w	8019648 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x440>
 8019366:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019368:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801936a:	1871      	adds	r1, r6, r1
 801936c:	5934      	ldr	r4, [r6, r4]
 801936e:	6849      	ldr	r1, [r1, #4]
 8019370:	9408      	str	r4, [sp, #32]
 8019372:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 8019376:	910c      	str	r1, [sp, #48]	; 0x30
 8019378:	0e0e      	lsrs	r6, r1, #24
 801937a:	b292      	uxth	r2, r2
 801937c:	b280      	uxth	r0, r0
 801937e:	fb02 fb00 	mul.w	fp, r2, r0
 8019382:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8019386:	0112      	lsls	r2, r2, #4
 8019388:	eba2 090b 	sub.w	r9, r2, fp
 801938c:	b280      	uxth	r0, r0
 801938e:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8019392:	fa1f f989 	uxth.w	r9, r9
 8019396:	1a09      	subs	r1, r1, r0
 8019398:	b289      	uxth	r1, r1
 801939a:	fb09 f208 	mul.w	r2, r9, r8
 801939e:	fb01 220c 	mla	r2, r1, ip, r2
 80193a2:	fb00 220a 	mla	r2, r0, sl, r2
 80193a6:	fb0b 2206 	mla	r2, fp, r6, r2
 80193aa:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80193ae:	2a00      	cmp	r2, #0
 80193b0:	f000 80e8 	beq.w	8019584 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80193b4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80193b8:	d01b      	beq.n	80193f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80193ba:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80193be:	fb0c fe0e 	mul.w	lr, ip, lr
 80193c2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80193c6:	fb0c fc03 	mul.w	ip, ip, r3
 80193ca:	ea4f 231e 	mov.w	r3, lr, lsr #8
 80193ce:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80193d2:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80193d6:	4473      	add	r3, lr
 80193d8:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 80193dc:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 80193e0:	0a1b      	lsrs	r3, r3, #8
 80193e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80193e6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80193ea:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80193ee:	ea43 030e 	orr.w	r3, r3, lr
 80193f2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80193f6:	d01e      	beq.n	8019436 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x22e>
 80193f8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80193fa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80193fe:	fb08 fc0c 	mul.w	ip, r8, ip
 8019402:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8019406:	fb08 f80e 	mul.w	r8, r8, lr
 801940a:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801940e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019412:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019416:	44e6      	add	lr, ip
 8019418:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 801941c:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8019420:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019424:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019428:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801942c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019430:	ea4e 0408 	orr.w	r4, lr, r8
 8019434:	940b      	str	r4, [sp, #44]	; 0x2c
 8019436:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801943a:	d01e      	beq.n	801947a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x272>
 801943c:	9c08      	ldr	r4, [sp, #32]
 801943e:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8019442:	fb0a f808 	mul.w	r8, sl, r8
 8019446:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801944a:	fb0a fa0c 	mul.w	sl, sl, ip
 801944e:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8019452:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019456:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801945a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801945e:	44c6      	add	lr, r8
 8019460:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019464:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019468:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801946c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019470:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019474:	ea4e 040a 	orr.w	r4, lr, sl
 8019478:	9408      	str	r4, [sp, #32]
 801947a:	2eff      	cmp	r6, #255	; 0xff
 801947c:	d01d      	beq.n	80194ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b2>
 801947e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019480:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8019484:	fb06 f808 	mul.w	r8, r6, r8
 8019488:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801948c:	fb06 f60c 	mul.w	r6, r6, ip
 8019490:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8019494:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019498:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801949c:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 80194a0:	44c6      	add	lr, r8
 80194a2:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 80194a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80194aa:	0a36      	lsrs	r6, r6, #8
 80194ac:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80194b0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80194b4:	ea4e 0406 	orr.w	r4, lr, r6
 80194b8:	940c      	str	r4, [sp, #48]	; 0x30
 80194ba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80194bc:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 80194c0:	9c08      	ldr	r4, [sp, #32]
 80194c2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80194c6:	fb09 f606 	mul.w	r6, r9, r6
 80194ca:	fb01 660c 	mla	r6, r1, ip, r6
 80194ce:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80194d2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80194d4:	fb00 660c 	mla	r6, r0, ip, r6
 80194d8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80194dc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80194de:	fb0b 660c 	mla	r6, fp, ip, r6
 80194e2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80194e6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80194ea:	fb09 f90c 	mul.w	r9, r9, ip
 80194ee:	fb01 9303 	mla	r3, r1, r3, r9
 80194f2:	9908      	ldr	r1, [sp, #32]
 80194f4:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 80194f8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80194fa:	fb00 330e 	mla	r3, r0, lr, r3
 80194fe:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8019502:	fb0b 3b00 	mla	fp, fp, r0, r3
 8019506:	0a36      	lsrs	r6, r6, #8
 8019508:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801950c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019510:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8019514:	ea46 060b 	orr.w	r6, r6, fp
 8019518:	2aff      	cmp	r2, #255	; 0xff
 801951a:	ea4f 2316 	mov.w	r3, r6, lsr #8
 801951e:	f000 8099 	beq.w	8019654 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44c>
 8019522:	8839      	ldrh	r1, [r7, #0]
 8019524:	43d2      	mvns	r2, r2
 8019526:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801952a:	fa5f fe82 	uxtb.w	lr, r2
 801952e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019532:	fb0c fc0e 	mul.w	ip, ip, lr
 8019536:	10c8      	asrs	r0, r1, #3
 8019538:	00ca      	lsls	r2, r1, #3
 801953a:	f10c 0101 	add.w	r1, ip, #1
 801953e:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8019542:	ea4f 4c16 	mov.w	ip, r6, lsr #16
 8019546:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801954a:	b2d2      	uxtb	r2, r2
 801954c:	4952      	ldr	r1, [pc, #328]	; (8019698 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x490>)
 801954e:	fb02 f20e 	mul.w	r2, r2, lr
 8019552:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8019556:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801955a:	1c51      	adds	r1, r2, #1
 801955c:	fb00 f00e 	mul.w	r0, r0, lr
 8019560:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019564:	b2f6      	uxtb	r6, r6
 8019566:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 801956a:	1c42      	adds	r2, r0, #1
 801956c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019570:	b2db      	uxtb	r3, r3
 8019572:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019576:	00db      	lsls	r3, r3, #3
 8019578:	ea4c 06d6 	orr.w	r6, ip, r6, lsr #3
 801957c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019580:	431e      	orrs	r6, r3
 8019582:	803e      	strh	r6, [r7, #0]
 8019584:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019586:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019588:	441a      	add	r2, r3
 801958a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801958c:	9229      	str	r2, [sp, #164]	; 0xa4
 801958e:	441d      	add	r5, r3
 8019590:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019592:	3b01      	subs	r3, #1
 8019594:	3702      	adds	r7, #2
 8019596:	9313      	str	r3, [sp, #76]	; 0x4c
 8019598:	e6b6      	b.n	8019308 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 801959a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801959c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801959e:	441a      	add	r2, r3
 80195a0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80195a2:	9229      	str	r2, [sp, #164]	; 0xa4
 80195a4:	441d      	add	r5, r3
 80195a6:	9b06      	ldr	r3, [sp, #24]
 80195a8:	3b01      	subs	r3, #1
 80195aa:	9306      	str	r3, [sp, #24]
 80195ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80195ae:	3302      	adds	r3, #2
 80195b0:	930a      	str	r3, [sp, #40]	; 0x28
 80195b2:	e660      	b.n	8019276 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80195b4:	f47f ae72 	bne.w	801929c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 80195b8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80195ba:	2b00      	cmp	r3, #0
 80195bc:	f340 81bc 	ble.w	8019938 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 80195c0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80195c4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80195c8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80195cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80195ce:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80195d2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80195d6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80195da:	eef0 6a48 	vmov.f32	s13, s16
 80195de:	ee69 7a27 	vmul.f32	s15, s18, s15
 80195e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80195e6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80195ea:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80195ee:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80195f2:	eef0 6a68 	vmov.f32	s13, s17
 80195f6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80195fa:	ee18 2a10 	vmov	r2, s16
 80195fe:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019602:	fb92 f3f3 	sdiv	r3, r2, r3
 8019606:	ee18 2a90 	vmov	r2, s17
 801960a:	932b      	str	r3, [sp, #172]	; 0xac
 801960c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801960e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019612:	932c      	str	r3, [sp, #176]	; 0xb0
 8019614:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019616:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019618:	3b01      	subs	r3, #1
 801961a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801961e:	9312      	str	r3, [sp, #72]	; 0x48
 8019620:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019622:	bf08      	it	eq
 8019624:	4613      	moveq	r3, r2
 8019626:	ee16 5a90 	vmov	r5, s13
 801962a:	9306      	str	r3, [sp, #24]
 801962c:	eef0 8a67 	vmov.f32	s17, s15
 8019630:	eeb0 8a47 	vmov.f32	s16, s14
 8019634:	e618      	b.n	8019268 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8019636:	b150      	cbz	r0, 801964e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x446>
 8019638:	990e      	ldr	r1, [sp, #56]	; 0x38
 801963a:	5871      	ldr	r1, [r6, r1]
 801963c:	9108      	str	r1, [sp, #32]
 801963e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8019642:	26ff      	movs	r6, #255	; 0xff
 8019644:	46b0      	mov	r8, r6
 8019646:	e698      	b.n	801937a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 8019648:	26ff      	movs	r6, #255	; 0xff
 801964a:	46b2      	mov	sl, r6
 801964c:	e695      	b.n	801937a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 801964e:	26ff      	movs	r6, #255	; 0xff
 8019650:	46b2      	mov	sl, r6
 8019652:	e7f7      	b.n	8019644 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43c>
 8019654:	0972      	lsrs	r2, r6, #5
 8019656:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801965a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801965e:	f023 0307 	bic.w	r3, r3, #7
 8019662:	4313      	orrs	r3, r2
 8019664:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019668:	e78a      	b.n	8019580 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x378>
 801966a:	1c4e      	adds	r6, r1, #1
 801966c:	d18a      	bne.n	8019584 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801966e:	9c07      	ldr	r4, [sp, #28]
 8019670:	428c      	cmp	r4, r1
 8019672:	dd87      	ble.n	8019584 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019674:	1c5c      	adds	r4, r3, #1
 8019676:	db85      	blt.n	8019584 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019678:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801967a:	429c      	cmp	r4, r3
 801967c:	dd82      	ble.n	8019584 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801967e:	e9cd 2003 	strd	r2, r0, [sp, #12]
 8019682:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8019686:	9400      	str	r4, [sp, #0]
 8019688:	9b07      	ldr	r3, [sp, #28]
 801968a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801968c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801968e:	4639      	mov	r1, r7
 8019690:	f7ff fc62 	bl	8018f58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8019694:	e776      	b.n	8019584 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019696:	bf00      	nop
 8019698:	fffff800 	.word	0xfffff800
 801969c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801969e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80196a0:	9c07      	ldr	r4, [sp, #28]
 80196a2:	1409      	asrs	r1, r1, #16
 80196a4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80196a8:	142b      	asrs	r3, r5, #16
 80196aa:	fb04 1303 	mla	r3, r4, r3, r1
 80196ae:	9911      	ldr	r1, [sp, #68]	; 0x44
 80196b0:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 80196b4:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80196b8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80196bc:	0e1f      	lsrs	r7, r3, #24
 80196be:	2a00      	cmp	r2, #0
 80196c0:	f000 811d 	beq.w	80198fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 80196c4:	6871      	ldr	r1, [r6, #4]
 80196c6:	910d      	str	r1, [sp, #52]	; 0x34
 80196c8:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 80196cc:	2800      	cmp	r0, #0
 80196ce:	f000 811f 	beq.w	8019910 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 80196d2:	990e      	ldr	r1, [sp, #56]	; 0x38
 80196d4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80196d6:	1871      	adds	r1, r6, r1
 80196d8:	5934      	ldr	r4, [r6, r4]
 80196da:	6849      	ldr	r1, [r1, #4]
 80196dc:	9409      	str	r4, [sp, #36]	; 0x24
 80196de:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80196e2:	910f      	str	r1, [sp, #60]	; 0x3c
 80196e4:	0e0e      	lsrs	r6, r1, #24
 80196e6:	b292      	uxth	r2, r2
 80196e8:	b280      	uxth	r0, r0
 80196ea:	fb02 fb00 	mul.w	fp, r2, r0
 80196ee:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 80196f2:	0112      	lsls	r2, r2, #4
 80196f4:	eba2 080b 	sub.w	r8, r2, fp
 80196f8:	b280      	uxth	r0, r0
 80196fa:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80196fe:	fa1f f888 	uxth.w	r8, r8
 8019702:	1a09      	subs	r1, r1, r0
 8019704:	b289      	uxth	r1, r1
 8019706:	fb08 f20e 	mul.w	r2, r8, lr
 801970a:	fb01 2207 	mla	r2, r1, r7, r2
 801970e:	fb00 2209 	mla	r2, r0, r9, r2
 8019712:	fb0b 2206 	mla	r2, fp, r6, r2
 8019716:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801971a:	2a00      	cmp	r2, #0
 801971c:	f000 80e3 	beq.w	80198e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 8019720:	2fff      	cmp	r7, #255	; 0xff
 8019722:	d01a      	beq.n	801975a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x552>
 8019724:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019728:	fb07 fc0c 	mul.w	ip, r7, ip
 801972c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019730:	435f      	muls	r7, r3
 8019732:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8019736:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801973a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801973e:	4463      	add	r3, ip
 8019740:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8019744:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8019748:	0a1b      	lsrs	r3, r3, #8
 801974a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801974e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019752:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019756:	ea43 030c 	orr.w	r3, r3, ip
 801975a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801975e:	d01e      	beq.n	801979e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 8019760:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019762:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019766:	fb0e f707 	mul.w	r7, lr, r7
 801976a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801976e:	fb0e fe0c 	mul.w	lr, lr, ip
 8019772:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019776:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801977a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801977e:	44bc      	add	ip, r7
 8019780:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8019784:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8019788:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801978c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019790:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019794:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019798:	ea4c 040e 	orr.w	r4, ip, lr
 801979c:	940d      	str	r4, [sp, #52]	; 0x34
 801979e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80197a2:	d01e      	beq.n	80197e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5da>
 80197a4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80197a6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80197aa:	fb09 fe0e 	mul.w	lr, r9, lr
 80197ae:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 80197b2:	fb09 f907 	mul.w	r9, r9, r7
 80197b6:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80197ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80197be:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80197c2:	f509 7780 	add.w	r7, r9, #256	; 0x100
 80197c6:	44f4      	add	ip, lr
 80197c8:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 80197cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80197d0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80197d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80197d8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80197dc:	ea4c 0409 	orr.w	r4, ip, r9
 80197e0:	9409      	str	r4, [sp, #36]	; 0x24
 80197e2:	2eff      	cmp	r6, #255	; 0xff
 80197e4:	d01c      	beq.n	8019820 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x618>
 80197e6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80197e8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80197ec:	fb06 fe0e 	mul.w	lr, r6, lr
 80197f0:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 80197f4:	437e      	muls	r6, r7
 80197f6:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80197fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80197fe:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8019802:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8019806:	44f4      	add	ip, lr
 8019808:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801980c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019810:	0a36      	lsrs	r6, r6, #8
 8019812:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019816:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801981a:	ea4c 0406 	orr.w	r4, ip, r6
 801981e:	940f      	str	r4, [sp, #60]	; 0x3c
 8019820:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019822:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 8019826:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8019828:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 801982c:	fb08 f606 	mul.w	r6, r8, r6
 8019830:	fb01 6607 	mla	r6, r1, r7, r6
 8019834:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019838:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801983a:	fb00 6607 	mla	r6, r0, r7, r6
 801983e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019842:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019844:	fb0b 6607 	mla	r6, fp, r7, r6
 8019848:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801984c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019850:	fb08 f807 	mul.w	r8, r8, r7
 8019854:	fb01 8303 	mla	r3, r1, r3, r8
 8019858:	9909      	ldr	r1, [sp, #36]	; 0x24
 801985a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801985e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8019860:	fb00 330c 	mla	r3, r0, ip, r3
 8019864:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 8019868:	fb0b 3e0e 	mla	lr, fp, lr, r3
 801986c:	0a36      	lsrs	r6, r6, #8
 801986e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019872:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019876:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801987a:	ea46 060e 	orr.w	r6, r6, lr
 801987e:	2aff      	cmp	r2, #255	; 0xff
 8019880:	ea4f 2316 	mov.w	r3, r6, lsr #8
 8019884:	d04a      	beq.n	801991c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8019886:	f8ba 1000 	ldrh.w	r1, [sl]
 801988a:	43d2      	mvns	r2, r2
 801988c:	120f      	asrs	r7, r1, #8
 801988e:	fa5f fc82 	uxtb.w	ip, r2
 8019892:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019896:	fb07 f70c 	mul.w	r7, r7, ip
 801989a:	10c8      	asrs	r0, r1, #3
 801989c:	00ca      	lsls	r2, r1, #3
 801989e:	1c79      	adds	r1, r7, #1
 80198a0:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 80198a4:	0c37      	lsrs	r7, r6, #16
 80198a6:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 80198aa:	b2d2      	uxtb	r2, r2
 80198ac:	4925      	ldr	r1, [pc, #148]	; (8019944 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x73c>)
 80198ae:	fb02 f20c 	mul.w	r2, r2, ip
 80198b2:	ea01 2707 	and.w	r7, r1, r7, lsl #8
 80198b6:	1c51      	adds	r1, r2, #1
 80198b8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80198bc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80198c0:	b2f6      	uxtb	r6, r6
 80198c2:	fb00 f00c 	mul.w	r0, r0, ip
 80198c6:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 80198ca:	ea47 07d6 	orr.w	r7, r7, r6, lsr #3
 80198ce:	1c46      	adds	r6, r0, #1
 80198d0:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 80198d4:	b2de      	uxtb	r6, r3
 80198d6:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80198da:	00f6      	lsls	r6, r6, #3
 80198dc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80198e0:	4337      	orrs	r7, r6
 80198e2:	f8aa 7000 	strh.w	r7, [sl]
 80198e6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80198e8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80198ea:	441a      	add	r2, r3
 80198ec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80198ee:	9229      	str	r2, [sp, #164]	; 0xa4
 80198f0:	441d      	add	r5, r3
 80198f2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80198f4:	3b01      	subs	r3, #1
 80198f6:	f10a 0a02 	add.w	sl, sl, #2
 80198fa:	9313      	str	r3, [sp, #76]	; 0x4c
 80198fc:	e4e7      	b.n	80192ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc6>
 80198fe:	b150      	cbz	r0, 8019916 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70e>
 8019900:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019902:	5871      	ldr	r1, [r6, r1]
 8019904:	9109      	str	r1, [sp, #36]	; 0x24
 8019906:	ea4f 6911 	mov.w	r9, r1, lsr #24
 801990a:	26ff      	movs	r6, #255	; 0xff
 801990c:	46b6      	mov	lr, r6
 801990e:	e6ea      	b.n	80196e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8019910:	26ff      	movs	r6, #255	; 0xff
 8019912:	46b1      	mov	r9, r6
 8019914:	e6e7      	b.n	80196e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8019916:	26ff      	movs	r6, #255	; 0xff
 8019918:	46b1      	mov	r9, r6
 801991a:	e7f7      	b.n	801990c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x704>
 801991c:	0972      	lsrs	r2, r6, #5
 801991e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8019922:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019926:	f023 0307 	bic.w	r3, r3, #7
 801992a:	4313      	orrs	r3, r2
 801992c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019930:	431e      	orrs	r6, r3
 8019932:	f8aa 6000 	strh.w	r6, [sl]
 8019936:	e7d6      	b.n	80198e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 8019938:	b017      	add	sp, #92	; 0x5c
 801993a:	ecbd 8b08 	vpop	{d8-d11}
 801993e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019942:	bf00      	nop
 8019944:	fffff800 	.word	0xfffff800

08019948 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8019948:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801994c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8019950:	2c00      	cmp	r4, #0
 8019952:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8019956:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801995a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801995e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8019962:	fb04 ce03 	mla	lr, r4, r3, ip
 8019966:	db60      	blt.n	8019a2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8019968:	45a1      	cmp	r9, r4
 801996a:	dd5e      	ble.n	8019a2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801996c:	f1bc 0f00 	cmp.w	ip, #0
 8019970:	db59      	blt.n	8019a26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8019972:	45e0      	cmp	r8, ip
 8019974:	dd57      	ble.n	8019a26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8019976:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801997a:	f01e 0f01 	tst.w	lr, #1
 801997e:	5c16      	ldrb	r6, [r2, r0]
 8019980:	bf0c      	ite	eq
 8019982:	f006 060f 	andeq.w	r6, r6, #15
 8019986:	1136      	asrne	r6, r6, #4
 8019988:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801998c:	b2f6      	uxtb	r6, r6
 801998e:	f11c 0001 	adds.w	r0, ip, #1
 8019992:	d44d      	bmi.n	8019a30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8019994:	4580      	cmp	r8, r0
 8019996:	dd4b      	ble.n	8019a30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8019998:	2d00      	cmp	r5, #0
 801999a:	d04b      	beq.n	8019a34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801999c:	f10e 0a01 	add.w	sl, lr, #1
 80199a0:	ea4f 005a 	mov.w	r0, sl, lsr #1
 80199a4:	f01a 0f01 	tst.w	sl, #1
 80199a8:	5c10      	ldrb	r0, [r2, r0]
 80199aa:	bf0c      	ite	eq
 80199ac:	f000 000f 	andeq.w	r0, r0, #15
 80199b0:	1100      	asrne	r0, r0, #4
 80199b2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80199b6:	b2c0      	uxtb	r0, r0
 80199b8:	3401      	adds	r4, #1
 80199ba:	d43f      	bmi.n	8019a3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80199bc:	45a1      	cmp	r9, r4
 80199be:	dd3d      	ble.n	8019a3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80199c0:	2f00      	cmp	r7, #0
 80199c2:	f000 80a0 	beq.w	8019b06 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1be>
 80199c6:	f1bc 0f00 	cmp.w	ip, #0
 80199ca:	db35      	blt.n	8019a38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 80199cc:	45e0      	cmp	r8, ip
 80199ce:	dd33      	ble.n	8019a38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 80199d0:	eb03 090e 	add.w	r9, r3, lr
 80199d4:	ea4f 0459 	mov.w	r4, r9, lsr #1
 80199d8:	f019 0f01 	tst.w	r9, #1
 80199dc:	5d14      	ldrb	r4, [r2, r4]
 80199de:	bf0c      	ite	eq
 80199e0:	f004 040f 	andeq.w	r4, r4, #15
 80199e4:	1124      	asrne	r4, r4, #4
 80199e6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80199ea:	b2e4      	uxtb	r4, r4
 80199ec:	f11c 0c01 	adds.w	ip, ip, #1
 80199f0:	d427      	bmi.n	8019a42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 80199f2:	45e0      	cmp	r8, ip
 80199f4:	dd25      	ble.n	8019a42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 80199f6:	b335      	cbz	r5, 8019a46 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 80199f8:	3301      	adds	r3, #1
 80199fa:	449e      	add	lr, r3
 80199fc:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8019a00:	f01e 0f01 	tst.w	lr, #1
 8019a04:	5cd2      	ldrb	r2, [r2, r3]
 8019a06:	bf0c      	ite	eq
 8019a08:	f002 020f 	andeq.w	r2, r2, #15
 8019a0c:	1112      	asrne	r2, r2, #4
 8019a0e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019a12:	b2d3      	uxtb	r3, r2
 8019a14:	2d0f      	cmp	r5, #15
 8019a16:	d917      	bls.n	8019a48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8019a18:	4b3d      	ldr	r3, [pc, #244]	; (8019b10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8019a1a:	4a3e      	ldr	r2, [pc, #248]	; (8019b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8019a1c:	483e      	ldr	r0, [pc, #248]	; (8019b18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 8019a1e:	f240 3173 	movw	r1, #883	; 0x373
 8019a22:	f000 ffdf 	bl	801a9e4 <__assert_func>
 8019a26:	2600      	movs	r6, #0
 8019a28:	e7b1      	b.n	801998e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 8019a2a:	2000      	movs	r0, #0
 8019a2c:	4606      	mov	r6, r0
 8019a2e:	e7c3      	b.n	80199b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019a30:	2000      	movs	r0, #0
 8019a32:	e7c1      	b.n	80199b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019a34:	4628      	mov	r0, r5
 8019a36:	e7bf      	b.n	80199b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019a38:	2400      	movs	r4, #0
 8019a3a:	e7d7      	b.n	80199ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8019a3c:	2300      	movs	r3, #0
 8019a3e:	461c      	mov	r4, r3
 8019a40:	e7e8      	b.n	8019a14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8019a42:	2300      	movs	r3, #0
 8019a44:	e7e6      	b.n	8019a14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8019a46:	462b      	mov	r3, r5
 8019a48:	2f0f      	cmp	r7, #15
 8019a4a:	d8e5      	bhi.n	8019a18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8019a4c:	b2ad      	uxth	r5, r5
 8019a4e:	b2bf      	uxth	r7, r7
 8019a50:	fb05 fc07 	mul.w	ip, r5, r7
 8019a54:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8019a58:	012d      	lsls	r5, r5, #4
 8019a5a:	b2bf      	uxth	r7, r7
 8019a5c:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8019a60:	eba5 050c 	sub.w	r5, r5, ip
 8019a64:	1bd2      	subs	r2, r2, r7
 8019a66:	b2ad      	uxth	r5, r5
 8019a68:	b292      	uxth	r2, r2
 8019a6a:	4368      	muls	r0, r5
 8019a6c:	fb06 0002 	mla	r0, r6, r2, r0
 8019a70:	fb07 0404 	mla	r4, r7, r4, r0
 8019a74:	fb0c 4303 	mla	r3, ip, r3, r4
 8019a78:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019a7c:	2b00      	cmp	r3, #0
 8019a7e:	d040      	beq.n	8019b02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 8019a80:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 8019a84:	4a25      	ldr	r2, [pc, #148]	; (8019b1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d4>)
 8019a86:	4343      	muls	r3, r0
 8019a88:	1c58      	adds	r0, r3, #1
 8019a8a:	6816      	ldr	r6, [r2, #0]
 8019a8c:	880a      	ldrh	r2, [r1, #0]
 8019a8e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019a92:	1200      	asrs	r0, r0, #8
 8019a94:	b284      	uxth	r4, r0
 8019a96:	1215      	asrs	r5, r2, #8
 8019a98:	43c0      	mvns	r0, r0
 8019a9a:	b2c3      	uxtb	r3, r0
 8019a9c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019aa0:	1230      	asrs	r0, r6, #8
 8019aa2:	fb15 f503 	smulbb	r5, r5, r3
 8019aa6:	10d7      	asrs	r7, r2, #3
 8019aa8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019aac:	fb00 5004 	mla	r0, r0, r4, r5
 8019ab0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019ab4:	f3c6 05cc 	ubfx	r5, r6, #3, #13
 8019ab8:	00d2      	lsls	r2, r2, #3
 8019aba:	fb17 f703 	smulbb	r7, r7, r3
 8019abe:	b2d2      	uxtb	r2, r2
 8019ac0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019ac4:	00f6      	lsls	r6, r6, #3
 8019ac6:	fb05 7504 	mla	r5, r5, r4, r7
 8019aca:	fb12 f303 	smulbb	r3, r2, r3
 8019ace:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019ad2:	fb06 3304 	mla	r3, r6, r4, r3
 8019ad6:	b2ad      	uxth	r5, r5
 8019ad8:	b29a      	uxth	r2, r3
 8019ada:	b280      	uxth	r0, r0
 8019adc:	1c6b      	adds	r3, r5, #1
 8019ade:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8019ae2:	1c44      	adds	r4, r0, #1
 8019ae4:	095b      	lsrs	r3, r3, #5
 8019ae6:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 8019aea:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019aee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019af2:	4303      	orrs	r3, r0
 8019af4:	1c50      	adds	r0, r2, #1
 8019af6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019afa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019afe:	4313      	orrs	r3, r2
 8019b00:	800b      	strh	r3, [r1, #0]
 8019b02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019b06:	2d0f      	cmp	r5, #15
 8019b08:	d886      	bhi.n	8019a18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8019b0a:	463b      	mov	r3, r7
 8019b0c:	463c      	mov	r4, r7
 8019b0e:	e79d      	b.n	8019a4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8019b10:	0801e61b 	.word	0x0801e61b
 8019b14:	0801eb79 	.word	0x0801eb79
 8019b18:	0801e6a3 	.word	0x0801e6a3
 8019b1c:	20026908 	.word	0x20026908

08019b20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8019b20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b24:	ed2d 8b08 	vpush	{d8-d11}
 8019b28:	b099      	sub	sp, #100	; 0x64
 8019b2a:	e9dd 462b 	ldrd	r4, r6, [sp, #172]	; 0xac
 8019b2e:	9309      	str	r3, [sp, #36]	; 0x24
 8019b30:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 8019b34:	930a      	str	r3, [sp, #40]	; 0x28
 8019b36:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8019b3a:	9216      	str	r2, [sp, #88]	; 0x58
 8019b3c:	930b      	str	r3, [sp, #44]	; 0x2c
 8019b3e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8019b40:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8019b44:	910f      	str	r1, [sp, #60]	; 0x3c
 8019b46:	9310      	str	r3, [sp, #64]	; 0x40
 8019b48:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8019b4c:	9017      	str	r0, [sp, #92]	; 0x5c
 8019b4e:	6850      	ldr	r0, [r2, #4]
 8019b50:	6812      	ldr	r2, [r2, #0]
 8019b52:	fb00 1303 	mla	r3, r0, r3, r1
 8019b56:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 8019b5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019b5c:	3301      	adds	r3, #1
 8019b5e:	f023 0301 	bic.w	r3, r3, #1
 8019b62:	930c      	str	r3, [sp, #48]	; 0x30
 8019b64:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019b66:	681f      	ldr	r7, [r3, #0]
 8019b68:	eeb0 aa40 	vmov.f32	s20, s0
 8019b6c:	eef0 9a60 	vmov.f32	s19, s1
 8019b70:	eeb0 9a41 	vmov.f32	s18, s2
 8019b74:	eeb0 8a62 	vmov.f32	s16, s5
 8019b78:	eef0 8a43 	vmov.f32	s17, s6
 8019b7c:	eef0 ba44 	vmov.f32	s23, s8
 8019b80:	eeb0 ba64 	vmov.f32	s22, s9
 8019b84:	eef0 aa45 	vmov.f32	s21, s10
 8019b88:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019b8a:	2b00      	cmp	r3, #0
 8019b8c:	dc03      	bgt.n	8019b96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8019b8e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019b90:	2b00      	cmp	r3, #0
 8019b92:	f340 826b 	ble.w	801a06c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54c>
 8019b96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b98:	2b00      	cmp	r3, #0
 8019b9a:	f340 811f 	ble.w	8019ddc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8019b9e:	1422      	asrs	r2, r4, #16
 8019ba0:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019ba4:	d42d      	bmi.n	8019c02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8019ba6:	980a      	ldr	r0, [sp, #40]	; 0x28
 8019ba8:	1c51      	adds	r1, r2, #1
 8019baa:	4288      	cmp	r0, r1
 8019bac:	dd2c      	ble.n	8019c08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8019bae:	2b00      	cmp	r3, #0
 8019bb0:	db2a      	blt.n	8019c08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8019bb2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019bb4:	1c59      	adds	r1, r3, #1
 8019bb6:	4288      	cmp	r0, r1
 8019bb8:	dd26      	ble.n	8019c08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8019bba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019bbc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019bbe:	3b01      	subs	r3, #1
 8019bc0:	fb02 4203 	mla	r2, r2, r3, r4
 8019bc4:	1412      	asrs	r2, r2, #16
 8019bc6:	d42a      	bmi.n	8019c1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019bc8:	990a      	ldr	r1, [sp, #40]	; 0x28
 8019bca:	3201      	adds	r2, #1
 8019bcc:	4291      	cmp	r1, r2
 8019bce:	dd26      	ble.n	8019c1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019bd0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8019bd2:	fb02 6303 	mla	r3, r2, r3, r6
 8019bd6:	141b      	asrs	r3, r3, #16
 8019bd8:	d421      	bmi.n	8019c1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019bda:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019bdc:	3301      	adds	r3, #1
 8019bde:	429a      	cmp	r2, r3
 8019be0:	dd1d      	ble.n	8019c1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019be2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8019be6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019bea:	9311      	str	r3, [sp, #68]	; 0x44
 8019bec:	46d1      	mov	r9, sl
 8019bee:	f1bb 0f00 	cmp.w	fp, #0
 8019bf2:	f300 8163 	bgt.w	8019ebc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x39c>
 8019bf6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019bf8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019bfc:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8019c00:	e0ee      	b.n	8019de0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8019c02:	1c51      	adds	r1, r2, #1
 8019c04:	f040 80e0 	bne.w	8019dc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 8019c08:	990a      	ldr	r1, [sp, #40]	; 0x28
 8019c0a:	4291      	cmp	r1, r2
 8019c0c:	f340 80dc 	ble.w	8019dc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 8019c10:	1c5a      	adds	r2, r3, #1
 8019c12:	f2c0 80d9 	blt.w	8019dc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 8019c16:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019c18:	4293      	cmp	r3, r2
 8019c1a:	f280 80d5 	bge.w	8019dc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 8019c1e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8019c22:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8019c26:	9311      	str	r3, [sp, #68]	; 0x44
 8019c28:	46d0      	mov	r8, sl
 8019c2a:	f1b9 0f00 	cmp.w	r9, #0
 8019c2e:	dde2      	ble.n	8019bf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8019c30:	1420      	asrs	r0, r4, #16
 8019c32:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019c36:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019c3a:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019c3e:	f100 8122 	bmi.w	8019e86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 8019c42:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019c44:	f100 0c01 	add.w	ip, r0, #1
 8019c48:	4565      	cmp	r5, ip
 8019c4a:	f340 811e 	ble.w	8019e8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 8019c4e:	2b00      	cmp	r3, #0
 8019c50:	f2c0 811b 	blt.w	8019e8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 8019c54:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019c56:	f103 0c01 	add.w	ip, r3, #1
 8019c5a:	4565      	cmp	r5, ip
 8019c5c:	f340 8115 	ble.w	8019e8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 8019c60:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019c62:	fb03 0305 	mla	r3, r3, r5, r0
 8019c66:	0858      	lsrs	r0, r3, #1
 8019c68:	07dd      	lsls	r5, r3, #31
 8019c6a:	5c38      	ldrb	r0, [r7, r0]
 8019c6c:	bf54      	ite	pl
 8019c6e:	f000 000f 	andpl.w	r0, r0, #15
 8019c72:	1100      	asrmi	r0, r0, #4
 8019c74:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019c78:	b2c0      	uxtb	r0, r0
 8019c7a:	2a00      	cmp	r2, #0
 8019c7c:	f000 80ef 	beq.w	8019e5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 8019c80:	f103 0e01 	add.w	lr, r3, #1
 8019c84:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8019c88:	f01e 0f01 	tst.w	lr, #1
 8019c8c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019c90:	bf0c      	ite	eq
 8019c92:	f00c 0c0f 	andeq.w	ip, ip, #15
 8019c96:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8019c9a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019c9e:	fa5f f58c 	uxtb.w	r5, ip
 8019ca2:	9512      	str	r5, [sp, #72]	; 0x48
 8019ca4:	b1f9      	cbz	r1, 8019ce6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8019ca6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019ca8:	442b      	add	r3, r5
 8019caa:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019cae:	07dd      	lsls	r5, r3, #31
 8019cb0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019cb4:	bf54      	ite	pl
 8019cb6:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019cba:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019cbe:	3301      	adds	r3, #1
 8019cc0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019cc4:	fa5f f58c 	uxtb.w	r5, ip
 8019cc8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019ccc:	950d      	str	r5, [sp, #52]	; 0x34
 8019cce:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019cd2:	07dd      	lsls	r5, r3, #31
 8019cd4:	bf54      	ite	pl
 8019cd6:	f00c 030f 	andpl.w	r3, ip, #15
 8019cda:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8019cde:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019ce2:	b2db      	uxtb	r3, r3
 8019ce4:	9313      	str	r3, [sp, #76]	; 0x4c
 8019ce6:	b292      	uxth	r2, r2
 8019ce8:	b289      	uxth	r1, r1
 8019cea:	fb02 f301 	mul.w	r3, r2, r1
 8019cee:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8019cf2:	0112      	lsls	r2, r2, #4
 8019cf4:	b289      	uxth	r1, r1
 8019cf6:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8019cfa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019cfc:	1ad2      	subs	r2, r2, r3
 8019cfe:	ebac 0c01 	sub.w	ip, ip, r1
 8019d02:	b292      	uxth	r2, r2
 8019d04:	436a      	muls	r2, r5
 8019d06:	fa1f fc8c 	uxth.w	ip, ip
 8019d0a:	fb00 200c 	mla	r0, r0, ip, r2
 8019d0e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019d10:	fb01 0102 	mla	r1, r1, r2, r0
 8019d14:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019d16:	fb03 1302 	mla	r3, r3, r2, r1
 8019d1a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019d1e:	2b00      	cmp	r3, #0
 8019d20:	d049      	beq.n	8019db6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019d22:	9910      	ldr	r1, [sp, #64]	; 0x40
 8019d24:	4ac5      	ldr	r2, [pc, #788]	; (801a03c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 8019d26:	4dc6      	ldr	r5, [pc, #792]	; (801a040 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 8019d28:	f8d2 e000 	ldr.w	lr, [r2]
 8019d2c:	f8b8 2000 	ldrh.w	r2, [r8]
 8019d30:	434b      	muls	r3, r1
 8019d32:	1c59      	adds	r1, r3, #1
 8019d34:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019d38:	121b      	asrs	r3, r3, #8
 8019d3a:	b299      	uxth	r1, r3
 8019d3c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019d40:	43db      	mvns	r3, r3
 8019d42:	b2db      	uxtb	r3, r3
 8019d44:	ea4f 202e 	mov.w	r0, lr, asr #8
 8019d48:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019d4c:	fb1c fc03 	smulbb	ip, ip, r3
 8019d50:	ea4f 0be2 	mov.w	fp, r2, asr #3
 8019d54:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019d58:	fb00 c001 	mla	r0, r0, r1, ip
 8019d5c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019d60:	f3ce 0ccc 	ubfx	ip, lr, #3, #13
 8019d64:	fb1b fb03 	smulbb	fp, fp, r3
 8019d68:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019d6c:	00d2      	lsls	r2, r2, #3
 8019d6e:	fb0c bc01 	mla	ip, ip, r1, fp
 8019d72:	b2d2      	uxtb	r2, r2
 8019d74:	ea05 0ece 	and.w	lr, r5, lr, lsl #3
 8019d78:	fb12 f303 	smulbb	r3, r2, r3
 8019d7c:	fa1f fc8c 	uxth.w	ip, ip
 8019d80:	fa5f fe8e 	uxtb.w	lr, lr
 8019d84:	b280      	uxth	r0, r0
 8019d86:	fb0e 3101 	mla	r1, lr, r1, r3
 8019d8a:	f10c 0201 	add.w	r2, ip, #1
 8019d8e:	b289      	uxth	r1, r1
 8019d90:	1c43      	adds	r3, r0, #1
 8019d92:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8019d96:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019d9a:	0952      	lsrs	r2, r2, #5
 8019d9c:	1c4b      	adds	r3, r1, #1
 8019d9e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019da2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019da6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019daa:	4310      	orrs	r0, r2
 8019dac:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8019db0:	4308      	orrs	r0, r1
 8019db2:	f8a8 0000 	strh.w	r0, [r8]
 8019db6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8019db8:	441c      	add	r4, r3
 8019dba:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019dbc:	f108 0802 	add.w	r8, r8, #2
 8019dc0:	441e      	add	r6, r3
 8019dc2:	f109 39ff 	add.w	r9, r9, #4294967295
 8019dc6:	e730      	b.n	8019c2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8019dc8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8019dca:	441c      	add	r4, r3
 8019dcc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019dce:	441e      	add	r6, r3
 8019dd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019dd2:	3b01      	subs	r3, #1
 8019dd4:	9309      	str	r3, [sp, #36]	; 0x24
 8019dd6:	f10a 0a02 	add.w	sl, sl, #2
 8019dda:	e6dc      	b.n	8019b96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8019ddc:	f47f aeed 	bne.w	8019bba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8019de0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019de2:	2b00      	cmp	r3, #0
 8019de4:	f340 8142 	ble.w	801a06c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54c>
 8019de8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019dec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019df0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019df4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019df6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019dfa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019dfe:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019e02:	eef0 6a48 	vmov.f32	s13, s16
 8019e06:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019e0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e0e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019e12:	ee16 4a90 	vmov	r4, s13
 8019e16:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019e1a:	eef0 6a68 	vmov.f32	s13, s17
 8019e1e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019e22:	ee18 2a10 	vmov	r2, s16
 8019e26:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019e2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e2e:	ee18 2a90 	vmov	r2, s17
 8019e32:	932d      	str	r3, [sp, #180]	; 0xb4
 8019e34:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019e36:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e3a:	932e      	str	r3, [sp, #184]	; 0xb8
 8019e3c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019e3e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8019e40:	3b01      	subs	r3, #1
 8019e42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e46:	930f      	str	r3, [sp, #60]	; 0x3c
 8019e48:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019e4a:	bf08      	it	eq
 8019e4c:	4613      	moveq	r3, r2
 8019e4e:	ee16 6a90 	vmov	r6, s13
 8019e52:	9309      	str	r3, [sp, #36]	; 0x24
 8019e54:	eef0 8a67 	vmov.f32	s17, s15
 8019e58:	eeb0 8a47 	vmov.f32	s16, s14
 8019e5c:	e694      	b.n	8019b88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8019e5e:	2900      	cmp	r1, #0
 8019e60:	f43f af41 	beq.w	8019ce6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8019e64:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019e66:	442b      	add	r3, r5
 8019e68:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019e6c:	07db      	lsls	r3, r3, #31
 8019e6e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019e72:	bf54      	ite	pl
 8019e74:	f00c 030f 	andpl.w	r3, ip, #15
 8019e78:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8019e7c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019e80:	b2db      	uxtb	r3, r3
 8019e82:	930d      	str	r3, [sp, #52]	; 0x34
 8019e84:	e72f      	b.n	8019ce6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8019e86:	1c45      	adds	r5, r0, #1
 8019e88:	d195      	bne.n	8019db6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019e8a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019e8c:	4285      	cmp	r5, r0
 8019e8e:	dd92      	ble.n	8019db6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019e90:	1c5d      	adds	r5, r3, #1
 8019e92:	db90      	blt.n	8019db6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019e94:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019e96:	429d      	cmp	r5, r3
 8019e98:	dd8d      	ble.n	8019db6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019e9a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8019e9e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019ea0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019ea2:	9301      	str	r3, [sp, #4]
 8019ea4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019ea6:	9002      	str	r0, [sp, #8]
 8019ea8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8019eac:	9300      	str	r3, [sp, #0]
 8019eae:	463a      	mov	r2, r7
 8019eb0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019eb2:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8019eb4:	4641      	mov	r1, r8
 8019eb6:	f7ff fd47 	bl	8019948 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8019eba:	e77c      	b.n	8019db6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019ebc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019ebe:	1422      	asrs	r2, r4, #16
 8019ec0:	1433      	asrs	r3, r6, #16
 8019ec2:	fb05 2303 	mla	r3, r5, r3, r2
 8019ec6:	085a      	lsrs	r2, r3, #1
 8019ec8:	07dd      	lsls	r5, r3, #31
 8019eca:	5cba      	ldrb	r2, [r7, r2]
 8019ecc:	bf54      	ite	pl
 8019ece:	f002 020f 	andpl.w	r2, r2, #15
 8019ed2:	1112      	asrmi	r2, r2, #4
 8019ed4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019ed8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8019edc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019ee0:	b2d2      	uxtb	r2, r2
 8019ee2:	2900      	cmp	r1, #0
 8019ee4:	f000 80ae 	beq.w	801a044 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 8019ee8:	f103 0e01 	add.w	lr, r3, #1
 8019eec:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8019ef0:	f01e 0f01 	tst.w	lr, #1
 8019ef4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019ef8:	bf0c      	ite	eq
 8019efa:	f00c 0c0f 	andeq.w	ip, ip, #15
 8019efe:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8019f02:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019f06:	fa5f f58c 	uxtb.w	r5, ip
 8019f0a:	9514      	str	r5, [sp, #80]	; 0x50
 8019f0c:	b300      	cbz	r0, 8019f50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 8019f0e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019f10:	442b      	add	r3, r5
 8019f12:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019f16:	07dd      	lsls	r5, r3, #31
 8019f18:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019f1c:	bf54      	ite	pl
 8019f1e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019f22:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019f26:	3301      	adds	r3, #1
 8019f28:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019f2c:	fa5f f58c 	uxtb.w	r5, ip
 8019f30:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019f34:	950e      	str	r5, [sp, #56]	; 0x38
 8019f36:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019f3a:	07dd      	lsls	r5, r3, #31
 8019f3c:	bf54      	ite	pl
 8019f3e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019f42:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019f46:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019f4a:	fa5f f38c 	uxtb.w	r3, ip
 8019f4e:	9315      	str	r3, [sp, #84]	; 0x54
 8019f50:	b289      	uxth	r1, r1
 8019f52:	b280      	uxth	r0, r0
 8019f54:	fb01 f300 	mul.w	r3, r1, r0
 8019f58:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8019f5c:	0109      	lsls	r1, r1, #4
 8019f5e:	b280      	uxth	r0, r0
 8019f60:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8019f64:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019f66:	1ac9      	subs	r1, r1, r3
 8019f68:	ebac 0c00 	sub.w	ip, ip, r0
 8019f6c:	b289      	uxth	r1, r1
 8019f6e:	4369      	muls	r1, r5
 8019f70:	fa1f fc8c 	uxth.w	ip, ip
 8019f74:	fb02 120c 	mla	r2, r2, ip, r1
 8019f78:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019f7a:	fb00 2001 	mla	r0, r0, r1, r2
 8019f7e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8019f80:	fb03 0302 	mla	r3, r3, r2, r0
 8019f84:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019f88:	2b00      	cmp	r3, #0
 8019f8a:	d04d      	beq.n	801a028 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x508>
 8019f8c:	9910      	ldr	r1, [sp, #64]	; 0x40
 8019f8e:	4a2b      	ldr	r2, [pc, #172]	; (801a03c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 8019f90:	4d2b      	ldr	r5, [pc, #172]	; (801a040 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 8019f92:	f8d2 e000 	ldr.w	lr, [r2]
 8019f96:	f8b9 2000 	ldrh.w	r2, [r9]
 8019f9a:	434b      	muls	r3, r1
 8019f9c:	1c59      	adds	r1, r3, #1
 8019f9e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019fa2:	121b      	asrs	r3, r3, #8
 8019fa4:	b299      	uxth	r1, r3
 8019fa6:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019faa:	43db      	mvns	r3, r3
 8019fac:	b2db      	uxtb	r3, r3
 8019fae:	ea4f 202e 	mov.w	r0, lr, asr #8
 8019fb2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019fb6:	fb1c fc03 	smulbb	ip, ip, r3
 8019fba:	ea4f 08e2 	mov.w	r8, r2, asr #3
 8019fbe:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019fc2:	fb00 c001 	mla	r0, r0, r1, ip
 8019fc6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019fca:	f3ce 0ccc 	ubfx	ip, lr, #3, #13
 8019fce:	fb18 f803 	smulbb	r8, r8, r3
 8019fd2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019fd6:	00d2      	lsls	r2, r2, #3
 8019fd8:	fb0c 8c01 	mla	ip, ip, r1, r8
 8019fdc:	ea05 0ece 	and.w	lr, r5, lr, lsl #3
 8019fe0:	b2d2      	uxtb	r2, r2
 8019fe2:	fa1f fc8c 	uxth.w	ip, ip
 8019fe6:	fa5f fe8e 	uxtb.w	lr, lr
 8019fea:	fb12 f203 	smulbb	r2, r2, r3
 8019fee:	b280      	uxth	r0, r0
 8019ff0:	fb0e 2201 	mla	r2, lr, r1, r2
 8019ff4:	f10c 0801 	add.w	r8, ip, #1
 8019ff8:	b292      	uxth	r2, r2
 8019ffa:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 8019ffe:	f100 0801 	add.w	r8, r0, #1
 801a002:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a006:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 801a00a:	1c51      	adds	r1, r2, #1
 801a00c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a010:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a014:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a018:	ea4c 0c00 	orr.w	ip, ip, r0
 801a01c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a020:	ea4c 0c02 	orr.w	ip, ip, r2
 801a024:	f8a9 c000 	strh.w	ip, [r9]
 801a028:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a02a:	441c      	add	r4, r3
 801a02c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a02e:	f109 0902 	add.w	r9, r9, #2
 801a032:	441e      	add	r6, r3
 801a034:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a038:	e5d9      	b.n	8019bee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 801a03a:	bf00      	nop
 801a03c:	20026908 	.word	0x20026908
 801a040:	0007fff8 	.word	0x0007fff8
 801a044:	2800      	cmp	r0, #0
 801a046:	d083      	beq.n	8019f50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801a048:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a04a:	442b      	add	r3, r5
 801a04c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a050:	07db      	lsls	r3, r3, #31
 801a052:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a056:	bf54      	ite	pl
 801a058:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a05c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a060:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a064:	fa5f f38c 	uxtb.w	r3, ip
 801a068:	930e      	str	r3, [sp, #56]	; 0x38
 801a06a:	e771      	b.n	8019f50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801a06c:	b019      	add	sp, #100	; 0x64
 801a06e:	ecbd 8b08 	vpop	{d8-d11}
 801a072:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a076:	bf00      	nop

0801a078 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801a078:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a07c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801a080:	2c00      	cmp	r4, #0
 801a082:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a086:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a08a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a08e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a092:	fb04 ce03 	mla	lr, r4, r3, ip
 801a096:	db60      	blt.n	801a15a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801a098:	45a1      	cmp	r9, r4
 801a09a:	dd5e      	ble.n	801a15a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801a09c:	f1bc 0f00 	cmp.w	ip, #0
 801a0a0:	db59      	blt.n	801a156 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801a0a2:	45e0      	cmp	r8, ip
 801a0a4:	dd57      	ble.n	801a156 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801a0a6:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801a0aa:	f01e 0f01 	tst.w	lr, #1
 801a0ae:	5c16      	ldrb	r6, [r2, r0]
 801a0b0:	bf0c      	ite	eq
 801a0b2:	f006 060f 	andeq.w	r6, r6, #15
 801a0b6:	1136      	asrne	r6, r6, #4
 801a0b8:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a0bc:	b2f6      	uxtb	r6, r6
 801a0be:	f11c 0001 	adds.w	r0, ip, #1
 801a0c2:	d44d      	bmi.n	801a160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801a0c4:	4580      	cmp	r8, r0
 801a0c6:	dd4b      	ble.n	801a160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801a0c8:	2d00      	cmp	r5, #0
 801a0ca:	d04b      	beq.n	801a164 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801a0cc:	f10e 0a01 	add.w	sl, lr, #1
 801a0d0:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801a0d4:	f01a 0f01 	tst.w	sl, #1
 801a0d8:	5c10      	ldrb	r0, [r2, r0]
 801a0da:	bf0c      	ite	eq
 801a0dc:	f000 000f 	andeq.w	r0, r0, #15
 801a0e0:	1100      	asrne	r0, r0, #4
 801a0e2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a0e6:	b2c0      	uxtb	r0, r0
 801a0e8:	3401      	adds	r4, #1
 801a0ea:	d43f      	bmi.n	801a16c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801a0ec:	45a1      	cmp	r9, r4
 801a0ee:	dd3d      	ble.n	801a16c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801a0f0:	2f00      	cmp	r7, #0
 801a0f2:	f000 8099 	beq.w	801a228 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>
 801a0f6:	f1bc 0f00 	cmp.w	ip, #0
 801a0fa:	db35      	blt.n	801a168 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801a0fc:	45e0      	cmp	r8, ip
 801a0fe:	dd33      	ble.n	801a168 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801a100:	eb03 090e 	add.w	r9, r3, lr
 801a104:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801a108:	f019 0f01 	tst.w	r9, #1
 801a10c:	5d14      	ldrb	r4, [r2, r4]
 801a10e:	bf0c      	ite	eq
 801a110:	f004 040f 	andeq.w	r4, r4, #15
 801a114:	1124      	asrne	r4, r4, #4
 801a116:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a11a:	b2e4      	uxtb	r4, r4
 801a11c:	f11c 0c01 	adds.w	ip, ip, #1
 801a120:	d427      	bmi.n	801a172 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801a122:	45e0      	cmp	r8, ip
 801a124:	dd25      	ble.n	801a172 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801a126:	b335      	cbz	r5, 801a176 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801a128:	3301      	adds	r3, #1
 801a12a:	449e      	add	lr, r3
 801a12c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a130:	f01e 0f01 	tst.w	lr, #1
 801a134:	5cd2      	ldrb	r2, [r2, r3]
 801a136:	bf0c      	ite	eq
 801a138:	f002 020f 	andeq.w	r2, r2, #15
 801a13c:	1112      	asrne	r2, r2, #4
 801a13e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a142:	b2d3      	uxtb	r3, r2
 801a144:	2d0f      	cmp	r5, #15
 801a146:	d917      	bls.n	801a178 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801a148:	4b3a      	ldr	r3, [pc, #232]	; (801a234 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801a14a:	4a3b      	ldr	r2, [pc, #236]	; (801a238 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801a14c:	483b      	ldr	r0, [pc, #236]	; (801a23c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 801a14e:	f240 3173 	movw	r1, #883	; 0x373
 801a152:	f000 fc47 	bl	801a9e4 <__assert_func>
 801a156:	2600      	movs	r6, #0
 801a158:	e7b1      	b.n	801a0be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801a15a:	2000      	movs	r0, #0
 801a15c:	4606      	mov	r6, r0
 801a15e:	e7c3      	b.n	801a0e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a160:	2000      	movs	r0, #0
 801a162:	e7c1      	b.n	801a0e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a164:	4628      	mov	r0, r5
 801a166:	e7bf      	b.n	801a0e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a168:	2400      	movs	r4, #0
 801a16a:	e7d7      	b.n	801a11c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801a16c:	2300      	movs	r3, #0
 801a16e:	461c      	mov	r4, r3
 801a170:	e7e8      	b.n	801a144 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801a172:	2300      	movs	r3, #0
 801a174:	e7e6      	b.n	801a144 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801a176:	462b      	mov	r3, r5
 801a178:	2f0f      	cmp	r7, #15
 801a17a:	d8e5      	bhi.n	801a148 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801a17c:	b2ad      	uxth	r5, r5
 801a17e:	b2bf      	uxth	r7, r7
 801a180:	fb05 fc07 	mul.w	ip, r5, r7
 801a184:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801a188:	012d      	lsls	r5, r5, #4
 801a18a:	b2bf      	uxth	r7, r7
 801a18c:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801a190:	eba5 050c 	sub.w	r5, r5, ip
 801a194:	1bd2      	subs	r2, r2, r7
 801a196:	b2ad      	uxth	r5, r5
 801a198:	b292      	uxth	r2, r2
 801a19a:	4368      	muls	r0, r5
 801a19c:	fb06 0002 	mla	r0, r6, r2, r0
 801a1a0:	fb07 0404 	mla	r4, r7, r4, r0
 801a1a4:	fb0c 4303 	mla	r3, ip, r3, r4
 801a1a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a1ac:	2b00      	cmp	r3, #0
 801a1ae:	d039      	beq.n	801a224 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 801a1b0:	4a23      	ldr	r2, [pc, #140]	; (801a240 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c8>)
 801a1b2:	6816      	ldr	r6, [r2, #0]
 801a1b4:	880a      	ldrh	r2, [r1, #0]
 801a1b6:	b298      	uxth	r0, r3
 801a1b8:	1215      	asrs	r5, r2, #8
 801a1ba:	43db      	mvns	r3, r3
 801a1bc:	b2db      	uxtb	r3, r3
 801a1be:	1234      	asrs	r4, r6, #8
 801a1c0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a1c4:	fb15 f503 	smulbb	r5, r5, r3
 801a1c8:	10d7      	asrs	r7, r2, #3
 801a1ca:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801a1ce:	fb04 5400 	mla	r4, r4, r0, r5
 801a1d2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a1d6:	f3c6 05cc 	ubfx	r5, r6, #3, #13
 801a1da:	fb17 f703 	smulbb	r7, r7, r3
 801a1de:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a1e2:	00d2      	lsls	r2, r2, #3
 801a1e4:	fb05 7500 	mla	r5, r5, r0, r7
 801a1e8:	b2d2      	uxtb	r2, r2
 801a1ea:	00f6      	lsls	r6, r6, #3
 801a1ec:	fb12 f303 	smulbb	r3, r2, r3
 801a1f0:	b2ad      	uxth	r5, r5
 801a1f2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a1f6:	b2a4      	uxth	r4, r4
 801a1f8:	fb06 3000 	mla	r0, r6, r0, r3
 801a1fc:	1c6b      	adds	r3, r5, #1
 801a1fe:	b280      	uxth	r0, r0
 801a200:	1c62      	adds	r2, r4, #1
 801a202:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801a206:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801a20a:	095b      	lsrs	r3, r3, #5
 801a20c:	1c42      	adds	r2, r0, #1
 801a20e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a212:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801a216:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a21a:	4323      	orrs	r3, r4
 801a21c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801a220:	4303      	orrs	r3, r0
 801a222:	800b      	strh	r3, [r1, #0]
 801a224:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a228:	2d0f      	cmp	r5, #15
 801a22a:	d88d      	bhi.n	801a148 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801a22c:	463b      	mov	r3, r7
 801a22e:	463c      	mov	r4, r7
 801a230:	e7a4      	b.n	801a17c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801a232:	bf00      	nop
 801a234:	0801e61b 	.word	0x0801e61b
 801a238:	0801eb79 	.word	0x0801eb79
 801a23c:	0801e6a3 	.word	0x0801e6a3
 801a240:	20026908 	.word	0x20026908

0801a244 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801a244:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a248:	ed2d 8b08 	vpush	{d8-d11}
 801a24c:	b095      	sub	sp, #84	; 0x54
 801a24e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801a252:	9306      	str	r3, [sp, #24]
 801a254:	f9bd 30b8 	ldrsh.w	r3, [sp, #184]	; 0xb8
 801a258:	9307      	str	r3, [sp, #28]
 801a25a:	920d      	str	r2, [sp, #52]	; 0x34
 801a25c:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 801a260:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801a262:	910a      	str	r1, [sp, #40]	; 0x28
 801a264:	9308      	str	r3, [sp, #32]
 801a266:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801a26a:	9013      	str	r0, [sp, #76]	; 0x4c
 801a26c:	6850      	ldr	r0, [r2, #4]
 801a26e:	6812      	ldr	r2, [r2, #0]
 801a270:	fb00 1303 	mla	r3, r0, r3, r1
 801a274:	eb02 0b43 	add.w	fp, r2, r3, lsl #1
 801a278:	9b07      	ldr	r3, [sp, #28]
 801a27a:	3301      	adds	r3, #1
 801a27c:	f023 0301 	bic.w	r3, r3, #1
 801a280:	9309      	str	r3, [sp, #36]	; 0x24
 801a282:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a284:	681f      	ldr	r7, [r3, #0]
 801a286:	eeb0 aa40 	vmov.f32	s20, s0
 801a28a:	eef0 9a60 	vmov.f32	s19, s1
 801a28e:	eeb0 9a41 	vmov.f32	s18, s2
 801a292:	eeb0 8a62 	vmov.f32	s16, s5
 801a296:	eef0 8a43 	vmov.f32	s17, s6
 801a29a:	eef0 ba44 	vmov.f32	s23, s8
 801a29e:	eeb0 ba64 	vmov.f32	s22, s9
 801a2a2:	eef0 aa45 	vmov.f32	s21, s10
 801a2a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a2a8:	2b00      	cmp	r3, #0
 801a2aa:	dc03      	bgt.n	801a2b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801a2ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a2ae:	2b00      	cmp	r3, #0
 801a2b0:	f340 8260 	ble.w	801a774 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801a2b4:	9b06      	ldr	r3, [sp, #24]
 801a2b6:	2b00      	cmp	r3, #0
 801a2b8:	f340 811c 	ble.w	801a4f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801a2bc:	1422      	asrs	r2, r4, #16
 801a2be:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a2c2:	d42d      	bmi.n	801a320 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801a2c4:	9807      	ldr	r0, [sp, #28]
 801a2c6:	1c51      	adds	r1, r2, #1
 801a2c8:	4288      	cmp	r0, r1
 801a2ca:	dd2c      	ble.n	801a326 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801a2cc:	2b00      	cmp	r3, #0
 801a2ce:	db2a      	blt.n	801a326 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801a2d0:	9808      	ldr	r0, [sp, #32]
 801a2d2:	1c59      	adds	r1, r3, #1
 801a2d4:	4288      	cmp	r0, r1
 801a2d6:	dd26      	ble.n	801a326 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801a2d8:	9b06      	ldr	r3, [sp, #24]
 801a2da:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a2dc:	3b01      	subs	r3, #1
 801a2de:	fb02 4203 	mla	r2, r2, r3, r4
 801a2e2:	1412      	asrs	r2, r2, #16
 801a2e4:	d42a      	bmi.n	801a33c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a2e6:	9907      	ldr	r1, [sp, #28]
 801a2e8:	3201      	adds	r2, #1
 801a2ea:	4291      	cmp	r1, r2
 801a2ec:	dd26      	ble.n	801a33c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a2ee:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801a2f0:	fb02 6303 	mla	r3, r2, r3, r6
 801a2f4:	141b      	asrs	r3, r3, #16
 801a2f6:	d421      	bmi.n	801a33c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a2f8:	9a08      	ldr	r2, [sp, #32]
 801a2fa:	3301      	adds	r3, #1
 801a2fc:	429a      	cmp	r2, r3
 801a2fe:	dd1d      	ble.n	801a33c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a300:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801a304:	f8dd a018 	ldr.w	sl, [sp, #24]
 801a308:	930e      	str	r3, [sp, #56]	; 0x38
 801a30a:	46d8      	mov	r8, fp
 801a30c:	f1ba 0f00 	cmp.w	sl, #0
 801a310:	f300 8164 	bgt.w	801a5dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801a314:	9b06      	ldr	r3, [sp, #24]
 801a316:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a31a:	eb0b 0b45 	add.w	fp, fp, r5, lsl #1
 801a31e:	e0eb      	b.n	801a4f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 801a320:	1c51      	adds	r1, r2, #1
 801a322:	f040 80dd 	bne.w	801a4e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801a326:	9907      	ldr	r1, [sp, #28]
 801a328:	4291      	cmp	r1, r2
 801a32a:	f340 80d9 	ble.w	801a4e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801a32e:	1c5a      	adds	r2, r3, #1
 801a330:	f2c0 80d6 	blt.w	801a4e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801a334:	9a08      	ldr	r2, [sp, #32]
 801a336:	4293      	cmp	r3, r2
 801a338:	f280 80d2 	bge.w	801a4e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801a33c:	f8dd 9018 	ldr.w	r9, [sp, #24]
 801a340:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801a344:	46d8      	mov	r8, fp
 801a346:	f1b9 0f00 	cmp.w	r9, #0
 801a34a:	dde3      	ble.n	801a314 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801a34c:	1420      	asrs	r0, r4, #16
 801a34e:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a352:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a356:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a35a:	f100 8127 	bmi.w	801a5ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801a35e:	9d07      	ldr	r5, [sp, #28]
 801a360:	f100 0c01 	add.w	ip, r0, #1
 801a364:	4565      	cmp	r5, ip
 801a366:	f340 8123 	ble.w	801a5b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801a36a:	2b00      	cmp	r3, #0
 801a36c:	f2c0 8120 	blt.w	801a5b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801a370:	9d08      	ldr	r5, [sp, #32]
 801a372:	f103 0c01 	add.w	ip, r3, #1
 801a376:	4565      	cmp	r5, ip
 801a378:	f340 811a 	ble.w	801a5b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801a37c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a37e:	fb03 0305 	mla	r3, r3, r5, r0
 801a382:	0858      	lsrs	r0, r3, #1
 801a384:	07dd      	lsls	r5, r3, #31
 801a386:	5c38      	ldrb	r0, [r7, r0]
 801a388:	bf54      	ite	pl
 801a38a:	f000 000f 	andpl.w	r0, r0, #15
 801a38e:	1100      	asrmi	r0, r0, #4
 801a390:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a394:	b2c0      	uxtb	r0, r0
 801a396:	2a00      	cmp	r2, #0
 801a398:	f000 80ed 	beq.w	801a576 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x332>
 801a39c:	f103 0e01 	add.w	lr, r3, #1
 801a3a0:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801a3a4:	f01e 0f01 	tst.w	lr, #1
 801a3a8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a3ac:	bf0c      	ite	eq
 801a3ae:	f00c 0c0f 	andeq.w	ip, ip, #15
 801a3b2:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801a3b6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a3ba:	fa5f fc8c 	uxtb.w	ip, ip
 801a3be:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 801a3c2:	b1f9      	cbz	r1, 801a404 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801a3c4:	4453      	add	r3, sl
 801a3c6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a3ca:	07dd      	lsls	r5, r3, #31
 801a3cc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a3d0:	bf54      	ite	pl
 801a3d2:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a3d6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a3da:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a3de:	3301      	adds	r3, #1
 801a3e0:	fa5f fc8c 	uxtb.w	ip, ip
 801a3e4:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 801a3e8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a3ec:	07dd      	lsls	r5, r3, #31
 801a3ee:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a3f2:	bf54      	ite	pl
 801a3f4:	f00c 030f 	andpl.w	r3, ip, #15
 801a3f8:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801a3fc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a400:	b2db      	uxtb	r3, r3
 801a402:	9310      	str	r3, [sp, #64]	; 0x40
 801a404:	b292      	uxth	r2, r2
 801a406:	b289      	uxth	r1, r1
 801a408:	fb02 f301 	mul.w	r3, r2, r1
 801a40c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801a410:	0112      	lsls	r2, r2, #4
 801a412:	b289      	uxth	r1, r1
 801a414:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801a418:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a41a:	1ad2      	subs	r2, r2, r3
 801a41c:	ebac 0c01 	sub.w	ip, ip, r1
 801a420:	b292      	uxth	r2, r2
 801a422:	436a      	muls	r2, r5
 801a424:	fa1f fc8c 	uxth.w	ip, ip
 801a428:	fb00 200c 	mla	r0, r0, ip, r2
 801a42c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a42e:	fb01 0102 	mla	r1, r1, r2, r0
 801a432:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a434:	fb03 1302 	mla	r3, r3, r2, r1
 801a438:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a43c:	2b00      	cmp	r3, #0
 801a43e:	d046      	beq.n	801a4ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a440:	4ac7      	ldr	r2, [pc, #796]	; (801a760 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801a442:	49c8      	ldr	r1, [pc, #800]	; (801a764 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801a444:	6812      	ldr	r2, [r2, #0]
 801a446:	ea4f 2e22 	mov.w	lr, r2, asr #8
 801a44a:	f3c2 0ccc 	ubfx	ip, r2, #3, #13
 801a44e:	ea01 02c2 	and.w	r2, r1, r2, lsl #3
 801a452:	b2d2      	uxtb	r2, r2
 801a454:	2bff      	cmp	r3, #255	; 0xff
 801a456:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a45a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a45e:	4615      	mov	r5, r2
 801a460:	f000 809c 	beq.w	801a59c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 801a464:	f8b8 0000 	ldrh.w	r0, [r8]
 801a468:	b29a      	uxth	r2, r3
 801a46a:	1201      	asrs	r1, r0, #8
 801a46c:	43db      	mvns	r3, r3
 801a46e:	b2db      	uxtb	r3, r3
 801a470:	fb1e fe02 	smulbb	lr, lr, r2
 801a474:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a478:	fb01 e103 	mla	r1, r1, r3, lr
 801a47c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a480:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a484:	fb1c fc02 	smulbb	ip, ip, r2
 801a488:	fb0e cc03 	mla	ip, lr, r3, ip
 801a48c:	00c0      	lsls	r0, r0, #3
 801a48e:	fa1f fc8c 	uxth.w	ip, ip
 801a492:	fb15 f202 	smulbb	r2, r5, r2
 801a496:	b2c0      	uxtb	r0, r0
 801a498:	b289      	uxth	r1, r1
 801a49a:	fb00 2303 	mla	r3, r0, r3, r2
 801a49e:	f10c 0e01 	add.w	lr, ip, #1
 801a4a2:	b29b      	uxth	r3, r3
 801a4a4:	1c4a      	adds	r2, r1, #1
 801a4a6:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 801a4aa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a4ae:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a4b2:	1c5a      	adds	r2, r3, #1
 801a4b4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a4b8:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801a4bc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801a4c0:	ea4c 0101 	orr.w	r1, ip, r1
 801a4c4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a4c8:	4319      	orrs	r1, r3
 801a4ca:	f8a8 1000 	strh.w	r1, [r8]
 801a4ce:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a4d0:	441c      	add	r4, r3
 801a4d2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a4d4:	f108 0802 	add.w	r8, r8, #2
 801a4d8:	441e      	add	r6, r3
 801a4da:	f109 39ff 	add.w	r9, r9, #4294967295
 801a4de:	e732      	b.n	801a346 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x102>
 801a4e0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a4e2:	441c      	add	r4, r3
 801a4e4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a4e6:	441e      	add	r6, r3
 801a4e8:	9b06      	ldr	r3, [sp, #24]
 801a4ea:	3b01      	subs	r3, #1
 801a4ec:	9306      	str	r3, [sp, #24]
 801a4ee:	f10b 0b02 	add.w	fp, fp, #2
 801a4f2:	e6df      	b.n	801a2b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801a4f4:	f47f aef0 	bne.w	801a2d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801a4f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a4fa:	2b00      	cmp	r3, #0
 801a4fc:	f340 813a 	ble.w	801a774 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801a500:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a504:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a508:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a50c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a50e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a512:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a516:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a51a:	eef0 6a48 	vmov.f32	s13, s16
 801a51e:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a522:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a526:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a52a:	ee16 4a90 	vmov	r4, s13
 801a52e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a532:	eef0 6a68 	vmov.f32	s13, s17
 801a536:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a53a:	ee18 2a10 	vmov	r2, s16
 801a53e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a542:	fb92 f3f3 	sdiv	r3, r2, r3
 801a546:	ee18 2a90 	vmov	r2, s17
 801a54a:	9329      	str	r3, [sp, #164]	; 0xa4
 801a54c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a54e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a552:	932a      	str	r3, [sp, #168]	; 0xa8
 801a554:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a556:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a558:	3b01      	subs	r3, #1
 801a55a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a55e:	930a      	str	r3, [sp, #40]	; 0x28
 801a560:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a562:	bf08      	it	eq
 801a564:	4613      	moveq	r3, r2
 801a566:	ee16 6a90 	vmov	r6, s13
 801a56a:	9306      	str	r3, [sp, #24]
 801a56c:	eef0 8a67 	vmov.f32	s17, s15
 801a570:	eeb0 8a47 	vmov.f32	s16, s14
 801a574:	e697      	b.n	801a2a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801a576:	2900      	cmp	r1, #0
 801a578:	f43f af44 	beq.w	801a404 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801a57c:	4453      	add	r3, sl
 801a57e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a582:	07db      	lsls	r3, r3, #31
 801a584:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a588:	bf54      	ite	pl
 801a58a:	f00c 030f 	andpl.w	r3, ip, #15
 801a58e:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801a592:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a596:	b2db      	uxtb	r3, r3
 801a598:	930b      	str	r3, [sp, #44]	; 0x2c
 801a59a:	e733      	b.n	801a404 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801a59c:	08d2      	lsrs	r2, r2, #3
 801a59e:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801a5a2:	ea4e 0ccc 	orr.w	ip, lr, ip, lsl #3
 801a5a6:	f8a8 c000 	strh.w	ip, [r8]
 801a5aa:	e790      	b.n	801a4ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a5ac:	1c45      	adds	r5, r0, #1
 801a5ae:	d18e      	bne.n	801a4ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a5b0:	9d07      	ldr	r5, [sp, #28]
 801a5b2:	4285      	cmp	r5, r0
 801a5b4:	dd8b      	ble.n	801a4ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a5b6:	1c5d      	adds	r5, r3, #1
 801a5b8:	db89      	blt.n	801a4ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a5ba:	9d08      	ldr	r5, [sp, #32]
 801a5bc:	429d      	cmp	r5, r3
 801a5be:	dd86      	ble.n	801a4ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a5c0:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801a5c4:	9b07      	ldr	r3, [sp, #28]
 801a5c6:	9300      	str	r3, [sp, #0]
 801a5c8:	e9cd 2104 	strd	r2, r1, [sp, #16]
 801a5cc:	9501      	str	r5, [sp, #4]
 801a5ce:	4653      	mov	r3, sl
 801a5d0:	463a      	mov	r2, r7
 801a5d2:	4641      	mov	r1, r8
 801a5d4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a5d6:	f7ff fd4f 	bl	801a078 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801a5da:	e778      	b.n	801a4ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a5dc:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a5de:	1422      	asrs	r2, r4, #16
 801a5e0:	1433      	asrs	r3, r6, #16
 801a5e2:	fb01 2303 	mla	r3, r1, r3, r2
 801a5e6:	085a      	lsrs	r2, r3, #1
 801a5e8:	07d9      	lsls	r1, r3, #31
 801a5ea:	5cba      	ldrb	r2, [r7, r2]
 801a5ec:	bf54      	ite	pl
 801a5ee:	f002 020f 	andpl.w	r2, r2, #15
 801a5f2:	1112      	asrmi	r2, r2, #4
 801a5f4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a5f8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a5fc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a600:	b2d2      	uxtb	r2, r2
 801a602:	2800      	cmp	r0, #0
 801a604:	f000 809b 	beq.w	801a73e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fa>
 801a608:	f103 0e01 	add.w	lr, r3, #1
 801a60c:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801a610:	f01e 0f01 	tst.w	lr, #1
 801a614:	5c79      	ldrb	r1, [r7, r1]
 801a616:	bf0c      	ite	eq
 801a618:	f001 010f 	andeq.w	r1, r1, #15
 801a61c:	1109      	asrne	r1, r1, #4
 801a61e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a622:	b2c9      	uxtb	r1, r1
 801a624:	9111      	str	r1, [sp, #68]	; 0x44
 801a626:	f1bc 0f00 	cmp.w	ip, #0
 801a62a:	d018      	beq.n	801a65e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801a62c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a62e:	440b      	add	r3, r1
 801a630:	0859      	lsrs	r1, r3, #1
 801a632:	07dd      	lsls	r5, r3, #31
 801a634:	5c79      	ldrb	r1, [r7, r1]
 801a636:	bf54      	ite	pl
 801a638:	f001 010f 	andpl.w	r1, r1, #15
 801a63c:	1109      	asrmi	r1, r1, #4
 801a63e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a642:	b2c9      	uxtb	r1, r1
 801a644:	3301      	adds	r3, #1
 801a646:	910c      	str	r1, [sp, #48]	; 0x30
 801a648:	0859      	lsrs	r1, r3, #1
 801a64a:	07dd      	lsls	r5, r3, #31
 801a64c:	5c79      	ldrb	r1, [r7, r1]
 801a64e:	bf54      	ite	pl
 801a650:	f001 010f 	andpl.w	r1, r1, #15
 801a654:	1109      	asrmi	r1, r1, #4
 801a656:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a65a:	b2c9      	uxtb	r1, r1
 801a65c:	9112      	str	r1, [sp, #72]	; 0x48
 801a65e:	b280      	uxth	r0, r0
 801a660:	fa1f fc8c 	uxth.w	ip, ip
 801a664:	fb00 f30c 	mul.w	r3, r0, ip
 801a668:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801a66c:	0100      	lsls	r0, r0, #4
 801a66e:	fa1f fc8c 	uxth.w	ip, ip
 801a672:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801a676:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a678:	1ac0      	subs	r0, r0, r3
 801a67a:	eba1 010c 	sub.w	r1, r1, ip
 801a67e:	b280      	uxth	r0, r0
 801a680:	b289      	uxth	r1, r1
 801a682:	4368      	muls	r0, r5
 801a684:	fb02 0201 	mla	r2, r2, r1, r0
 801a688:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a68a:	fb0c 2c01 	mla	ip, ip, r1, r2
 801a68e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a690:	fb03 c302 	mla	r3, r3, r2, ip
 801a694:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a698:	2b00      	cmp	r3, #0
 801a69a:	d047      	beq.n	801a72c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 801a69c:	4a30      	ldr	r2, [pc, #192]	; (801a760 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801a69e:	4931      	ldr	r1, [pc, #196]	; (801a764 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801a6a0:	6812      	ldr	r2, [r2, #0]
 801a6a2:	2bff      	cmp	r3, #255	; 0xff
 801a6a4:	ea4f 2e22 	mov.w	lr, r2, asr #8
 801a6a8:	f3c2 0ccc 	ubfx	ip, r2, #3, #13
 801a6ac:	ea01 02c2 	and.w	r2, r1, r2, lsl #3
 801a6b0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a6b4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a6b8:	b2d2      	uxtb	r2, r2
 801a6ba:	d055      	beq.n	801a768 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 801a6bc:	f8b8 0000 	ldrh.w	r0, [r8]
 801a6c0:	fa1f f983 	uxth.w	r9, r3
 801a6c4:	1201      	asrs	r1, r0, #8
 801a6c6:	43db      	mvns	r3, r3
 801a6c8:	b2db      	uxtb	r3, r3
 801a6ca:	fb1e fe09 	smulbb	lr, lr, r9
 801a6ce:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a6d2:	fb01 e103 	mla	r1, r1, r3, lr
 801a6d6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a6da:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a6de:	fb1c fc09 	smulbb	ip, ip, r9
 801a6e2:	fb0e cc03 	mla	ip, lr, r3, ip
 801a6e6:	00c0      	lsls	r0, r0, #3
 801a6e8:	fa1f fc8c 	uxth.w	ip, ip
 801a6ec:	b2c0      	uxtb	r0, r0
 801a6ee:	fb12 f209 	smulbb	r2, r2, r9
 801a6f2:	b289      	uxth	r1, r1
 801a6f4:	fb00 2203 	mla	r2, r0, r3, r2
 801a6f8:	f10c 0e01 	add.w	lr, ip, #1
 801a6fc:	b292      	uxth	r2, r2
 801a6fe:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 801a702:	f101 0e01 	add.w	lr, r1, #1
 801a706:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a70a:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 801a70e:	1c53      	adds	r3, r2, #1
 801a710:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a714:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801a718:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801a71c:	ea4c 0c01 	orr.w	ip, ip, r1
 801a720:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a724:	ea4c 0c02 	orr.w	ip, ip, r2
 801a728:	f8a8 c000 	strh.w	ip, [r8]
 801a72c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a72e:	441c      	add	r4, r3
 801a730:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a732:	f108 0802 	add.w	r8, r8, #2
 801a736:	441e      	add	r6, r3
 801a738:	f10a 3aff 	add.w	sl, sl, #4294967295
 801a73c:	e5e6      	b.n	801a30c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 801a73e:	f1bc 0f00 	cmp.w	ip, #0
 801a742:	d08c      	beq.n	801a65e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801a744:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a746:	440b      	add	r3, r1
 801a748:	0859      	lsrs	r1, r3, #1
 801a74a:	07db      	lsls	r3, r3, #31
 801a74c:	5c79      	ldrb	r1, [r7, r1]
 801a74e:	bf54      	ite	pl
 801a750:	f001 010f 	andpl.w	r1, r1, #15
 801a754:	1109      	asrmi	r1, r1, #4
 801a756:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a75a:	b2c9      	uxtb	r1, r1
 801a75c:	910c      	str	r1, [sp, #48]	; 0x30
 801a75e:	e77e      	b.n	801a65e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801a760:	20026908 	.word	0x20026908
 801a764:	0007fff8 	.word	0x0007fff8
 801a768:	08d2      	lsrs	r2, r2, #3
 801a76a:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801a76e:	ea4e 0ccc 	orr.w	ip, lr, ip, lsl #3
 801a772:	e7d9      	b.n	801a728 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e4>
 801a774:	b015      	add	sp, #84	; 0x54
 801a776:	ecbd 8b08 	vpop	{d8-d11}
 801a77a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a77e:	bf00      	nop

0801a780 <CRC_Lock>:
 801a780:	b530      	push	{r4, r5, lr}
 801a782:	4a1d      	ldr	r2, [pc, #116]	; (801a7f8 <CRC_Lock+0x78>)
 801a784:	6813      	ldr	r3, [r2, #0]
 801a786:	f023 0301 	bic.w	r3, r3, #1
 801a78a:	6013      	str	r3, [r2, #0]
 801a78c:	4b1b      	ldr	r3, [pc, #108]	; (801a7fc <CRC_Lock+0x7c>)
 801a78e:	681a      	ldr	r2, [r3, #0]
 801a790:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801a794:	4022      	ands	r2, r4
 801a796:	f24c 2540 	movw	r5, #49728	; 0xc240
 801a79a:	42aa      	cmp	r2, r5
 801a79c:	d005      	beq.n	801a7aa <CRC_Lock+0x2a>
 801a79e:	681b      	ldr	r3, [r3, #0]
 801a7a0:	f24c 2270 	movw	r2, #49776	; 0xc270
 801a7a4:	4023      	ands	r3, r4
 801a7a6:	4293      	cmp	r3, r2
 801a7a8:	d11d      	bne.n	801a7e6 <CRC_Lock+0x66>
 801a7aa:	4b15      	ldr	r3, [pc, #84]	; (801a800 <CRC_Lock+0x80>)
 801a7ac:	681b      	ldr	r3, [r3, #0]
 801a7ae:	b9d3      	cbnz	r3, 801a7e6 <CRC_Lock+0x66>
 801a7b0:	4a14      	ldr	r2, [pc, #80]	; (801a804 <CRC_Lock+0x84>)
 801a7b2:	6813      	ldr	r3, [r2, #0]
 801a7b4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801a7b8:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801a7bc:	d006      	beq.n	801a7cc <CRC_Lock+0x4c>
 801a7be:	6813      	ldr	r3, [r2, #0]
 801a7c0:	f240 4283 	movw	r2, #1155	; 0x483
 801a7c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801a7c8:	4293      	cmp	r3, r2
 801a7ca:	d10c      	bne.n	801a7e6 <CRC_Lock+0x66>
 801a7cc:	4b0e      	ldr	r3, [pc, #56]	; (801a808 <CRC_Lock+0x88>)
 801a7ce:	2201      	movs	r2, #1
 801a7d0:	601a      	str	r2, [r3, #0]
 801a7d2:	681a      	ldr	r2, [r3, #0]
 801a7d4:	2a00      	cmp	r2, #0
 801a7d6:	d1fc      	bne.n	801a7d2 <CRC_Lock+0x52>
 801a7d8:	4b0c      	ldr	r3, [pc, #48]	; (801a80c <CRC_Lock+0x8c>)
 801a7da:	6018      	str	r0, [r3, #0]
 801a7dc:	6818      	ldr	r0, [r3, #0]
 801a7de:	1a43      	subs	r3, r0, r1
 801a7e0:	4258      	negs	r0, r3
 801a7e2:	4158      	adcs	r0, r3
 801a7e4:	bd30      	pop	{r4, r5, pc}
 801a7e6:	4b0a      	ldr	r3, [pc, #40]	; (801a810 <CRC_Lock+0x90>)
 801a7e8:	2201      	movs	r2, #1
 801a7ea:	601a      	str	r2, [r3, #0]
 801a7ec:	681a      	ldr	r2, [r3, #0]
 801a7ee:	2a00      	cmp	r2, #0
 801a7f0:	d1fc      	bne.n	801a7ec <CRC_Lock+0x6c>
 801a7f2:	4b08      	ldr	r3, [pc, #32]	; (801a814 <CRC_Lock+0x94>)
 801a7f4:	e7f1      	b.n	801a7da <CRC_Lock+0x5a>
 801a7f6:	bf00      	nop
 801a7f8:	e0002000 	.word	0xe0002000
 801a7fc:	e000ed00 	.word	0xe000ed00
 801a800:	e0042000 	.word	0xe0042000
 801a804:	5c001000 	.word	0x5c001000
 801a808:	58024c08 	.word	0x58024c08
 801a80c:	58024c00 	.word	0x58024c00
 801a810:	40023008 	.word	0x40023008
 801a814:	40023000 	.word	0x40023000

0801a818 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801a818:	6101      	str	r1, [r0, #16]
 801a81a:	4770      	bx	lr

0801a81c <_ZN8touchgfx8Gestures4tickEv>:
 801a81c:	7b83      	ldrb	r3, [r0, #14]
 801a81e:	b14b      	cbz	r3, 801a834 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801a820:	8903      	ldrh	r3, [r0, #8]
 801a822:	3301      	adds	r3, #1
 801a824:	b29b      	uxth	r3, r3
 801a826:	2b07      	cmp	r3, #7
 801a828:	8103      	strh	r3, [r0, #8]
 801a82a:	bf81      	itttt	hi
 801a82c:	2300      	movhi	r3, #0
 801a82e:	8143      	strhhi	r3, [r0, #10]
 801a830:	8183      	strhhi	r3, [r0, #12]
 801a832:	7383      	strbhi	r3, [r0, #14]
 801a834:	4770      	bx	lr
	...

0801a838 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801a838:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801a83c:	4604      	mov	r4, r0
 801a83e:	8880      	ldrh	r0, [r0, #4]
 801a840:	f8ad 0006 	strh.w	r0, [sp, #6]
 801a844:	4698      	mov	r8, r3
 801a846:	eba8 0000 	sub.w	r0, r8, r0
 801a84a:	4b1c      	ldr	r3, [pc, #112]	; (801a8bc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801a84c:	9300      	str	r3, [sp, #0]
 801a84e:	b280      	uxth	r0, r0
 801a850:	2300      	movs	r3, #0
 801a852:	f88d 3004 	strb.w	r3, [sp, #4]
 801a856:	b203      	sxth	r3, r0
 801a858:	2b00      	cmp	r3, #0
 801a85a:	bfb8      	it	lt
 801a85c:	4240      	neglt	r0, r0
 801a85e:	4617      	mov	r7, r2
 801a860:	8aa2      	ldrh	r2, [r4, #20]
 801a862:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801a866:	f8ad 800a 	strh.w	r8, [sp, #10]
 801a86a:	bfb8      	it	lt
 801a86c:	b203      	sxthlt	r3, r0
 801a86e:	460e      	mov	r6, r1
 801a870:	4293      	cmp	r3, r2
 801a872:	88e1      	ldrh	r1, [r4, #6]
 801a874:	f8ad 1008 	strh.w	r1, [sp, #8]
 801a878:	f8ad 500c 	strh.w	r5, [sp, #12]
 801a87c:	dc08      	bgt.n	801a890 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801a87e:	1a69      	subs	r1, r5, r1
 801a880:	b289      	uxth	r1, r1
 801a882:	b20b      	sxth	r3, r1
 801a884:	2b00      	cmp	r3, #0
 801a886:	bfbc      	itt	lt
 801a888:	4249      	neglt	r1, r1
 801a88a:	b20b      	sxthlt	r3, r1
 801a88c:	429a      	cmp	r2, r3
 801a88e:	da13      	bge.n	801a8b8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801a890:	6920      	ldr	r0, [r4, #16]
 801a892:	6803      	ldr	r3, [r0, #0]
 801a894:	4669      	mov	r1, sp
 801a896:	685b      	ldr	r3, [r3, #4]
 801a898:	4798      	blx	r3
 801a89a:	eba8 0606 	sub.w	r6, r8, r6
 801a89e:	2300      	movs	r3, #0
 801a8a0:	1bef      	subs	r7, r5, r7
 801a8a2:	2001      	movs	r0, #1
 801a8a4:	8123      	strh	r3, [r4, #8]
 801a8a6:	8166      	strh	r6, [r4, #10]
 801a8a8:	81a7      	strh	r7, [r4, #12]
 801a8aa:	f8a4 8004 	strh.w	r8, [r4, #4]
 801a8ae:	80e5      	strh	r5, [r4, #6]
 801a8b0:	73a0      	strb	r0, [r4, #14]
 801a8b2:	b004      	add	sp, #16
 801a8b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a8b8:	2000      	movs	r0, #0
 801a8ba:	e7fa      	b.n	801a8b2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801a8bc:	0801d958 	.word	0x0801d958

0801a8c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801a8c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a8c2:	461e      	mov	r6, r3
 801a8c4:	1e4b      	subs	r3, r1, #1
 801a8c6:	2b01      	cmp	r3, #1
 801a8c8:	b085      	sub	sp, #20
 801a8ca:	4604      	mov	r4, r0
 801a8cc:	460d      	mov	r5, r1
 801a8ce:	4617      	mov	r7, r2
 801a8d0:	d84b      	bhi.n	801a96a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801a8d2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a8d6:	1cd3      	adds	r3, r2, #3
 801a8d8:	b29b      	uxth	r3, r3
 801a8da:	2b06      	cmp	r3, #6
 801a8dc:	d916      	bls.n	801a90c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801a8de:	f8df c098 	ldr.w	ip, [pc, #152]	; 801a978 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb8>
 801a8e2:	f8cd c004 	str.w	ip, [sp, #4]
 801a8e6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a8ea:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a8ee:	6900      	ldr	r0, [r0, #16]
 801a8f0:	f8ad 100c 	strh.w	r1, [sp, #12]
 801a8f4:	f04f 0c00 	mov.w	ip, #0
 801a8f8:	f88d c008 	strb.w	ip, [sp, #8]
 801a8fc:	f8ad 200a 	strh.w	r2, [sp, #10]
 801a900:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a904:	6803      	ldr	r3, [r0, #0]
 801a906:	a901      	add	r1, sp, #4
 801a908:	689b      	ldr	r3, [r3, #8]
 801a90a:	4798      	blx	r3
 801a90c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801a910:	1cd3      	adds	r3, r2, #3
 801a912:	b29b      	uxth	r3, r3
 801a914:	2b06      	cmp	r3, #6
 801a916:	d916      	bls.n	801a946 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a918:	f8df c05c 	ldr.w	ip, [pc, #92]	; 801a978 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb8>
 801a91c:	f8cd c004 	str.w	ip, [sp, #4]
 801a920:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a924:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a928:	6920      	ldr	r0, [r4, #16]
 801a92a:	f8ad 100c 	strh.w	r1, [sp, #12]
 801a92e:	f04f 0c01 	mov.w	ip, #1
 801a932:	f88d c008 	strb.w	ip, [sp, #8]
 801a936:	f8ad 200a 	strh.w	r2, [sp, #10]
 801a93a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a93e:	6803      	ldr	r3, [r0, #0]
 801a940:	a901      	add	r1, sp, #4
 801a942:	689b      	ldr	r3, [r3, #8]
 801a944:	4798      	blx	r3
 801a946:	4b0b      	ldr	r3, [pc, #44]	; (801a974 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb4>)
 801a948:	9301      	str	r3, [sp, #4]
 801a94a:	6920      	ldr	r0, [r4, #16]
 801a94c:	f88d 5008 	strb.w	r5, [sp, #8]
 801a950:	2300      	movs	r3, #0
 801a952:	f8ad 700a 	strh.w	r7, [sp, #10]
 801a956:	f8ad 600c 	strh.w	r6, [sp, #12]
 801a95a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a95e:	6803      	ldr	r3, [r0, #0]
 801a960:	a901      	add	r1, sp, #4
 801a962:	681b      	ldr	r3, [r3, #0]
 801a964:	4798      	blx	r3
 801a966:	b005      	add	sp, #20
 801a968:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a96a:	2900      	cmp	r1, #0
 801a96c:	d1eb      	bne.n	801a946 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a96e:	80a2      	strh	r2, [r4, #4]
 801a970:	80c6      	strh	r6, [r0, #6]
 801a972:	e7e8      	b.n	801a946 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a974:	0801d944 	.word	0x0801d944
 801a978:	0801d96c 	.word	0x0801d96c

0801a97c <__aeabi_atexit>:
 801a97c:	460b      	mov	r3, r1
 801a97e:	4601      	mov	r1, r0
 801a980:	4618      	mov	r0, r3
 801a982:	f000 b853 	b.w	801aa2c <__cxa_atexit>

0801a986 <__cxa_pure_virtual>:
 801a986:	b508      	push	{r3, lr}
 801a988:	f000 f820 	bl	801a9cc <_ZSt9terminatev>

0801a98c <_ZdlPvj>:
 801a98c:	f000 b80f 	b.w	801a9ae <_ZdlPv>

0801a990 <__cxa_guard_acquire>:
 801a990:	6803      	ldr	r3, [r0, #0]
 801a992:	07db      	lsls	r3, r3, #31
 801a994:	d406      	bmi.n	801a9a4 <__cxa_guard_acquire+0x14>
 801a996:	7843      	ldrb	r3, [r0, #1]
 801a998:	b103      	cbz	r3, 801a99c <__cxa_guard_acquire+0xc>
 801a99a:	deff      	udf	#255	; 0xff
 801a99c:	2301      	movs	r3, #1
 801a99e:	7043      	strb	r3, [r0, #1]
 801a9a0:	4618      	mov	r0, r3
 801a9a2:	4770      	bx	lr
 801a9a4:	2000      	movs	r0, #0
 801a9a6:	4770      	bx	lr

0801a9a8 <__cxa_guard_release>:
 801a9a8:	2301      	movs	r3, #1
 801a9aa:	6003      	str	r3, [r0, #0]
 801a9ac:	4770      	bx	lr

0801a9ae <_ZdlPv>:
 801a9ae:	f000 b88f 	b.w	801aad0 <free>

0801a9b2 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801a9b2:	b508      	push	{r3, lr}
 801a9b4:	4780      	blx	r0
 801a9b6:	f000 f80e 	bl	801a9d6 <abort>
	...

0801a9bc <_ZSt13get_terminatev>:
 801a9bc:	4b02      	ldr	r3, [pc, #8]	; (801a9c8 <_ZSt13get_terminatev+0xc>)
 801a9be:	6818      	ldr	r0, [r3, #0]
 801a9c0:	f3bf 8f5b 	dmb	ish
 801a9c4:	4770      	bx	lr
 801a9c6:	bf00      	nop
 801a9c8:	20000090 	.word	0x20000090

0801a9cc <_ZSt9terminatev>:
 801a9cc:	b508      	push	{r3, lr}
 801a9ce:	f7ff fff5 	bl	801a9bc <_ZSt13get_terminatev>
 801a9d2:	f7ff ffee 	bl	801a9b2 <_ZN10__cxxabiv111__terminateEPFvvE>

0801a9d6 <abort>:
 801a9d6:	b508      	push	{r3, lr}
 801a9d8:	2006      	movs	r0, #6
 801a9da:	f000 fc3d 	bl	801b258 <raise>
 801a9de:	2001      	movs	r0, #1
 801a9e0:	f7e7 fd28 	bl	8002434 <_exit>

0801a9e4 <__assert_func>:
 801a9e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801a9e6:	461c      	mov	r4, r3
 801a9e8:	4b09      	ldr	r3, [pc, #36]	; (801aa10 <__assert_func+0x2c>)
 801a9ea:	681b      	ldr	r3, [r3, #0]
 801a9ec:	4605      	mov	r5, r0
 801a9ee:	68d8      	ldr	r0, [r3, #12]
 801a9f0:	b152      	cbz	r2, 801aa08 <__assert_func+0x24>
 801a9f2:	4b08      	ldr	r3, [pc, #32]	; (801aa14 <__assert_func+0x30>)
 801a9f4:	9100      	str	r1, [sp, #0]
 801a9f6:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801a9fa:	4907      	ldr	r1, [pc, #28]	; (801aa18 <__assert_func+0x34>)
 801a9fc:	462b      	mov	r3, r5
 801a9fe:	4622      	mov	r2, r4
 801aa00:	f000 f828 	bl	801aa54 <fiprintf>
 801aa04:	f7ff ffe7 	bl	801a9d6 <abort>
 801aa08:	4b04      	ldr	r3, [pc, #16]	; (801aa1c <__assert_func+0x38>)
 801aa0a:	461a      	mov	r2, r3
 801aa0c:	e7f2      	b.n	801a9f4 <__assert_func+0x10>
 801aa0e:	bf00      	nop
 801aa10:	20000094 	.word	0x20000094
 801aa14:	0801edb4 	.word	0x0801edb4
 801aa18:	0801edc1 	.word	0x0801edc1
 801aa1c:	0801edef 	.word	0x0801edef

0801aa20 <atexit>:
 801aa20:	2300      	movs	r3, #0
 801aa22:	4601      	mov	r1, r0
 801aa24:	461a      	mov	r2, r3
 801aa26:	4618      	mov	r0, r3
 801aa28:	f000 bd12 	b.w	801b450 <__register_exitproc>

0801aa2c <__cxa_atexit>:
 801aa2c:	b510      	push	{r4, lr}
 801aa2e:	4c05      	ldr	r4, [pc, #20]	; (801aa44 <__cxa_atexit+0x18>)
 801aa30:	4613      	mov	r3, r2
 801aa32:	b12c      	cbz	r4, 801aa40 <__cxa_atexit+0x14>
 801aa34:	460a      	mov	r2, r1
 801aa36:	4601      	mov	r1, r0
 801aa38:	2002      	movs	r0, #2
 801aa3a:	f000 fd09 	bl	801b450 <__register_exitproc>
 801aa3e:	bd10      	pop	{r4, pc}
 801aa40:	4620      	mov	r0, r4
 801aa42:	e7fc      	b.n	801aa3e <__cxa_atexit+0x12>
 801aa44:	0801b451 	.word	0x0801b451

0801aa48 <__errno>:
 801aa48:	4b01      	ldr	r3, [pc, #4]	; (801aa50 <__errno+0x8>)
 801aa4a:	6818      	ldr	r0, [r3, #0]
 801aa4c:	4770      	bx	lr
 801aa4e:	bf00      	nop
 801aa50:	20000094 	.word	0x20000094

0801aa54 <fiprintf>:
 801aa54:	b40e      	push	{r1, r2, r3}
 801aa56:	b503      	push	{r0, r1, lr}
 801aa58:	4601      	mov	r1, r0
 801aa5a:	ab03      	add	r3, sp, #12
 801aa5c:	4805      	ldr	r0, [pc, #20]	; (801aa74 <fiprintf+0x20>)
 801aa5e:	f853 2b04 	ldr.w	r2, [r3], #4
 801aa62:	6800      	ldr	r0, [r0, #0]
 801aa64:	9301      	str	r3, [sp, #4]
 801aa66:	f000 f921 	bl	801acac <_vfiprintf_r>
 801aa6a:	b002      	add	sp, #8
 801aa6c:	f85d eb04 	ldr.w	lr, [sp], #4
 801aa70:	b003      	add	sp, #12
 801aa72:	4770      	bx	lr
 801aa74:	20000094 	.word	0x20000094

0801aa78 <__libc_init_array>:
 801aa78:	b570      	push	{r4, r5, r6, lr}
 801aa7a:	4e0d      	ldr	r6, [pc, #52]	; (801aab0 <__libc_init_array+0x38>)
 801aa7c:	4c0d      	ldr	r4, [pc, #52]	; (801aab4 <__libc_init_array+0x3c>)
 801aa7e:	1ba4      	subs	r4, r4, r6
 801aa80:	10a4      	asrs	r4, r4, #2
 801aa82:	2500      	movs	r5, #0
 801aa84:	42a5      	cmp	r5, r4
 801aa86:	d109      	bne.n	801aa9c <__libc_init_array+0x24>
 801aa88:	4e0b      	ldr	r6, [pc, #44]	; (801aab8 <__libc_init_array+0x40>)
 801aa8a:	4c0c      	ldr	r4, [pc, #48]	; (801aabc <__libc_init_array+0x44>)
 801aa8c:	f001 f96a 	bl	801bd64 <_init>
 801aa90:	1ba4      	subs	r4, r4, r6
 801aa92:	10a4      	asrs	r4, r4, #2
 801aa94:	2500      	movs	r5, #0
 801aa96:	42a5      	cmp	r5, r4
 801aa98:	d105      	bne.n	801aaa6 <__libc_init_array+0x2e>
 801aa9a:	bd70      	pop	{r4, r5, r6, pc}
 801aa9c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801aaa0:	4798      	blx	r3
 801aaa2:	3501      	adds	r5, #1
 801aaa4:	e7ee      	b.n	801aa84 <__libc_init_array+0xc>
 801aaa6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801aaaa:	4798      	blx	r3
 801aaac:	3501      	adds	r5, #1
 801aaae:	e7f2      	b.n	801aa96 <__libc_init_array+0x1e>
 801aab0:	08032f14 	.word	0x08032f14
 801aab4:	08032f14 	.word	0x08032f14
 801aab8:	08032f14 	.word	0x08032f14
 801aabc:	08032f28 	.word	0x08032f28

0801aac0 <malloc>:
 801aac0:	4b02      	ldr	r3, [pc, #8]	; (801aacc <malloc+0xc>)
 801aac2:	4601      	mov	r1, r0
 801aac4:	6818      	ldr	r0, [r3, #0]
 801aac6:	f000 b86d 	b.w	801aba4 <_malloc_r>
 801aaca:	bf00      	nop
 801aacc:	20000094 	.word	0x20000094

0801aad0 <free>:
 801aad0:	4b02      	ldr	r3, [pc, #8]	; (801aadc <free+0xc>)
 801aad2:	4601      	mov	r1, r0
 801aad4:	6818      	ldr	r0, [r3, #0]
 801aad6:	f000 b817 	b.w	801ab08 <_free_r>
 801aada:	bf00      	nop
 801aadc:	20000094 	.word	0x20000094

0801aae0 <memcpy>:
 801aae0:	b510      	push	{r4, lr}
 801aae2:	1e43      	subs	r3, r0, #1
 801aae4:	440a      	add	r2, r1
 801aae6:	4291      	cmp	r1, r2
 801aae8:	d100      	bne.n	801aaec <memcpy+0xc>
 801aaea:	bd10      	pop	{r4, pc}
 801aaec:	f811 4b01 	ldrb.w	r4, [r1], #1
 801aaf0:	f803 4f01 	strb.w	r4, [r3, #1]!
 801aaf4:	e7f7      	b.n	801aae6 <memcpy+0x6>

0801aaf6 <memset>:
 801aaf6:	4402      	add	r2, r0
 801aaf8:	4603      	mov	r3, r0
 801aafa:	4293      	cmp	r3, r2
 801aafc:	d100      	bne.n	801ab00 <memset+0xa>
 801aafe:	4770      	bx	lr
 801ab00:	f803 1b01 	strb.w	r1, [r3], #1
 801ab04:	e7f9      	b.n	801aafa <memset+0x4>
	...

0801ab08 <_free_r>:
 801ab08:	b538      	push	{r3, r4, r5, lr}
 801ab0a:	4605      	mov	r5, r0
 801ab0c:	2900      	cmp	r1, #0
 801ab0e:	d045      	beq.n	801ab9c <_free_r+0x94>
 801ab10:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801ab14:	1f0c      	subs	r4, r1, #4
 801ab16:	2b00      	cmp	r3, #0
 801ab18:	bfb8      	it	lt
 801ab1a:	18e4      	addlt	r4, r4, r3
 801ab1c:	f000 fef3 	bl	801b906 <__malloc_lock>
 801ab20:	4a1f      	ldr	r2, [pc, #124]	; (801aba0 <_free_r+0x98>)
 801ab22:	6813      	ldr	r3, [r2, #0]
 801ab24:	4610      	mov	r0, r2
 801ab26:	b933      	cbnz	r3, 801ab36 <_free_r+0x2e>
 801ab28:	6063      	str	r3, [r4, #4]
 801ab2a:	6014      	str	r4, [r2, #0]
 801ab2c:	4628      	mov	r0, r5
 801ab2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801ab32:	f000 bee9 	b.w	801b908 <__malloc_unlock>
 801ab36:	42a3      	cmp	r3, r4
 801ab38:	d90c      	bls.n	801ab54 <_free_r+0x4c>
 801ab3a:	6821      	ldr	r1, [r4, #0]
 801ab3c:	1862      	adds	r2, r4, r1
 801ab3e:	4293      	cmp	r3, r2
 801ab40:	bf04      	itt	eq
 801ab42:	681a      	ldreq	r2, [r3, #0]
 801ab44:	685b      	ldreq	r3, [r3, #4]
 801ab46:	6063      	str	r3, [r4, #4]
 801ab48:	bf04      	itt	eq
 801ab4a:	1852      	addeq	r2, r2, r1
 801ab4c:	6022      	streq	r2, [r4, #0]
 801ab4e:	6004      	str	r4, [r0, #0]
 801ab50:	e7ec      	b.n	801ab2c <_free_r+0x24>
 801ab52:	4613      	mov	r3, r2
 801ab54:	685a      	ldr	r2, [r3, #4]
 801ab56:	b10a      	cbz	r2, 801ab5c <_free_r+0x54>
 801ab58:	42a2      	cmp	r2, r4
 801ab5a:	d9fa      	bls.n	801ab52 <_free_r+0x4a>
 801ab5c:	6819      	ldr	r1, [r3, #0]
 801ab5e:	1858      	adds	r0, r3, r1
 801ab60:	42a0      	cmp	r0, r4
 801ab62:	d10b      	bne.n	801ab7c <_free_r+0x74>
 801ab64:	6820      	ldr	r0, [r4, #0]
 801ab66:	4401      	add	r1, r0
 801ab68:	1858      	adds	r0, r3, r1
 801ab6a:	4282      	cmp	r2, r0
 801ab6c:	6019      	str	r1, [r3, #0]
 801ab6e:	d1dd      	bne.n	801ab2c <_free_r+0x24>
 801ab70:	6810      	ldr	r0, [r2, #0]
 801ab72:	6852      	ldr	r2, [r2, #4]
 801ab74:	605a      	str	r2, [r3, #4]
 801ab76:	4401      	add	r1, r0
 801ab78:	6019      	str	r1, [r3, #0]
 801ab7a:	e7d7      	b.n	801ab2c <_free_r+0x24>
 801ab7c:	d902      	bls.n	801ab84 <_free_r+0x7c>
 801ab7e:	230c      	movs	r3, #12
 801ab80:	602b      	str	r3, [r5, #0]
 801ab82:	e7d3      	b.n	801ab2c <_free_r+0x24>
 801ab84:	6820      	ldr	r0, [r4, #0]
 801ab86:	1821      	adds	r1, r4, r0
 801ab88:	428a      	cmp	r2, r1
 801ab8a:	bf04      	itt	eq
 801ab8c:	6811      	ldreq	r1, [r2, #0]
 801ab8e:	6852      	ldreq	r2, [r2, #4]
 801ab90:	6062      	str	r2, [r4, #4]
 801ab92:	bf04      	itt	eq
 801ab94:	1809      	addeq	r1, r1, r0
 801ab96:	6021      	streq	r1, [r4, #0]
 801ab98:	605c      	str	r4, [r3, #4]
 801ab9a:	e7c7      	b.n	801ab2c <_free_r+0x24>
 801ab9c:	bd38      	pop	{r3, r4, r5, pc}
 801ab9e:	bf00      	nop
 801aba0:	20026a1c 	.word	0x20026a1c

0801aba4 <_malloc_r>:
 801aba4:	b570      	push	{r4, r5, r6, lr}
 801aba6:	1ccd      	adds	r5, r1, #3
 801aba8:	f025 0503 	bic.w	r5, r5, #3
 801abac:	3508      	adds	r5, #8
 801abae:	2d0c      	cmp	r5, #12
 801abb0:	bf38      	it	cc
 801abb2:	250c      	movcc	r5, #12
 801abb4:	2d00      	cmp	r5, #0
 801abb6:	4606      	mov	r6, r0
 801abb8:	db01      	blt.n	801abbe <_malloc_r+0x1a>
 801abba:	42a9      	cmp	r1, r5
 801abbc:	d903      	bls.n	801abc6 <_malloc_r+0x22>
 801abbe:	230c      	movs	r3, #12
 801abc0:	6033      	str	r3, [r6, #0]
 801abc2:	2000      	movs	r0, #0
 801abc4:	bd70      	pop	{r4, r5, r6, pc}
 801abc6:	f000 fe9e 	bl	801b906 <__malloc_lock>
 801abca:	4a21      	ldr	r2, [pc, #132]	; (801ac50 <_malloc_r+0xac>)
 801abcc:	6814      	ldr	r4, [r2, #0]
 801abce:	4621      	mov	r1, r4
 801abd0:	b991      	cbnz	r1, 801abf8 <_malloc_r+0x54>
 801abd2:	4c20      	ldr	r4, [pc, #128]	; (801ac54 <_malloc_r+0xb0>)
 801abd4:	6823      	ldr	r3, [r4, #0]
 801abd6:	b91b      	cbnz	r3, 801abe0 <_malloc_r+0x3c>
 801abd8:	4630      	mov	r0, r6
 801abda:	f000 fb05 	bl	801b1e8 <_sbrk_r>
 801abde:	6020      	str	r0, [r4, #0]
 801abe0:	4629      	mov	r1, r5
 801abe2:	4630      	mov	r0, r6
 801abe4:	f000 fb00 	bl	801b1e8 <_sbrk_r>
 801abe8:	1c43      	adds	r3, r0, #1
 801abea:	d124      	bne.n	801ac36 <_malloc_r+0x92>
 801abec:	230c      	movs	r3, #12
 801abee:	6033      	str	r3, [r6, #0]
 801abf0:	4630      	mov	r0, r6
 801abf2:	f000 fe89 	bl	801b908 <__malloc_unlock>
 801abf6:	e7e4      	b.n	801abc2 <_malloc_r+0x1e>
 801abf8:	680b      	ldr	r3, [r1, #0]
 801abfa:	1b5b      	subs	r3, r3, r5
 801abfc:	d418      	bmi.n	801ac30 <_malloc_r+0x8c>
 801abfe:	2b0b      	cmp	r3, #11
 801ac00:	d90f      	bls.n	801ac22 <_malloc_r+0x7e>
 801ac02:	600b      	str	r3, [r1, #0]
 801ac04:	50cd      	str	r5, [r1, r3]
 801ac06:	18cc      	adds	r4, r1, r3
 801ac08:	4630      	mov	r0, r6
 801ac0a:	f000 fe7d 	bl	801b908 <__malloc_unlock>
 801ac0e:	f104 000b 	add.w	r0, r4, #11
 801ac12:	1d23      	adds	r3, r4, #4
 801ac14:	f020 0007 	bic.w	r0, r0, #7
 801ac18:	1ac3      	subs	r3, r0, r3
 801ac1a:	d0d3      	beq.n	801abc4 <_malloc_r+0x20>
 801ac1c:	425a      	negs	r2, r3
 801ac1e:	50e2      	str	r2, [r4, r3]
 801ac20:	e7d0      	b.n	801abc4 <_malloc_r+0x20>
 801ac22:	428c      	cmp	r4, r1
 801ac24:	684b      	ldr	r3, [r1, #4]
 801ac26:	bf16      	itet	ne
 801ac28:	6063      	strne	r3, [r4, #4]
 801ac2a:	6013      	streq	r3, [r2, #0]
 801ac2c:	460c      	movne	r4, r1
 801ac2e:	e7eb      	b.n	801ac08 <_malloc_r+0x64>
 801ac30:	460c      	mov	r4, r1
 801ac32:	6849      	ldr	r1, [r1, #4]
 801ac34:	e7cc      	b.n	801abd0 <_malloc_r+0x2c>
 801ac36:	1cc4      	adds	r4, r0, #3
 801ac38:	f024 0403 	bic.w	r4, r4, #3
 801ac3c:	42a0      	cmp	r0, r4
 801ac3e:	d005      	beq.n	801ac4c <_malloc_r+0xa8>
 801ac40:	1a21      	subs	r1, r4, r0
 801ac42:	4630      	mov	r0, r6
 801ac44:	f000 fad0 	bl	801b1e8 <_sbrk_r>
 801ac48:	3001      	adds	r0, #1
 801ac4a:	d0cf      	beq.n	801abec <_malloc_r+0x48>
 801ac4c:	6025      	str	r5, [r4, #0]
 801ac4e:	e7db      	b.n	801ac08 <_malloc_r+0x64>
 801ac50:	20026a1c 	.word	0x20026a1c
 801ac54:	20026a20 	.word	0x20026a20

0801ac58 <__sfputc_r>:
 801ac58:	6893      	ldr	r3, [r2, #8]
 801ac5a:	3b01      	subs	r3, #1
 801ac5c:	2b00      	cmp	r3, #0
 801ac5e:	b410      	push	{r4}
 801ac60:	6093      	str	r3, [r2, #8]
 801ac62:	da08      	bge.n	801ac76 <__sfputc_r+0x1e>
 801ac64:	6994      	ldr	r4, [r2, #24]
 801ac66:	42a3      	cmp	r3, r4
 801ac68:	db01      	blt.n	801ac6e <__sfputc_r+0x16>
 801ac6a:	290a      	cmp	r1, #10
 801ac6c:	d103      	bne.n	801ac76 <__sfputc_r+0x1e>
 801ac6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 801ac72:	f000 bb2d 	b.w	801b2d0 <__swbuf_r>
 801ac76:	6813      	ldr	r3, [r2, #0]
 801ac78:	1c58      	adds	r0, r3, #1
 801ac7a:	6010      	str	r0, [r2, #0]
 801ac7c:	7019      	strb	r1, [r3, #0]
 801ac7e:	4608      	mov	r0, r1
 801ac80:	f85d 4b04 	ldr.w	r4, [sp], #4
 801ac84:	4770      	bx	lr

0801ac86 <__sfputs_r>:
 801ac86:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ac88:	4606      	mov	r6, r0
 801ac8a:	460f      	mov	r7, r1
 801ac8c:	4614      	mov	r4, r2
 801ac8e:	18d5      	adds	r5, r2, r3
 801ac90:	42ac      	cmp	r4, r5
 801ac92:	d101      	bne.n	801ac98 <__sfputs_r+0x12>
 801ac94:	2000      	movs	r0, #0
 801ac96:	e007      	b.n	801aca8 <__sfputs_r+0x22>
 801ac98:	463a      	mov	r2, r7
 801ac9a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801ac9e:	4630      	mov	r0, r6
 801aca0:	f7ff ffda 	bl	801ac58 <__sfputc_r>
 801aca4:	1c43      	adds	r3, r0, #1
 801aca6:	d1f3      	bne.n	801ac90 <__sfputs_r+0xa>
 801aca8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801acac <_vfiprintf_r>:
 801acac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acb0:	460c      	mov	r4, r1
 801acb2:	b09d      	sub	sp, #116	; 0x74
 801acb4:	4617      	mov	r7, r2
 801acb6:	461d      	mov	r5, r3
 801acb8:	4606      	mov	r6, r0
 801acba:	b118      	cbz	r0, 801acc4 <_vfiprintf_r+0x18>
 801acbc:	6983      	ldr	r3, [r0, #24]
 801acbe:	b90b      	cbnz	r3, 801acc4 <_vfiprintf_r+0x18>
 801acc0:	f000 fd1a 	bl	801b6f8 <__sinit>
 801acc4:	4b7c      	ldr	r3, [pc, #496]	; (801aeb8 <_vfiprintf_r+0x20c>)
 801acc6:	429c      	cmp	r4, r3
 801acc8:	d158      	bne.n	801ad7c <_vfiprintf_r+0xd0>
 801acca:	6874      	ldr	r4, [r6, #4]
 801accc:	89a3      	ldrh	r3, [r4, #12]
 801acce:	0718      	lsls	r0, r3, #28
 801acd0:	d55e      	bpl.n	801ad90 <_vfiprintf_r+0xe4>
 801acd2:	6923      	ldr	r3, [r4, #16]
 801acd4:	2b00      	cmp	r3, #0
 801acd6:	d05b      	beq.n	801ad90 <_vfiprintf_r+0xe4>
 801acd8:	2300      	movs	r3, #0
 801acda:	9309      	str	r3, [sp, #36]	; 0x24
 801acdc:	2320      	movs	r3, #32
 801acde:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801ace2:	2330      	movs	r3, #48	; 0x30
 801ace4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801ace8:	9503      	str	r5, [sp, #12]
 801acea:	f04f 0b01 	mov.w	fp, #1
 801acee:	46b8      	mov	r8, r7
 801acf0:	4645      	mov	r5, r8
 801acf2:	f815 3b01 	ldrb.w	r3, [r5], #1
 801acf6:	b10b      	cbz	r3, 801acfc <_vfiprintf_r+0x50>
 801acf8:	2b25      	cmp	r3, #37	; 0x25
 801acfa:	d154      	bne.n	801ada6 <_vfiprintf_r+0xfa>
 801acfc:	ebb8 0a07 	subs.w	sl, r8, r7
 801ad00:	d00b      	beq.n	801ad1a <_vfiprintf_r+0x6e>
 801ad02:	4653      	mov	r3, sl
 801ad04:	463a      	mov	r2, r7
 801ad06:	4621      	mov	r1, r4
 801ad08:	4630      	mov	r0, r6
 801ad0a:	f7ff ffbc 	bl	801ac86 <__sfputs_r>
 801ad0e:	3001      	adds	r0, #1
 801ad10:	f000 80c2 	beq.w	801ae98 <_vfiprintf_r+0x1ec>
 801ad14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ad16:	4453      	add	r3, sl
 801ad18:	9309      	str	r3, [sp, #36]	; 0x24
 801ad1a:	f898 3000 	ldrb.w	r3, [r8]
 801ad1e:	2b00      	cmp	r3, #0
 801ad20:	f000 80ba 	beq.w	801ae98 <_vfiprintf_r+0x1ec>
 801ad24:	2300      	movs	r3, #0
 801ad26:	f04f 32ff 	mov.w	r2, #4294967295
 801ad2a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801ad2e:	9304      	str	r3, [sp, #16]
 801ad30:	9307      	str	r3, [sp, #28]
 801ad32:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801ad36:	931a      	str	r3, [sp, #104]	; 0x68
 801ad38:	46a8      	mov	r8, r5
 801ad3a:	2205      	movs	r2, #5
 801ad3c:	f818 1b01 	ldrb.w	r1, [r8], #1
 801ad40:	485e      	ldr	r0, [pc, #376]	; (801aebc <_vfiprintf_r+0x210>)
 801ad42:	f7e5 fa5d 	bl	8000200 <memchr>
 801ad46:	9b04      	ldr	r3, [sp, #16]
 801ad48:	bb78      	cbnz	r0, 801adaa <_vfiprintf_r+0xfe>
 801ad4a:	06d9      	lsls	r1, r3, #27
 801ad4c:	bf44      	itt	mi
 801ad4e:	2220      	movmi	r2, #32
 801ad50:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801ad54:	071a      	lsls	r2, r3, #28
 801ad56:	bf44      	itt	mi
 801ad58:	222b      	movmi	r2, #43	; 0x2b
 801ad5a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801ad5e:	782a      	ldrb	r2, [r5, #0]
 801ad60:	2a2a      	cmp	r2, #42	; 0x2a
 801ad62:	d02a      	beq.n	801adba <_vfiprintf_r+0x10e>
 801ad64:	9a07      	ldr	r2, [sp, #28]
 801ad66:	46a8      	mov	r8, r5
 801ad68:	2000      	movs	r0, #0
 801ad6a:	250a      	movs	r5, #10
 801ad6c:	4641      	mov	r1, r8
 801ad6e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801ad72:	3b30      	subs	r3, #48	; 0x30
 801ad74:	2b09      	cmp	r3, #9
 801ad76:	d969      	bls.n	801ae4c <_vfiprintf_r+0x1a0>
 801ad78:	b360      	cbz	r0, 801add4 <_vfiprintf_r+0x128>
 801ad7a:	e024      	b.n	801adc6 <_vfiprintf_r+0x11a>
 801ad7c:	4b50      	ldr	r3, [pc, #320]	; (801aec0 <_vfiprintf_r+0x214>)
 801ad7e:	429c      	cmp	r4, r3
 801ad80:	d101      	bne.n	801ad86 <_vfiprintf_r+0xda>
 801ad82:	68b4      	ldr	r4, [r6, #8]
 801ad84:	e7a2      	b.n	801accc <_vfiprintf_r+0x20>
 801ad86:	4b4f      	ldr	r3, [pc, #316]	; (801aec4 <_vfiprintf_r+0x218>)
 801ad88:	429c      	cmp	r4, r3
 801ad8a:	bf08      	it	eq
 801ad8c:	68f4      	ldreq	r4, [r6, #12]
 801ad8e:	e79d      	b.n	801accc <_vfiprintf_r+0x20>
 801ad90:	4621      	mov	r1, r4
 801ad92:	4630      	mov	r0, r6
 801ad94:	f000 faee 	bl	801b374 <__swsetup_r>
 801ad98:	2800      	cmp	r0, #0
 801ad9a:	d09d      	beq.n	801acd8 <_vfiprintf_r+0x2c>
 801ad9c:	f04f 30ff 	mov.w	r0, #4294967295
 801ada0:	b01d      	add	sp, #116	; 0x74
 801ada2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ada6:	46a8      	mov	r8, r5
 801ada8:	e7a2      	b.n	801acf0 <_vfiprintf_r+0x44>
 801adaa:	4a44      	ldr	r2, [pc, #272]	; (801aebc <_vfiprintf_r+0x210>)
 801adac:	1a80      	subs	r0, r0, r2
 801adae:	fa0b f000 	lsl.w	r0, fp, r0
 801adb2:	4318      	orrs	r0, r3
 801adb4:	9004      	str	r0, [sp, #16]
 801adb6:	4645      	mov	r5, r8
 801adb8:	e7be      	b.n	801ad38 <_vfiprintf_r+0x8c>
 801adba:	9a03      	ldr	r2, [sp, #12]
 801adbc:	1d11      	adds	r1, r2, #4
 801adbe:	6812      	ldr	r2, [r2, #0]
 801adc0:	9103      	str	r1, [sp, #12]
 801adc2:	2a00      	cmp	r2, #0
 801adc4:	db01      	blt.n	801adca <_vfiprintf_r+0x11e>
 801adc6:	9207      	str	r2, [sp, #28]
 801adc8:	e004      	b.n	801add4 <_vfiprintf_r+0x128>
 801adca:	4252      	negs	r2, r2
 801adcc:	f043 0302 	orr.w	r3, r3, #2
 801add0:	9207      	str	r2, [sp, #28]
 801add2:	9304      	str	r3, [sp, #16]
 801add4:	f898 3000 	ldrb.w	r3, [r8]
 801add8:	2b2e      	cmp	r3, #46	; 0x2e
 801adda:	d10e      	bne.n	801adfa <_vfiprintf_r+0x14e>
 801addc:	f898 3001 	ldrb.w	r3, [r8, #1]
 801ade0:	2b2a      	cmp	r3, #42	; 0x2a
 801ade2:	d138      	bne.n	801ae56 <_vfiprintf_r+0x1aa>
 801ade4:	9b03      	ldr	r3, [sp, #12]
 801ade6:	1d1a      	adds	r2, r3, #4
 801ade8:	681b      	ldr	r3, [r3, #0]
 801adea:	9203      	str	r2, [sp, #12]
 801adec:	2b00      	cmp	r3, #0
 801adee:	bfb8      	it	lt
 801adf0:	f04f 33ff 	movlt.w	r3, #4294967295
 801adf4:	f108 0802 	add.w	r8, r8, #2
 801adf8:	9305      	str	r3, [sp, #20]
 801adfa:	4d33      	ldr	r5, [pc, #204]	; (801aec8 <_vfiprintf_r+0x21c>)
 801adfc:	f898 1000 	ldrb.w	r1, [r8]
 801ae00:	2203      	movs	r2, #3
 801ae02:	4628      	mov	r0, r5
 801ae04:	f7e5 f9fc 	bl	8000200 <memchr>
 801ae08:	b140      	cbz	r0, 801ae1c <_vfiprintf_r+0x170>
 801ae0a:	2340      	movs	r3, #64	; 0x40
 801ae0c:	1b40      	subs	r0, r0, r5
 801ae0e:	fa03 f000 	lsl.w	r0, r3, r0
 801ae12:	9b04      	ldr	r3, [sp, #16]
 801ae14:	4303      	orrs	r3, r0
 801ae16:	f108 0801 	add.w	r8, r8, #1
 801ae1a:	9304      	str	r3, [sp, #16]
 801ae1c:	f898 1000 	ldrb.w	r1, [r8]
 801ae20:	482a      	ldr	r0, [pc, #168]	; (801aecc <_vfiprintf_r+0x220>)
 801ae22:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801ae26:	2206      	movs	r2, #6
 801ae28:	f108 0701 	add.w	r7, r8, #1
 801ae2c:	f7e5 f9e8 	bl	8000200 <memchr>
 801ae30:	2800      	cmp	r0, #0
 801ae32:	d037      	beq.n	801aea4 <_vfiprintf_r+0x1f8>
 801ae34:	4b26      	ldr	r3, [pc, #152]	; (801aed0 <_vfiprintf_r+0x224>)
 801ae36:	bb1b      	cbnz	r3, 801ae80 <_vfiprintf_r+0x1d4>
 801ae38:	9b03      	ldr	r3, [sp, #12]
 801ae3a:	3307      	adds	r3, #7
 801ae3c:	f023 0307 	bic.w	r3, r3, #7
 801ae40:	3308      	adds	r3, #8
 801ae42:	9303      	str	r3, [sp, #12]
 801ae44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae46:	444b      	add	r3, r9
 801ae48:	9309      	str	r3, [sp, #36]	; 0x24
 801ae4a:	e750      	b.n	801acee <_vfiprintf_r+0x42>
 801ae4c:	fb05 3202 	mla	r2, r5, r2, r3
 801ae50:	2001      	movs	r0, #1
 801ae52:	4688      	mov	r8, r1
 801ae54:	e78a      	b.n	801ad6c <_vfiprintf_r+0xc0>
 801ae56:	2300      	movs	r3, #0
 801ae58:	f108 0801 	add.w	r8, r8, #1
 801ae5c:	9305      	str	r3, [sp, #20]
 801ae5e:	4619      	mov	r1, r3
 801ae60:	250a      	movs	r5, #10
 801ae62:	4640      	mov	r0, r8
 801ae64:	f810 2b01 	ldrb.w	r2, [r0], #1
 801ae68:	3a30      	subs	r2, #48	; 0x30
 801ae6a:	2a09      	cmp	r2, #9
 801ae6c:	d903      	bls.n	801ae76 <_vfiprintf_r+0x1ca>
 801ae6e:	2b00      	cmp	r3, #0
 801ae70:	d0c3      	beq.n	801adfa <_vfiprintf_r+0x14e>
 801ae72:	9105      	str	r1, [sp, #20]
 801ae74:	e7c1      	b.n	801adfa <_vfiprintf_r+0x14e>
 801ae76:	fb05 2101 	mla	r1, r5, r1, r2
 801ae7a:	2301      	movs	r3, #1
 801ae7c:	4680      	mov	r8, r0
 801ae7e:	e7f0      	b.n	801ae62 <_vfiprintf_r+0x1b6>
 801ae80:	ab03      	add	r3, sp, #12
 801ae82:	9300      	str	r3, [sp, #0]
 801ae84:	4622      	mov	r2, r4
 801ae86:	4b13      	ldr	r3, [pc, #76]	; (801aed4 <_vfiprintf_r+0x228>)
 801ae88:	a904      	add	r1, sp, #16
 801ae8a:	4630      	mov	r0, r6
 801ae8c:	f3af 8000 	nop.w
 801ae90:	f1b0 3fff 	cmp.w	r0, #4294967295
 801ae94:	4681      	mov	r9, r0
 801ae96:	d1d5      	bne.n	801ae44 <_vfiprintf_r+0x198>
 801ae98:	89a3      	ldrh	r3, [r4, #12]
 801ae9a:	065b      	lsls	r3, r3, #25
 801ae9c:	f53f af7e 	bmi.w	801ad9c <_vfiprintf_r+0xf0>
 801aea0:	9809      	ldr	r0, [sp, #36]	; 0x24
 801aea2:	e77d      	b.n	801ada0 <_vfiprintf_r+0xf4>
 801aea4:	ab03      	add	r3, sp, #12
 801aea6:	9300      	str	r3, [sp, #0]
 801aea8:	4622      	mov	r2, r4
 801aeaa:	4b0a      	ldr	r3, [pc, #40]	; (801aed4 <_vfiprintf_r+0x228>)
 801aeac:	a904      	add	r1, sp, #16
 801aeae:	4630      	mov	r0, r6
 801aeb0:	f000 f888 	bl	801afc4 <_printf_i>
 801aeb4:	e7ec      	b.n	801ae90 <_vfiprintf_r+0x1e4>
 801aeb6:	bf00      	nop
 801aeb8:	0801ee4c 	.word	0x0801ee4c
 801aebc:	0801edf4 	.word	0x0801edf4
 801aec0:	0801ee6c 	.word	0x0801ee6c
 801aec4:	0801ee2c 	.word	0x0801ee2c
 801aec8:	0801edfa 	.word	0x0801edfa
 801aecc:	0801edfe 	.word	0x0801edfe
 801aed0:	00000000 	.word	0x00000000
 801aed4:	0801ac87 	.word	0x0801ac87

0801aed8 <_printf_common>:
 801aed8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801aedc:	4691      	mov	r9, r2
 801aede:	461f      	mov	r7, r3
 801aee0:	688a      	ldr	r2, [r1, #8]
 801aee2:	690b      	ldr	r3, [r1, #16]
 801aee4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801aee8:	4293      	cmp	r3, r2
 801aeea:	bfb8      	it	lt
 801aeec:	4613      	movlt	r3, r2
 801aeee:	f8c9 3000 	str.w	r3, [r9]
 801aef2:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801aef6:	4606      	mov	r6, r0
 801aef8:	460c      	mov	r4, r1
 801aefa:	b112      	cbz	r2, 801af02 <_printf_common+0x2a>
 801aefc:	3301      	adds	r3, #1
 801aefe:	f8c9 3000 	str.w	r3, [r9]
 801af02:	6823      	ldr	r3, [r4, #0]
 801af04:	0699      	lsls	r1, r3, #26
 801af06:	bf42      	ittt	mi
 801af08:	f8d9 3000 	ldrmi.w	r3, [r9]
 801af0c:	3302      	addmi	r3, #2
 801af0e:	f8c9 3000 	strmi.w	r3, [r9]
 801af12:	6825      	ldr	r5, [r4, #0]
 801af14:	f015 0506 	ands.w	r5, r5, #6
 801af18:	d107      	bne.n	801af2a <_printf_common+0x52>
 801af1a:	f104 0a19 	add.w	sl, r4, #25
 801af1e:	68e3      	ldr	r3, [r4, #12]
 801af20:	f8d9 2000 	ldr.w	r2, [r9]
 801af24:	1a9b      	subs	r3, r3, r2
 801af26:	42ab      	cmp	r3, r5
 801af28:	dc28      	bgt.n	801af7c <_printf_common+0xa4>
 801af2a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 801af2e:	6822      	ldr	r2, [r4, #0]
 801af30:	3300      	adds	r3, #0
 801af32:	bf18      	it	ne
 801af34:	2301      	movne	r3, #1
 801af36:	0692      	lsls	r2, r2, #26
 801af38:	d42d      	bmi.n	801af96 <_printf_common+0xbe>
 801af3a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801af3e:	4639      	mov	r1, r7
 801af40:	4630      	mov	r0, r6
 801af42:	47c0      	blx	r8
 801af44:	3001      	adds	r0, #1
 801af46:	d020      	beq.n	801af8a <_printf_common+0xb2>
 801af48:	6823      	ldr	r3, [r4, #0]
 801af4a:	68e5      	ldr	r5, [r4, #12]
 801af4c:	f8d9 2000 	ldr.w	r2, [r9]
 801af50:	f003 0306 	and.w	r3, r3, #6
 801af54:	2b04      	cmp	r3, #4
 801af56:	bf08      	it	eq
 801af58:	1aad      	subeq	r5, r5, r2
 801af5a:	68a3      	ldr	r3, [r4, #8]
 801af5c:	6922      	ldr	r2, [r4, #16]
 801af5e:	bf0c      	ite	eq
 801af60:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801af64:	2500      	movne	r5, #0
 801af66:	4293      	cmp	r3, r2
 801af68:	bfc4      	itt	gt
 801af6a:	1a9b      	subgt	r3, r3, r2
 801af6c:	18ed      	addgt	r5, r5, r3
 801af6e:	f04f 0900 	mov.w	r9, #0
 801af72:	341a      	adds	r4, #26
 801af74:	454d      	cmp	r5, r9
 801af76:	d11a      	bne.n	801afae <_printf_common+0xd6>
 801af78:	2000      	movs	r0, #0
 801af7a:	e008      	b.n	801af8e <_printf_common+0xb6>
 801af7c:	2301      	movs	r3, #1
 801af7e:	4652      	mov	r2, sl
 801af80:	4639      	mov	r1, r7
 801af82:	4630      	mov	r0, r6
 801af84:	47c0      	blx	r8
 801af86:	3001      	adds	r0, #1
 801af88:	d103      	bne.n	801af92 <_printf_common+0xba>
 801af8a:	f04f 30ff 	mov.w	r0, #4294967295
 801af8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801af92:	3501      	adds	r5, #1
 801af94:	e7c3      	b.n	801af1e <_printf_common+0x46>
 801af96:	18e1      	adds	r1, r4, r3
 801af98:	1c5a      	adds	r2, r3, #1
 801af9a:	2030      	movs	r0, #48	; 0x30
 801af9c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801afa0:	4422      	add	r2, r4
 801afa2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801afa6:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801afaa:	3302      	adds	r3, #2
 801afac:	e7c5      	b.n	801af3a <_printf_common+0x62>
 801afae:	2301      	movs	r3, #1
 801afb0:	4622      	mov	r2, r4
 801afb2:	4639      	mov	r1, r7
 801afb4:	4630      	mov	r0, r6
 801afb6:	47c0      	blx	r8
 801afb8:	3001      	adds	r0, #1
 801afba:	d0e6      	beq.n	801af8a <_printf_common+0xb2>
 801afbc:	f109 0901 	add.w	r9, r9, #1
 801afc0:	e7d8      	b.n	801af74 <_printf_common+0x9c>
	...

0801afc4 <_printf_i>:
 801afc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801afc8:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 801afcc:	460c      	mov	r4, r1
 801afce:	7e09      	ldrb	r1, [r1, #24]
 801afd0:	b085      	sub	sp, #20
 801afd2:	296e      	cmp	r1, #110	; 0x6e
 801afd4:	4617      	mov	r7, r2
 801afd6:	4606      	mov	r6, r0
 801afd8:	4698      	mov	r8, r3
 801afda:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801afdc:	f000 80b3 	beq.w	801b146 <_printf_i+0x182>
 801afe0:	d822      	bhi.n	801b028 <_printf_i+0x64>
 801afe2:	2963      	cmp	r1, #99	; 0x63
 801afe4:	d036      	beq.n	801b054 <_printf_i+0x90>
 801afe6:	d80a      	bhi.n	801affe <_printf_i+0x3a>
 801afe8:	2900      	cmp	r1, #0
 801afea:	f000 80b9 	beq.w	801b160 <_printf_i+0x19c>
 801afee:	2958      	cmp	r1, #88	; 0x58
 801aff0:	f000 8083 	beq.w	801b0fa <_printf_i+0x136>
 801aff4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801aff8:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 801affc:	e032      	b.n	801b064 <_printf_i+0xa0>
 801affe:	2964      	cmp	r1, #100	; 0x64
 801b000:	d001      	beq.n	801b006 <_printf_i+0x42>
 801b002:	2969      	cmp	r1, #105	; 0x69
 801b004:	d1f6      	bne.n	801aff4 <_printf_i+0x30>
 801b006:	6820      	ldr	r0, [r4, #0]
 801b008:	6813      	ldr	r3, [r2, #0]
 801b00a:	0605      	lsls	r5, r0, #24
 801b00c:	f103 0104 	add.w	r1, r3, #4
 801b010:	d52a      	bpl.n	801b068 <_printf_i+0xa4>
 801b012:	681b      	ldr	r3, [r3, #0]
 801b014:	6011      	str	r1, [r2, #0]
 801b016:	2b00      	cmp	r3, #0
 801b018:	da03      	bge.n	801b022 <_printf_i+0x5e>
 801b01a:	222d      	movs	r2, #45	; 0x2d
 801b01c:	425b      	negs	r3, r3
 801b01e:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 801b022:	486f      	ldr	r0, [pc, #444]	; (801b1e0 <_printf_i+0x21c>)
 801b024:	220a      	movs	r2, #10
 801b026:	e039      	b.n	801b09c <_printf_i+0xd8>
 801b028:	2973      	cmp	r1, #115	; 0x73
 801b02a:	f000 809d 	beq.w	801b168 <_printf_i+0x1a4>
 801b02e:	d808      	bhi.n	801b042 <_printf_i+0x7e>
 801b030:	296f      	cmp	r1, #111	; 0x6f
 801b032:	d020      	beq.n	801b076 <_printf_i+0xb2>
 801b034:	2970      	cmp	r1, #112	; 0x70
 801b036:	d1dd      	bne.n	801aff4 <_printf_i+0x30>
 801b038:	6823      	ldr	r3, [r4, #0]
 801b03a:	f043 0320 	orr.w	r3, r3, #32
 801b03e:	6023      	str	r3, [r4, #0]
 801b040:	e003      	b.n	801b04a <_printf_i+0x86>
 801b042:	2975      	cmp	r1, #117	; 0x75
 801b044:	d017      	beq.n	801b076 <_printf_i+0xb2>
 801b046:	2978      	cmp	r1, #120	; 0x78
 801b048:	d1d4      	bne.n	801aff4 <_printf_i+0x30>
 801b04a:	2378      	movs	r3, #120	; 0x78
 801b04c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801b050:	4864      	ldr	r0, [pc, #400]	; (801b1e4 <_printf_i+0x220>)
 801b052:	e055      	b.n	801b100 <_printf_i+0x13c>
 801b054:	6813      	ldr	r3, [r2, #0]
 801b056:	1d19      	adds	r1, r3, #4
 801b058:	681b      	ldr	r3, [r3, #0]
 801b05a:	6011      	str	r1, [r2, #0]
 801b05c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801b060:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801b064:	2301      	movs	r3, #1
 801b066:	e08c      	b.n	801b182 <_printf_i+0x1be>
 801b068:	681b      	ldr	r3, [r3, #0]
 801b06a:	6011      	str	r1, [r2, #0]
 801b06c:	f010 0f40 	tst.w	r0, #64	; 0x40
 801b070:	bf18      	it	ne
 801b072:	b21b      	sxthne	r3, r3
 801b074:	e7cf      	b.n	801b016 <_printf_i+0x52>
 801b076:	6813      	ldr	r3, [r2, #0]
 801b078:	6825      	ldr	r5, [r4, #0]
 801b07a:	1d18      	adds	r0, r3, #4
 801b07c:	6010      	str	r0, [r2, #0]
 801b07e:	0628      	lsls	r0, r5, #24
 801b080:	d501      	bpl.n	801b086 <_printf_i+0xc2>
 801b082:	681b      	ldr	r3, [r3, #0]
 801b084:	e002      	b.n	801b08c <_printf_i+0xc8>
 801b086:	0668      	lsls	r0, r5, #25
 801b088:	d5fb      	bpl.n	801b082 <_printf_i+0xbe>
 801b08a:	881b      	ldrh	r3, [r3, #0]
 801b08c:	4854      	ldr	r0, [pc, #336]	; (801b1e0 <_printf_i+0x21c>)
 801b08e:	296f      	cmp	r1, #111	; 0x6f
 801b090:	bf14      	ite	ne
 801b092:	220a      	movne	r2, #10
 801b094:	2208      	moveq	r2, #8
 801b096:	2100      	movs	r1, #0
 801b098:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801b09c:	6865      	ldr	r5, [r4, #4]
 801b09e:	60a5      	str	r5, [r4, #8]
 801b0a0:	2d00      	cmp	r5, #0
 801b0a2:	f2c0 8095 	blt.w	801b1d0 <_printf_i+0x20c>
 801b0a6:	6821      	ldr	r1, [r4, #0]
 801b0a8:	f021 0104 	bic.w	r1, r1, #4
 801b0ac:	6021      	str	r1, [r4, #0]
 801b0ae:	2b00      	cmp	r3, #0
 801b0b0:	d13d      	bne.n	801b12e <_printf_i+0x16a>
 801b0b2:	2d00      	cmp	r5, #0
 801b0b4:	f040 808e 	bne.w	801b1d4 <_printf_i+0x210>
 801b0b8:	4665      	mov	r5, ip
 801b0ba:	2a08      	cmp	r2, #8
 801b0bc:	d10b      	bne.n	801b0d6 <_printf_i+0x112>
 801b0be:	6823      	ldr	r3, [r4, #0]
 801b0c0:	07db      	lsls	r3, r3, #31
 801b0c2:	d508      	bpl.n	801b0d6 <_printf_i+0x112>
 801b0c4:	6923      	ldr	r3, [r4, #16]
 801b0c6:	6862      	ldr	r2, [r4, #4]
 801b0c8:	429a      	cmp	r2, r3
 801b0ca:	bfde      	ittt	le
 801b0cc:	2330      	movle	r3, #48	; 0x30
 801b0ce:	f805 3c01 	strble.w	r3, [r5, #-1]
 801b0d2:	f105 35ff 	addle.w	r5, r5, #4294967295
 801b0d6:	ebac 0305 	sub.w	r3, ip, r5
 801b0da:	6123      	str	r3, [r4, #16]
 801b0dc:	f8cd 8000 	str.w	r8, [sp]
 801b0e0:	463b      	mov	r3, r7
 801b0e2:	aa03      	add	r2, sp, #12
 801b0e4:	4621      	mov	r1, r4
 801b0e6:	4630      	mov	r0, r6
 801b0e8:	f7ff fef6 	bl	801aed8 <_printf_common>
 801b0ec:	3001      	adds	r0, #1
 801b0ee:	d14d      	bne.n	801b18c <_printf_i+0x1c8>
 801b0f0:	f04f 30ff 	mov.w	r0, #4294967295
 801b0f4:	b005      	add	sp, #20
 801b0f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b0fa:	4839      	ldr	r0, [pc, #228]	; (801b1e0 <_printf_i+0x21c>)
 801b0fc:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 801b100:	6813      	ldr	r3, [r2, #0]
 801b102:	6821      	ldr	r1, [r4, #0]
 801b104:	1d1d      	adds	r5, r3, #4
 801b106:	681b      	ldr	r3, [r3, #0]
 801b108:	6015      	str	r5, [r2, #0]
 801b10a:	060a      	lsls	r2, r1, #24
 801b10c:	d50b      	bpl.n	801b126 <_printf_i+0x162>
 801b10e:	07ca      	lsls	r2, r1, #31
 801b110:	bf44      	itt	mi
 801b112:	f041 0120 	orrmi.w	r1, r1, #32
 801b116:	6021      	strmi	r1, [r4, #0]
 801b118:	b91b      	cbnz	r3, 801b122 <_printf_i+0x15e>
 801b11a:	6822      	ldr	r2, [r4, #0]
 801b11c:	f022 0220 	bic.w	r2, r2, #32
 801b120:	6022      	str	r2, [r4, #0]
 801b122:	2210      	movs	r2, #16
 801b124:	e7b7      	b.n	801b096 <_printf_i+0xd2>
 801b126:	064d      	lsls	r5, r1, #25
 801b128:	bf48      	it	mi
 801b12a:	b29b      	uxthmi	r3, r3
 801b12c:	e7ef      	b.n	801b10e <_printf_i+0x14a>
 801b12e:	4665      	mov	r5, ip
 801b130:	fbb3 f1f2 	udiv	r1, r3, r2
 801b134:	fb02 3311 	mls	r3, r2, r1, r3
 801b138:	5cc3      	ldrb	r3, [r0, r3]
 801b13a:	f805 3d01 	strb.w	r3, [r5, #-1]!
 801b13e:	460b      	mov	r3, r1
 801b140:	2900      	cmp	r1, #0
 801b142:	d1f5      	bne.n	801b130 <_printf_i+0x16c>
 801b144:	e7b9      	b.n	801b0ba <_printf_i+0xf6>
 801b146:	6813      	ldr	r3, [r2, #0]
 801b148:	6825      	ldr	r5, [r4, #0]
 801b14a:	6961      	ldr	r1, [r4, #20]
 801b14c:	1d18      	adds	r0, r3, #4
 801b14e:	6010      	str	r0, [r2, #0]
 801b150:	0628      	lsls	r0, r5, #24
 801b152:	681b      	ldr	r3, [r3, #0]
 801b154:	d501      	bpl.n	801b15a <_printf_i+0x196>
 801b156:	6019      	str	r1, [r3, #0]
 801b158:	e002      	b.n	801b160 <_printf_i+0x19c>
 801b15a:	066a      	lsls	r2, r5, #25
 801b15c:	d5fb      	bpl.n	801b156 <_printf_i+0x192>
 801b15e:	8019      	strh	r1, [r3, #0]
 801b160:	2300      	movs	r3, #0
 801b162:	6123      	str	r3, [r4, #16]
 801b164:	4665      	mov	r5, ip
 801b166:	e7b9      	b.n	801b0dc <_printf_i+0x118>
 801b168:	6813      	ldr	r3, [r2, #0]
 801b16a:	1d19      	adds	r1, r3, #4
 801b16c:	6011      	str	r1, [r2, #0]
 801b16e:	681d      	ldr	r5, [r3, #0]
 801b170:	6862      	ldr	r2, [r4, #4]
 801b172:	2100      	movs	r1, #0
 801b174:	4628      	mov	r0, r5
 801b176:	f7e5 f843 	bl	8000200 <memchr>
 801b17a:	b108      	cbz	r0, 801b180 <_printf_i+0x1bc>
 801b17c:	1b40      	subs	r0, r0, r5
 801b17e:	6060      	str	r0, [r4, #4]
 801b180:	6863      	ldr	r3, [r4, #4]
 801b182:	6123      	str	r3, [r4, #16]
 801b184:	2300      	movs	r3, #0
 801b186:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801b18a:	e7a7      	b.n	801b0dc <_printf_i+0x118>
 801b18c:	6923      	ldr	r3, [r4, #16]
 801b18e:	462a      	mov	r2, r5
 801b190:	4639      	mov	r1, r7
 801b192:	4630      	mov	r0, r6
 801b194:	47c0      	blx	r8
 801b196:	3001      	adds	r0, #1
 801b198:	d0aa      	beq.n	801b0f0 <_printf_i+0x12c>
 801b19a:	6823      	ldr	r3, [r4, #0]
 801b19c:	079b      	lsls	r3, r3, #30
 801b19e:	d413      	bmi.n	801b1c8 <_printf_i+0x204>
 801b1a0:	68e0      	ldr	r0, [r4, #12]
 801b1a2:	9b03      	ldr	r3, [sp, #12]
 801b1a4:	4298      	cmp	r0, r3
 801b1a6:	bfb8      	it	lt
 801b1a8:	4618      	movlt	r0, r3
 801b1aa:	e7a3      	b.n	801b0f4 <_printf_i+0x130>
 801b1ac:	2301      	movs	r3, #1
 801b1ae:	464a      	mov	r2, r9
 801b1b0:	4639      	mov	r1, r7
 801b1b2:	4630      	mov	r0, r6
 801b1b4:	47c0      	blx	r8
 801b1b6:	3001      	adds	r0, #1
 801b1b8:	d09a      	beq.n	801b0f0 <_printf_i+0x12c>
 801b1ba:	3501      	adds	r5, #1
 801b1bc:	68e3      	ldr	r3, [r4, #12]
 801b1be:	9a03      	ldr	r2, [sp, #12]
 801b1c0:	1a9b      	subs	r3, r3, r2
 801b1c2:	42ab      	cmp	r3, r5
 801b1c4:	dcf2      	bgt.n	801b1ac <_printf_i+0x1e8>
 801b1c6:	e7eb      	b.n	801b1a0 <_printf_i+0x1dc>
 801b1c8:	2500      	movs	r5, #0
 801b1ca:	f104 0919 	add.w	r9, r4, #25
 801b1ce:	e7f5      	b.n	801b1bc <_printf_i+0x1f8>
 801b1d0:	2b00      	cmp	r3, #0
 801b1d2:	d1ac      	bne.n	801b12e <_printf_i+0x16a>
 801b1d4:	7803      	ldrb	r3, [r0, #0]
 801b1d6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801b1da:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801b1de:	e76c      	b.n	801b0ba <_printf_i+0xf6>
 801b1e0:	0801ee05 	.word	0x0801ee05
 801b1e4:	0801ee16 	.word	0x0801ee16

0801b1e8 <_sbrk_r>:
 801b1e8:	b538      	push	{r3, r4, r5, lr}
 801b1ea:	4c06      	ldr	r4, [pc, #24]	; (801b204 <_sbrk_r+0x1c>)
 801b1ec:	2300      	movs	r3, #0
 801b1ee:	4605      	mov	r5, r0
 801b1f0:	4608      	mov	r0, r1
 801b1f2:	6023      	str	r3, [r4, #0]
 801b1f4:	f7e7 f996 	bl	8002524 <_sbrk>
 801b1f8:	1c43      	adds	r3, r0, #1
 801b1fa:	d102      	bne.n	801b202 <_sbrk_r+0x1a>
 801b1fc:	6823      	ldr	r3, [r4, #0]
 801b1fe:	b103      	cbz	r3, 801b202 <_sbrk_r+0x1a>
 801b200:	602b      	str	r3, [r5, #0]
 801b202:	bd38      	pop	{r3, r4, r5, pc}
 801b204:	20027008 	.word	0x20027008

0801b208 <_raise_r>:
 801b208:	291f      	cmp	r1, #31
 801b20a:	b538      	push	{r3, r4, r5, lr}
 801b20c:	4604      	mov	r4, r0
 801b20e:	460d      	mov	r5, r1
 801b210:	d904      	bls.n	801b21c <_raise_r+0x14>
 801b212:	2316      	movs	r3, #22
 801b214:	6003      	str	r3, [r0, #0]
 801b216:	f04f 30ff 	mov.w	r0, #4294967295
 801b21a:	bd38      	pop	{r3, r4, r5, pc}
 801b21c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801b21e:	b112      	cbz	r2, 801b226 <_raise_r+0x1e>
 801b220:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801b224:	b94b      	cbnz	r3, 801b23a <_raise_r+0x32>
 801b226:	4620      	mov	r0, r4
 801b228:	f000 f830 	bl	801b28c <_getpid_r>
 801b22c:	462a      	mov	r2, r5
 801b22e:	4601      	mov	r1, r0
 801b230:	4620      	mov	r0, r4
 801b232:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801b236:	f000 b817 	b.w	801b268 <_kill_r>
 801b23a:	2b01      	cmp	r3, #1
 801b23c:	d00a      	beq.n	801b254 <_raise_r+0x4c>
 801b23e:	1c59      	adds	r1, r3, #1
 801b240:	d103      	bne.n	801b24a <_raise_r+0x42>
 801b242:	2316      	movs	r3, #22
 801b244:	6003      	str	r3, [r0, #0]
 801b246:	2001      	movs	r0, #1
 801b248:	e7e7      	b.n	801b21a <_raise_r+0x12>
 801b24a:	2400      	movs	r4, #0
 801b24c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801b250:	4628      	mov	r0, r5
 801b252:	4798      	blx	r3
 801b254:	2000      	movs	r0, #0
 801b256:	e7e0      	b.n	801b21a <_raise_r+0x12>

0801b258 <raise>:
 801b258:	4b02      	ldr	r3, [pc, #8]	; (801b264 <raise+0xc>)
 801b25a:	4601      	mov	r1, r0
 801b25c:	6818      	ldr	r0, [r3, #0]
 801b25e:	f7ff bfd3 	b.w	801b208 <_raise_r>
 801b262:	bf00      	nop
 801b264:	20000094 	.word	0x20000094

0801b268 <_kill_r>:
 801b268:	b538      	push	{r3, r4, r5, lr}
 801b26a:	4c07      	ldr	r4, [pc, #28]	; (801b288 <_kill_r+0x20>)
 801b26c:	2300      	movs	r3, #0
 801b26e:	4605      	mov	r5, r0
 801b270:	4608      	mov	r0, r1
 801b272:	4611      	mov	r1, r2
 801b274:	6023      	str	r3, [r4, #0]
 801b276:	f7e7 f8cd 	bl	8002414 <_kill>
 801b27a:	1c43      	adds	r3, r0, #1
 801b27c:	d102      	bne.n	801b284 <_kill_r+0x1c>
 801b27e:	6823      	ldr	r3, [r4, #0]
 801b280:	b103      	cbz	r3, 801b284 <_kill_r+0x1c>
 801b282:	602b      	str	r3, [r5, #0]
 801b284:	bd38      	pop	{r3, r4, r5, pc}
 801b286:	bf00      	nop
 801b288:	20027008 	.word	0x20027008

0801b28c <_getpid_r>:
 801b28c:	f7e7 b8ba 	b.w	8002404 <_getpid>

0801b290 <siprintf>:
 801b290:	b40e      	push	{r1, r2, r3}
 801b292:	b500      	push	{lr}
 801b294:	b09c      	sub	sp, #112	; 0x70
 801b296:	ab1d      	add	r3, sp, #116	; 0x74
 801b298:	9002      	str	r0, [sp, #8]
 801b29a:	9006      	str	r0, [sp, #24]
 801b29c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 801b2a0:	4809      	ldr	r0, [pc, #36]	; (801b2c8 <siprintf+0x38>)
 801b2a2:	9107      	str	r1, [sp, #28]
 801b2a4:	9104      	str	r1, [sp, #16]
 801b2a6:	4909      	ldr	r1, [pc, #36]	; (801b2cc <siprintf+0x3c>)
 801b2a8:	f853 2b04 	ldr.w	r2, [r3], #4
 801b2ac:	9105      	str	r1, [sp, #20]
 801b2ae:	6800      	ldr	r0, [r0, #0]
 801b2b0:	9301      	str	r3, [sp, #4]
 801b2b2:	a902      	add	r1, sp, #8
 801b2b4:	f000 fbaa 	bl	801ba0c <_svfiprintf_r>
 801b2b8:	9b02      	ldr	r3, [sp, #8]
 801b2ba:	2200      	movs	r2, #0
 801b2bc:	701a      	strb	r2, [r3, #0]
 801b2be:	b01c      	add	sp, #112	; 0x70
 801b2c0:	f85d eb04 	ldr.w	lr, [sp], #4
 801b2c4:	b003      	add	sp, #12
 801b2c6:	4770      	bx	lr
 801b2c8:	20000094 	.word	0x20000094
 801b2cc:	ffff0208 	.word	0xffff0208

0801b2d0 <__swbuf_r>:
 801b2d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b2d2:	460e      	mov	r6, r1
 801b2d4:	4614      	mov	r4, r2
 801b2d6:	4605      	mov	r5, r0
 801b2d8:	b118      	cbz	r0, 801b2e2 <__swbuf_r+0x12>
 801b2da:	6983      	ldr	r3, [r0, #24]
 801b2dc:	b90b      	cbnz	r3, 801b2e2 <__swbuf_r+0x12>
 801b2de:	f000 fa0b 	bl	801b6f8 <__sinit>
 801b2e2:	4b21      	ldr	r3, [pc, #132]	; (801b368 <__swbuf_r+0x98>)
 801b2e4:	429c      	cmp	r4, r3
 801b2e6:	d12a      	bne.n	801b33e <__swbuf_r+0x6e>
 801b2e8:	686c      	ldr	r4, [r5, #4]
 801b2ea:	69a3      	ldr	r3, [r4, #24]
 801b2ec:	60a3      	str	r3, [r4, #8]
 801b2ee:	89a3      	ldrh	r3, [r4, #12]
 801b2f0:	071a      	lsls	r2, r3, #28
 801b2f2:	d52e      	bpl.n	801b352 <__swbuf_r+0x82>
 801b2f4:	6923      	ldr	r3, [r4, #16]
 801b2f6:	b363      	cbz	r3, 801b352 <__swbuf_r+0x82>
 801b2f8:	6923      	ldr	r3, [r4, #16]
 801b2fa:	6820      	ldr	r0, [r4, #0]
 801b2fc:	1ac0      	subs	r0, r0, r3
 801b2fe:	6963      	ldr	r3, [r4, #20]
 801b300:	b2f6      	uxtb	r6, r6
 801b302:	4283      	cmp	r3, r0
 801b304:	4637      	mov	r7, r6
 801b306:	dc04      	bgt.n	801b312 <__swbuf_r+0x42>
 801b308:	4621      	mov	r1, r4
 801b30a:	4628      	mov	r0, r5
 801b30c:	f000 f98a 	bl	801b624 <_fflush_r>
 801b310:	bb28      	cbnz	r0, 801b35e <__swbuf_r+0x8e>
 801b312:	68a3      	ldr	r3, [r4, #8]
 801b314:	3b01      	subs	r3, #1
 801b316:	60a3      	str	r3, [r4, #8]
 801b318:	6823      	ldr	r3, [r4, #0]
 801b31a:	1c5a      	adds	r2, r3, #1
 801b31c:	6022      	str	r2, [r4, #0]
 801b31e:	701e      	strb	r6, [r3, #0]
 801b320:	6963      	ldr	r3, [r4, #20]
 801b322:	3001      	adds	r0, #1
 801b324:	4283      	cmp	r3, r0
 801b326:	d004      	beq.n	801b332 <__swbuf_r+0x62>
 801b328:	89a3      	ldrh	r3, [r4, #12]
 801b32a:	07db      	lsls	r3, r3, #31
 801b32c:	d519      	bpl.n	801b362 <__swbuf_r+0x92>
 801b32e:	2e0a      	cmp	r6, #10
 801b330:	d117      	bne.n	801b362 <__swbuf_r+0x92>
 801b332:	4621      	mov	r1, r4
 801b334:	4628      	mov	r0, r5
 801b336:	f000 f975 	bl	801b624 <_fflush_r>
 801b33a:	b190      	cbz	r0, 801b362 <__swbuf_r+0x92>
 801b33c:	e00f      	b.n	801b35e <__swbuf_r+0x8e>
 801b33e:	4b0b      	ldr	r3, [pc, #44]	; (801b36c <__swbuf_r+0x9c>)
 801b340:	429c      	cmp	r4, r3
 801b342:	d101      	bne.n	801b348 <__swbuf_r+0x78>
 801b344:	68ac      	ldr	r4, [r5, #8]
 801b346:	e7d0      	b.n	801b2ea <__swbuf_r+0x1a>
 801b348:	4b09      	ldr	r3, [pc, #36]	; (801b370 <__swbuf_r+0xa0>)
 801b34a:	429c      	cmp	r4, r3
 801b34c:	bf08      	it	eq
 801b34e:	68ec      	ldreq	r4, [r5, #12]
 801b350:	e7cb      	b.n	801b2ea <__swbuf_r+0x1a>
 801b352:	4621      	mov	r1, r4
 801b354:	4628      	mov	r0, r5
 801b356:	f000 f80d 	bl	801b374 <__swsetup_r>
 801b35a:	2800      	cmp	r0, #0
 801b35c:	d0cc      	beq.n	801b2f8 <__swbuf_r+0x28>
 801b35e:	f04f 37ff 	mov.w	r7, #4294967295
 801b362:	4638      	mov	r0, r7
 801b364:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b366:	bf00      	nop
 801b368:	0801ee4c 	.word	0x0801ee4c
 801b36c:	0801ee6c 	.word	0x0801ee6c
 801b370:	0801ee2c 	.word	0x0801ee2c

0801b374 <__swsetup_r>:
 801b374:	4b32      	ldr	r3, [pc, #200]	; (801b440 <__swsetup_r+0xcc>)
 801b376:	b570      	push	{r4, r5, r6, lr}
 801b378:	681d      	ldr	r5, [r3, #0]
 801b37a:	4606      	mov	r6, r0
 801b37c:	460c      	mov	r4, r1
 801b37e:	b125      	cbz	r5, 801b38a <__swsetup_r+0x16>
 801b380:	69ab      	ldr	r3, [r5, #24]
 801b382:	b913      	cbnz	r3, 801b38a <__swsetup_r+0x16>
 801b384:	4628      	mov	r0, r5
 801b386:	f000 f9b7 	bl	801b6f8 <__sinit>
 801b38a:	4b2e      	ldr	r3, [pc, #184]	; (801b444 <__swsetup_r+0xd0>)
 801b38c:	429c      	cmp	r4, r3
 801b38e:	d10f      	bne.n	801b3b0 <__swsetup_r+0x3c>
 801b390:	686c      	ldr	r4, [r5, #4]
 801b392:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b396:	b29a      	uxth	r2, r3
 801b398:	0715      	lsls	r5, r2, #28
 801b39a:	d42c      	bmi.n	801b3f6 <__swsetup_r+0x82>
 801b39c:	06d0      	lsls	r0, r2, #27
 801b39e:	d411      	bmi.n	801b3c4 <__swsetup_r+0x50>
 801b3a0:	2209      	movs	r2, #9
 801b3a2:	6032      	str	r2, [r6, #0]
 801b3a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801b3a8:	81a3      	strh	r3, [r4, #12]
 801b3aa:	f04f 30ff 	mov.w	r0, #4294967295
 801b3ae:	e03e      	b.n	801b42e <__swsetup_r+0xba>
 801b3b0:	4b25      	ldr	r3, [pc, #148]	; (801b448 <__swsetup_r+0xd4>)
 801b3b2:	429c      	cmp	r4, r3
 801b3b4:	d101      	bne.n	801b3ba <__swsetup_r+0x46>
 801b3b6:	68ac      	ldr	r4, [r5, #8]
 801b3b8:	e7eb      	b.n	801b392 <__swsetup_r+0x1e>
 801b3ba:	4b24      	ldr	r3, [pc, #144]	; (801b44c <__swsetup_r+0xd8>)
 801b3bc:	429c      	cmp	r4, r3
 801b3be:	bf08      	it	eq
 801b3c0:	68ec      	ldreq	r4, [r5, #12]
 801b3c2:	e7e6      	b.n	801b392 <__swsetup_r+0x1e>
 801b3c4:	0751      	lsls	r1, r2, #29
 801b3c6:	d512      	bpl.n	801b3ee <__swsetup_r+0x7a>
 801b3c8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801b3ca:	b141      	cbz	r1, 801b3de <__swsetup_r+0x6a>
 801b3cc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801b3d0:	4299      	cmp	r1, r3
 801b3d2:	d002      	beq.n	801b3da <__swsetup_r+0x66>
 801b3d4:	4630      	mov	r0, r6
 801b3d6:	f7ff fb97 	bl	801ab08 <_free_r>
 801b3da:	2300      	movs	r3, #0
 801b3dc:	6363      	str	r3, [r4, #52]	; 0x34
 801b3de:	89a3      	ldrh	r3, [r4, #12]
 801b3e0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801b3e4:	81a3      	strh	r3, [r4, #12]
 801b3e6:	2300      	movs	r3, #0
 801b3e8:	6063      	str	r3, [r4, #4]
 801b3ea:	6923      	ldr	r3, [r4, #16]
 801b3ec:	6023      	str	r3, [r4, #0]
 801b3ee:	89a3      	ldrh	r3, [r4, #12]
 801b3f0:	f043 0308 	orr.w	r3, r3, #8
 801b3f4:	81a3      	strh	r3, [r4, #12]
 801b3f6:	6923      	ldr	r3, [r4, #16]
 801b3f8:	b94b      	cbnz	r3, 801b40e <__swsetup_r+0x9a>
 801b3fa:	89a3      	ldrh	r3, [r4, #12]
 801b3fc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801b400:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801b404:	d003      	beq.n	801b40e <__swsetup_r+0x9a>
 801b406:	4621      	mov	r1, r4
 801b408:	4630      	mov	r0, r6
 801b40a:	f000 fa23 	bl	801b854 <__smakebuf_r>
 801b40e:	89a2      	ldrh	r2, [r4, #12]
 801b410:	f012 0301 	ands.w	r3, r2, #1
 801b414:	d00c      	beq.n	801b430 <__swsetup_r+0xbc>
 801b416:	2300      	movs	r3, #0
 801b418:	60a3      	str	r3, [r4, #8]
 801b41a:	6963      	ldr	r3, [r4, #20]
 801b41c:	425b      	negs	r3, r3
 801b41e:	61a3      	str	r3, [r4, #24]
 801b420:	6923      	ldr	r3, [r4, #16]
 801b422:	b953      	cbnz	r3, 801b43a <__swsetup_r+0xc6>
 801b424:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b428:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 801b42c:	d1ba      	bne.n	801b3a4 <__swsetup_r+0x30>
 801b42e:	bd70      	pop	{r4, r5, r6, pc}
 801b430:	0792      	lsls	r2, r2, #30
 801b432:	bf58      	it	pl
 801b434:	6963      	ldrpl	r3, [r4, #20]
 801b436:	60a3      	str	r3, [r4, #8]
 801b438:	e7f2      	b.n	801b420 <__swsetup_r+0xac>
 801b43a:	2000      	movs	r0, #0
 801b43c:	e7f7      	b.n	801b42e <__swsetup_r+0xba>
 801b43e:	bf00      	nop
 801b440:	20000094 	.word	0x20000094
 801b444:	0801ee4c 	.word	0x0801ee4c
 801b448:	0801ee6c 	.word	0x0801ee6c
 801b44c:	0801ee2c 	.word	0x0801ee2c

0801b450 <__register_exitproc>:
 801b450:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b454:	4d2c      	ldr	r5, [pc, #176]	; (801b508 <__register_exitproc+0xb8>)
 801b456:	682c      	ldr	r4, [r5, #0]
 801b458:	4607      	mov	r7, r0
 801b45a:	460e      	mov	r6, r1
 801b45c:	4691      	mov	r9, r2
 801b45e:	4698      	mov	r8, r3
 801b460:	b934      	cbnz	r4, 801b470 <__register_exitproc+0x20>
 801b462:	4b2a      	ldr	r3, [pc, #168]	; (801b50c <__register_exitproc+0xbc>)
 801b464:	4c2a      	ldr	r4, [pc, #168]	; (801b510 <__register_exitproc+0xc0>)
 801b466:	602c      	str	r4, [r5, #0]
 801b468:	b113      	cbz	r3, 801b470 <__register_exitproc+0x20>
 801b46a:	681b      	ldr	r3, [r3, #0]
 801b46c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801b470:	6863      	ldr	r3, [r4, #4]
 801b472:	2b1f      	cmp	r3, #31
 801b474:	dd3d      	ble.n	801b4f2 <__register_exitproc+0xa2>
 801b476:	4b27      	ldr	r3, [pc, #156]	; (801b514 <__register_exitproc+0xc4>)
 801b478:	b91b      	cbnz	r3, 801b482 <__register_exitproc+0x32>
 801b47a:	f04f 30ff 	mov.w	r0, #4294967295
 801b47e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b482:	208c      	movs	r0, #140	; 0x8c
 801b484:	f7ff fb1c 	bl	801aac0 <malloc>
 801b488:	4604      	mov	r4, r0
 801b48a:	2800      	cmp	r0, #0
 801b48c:	d0f5      	beq.n	801b47a <__register_exitproc+0x2a>
 801b48e:	2300      	movs	r3, #0
 801b490:	682a      	ldr	r2, [r5, #0]
 801b492:	6002      	str	r2, [r0, #0]
 801b494:	6043      	str	r3, [r0, #4]
 801b496:	6028      	str	r0, [r5, #0]
 801b498:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 801b49c:	b30f      	cbz	r7, 801b4e2 <__register_exitproc+0x92>
 801b49e:	f44f 7084 	mov.w	r0, #264	; 0x108
 801b4a2:	f7ff fb0d 	bl	801aac0 <malloc>
 801b4a6:	2800      	cmp	r0, #0
 801b4a8:	d0e7      	beq.n	801b47a <__register_exitproc+0x2a>
 801b4aa:	2300      	movs	r3, #0
 801b4ac:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801b4b0:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
 801b4b4:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801b4b8:	6862      	ldr	r2, [r4, #4]
 801b4ba:	f840 9022 	str.w	r9, [r0, r2, lsl #2]
 801b4be:	2301      	movs	r3, #1
 801b4c0:	4093      	lsls	r3, r2
 801b4c2:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 801b4c6:	f8d0 2100 	ldr.w	r2, [r0, #256]	; 0x100
 801b4ca:	431a      	orrs	r2, r3
 801b4cc:	2f02      	cmp	r7, #2
 801b4ce:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 801b4d2:	f8c1 8080 	str.w	r8, [r1, #128]	; 0x80
 801b4d6:	bf02      	ittt	eq
 801b4d8:	f8d0 2104 	ldreq.w	r2, [r0, #260]	; 0x104
 801b4dc:	4313      	orreq	r3, r2
 801b4de:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801b4e2:	6863      	ldr	r3, [r4, #4]
 801b4e4:	1c5a      	adds	r2, r3, #1
 801b4e6:	3302      	adds	r3, #2
 801b4e8:	6062      	str	r2, [r4, #4]
 801b4ea:	2000      	movs	r0, #0
 801b4ec:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801b4f0:	e7c5      	b.n	801b47e <__register_exitproc+0x2e>
 801b4f2:	2f00      	cmp	r7, #0
 801b4f4:	d0f5      	beq.n	801b4e2 <__register_exitproc+0x92>
 801b4f6:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801b4fa:	2800      	cmp	r0, #0
 801b4fc:	d1dc      	bne.n	801b4b8 <__register_exitproc+0x68>
 801b4fe:	4b05      	ldr	r3, [pc, #20]	; (801b514 <__register_exitproc+0xc4>)
 801b500:	2b00      	cmp	r3, #0
 801b502:	d0ba      	beq.n	801b47a <__register_exitproc+0x2a>
 801b504:	e7cb      	b.n	801b49e <__register_exitproc+0x4e>
 801b506:	bf00      	nop
 801b508:	20026bb8 	.word	0x20026bb8
 801b50c:	0801ee28 	.word	0x0801ee28
 801b510:	20026b2c 	.word	0x20026b2c
 801b514:	0801aac1 	.word	0x0801aac1

0801b518 <__sflush_r>:
 801b518:	898a      	ldrh	r2, [r1, #12]
 801b51a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b51e:	4605      	mov	r5, r0
 801b520:	0710      	lsls	r0, r2, #28
 801b522:	460c      	mov	r4, r1
 801b524:	d458      	bmi.n	801b5d8 <__sflush_r+0xc0>
 801b526:	684b      	ldr	r3, [r1, #4]
 801b528:	2b00      	cmp	r3, #0
 801b52a:	dc05      	bgt.n	801b538 <__sflush_r+0x20>
 801b52c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801b52e:	2b00      	cmp	r3, #0
 801b530:	dc02      	bgt.n	801b538 <__sflush_r+0x20>
 801b532:	2000      	movs	r0, #0
 801b534:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b538:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801b53a:	2e00      	cmp	r6, #0
 801b53c:	d0f9      	beq.n	801b532 <__sflush_r+0x1a>
 801b53e:	2300      	movs	r3, #0
 801b540:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801b544:	682f      	ldr	r7, [r5, #0]
 801b546:	6a21      	ldr	r1, [r4, #32]
 801b548:	602b      	str	r3, [r5, #0]
 801b54a:	d032      	beq.n	801b5b2 <__sflush_r+0x9a>
 801b54c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801b54e:	89a3      	ldrh	r3, [r4, #12]
 801b550:	075a      	lsls	r2, r3, #29
 801b552:	d505      	bpl.n	801b560 <__sflush_r+0x48>
 801b554:	6863      	ldr	r3, [r4, #4]
 801b556:	1ac0      	subs	r0, r0, r3
 801b558:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801b55a:	b10b      	cbz	r3, 801b560 <__sflush_r+0x48>
 801b55c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801b55e:	1ac0      	subs	r0, r0, r3
 801b560:	2300      	movs	r3, #0
 801b562:	4602      	mov	r2, r0
 801b564:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801b566:	6a21      	ldr	r1, [r4, #32]
 801b568:	4628      	mov	r0, r5
 801b56a:	47b0      	blx	r6
 801b56c:	1c43      	adds	r3, r0, #1
 801b56e:	89a3      	ldrh	r3, [r4, #12]
 801b570:	d106      	bne.n	801b580 <__sflush_r+0x68>
 801b572:	6829      	ldr	r1, [r5, #0]
 801b574:	291d      	cmp	r1, #29
 801b576:	d848      	bhi.n	801b60a <__sflush_r+0xf2>
 801b578:	4a29      	ldr	r2, [pc, #164]	; (801b620 <__sflush_r+0x108>)
 801b57a:	40ca      	lsrs	r2, r1
 801b57c:	07d6      	lsls	r6, r2, #31
 801b57e:	d544      	bpl.n	801b60a <__sflush_r+0xf2>
 801b580:	2200      	movs	r2, #0
 801b582:	6062      	str	r2, [r4, #4]
 801b584:	04d9      	lsls	r1, r3, #19
 801b586:	6922      	ldr	r2, [r4, #16]
 801b588:	6022      	str	r2, [r4, #0]
 801b58a:	d504      	bpl.n	801b596 <__sflush_r+0x7e>
 801b58c:	1c42      	adds	r2, r0, #1
 801b58e:	d101      	bne.n	801b594 <__sflush_r+0x7c>
 801b590:	682b      	ldr	r3, [r5, #0]
 801b592:	b903      	cbnz	r3, 801b596 <__sflush_r+0x7e>
 801b594:	6560      	str	r0, [r4, #84]	; 0x54
 801b596:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801b598:	602f      	str	r7, [r5, #0]
 801b59a:	2900      	cmp	r1, #0
 801b59c:	d0c9      	beq.n	801b532 <__sflush_r+0x1a>
 801b59e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801b5a2:	4299      	cmp	r1, r3
 801b5a4:	d002      	beq.n	801b5ac <__sflush_r+0x94>
 801b5a6:	4628      	mov	r0, r5
 801b5a8:	f7ff faae 	bl	801ab08 <_free_r>
 801b5ac:	2000      	movs	r0, #0
 801b5ae:	6360      	str	r0, [r4, #52]	; 0x34
 801b5b0:	e7c0      	b.n	801b534 <__sflush_r+0x1c>
 801b5b2:	2301      	movs	r3, #1
 801b5b4:	4628      	mov	r0, r5
 801b5b6:	47b0      	blx	r6
 801b5b8:	1c41      	adds	r1, r0, #1
 801b5ba:	d1c8      	bne.n	801b54e <__sflush_r+0x36>
 801b5bc:	682b      	ldr	r3, [r5, #0]
 801b5be:	2b00      	cmp	r3, #0
 801b5c0:	d0c5      	beq.n	801b54e <__sflush_r+0x36>
 801b5c2:	2b1d      	cmp	r3, #29
 801b5c4:	d001      	beq.n	801b5ca <__sflush_r+0xb2>
 801b5c6:	2b16      	cmp	r3, #22
 801b5c8:	d101      	bne.n	801b5ce <__sflush_r+0xb6>
 801b5ca:	602f      	str	r7, [r5, #0]
 801b5cc:	e7b1      	b.n	801b532 <__sflush_r+0x1a>
 801b5ce:	89a3      	ldrh	r3, [r4, #12]
 801b5d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801b5d4:	81a3      	strh	r3, [r4, #12]
 801b5d6:	e7ad      	b.n	801b534 <__sflush_r+0x1c>
 801b5d8:	690f      	ldr	r7, [r1, #16]
 801b5da:	2f00      	cmp	r7, #0
 801b5dc:	d0a9      	beq.n	801b532 <__sflush_r+0x1a>
 801b5de:	0793      	lsls	r3, r2, #30
 801b5e0:	680e      	ldr	r6, [r1, #0]
 801b5e2:	bf08      	it	eq
 801b5e4:	694b      	ldreq	r3, [r1, #20]
 801b5e6:	600f      	str	r7, [r1, #0]
 801b5e8:	bf18      	it	ne
 801b5ea:	2300      	movne	r3, #0
 801b5ec:	eba6 0807 	sub.w	r8, r6, r7
 801b5f0:	608b      	str	r3, [r1, #8]
 801b5f2:	f1b8 0f00 	cmp.w	r8, #0
 801b5f6:	dd9c      	ble.n	801b532 <__sflush_r+0x1a>
 801b5f8:	4643      	mov	r3, r8
 801b5fa:	463a      	mov	r2, r7
 801b5fc:	6a21      	ldr	r1, [r4, #32]
 801b5fe:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801b600:	4628      	mov	r0, r5
 801b602:	47b0      	blx	r6
 801b604:	2800      	cmp	r0, #0
 801b606:	dc06      	bgt.n	801b616 <__sflush_r+0xfe>
 801b608:	89a3      	ldrh	r3, [r4, #12]
 801b60a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801b60e:	81a3      	strh	r3, [r4, #12]
 801b610:	f04f 30ff 	mov.w	r0, #4294967295
 801b614:	e78e      	b.n	801b534 <__sflush_r+0x1c>
 801b616:	4407      	add	r7, r0
 801b618:	eba8 0800 	sub.w	r8, r8, r0
 801b61c:	e7e9      	b.n	801b5f2 <__sflush_r+0xda>
 801b61e:	bf00      	nop
 801b620:	20400001 	.word	0x20400001

0801b624 <_fflush_r>:
 801b624:	b538      	push	{r3, r4, r5, lr}
 801b626:	690b      	ldr	r3, [r1, #16]
 801b628:	4605      	mov	r5, r0
 801b62a:	460c      	mov	r4, r1
 801b62c:	b1db      	cbz	r3, 801b666 <_fflush_r+0x42>
 801b62e:	b118      	cbz	r0, 801b638 <_fflush_r+0x14>
 801b630:	6983      	ldr	r3, [r0, #24]
 801b632:	b90b      	cbnz	r3, 801b638 <_fflush_r+0x14>
 801b634:	f000 f860 	bl	801b6f8 <__sinit>
 801b638:	4b0c      	ldr	r3, [pc, #48]	; (801b66c <_fflush_r+0x48>)
 801b63a:	429c      	cmp	r4, r3
 801b63c:	d109      	bne.n	801b652 <_fflush_r+0x2e>
 801b63e:	686c      	ldr	r4, [r5, #4]
 801b640:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b644:	b17b      	cbz	r3, 801b666 <_fflush_r+0x42>
 801b646:	4621      	mov	r1, r4
 801b648:	4628      	mov	r0, r5
 801b64a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801b64e:	f7ff bf63 	b.w	801b518 <__sflush_r>
 801b652:	4b07      	ldr	r3, [pc, #28]	; (801b670 <_fflush_r+0x4c>)
 801b654:	429c      	cmp	r4, r3
 801b656:	d101      	bne.n	801b65c <_fflush_r+0x38>
 801b658:	68ac      	ldr	r4, [r5, #8]
 801b65a:	e7f1      	b.n	801b640 <_fflush_r+0x1c>
 801b65c:	4b05      	ldr	r3, [pc, #20]	; (801b674 <_fflush_r+0x50>)
 801b65e:	429c      	cmp	r4, r3
 801b660:	bf08      	it	eq
 801b662:	68ec      	ldreq	r4, [r5, #12]
 801b664:	e7ec      	b.n	801b640 <_fflush_r+0x1c>
 801b666:	2000      	movs	r0, #0
 801b668:	bd38      	pop	{r3, r4, r5, pc}
 801b66a:	bf00      	nop
 801b66c:	0801ee4c 	.word	0x0801ee4c
 801b670:	0801ee6c 	.word	0x0801ee6c
 801b674:	0801ee2c 	.word	0x0801ee2c

0801b678 <std>:
 801b678:	2300      	movs	r3, #0
 801b67a:	b510      	push	{r4, lr}
 801b67c:	4604      	mov	r4, r0
 801b67e:	e9c0 3300 	strd	r3, r3, [r0]
 801b682:	6083      	str	r3, [r0, #8]
 801b684:	8181      	strh	r1, [r0, #12]
 801b686:	6643      	str	r3, [r0, #100]	; 0x64
 801b688:	81c2      	strh	r2, [r0, #14]
 801b68a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801b68e:	6183      	str	r3, [r0, #24]
 801b690:	4619      	mov	r1, r3
 801b692:	2208      	movs	r2, #8
 801b694:	305c      	adds	r0, #92	; 0x5c
 801b696:	f7ff fa2e 	bl	801aaf6 <memset>
 801b69a:	4b05      	ldr	r3, [pc, #20]	; (801b6b0 <std+0x38>)
 801b69c:	6263      	str	r3, [r4, #36]	; 0x24
 801b69e:	4b05      	ldr	r3, [pc, #20]	; (801b6b4 <std+0x3c>)
 801b6a0:	62a3      	str	r3, [r4, #40]	; 0x28
 801b6a2:	4b05      	ldr	r3, [pc, #20]	; (801b6b8 <std+0x40>)
 801b6a4:	62e3      	str	r3, [r4, #44]	; 0x2c
 801b6a6:	4b05      	ldr	r3, [pc, #20]	; (801b6bc <std+0x44>)
 801b6a8:	6224      	str	r4, [r4, #32]
 801b6aa:	6323      	str	r3, [r4, #48]	; 0x30
 801b6ac:	bd10      	pop	{r4, pc}
 801b6ae:	bf00      	nop
 801b6b0:	0801bbfd 	.word	0x0801bbfd
 801b6b4:	0801bc1f 	.word	0x0801bc1f
 801b6b8:	0801bc57 	.word	0x0801bc57
 801b6bc:	0801bc7b 	.word	0x0801bc7b

0801b6c0 <_cleanup_r>:
 801b6c0:	4901      	ldr	r1, [pc, #4]	; (801b6c8 <_cleanup_r+0x8>)
 801b6c2:	f000 b885 	b.w	801b7d0 <_fwalk_reent>
 801b6c6:	bf00      	nop
 801b6c8:	0801b625 	.word	0x0801b625

0801b6cc <__sfmoreglue>:
 801b6cc:	b570      	push	{r4, r5, r6, lr}
 801b6ce:	1e4a      	subs	r2, r1, #1
 801b6d0:	2568      	movs	r5, #104	; 0x68
 801b6d2:	4355      	muls	r5, r2
 801b6d4:	460e      	mov	r6, r1
 801b6d6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801b6da:	f7ff fa63 	bl	801aba4 <_malloc_r>
 801b6de:	4604      	mov	r4, r0
 801b6e0:	b140      	cbz	r0, 801b6f4 <__sfmoreglue+0x28>
 801b6e2:	2100      	movs	r1, #0
 801b6e4:	e9c0 1600 	strd	r1, r6, [r0]
 801b6e8:	300c      	adds	r0, #12
 801b6ea:	60a0      	str	r0, [r4, #8]
 801b6ec:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801b6f0:	f7ff fa01 	bl	801aaf6 <memset>
 801b6f4:	4620      	mov	r0, r4
 801b6f6:	bd70      	pop	{r4, r5, r6, pc}

0801b6f8 <__sinit>:
 801b6f8:	6983      	ldr	r3, [r0, #24]
 801b6fa:	b510      	push	{r4, lr}
 801b6fc:	4604      	mov	r4, r0
 801b6fe:	bb33      	cbnz	r3, 801b74e <__sinit+0x56>
 801b700:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 801b704:	6503      	str	r3, [r0, #80]	; 0x50
 801b706:	4b12      	ldr	r3, [pc, #72]	; (801b750 <__sinit+0x58>)
 801b708:	4a12      	ldr	r2, [pc, #72]	; (801b754 <__sinit+0x5c>)
 801b70a:	681b      	ldr	r3, [r3, #0]
 801b70c:	6282      	str	r2, [r0, #40]	; 0x28
 801b70e:	4298      	cmp	r0, r3
 801b710:	bf04      	itt	eq
 801b712:	2301      	moveq	r3, #1
 801b714:	6183      	streq	r3, [r0, #24]
 801b716:	f000 f81f 	bl	801b758 <__sfp>
 801b71a:	6060      	str	r0, [r4, #4]
 801b71c:	4620      	mov	r0, r4
 801b71e:	f000 f81b 	bl	801b758 <__sfp>
 801b722:	60a0      	str	r0, [r4, #8]
 801b724:	4620      	mov	r0, r4
 801b726:	f000 f817 	bl	801b758 <__sfp>
 801b72a:	2200      	movs	r2, #0
 801b72c:	60e0      	str	r0, [r4, #12]
 801b72e:	2104      	movs	r1, #4
 801b730:	6860      	ldr	r0, [r4, #4]
 801b732:	f7ff ffa1 	bl	801b678 <std>
 801b736:	2201      	movs	r2, #1
 801b738:	2109      	movs	r1, #9
 801b73a:	68a0      	ldr	r0, [r4, #8]
 801b73c:	f7ff ff9c 	bl	801b678 <std>
 801b740:	2202      	movs	r2, #2
 801b742:	2112      	movs	r1, #18
 801b744:	68e0      	ldr	r0, [r4, #12]
 801b746:	f7ff ff97 	bl	801b678 <std>
 801b74a:	2301      	movs	r3, #1
 801b74c:	61a3      	str	r3, [r4, #24]
 801b74e:	bd10      	pop	{r4, pc}
 801b750:	0801edf0 	.word	0x0801edf0
 801b754:	0801b6c1 	.word	0x0801b6c1

0801b758 <__sfp>:
 801b758:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b75a:	4b1b      	ldr	r3, [pc, #108]	; (801b7c8 <__sfp+0x70>)
 801b75c:	681e      	ldr	r6, [r3, #0]
 801b75e:	69b3      	ldr	r3, [r6, #24]
 801b760:	4607      	mov	r7, r0
 801b762:	b913      	cbnz	r3, 801b76a <__sfp+0x12>
 801b764:	4630      	mov	r0, r6
 801b766:	f7ff ffc7 	bl	801b6f8 <__sinit>
 801b76a:	3648      	adds	r6, #72	; 0x48
 801b76c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801b770:	3b01      	subs	r3, #1
 801b772:	d503      	bpl.n	801b77c <__sfp+0x24>
 801b774:	6833      	ldr	r3, [r6, #0]
 801b776:	b133      	cbz	r3, 801b786 <__sfp+0x2e>
 801b778:	6836      	ldr	r6, [r6, #0]
 801b77a:	e7f7      	b.n	801b76c <__sfp+0x14>
 801b77c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801b780:	b16d      	cbz	r5, 801b79e <__sfp+0x46>
 801b782:	3468      	adds	r4, #104	; 0x68
 801b784:	e7f4      	b.n	801b770 <__sfp+0x18>
 801b786:	2104      	movs	r1, #4
 801b788:	4638      	mov	r0, r7
 801b78a:	f7ff ff9f 	bl	801b6cc <__sfmoreglue>
 801b78e:	6030      	str	r0, [r6, #0]
 801b790:	2800      	cmp	r0, #0
 801b792:	d1f1      	bne.n	801b778 <__sfp+0x20>
 801b794:	230c      	movs	r3, #12
 801b796:	603b      	str	r3, [r7, #0]
 801b798:	4604      	mov	r4, r0
 801b79a:	4620      	mov	r0, r4
 801b79c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b79e:	4b0b      	ldr	r3, [pc, #44]	; (801b7cc <__sfp+0x74>)
 801b7a0:	6665      	str	r5, [r4, #100]	; 0x64
 801b7a2:	e9c4 5500 	strd	r5, r5, [r4]
 801b7a6:	60a5      	str	r5, [r4, #8]
 801b7a8:	e9c4 3503 	strd	r3, r5, [r4, #12]
 801b7ac:	e9c4 5505 	strd	r5, r5, [r4, #20]
 801b7b0:	2208      	movs	r2, #8
 801b7b2:	4629      	mov	r1, r5
 801b7b4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801b7b8:	f7ff f99d 	bl	801aaf6 <memset>
 801b7bc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801b7c0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801b7c4:	e7e9      	b.n	801b79a <__sfp+0x42>
 801b7c6:	bf00      	nop
 801b7c8:	0801edf0 	.word	0x0801edf0
 801b7cc:	ffff0001 	.word	0xffff0001

0801b7d0 <_fwalk_reent>:
 801b7d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b7d4:	4680      	mov	r8, r0
 801b7d6:	4689      	mov	r9, r1
 801b7d8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801b7dc:	2600      	movs	r6, #0
 801b7de:	b914      	cbnz	r4, 801b7e6 <_fwalk_reent+0x16>
 801b7e0:	4630      	mov	r0, r6
 801b7e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b7e6:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 801b7ea:	3f01      	subs	r7, #1
 801b7ec:	d501      	bpl.n	801b7f2 <_fwalk_reent+0x22>
 801b7ee:	6824      	ldr	r4, [r4, #0]
 801b7f0:	e7f5      	b.n	801b7de <_fwalk_reent+0xe>
 801b7f2:	89ab      	ldrh	r3, [r5, #12]
 801b7f4:	2b01      	cmp	r3, #1
 801b7f6:	d907      	bls.n	801b808 <_fwalk_reent+0x38>
 801b7f8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801b7fc:	3301      	adds	r3, #1
 801b7fe:	d003      	beq.n	801b808 <_fwalk_reent+0x38>
 801b800:	4629      	mov	r1, r5
 801b802:	4640      	mov	r0, r8
 801b804:	47c8      	blx	r9
 801b806:	4306      	orrs	r6, r0
 801b808:	3568      	adds	r5, #104	; 0x68
 801b80a:	e7ee      	b.n	801b7ea <_fwalk_reent+0x1a>

0801b80c <__swhatbuf_r>:
 801b80c:	b570      	push	{r4, r5, r6, lr}
 801b80e:	460e      	mov	r6, r1
 801b810:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b814:	2900      	cmp	r1, #0
 801b816:	b096      	sub	sp, #88	; 0x58
 801b818:	4614      	mov	r4, r2
 801b81a:	461d      	mov	r5, r3
 801b81c:	da07      	bge.n	801b82e <__swhatbuf_r+0x22>
 801b81e:	2300      	movs	r3, #0
 801b820:	602b      	str	r3, [r5, #0]
 801b822:	89b3      	ldrh	r3, [r6, #12]
 801b824:	061a      	lsls	r2, r3, #24
 801b826:	d410      	bmi.n	801b84a <__swhatbuf_r+0x3e>
 801b828:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801b82c:	e00e      	b.n	801b84c <__swhatbuf_r+0x40>
 801b82e:	466a      	mov	r2, sp
 801b830:	f000 fa4a 	bl	801bcc8 <_fstat_r>
 801b834:	2800      	cmp	r0, #0
 801b836:	dbf2      	blt.n	801b81e <__swhatbuf_r+0x12>
 801b838:	9a01      	ldr	r2, [sp, #4]
 801b83a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801b83e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801b842:	425a      	negs	r2, r3
 801b844:	415a      	adcs	r2, r3
 801b846:	602a      	str	r2, [r5, #0]
 801b848:	e7ee      	b.n	801b828 <__swhatbuf_r+0x1c>
 801b84a:	2340      	movs	r3, #64	; 0x40
 801b84c:	2000      	movs	r0, #0
 801b84e:	6023      	str	r3, [r4, #0]
 801b850:	b016      	add	sp, #88	; 0x58
 801b852:	bd70      	pop	{r4, r5, r6, pc}

0801b854 <__smakebuf_r>:
 801b854:	898b      	ldrh	r3, [r1, #12]
 801b856:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801b858:	079d      	lsls	r5, r3, #30
 801b85a:	4606      	mov	r6, r0
 801b85c:	460c      	mov	r4, r1
 801b85e:	d507      	bpl.n	801b870 <__smakebuf_r+0x1c>
 801b860:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801b864:	6023      	str	r3, [r4, #0]
 801b866:	6123      	str	r3, [r4, #16]
 801b868:	2301      	movs	r3, #1
 801b86a:	6163      	str	r3, [r4, #20]
 801b86c:	b002      	add	sp, #8
 801b86e:	bd70      	pop	{r4, r5, r6, pc}
 801b870:	ab01      	add	r3, sp, #4
 801b872:	466a      	mov	r2, sp
 801b874:	f7ff ffca 	bl	801b80c <__swhatbuf_r>
 801b878:	9900      	ldr	r1, [sp, #0]
 801b87a:	4605      	mov	r5, r0
 801b87c:	4630      	mov	r0, r6
 801b87e:	f7ff f991 	bl	801aba4 <_malloc_r>
 801b882:	b948      	cbnz	r0, 801b898 <__smakebuf_r+0x44>
 801b884:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b888:	059a      	lsls	r2, r3, #22
 801b88a:	d4ef      	bmi.n	801b86c <__smakebuf_r+0x18>
 801b88c:	f023 0303 	bic.w	r3, r3, #3
 801b890:	f043 0302 	orr.w	r3, r3, #2
 801b894:	81a3      	strh	r3, [r4, #12]
 801b896:	e7e3      	b.n	801b860 <__smakebuf_r+0xc>
 801b898:	4b0d      	ldr	r3, [pc, #52]	; (801b8d0 <__smakebuf_r+0x7c>)
 801b89a:	62b3      	str	r3, [r6, #40]	; 0x28
 801b89c:	89a3      	ldrh	r3, [r4, #12]
 801b89e:	6020      	str	r0, [r4, #0]
 801b8a0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801b8a4:	81a3      	strh	r3, [r4, #12]
 801b8a6:	9b00      	ldr	r3, [sp, #0]
 801b8a8:	6163      	str	r3, [r4, #20]
 801b8aa:	9b01      	ldr	r3, [sp, #4]
 801b8ac:	6120      	str	r0, [r4, #16]
 801b8ae:	b15b      	cbz	r3, 801b8c8 <__smakebuf_r+0x74>
 801b8b0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801b8b4:	4630      	mov	r0, r6
 801b8b6:	f000 fa19 	bl	801bcec <_isatty_r>
 801b8ba:	b128      	cbz	r0, 801b8c8 <__smakebuf_r+0x74>
 801b8bc:	89a3      	ldrh	r3, [r4, #12]
 801b8be:	f023 0303 	bic.w	r3, r3, #3
 801b8c2:	f043 0301 	orr.w	r3, r3, #1
 801b8c6:	81a3      	strh	r3, [r4, #12]
 801b8c8:	89a3      	ldrh	r3, [r4, #12]
 801b8ca:	431d      	orrs	r5, r3
 801b8cc:	81a5      	strh	r5, [r4, #12]
 801b8ce:	e7cd      	b.n	801b86c <__smakebuf_r+0x18>
 801b8d0:	0801b6c1 	.word	0x0801b6c1

0801b8d4 <memmove>:
 801b8d4:	4288      	cmp	r0, r1
 801b8d6:	b510      	push	{r4, lr}
 801b8d8:	eb01 0302 	add.w	r3, r1, r2
 801b8dc:	d807      	bhi.n	801b8ee <memmove+0x1a>
 801b8de:	1e42      	subs	r2, r0, #1
 801b8e0:	4299      	cmp	r1, r3
 801b8e2:	d00a      	beq.n	801b8fa <memmove+0x26>
 801b8e4:	f811 4b01 	ldrb.w	r4, [r1], #1
 801b8e8:	f802 4f01 	strb.w	r4, [r2, #1]!
 801b8ec:	e7f8      	b.n	801b8e0 <memmove+0xc>
 801b8ee:	4283      	cmp	r3, r0
 801b8f0:	d9f5      	bls.n	801b8de <memmove+0xa>
 801b8f2:	1881      	adds	r1, r0, r2
 801b8f4:	1ad2      	subs	r2, r2, r3
 801b8f6:	42d3      	cmn	r3, r2
 801b8f8:	d100      	bne.n	801b8fc <memmove+0x28>
 801b8fa:	bd10      	pop	{r4, pc}
 801b8fc:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801b900:	f801 4d01 	strb.w	r4, [r1, #-1]!
 801b904:	e7f7      	b.n	801b8f6 <memmove+0x22>

0801b906 <__malloc_lock>:
 801b906:	4770      	bx	lr

0801b908 <__malloc_unlock>:
 801b908:	4770      	bx	lr

0801b90a <_realloc_r>:
 801b90a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b90c:	4607      	mov	r7, r0
 801b90e:	4614      	mov	r4, r2
 801b910:	460e      	mov	r6, r1
 801b912:	b921      	cbnz	r1, 801b91e <_realloc_r+0x14>
 801b914:	4611      	mov	r1, r2
 801b916:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801b91a:	f7ff b943 	b.w	801aba4 <_malloc_r>
 801b91e:	b922      	cbnz	r2, 801b92a <_realloc_r+0x20>
 801b920:	f7ff f8f2 	bl	801ab08 <_free_r>
 801b924:	4625      	mov	r5, r4
 801b926:	4628      	mov	r0, r5
 801b928:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b92a:	f000 fa01 	bl	801bd30 <_malloc_usable_size_r>
 801b92e:	42a0      	cmp	r0, r4
 801b930:	d20f      	bcs.n	801b952 <_realloc_r+0x48>
 801b932:	4621      	mov	r1, r4
 801b934:	4638      	mov	r0, r7
 801b936:	f7ff f935 	bl	801aba4 <_malloc_r>
 801b93a:	4605      	mov	r5, r0
 801b93c:	2800      	cmp	r0, #0
 801b93e:	d0f2      	beq.n	801b926 <_realloc_r+0x1c>
 801b940:	4631      	mov	r1, r6
 801b942:	4622      	mov	r2, r4
 801b944:	f7ff f8cc 	bl	801aae0 <memcpy>
 801b948:	4631      	mov	r1, r6
 801b94a:	4638      	mov	r0, r7
 801b94c:	f7ff f8dc 	bl	801ab08 <_free_r>
 801b950:	e7e9      	b.n	801b926 <_realloc_r+0x1c>
 801b952:	4635      	mov	r5, r6
 801b954:	e7e7      	b.n	801b926 <_realloc_r+0x1c>

0801b956 <__ssputs_r>:
 801b956:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b95a:	688e      	ldr	r6, [r1, #8]
 801b95c:	429e      	cmp	r6, r3
 801b95e:	4682      	mov	sl, r0
 801b960:	460c      	mov	r4, r1
 801b962:	4690      	mov	r8, r2
 801b964:	4699      	mov	r9, r3
 801b966:	d837      	bhi.n	801b9d8 <__ssputs_r+0x82>
 801b968:	898a      	ldrh	r2, [r1, #12]
 801b96a:	f412 6f90 	tst.w	r2, #1152	; 0x480
 801b96e:	d031      	beq.n	801b9d4 <__ssputs_r+0x7e>
 801b970:	6825      	ldr	r5, [r4, #0]
 801b972:	6909      	ldr	r1, [r1, #16]
 801b974:	1a6f      	subs	r7, r5, r1
 801b976:	6965      	ldr	r5, [r4, #20]
 801b978:	2302      	movs	r3, #2
 801b97a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801b97e:	fb95 f5f3 	sdiv	r5, r5, r3
 801b982:	f109 0301 	add.w	r3, r9, #1
 801b986:	443b      	add	r3, r7
 801b988:	429d      	cmp	r5, r3
 801b98a:	bf38      	it	cc
 801b98c:	461d      	movcc	r5, r3
 801b98e:	0553      	lsls	r3, r2, #21
 801b990:	d530      	bpl.n	801b9f4 <__ssputs_r+0x9e>
 801b992:	4629      	mov	r1, r5
 801b994:	f7ff f906 	bl	801aba4 <_malloc_r>
 801b998:	4606      	mov	r6, r0
 801b99a:	b950      	cbnz	r0, 801b9b2 <__ssputs_r+0x5c>
 801b99c:	230c      	movs	r3, #12
 801b99e:	f8ca 3000 	str.w	r3, [sl]
 801b9a2:	89a3      	ldrh	r3, [r4, #12]
 801b9a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801b9a8:	81a3      	strh	r3, [r4, #12]
 801b9aa:	f04f 30ff 	mov.w	r0, #4294967295
 801b9ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b9b2:	463a      	mov	r2, r7
 801b9b4:	6921      	ldr	r1, [r4, #16]
 801b9b6:	f7ff f893 	bl	801aae0 <memcpy>
 801b9ba:	89a3      	ldrh	r3, [r4, #12]
 801b9bc:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 801b9c0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801b9c4:	81a3      	strh	r3, [r4, #12]
 801b9c6:	6126      	str	r6, [r4, #16]
 801b9c8:	6165      	str	r5, [r4, #20]
 801b9ca:	443e      	add	r6, r7
 801b9cc:	1bed      	subs	r5, r5, r7
 801b9ce:	6026      	str	r6, [r4, #0]
 801b9d0:	60a5      	str	r5, [r4, #8]
 801b9d2:	464e      	mov	r6, r9
 801b9d4:	454e      	cmp	r6, r9
 801b9d6:	d900      	bls.n	801b9da <__ssputs_r+0x84>
 801b9d8:	464e      	mov	r6, r9
 801b9da:	4632      	mov	r2, r6
 801b9dc:	4641      	mov	r1, r8
 801b9de:	6820      	ldr	r0, [r4, #0]
 801b9e0:	f7ff ff78 	bl	801b8d4 <memmove>
 801b9e4:	68a3      	ldr	r3, [r4, #8]
 801b9e6:	1b9b      	subs	r3, r3, r6
 801b9e8:	60a3      	str	r3, [r4, #8]
 801b9ea:	6823      	ldr	r3, [r4, #0]
 801b9ec:	441e      	add	r6, r3
 801b9ee:	6026      	str	r6, [r4, #0]
 801b9f0:	2000      	movs	r0, #0
 801b9f2:	e7dc      	b.n	801b9ae <__ssputs_r+0x58>
 801b9f4:	462a      	mov	r2, r5
 801b9f6:	f7ff ff88 	bl	801b90a <_realloc_r>
 801b9fa:	4606      	mov	r6, r0
 801b9fc:	2800      	cmp	r0, #0
 801b9fe:	d1e2      	bne.n	801b9c6 <__ssputs_r+0x70>
 801ba00:	6921      	ldr	r1, [r4, #16]
 801ba02:	4650      	mov	r0, sl
 801ba04:	f7ff f880 	bl	801ab08 <_free_r>
 801ba08:	e7c8      	b.n	801b99c <__ssputs_r+0x46>
	...

0801ba0c <_svfiprintf_r>:
 801ba0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba10:	461d      	mov	r5, r3
 801ba12:	898b      	ldrh	r3, [r1, #12]
 801ba14:	061f      	lsls	r7, r3, #24
 801ba16:	b09d      	sub	sp, #116	; 0x74
 801ba18:	4680      	mov	r8, r0
 801ba1a:	460c      	mov	r4, r1
 801ba1c:	4616      	mov	r6, r2
 801ba1e:	d50f      	bpl.n	801ba40 <_svfiprintf_r+0x34>
 801ba20:	690b      	ldr	r3, [r1, #16]
 801ba22:	b96b      	cbnz	r3, 801ba40 <_svfiprintf_r+0x34>
 801ba24:	2140      	movs	r1, #64	; 0x40
 801ba26:	f7ff f8bd 	bl	801aba4 <_malloc_r>
 801ba2a:	6020      	str	r0, [r4, #0]
 801ba2c:	6120      	str	r0, [r4, #16]
 801ba2e:	b928      	cbnz	r0, 801ba3c <_svfiprintf_r+0x30>
 801ba30:	230c      	movs	r3, #12
 801ba32:	f8c8 3000 	str.w	r3, [r8]
 801ba36:	f04f 30ff 	mov.w	r0, #4294967295
 801ba3a:	e0c8      	b.n	801bbce <_svfiprintf_r+0x1c2>
 801ba3c:	2340      	movs	r3, #64	; 0x40
 801ba3e:	6163      	str	r3, [r4, #20]
 801ba40:	2300      	movs	r3, #0
 801ba42:	9309      	str	r3, [sp, #36]	; 0x24
 801ba44:	2320      	movs	r3, #32
 801ba46:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801ba4a:	2330      	movs	r3, #48	; 0x30
 801ba4c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801ba50:	9503      	str	r5, [sp, #12]
 801ba52:	f04f 0b01 	mov.w	fp, #1
 801ba56:	4637      	mov	r7, r6
 801ba58:	463d      	mov	r5, r7
 801ba5a:	f815 3b01 	ldrb.w	r3, [r5], #1
 801ba5e:	b10b      	cbz	r3, 801ba64 <_svfiprintf_r+0x58>
 801ba60:	2b25      	cmp	r3, #37	; 0x25
 801ba62:	d13e      	bne.n	801bae2 <_svfiprintf_r+0xd6>
 801ba64:	ebb7 0a06 	subs.w	sl, r7, r6
 801ba68:	d00b      	beq.n	801ba82 <_svfiprintf_r+0x76>
 801ba6a:	4653      	mov	r3, sl
 801ba6c:	4632      	mov	r2, r6
 801ba6e:	4621      	mov	r1, r4
 801ba70:	4640      	mov	r0, r8
 801ba72:	f7ff ff70 	bl	801b956 <__ssputs_r>
 801ba76:	3001      	adds	r0, #1
 801ba78:	f000 80a4 	beq.w	801bbc4 <_svfiprintf_r+0x1b8>
 801ba7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ba7e:	4453      	add	r3, sl
 801ba80:	9309      	str	r3, [sp, #36]	; 0x24
 801ba82:	783b      	ldrb	r3, [r7, #0]
 801ba84:	2b00      	cmp	r3, #0
 801ba86:	f000 809d 	beq.w	801bbc4 <_svfiprintf_r+0x1b8>
 801ba8a:	2300      	movs	r3, #0
 801ba8c:	f04f 32ff 	mov.w	r2, #4294967295
 801ba90:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801ba94:	9304      	str	r3, [sp, #16]
 801ba96:	9307      	str	r3, [sp, #28]
 801ba98:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801ba9c:	931a      	str	r3, [sp, #104]	; 0x68
 801ba9e:	462f      	mov	r7, r5
 801baa0:	2205      	movs	r2, #5
 801baa2:	f817 1b01 	ldrb.w	r1, [r7], #1
 801baa6:	4850      	ldr	r0, [pc, #320]	; (801bbe8 <_svfiprintf_r+0x1dc>)
 801baa8:	f7e4 fbaa 	bl	8000200 <memchr>
 801baac:	9b04      	ldr	r3, [sp, #16]
 801baae:	b9d0      	cbnz	r0, 801bae6 <_svfiprintf_r+0xda>
 801bab0:	06d9      	lsls	r1, r3, #27
 801bab2:	bf44      	itt	mi
 801bab4:	2220      	movmi	r2, #32
 801bab6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801baba:	071a      	lsls	r2, r3, #28
 801babc:	bf44      	itt	mi
 801babe:	222b      	movmi	r2, #43	; 0x2b
 801bac0:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801bac4:	782a      	ldrb	r2, [r5, #0]
 801bac6:	2a2a      	cmp	r2, #42	; 0x2a
 801bac8:	d015      	beq.n	801baf6 <_svfiprintf_r+0xea>
 801baca:	9a07      	ldr	r2, [sp, #28]
 801bacc:	462f      	mov	r7, r5
 801bace:	2000      	movs	r0, #0
 801bad0:	250a      	movs	r5, #10
 801bad2:	4639      	mov	r1, r7
 801bad4:	f811 3b01 	ldrb.w	r3, [r1], #1
 801bad8:	3b30      	subs	r3, #48	; 0x30
 801bada:	2b09      	cmp	r3, #9
 801badc:	d94d      	bls.n	801bb7a <_svfiprintf_r+0x16e>
 801bade:	b1b8      	cbz	r0, 801bb10 <_svfiprintf_r+0x104>
 801bae0:	e00f      	b.n	801bb02 <_svfiprintf_r+0xf6>
 801bae2:	462f      	mov	r7, r5
 801bae4:	e7b8      	b.n	801ba58 <_svfiprintf_r+0x4c>
 801bae6:	4a40      	ldr	r2, [pc, #256]	; (801bbe8 <_svfiprintf_r+0x1dc>)
 801bae8:	1a80      	subs	r0, r0, r2
 801baea:	fa0b f000 	lsl.w	r0, fp, r0
 801baee:	4318      	orrs	r0, r3
 801baf0:	9004      	str	r0, [sp, #16]
 801baf2:	463d      	mov	r5, r7
 801baf4:	e7d3      	b.n	801ba9e <_svfiprintf_r+0x92>
 801baf6:	9a03      	ldr	r2, [sp, #12]
 801baf8:	1d11      	adds	r1, r2, #4
 801bafa:	6812      	ldr	r2, [r2, #0]
 801bafc:	9103      	str	r1, [sp, #12]
 801bafe:	2a00      	cmp	r2, #0
 801bb00:	db01      	blt.n	801bb06 <_svfiprintf_r+0xfa>
 801bb02:	9207      	str	r2, [sp, #28]
 801bb04:	e004      	b.n	801bb10 <_svfiprintf_r+0x104>
 801bb06:	4252      	negs	r2, r2
 801bb08:	f043 0302 	orr.w	r3, r3, #2
 801bb0c:	9207      	str	r2, [sp, #28]
 801bb0e:	9304      	str	r3, [sp, #16]
 801bb10:	783b      	ldrb	r3, [r7, #0]
 801bb12:	2b2e      	cmp	r3, #46	; 0x2e
 801bb14:	d10c      	bne.n	801bb30 <_svfiprintf_r+0x124>
 801bb16:	787b      	ldrb	r3, [r7, #1]
 801bb18:	2b2a      	cmp	r3, #42	; 0x2a
 801bb1a:	d133      	bne.n	801bb84 <_svfiprintf_r+0x178>
 801bb1c:	9b03      	ldr	r3, [sp, #12]
 801bb1e:	1d1a      	adds	r2, r3, #4
 801bb20:	681b      	ldr	r3, [r3, #0]
 801bb22:	9203      	str	r2, [sp, #12]
 801bb24:	2b00      	cmp	r3, #0
 801bb26:	bfb8      	it	lt
 801bb28:	f04f 33ff 	movlt.w	r3, #4294967295
 801bb2c:	3702      	adds	r7, #2
 801bb2e:	9305      	str	r3, [sp, #20]
 801bb30:	4d2e      	ldr	r5, [pc, #184]	; (801bbec <_svfiprintf_r+0x1e0>)
 801bb32:	7839      	ldrb	r1, [r7, #0]
 801bb34:	2203      	movs	r2, #3
 801bb36:	4628      	mov	r0, r5
 801bb38:	f7e4 fb62 	bl	8000200 <memchr>
 801bb3c:	b138      	cbz	r0, 801bb4e <_svfiprintf_r+0x142>
 801bb3e:	2340      	movs	r3, #64	; 0x40
 801bb40:	1b40      	subs	r0, r0, r5
 801bb42:	fa03 f000 	lsl.w	r0, r3, r0
 801bb46:	9b04      	ldr	r3, [sp, #16]
 801bb48:	4303      	orrs	r3, r0
 801bb4a:	3701      	adds	r7, #1
 801bb4c:	9304      	str	r3, [sp, #16]
 801bb4e:	7839      	ldrb	r1, [r7, #0]
 801bb50:	4827      	ldr	r0, [pc, #156]	; (801bbf0 <_svfiprintf_r+0x1e4>)
 801bb52:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801bb56:	2206      	movs	r2, #6
 801bb58:	1c7e      	adds	r6, r7, #1
 801bb5a:	f7e4 fb51 	bl	8000200 <memchr>
 801bb5e:	2800      	cmp	r0, #0
 801bb60:	d038      	beq.n	801bbd4 <_svfiprintf_r+0x1c8>
 801bb62:	4b24      	ldr	r3, [pc, #144]	; (801bbf4 <_svfiprintf_r+0x1e8>)
 801bb64:	bb13      	cbnz	r3, 801bbac <_svfiprintf_r+0x1a0>
 801bb66:	9b03      	ldr	r3, [sp, #12]
 801bb68:	3307      	adds	r3, #7
 801bb6a:	f023 0307 	bic.w	r3, r3, #7
 801bb6e:	3308      	adds	r3, #8
 801bb70:	9303      	str	r3, [sp, #12]
 801bb72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bb74:	444b      	add	r3, r9
 801bb76:	9309      	str	r3, [sp, #36]	; 0x24
 801bb78:	e76d      	b.n	801ba56 <_svfiprintf_r+0x4a>
 801bb7a:	fb05 3202 	mla	r2, r5, r2, r3
 801bb7e:	2001      	movs	r0, #1
 801bb80:	460f      	mov	r7, r1
 801bb82:	e7a6      	b.n	801bad2 <_svfiprintf_r+0xc6>
 801bb84:	2300      	movs	r3, #0
 801bb86:	3701      	adds	r7, #1
 801bb88:	9305      	str	r3, [sp, #20]
 801bb8a:	4619      	mov	r1, r3
 801bb8c:	250a      	movs	r5, #10
 801bb8e:	4638      	mov	r0, r7
 801bb90:	f810 2b01 	ldrb.w	r2, [r0], #1
 801bb94:	3a30      	subs	r2, #48	; 0x30
 801bb96:	2a09      	cmp	r2, #9
 801bb98:	d903      	bls.n	801bba2 <_svfiprintf_r+0x196>
 801bb9a:	2b00      	cmp	r3, #0
 801bb9c:	d0c8      	beq.n	801bb30 <_svfiprintf_r+0x124>
 801bb9e:	9105      	str	r1, [sp, #20]
 801bba0:	e7c6      	b.n	801bb30 <_svfiprintf_r+0x124>
 801bba2:	fb05 2101 	mla	r1, r5, r1, r2
 801bba6:	2301      	movs	r3, #1
 801bba8:	4607      	mov	r7, r0
 801bbaa:	e7f0      	b.n	801bb8e <_svfiprintf_r+0x182>
 801bbac:	ab03      	add	r3, sp, #12
 801bbae:	9300      	str	r3, [sp, #0]
 801bbb0:	4622      	mov	r2, r4
 801bbb2:	4b11      	ldr	r3, [pc, #68]	; (801bbf8 <_svfiprintf_r+0x1ec>)
 801bbb4:	a904      	add	r1, sp, #16
 801bbb6:	4640      	mov	r0, r8
 801bbb8:	f3af 8000 	nop.w
 801bbbc:	f1b0 3fff 	cmp.w	r0, #4294967295
 801bbc0:	4681      	mov	r9, r0
 801bbc2:	d1d6      	bne.n	801bb72 <_svfiprintf_r+0x166>
 801bbc4:	89a3      	ldrh	r3, [r4, #12]
 801bbc6:	065b      	lsls	r3, r3, #25
 801bbc8:	f53f af35 	bmi.w	801ba36 <_svfiprintf_r+0x2a>
 801bbcc:	9809      	ldr	r0, [sp, #36]	; 0x24
 801bbce:	b01d      	add	sp, #116	; 0x74
 801bbd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bbd4:	ab03      	add	r3, sp, #12
 801bbd6:	9300      	str	r3, [sp, #0]
 801bbd8:	4622      	mov	r2, r4
 801bbda:	4b07      	ldr	r3, [pc, #28]	; (801bbf8 <_svfiprintf_r+0x1ec>)
 801bbdc:	a904      	add	r1, sp, #16
 801bbde:	4640      	mov	r0, r8
 801bbe0:	f7ff f9f0 	bl	801afc4 <_printf_i>
 801bbe4:	e7ea      	b.n	801bbbc <_svfiprintf_r+0x1b0>
 801bbe6:	bf00      	nop
 801bbe8:	0801edf4 	.word	0x0801edf4
 801bbec:	0801edfa 	.word	0x0801edfa
 801bbf0:	0801edfe 	.word	0x0801edfe
 801bbf4:	00000000 	.word	0x00000000
 801bbf8:	0801b957 	.word	0x0801b957

0801bbfc <__sread>:
 801bbfc:	b510      	push	{r4, lr}
 801bbfe:	460c      	mov	r4, r1
 801bc00:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801bc04:	f000 f89c 	bl	801bd40 <_read_r>
 801bc08:	2800      	cmp	r0, #0
 801bc0a:	bfab      	itete	ge
 801bc0c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801bc0e:	89a3      	ldrhlt	r3, [r4, #12]
 801bc10:	181b      	addge	r3, r3, r0
 801bc12:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801bc16:	bfac      	ite	ge
 801bc18:	6563      	strge	r3, [r4, #84]	; 0x54
 801bc1a:	81a3      	strhlt	r3, [r4, #12]
 801bc1c:	bd10      	pop	{r4, pc}

0801bc1e <__swrite>:
 801bc1e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801bc22:	461f      	mov	r7, r3
 801bc24:	898b      	ldrh	r3, [r1, #12]
 801bc26:	05db      	lsls	r3, r3, #23
 801bc28:	4605      	mov	r5, r0
 801bc2a:	460c      	mov	r4, r1
 801bc2c:	4616      	mov	r6, r2
 801bc2e:	d505      	bpl.n	801bc3c <__swrite+0x1e>
 801bc30:	2302      	movs	r3, #2
 801bc32:	2200      	movs	r2, #0
 801bc34:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801bc38:	f000 f868 	bl	801bd0c <_lseek_r>
 801bc3c:	89a3      	ldrh	r3, [r4, #12]
 801bc3e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801bc42:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801bc46:	81a3      	strh	r3, [r4, #12]
 801bc48:	4632      	mov	r2, r6
 801bc4a:	463b      	mov	r3, r7
 801bc4c:	4628      	mov	r0, r5
 801bc4e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801bc52:	f000 b817 	b.w	801bc84 <_write_r>

0801bc56 <__sseek>:
 801bc56:	b510      	push	{r4, lr}
 801bc58:	460c      	mov	r4, r1
 801bc5a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801bc5e:	f000 f855 	bl	801bd0c <_lseek_r>
 801bc62:	1c43      	adds	r3, r0, #1
 801bc64:	89a3      	ldrh	r3, [r4, #12]
 801bc66:	bf15      	itete	ne
 801bc68:	6560      	strne	r0, [r4, #84]	; 0x54
 801bc6a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801bc6e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801bc72:	81a3      	strheq	r3, [r4, #12]
 801bc74:	bf18      	it	ne
 801bc76:	81a3      	strhne	r3, [r4, #12]
 801bc78:	bd10      	pop	{r4, pc}

0801bc7a <__sclose>:
 801bc7a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801bc7e:	f000 b813 	b.w	801bca8 <_close_r>
	...

0801bc84 <_write_r>:
 801bc84:	b538      	push	{r3, r4, r5, lr}
 801bc86:	4c07      	ldr	r4, [pc, #28]	; (801bca4 <_write_r+0x20>)
 801bc88:	4605      	mov	r5, r0
 801bc8a:	4608      	mov	r0, r1
 801bc8c:	4611      	mov	r1, r2
 801bc8e:	2200      	movs	r2, #0
 801bc90:	6022      	str	r2, [r4, #0]
 801bc92:	461a      	mov	r2, r3
 801bc94:	f7e6 fbf5 	bl	8002482 <_write>
 801bc98:	1c43      	adds	r3, r0, #1
 801bc9a:	d102      	bne.n	801bca2 <_write_r+0x1e>
 801bc9c:	6823      	ldr	r3, [r4, #0]
 801bc9e:	b103      	cbz	r3, 801bca2 <_write_r+0x1e>
 801bca0:	602b      	str	r3, [r5, #0]
 801bca2:	bd38      	pop	{r3, r4, r5, pc}
 801bca4:	20027008 	.word	0x20027008

0801bca8 <_close_r>:
 801bca8:	b538      	push	{r3, r4, r5, lr}
 801bcaa:	4c06      	ldr	r4, [pc, #24]	; (801bcc4 <_close_r+0x1c>)
 801bcac:	2300      	movs	r3, #0
 801bcae:	4605      	mov	r5, r0
 801bcb0:	4608      	mov	r0, r1
 801bcb2:	6023      	str	r3, [r4, #0]
 801bcb4:	f7e6 fc01 	bl	80024ba <_close>
 801bcb8:	1c43      	adds	r3, r0, #1
 801bcba:	d102      	bne.n	801bcc2 <_close_r+0x1a>
 801bcbc:	6823      	ldr	r3, [r4, #0]
 801bcbe:	b103      	cbz	r3, 801bcc2 <_close_r+0x1a>
 801bcc0:	602b      	str	r3, [r5, #0]
 801bcc2:	bd38      	pop	{r3, r4, r5, pc}
 801bcc4:	20027008 	.word	0x20027008

0801bcc8 <_fstat_r>:
 801bcc8:	b538      	push	{r3, r4, r5, lr}
 801bcca:	4c07      	ldr	r4, [pc, #28]	; (801bce8 <_fstat_r+0x20>)
 801bccc:	2300      	movs	r3, #0
 801bcce:	4605      	mov	r5, r0
 801bcd0:	4608      	mov	r0, r1
 801bcd2:	4611      	mov	r1, r2
 801bcd4:	6023      	str	r3, [r4, #0]
 801bcd6:	f7e6 fbfc 	bl	80024d2 <_fstat>
 801bcda:	1c43      	adds	r3, r0, #1
 801bcdc:	d102      	bne.n	801bce4 <_fstat_r+0x1c>
 801bcde:	6823      	ldr	r3, [r4, #0]
 801bce0:	b103      	cbz	r3, 801bce4 <_fstat_r+0x1c>
 801bce2:	602b      	str	r3, [r5, #0]
 801bce4:	bd38      	pop	{r3, r4, r5, pc}
 801bce6:	bf00      	nop
 801bce8:	20027008 	.word	0x20027008

0801bcec <_isatty_r>:
 801bcec:	b538      	push	{r3, r4, r5, lr}
 801bcee:	4c06      	ldr	r4, [pc, #24]	; (801bd08 <_isatty_r+0x1c>)
 801bcf0:	2300      	movs	r3, #0
 801bcf2:	4605      	mov	r5, r0
 801bcf4:	4608      	mov	r0, r1
 801bcf6:	6023      	str	r3, [r4, #0]
 801bcf8:	f7e6 fbfb 	bl	80024f2 <_isatty>
 801bcfc:	1c43      	adds	r3, r0, #1
 801bcfe:	d102      	bne.n	801bd06 <_isatty_r+0x1a>
 801bd00:	6823      	ldr	r3, [r4, #0]
 801bd02:	b103      	cbz	r3, 801bd06 <_isatty_r+0x1a>
 801bd04:	602b      	str	r3, [r5, #0]
 801bd06:	bd38      	pop	{r3, r4, r5, pc}
 801bd08:	20027008 	.word	0x20027008

0801bd0c <_lseek_r>:
 801bd0c:	b538      	push	{r3, r4, r5, lr}
 801bd0e:	4c07      	ldr	r4, [pc, #28]	; (801bd2c <_lseek_r+0x20>)
 801bd10:	4605      	mov	r5, r0
 801bd12:	4608      	mov	r0, r1
 801bd14:	4611      	mov	r1, r2
 801bd16:	2200      	movs	r2, #0
 801bd18:	6022      	str	r2, [r4, #0]
 801bd1a:	461a      	mov	r2, r3
 801bd1c:	f7e6 fbf4 	bl	8002508 <_lseek>
 801bd20:	1c43      	adds	r3, r0, #1
 801bd22:	d102      	bne.n	801bd2a <_lseek_r+0x1e>
 801bd24:	6823      	ldr	r3, [r4, #0]
 801bd26:	b103      	cbz	r3, 801bd2a <_lseek_r+0x1e>
 801bd28:	602b      	str	r3, [r5, #0]
 801bd2a:	bd38      	pop	{r3, r4, r5, pc}
 801bd2c:	20027008 	.word	0x20027008

0801bd30 <_malloc_usable_size_r>:
 801bd30:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801bd34:	1f18      	subs	r0, r3, #4
 801bd36:	2b00      	cmp	r3, #0
 801bd38:	bfbc      	itt	lt
 801bd3a:	580b      	ldrlt	r3, [r1, r0]
 801bd3c:	18c0      	addlt	r0, r0, r3
 801bd3e:	4770      	bx	lr

0801bd40 <_read_r>:
 801bd40:	b538      	push	{r3, r4, r5, lr}
 801bd42:	4c07      	ldr	r4, [pc, #28]	; (801bd60 <_read_r+0x20>)
 801bd44:	4605      	mov	r5, r0
 801bd46:	4608      	mov	r0, r1
 801bd48:	4611      	mov	r1, r2
 801bd4a:	2200      	movs	r2, #0
 801bd4c:	6022      	str	r2, [r4, #0]
 801bd4e:	461a      	mov	r2, r3
 801bd50:	f7e6 fb7a 	bl	8002448 <_read>
 801bd54:	1c43      	adds	r3, r0, #1
 801bd56:	d102      	bne.n	801bd5e <_read_r+0x1e>
 801bd58:	6823      	ldr	r3, [r4, #0]
 801bd5a:	b103      	cbz	r3, 801bd5e <_read_r+0x1e>
 801bd5c:	602b      	str	r3, [r5, #0]
 801bd5e:	bd38      	pop	{r3, r4, r5, pc}
 801bd60:	20027008 	.word	0x20027008

0801bd64 <_init>:
 801bd64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bd66:	bf00      	nop
 801bd68:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801bd6a:	bc08      	pop	{r3}
 801bd6c:	469e      	mov	lr, r3
 801bd6e:	4770      	bx	lr

0801bd70 <_fini>:
 801bd70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bd72:	bf00      	nop
 801bd74:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801bd76:	bc08      	pop	{r3}
 801bd78:	469e      	mov	lr, r3
 801bd7a:	4770      	bx	lr
