
Level_Lampe.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001c458  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003110  0801c608  0801c608  0002c608  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001b2  0801f718  0801f718  0002f718  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 ExtFlashSection 00013ec0  0801f8cc  0801f8cc  0002f8cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000c  0803378c  0803378c  0004378c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000000  08033798  08033798  000758f8  2**0
                  CONTENTS
  7 .ARM          00000008  08033798  08033798  00043798  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  080337a0  080337a0  000758f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  080337a0  080337a0  000437a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  080337b4  080337b4  000437b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         000000f8  20000000  080337bc  00050000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_Framebuffer 00025800  200000f8  080338b4  000500f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00001718  200258f8  080590b4  000758f8  2**2
                  ALLOC
 14 ._user_heap_stack 00000600  20027010  080590b4  00077010  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000758f8  2**0
                  CONTENTS, READONLY
 16 .debug_info   00038671  00000000  00000000  00075928  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_abbrev 00009fc9  00000000  00000000  000adf99  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_aranges 00002988  00000000  00000000  000b7f68  2**3
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_ranges 00002618  00000000  00000000  000ba8f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_macro  0002e4b2  00000000  00000000  000bcf08  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_line   00027812  00000000  00000000  000eb3ba  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_str    000f0bec  00000000  00000000  00112bcc  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .comment      000000fa  00000000  00000000  002037b8  2**0
                  CONTENTS, READONLY
 24 .debug_frame  0000b7d0  00000000  00000000  002038b4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200258f8 	.word	0x200258f8
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801c5f0 	.word	0x0801c5f0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200258fc 	.word	0x200258fc
 80001ec:	0801c5f0 	.word	0x0801c5f0

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b972 	b.w	800059c <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9e08      	ldr	r6, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	4688      	mov	r8, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d14b      	bne.n	8000376 <__udivmoddi4+0xa6>
 80002de:	428a      	cmp	r2, r1
 80002e0:	4615      	mov	r5, r2
 80002e2:	d967      	bls.n	80003b4 <__udivmoddi4+0xe4>
 80002e4:	fab2 f282 	clz	r2, r2
 80002e8:	b14a      	cbz	r2, 80002fe <__udivmoddi4+0x2e>
 80002ea:	f1c2 0720 	rsb	r7, r2, #32
 80002ee:	fa01 f302 	lsl.w	r3, r1, r2
 80002f2:	fa20 f707 	lsr.w	r7, r0, r7
 80002f6:	4095      	lsls	r5, r2
 80002f8:	ea47 0803 	orr.w	r8, r7, r3
 80002fc:	4094      	lsls	r4, r2
 80002fe:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000302:	0c23      	lsrs	r3, r4, #16
 8000304:	fbb8 f7fe 	udiv	r7, r8, lr
 8000308:	fa1f fc85 	uxth.w	ip, r5
 800030c:	fb0e 8817 	mls	r8, lr, r7, r8
 8000310:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000314:	fb07 f10c 	mul.w	r1, r7, ip
 8000318:	4299      	cmp	r1, r3
 800031a:	d909      	bls.n	8000330 <__udivmoddi4+0x60>
 800031c:	18eb      	adds	r3, r5, r3
 800031e:	f107 30ff 	add.w	r0, r7, #4294967295
 8000322:	f080 811b 	bcs.w	800055c <__udivmoddi4+0x28c>
 8000326:	4299      	cmp	r1, r3
 8000328:	f240 8118 	bls.w	800055c <__udivmoddi4+0x28c>
 800032c:	3f02      	subs	r7, #2
 800032e:	442b      	add	r3, r5
 8000330:	1a5b      	subs	r3, r3, r1
 8000332:	b2a4      	uxth	r4, r4
 8000334:	fbb3 f0fe 	udiv	r0, r3, lr
 8000338:	fb0e 3310 	mls	r3, lr, r0, r3
 800033c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000340:	fb00 fc0c 	mul.w	ip, r0, ip
 8000344:	45a4      	cmp	ip, r4
 8000346:	d909      	bls.n	800035c <__udivmoddi4+0x8c>
 8000348:	192c      	adds	r4, r5, r4
 800034a:	f100 33ff 	add.w	r3, r0, #4294967295
 800034e:	f080 8107 	bcs.w	8000560 <__udivmoddi4+0x290>
 8000352:	45a4      	cmp	ip, r4
 8000354:	f240 8104 	bls.w	8000560 <__udivmoddi4+0x290>
 8000358:	3802      	subs	r0, #2
 800035a:	442c      	add	r4, r5
 800035c:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000360:	eba4 040c 	sub.w	r4, r4, ip
 8000364:	2700      	movs	r7, #0
 8000366:	b11e      	cbz	r6, 8000370 <__udivmoddi4+0xa0>
 8000368:	40d4      	lsrs	r4, r2
 800036a:	2300      	movs	r3, #0
 800036c:	e9c6 4300 	strd	r4, r3, [r6]
 8000370:	4639      	mov	r1, r7
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	428b      	cmp	r3, r1
 8000378:	d909      	bls.n	800038e <__udivmoddi4+0xbe>
 800037a:	2e00      	cmp	r6, #0
 800037c:	f000 80eb 	beq.w	8000556 <__udivmoddi4+0x286>
 8000380:	2700      	movs	r7, #0
 8000382:	e9c6 0100 	strd	r0, r1, [r6]
 8000386:	4638      	mov	r0, r7
 8000388:	4639      	mov	r1, r7
 800038a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800038e:	fab3 f783 	clz	r7, r3
 8000392:	2f00      	cmp	r7, #0
 8000394:	d147      	bne.n	8000426 <__udivmoddi4+0x156>
 8000396:	428b      	cmp	r3, r1
 8000398:	d302      	bcc.n	80003a0 <__udivmoddi4+0xd0>
 800039a:	4282      	cmp	r2, r0
 800039c:	f200 80fa 	bhi.w	8000594 <__udivmoddi4+0x2c4>
 80003a0:	1a84      	subs	r4, r0, r2
 80003a2:	eb61 0303 	sbc.w	r3, r1, r3
 80003a6:	2001      	movs	r0, #1
 80003a8:	4698      	mov	r8, r3
 80003aa:	2e00      	cmp	r6, #0
 80003ac:	d0e0      	beq.n	8000370 <__udivmoddi4+0xa0>
 80003ae:	e9c6 4800 	strd	r4, r8, [r6]
 80003b2:	e7dd      	b.n	8000370 <__udivmoddi4+0xa0>
 80003b4:	b902      	cbnz	r2, 80003b8 <__udivmoddi4+0xe8>
 80003b6:	deff      	udf	#255	; 0xff
 80003b8:	fab2 f282 	clz	r2, r2
 80003bc:	2a00      	cmp	r2, #0
 80003be:	f040 808f 	bne.w	80004e0 <__udivmoddi4+0x210>
 80003c2:	1b49      	subs	r1, r1, r5
 80003c4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80003c8:	fa1f f885 	uxth.w	r8, r5
 80003cc:	2701      	movs	r7, #1
 80003ce:	fbb1 fcfe 	udiv	ip, r1, lr
 80003d2:	0c23      	lsrs	r3, r4, #16
 80003d4:	fb0e 111c 	mls	r1, lr, ip, r1
 80003d8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80003dc:	fb08 f10c 	mul.w	r1, r8, ip
 80003e0:	4299      	cmp	r1, r3
 80003e2:	d907      	bls.n	80003f4 <__udivmoddi4+0x124>
 80003e4:	18eb      	adds	r3, r5, r3
 80003e6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003ea:	d202      	bcs.n	80003f2 <__udivmoddi4+0x122>
 80003ec:	4299      	cmp	r1, r3
 80003ee:	f200 80cd 	bhi.w	800058c <__udivmoddi4+0x2bc>
 80003f2:	4684      	mov	ip, r0
 80003f4:	1a59      	subs	r1, r3, r1
 80003f6:	b2a3      	uxth	r3, r4
 80003f8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003fc:	fb0e 1410 	mls	r4, lr, r0, r1
 8000400:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000404:	fb08 f800 	mul.w	r8, r8, r0
 8000408:	45a0      	cmp	r8, r4
 800040a:	d907      	bls.n	800041c <__udivmoddi4+0x14c>
 800040c:	192c      	adds	r4, r5, r4
 800040e:	f100 33ff 	add.w	r3, r0, #4294967295
 8000412:	d202      	bcs.n	800041a <__udivmoddi4+0x14a>
 8000414:	45a0      	cmp	r8, r4
 8000416:	f200 80b6 	bhi.w	8000586 <__udivmoddi4+0x2b6>
 800041a:	4618      	mov	r0, r3
 800041c:	eba4 0408 	sub.w	r4, r4, r8
 8000420:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000424:	e79f      	b.n	8000366 <__udivmoddi4+0x96>
 8000426:	f1c7 0c20 	rsb	ip, r7, #32
 800042a:	40bb      	lsls	r3, r7
 800042c:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000430:	ea4e 0e03 	orr.w	lr, lr, r3
 8000434:	fa01 f407 	lsl.w	r4, r1, r7
 8000438:	fa20 f50c 	lsr.w	r5, r0, ip
 800043c:	fa21 f30c 	lsr.w	r3, r1, ip
 8000440:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000444:	4325      	orrs	r5, r4
 8000446:	fbb3 f9f8 	udiv	r9, r3, r8
 800044a:	0c2c      	lsrs	r4, r5, #16
 800044c:	fb08 3319 	mls	r3, r8, r9, r3
 8000450:	fa1f fa8e 	uxth.w	sl, lr
 8000454:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000458:	fb09 f40a 	mul.w	r4, r9, sl
 800045c:	429c      	cmp	r4, r3
 800045e:	fa02 f207 	lsl.w	r2, r2, r7
 8000462:	fa00 f107 	lsl.w	r1, r0, r7
 8000466:	d90b      	bls.n	8000480 <__udivmoddi4+0x1b0>
 8000468:	eb1e 0303 	adds.w	r3, lr, r3
 800046c:	f109 30ff 	add.w	r0, r9, #4294967295
 8000470:	f080 8087 	bcs.w	8000582 <__udivmoddi4+0x2b2>
 8000474:	429c      	cmp	r4, r3
 8000476:	f240 8084 	bls.w	8000582 <__udivmoddi4+0x2b2>
 800047a:	f1a9 0902 	sub.w	r9, r9, #2
 800047e:	4473      	add	r3, lr
 8000480:	1b1b      	subs	r3, r3, r4
 8000482:	b2ad      	uxth	r5, r5
 8000484:	fbb3 f0f8 	udiv	r0, r3, r8
 8000488:	fb08 3310 	mls	r3, r8, r0, r3
 800048c:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000490:	fb00 fa0a 	mul.w	sl, r0, sl
 8000494:	45a2      	cmp	sl, r4
 8000496:	d908      	bls.n	80004aa <__udivmoddi4+0x1da>
 8000498:	eb1e 0404 	adds.w	r4, lr, r4
 800049c:	f100 33ff 	add.w	r3, r0, #4294967295
 80004a0:	d26b      	bcs.n	800057a <__udivmoddi4+0x2aa>
 80004a2:	45a2      	cmp	sl, r4
 80004a4:	d969      	bls.n	800057a <__udivmoddi4+0x2aa>
 80004a6:	3802      	subs	r0, #2
 80004a8:	4474      	add	r4, lr
 80004aa:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 80004ae:	fba0 8902 	umull	r8, r9, r0, r2
 80004b2:	eba4 040a 	sub.w	r4, r4, sl
 80004b6:	454c      	cmp	r4, r9
 80004b8:	46c2      	mov	sl, r8
 80004ba:	464b      	mov	r3, r9
 80004bc:	d354      	bcc.n	8000568 <__udivmoddi4+0x298>
 80004be:	d051      	beq.n	8000564 <__udivmoddi4+0x294>
 80004c0:	2e00      	cmp	r6, #0
 80004c2:	d069      	beq.n	8000598 <__udivmoddi4+0x2c8>
 80004c4:	ebb1 050a 	subs.w	r5, r1, sl
 80004c8:	eb64 0403 	sbc.w	r4, r4, r3
 80004cc:	fa04 fc0c 	lsl.w	ip, r4, ip
 80004d0:	40fd      	lsrs	r5, r7
 80004d2:	40fc      	lsrs	r4, r7
 80004d4:	ea4c 0505 	orr.w	r5, ip, r5
 80004d8:	e9c6 5400 	strd	r5, r4, [r6]
 80004dc:	2700      	movs	r7, #0
 80004de:	e747      	b.n	8000370 <__udivmoddi4+0xa0>
 80004e0:	f1c2 0320 	rsb	r3, r2, #32
 80004e4:	fa20 f703 	lsr.w	r7, r0, r3
 80004e8:	4095      	lsls	r5, r2
 80004ea:	fa01 f002 	lsl.w	r0, r1, r2
 80004ee:	fa21 f303 	lsr.w	r3, r1, r3
 80004f2:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80004f6:	4338      	orrs	r0, r7
 80004f8:	0c01      	lsrs	r1, r0, #16
 80004fa:	fbb3 f7fe 	udiv	r7, r3, lr
 80004fe:	fa1f f885 	uxth.w	r8, r5
 8000502:	fb0e 3317 	mls	r3, lr, r7, r3
 8000506:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800050a:	fb07 f308 	mul.w	r3, r7, r8
 800050e:	428b      	cmp	r3, r1
 8000510:	fa04 f402 	lsl.w	r4, r4, r2
 8000514:	d907      	bls.n	8000526 <__udivmoddi4+0x256>
 8000516:	1869      	adds	r1, r5, r1
 8000518:	f107 3cff 	add.w	ip, r7, #4294967295
 800051c:	d22f      	bcs.n	800057e <__udivmoddi4+0x2ae>
 800051e:	428b      	cmp	r3, r1
 8000520:	d92d      	bls.n	800057e <__udivmoddi4+0x2ae>
 8000522:	3f02      	subs	r7, #2
 8000524:	4429      	add	r1, r5
 8000526:	1acb      	subs	r3, r1, r3
 8000528:	b281      	uxth	r1, r0
 800052a:	fbb3 f0fe 	udiv	r0, r3, lr
 800052e:	fb0e 3310 	mls	r3, lr, r0, r3
 8000532:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000536:	fb00 f308 	mul.w	r3, r0, r8
 800053a:	428b      	cmp	r3, r1
 800053c:	d907      	bls.n	800054e <__udivmoddi4+0x27e>
 800053e:	1869      	adds	r1, r5, r1
 8000540:	f100 3cff 	add.w	ip, r0, #4294967295
 8000544:	d217      	bcs.n	8000576 <__udivmoddi4+0x2a6>
 8000546:	428b      	cmp	r3, r1
 8000548:	d915      	bls.n	8000576 <__udivmoddi4+0x2a6>
 800054a:	3802      	subs	r0, #2
 800054c:	4429      	add	r1, r5
 800054e:	1ac9      	subs	r1, r1, r3
 8000550:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000554:	e73b      	b.n	80003ce <__udivmoddi4+0xfe>
 8000556:	4637      	mov	r7, r6
 8000558:	4630      	mov	r0, r6
 800055a:	e709      	b.n	8000370 <__udivmoddi4+0xa0>
 800055c:	4607      	mov	r7, r0
 800055e:	e6e7      	b.n	8000330 <__udivmoddi4+0x60>
 8000560:	4618      	mov	r0, r3
 8000562:	e6fb      	b.n	800035c <__udivmoddi4+0x8c>
 8000564:	4541      	cmp	r1, r8
 8000566:	d2ab      	bcs.n	80004c0 <__udivmoddi4+0x1f0>
 8000568:	ebb8 0a02 	subs.w	sl, r8, r2
 800056c:	eb69 020e 	sbc.w	r2, r9, lr
 8000570:	3801      	subs	r0, #1
 8000572:	4613      	mov	r3, r2
 8000574:	e7a4      	b.n	80004c0 <__udivmoddi4+0x1f0>
 8000576:	4660      	mov	r0, ip
 8000578:	e7e9      	b.n	800054e <__udivmoddi4+0x27e>
 800057a:	4618      	mov	r0, r3
 800057c:	e795      	b.n	80004aa <__udivmoddi4+0x1da>
 800057e:	4667      	mov	r7, ip
 8000580:	e7d1      	b.n	8000526 <__udivmoddi4+0x256>
 8000582:	4681      	mov	r9, r0
 8000584:	e77c      	b.n	8000480 <__udivmoddi4+0x1b0>
 8000586:	3802      	subs	r0, #2
 8000588:	442c      	add	r4, r5
 800058a:	e747      	b.n	800041c <__udivmoddi4+0x14c>
 800058c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000590:	442b      	add	r3, r5
 8000592:	e72f      	b.n	80003f4 <__udivmoddi4+0x124>
 8000594:	4638      	mov	r0, r7
 8000596:	e708      	b.n	80003aa <__udivmoddi4+0xda>
 8000598:	4637      	mov	r7, r6
 800059a:	e6e9      	b.n	8000370 <__udivmoddi4+0xa0>

0800059c <__aeabi_idiv0>:
 800059c:	4770      	bx	lr
 800059e:	bf00      	nop

080005a0 <BQ25713_Init>:
#include "bq25713.h"


BQ25713_DATA BQ25713;

void BQ25713_Init(I2C_HandleTypeDef i2c_handle){
 80005a0:	b084      	sub	sp, #16
 80005a2:	b580      	push	{r7, lr}
 80005a4:	b082      	sub	sp, #8
 80005a6:	af00      	add	r7, sp, #0
 80005a8:	f107 0c10 	add.w	ip, r7, #16
 80005ac:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	//Initialize I2C Handle
	BQ25713.BQ25713_I2C = i2c_handle;
 80005b0:	4b43      	ldr	r3, [pc, #268]	; (80006c0 <BQ25713_Init+0x120>)
 80005b2:	4618      	mov	r0, r3
 80005b4:	f107 0110 	add.w	r1, r7, #16
 80005b8:	2354      	movs	r3, #84	; 0x54
 80005ba:	461a      	mov	r2, r3
 80005bc:	f01a fed6 	bl	801b36c <memcpy>
	BQ25713.Device_Id = BQ25713_DEVICE_ID;
 80005c0:	4b3f      	ldr	r3, [pc, #252]	; (80006c0 <BQ25713_Init+0x120>)
 80005c2:	2288      	movs	r2, #136	; 0x88
 80005c4:	f883 2056 	strb.w	r2, [r3, #86]	; 0x56
	BQ25713.Manufacture_Id = BQ25713_MANUFACTURE_ID;
 80005c8:	4b3d      	ldr	r3, [pc, #244]	; (80006c0 <BQ25713_Init+0x120>)
 80005ca:	2240      	movs	r2, #64	; 0x40
 80005cc:	f883 2055 	strb.w	r2, [r3, #85]	; 0x55
	BQ25713.I2C_Address = BQ25713_I2C_ADDRESS;
 80005d0:	4b3b      	ldr	r3, [pc, #236]	; (80006c0 <BQ25713_Init+0x120>)
 80005d2:	22d6      	movs	r2, #214	; 0xd6
 80005d4:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
	BQ25713.active_fast_charge = 0;
 80005d8:	4b39      	ldr	r3, [pc, #228]	; (80006c0 <BQ25713_Init+0x120>)
 80005da:	2200      	movs	r2, #0
 80005dc:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58

	HAL_GPIO_WritePin(GPIOE, GPIO_PIN_1, GPIO_PIN_SET);
 80005e0:	2201      	movs	r2, #1
 80005e2:	2102      	movs	r1, #2
 80005e4:	4837      	ldr	r0, [pc, #220]	; (80006c4 <BQ25713_Init+0x124>)
 80005e6:	f003 fddd 	bl	80041a4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 80005ea:	2201      	movs	r2, #1
 80005ec:	2104      	movs	r1, #4
 80005ee:	4835      	ldr	r0, [pc, #212]	; (80006c4 <BQ25713_Init+0x124>)
 80005f0:	f003 fdd8 	bl	80041a4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_SET);
 80005f4:	2201      	movs	r2, #1
 80005f6:	2108      	movs	r1, #8
 80005f8:	4832      	ldr	r0, [pc, #200]	; (80006c4 <BQ25713_Init+0x124>)
 80005fa:	f003 fdd3 	bl	80041a4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4, GPIO_PIN_SET);
 80005fe:	2201      	movs	r2, #1
 8000600:	2110      	movs	r1, #16
 8000602:	4830      	ldr	r0, [pc, #192]	; (80006c4 <BQ25713_Init+0x124>)
 8000604:	f003 fdce 	bl	80041a4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_SET);
 8000608:	2201      	movs	r2, #1
 800060a:	2120      	movs	r1, #32
 800060c:	482d      	ldr	r0, [pc, #180]	; (80006c4 <BQ25713_Init+0x124>)
 800060e:	f003 fdc9 	bl	80041a4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, GPIO_PIN_SET);
 8000612:	2201      	movs	r2, #1
 8000614:	2140      	movs	r1, #64	; 0x40
 8000616:	482b      	ldr	r0, [pc, #172]	; (80006c4 <BQ25713_Init+0x124>)
 8000618:	f003 fdc4 	bl	80041a4 <HAL_GPIO_WritePin>


	uint8_t data[2];
	data[0] = 0x00;     // LSB byte of 16bit đata => Fist byte
 800061c:	2300      	movs	r3, #0
 800061e:	713b      	strb	r3, [r7, #4]
	data[1] = 0x00;  	// MSB byte of 16bit data => Second byte
 8000620:	2300      	movs	r3, #0
 8000622:	717b      	strb	r3, [r7, #5]
	uint16_t value_write = 0x0000;
 8000624:	2300      	movs	r3, #0
 8000626:	80fb      	strh	r3, [r7, #6]
	//Check if this is BQ25713 driver?
	read_register_16(BQ25713_REG_MANUFACTURER_ID , data);
 8000628:	1d3b      	adds	r3, r7, #4
 800062a:	4619      	mov	r1, r3
 800062c:	202e      	movs	r0, #46	; 0x2e
 800062e:	f000 f9f5 	bl	8000a1c <read_register_16>
	if (( data[0] == BQ25713.Manufacture_Id) && (data[1] == BQ25713.Device_Id )){
 8000632:	793a      	ldrb	r2, [r7, #4]
 8000634:	4b22      	ldr	r3, [pc, #136]	; (80006c0 <BQ25713_Init+0x120>)
 8000636:	f893 3055 	ldrb.w	r3, [r3, #85]	; 0x55
 800063a:	429a      	cmp	r2, r3
 800063c:	d139      	bne.n	80006b2 <BQ25713_Init+0x112>
 800063e:	797a      	ldrb	r2, [r7, #5]
 8000640:	4b1f      	ldr	r3, [pc, #124]	; (80006c0 <BQ25713_Init+0x120>)
 8000642:	f893 3056 	ldrb.w	r3, [r3, #86]	; 0x56
 8000646:	429a      	cmp	r2, r3
 8000648:	d133      	bne.n	80006b2 <BQ25713_Init+0x112>

		//Set VSYSMIN = 12.288V (REG0x0D/0C),
		value_write = 0x0030;
 800064a:	2330      	movs	r3, #48	; 0x30
 800064c:	80fb      	strh	r3, [r7, #6]
		write_register_16( BQ25713_REG_MIN_SYSTEM_VOLTAGE , value_write);
 800064e:	88fb      	ldrh	r3, [r7, #6]
 8000650:	4619      	mov	r1, r3
 8000652:	200c      	movs	r0, #12
 8000654:	f000 fa04 	bl	8000a60 <write_register_16>
		//SET VBAT = 16.8 V (REG0x05/04).   0xA041;
		value_write = 0x0040;
 8000658:	2340      	movs	r3, #64	; 0x40
 800065a:	80fb      	strh	r3, [r7, #6]
		write_register_16( BQ25713_REG_MAX_CHARGE_VOLTAGE , value_write);
 800065c:	88fb      	ldrh	r3, [r7, #6]
 800065e:	4619      	mov	r1, r3
 8000660:	2004      	movs	r0, #4
 8000662:	f000 f9fd 	bl	8000a60 <write_register_16>
		read_register_16 (BQ25713_REG_MAX_CHARGE_VOLTAGE , data);
 8000666:	1d3b      	adds	r3, r7, #4
 8000668:	4619      	mov	r1, r3
 800066a:	2004      	movs	r0, #4
 800066c:	f000 f9d6 	bl	8000a1c <read_register_16>

		value_write = 0x0018;
 8000670:	2318      	movs	r3, #24
 8000672:	80fb      	strh	r3, [r7, #6]
		write_register_16 (BQ25713_REG_IIN_HOST , value_write);
 8000674:	88fb      	ldrh	r3, [r7, #6]
 8000676:	4619      	mov	r1, r3
 8000678:	200e      	movs	r0, #14
 800067a:	f000 f9f1 	bl	8000a60 <write_register_16>
		read_register_16 (BQ25713_REG_IIN_HOST , data);
 800067e:	1d3b      	adds	r3, r7, #4
 8000680:	4619      	mov	r1, r3
 8000682:	200e      	movs	r0, #14
 8000684:	f000 f9ca 	bl	8000a1c <read_register_16>
		read_register_16 (BQ25713_REG_CHARGE_OPTION_0 , data);
 8000688:	1d3b      	adds	r3, r7, #4
 800068a:	4619      	mov	r1, r3
 800068c:	2000      	movs	r0, #0
 800068e:	f000 f9c5 	bl	8000a1c <read_register_16>

		value_write = 0x0E87;
 8000692:	f640 6387 	movw	r3, #3719	; 0xe87
 8000696:	80fb      	strh	r3, [r7, #6]
		write_register_16( BQ25713_REG_CHARGE_OPTION_0 , value_write);
 8000698:	88fb      	ldrh	r3, [r7, #6]
 800069a:	4619      	mov	r1, r3
 800069c:	2000      	movs	r0, #0
 800069e:	f000 f9df 	bl	8000a60 <write_register_16>

		value_write = 0xFFE0;
 80006a2:	f64f 73e0 	movw	r3, #65504	; 0xffe0
 80006a6:	80fb      	strh	r3, [r7, #6]
		write_register_16( BQ25713_REG_ADC_OPTION , value_write);
 80006a8:	88fb      	ldrh	r3, [r7, #6]
 80006aa:	4619      	mov	r1, r3
 80006ac:	203a      	movs	r0, #58	; 0x3a
 80006ae:	f000 f9d7 	bl	8000a60 <write_register_16>

		//BQ25713_Default_Charge();
	}
}
 80006b2:	bf00      	nop
 80006b4:	3708      	adds	r7, #8
 80006b6:	46bd      	mov	sp, r7
 80006b8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80006bc:	b004      	add	sp, #16
 80006be:	4770      	bx	lr
 80006c0:	20026bbc 	.word	0x20026bbc
 80006c4:	40021000 	.word	0x40021000

080006c8 <BQ25713_Default_Charge>:

void BQ25713_Default_Charge(){
 80006c8:	b580      	push	{r7, lr}
 80006ca:	b082      	sub	sp, #8
 80006cc:	af00      	add	r7, sp, #0
	//When have charge
	//Set I_CHAGE = 0 Reg 0x02/03;
	uint16_t value_write = 0x0000;
 80006ce:	2300      	movs	r3, #0
 80006d0:	80fb      	strh	r3, [r7, #6]
	value_write = 0x0000;
 80006d2:	2300      	movs	r3, #0
 80006d4:	80fb      	strh	r3, [r7, #6]
	write_register_16( BQ25713_REG_CHARGE_CURRENT , value_write);
 80006d6:	88fb      	ldrh	r3, [r7, #6]
 80006d8:	4619      	mov	r1, r3
 80006da:	2002      	movs	r0, #2
 80006dc:	f000 f9c0 	bl	8000a60 <write_register_16>
	//Set VSYSMIN = 12.288V (REG0x0D/0C),  0038 = > 0x0030 pour 12.288  =>0x003F =  14V
	value_write = 0x0030;
 80006e0:	2330      	movs	r3, #48	; 0x30
 80006e2:	80fb      	strh	r3, [r7, #6]
	write_register_16( BQ25713_REG_MIN_SYSTEM_VOLTAGE , value_write);
 80006e4:	88fb      	ldrh	r3, [r7, #6]
 80006e6:	4619      	mov	r1, r3
 80006e8:	200c      	movs	r0, #12
 80006ea:	f000 f9b9 	bl	8000a60 <write_register_16>
	//SET VBAT = 16.8 V (REG0x05/04).   0xA041;
	value_write = 0x0041;
 80006ee:	2341      	movs	r3, #65	; 0x41
 80006f0:	80fb      	strh	r3, [r7, #6]
	write_register_16( BQ25713_REG_MAX_CHARGE_VOLTAGE , value_write);
 80006f2:	88fb      	ldrh	r3, [r7, #6]
 80006f4:	4619      	mov	r1, r3
 80006f6:	2004      	movs	r0, #4
 80006f8:	f000 f9b2 	bl	8000a60 <write_register_16>

	uint8_t data[2];
		data[0] = 0x00;     // LSB byte of 16bit đata => Fist byte
 80006fc:	2300      	movs	r3, #0
 80006fe:	713b      	strb	r3, [r7, #4]
		data[1] = 0x00;  	// MSB byte of 16bit data => Second byte
 8000700:	2300      	movs	r3, #0
 8000702:	717b      	strb	r3, [r7, #5]

	//Disable ILIM_HIZ pin to set input current limit. (REG0x33/32 BIT7=0)
	value_write = 0x3702;
 8000704:	f243 7302 	movw	r3, #14082	; 0x3702
 8000708:	80fb      	strh	r3, [r7, #6]
	write_register_16( BQ25713_REG_CHARGE_OPTION_2 , value_write);
 800070a:	88fb      	ldrh	r3, [r7, #6]
 800070c:	4619      	mov	r1, r3
 800070e:	2032      	movs	r0, #50	; 0x32
 8000710:	f000 f9a6 	bl	8000a60 <write_register_16>
	//Set I_CHAGE =>  512 = 0x0002 ; 256 = 0x0001 ; 1024 = 0x0004
	value_write = 0x0002;
 8000714:	2302      	movs	r3, #2
 8000716:	80fb      	strh	r3, [r7, #6]
	write_register_16( BQ25713_REG_CHARGE_CURRENT , value_write);
 8000718:	88fb      	ldrh	r3, [r7, #6]
 800071a:	4619      	mov	r1, r3
 800071c:	2002      	movs	r0, #2
 800071e:	f000 f99f 	bl	8000a60 <write_register_16>

	read_register_16 (BQ25713_REG_CHARGE_CURRENT , data);
 8000722:	1d3b      	adds	r3, r7, #4
 8000724:	4619      	mov	r1, r3
 8000726:	2002      	movs	r0, #2
 8000728:	f000 f978 	bl	8000a1c <read_register_16>
	read_register_16 (BQ25713_REG_IIN_HOST , data);
 800072c:	1d3b      	adds	r3, r7, #4
 800072e:	4619      	mov	r1, r3
 8000730:	200e      	movs	r0, #14
 8000732:	f000 f973 	bl	8000a1c <read_register_16>

	read_register_16 (BQ25713_REG_MAX_CHARGE_VOLTAGE , data);
 8000736:	1d3b      	adds	r3, r7, #4
 8000738:	4619      	mov	r1, r3
 800073a:	2004      	movs	r0, #4
 800073c:	f000 f96e 	bl	8000a1c <read_register_16>
	BQ25713.active_fast_charge = 1;
 8000740:	4b03      	ldr	r3, [pc, #12]	; (8000750 <BQ25713_Default_Charge+0x88>)
 8000742:	2201      	movs	r2, #1
 8000744:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
}
 8000748:	bf00      	nop
 800074a:	3708      	adds	r7, #8
 800074c:	46bd      	mov	sp, r7
 800074e:	bd80      	pop	{r7, pc}
 8000750:	20026bbc 	.word	0x20026bbc

08000754 <BQ25713_Task>:

void BQ25713_Task(){
 8000754:	b580      	push	{r7, lr}
 8000756:	b082      	sub	sp, #8
 8000758:	af00      	add	r7, sp, #0

	uint8_t data[2];
	data[0] = 0x00;     // LSB byte of 16bit đata => Fist byte
 800075a:	2300      	movs	r3, #0
 800075c:	713b      	strb	r3, [r7, #4]
	data[1] = 0x00;  	// MSB byte of 16bit data => Second byte
 800075e:	2300      	movs	r3, #0
 8000760:	717b      	strb	r3, [r7, #5]
	read_register_16 (BQ25713_REG_ADC_VSYS_VBAT , data);
 8000762:	1d3b      	adds	r3, r7, #4
 8000764:	4619      	mov	r1, r3
 8000766:	202c      	movs	r0, #44	; 0x2c
 8000768:	f000 f958 	bl	8000a1c <read_register_16>
	BQ25713.adc_vbat = (uint8_t)(data[1]*100/255);
 800076c:	797b      	ldrb	r3, [r7, #5]
 800076e:	461a      	mov	r2, r3
 8000770:	2364      	movs	r3, #100	; 0x64
 8000772:	fb03 f302 	mul.w	r3, r3, r2
 8000776:	4a9f      	ldr	r2, [pc, #636]	; (80009f4 <BQ25713_Task+0x2a0>)
 8000778:	fb82 1203 	smull	r1, r2, r2, r3
 800077c:	441a      	add	r2, r3
 800077e:	11d2      	asrs	r2, r2, #7
 8000780:	17db      	asrs	r3, r3, #31
 8000782:	1ad3      	subs	r3, r2, r3
 8000784:	b2da      	uxtb	r2, r3
 8000786:	4b9c      	ldr	r3, [pc, #624]	; (80009f8 <BQ25713_Task+0x2a4>)
 8000788:	f883 2057 	strb.w	r2, [r3, #87]	; 0x57


	if (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13) == GPIO_PIN_SET){
 800078c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000790:	489a      	ldr	r0, [pc, #616]	; (80009fc <BQ25713_Task+0x2a8>)
 8000792:	f003 fcef 	bl	8004174 <HAL_GPIO_ReadPin>
 8000796:	4603      	mov	r3, r0
 8000798:	2b01      	cmp	r3, #1
 800079a:	d124      	bne.n	80007e6 <BQ25713_Task+0x92>
		if (BQ25713.active_fast_charge == 0 ){
 800079c:	4b96      	ldr	r3, [pc, #600]	; (80009f8 <BQ25713_Task+0x2a4>)
 800079e:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 80007a2:	2b00      	cmp	r3, #0
 80007a4:	d10a      	bne.n	80007bc <BQ25713_Task+0x68>
			if (BQ25713.adc_vbat < 75){
 80007a6:	4b94      	ldr	r3, [pc, #592]	; (80009f8 <BQ25713_Task+0x2a4>)
 80007a8:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 80007ac:	2b4a      	cmp	r3, #74	; 0x4a
 80007ae:	d805      	bhi.n	80007bc <BQ25713_Task+0x68>
				BQ25713_Default_Charge();
 80007b0:	f7ff ff8a 	bl	80006c8 <BQ25713_Default_Charge>
				BQ25713.active_fast_charge =1;
 80007b4:	4b90      	ldr	r3, [pc, #576]	; (80009f8 <BQ25713_Task+0x2a4>)
 80007b6:	2201      	movs	r2, #1
 80007b8:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
			}
		}
			if ((BQ25713.adc_vbat >= 75) && (BQ25713.active_fast_charge ==1)){
 80007bc:	4b8e      	ldr	r3, [pc, #568]	; (80009f8 <BQ25713_Task+0x2a4>)
 80007be:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 80007c2:	2b4a      	cmp	r3, #74	; 0x4a
 80007c4:	d90f      	bls.n	80007e6 <BQ25713_Task+0x92>
 80007c6:	4b8c      	ldr	r3, [pc, #560]	; (80009f8 <BQ25713_Task+0x2a4>)
 80007c8:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 80007cc:	2b01      	cmp	r3, #1
 80007ce:	d10a      	bne.n	80007e6 <BQ25713_Task+0x92>
				uint16_t value_write = 0x0004;
 80007d0:	2304      	movs	r3, #4
 80007d2:	80fb      	strh	r3, [r7, #6]
				write_register_16( BQ25713_REG_CHARGE_CURRENT , value_write);
 80007d4:	88fb      	ldrh	r3, [r7, #6]
 80007d6:	4619      	mov	r1, r3
 80007d8:	2002      	movs	r0, #2
 80007da:	f000 f941 	bl	8000a60 <write_register_16>
				BQ25713.active_fast_charge =0;
 80007de:	4b86      	ldr	r3, [pc, #536]	; (80009f8 <BQ25713_Task+0x2a4>)
 80007e0:	2200      	movs	r2, #0
 80007e2:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
			}
	}


	if (( BQ25713.adc_vbat >= 0)&&( BQ25713.adc_vbat < 15)){
 80007e6:	4b84      	ldr	r3, [pc, #528]	; (80009f8 <BQ25713_Task+0x2a4>)
 80007e8:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 80007ec:	2b0e      	cmp	r3, #14
 80007ee:	d81e      	bhi.n	800082e <BQ25713_Task+0xda>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, GPIO_PIN_RESET);
 80007f0:	2200      	movs	r2, #0
 80007f2:	2140      	movs	r1, #64	; 0x40
 80007f4:	4882      	ldr	r0, [pc, #520]	; (8000a00 <BQ25713_Task+0x2ac>)
 80007f6:	f003 fcd5 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_SET);
 80007fa:	2201      	movs	r2, #1
 80007fc:	2120      	movs	r1, #32
 80007fe:	4880      	ldr	r0, [pc, #512]	; (8000a00 <BQ25713_Task+0x2ac>)
 8000800:	f003 fcd0 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4, GPIO_PIN_SET);
 8000804:	2201      	movs	r2, #1
 8000806:	2110      	movs	r1, #16
 8000808:	487d      	ldr	r0, [pc, #500]	; (8000a00 <BQ25713_Task+0x2ac>)
 800080a:	f003 fccb 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_SET);
 800080e:	2201      	movs	r2, #1
 8000810:	2108      	movs	r1, #8
 8000812:	487b      	ldr	r0, [pc, #492]	; (8000a00 <BQ25713_Task+0x2ac>)
 8000814:	f003 fcc6 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 8000818:	2201      	movs	r2, #1
 800081a:	2104      	movs	r1, #4
 800081c:	4878      	ldr	r0, [pc, #480]	; (8000a00 <BQ25713_Task+0x2ac>)
 800081e:	f003 fcc1 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_1, GPIO_PIN_SET);
 8000822:	2201      	movs	r2, #1
 8000824:	2102      	movs	r1, #2
 8000826:	4876      	ldr	r0, [pc, #472]	; (8000a00 <BQ25713_Task+0x2ac>)
 8000828:	f003 fcbc 	bl	80041a4 <HAL_GPIO_WritePin>
 800082c:	e0cb      	b.n	80009c6 <BQ25713_Task+0x272>
	}
	else if (( BQ25713.adc_vbat >= 15)&&( BQ25713.adc_vbat < 30)){
 800082e:	4b72      	ldr	r3, [pc, #456]	; (80009f8 <BQ25713_Task+0x2a4>)
 8000830:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 8000834:	2b0e      	cmp	r3, #14
 8000836:	d923      	bls.n	8000880 <BQ25713_Task+0x12c>
 8000838:	4b6f      	ldr	r3, [pc, #444]	; (80009f8 <BQ25713_Task+0x2a4>)
 800083a:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 800083e:	2b1d      	cmp	r3, #29
 8000840:	d81e      	bhi.n	8000880 <BQ25713_Task+0x12c>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, GPIO_PIN_RESET);
 8000842:	2200      	movs	r2, #0
 8000844:	2140      	movs	r1, #64	; 0x40
 8000846:	486e      	ldr	r0, [pc, #440]	; (8000a00 <BQ25713_Task+0x2ac>)
 8000848:	f003 fcac 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800084c:	2200      	movs	r2, #0
 800084e:	2120      	movs	r1, #32
 8000850:	486b      	ldr	r0, [pc, #428]	; (8000a00 <BQ25713_Task+0x2ac>)
 8000852:	f003 fca7 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4, GPIO_PIN_SET);
 8000856:	2201      	movs	r2, #1
 8000858:	2110      	movs	r1, #16
 800085a:	4869      	ldr	r0, [pc, #420]	; (8000a00 <BQ25713_Task+0x2ac>)
 800085c:	f003 fca2 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_SET);
 8000860:	2201      	movs	r2, #1
 8000862:	2108      	movs	r1, #8
 8000864:	4866      	ldr	r0, [pc, #408]	; (8000a00 <BQ25713_Task+0x2ac>)
 8000866:	f003 fc9d 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 800086a:	2201      	movs	r2, #1
 800086c:	2104      	movs	r1, #4
 800086e:	4864      	ldr	r0, [pc, #400]	; (8000a00 <BQ25713_Task+0x2ac>)
 8000870:	f003 fc98 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_1, GPIO_PIN_SET);
 8000874:	2201      	movs	r2, #1
 8000876:	2102      	movs	r1, #2
 8000878:	4861      	ldr	r0, [pc, #388]	; (8000a00 <BQ25713_Task+0x2ac>)
 800087a:	f003 fc93 	bl	80041a4 <HAL_GPIO_WritePin>
 800087e:	e0a2      	b.n	80009c6 <BQ25713_Task+0x272>
	}
	else if (( BQ25713.adc_vbat >= 30)&&( BQ25713.adc_vbat < 50)){
 8000880:	4b5d      	ldr	r3, [pc, #372]	; (80009f8 <BQ25713_Task+0x2a4>)
 8000882:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 8000886:	2b1d      	cmp	r3, #29
 8000888:	d923      	bls.n	80008d2 <BQ25713_Task+0x17e>
 800088a:	4b5b      	ldr	r3, [pc, #364]	; (80009f8 <BQ25713_Task+0x2a4>)
 800088c:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 8000890:	2b31      	cmp	r3, #49	; 0x31
 8000892:	d81e      	bhi.n	80008d2 <BQ25713_Task+0x17e>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, GPIO_PIN_RESET);
 8000894:	2200      	movs	r2, #0
 8000896:	2140      	movs	r1, #64	; 0x40
 8000898:	4859      	ldr	r0, [pc, #356]	; (8000a00 <BQ25713_Task+0x2ac>)
 800089a:	f003 fc83 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800089e:	2200      	movs	r2, #0
 80008a0:	2120      	movs	r1, #32
 80008a2:	4857      	ldr	r0, [pc, #348]	; (8000a00 <BQ25713_Task+0x2ac>)
 80008a4:	f003 fc7e 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4, GPIO_PIN_RESET);
 80008a8:	2200      	movs	r2, #0
 80008aa:	2110      	movs	r1, #16
 80008ac:	4854      	ldr	r0, [pc, #336]	; (8000a00 <BQ25713_Task+0x2ac>)
 80008ae:	f003 fc79 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_SET);
 80008b2:	2201      	movs	r2, #1
 80008b4:	2108      	movs	r1, #8
 80008b6:	4852      	ldr	r0, [pc, #328]	; (8000a00 <BQ25713_Task+0x2ac>)
 80008b8:	f003 fc74 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 80008bc:	2201      	movs	r2, #1
 80008be:	2104      	movs	r1, #4
 80008c0:	484f      	ldr	r0, [pc, #316]	; (8000a00 <BQ25713_Task+0x2ac>)
 80008c2:	f003 fc6f 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_1, GPIO_PIN_SET);
 80008c6:	2201      	movs	r2, #1
 80008c8:	2102      	movs	r1, #2
 80008ca:	484d      	ldr	r0, [pc, #308]	; (8000a00 <BQ25713_Task+0x2ac>)
 80008cc:	f003 fc6a 	bl	80041a4 <HAL_GPIO_WritePin>
 80008d0:	e079      	b.n	80009c6 <BQ25713_Task+0x272>

	}
	else if (( BQ25713.adc_vbat >= 50)&&( BQ25713.adc_vbat < 70)){
 80008d2:	4b49      	ldr	r3, [pc, #292]	; (80009f8 <BQ25713_Task+0x2a4>)
 80008d4:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 80008d8:	2b31      	cmp	r3, #49	; 0x31
 80008da:	d923      	bls.n	8000924 <BQ25713_Task+0x1d0>
 80008dc:	4b46      	ldr	r3, [pc, #280]	; (80009f8 <BQ25713_Task+0x2a4>)
 80008de:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 80008e2:	2b45      	cmp	r3, #69	; 0x45
 80008e4:	d81e      	bhi.n	8000924 <BQ25713_Task+0x1d0>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, GPIO_PIN_RESET);
 80008e6:	2200      	movs	r2, #0
 80008e8:	2140      	movs	r1, #64	; 0x40
 80008ea:	4845      	ldr	r0, [pc, #276]	; (8000a00 <BQ25713_Task+0x2ac>)
 80008ec:	f003 fc5a 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80008f0:	2200      	movs	r2, #0
 80008f2:	2120      	movs	r1, #32
 80008f4:	4842      	ldr	r0, [pc, #264]	; (8000a00 <BQ25713_Task+0x2ac>)
 80008f6:	f003 fc55 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4, GPIO_PIN_RESET);
 80008fa:	2200      	movs	r2, #0
 80008fc:	2110      	movs	r1, #16
 80008fe:	4840      	ldr	r0, [pc, #256]	; (8000a00 <BQ25713_Task+0x2ac>)
 8000900:	f003 fc50 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_RESET);
 8000904:	2200      	movs	r2, #0
 8000906:	2108      	movs	r1, #8
 8000908:	483d      	ldr	r0, [pc, #244]	; (8000a00 <BQ25713_Task+0x2ac>)
 800090a:	f003 fc4b 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 800090e:	2201      	movs	r2, #1
 8000910:	2104      	movs	r1, #4
 8000912:	483b      	ldr	r0, [pc, #236]	; (8000a00 <BQ25713_Task+0x2ac>)
 8000914:	f003 fc46 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_1, GPIO_PIN_SET);
 8000918:	2201      	movs	r2, #1
 800091a:	2102      	movs	r1, #2
 800091c:	4838      	ldr	r0, [pc, #224]	; (8000a00 <BQ25713_Task+0x2ac>)
 800091e:	f003 fc41 	bl	80041a4 <HAL_GPIO_WritePin>
 8000922:	e050      	b.n	80009c6 <BQ25713_Task+0x272>

	}
	else if (( BQ25713.adc_vbat >= 70)&&( BQ25713.adc_vbat < 85)){
 8000924:	4b34      	ldr	r3, [pc, #208]	; (80009f8 <BQ25713_Task+0x2a4>)
 8000926:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 800092a:	2b45      	cmp	r3, #69	; 0x45
 800092c:	d923      	bls.n	8000976 <BQ25713_Task+0x222>
 800092e:	4b32      	ldr	r3, [pc, #200]	; (80009f8 <BQ25713_Task+0x2a4>)
 8000930:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 8000934:	2b54      	cmp	r3, #84	; 0x54
 8000936:	d81e      	bhi.n	8000976 <BQ25713_Task+0x222>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, GPIO_PIN_RESET);
 8000938:	2200      	movs	r2, #0
 800093a:	2140      	movs	r1, #64	; 0x40
 800093c:	4830      	ldr	r0, [pc, #192]	; (8000a00 <BQ25713_Task+0x2ac>)
 800093e:	f003 fc31 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8000942:	2200      	movs	r2, #0
 8000944:	2120      	movs	r1, #32
 8000946:	482e      	ldr	r0, [pc, #184]	; (8000a00 <BQ25713_Task+0x2ac>)
 8000948:	f003 fc2c 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4, GPIO_PIN_RESET);
 800094c:	2200      	movs	r2, #0
 800094e:	2110      	movs	r1, #16
 8000950:	482b      	ldr	r0, [pc, #172]	; (8000a00 <BQ25713_Task+0x2ac>)
 8000952:	f003 fc27 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_RESET);
 8000956:	2200      	movs	r2, #0
 8000958:	2108      	movs	r1, #8
 800095a:	4829      	ldr	r0, [pc, #164]	; (8000a00 <BQ25713_Task+0x2ac>)
 800095c:	f003 fc22 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_RESET);
 8000960:	2200      	movs	r2, #0
 8000962:	2104      	movs	r1, #4
 8000964:	4826      	ldr	r0, [pc, #152]	; (8000a00 <BQ25713_Task+0x2ac>)
 8000966:	f003 fc1d 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_1, GPIO_PIN_SET);
 800096a:	2201      	movs	r2, #1
 800096c:	2102      	movs	r1, #2
 800096e:	4824      	ldr	r0, [pc, #144]	; (8000a00 <BQ25713_Task+0x2ac>)
 8000970:	f003 fc18 	bl	80041a4 <HAL_GPIO_WritePin>
 8000974:	e027      	b.n	80009c6 <BQ25713_Task+0x272>
	}
	else if (( BQ25713.adc_vbat >= 85)&&( BQ25713.adc_vbat <= 100)){
 8000976:	4b20      	ldr	r3, [pc, #128]	; (80009f8 <BQ25713_Task+0x2a4>)
 8000978:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 800097c:	2b54      	cmp	r3, #84	; 0x54
 800097e:	d922      	bls.n	80009c6 <BQ25713_Task+0x272>
 8000980:	4b1d      	ldr	r3, [pc, #116]	; (80009f8 <BQ25713_Task+0x2a4>)
 8000982:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
 8000986:	2b64      	cmp	r3, #100	; 0x64
 8000988:	d81d      	bhi.n	80009c6 <BQ25713_Task+0x272>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_6, GPIO_PIN_RESET);
 800098a:	2200      	movs	r2, #0
 800098c:	2140      	movs	r1, #64	; 0x40
 800098e:	481c      	ldr	r0, [pc, #112]	; (8000a00 <BQ25713_Task+0x2ac>)
 8000990:	f003 fc08 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8000994:	2200      	movs	r2, #0
 8000996:	2120      	movs	r1, #32
 8000998:	4819      	ldr	r0, [pc, #100]	; (8000a00 <BQ25713_Task+0x2ac>)
 800099a:	f003 fc03 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4, GPIO_PIN_RESET);
 800099e:	2200      	movs	r2, #0
 80009a0:	2110      	movs	r1, #16
 80009a2:	4817      	ldr	r0, [pc, #92]	; (8000a00 <BQ25713_Task+0x2ac>)
 80009a4:	f003 fbfe 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_RESET);
 80009a8:	2200      	movs	r2, #0
 80009aa:	2108      	movs	r1, #8
 80009ac:	4814      	ldr	r0, [pc, #80]	; (8000a00 <BQ25713_Task+0x2ac>)
 80009ae:	f003 fbf9 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_RESET);
 80009b2:	2200      	movs	r2, #0
 80009b4:	2104      	movs	r1, #4
 80009b6:	4812      	ldr	r0, [pc, #72]	; (8000a00 <BQ25713_Task+0x2ac>)
 80009b8:	f003 fbf4 	bl	80041a4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_1, GPIO_PIN_RESET);
 80009bc:	2200      	movs	r2, #0
 80009be:	2102      	movs	r1, #2
 80009c0:	480f      	ldr	r0, [pc, #60]	; (8000a00 <BQ25713_Task+0x2ac>)
 80009c2:	f003 fbef 	bl	80041a4 <HAL_GPIO_WritePin>
	}
	data[0] = 0x00;     // LSB byte of 16bit đata => Fist byte
 80009c6:	2300      	movs	r3, #0
 80009c8:	713b      	strb	r3, [r7, #4]
	data[1] = 0x00;  	// MSB byte of 16bit data => Second byte
 80009ca:	2300      	movs	r3, #0
 80009cc:	717b      	strb	r3, [r7, #5]
	read_register_16 (BQ25713_REG_CHARGER_STATUS , data);
 80009ce:	1d3b      	adds	r3, r7, #4
 80009d0:	4619      	mov	r1, r3
 80009d2:	2020      	movs	r0, #32
 80009d4:	f000 f822 	bl	8000a1c <read_register_16>
	read_register_16 (BQ25713_REG_PROCHOT_STATUS , data);
 80009d8:	1d3b      	adds	r3, r7, #4
 80009da:	4619      	mov	r1, r3
 80009dc:	2022      	movs	r0, #34	; 0x22
 80009de:	f000 f81d 	bl	8000a1c <read_register_16>
	read_register_16 (BQ25713_REG_CHARGER_STATUS , data);
 80009e2:	1d3b      	adds	r3, r7, #4
 80009e4:	4619      	mov	r1, r3
 80009e6:	2020      	movs	r0, #32
 80009e8:	f000 f818 	bl	8000a1c <read_register_16>
}
 80009ec:	bf00      	nop
 80009ee:	3708      	adds	r7, #8
 80009f0:	46bd      	mov	sp, r7
 80009f2:	bd80      	pop	{r7, pc}
 80009f4:	80808081 	.word	0x80808081
 80009f8:	20026bbc 	.word	0x20026bbc
 80009fc:	40020800 	.word	0x40020800
 8000a00:	40021000 	.word	0x40021000

08000a04 <BQ25713_Get_VBat>:

uint8_t BQ25713_Get_VBat(){
 8000a04:	b480      	push	{r7}
 8000a06:	af00      	add	r7, sp, #0
	}
	else if (( BQ25713.adc_vbat >= 95)&&( BQ25713.adc_vbat <= 100)){
		return 6;
	}
	*/
	return BQ25713.adc_vbat;
 8000a08:	4b03      	ldr	r3, [pc, #12]	; (8000a18 <BQ25713_Get_VBat+0x14>)
 8000a0a:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
}
 8000a0e:	4618      	mov	r0, r3
 8000a10:	46bd      	mov	sp, r7
 8000a12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a16:	4770      	bx	lr
 8000a18:	20026bbc 	.word	0x20026bbc

08000a1c <read_register_16>:

void read_register_16(uint8_t register_pointer, uint8_t* receive_buffer)
{
 8000a1c:	b580      	push	{r7, lr}
 8000a1e:	b084      	sub	sp, #16
 8000a20:	af02      	add	r7, sp, #8
 8000a22:	4603      	mov	r3, r0
 8000a24:	6039      	str	r1, [r7, #0]
 8000a26:	71fb      	strb	r3, [r7, #7]
    // first set the register pointer to the register wanted to be read
    HAL_I2C_Master_Transmit(&BQ25713.BQ25713_I2C, BQ25713.I2C_Address, &register_pointer, 1, 100);
 8000a28:	4b0c      	ldr	r3, [pc, #48]	; (8000a5c <read_register_16+0x40>)
 8000a2a:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 8000a2e:	b299      	uxth	r1, r3
 8000a30:	1dfa      	adds	r2, r7, #7
 8000a32:	2364      	movs	r3, #100	; 0x64
 8000a34:	9300      	str	r3, [sp, #0]
 8000a36:	2301      	movs	r3, #1
 8000a38:	4808      	ldr	r0, [pc, #32]	; (8000a5c <read_register_16+0x40>)
 8000a3a:	f003 fd1d 	bl	8004478 <HAL_I2C_Master_Transmit>
    // receive the 2 x 8bit data into the receive buffer
    HAL_I2C_Master_Receive(&BQ25713.BQ25713_I2C, BQ25713.I2C_Address, receive_buffer, 2, 100);
 8000a3e:	4b07      	ldr	r3, [pc, #28]	; (8000a5c <read_register_16+0x40>)
 8000a40:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 8000a44:	b299      	uxth	r1, r3
 8000a46:	2364      	movs	r3, #100	; 0x64
 8000a48:	9300      	str	r3, [sp, #0]
 8000a4a:	2302      	movs	r3, #2
 8000a4c:	683a      	ldr	r2, [r7, #0]
 8000a4e:	4803      	ldr	r0, [pc, #12]	; (8000a5c <read_register_16+0x40>)
 8000a50:	f003 fe10 	bl	8004674 <HAL_I2C_Master_Receive>
}
 8000a54:	bf00      	nop
 8000a56:	3708      	adds	r7, #8
 8000a58:	46bd      	mov	sp, r7
 8000a5a:	bd80      	pop	{r7, pc}
 8000a5c:	20026bbc 	.word	0x20026bbc

08000a60 <write_register_16>:

void write_register_16(uint8_t register_pointer, uint16_t register_value)
{
 8000a60:	b580      	push	{r7, lr}
 8000a62:	b086      	sub	sp, #24
 8000a64:	af02      	add	r7, sp, #8
 8000a66:	4603      	mov	r3, r0
 8000a68:	460a      	mov	r2, r1
 8000a6a:	71fb      	strb	r3, [r7, #7]
 8000a6c:	4613      	mov	r3, r2
 8000a6e:	80bb      	strh	r3, [r7, #4]
    uint8_t data[3];
    data[0] = register_pointer;     // 0x0C in your example
 8000a70:	79fb      	ldrb	r3, [r7, #7]
 8000a72:	733b      	strb	r3, [r7, #12]
    data[1] = register_value>>8;    // MSB byte of 16bit data
 8000a74:	88bb      	ldrh	r3, [r7, #4]
 8000a76:	0a1b      	lsrs	r3, r3, #8
 8000a78:	b29b      	uxth	r3, r3
 8000a7a:	b2db      	uxtb	r3, r3
 8000a7c:	737b      	strb	r3, [r7, #13]
    data[2] = register_value;       // LSB byte of 16bit data
 8000a7e:	88bb      	ldrh	r3, [r7, #4]
 8000a80:	b2db      	uxtb	r3, r3
 8000a82:	73bb      	strb	r3, [r7, #14]
    HAL_I2C_Master_Transmit(&BQ25713.BQ25713_I2C, BQ25713.I2C_Address, data, 3, 100);  // data is the start pointer of our array
 8000a84:	4b07      	ldr	r3, [pc, #28]	; (8000aa4 <write_register_16+0x44>)
 8000a86:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 8000a8a:	b299      	uxth	r1, r3
 8000a8c:	f107 020c 	add.w	r2, r7, #12
 8000a90:	2364      	movs	r3, #100	; 0x64
 8000a92:	9300      	str	r3, [sp, #0]
 8000a94:	2303      	movs	r3, #3
 8000a96:	4803      	ldr	r0, [pc, #12]	; (8000aa4 <write_register_16+0x44>)
 8000a98:	f003 fcee 	bl	8004478 <HAL_I2C_Master_Transmit>
}
 8000a9c:	bf00      	nop
 8000a9e:	3710      	adds	r7, #16
 8000aa0:	46bd      	mov	sp, r7
 8000aa2:	bd80      	pop	{r7, pc}
 8000aa4:	20026bbc 	.word	0x20026bbc

08000aa8 <Lexi_Init_Data>:
#include "lexilight.h"


LEXILIGHT_DATA lexilight;

void Lexi_Init_Data() {
 8000aa8:	b480      	push	{r7}
 8000aaa:	af00      	add	r7, sp, #0
	lexilight.system_clock 		= SYSTEM_CLOCK_PER_SECOND;
 8000aac:	4b15      	ldr	r3, [pc, #84]	; (8000b04 <Lexi_Init_Data+0x5c>)
 8000aae:	4a16      	ldr	r2, [pc, #88]	; (8000b08 <Lexi_Init_Data+0x60>)
 8000ab0:	601a      	str	r2, [r3, #0]
	lexilight.duty_min 			= LEXILIGHT_DUTY_MIN;
 8000ab2:	4b14      	ldr	r3, [pc, #80]	; (8000b04 <Lexi_Init_Data+0x5c>)
 8000ab4:	220a      	movs	r2, #10
 8000ab6:	619a      	str	r2, [r3, #24]
	lexilight.duty_max 			= LEXILIGHT_DUTY_MAX;
 8000ab8:	4b12      	ldr	r3, [pc, #72]	; (8000b04 <Lexi_Init_Data+0x5c>)
 8000aba:	2228      	movs	r2, #40	; 0x28
 8000abc:	615a      	str	r2, [r3, #20]
	lexilight.duty_cmd 			= LEXILIGHT_DUTY_DEFAULT;
 8000abe:	4b11      	ldr	r3, [pc, #68]	; (8000b04 <Lexi_Init_Data+0x5c>)
 8000ac0:	2214      	movs	r2, #20
 8000ac2:	60da      	str	r2, [r3, #12]
	lexilight.duty				= 30;
 8000ac4:	4b0f      	ldr	r3, [pc, #60]	; (8000b04 <Lexi_Init_Data+0x5c>)
 8000ac6:	221e      	movs	r2, #30
 8000ac8:	605a      	str	r2, [r3, #4]
	lexilight.freq_max 			= LEXILIGHT_FREQUENCY_MAX;
 8000aca:	4b0e      	ldr	r3, [pc, #56]	; (8000b04 <Lexi_Init_Data+0x5c>)
 8000acc:	2278      	movs	r2, #120	; 0x78
 8000ace:	61da      	str	r2, [r3, #28]
	lexilight.freq_min 			= LEXILIGHT_FREQUENCY_MIN;
 8000ad0:	4b0c      	ldr	r3, [pc, #48]	; (8000b04 <Lexi_Init_Data+0x5c>)
 8000ad2:	2241      	movs	r2, #65	; 0x41
 8000ad4:	621a      	str	r2, [r3, #32]
	lexilight.freq_cmd 			= LEXILIGHT_FREQUENCY_DEFAULT;
 8000ad6:	4b0b      	ldr	r3, [pc, #44]	; (8000b04 <Lexi_Init_Data+0x5c>)
 8000ad8:	2250      	movs	r2, #80	; 0x50
 8000ada:	611a      	str	r2, [r3, #16]
	lexilight.freq				= 90;
 8000adc:	4b09      	ldr	r3, [pc, #36]	; (8000b04 <Lexi_Init_Data+0x5c>)
 8000ade:	225a      	movs	r2, #90	; 0x5a
 8000ae0:	609a      	str	r2, [r3, #8]
	lexilight.lum_level 		= LIGHT_LUM_LEVEL_0;
 8000ae2:	4b08      	ldr	r3, [pc, #32]	; (8000b04 <Lexi_Init_Data+0x5c>)
 8000ae4:	2200      	movs	r2, #0
 8000ae6:	f883 204d 	strb.w	r2, [r3, #77]	; 0x4d
	lexilight.lum_value			= 90;
 8000aea:	4b06      	ldr	r3, [pc, #24]	; (8000b04 <Lexi_Init_Data+0x5c>)
 8000aec:	225a      	movs	r2, #90	; 0x5a
 8000aee:	649a      	str	r2, [r3, #72]	; 0x48
	lexilight.state 			= LIGHT_STATE_WAIT_500_MS;
 8000af0:	4b04      	ldr	r3, [pc, #16]	; (8000b04 <Lexi_Init_Data+0x5c>)
 8000af2:	2201      	movs	r2, #1
 8000af4:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
}
 8000af8:	bf00      	nop
 8000afa:	46bd      	mov	sp, r7
 8000afc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b00:	4770      	bx	lr
 8000b02:	bf00      	nop
 8000b04:	20026c18 	.word	0x20026c18
 8000b08:	00f42400 	.word	0x00f42400

08000b0c <Lexi_Task>:


void Lexi_Task (TIM_HandleTypeDef htim_pwm_led, TIM_HandleTypeDef htim_pwm_lum_driver){
 8000b0c:	b084      	sub	sp, #16
 8000b0e:	b5b0      	push	{r4, r5, r7, lr}
 8000b10:	b08c      	sub	sp, #48	; 0x30
 8000b12:	af0c      	add	r7, sp, #48	; 0x30
 8000b14:	f107 0410 	add.w	r4, r7, #16
 8000b18:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}

	switch (lexilight.state)
 8000b1c:	4b67      	ldr	r3, [pc, #412]	; (8000cbc <Lexi_Task+0x1b0>)
 8000b1e:	f893 304c 	ldrb.w	r3, [r3, #76]	; 0x4c
 8000b22:	2b07      	cmp	r3, #7
 8000b24:	f200 80be 	bhi.w	8000ca4 <Lexi_Task+0x198>
 8000b28:	a201      	add	r2, pc, #4	; (adr r2, 8000b30 <Lexi_Task+0x24>)
 8000b2a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000b2e:	bf00      	nop
 8000b30:	08000b51 	.word	0x08000b51
 8000b34:	08000b5f 	.word	0x08000b5f
 8000b38:	08000b71 	.word	0x08000b71
 8000b3c:	08000c09 	.word	0x08000c09
 8000b40:	08000c09 	.word	0x08000c09
 8000b44:	08000bbb 	.word	0x08000bbb
 8000b48:	08000c57 	.word	0x08000c57
 8000b4c:	08000b51 	.word	0x08000b51
	{
		case LIGHT_STATE_ERROR:
		case LIGHT_STATE_INIT:
			Lexi_Init_Data();
 8000b50:	f7ff ffaa 	bl	8000aa8 <Lexi_Init_Data>
			lexilight.state = LIGHT_STATE_WAIT_500_MS;
 8000b54:	4b59      	ldr	r3, [pc, #356]	; (8000cbc <Lexi_Task+0x1b0>)
 8000b56:	2201      	movs	r2, #1
 8000b58:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
			break;
 8000b5c:	e0a7      	b.n	8000cae <Lexi_Task+0x1a2>

		case LIGHT_STATE_WAIT_500_MS:
			HAL_Delay(500);
 8000b5e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000b62:	f002 fb5b 	bl	800321c <HAL_Delay>
			lexilight.state = LIGHT_STATE_SERVICE;
 8000b66:	4b55      	ldr	r3, [pc, #340]	; (8000cbc <Lexi_Task+0x1b0>)
 8000b68:	2202      	movs	r2, #2
 8000b6a:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
			break;
 8000b6e:	e09e      	b.n	8000cae <Lexi_Task+0x1a2>

		case LIGHT_STATE_SERVICE:

			//Get pwm defaut or eeprom
			Lexi_DO_LED_PWM (htim_pwm_led);
 8000b70:	466d      	mov	r5, sp
 8000b72:	f107 0420 	add.w	r4, r7, #32
 8000b76:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000b78:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b7a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000b7c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b7e:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000b82:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000b86:	f107 0310 	add.w	r3, r7, #16
 8000b8a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000b8c:	f000 f89a 	bl	8000cc4 <Lexi_DO_LED_PWM>
			Lexi_DO_PWM_LUM_DRIVER(htim_pwm_lum_driver);
 8000b90:	466d      	mov	r5, sp
 8000b92:	f107 0460 	add.w	r4, r7, #96	; 0x60
 8000b96:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000b98:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b9a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000b9c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b9e:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000ba2:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000ba6:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000baa:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000bac:	f000 f8ec 	bl	8000d88 <Lexi_DO_PWM_LUM_DRIVER>
			lexilight.state = LIGHT_STATE_OFF;
 8000bb0:	4b42      	ldr	r3, [pc, #264]	; (8000cbc <Lexi_Task+0x1b0>)
 8000bb2:	2206      	movs	r2, #6
 8000bb4:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
			break;
 8000bb8:	e079      	b.n	8000cae <Lexi_Task+0x1a2>

		case LIGHT_STATE_LEXI:
			Lexi_DO_LED_PWM (htim_pwm_led);
 8000bba:	466d      	mov	r5, sp
 8000bbc:	f107 0420 	add.w	r4, r7, #32
 8000bc0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000bc2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000bc4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000bc6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000bc8:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000bcc:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000bd0:	f107 0310 	add.w	r3, r7, #16
 8000bd4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000bd6:	f000 f875 	bl	8000cc4 <Lexi_DO_LED_PWM>
			Lexi_DO_PWM_LUM_DRIVER(htim_pwm_lum_driver);
 8000bda:	466d      	mov	r5, sp
 8000bdc:	f107 0460 	add.w	r4, r7, #96	; 0x60
 8000be0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000be2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000be4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000be6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000be8:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000bec:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000bf0:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000bf4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000bf6:	f000 f8c7 	bl	8000d88 <Lexi_DO_PWM_LUM_DRIVER>
			//Turn On EN_DRIVER
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13,GPIO_PIN_SET);
 8000bfa:	2201      	movs	r2, #1
 8000bfc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000c00:	482f      	ldr	r0, [pc, #188]	; (8000cc0 <Lexi_Task+0x1b4>)
 8000c02:	f003 facf 	bl	80041a4 <HAL_GPIO_WritePin>
			break;
 8000c06:	e052      	b.n	8000cae <Lexi_Task+0x1a2>

		case LIGHT_STATE_ON:
		case LIGHT_STATE_STANDARD:
			Lexi_DO_Standard_PWM(htim_pwm_led);
 8000c08:	466d      	mov	r5, sp
 8000c0a:	f107 0420 	add.w	r4, r7, #32
 8000c0e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000c10:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000c12:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000c14:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000c16:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000c1a:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000c1e:	f107 0310 	add.w	r3, r7, #16
 8000c22:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000c24:	f000 f898 	bl	8000d58 <Lexi_DO_Standard_PWM>
			Lexi_DO_PWM_LUM_DRIVER(htim_pwm_lum_driver);
 8000c28:	466d      	mov	r5, sp
 8000c2a:	f107 0460 	add.w	r4, r7, #96	; 0x60
 8000c2e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000c30:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000c32:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000c34:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000c36:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000c3a:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000c3e:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000c42:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000c44:	f000 f8a0 	bl	8000d88 <Lexi_DO_PWM_LUM_DRIVER>
			//Turn On EN_DRIVER
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13,GPIO_PIN_SET);
 8000c48:	2201      	movs	r2, #1
 8000c4a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000c4e:	481c      	ldr	r0, [pc, #112]	; (8000cc0 <Lexi_Task+0x1b4>)
 8000c50:	f003 faa8 	bl	80041a4 <HAL_GPIO_WritePin>
			break;
 8000c54:	e02b      	b.n	8000cae <Lexi_Task+0x1a2>

		case LIGHT_STATE_OFF:
			Lexi_DO_LED_PWM (htim_pwm_led);
 8000c56:	466d      	mov	r5, sp
 8000c58:	f107 0420 	add.w	r4, r7, #32
 8000c5c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000c5e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000c60:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000c62:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000c64:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000c68:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000c6c:	f107 0310 	add.w	r3, r7, #16
 8000c70:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000c72:	f000 f827 	bl	8000cc4 <Lexi_DO_LED_PWM>
			Lexi_DO_PWM_LUM_DRIVER(htim_pwm_lum_driver);
 8000c76:	466d      	mov	r5, sp
 8000c78:	f107 0460 	add.w	r4, r7, #96	; 0x60
 8000c7c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000c7e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000c80:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000c82:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000c84:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000c88:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000c8c:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000c90:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000c92:	f000 f879 	bl	8000d88 <Lexi_DO_PWM_LUM_DRIVER>
			//Turn OFF EN_DRIVER
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8000c96:	2200      	movs	r2, #0
 8000c98:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000c9c:	4808      	ldr	r0, [pc, #32]	; (8000cc0 <Lexi_Task+0x1b4>)
 8000c9e:	f003 fa81 	bl	80041a4 <HAL_GPIO_WritePin>
			break;
 8000ca2:	e004      	b.n	8000cae <Lexi_Task+0x1a2>
		default:
			lexilight.state = LIGHT_STATE_ERROR;
 8000ca4:	4b05      	ldr	r3, [pc, #20]	; (8000cbc <Lexi_Task+0x1b0>)
 8000ca6:	2207      	movs	r2, #7
 8000ca8:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
			break;
 8000cac:	bf00      	nop
		}
}
 8000cae:	bf00      	nop
 8000cb0:	46bd      	mov	sp, r7
 8000cb2:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8000cb6:	b004      	add	sp, #16
 8000cb8:	4770      	bx	lr
 8000cba:	bf00      	nop
 8000cbc:	20026c18 	.word	0x20026c18
 8000cc0:	40020c00 	.word	0x40020c00

08000cc4 <Lexi_DO_LED_PWM>:

void Lexi_DO_LED_PWM (TIM_HandleTypeDef htim){
 8000cc4:	b084      	sub	sp, #16
 8000cc6:	b480      	push	{r7}
 8000cc8:	b083      	sub	sp, #12
 8000cca:	af00      	add	r7, sp, #0
 8000ccc:	f107 0c10 	add.w	ip, r7, #16
 8000cd0:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	//Check update Freq
	if ((	lexilight.freq_cmd >= lexilight.freq_min)
 8000cd4:	4b1f      	ldr	r3, [pc, #124]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000cd6:	691a      	ldr	r2, [r3, #16]
 8000cd8:	4b1e      	ldr	r3, [pc, #120]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000cda:	6a1b      	ldr	r3, [r3, #32]
 8000cdc:	429a      	cmp	r2, r3
 8000cde:	d31d      	bcc.n	8000d1c <Lexi_DO_LED_PWM+0x58>
			&& (lexilight.freq_cmd <= lexilight.freq_max))
 8000ce0:	4b1c      	ldr	r3, [pc, #112]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000ce2:	691a      	ldr	r2, [r3, #16]
 8000ce4:	4b1b      	ldr	r3, [pc, #108]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000ce6:	69db      	ldr	r3, [r3, #28]
 8000ce8:	429a      	cmp	r2, r3
 8000cea:	d817      	bhi.n	8000d1c <Lexi_DO_LED_PWM+0x58>
			//&& (lexilight.freq != lexilight.freq_cmd))
	{
		lexilight.freq = lexilight.freq_cmd;	//Update New value of ADC Duty;
 8000cec:	4b19      	ldr	r3, [pc, #100]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000cee:	691b      	ldr	r3, [r3, #16]
 8000cf0:	4a18      	ldr	r2, [pc, #96]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000cf2:	6093      	str	r3, [r2, #8]
		int prescaler = (uint16_t)(lexilight.system_clock/(lexilight.freq*100) - 1);
 8000cf4:	4b17      	ldr	r3, [pc, #92]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000cf6:	681a      	ldr	r2, [r3, #0]
 8000cf8:	4b16      	ldr	r3, [pc, #88]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000cfa:	689b      	ldr	r3, [r3, #8]
 8000cfc:	2164      	movs	r1, #100	; 0x64
 8000cfe:	fb01 f303 	mul.w	r3, r1, r3
 8000d02:	fbb2 f3f3 	udiv	r3, r2, r3
 8000d06:	b29b      	uxth	r3, r3
 8000d08:	3b01      	subs	r3, #1
 8000d0a:	b29b      	uxth	r3, r3
 8000d0c:	607b      	str	r3, [r7, #4]
		__HAL_TIM_SET_PRESCALER(&htim, prescaler);
 8000d0e:	693b      	ldr	r3, [r7, #16]
 8000d10:	687a      	ldr	r2, [r7, #4]
 8000d12:	629a      	str	r2, [r3, #40]	; 0x28
		lexilight.freq = lexilight.freq_cmd;
 8000d14:	4b0f      	ldr	r3, [pc, #60]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000d16:	691b      	ldr	r3, [r3, #16]
 8000d18:	4a0e      	ldr	r2, [pc, #56]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000d1a:	6093      	str	r3, [r2, #8]
	}

	//Check update Dutycycle
	if ((	lexilight.duty_cmd >= lexilight.duty_min)
 8000d1c:	4b0d      	ldr	r3, [pc, #52]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000d1e:	68da      	ldr	r2, [r3, #12]
 8000d20:	4b0c      	ldr	r3, [pc, #48]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000d22:	699b      	ldr	r3, [r3, #24]
 8000d24:	429a      	cmp	r2, r3
 8000d26:	d30d      	bcc.n	8000d44 <Lexi_DO_LED_PWM+0x80>
			&& (lexilight.duty_cmd <= lexilight.duty_max))
 8000d28:	4b0a      	ldr	r3, [pc, #40]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000d2a:	68da      	ldr	r2, [r3, #12]
 8000d2c:	4b09      	ldr	r3, [pc, #36]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000d2e:	695b      	ldr	r3, [r3, #20]
 8000d30:	429a      	cmp	r2, r3
 8000d32:	d807      	bhi.n	8000d44 <Lexi_DO_LED_PWM+0x80>
			//&& (lexilight.duty != lexilight.duty_cmd))
	{
		lexilight.duty = lexilight.duty_cmd;
 8000d34:	4b07      	ldr	r3, [pc, #28]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000d36:	68db      	ldr	r3, [r3, #12]
 8000d38:	4a06      	ldr	r2, [pc, #24]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000d3a:	6053      	str	r3, [r2, #4]
		__HAL_TIM_SET_COMPARE(&htim, TIM_CHANNEL_1,lexilight.duty);
 8000d3c:	693b      	ldr	r3, [r7, #16]
 8000d3e:	4a05      	ldr	r2, [pc, #20]	; (8000d54 <Lexi_DO_LED_PWM+0x90>)
 8000d40:	6852      	ldr	r2, [r2, #4]
 8000d42:	635a      	str	r2, [r3, #52]	; 0x34
	}
}
 8000d44:	bf00      	nop
 8000d46:	370c      	adds	r7, #12
 8000d48:	46bd      	mov	sp, r7
 8000d4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d4e:	b004      	add	sp, #16
 8000d50:	4770      	bx	lr
 8000d52:	bf00      	nop
 8000d54:	20026c18 	.word	0x20026c18

08000d58 <Lexi_DO_Standard_PWM>:

void Lexi_DO_Standard_PWM (TIM_HandleTypeDef htim){
 8000d58:	b084      	sub	sp, #16
 8000d5a:	b480      	push	{r7}
 8000d5c:	b083      	sub	sp, #12
 8000d5e:	af00      	add	r7, sp, #0
 8000d60:	f107 0c10 	add.w	ip, r7, #16
 8000d64:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
		int prescaler = 59;		//Set frequency 119 = 4KHZ
 8000d68:	233b      	movs	r3, #59	; 0x3b
 8000d6a:	607b      	str	r3, [r7, #4]
		__HAL_TIM_SET_PRESCALER(&htim, prescaler);
 8000d6c:	693b      	ldr	r3, [r7, #16]
 8000d6e:	687a      	ldr	r2, [r7, #4]
 8000d70:	629a      	str	r2, [r3, #40]	; 0x28
		//__HAL_TIM_SET_COMPARE(&htim, TIM_CHANNEL_2, lexilight.duty);
		__HAL_TIM_SET_COMPARE(&htim, TIM_CHANNEL_1, 100);
 8000d72:	693b      	ldr	r3, [r7, #16]
 8000d74:	2264      	movs	r2, #100	; 0x64
 8000d76:	635a      	str	r2, [r3, #52]	; 0x34

}
 8000d78:	bf00      	nop
 8000d7a:	370c      	adds	r7, #12
 8000d7c:	46bd      	mov	sp, r7
 8000d7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d82:	b004      	add	sp, #16
 8000d84:	4770      	bx	lr
	...

08000d88 <Lexi_DO_PWM_LUM_DRIVER>:

void Lexi_DO_PWM_LUM_DRIVER (TIM_HandleTypeDef htim){
 8000d88:	b084      	sub	sp, #16
 8000d8a:	b480      	push	{r7}
 8000d8c:	b083      	sub	sp, #12
 8000d8e:	af00      	add	r7, sp, #0
 8000d90:	f107 0c10 	add.w	ip, r7, #16
 8000d94:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}

	uint8_t value = lexilight.lum_value; // Value from 0 to 100;
 8000d98:	4b08      	ldr	r3, [pc, #32]	; (8000dbc <Lexi_DO_PWM_LUM_DRIVER+0x34>)
 8000d9a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8000d9c:	71fb      	strb	r3, [r7, #7]
	value = 100 - value;
 8000d9e:	79fb      	ldrb	r3, [r7, #7]
 8000da0:	f1c3 0364 	rsb	r3, r3, #100	; 0x64
 8000da4:	71fb      	strb	r3, [r7, #7]
	__HAL_TIM_SET_COMPARE(&htim, TIM_CHANNEL_3, value);
 8000da6:	693b      	ldr	r3, [r7, #16]
 8000da8:	79fa      	ldrb	r2, [r7, #7]
 8000daa:	63da      	str	r2, [r3, #60]	; 0x3c

		default:
			break;
	}
	*/
}
 8000dac:	bf00      	nop
 8000dae:	370c      	adds	r7, #12
 8000db0:	46bd      	mov	sp, r7
 8000db2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000db6:	b004      	add	sp, #16
 8000db8:	4770      	bx	lr
 8000dba:	bf00      	nop
 8000dbc:	20026c18 	.word	0x20026c18

08000dc0 <Lexi_Get_Luminosity>:
	return lexilight.duty;
}
unsigned int Lexi_Get_Freq(){
	return lexilight.freq;
}
unsigned int Lexi_Get_Luminosity(){
 8000dc0:	b480      	push	{r7}
 8000dc2:	af00      	add	r7, sp, #0
	return (lexilight.lum_value);
 8000dc4:	4b03      	ldr	r3, [pc, #12]	; (8000dd4 <Lexi_Get_Luminosity+0x14>)
 8000dc6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
}
 8000dc8:	4618      	mov	r0, r3
 8000dca:	46bd      	mov	sp, r7
 8000dcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dd0:	4770      	bx	lr
 8000dd2:	bf00      	nop
 8000dd4:	20026c18 	.word	0x20026c18

08000dd8 <Lexi_Get_Led_State>:
unsigned int Lexi_Get_Led_State(){
 8000dd8:	b480      	push	{r7}
 8000dda:	af00      	add	r7, sp, #0
	if (lexilight.state == LIGHT_STATE_LEXI){
 8000ddc:	4b0f      	ldr	r3, [pc, #60]	; (8000e1c <Lexi_Get_Led_State+0x44>)
 8000dde:	f893 304c 	ldrb.w	r3, [r3, #76]	; 0x4c
 8000de2:	2b05      	cmp	r3, #5
 8000de4:	d101      	bne.n	8000dea <Lexi_Get_Led_State+0x12>
		return 2;
 8000de6:	2302      	movs	r3, #2
 8000de8:	e013      	b.n	8000e12 <Lexi_Get_Led_State+0x3a>
	}
	else if ((lexilight.state == LIGHT_STATE_ON) || (lexilight.state == LIGHT_STATE_STANDARD)){
 8000dea:	4b0c      	ldr	r3, [pc, #48]	; (8000e1c <Lexi_Get_Led_State+0x44>)
 8000dec:	f893 304c 	ldrb.w	r3, [r3, #76]	; 0x4c
 8000df0:	2b03      	cmp	r3, #3
 8000df2:	d004      	beq.n	8000dfe <Lexi_Get_Led_State+0x26>
 8000df4:	4b09      	ldr	r3, [pc, #36]	; (8000e1c <Lexi_Get_Led_State+0x44>)
 8000df6:	f893 304c 	ldrb.w	r3, [r3, #76]	; 0x4c
 8000dfa:	2b04      	cmp	r3, #4
 8000dfc:	d101      	bne.n	8000e02 <Lexi_Get_Led_State+0x2a>
		return 1;
 8000dfe:	2301      	movs	r3, #1
 8000e00:	e007      	b.n	8000e12 <Lexi_Get_Led_State+0x3a>
	}
	else if (lexilight.state == LIGHT_STATE_OFF) {
 8000e02:	4b06      	ldr	r3, [pc, #24]	; (8000e1c <Lexi_Get_Led_State+0x44>)
 8000e04:	f893 304c 	ldrb.w	r3, [r3, #76]	; 0x4c
 8000e08:	2b06      	cmp	r3, #6
 8000e0a:	d101      	bne.n	8000e10 <Lexi_Get_Led_State+0x38>
		return 0;
 8000e0c:	2300      	movs	r3, #0
 8000e0e:	e000      	b.n	8000e12 <Lexi_Get_Led_State+0x3a>
	}
	else{
		return 0;
 8000e10:	2300      	movs	r3, #0
	}
}
 8000e12:	4618      	mov	r0, r3
 8000e14:	46bd      	mov	sp, r7
 8000e16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e1a:	4770      	bx	lr
 8000e1c:	20026c18 	.word	0x20026c18

08000e20 <Lexi_Set_State_OFF>:
//Set function
void Lexi_Set_State_OFF (){
 8000e20:	b480      	push	{r7}
 8000e22:	af00      	add	r7, sp, #0
	lexilight.state = LIGHT_STATE_OFF;
 8000e24:	4b04      	ldr	r3, [pc, #16]	; (8000e38 <Lexi_Set_State_OFF+0x18>)
 8000e26:	2206      	movs	r2, #6
 8000e28:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
}
 8000e2c:	bf00      	nop
 8000e2e:	46bd      	mov	sp, r7
 8000e30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e34:	4770      	bx	lr
 8000e36:	bf00      	nop
 8000e38:	20026c18 	.word	0x20026c18

08000e3c <Lexi_Set_State_ON>:
void Lexi_Set_State_ON (){
 8000e3c:	b480      	push	{r7}
 8000e3e:	af00      	add	r7, sp, #0
	lexilight.state = LIGHT_STATE_ON;
 8000e40:	4b04      	ldr	r3, [pc, #16]	; (8000e54 <Lexi_Set_State_ON+0x18>)
 8000e42:	2203      	movs	r2, #3
 8000e44:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
}
 8000e48:	bf00      	nop
 8000e4a:	46bd      	mov	sp, r7
 8000e4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e50:	4770      	bx	lr
 8000e52:	bf00      	nop
 8000e54:	20026c18 	.word	0x20026c18

08000e58 <Lexi_Set_State_STANDARD>:
void Lexi_Set_State_STANDARD (){
 8000e58:	b480      	push	{r7}
 8000e5a:	af00      	add	r7, sp, #0
	lexilight.state = LIGHT_STATE_STANDARD;
 8000e5c:	4b04      	ldr	r3, [pc, #16]	; (8000e70 <Lexi_Set_State_STANDARD+0x18>)
 8000e5e:	2204      	movs	r2, #4
 8000e60:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
}
 8000e64:	bf00      	nop
 8000e66:	46bd      	mov	sp, r7
 8000e68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e6c:	4770      	bx	lr
 8000e6e:	bf00      	nop
 8000e70:	20026c18 	.word	0x20026c18

08000e74 <Lexi_Set_State_LEXI>:
void Lexi_Set_State_LEXI (){
 8000e74:	b480      	push	{r7}
 8000e76:	af00      	add	r7, sp, #0
	lexilight.state = LIGHT_STATE_LEXI;
 8000e78:	4b04      	ldr	r3, [pc, #16]	; (8000e8c <Lexi_Set_State_LEXI+0x18>)
 8000e7a:	2205      	movs	r2, #5
 8000e7c:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
}
 8000e80:	bf00      	nop
 8000e82:	46bd      	mov	sp, r7
 8000e84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e88:	4770      	bx	lr
 8000e8a:	bf00      	nop
 8000e8c:	20026c18 	.word	0x20026c18

08000e90 <Lexi_Set_Duty>:
void Lexi_Set_Duty( unsigned int value){
 8000e90:	b480      	push	{r7}
 8000e92:	b083      	sub	sp, #12
 8000e94:	af00      	add	r7, sp, #0
 8000e96:	6078      	str	r0, [r7, #4]
	if (value >=40){
 8000e98:	687b      	ldr	r3, [r7, #4]
 8000e9a:	2b27      	cmp	r3, #39	; 0x27
 8000e9c:	d903      	bls.n	8000ea6 <Lexi_Set_Duty+0x16>
		lexilight.duty_cmd  = 40;
 8000e9e:	4b06      	ldr	r3, [pc, #24]	; (8000eb8 <Lexi_Set_Duty+0x28>)
 8000ea0:	2228      	movs	r2, #40	; 0x28
 8000ea2:	60da      	str	r2, [r3, #12]
	}
	else{
		lexilight.duty_cmd  = value;
	}
}
 8000ea4:	e002      	b.n	8000eac <Lexi_Set_Duty+0x1c>
		lexilight.duty_cmd  = value;
 8000ea6:	4a04      	ldr	r2, [pc, #16]	; (8000eb8 <Lexi_Set_Duty+0x28>)
 8000ea8:	687b      	ldr	r3, [r7, #4]
 8000eaa:	60d3      	str	r3, [r2, #12]
}
 8000eac:	bf00      	nop
 8000eae:	370c      	adds	r7, #12
 8000eb0:	46bd      	mov	sp, r7
 8000eb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eb6:	4770      	bx	lr
 8000eb8:	20026c18 	.word	0x20026c18

08000ebc <Lexi_Set_Freq>:

void Lexi_Set_Freq( unsigned int value){
 8000ebc:	b480      	push	{r7}
 8000ebe:	b083      	sub	sp, #12
 8000ec0:	af00      	add	r7, sp, #0
 8000ec2:	6078      	str	r0, [r7, #4]
	if (value >=120){
 8000ec4:	687b      	ldr	r3, [r7, #4]
 8000ec6:	2b77      	cmp	r3, #119	; 0x77
 8000ec8:	d903      	bls.n	8000ed2 <Lexi_Set_Freq+0x16>
			lexilight.freq_cmd  = 120;
 8000eca:	4b0a      	ldr	r3, [pc, #40]	; (8000ef4 <Lexi_Set_Freq+0x38>)
 8000ecc:	2278      	movs	r2, #120	; 0x78
 8000ece:	611a      	str	r2, [r3, #16]
		lexilight.freq_cmd  = 65;
	}
	else{
		lexilight.freq_cmd  = value;
	}
}
 8000ed0:	e009      	b.n	8000ee6 <Lexi_Set_Freq+0x2a>
	else if (value <=65){
 8000ed2:	687b      	ldr	r3, [r7, #4]
 8000ed4:	2b41      	cmp	r3, #65	; 0x41
 8000ed6:	d803      	bhi.n	8000ee0 <Lexi_Set_Freq+0x24>
		lexilight.freq_cmd  = 65;
 8000ed8:	4b06      	ldr	r3, [pc, #24]	; (8000ef4 <Lexi_Set_Freq+0x38>)
 8000eda:	2241      	movs	r2, #65	; 0x41
 8000edc:	611a      	str	r2, [r3, #16]
}
 8000ede:	e002      	b.n	8000ee6 <Lexi_Set_Freq+0x2a>
		lexilight.freq_cmd  = value;
 8000ee0:	4a04      	ldr	r2, [pc, #16]	; (8000ef4 <Lexi_Set_Freq+0x38>)
 8000ee2:	687b      	ldr	r3, [r7, #4]
 8000ee4:	6113      	str	r3, [r2, #16]
}
 8000ee6:	bf00      	nop
 8000ee8:	370c      	adds	r7, #12
 8000eea:	46bd      	mov	sp, r7
 8000eec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ef0:	4770      	bx	lr
 8000ef2:	bf00      	nop
 8000ef4:	20026c18 	.word	0x20026c18

08000ef8 <Lexi_Set_Luminosity>:

void Lexi_Set_Luminosity( unsigned int value){
 8000ef8:	b480      	push	{r7}
 8000efa:	b083      	sub	sp, #12
 8000efc:	af00      	add	r7, sp, #0
 8000efe:	6078      	str	r0, [r7, #4]
	lexilight.lum_value =  value;
 8000f00:	4a04      	ldr	r2, [pc, #16]	; (8000f14 <Lexi_Set_Luminosity+0x1c>)
 8000f02:	687b      	ldr	r3, [r7, #4]
 8000f04:	6493      	str	r3, [r2, #72]	; 0x48
}
 8000f06:	bf00      	nop
 8000f08:	370c      	adds	r7, #12
 8000f0a:	46bd      	mov	sp, r7
 8000f0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f10:	4770      	bx	lr
 8000f12:	bf00      	nop
 8000f14:	20026c18 	.word	0x20026c18

08000f18 <SPIx_Error>:
#define LCD_WR_LOW()		HAL_GPIO_WritePin(WR_LCD_GPIO_Port, WR_LCD_Pin, GPIO_PIN_RESET)
#define LCD_WR_HIGH()		HAL_GPIO_WritePin(WR_LCD_GPIO_Port, WR_LCD_Pin, GPIO_PIN_SET)


static void SPIx_Error(void)
{
 8000f18:	b580      	push	{r7, lr}
 8000f1a:	af00      	add	r7, sp, #0
  /* De-initialize the SPI communication BUS */
  HAL_SPI_DeInit(&hspi3);
 8000f1c:	4803      	ldr	r0, [pc, #12]	; (8000f2c <SPIx_Error+0x14>)
 8000f1e:	f005 fb81 	bl	8006624 <HAL_SPI_DeInit>

  /* Re- Initialize the SPI communication BUS */
   MX_SPI3_Init();
 8000f22:	f000 fba1 	bl	8001668 <MX_SPI3_Init>
}
 8000f26:	bf00      	nop
 8000f28:	bd80      	pop	{r7, pc}
 8000f2a:	bf00      	nop
 8000f2c:	20026d84 	.word	0x20026d84

08000f30 <SPIx_Write>:


static void SPIx_Write(uint16_t Value)
{
 8000f30:	b580      	push	{r7, lr}
 8000f32:	b084      	sub	sp, #16
 8000f34:	af00      	add	r7, sp, #0
 8000f36:	4603      	mov	r3, r0
 8000f38:	80fb      	strh	r3, [r7, #6]
  HAL_StatusTypeDef status = HAL_OK;
 8000f3a:	2300      	movs	r3, #0
 8000f3c:	73fb      	strb	r3, [r7, #15]

  status = HAL_SPI_Transmit(&hspi3, (uint8_t*) &Value, 1, 0x1000);
 8000f3e:	1db9      	adds	r1, r7, #6
 8000f40:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000f44:	2201      	movs	r2, #1
 8000f46:	4807      	ldr	r0, [pc, #28]	; (8000f64 <SPIx_Write+0x34>)
 8000f48:	f005 fb94 	bl	8006674 <HAL_SPI_Transmit>
 8000f4c:	4603      	mov	r3, r0
 8000f4e:	73fb      	strb	r3, [r7, #15]

  /* Check the communication status */
  if(status != HAL_OK)
 8000f50:	7bfb      	ldrb	r3, [r7, #15]
 8000f52:	2b00      	cmp	r3, #0
 8000f54:	d001      	beq.n	8000f5a <SPIx_Write+0x2a>
  {
    /* Re-Initialize the BUS */
    SPIx_Error();
 8000f56:	f7ff ffdf 	bl	8000f18 <SPIx_Error>
  }
}
 8000f5a:	bf00      	nop
 8000f5c:	3710      	adds	r7, #16
 8000f5e:	46bd      	mov	sp, r7
 8000f60:	bd80      	pop	{r7, pc}
 8000f62:	bf00      	nop
 8000f64:	20026d84 	.word	0x20026d84

08000f68 <SPIx_Read>:

static uint32_t SPIx_Read()
{
 8000f68:	b580      	push	{r7, lr}
 8000f6a:	b082      	sub	sp, #8
 8000f6c:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef status = HAL_OK;
 8000f6e:	2300      	movs	r3, #0
 8000f70:	71fb      	strb	r3, [r7, #7]
  uint32_t readvalue;

  status = HAL_SPI_Receive(&hspi3, (uint8_t*) &readvalue, 4, 0x1000);
 8000f72:	4639      	mov	r1, r7
 8000f74:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000f78:	2204      	movs	r2, #4
 8000f7a:	4807      	ldr	r0, [pc, #28]	; (8000f98 <SPIx_Read+0x30>)
 8000f7c:	f005 fcae 	bl	80068dc <HAL_SPI_Receive>
 8000f80:	4603      	mov	r3, r0
 8000f82:	71fb      	strb	r3, [r7, #7]

  if(status != HAL_OK)
 8000f84:	79fb      	ldrb	r3, [r7, #7]
 8000f86:	2b00      	cmp	r3, #0
 8000f88:	d001      	beq.n	8000f8e <SPIx_Read+0x26>
  {
    SPIx_Error();
 8000f8a:	f7ff ffc5 	bl	8000f18 <SPIx_Error>
  }

  return readvalue;
 8000f8e:	683b      	ldr	r3, [r7, #0]
}
 8000f90:	4618      	mov	r0, r3
 8000f92:	3708      	adds	r7, #8
 8000f94:	46bd      	mov	sp, r7
 8000f96:	bd80      	pop	{r7, pc}
 8000f98:	20026d84 	.word	0x20026d84

08000f9c <LCD_IO_Init>:

__weak void LCD_IO_Init(void)
{
 8000f9c:	b580      	push	{r7, lr}
 8000f9e:	af00      	add	r7, sp, #0
   /* Set or Reset the control line */
    LCD_CS_LOW();
 8000fa0:	2200      	movs	r2, #0
 8000fa2:	2101      	movs	r1, #1
 8000fa4:	4805      	ldr	r0, [pc, #20]	; (8000fbc <LCD_IO_Init+0x20>)
 8000fa6:	f003 f8fd 	bl	80041a4 <HAL_GPIO_WritePin>
    LCD_CS_HIGH();
 8000faa:	2201      	movs	r2, #1
 8000fac:	2101      	movs	r1, #1
 8000fae:	4803      	ldr	r0, [pc, #12]	; (8000fbc <LCD_IO_Init+0x20>)
 8000fb0:	f003 f8f8 	bl	80041a4 <HAL_GPIO_WritePin>
    MX_SPI3_Init();
 8000fb4:	f000 fb58 	bl	8001668 <MX_SPI3_Init>
}
 8000fb8:	bf00      	nop
 8000fba:	bd80      	pop	{r7, pc}
 8000fbc:	40020c00 	.word	0x40020c00

08000fc0 <LCD_IO_WriteReg>:

__weak void     LCD_IO_WriteReg(uint8_t Reg){
 8000fc0:	b580      	push	{r7, lr}
 8000fc2:	b082      	sub	sp, #8
 8000fc4:	af00      	add	r7, sp, #0
 8000fc6:	4603      	mov	r3, r0
 8000fc8:	71fb      	strb	r3, [r7, #7]
	LCD_CS_LOW();
 8000fca:	2200      	movs	r2, #0
 8000fcc:	2101      	movs	r1, #1
 8000fce:	480b      	ldr	r0, [pc, #44]	; (8000ffc <LCD_IO_WriteReg+0x3c>)
 8000fd0:	f003 f8e8 	bl	80041a4 <HAL_GPIO_WritePin>
	LCD_WR_LOW();
 8000fd4:	2200      	movs	r2, #0
 8000fd6:	2120      	movs	r1, #32
 8000fd8:	4809      	ldr	r0, [pc, #36]	; (8001000 <LCD_IO_WriteReg+0x40>)
 8000fda:	f003 f8e3 	bl	80041a4 <HAL_GPIO_WritePin>
	SPIx_Write(Reg);	// Start send 8 bit
 8000fde:	79fb      	ldrb	r3, [r7, #7]
 8000fe0:	b29b      	uxth	r3, r3
 8000fe2:	4618      	mov	r0, r3
 8000fe4:	f7ff ffa4 	bl	8000f30 <SPIx_Write>
	LCD_CS_HIGH();
 8000fe8:	2201      	movs	r2, #1
 8000fea:	2101      	movs	r1, #1
 8000fec:	4803      	ldr	r0, [pc, #12]	; (8000ffc <LCD_IO_WriteReg+0x3c>)
 8000fee:	f003 f8d9 	bl	80041a4 <HAL_GPIO_WritePin>

}
 8000ff2:	bf00      	nop
 8000ff4:	3708      	adds	r7, #8
 8000ff6:	46bd      	mov	sp, r7
 8000ff8:	bd80      	pop	{r7, pc}
 8000ffa:	bf00      	nop
 8000ffc:	40020c00 	.word	0x40020c00
 8001000:	40020800 	.word	0x40020800

08001004 <LCD_IO_WriteData>:

__weak void     LCD_IO_WriteData(uint16_t RegValue){
 8001004:	b580      	push	{r7, lr}
 8001006:	b082      	sub	sp, #8
 8001008:	af00      	add	r7, sp, #0
 800100a:	4603      	mov	r3, r0
 800100c:	80fb      	strh	r3, [r7, #6]
	LCD_CS_LOW();
 800100e:	2200      	movs	r2, #0
 8001010:	2101      	movs	r1, #1
 8001012:	480a      	ldr	r0, [pc, #40]	; (800103c <LCD_IO_WriteData+0x38>)
 8001014:	f003 f8c6 	bl	80041a4 <HAL_GPIO_WritePin>
	LCD_WR_HIGH();
 8001018:	2201      	movs	r2, #1
 800101a:	2120      	movs	r1, #32
 800101c:	4808      	ldr	r0, [pc, #32]	; (8001040 <LCD_IO_WriteData+0x3c>)
 800101e:	f003 f8c1 	bl	80041a4 <HAL_GPIO_WritePin>
	SPIx_Write(RegValue);	// Start send 8 bit
 8001022:	88fb      	ldrh	r3, [r7, #6]
 8001024:	4618      	mov	r0, r3
 8001026:	f7ff ff83 	bl	8000f30 <SPIx_Write>
	LCD_CS_HIGH();
 800102a:	2201      	movs	r2, #1
 800102c:	2101      	movs	r1, #1
 800102e:	4803      	ldr	r0, [pc, #12]	; (800103c <LCD_IO_WriteData+0x38>)
 8001030:	f003 f8b8 	bl	80041a4 <HAL_GPIO_WritePin>
}
 8001034:	bf00      	nop
 8001036:	3708      	adds	r7, #8
 8001038:	46bd      	mov	sp, r7
 800103a:	bd80      	pop	{r7, pc}
 800103c:	40020c00 	.word	0x40020c00
 8001040:	40020800 	.word	0x40020800

08001044 <LCD_IO_Delay>:

__weak void LCD_IO_Delay(uint32_t Delay)
{
 8001044:	b580      	push	{r7, lr}
 8001046:	b082      	sub	sp, #8
 8001048:	af00      	add	r7, sp, #0
 800104a:	6078      	str	r0, [r7, #4]
  HAL_Delay(Delay);
 800104c:	6878      	ldr	r0, [r7, #4]
 800104e:	f002 f8e5 	bl	800321c <HAL_Delay>
}
 8001052:	bf00      	nop
 8001054:	3708      	adds	r7, #8
 8001056:	46bd      	mov	sp, r7
 8001058:	bd80      	pop	{r7, pc}
	...

0800105c <LCD_IO_ReadData>:


__weak uint16_t LCD_IO_ReadData(uint16_t RegValue)
{
 800105c:	b580      	push	{r7, lr}
 800105e:	b084      	sub	sp, #16
 8001060:	af00      	add	r7, sp, #0
 8001062:	4603      	mov	r3, r0
 8001064:	80fb      	strh	r3, [r7, #6]
	  uint32_t readvalue = 0;
 8001066:	2300      	movs	r3, #0
 8001068:	60fb      	str	r3, [r7, #12]
	  /* Select: Chip Select low */
	  LCD_CS_LOW();
 800106a:	2200      	movs	r2, #0
 800106c:	2101      	movs	r1, #1
 800106e:	480f      	ldr	r0, [pc, #60]	; (80010ac <LCD_IO_ReadData+0x50>)
 8001070:	f003 f898 	bl	80041a4 <HAL_GPIO_WritePin>

	  /* Reset WRX to send command */
	  LCD_WR_LOW();
 8001074:	2200      	movs	r2, #0
 8001076:	2120      	movs	r1, #32
 8001078:	480d      	ldr	r0, [pc, #52]	; (80010b0 <LCD_IO_ReadData+0x54>)
 800107a:	f003 f893 	bl	80041a4 <HAL_GPIO_WritePin>

	  SPIx_Write(RegValue);
 800107e:	88fb      	ldrh	r3, [r7, #6]
 8001080:	4618      	mov	r0, r3
 8001082:	f7ff ff55 	bl	8000f30 <SPIx_Write>

	  readvalue = SPIx_Read();
 8001086:	f7ff ff6f 	bl	8000f68 <SPIx_Read>
 800108a:	60f8      	str	r0, [r7, #12]

	  /* Set WRX to send data */
	  LCD_WR_HIGH();
 800108c:	2201      	movs	r2, #1
 800108e:	2120      	movs	r1, #32
 8001090:	4807      	ldr	r0, [pc, #28]	; (80010b0 <LCD_IO_ReadData+0x54>)
 8001092:	f003 f887 	bl	80041a4 <HAL_GPIO_WritePin>

	  /* Deselect: Chip Select high */
	  LCD_CS_HIGH();
 8001096:	2201      	movs	r2, #1
 8001098:	2101      	movs	r1, #1
 800109a:	4804      	ldr	r0, [pc, #16]	; (80010ac <LCD_IO_ReadData+0x50>)
 800109c:	f003 f882 	bl	80041a4 <HAL_GPIO_WritePin>

  return readvalue;
 80010a0:	68fb      	ldr	r3, [r7, #12]
 80010a2:	b29b      	uxth	r3, r3
}
 80010a4:	4618      	mov	r0, r3
 80010a6:	3710      	adds	r7, #16
 80010a8:	46bd      	mov	sp, r7
 80010aa:	bd80      	pop	{r7, pc}
 80010ac:	40020c00 	.word	0x40020c00
 80010b0:	40020800 	.word	0x40020800

080010b4 <HAL_UART_RxCpltCallback>:
//variables need to be declared at the beginning

UART_DATA Uart_data;

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 80010b4:	b580      	push	{r7, lr}
 80010b6:	b084      	sub	sp, #16
 80010b8:	af00      	add	r7, sp, #0
 80010ba:	6078      	str	r0, [r7, #4]
	if (huart->Instance == UART7)  //current UART
 80010bc:	687b      	ldr	r3, [r7, #4]
 80010be:	681b      	ldr	r3, [r3, #0]
 80010c0:	4a1e      	ldr	r2, [pc, #120]	; (800113c <HAL_UART_RxCpltCallback+0x88>)
 80010c2:	4293      	cmp	r3, r2
 80010c4:	d136      	bne.n	8001134 <HAL_UART_RxCpltCallback+0x80>
	{
		uint8_t i;
		if (Uart_data.Rx_indx == 0)  //clear Rx_Buffer before receiving new data
 80010c6:	4b1e      	ldr	r3, [pc, #120]	; (8001140 <HAL_UART_RxCpltCallback+0x8c>)
 80010c8:	781b      	ldrb	r3, [r3, #0]
 80010ca:	2b00      	cmp	r3, #0
 80010cc:	d10d      	bne.n	80010ea <HAL_UART_RxCpltCallback+0x36>
		{
			for (i=0 ; i<100 ; i++) {
 80010ce:	2300      	movs	r3, #0
 80010d0:	73fb      	strb	r3, [r7, #15]
 80010d2:	e007      	b.n	80010e4 <HAL_UART_RxCpltCallback+0x30>
				Uart_data.Rx_Buffer[i]=0;
 80010d4:	7bfb      	ldrb	r3, [r7, #15]
 80010d6:	4a1a      	ldr	r2, [pc, #104]	; (8001140 <HAL_UART_RxCpltCallback+0x8c>)
 80010d8:	4413      	add	r3, r2
 80010da:	2200      	movs	r2, #0
 80010dc:	70da      	strb	r2, [r3, #3]
			for (i=0 ; i<100 ; i++) {
 80010de:	7bfb      	ldrb	r3, [r7, #15]
 80010e0:	3301      	adds	r3, #1
 80010e2:	73fb      	strb	r3, [r7, #15]
 80010e4:	7bfb      	ldrb	r3, [r7, #15]
 80010e6:	2b63      	cmp	r3, #99	; 0x63
 80010e8:	d9f4      	bls.n	80010d4 <HAL_UART_RxCpltCallback+0x20>
			}
		}

		if ((Uart_data.Rx_data[0]!=10)&&(Uart_data.Rx_data[0]!=13)) //if received data different from ascii 13 (enter)
 80010ea:	4b15      	ldr	r3, [pc, #84]	; (8001140 <HAL_UART_RxCpltCallback+0x8c>)
 80010ec:	785b      	ldrb	r3, [r3, #1]
 80010ee:	2b0a      	cmp	r3, #10
 80010f0:	d012      	beq.n	8001118 <HAL_UART_RxCpltCallback+0x64>
 80010f2:	4b13      	ldr	r3, [pc, #76]	; (8001140 <HAL_UART_RxCpltCallback+0x8c>)
 80010f4:	785b      	ldrb	r3, [r3, #1]
 80010f6:	2b0d      	cmp	r3, #13
 80010f8:	d00e      	beq.n	8001118 <HAL_UART_RxCpltCallback+0x64>
		{
			Uart_data.Rx_Buffer[Uart_data.Rx_indx]=Uart_data.Rx_data[0];    //add data to Rx_Buffer
 80010fa:	4b11      	ldr	r3, [pc, #68]	; (8001140 <HAL_UART_RxCpltCallback+0x8c>)
 80010fc:	781b      	ldrb	r3, [r3, #0]
 80010fe:	4619      	mov	r1, r3
 8001100:	4b0f      	ldr	r3, [pc, #60]	; (8001140 <HAL_UART_RxCpltCallback+0x8c>)
 8001102:	785a      	ldrb	r2, [r3, #1]
 8001104:	4b0e      	ldr	r3, [pc, #56]	; (8001140 <HAL_UART_RxCpltCallback+0x8c>)
 8001106:	440b      	add	r3, r1
 8001108:	70da      	strb	r2, [r3, #3]
			Uart_data.Rx_indx++;
 800110a:	4b0d      	ldr	r3, [pc, #52]	; (8001140 <HAL_UART_RxCpltCallback+0x8c>)
 800110c:	781b      	ldrb	r3, [r3, #0]
 800110e:	3301      	adds	r3, #1
 8001110:	b2da      	uxtb	r2, r3
 8001112:	4b0b      	ldr	r3, [pc, #44]	; (8001140 <HAL_UART_RxCpltCallback+0x8c>)
 8001114:	701a      	strb	r2, [r3, #0]
 8001116:	e008      	b.n	800112a <HAL_UART_RxCpltCallback+0x76>
		}
		else            //if received data = 13
		{
			Uart_data.Rx_indx=0;
 8001118:	4b09      	ldr	r3, [pc, #36]	; (8001140 <HAL_UART_RxCpltCallback+0x8c>)
 800111a:	2200      	movs	r2, #0
 800111c:	701a      	strb	r2, [r3, #0]
			Uart_data.Transfer_cplt=true;//transfer complete, data is ready to read
 800111e:	4b08      	ldr	r3, [pc, #32]	; (8001140 <HAL_UART_RxCpltCallback+0x8c>)
 8001120:	2201      	movs	r2, #1
 8001122:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
			UART_Task();
 8001126:	f001 fb65 	bl	80027f4 <UART_Task>
		}
		HAL_UART_Receive_IT(&huart7, Uart_data.Rx_data, 1);   //activate UART receive interrupt every time
 800112a:	2201      	movs	r2, #1
 800112c:	4905      	ldr	r1, [pc, #20]	; (8001144 <HAL_UART_RxCpltCallback+0x90>)
 800112e:	4806      	ldr	r0, [pc, #24]	; (8001148 <HAL_UART_RxCpltCallback+0x94>)
 8001130:	f006 fe38 	bl	8007da4 <HAL_UART_Receive_IT>
	}
}
 8001134:	bf00      	nop
 8001136:	3710      	adds	r7, #16
 8001138:	46bd      	mov	sp, r7
 800113a:	bd80      	pop	{r7, pc}
 800113c:	40007800 	.word	0x40007800
 8001140:	20026e98 	.word	0x20026e98
 8001144:	20026e99 	.word	0x20026e99
 8001148:	20026c68 	.word	0x20026c68

0800114c <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback (uint16_t GPIO_Pin){
 800114c:	b580      	push	{r7, lr}
 800114e:	b082      	sub	sp, #8
 8001150:	af00      	add	r7, sp, #0
 8001152:	4603      	mov	r3, r0
 8001154:	80fb      	strh	r3, [r7, #6]
	//Check open Lampe
	if ( GPIO_Pin == CMD_ON_OFF_Pin){
 8001156:	88fb      	ldrh	r3, [r7, #6]
 8001158:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800115c:	d116      	bne.n	800118c <HAL_GPIO_EXTI_Callback+0x40>
		if(HAL_GPIO_ReadPin(CMD_ON_OFF_GPIO_Port, CMD_ON_OFF_Pin) == GPIO_PIN_RESET){
 800115e:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8001162:	4813      	ldr	r0, [pc, #76]	; (80011b0 <HAL_GPIO_EXTI_Callback+0x64>)
 8001164:	f003 f806 	bl	8004174 <HAL_GPIO_ReadPin>
 8001168:	4603      	mov	r3, r0
 800116a:	2b00      	cmp	r3, #0
 800116c:	d107      	bne.n	800117e <HAL_GPIO_EXTI_Callback+0x32>
			Lexi_Set_State_OFF();
 800116e:	f7ff fe57 	bl	8000e20 <Lexi_Set_State_OFF>
			//HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
			//Turn off bluetooth
			HAL_GPIO_WritePin(CMD_ALIM_BLE_GPIO_Port, CMD_ALIM_BLE_Pin , GPIO_PIN_SET);
 8001172:	2201      	movs	r2, #1
 8001174:	2140      	movs	r1, #64	; 0x40
 8001176:	480e      	ldr	r0, [pc, #56]	; (80011b0 <HAL_GPIO_EXTI_Callback+0x64>)
 8001178:	f003 f814 	bl	80041a4 <HAL_GPIO_WritePin>
 800117c:	e006      	b.n	800118c <HAL_GPIO_EXTI_Callback+0x40>
		}
		else
		{
			Lexi_Set_State_ON();
 800117e:	f7ff fe5d 	bl	8000e3c <Lexi_Set_State_ON>
			HAL_GPIO_WritePin(CMD_ALIM_BLE_GPIO_Port, CMD_ALIM_BLE_Pin ,GPIO_PIN_RESET);
 8001182:	2200      	movs	r2, #0
 8001184:	2140      	movs	r1, #64	; 0x40
 8001186:	480a      	ldr	r0, [pc, #40]	; (80011b0 <HAL_GPIO_EXTI_Callback+0x64>)
 8001188:	f003 f80c 	bl	80041a4 <HAL_GPIO_WritePin>
			//Turn on bluetooth
		}
	}
	//Check Charge Current
	if ( GPIO_Pin == CHRG_OK_Pin){
 800118c:	88fb      	ldrh	r3, [r7, #6]
 800118e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8001192:	d109      	bne.n	80011a8 <HAL_GPIO_EXTI_Callback+0x5c>
		if (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13) == GPIO_PIN_SET){
 8001194:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001198:	4806      	ldr	r0, [pc, #24]	; (80011b4 <HAL_GPIO_EXTI_Callback+0x68>)
 800119a:	f002 ffeb 	bl	8004174 <HAL_GPIO_ReadPin>
 800119e:	4603      	mov	r3, r0
 80011a0:	2b01      	cmp	r3, #1
 80011a2:	d101      	bne.n	80011a8 <HAL_GPIO_EXTI_Callback+0x5c>
			BQ25713_Default_Charge();
 80011a4:	f7ff fa90 	bl	80006c8 <BQ25713_Default_Charge>
		}
	}
}
 80011a8:	bf00      	nop
 80011aa:	3708      	adds	r7, #8
 80011ac:	46bd      	mov	sp, r7
 80011ae:	bd80      	pop	{r7, pc}
 80011b0:	40020c00 	.word	0x40020c00
 80011b4:	40020800 	.word	0x40020800

080011b8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80011b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011ba:	b09f      	sub	sp, #124	; 0x7c
 80011bc:	af1c      	add	r7, sp, #112	; 0x70
  

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80011be:	f001 ffbb 	bl	8003138 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80011c2:	f000 f893 	bl	80012ec <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80011c6:	f000 fc33 	bl	8001a30 <MX_GPIO_Init>
  MX_DAC_Init();
 80011ca:	f000 f92b 	bl	8001424 <MX_DAC_Init>
  //MX_LTDC_Init();
  MX_CRC_Init();
 80011ce:	f000 f915 	bl	80013fc <MX_CRC_Init>
  MX_SPI3_Init();
 80011d2:	f000 fa49 	bl	8001668 <MX_SPI3_Init>
  MX_UART4_Init();
 80011d6:	f000 fbd7 	bl	8001988 <MX_UART4_Init>
  MX_TIM1_Init();
 80011da:	f000 fa7d 	bl	80016d8 <MX_TIM1_Init>
  MX_DMA2D_Init();
 80011de:	f000 f94b 	bl	8001478 <MX_DMA2D_Init>
  MX_TIM2_Init();
 80011e2:	f000 fac9 	bl	8001778 <MX_TIM2_Init>
  MX_TIM3_Init();
 80011e6:	f000 fb1f 	bl	8001828 <MX_TIM3_Init>
  MX_I2C1_Init();
 80011ea:	f000 f977 	bl	80014dc <MX_I2C1_Init>
  MX_TIM4_Init();
 80011ee:	f000 fb73 	bl	80018d8 <MX_TIM4_Init>
  MX_UART7_Init();
 80011f2:	f000 fbf3 	bl	80019dc <MX_UART7_Init>
  MX_TouchGFX_Init();
 80011f6:	f007 fc27 	bl	8008a48 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
  //HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13,GPIO_PIN_SET);
  //HAL_Delay(1000);
	Lexi_Init_Data();								//Init Data LexiLight
 80011fa:	f7ff fc55 	bl	8000aa8 <Lexi_Init_Data>
	HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);		//Start PWM TIM2 Channel 1 -- LED LAMPE
 80011fe:	2100      	movs	r1, #0
 8001200:	4832      	ldr	r0, [pc, #200]	; (80012cc <main+0x114>)
 8001202:	f005 ffa1 	bl	8007148 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);		//Start PWM TIM3 Channel 3 -- LED DRIVER
 8001206:	2108      	movs	r1, #8
 8001208:	4831      	ldr	r0, [pc, #196]	; (80012d0 <main+0x118>)
 800120a:	f005 ff9d 	bl	8007148 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);		//Start PWM TIM4 Channel 1 -- LED BACKLIGHT
 800120e:	210c      	movs	r1, #12
 8001210:	4830      	ldr	r0, [pc, #192]	; (80012d4 <main+0x11c>)
 8001212:	f005 ff99 	bl	8007148 <HAL_TIM_PWM_Start>
	HAL_TIM_Base_Start(&htim1);						//Start TIM1
 8001216:	4830      	ldr	r0, [pc, #192]	; (80012d8 <main+0x120>)
 8001218:	f005 ff47 	bl	80070aa <HAL_TIM_Base_Start>

	__HAL_TIM_SET_COMPARE(&htim2 , TIM_CHANNEL_1,0);	//Set Duty = 0
 800121c:	4b2b      	ldr	r3, [pc, #172]	; (80012cc <main+0x114>)
 800121e:	681b      	ldr	r3, [r3, #0]
 8001220:	2200      	movs	r2, #0
 8001222:	635a      	str	r2, [r3, #52]	; 0x34
	__HAL_TIM_SET_COMPARE(&htim3 , TIM_CHANNEL_3,0);	//Set Duty = 0
 8001224:	4b2a      	ldr	r3, [pc, #168]	; (80012d0 <main+0x118>)
 8001226:	681b      	ldr	r3, [r3, #0]
 8001228:	2200      	movs	r2, #0
 800122a:	63da      	str	r2, [r3, #60]	; 0x3c
	__HAL_TIM_SET_COMPARE(&htim4 , TIM_CHANNEL_4,100);	//Set Duty = 0
 800122c:	4b29      	ldr	r3, [pc, #164]	; (80012d4 <main+0x11c>)
 800122e:	681b      	ldr	r3, [r3, #0]
 8001230:	2264      	movs	r2, #100	; 0x64
 8001232:	641a      	str	r2, [r3, #64]	; 0x40
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_1, GPIO_PIN_RESET);
 8001234:	2200      	movs	r2, #0
 8001236:	2102      	movs	r1, #2
 8001238:	4828      	ldr	r0, [pc, #160]	; (80012dc <main+0x124>)
 800123a:	f002 ffb3 	bl	80041a4 <HAL_GPIO_WritePin>

	HAL_UART_Receive_IT(&huart7, Uart_data.Rx_data, 1);
 800123e:	2201      	movs	r2, #1
 8001240:	4927      	ldr	r1, [pc, #156]	; (80012e0 <main+0x128>)
 8001242:	4828      	ldr	r0, [pc, #160]	; (80012e4 <main+0x12c>)
 8001244:	f006 fdae 	bl	8007da4 <HAL_UART_Receive_IT>
	UART_Init();
 8001248:	f001 fac0 	bl	80027cc <UART_Init>
	BQ25713_Init( hi2c1);
 800124c:	4c26      	ldr	r4, [pc, #152]	; (80012e8 <main+0x130>)
 800124e:	4668      	mov	r0, sp
 8001250:	f104 0310 	add.w	r3, r4, #16
 8001254:	2244      	movs	r2, #68	; 0x44
 8001256:	4619      	mov	r1, r3
 8001258:	f01a f888 	bl	801b36c <memcpy>
 800125c:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8001260:	f7ff f99e 	bl	80005a0 <BQ25713_Init>
	HAL_GPIO_WritePin(CMD_ALIM_LCD_GPIO_Port , CMD_ALIM_LCD_Pin , GPIO_PIN_SET);
 8001264:	2201      	movs	r2, #1
 8001266:	2102      	movs	r1, #2
 8001268:	481c      	ldr	r0, [pc, #112]	; (80012dc <main+0x124>)
 800126a:	f002 ff9b 	bl	80041a4 <HAL_GPIO_WritePin>
	MX_LTDC_Init();
 800126e:	f000 f975 	bl	800155c <MX_LTDC_Init>
	/*
	data[0] = 0x00;
	data[1] = 0xff >> 8;
	data[2] = 0xff;
	*/
	uint8_t count =0;
 8001272:	2300      	movs	r3, #0
 8001274:	71fb      	strb	r3, [r7, #7]
  while (1)
  {
	  Lexi_Task (htim2, htim3);
 8001276:	4e15      	ldr	r6, [pc, #84]	; (80012cc <main+0x114>)
 8001278:	4b15      	ldr	r3, [pc, #84]	; (80012d0 <main+0x118>)
 800127a:	ac0c      	add	r4, sp, #48	; 0x30
 800127c:	461d      	mov	r5, r3
 800127e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001280:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001282:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001284:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001286:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001288:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800128a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800128e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001292:	466d      	mov	r5, sp
 8001294:	f106 0410 	add.w	r4, r6, #16
 8001298:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800129a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800129c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800129e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80012a0:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80012a4:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 80012a8:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 80012ac:	f7ff fc2e 	bl	8000b0c <Lexi_Task>
	  count++;
 80012b0:	79fb      	ldrb	r3, [r7, #7]
 80012b2:	3301      	adds	r3, #1
 80012b4:	71fb      	strb	r3, [r7, #7]
	  if (count > 15){
 80012b6:	79fb      	ldrb	r3, [r7, #7]
 80012b8:	2b0f      	cmp	r3, #15
 80012ba:	d903      	bls.n	80012c4 <main+0x10c>
		  BQ25713_Task();
 80012bc:	f7ff fa4a 	bl	8000754 <BQ25713_Task>
		  count = 0;
 80012c0:	2300      	movs	r3, #0
 80012c2:	71fb      	strb	r3, [r7, #7]
	  }
	  HAL_Delay(100);
 80012c4:	2064      	movs	r0, #100	; 0x64
 80012c6:	f001 ffa9 	bl	800321c <HAL_Delay>
	  Lexi_Task (htim2, htim3);
 80012ca:	e7d4      	b.n	8001276 <main+0xbe>
 80012cc:	20026fc8 	.word	0x20026fc8
 80012d0:	20026d44 	.word	0x20026d44
 80012d4:	20026ca8 	.word	0x20026ca8
 80012d8:	20026f08 	.word	0x20026f08
 80012dc:	40020c00 	.word	0x40020c00
 80012e0:	20026e99 	.word	0x20026e99
 80012e4:	20026c68 	.word	0x20026c68
 80012e8:	20026ce8 	.word	0x20026ce8

080012ec <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80012ec:	b580      	push	{r7, lr}
 80012ee:	b0a0      	sub	sp, #128	; 0x80
 80012f0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80012f2:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80012f6:	2230      	movs	r2, #48	; 0x30
 80012f8:	2100      	movs	r1, #0
 80012fa:	4618      	mov	r0, r3
 80012fc:	f01a f841 	bl	801b382 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001300:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001304:	2200      	movs	r2, #0
 8001306:	601a      	str	r2, [r3, #0]
 8001308:	605a      	str	r2, [r3, #4]
 800130a:	609a      	str	r2, [r3, #8]
 800130c:	60da      	str	r2, [r3, #12]
 800130e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001310:	f107 030c 	add.w	r3, r7, #12
 8001314:	2230      	movs	r2, #48	; 0x30
 8001316:	2100      	movs	r1, #0
 8001318:	4618      	mov	r0, r3
 800131a:	f01a f832 	bl	801b382 <memset>

  /** Macro to configure the PLL multiplication factor 
  */
  __HAL_RCC_PLL_PLLM_CONFIG(16);
 800131e:	4b35      	ldr	r3, [pc, #212]	; (80013f4 <SystemClock_Config+0x108>)
 8001320:	685b      	ldr	r3, [r3, #4]
 8001322:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8001326:	4a33      	ldr	r2, [pc, #204]	; (80013f4 <SystemClock_Config+0x108>)
 8001328:	f043 0310 	orr.w	r3, r3, #16
 800132c:	6053      	str	r3, [r2, #4]
  /** Macro to configure the PLL clock source 
  */
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSI);
 800132e:	4b31      	ldr	r3, [pc, #196]	; (80013f4 <SystemClock_Config+0x108>)
 8001330:	685b      	ldr	r3, [r3, #4]
 8001332:	4a30      	ldr	r2, [pc, #192]	; (80013f4 <SystemClock_Config+0x108>)
 8001334:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8001338:	6053      	str	r3, [r2, #4]
  /** Configure the main internal regulator output voltage 
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 800133a:	2300      	movs	r3, #0
 800133c:	60bb      	str	r3, [r7, #8]
 800133e:	4b2d      	ldr	r3, [pc, #180]	; (80013f4 <SystemClock_Config+0x108>)
 8001340:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001342:	4a2c      	ldr	r2, [pc, #176]	; (80013f4 <SystemClock_Config+0x108>)
 8001344:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001348:	6413      	str	r3, [r2, #64]	; 0x40
 800134a:	4b2a      	ldr	r3, [pc, #168]	; (80013f4 <SystemClock_Config+0x108>)
 800134c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800134e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001352:	60bb      	str	r3, [r7, #8]
 8001354:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001356:	2300      	movs	r3, #0
 8001358:	607b      	str	r3, [r7, #4]
 800135a:	4b27      	ldr	r3, [pc, #156]	; (80013f8 <SystemClock_Config+0x10c>)
 800135c:	681b      	ldr	r3, [r3, #0]
 800135e:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8001362:	4a25      	ldr	r2, [pc, #148]	; (80013f8 <SystemClock_Config+0x10c>)
 8001364:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001368:	6013      	str	r3, [r2, #0]
 800136a:	4b23      	ldr	r3, [pc, #140]	; (80013f8 <SystemClock_Config+0x10c>)
 800136c:	681b      	ldr	r3, [r3, #0]
 800136e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001372:	607b      	str	r3, [r7, #4]
 8001374:	687b      	ldr	r3, [r7, #4]
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001376:	2302      	movs	r3, #2
 8001378:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800137a:	2301      	movs	r3, #1
 800137c:	65fb      	str	r3, [r7, #92]	; 0x5c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800137e:	2310      	movs	r3, #16
 8001380:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8001382:	2300      	movs	r3, #0
 8001384:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001386:	2300      	movs	r3, #0
 8001388:	66fb      	str	r3, [r7, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800138a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800138e:	4618      	mov	r0, r3
 8001390:	f004 faea 	bl	8005968 <HAL_RCC_OscConfig>
 8001394:	4603      	mov	r3, r0
 8001396:	2b00      	cmp	r3, #0
 8001398:	d001      	beq.n	800139e <SystemClock_Config+0xb2>
  {
    Error_Handler();
 800139a:	f000 fcbb 	bl	8001d14 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800139e:	230f      	movs	r3, #15
 80013a0:	63fb      	str	r3, [r7, #60]	; 0x3c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80013a2:	2300      	movs	r3, #0
 80013a4:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80013a6:	2300      	movs	r3, #0
 80013a8:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80013aa:	2300      	movs	r3, #0
 80013ac:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80013ae:	2300      	movs	r3, #0
 80013b0:	64fb      	str	r3, [r7, #76]	; 0x4c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80013b2:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80013b6:	2100      	movs	r1, #0
 80013b8:	4618      	mov	r0, r3
 80013ba:	f004 fd45 	bl	8005e48 <HAL_RCC_ClockConfig>
 80013be:	4603      	mov	r3, r0
 80013c0:	2b00      	cmp	r3, #0
 80013c2:	d001      	beq.n	80013c8 <SystemClock_Config+0xdc>
  {
    Error_Handler();
 80013c4:	f000 fca6 	bl	8001d14 <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80013c8:	2308      	movs	r3, #8
 80013ca:	60fb      	str	r3, [r7, #12]
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 100;
 80013cc:	2364      	movs	r3, #100	; 0x64
 80013ce:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
 80013d0:	2302      	movs	r3, #2
 80013d2:	627b      	str	r3, [r7, #36]	; 0x24
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 80013d4:	2300      	movs	r3, #0
 80013d6:	633b      	str	r3, [r7, #48]	; 0x30
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80013d8:	f107 030c 	add.w	r3, r7, #12
 80013dc:	4618      	mov	r0, r3
 80013de:	f004 feff 	bl	80061e0 <HAL_RCCEx_PeriphCLKConfig>
 80013e2:	4603      	mov	r3, r0
 80013e4:	2b00      	cmp	r3, #0
 80013e6:	d001      	beq.n	80013ec <SystemClock_Config+0x100>
  {
    Error_Handler();
 80013e8:	f000 fc94 	bl	8001d14 <Error_Handler>
  }
}
 80013ec:	bf00      	nop
 80013ee:	3780      	adds	r7, #128	; 0x80
 80013f0:	46bd      	mov	sp, r7
 80013f2:	bd80      	pop	{r7, pc}
 80013f4:	40023800 	.word	0x40023800
 80013f8:	40007000 	.word	0x40007000

080013fc <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 80013fc:	b580      	push	{r7, lr}
 80013fe:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8001400:	4b06      	ldr	r3, [pc, #24]	; (800141c <MX_CRC_Init+0x20>)
 8001402:	4a07      	ldr	r2, [pc, #28]	; (8001420 <MX_CRC_Init+0x24>)
 8001404:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001406:	4805      	ldr	r0, [pc, #20]	; (800141c <MX_CRC_Init+0x20>)
 8001408:	f002 f86b 	bl	80034e2 <HAL_CRC_Init>
 800140c:	4603      	mov	r3, r0
 800140e:	2b00      	cmp	r3, #0
 8001410:	d001      	beq.n	8001416 <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 8001412:	f000 fc7f 	bl	8001d14 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8001416:	bf00      	nop
 8001418:	bd80      	pop	{r7, pc}
 800141a:	bf00      	nop
 800141c:	20026d3c 	.word	0x20026d3c
 8001420:	40023000 	.word	0x40023000

08001424 <MX_DAC_Init>:
  * @brief DAC Initialization Function
  * @param None
  * @retval None
  */
static void MX_DAC_Init(void)
{
 8001424:	b580      	push	{r7, lr}
 8001426:	b082      	sub	sp, #8
 8001428:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN DAC_Init 0 */

  /* USER CODE END DAC_Init 0 */

  DAC_ChannelConfTypeDef sConfig = {0};
 800142a:	463b      	mov	r3, r7
 800142c:	2200      	movs	r2, #0
 800142e:	601a      	str	r2, [r3, #0]
 8001430:	605a      	str	r2, [r3, #4]
  /* USER CODE BEGIN DAC_Init 1 */

  /* USER CODE END DAC_Init 1 */
  /** DAC Initialization 
  */
  hdac.Instance = DAC;
 8001432:	4b0f      	ldr	r3, [pc, #60]	; (8001470 <MX_DAC_Init+0x4c>)
 8001434:	4a0f      	ldr	r2, [pc, #60]	; (8001474 <MX_DAC_Init+0x50>)
 8001436:	601a      	str	r2, [r3, #0]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001438:	480d      	ldr	r0, [pc, #52]	; (8001470 <MX_DAC_Init+0x4c>)
 800143a:	f002 f86e 	bl	800351a <HAL_DAC_Init>
 800143e:	4603      	mov	r3, r0
 8001440:	2b00      	cmp	r3, #0
 8001442:	d001      	beq.n	8001448 <MX_DAC_Init+0x24>
  {
    Error_Handler();
 8001444:	f000 fc66 	bl	8001d14 <Error_Handler>
  }
  /** DAC channel OUT2 config 
  */
  sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 8001448:	2300      	movs	r3, #0
 800144a:	603b      	str	r3, [r7, #0]
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 800144c:	2300      	movs	r3, #0
 800144e:	607b      	str	r3, [r7, #4]
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001450:	463b      	mov	r3, r7
 8001452:	2210      	movs	r2, #16
 8001454:	4619      	mov	r1, r3
 8001456:	4806      	ldr	r0, [pc, #24]	; (8001470 <MX_DAC_Init+0x4c>)
 8001458:	f002 f881 	bl	800355e <HAL_DAC_ConfigChannel>
 800145c:	4603      	mov	r3, r0
 800145e:	2b00      	cmp	r3, #0
 8001460:	d001      	beq.n	8001466 <MX_DAC_Init+0x42>
  {
    Error_Handler();
 8001462:	f000 fc57 	bl	8001d14 <Error_Handler>
  }
  /* USER CODE BEGIN DAC_Init 2 */

  /* USER CODE END DAC_Init 2 */

}
 8001466:	bf00      	nop
 8001468:	3708      	adds	r7, #8
 800146a:	46bd      	mov	sp, r7
 800146c:	bd80      	pop	{r7, pc}
 800146e:	bf00      	nop
 8001470:	20026e84 	.word	0x20026e84
 8001474:	40007400 	.word	0x40007400

08001478 <MX_DMA2D_Init>:
  * @brief DMA2D Initialization Function
  * @param None
  * @retval None
  */
static void MX_DMA2D_Init(void)
{
 8001478:	b580      	push	{r7, lr}
 800147a:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 800147c:	4b15      	ldr	r3, [pc, #84]	; (80014d4 <MX_DMA2D_Init+0x5c>)
 800147e:	4a16      	ldr	r2, [pc, #88]	; (80014d8 <MX_DMA2D_Init+0x60>)
 8001480:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 8001482:	4b14      	ldr	r3, [pc, #80]	; (80014d4 <MX_DMA2D_Init+0x5c>)
 8001484:	2200      	movs	r2, #0
 8001486:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 8001488:	4b12      	ldr	r3, [pc, #72]	; (80014d4 <MX_DMA2D_Init+0x5c>)
 800148a:	2202      	movs	r2, #2
 800148c:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 800148e:	4b11      	ldr	r3, [pc, #68]	; (80014d4 <MX_DMA2D_Init+0x5c>)
 8001490:	2200      	movs	r2, #0
 8001492:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 8001494:	4b0f      	ldr	r3, [pc, #60]	; (80014d4 <MX_DMA2D_Init+0x5c>)
 8001496:	2200      	movs	r2, #0
 8001498:	629a      	str	r2, [r3, #40]	; 0x28
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800149a:	4b0e      	ldr	r3, [pc, #56]	; (80014d4 <MX_DMA2D_Init+0x5c>)
 800149c:	2202      	movs	r2, #2
 800149e:	62da      	str	r2, [r3, #44]	; 0x2c
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80014a0:	4b0c      	ldr	r3, [pc, #48]	; (80014d4 <MX_DMA2D_Init+0x5c>)
 80014a2:	2200      	movs	r2, #0
 80014a4:	631a      	str	r2, [r3, #48]	; 0x30
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80014a6:	4b0b      	ldr	r3, [pc, #44]	; (80014d4 <MX_DMA2D_Init+0x5c>)
 80014a8:	2200      	movs	r2, #0
 80014aa:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80014ac:	4809      	ldr	r0, [pc, #36]	; (80014d4 <MX_DMA2D_Init+0x5c>)
 80014ae:	f002 f8c5 	bl	800363c <HAL_DMA2D_Init>
 80014b2:	4603      	mov	r3, r0
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	d001      	beq.n	80014bc <MX_DMA2D_Init+0x44>
  {
    Error_Handler();
 80014b8:	f000 fc2c 	bl	8001d14 <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80014bc:	2101      	movs	r1, #1
 80014be:	4805      	ldr	r0, [pc, #20]	; (80014d4 <MX_DMA2D_Init+0x5c>)
 80014c0:	f002 fa76 	bl	80039b0 <HAL_DMA2D_ConfigLayer>
 80014c4:	4603      	mov	r3, r0
 80014c6:	2b00      	cmp	r3, #0
 80014c8:	d001      	beq.n	80014ce <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 80014ca:	f000 fc23 	bl	8001d14 <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 80014ce:	bf00      	nop
 80014d0:	bd80      	pop	{r7, pc}
 80014d2:	bf00      	nop
 80014d4:	20026f88 	.word	0x20026f88
 80014d8:	4002b000 	.word	0x4002b000

080014dc <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 80014dc:	b580      	push	{r7, lr}
 80014de:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80014e0:	4b1b      	ldr	r3, [pc, #108]	; (8001550 <MX_I2C1_Init+0x74>)
 80014e2:	4a1c      	ldr	r2, [pc, #112]	; (8001554 <MX_I2C1_Init+0x78>)
 80014e4:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 80014e6:	4b1a      	ldr	r3, [pc, #104]	; (8001550 <MX_I2C1_Init+0x74>)
 80014e8:	4a1b      	ldr	r2, [pc, #108]	; (8001558 <MX_I2C1_Init+0x7c>)
 80014ea:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80014ec:	4b18      	ldr	r3, [pc, #96]	; (8001550 <MX_I2C1_Init+0x74>)
 80014ee:	2200      	movs	r2, #0
 80014f0:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 80014f2:	4b17      	ldr	r3, [pc, #92]	; (8001550 <MX_I2C1_Init+0x74>)
 80014f4:	2200      	movs	r2, #0
 80014f6:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80014f8:	4b15      	ldr	r3, [pc, #84]	; (8001550 <MX_I2C1_Init+0x74>)
 80014fa:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80014fe:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001500:	4b13      	ldr	r3, [pc, #76]	; (8001550 <MX_I2C1_Init+0x74>)
 8001502:	2200      	movs	r2, #0
 8001504:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8001506:	4b12      	ldr	r3, [pc, #72]	; (8001550 <MX_I2C1_Init+0x74>)
 8001508:	2200      	movs	r2, #0
 800150a:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800150c:	4b10      	ldr	r3, [pc, #64]	; (8001550 <MX_I2C1_Init+0x74>)
 800150e:	2200      	movs	r2, #0
 8001510:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001512:	4b0f      	ldr	r3, [pc, #60]	; (8001550 <MX_I2C1_Init+0x74>)
 8001514:	2200      	movs	r2, #0
 8001516:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001518:	480d      	ldr	r0, [pc, #52]	; (8001550 <MX_I2C1_Init+0x74>)
 800151a:	f002 fe75 	bl	8004208 <HAL_I2C_Init>
 800151e:	4603      	mov	r3, r0
 8001520:	2b00      	cmp	r3, #0
 8001522:	d001      	beq.n	8001528 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8001524:	f000 fbf6 	bl	8001d14 <Error_Handler>
  }
  /** Configure Analogue filter 
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001528:	2100      	movs	r1, #0
 800152a:	4809      	ldr	r0, [pc, #36]	; (8001550 <MX_I2C1_Init+0x74>)
 800152c:	f003 fdf3 	bl	8005116 <HAL_I2CEx_ConfigAnalogFilter>
 8001530:	4603      	mov	r3, r0
 8001532:	2b00      	cmp	r3, #0
 8001534:	d001      	beq.n	800153a <MX_I2C1_Init+0x5e>
  {
    Error_Handler();
 8001536:	f000 fbed 	bl	8001d14 <Error_Handler>
  }
  /** Configure Digital filter 
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 800153a:	2100      	movs	r1, #0
 800153c:	4804      	ldr	r0, [pc, #16]	; (8001550 <MX_I2C1_Init+0x74>)
 800153e:	f003 fe26 	bl	800518e <HAL_I2CEx_ConfigDigitalFilter>
 8001542:	4603      	mov	r3, r0
 8001544:	2b00      	cmp	r3, #0
 8001546:	d001      	beq.n	800154c <MX_I2C1_Init+0x70>
  {
    Error_Handler();
 8001548:	f000 fbe4 	bl	8001d14 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 800154c:	bf00      	nop
 800154e:	bd80      	pop	{r7, pc}
 8001550:	20026ce8 	.word	0x20026ce8
 8001554:	40005400 	.word	0x40005400
 8001558:	000186a0 	.word	0x000186a0

0800155c <MX_LTDC_Init>:
  * @brief LTDC Initialization Function
  * @param None
  * @retval None
  */
static void MX_LTDC_Init(void)
{
 800155c:	b580      	push	{r7, lr}
 800155e:	b08e      	sub	sp, #56	; 0x38
 8001560:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */

  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001562:	1d3b      	adds	r3, r7, #4
 8001564:	2234      	movs	r2, #52	; 0x34
 8001566:	2100      	movs	r1, #0
 8001568:	4618      	mov	r0, r3
 800156a:	f019 ff0a 	bl	801b382 <memset>

  /* USER CODE BEGIN LTDC_Init 1 */
  ST7789H2_Init();
 800156e:	f001 fcee 	bl	8002f4e <ST7789H2_Init>

 /* De-Initialize LTDC */
  HAL_LTDC_DeInit(&hltdc);
 8001572:	483b      	ldr	r0, [pc, #236]	; (8001660 <MX_LTDC_Init+0x104>)
 8001574:	f003 ff1a 	bl	80053ac <HAL_LTDC_DeInit>
  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 8001578:	4b39      	ldr	r3, [pc, #228]	; (8001660 <MX_LTDC_Init+0x104>)
 800157a:	4a3a      	ldr	r2, [pc, #232]	; (8001664 <MX_LTDC_Init+0x108>)
 800157c:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800157e:	4b38      	ldr	r3, [pc, #224]	; (8001660 <MX_LTDC_Init+0x104>)
 8001580:	2200      	movs	r2, #0
 8001582:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001584:	4b36      	ldr	r3, [pc, #216]	; (8001660 <MX_LTDC_Init+0x104>)
 8001586:	2200      	movs	r2, #0
 8001588:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800158a:	4b35      	ldr	r3, [pc, #212]	; (8001660 <MX_LTDC_Init+0x104>)
 800158c:	2200      	movs	r2, #0
 800158e:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001590:	4b33      	ldr	r3, [pc, #204]	; (8001660 <MX_LTDC_Init+0x104>)
 8001592:	2200      	movs	r2, #0
 8001594:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 9;
 8001596:	4b32      	ldr	r3, [pc, #200]	; (8001660 <MX_LTDC_Init+0x104>)
 8001598:	2209      	movs	r2, #9
 800159a:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 1;
 800159c:	4b30      	ldr	r3, [pc, #192]	; (8001660 <MX_LTDC_Init+0x104>)
 800159e:	2201      	movs	r2, #1
 80015a0:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 29;
 80015a2:	4b2f      	ldr	r3, [pc, #188]	; (8001660 <MX_LTDC_Init+0x104>)
 80015a4:	221d      	movs	r2, #29
 80015a6:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 3;
 80015a8:	4b2d      	ldr	r3, [pc, #180]	; (8001660 <MX_LTDC_Init+0x104>)
 80015aa:	2203      	movs	r2, #3
 80015ac:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 269;
 80015ae:	4b2c      	ldr	r3, [pc, #176]	; (8001660 <MX_LTDC_Init+0x104>)
 80015b0:	f240 120d 	movw	r2, #269	; 0x10d
 80015b4:	625a      	str	r2, [r3, #36]	; 0x24
  hltdc.Init.AccumulatedActiveH = 323;
 80015b6:	4b2a      	ldr	r3, [pc, #168]	; (8001660 <MX_LTDC_Init+0x104>)
 80015b8:	f240 1243 	movw	r2, #323	; 0x143
 80015bc:	629a      	str	r2, [r3, #40]	; 0x28
  hltdc.Init.TotalWidth = 279;
 80015be:	4b28      	ldr	r3, [pc, #160]	; (8001660 <MX_LTDC_Init+0x104>)
 80015c0:	f240 1217 	movw	r2, #279	; 0x117
 80015c4:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc.Init.TotalHeigh = 327;
 80015c6:	4b26      	ldr	r3, [pc, #152]	; (8001660 <MX_LTDC_Init+0x104>)
 80015c8:	f240 1247 	movw	r2, #327	; 0x147
 80015cc:	631a      	str	r2, [r3, #48]	; 0x30
  hltdc.Init.Backcolor.Blue = 0;
 80015ce:	4b24      	ldr	r3, [pc, #144]	; (8001660 <MX_LTDC_Init+0x104>)
 80015d0:	2200      	movs	r2, #0
 80015d2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 80015d6:	4b22      	ldr	r3, [pc, #136]	; (8001660 <MX_LTDC_Init+0x104>)
 80015d8:	2200      	movs	r2, #0
 80015da:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  hltdc.Init.Backcolor.Red = 0;
 80015de:	4b20      	ldr	r3, [pc, #128]	; (8001660 <MX_LTDC_Init+0x104>)
 80015e0:	2200      	movs	r2, #0
 80015e2:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80015e6:	481e      	ldr	r0, [pc, #120]	; (8001660 <MX_LTDC_Init+0x104>)
 80015e8:	f003 fe10 	bl	800520c <HAL_LTDC_Init>
 80015ec:	4603      	mov	r3, r0
 80015ee:	2b00      	cmp	r3, #0
 80015f0:	d001      	beq.n	80015f6 <MX_LTDC_Init+0x9a>
  {
    Error_Handler();
 80015f2:	f000 fb8f 	bl	8001d14 <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 80015f6:	2300      	movs	r3, #0
 80015f8:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 240;
 80015fa:	23f0      	movs	r3, #240	; 0xf0
 80015fc:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 80015fe:	2300      	movs	r3, #0
 8001600:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 320;
 8001602:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001606:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001608:	2302      	movs	r3, #2
 800160a:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 800160c:	23ff      	movs	r3, #255	; 0xff
 800160e:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 8001610:	2300      	movs	r3, #0
 8001612:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001614:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001618:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800161a:	2305      	movs	r3, #5
 800161c:	627b      	str	r3, [r7, #36]	; 0x24
  pLayerCfg.FBStartAdress = 0xD0000000;
 800161e:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
 8001622:	62bb      	str	r3, [r7, #40]	; 0x28
  pLayerCfg.ImageWidth = 240;
 8001624:	23f0      	movs	r3, #240	; 0xf0
 8001626:	62fb      	str	r3, [r7, #44]	; 0x2c
  pLayerCfg.ImageHeight = 320;
 8001628:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800162c:	633b      	str	r3, [r7, #48]	; 0x30
  pLayerCfg.Backcolor.Blue = 0;
 800162e:	2300      	movs	r3, #0
 8001630:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
  pLayerCfg.Backcolor.Green = 0;
 8001634:	2300      	movs	r3, #0
 8001636:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
  pLayerCfg.Backcolor.Red = 0;
 800163a:	2300      	movs	r3, #0
 800163c:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001640:	1d3b      	adds	r3, r7, #4
 8001642:	2200      	movs	r2, #0
 8001644:	4619      	mov	r1, r3
 8001646:	4806      	ldr	r0, [pc, #24]	; (8001660 <MX_LTDC_Init+0x104>)
 8001648:	f003 ff80 	bl	800554c <HAL_LTDC_ConfigLayer>
 800164c:	4603      	mov	r3, r0
 800164e:	2b00      	cmp	r3, #0
 8001650:	d001      	beq.n	8001656 <MX_LTDC_Init+0xfa>
  {
    Error_Handler();
 8001652:	f000 fb5f 	bl	8001d14 <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 8001656:	bf00      	nop
 8001658:	3738      	adds	r7, #56	; 0x38
 800165a:	46bd      	mov	sp, r7
 800165c:	bd80      	pop	{r7, pc}
 800165e:	bf00      	nop
 8001660:	20026ddc 	.word	0x20026ddc
 8001664:	40016800 	.word	0x40016800

08001668 <MX_SPI3_Init>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 8001668:	b580      	push	{r7, lr}
 800166a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 800166c:	4b18      	ldr	r3, [pc, #96]	; (80016d0 <MX_SPI3_Init+0x68>)
 800166e:	4a19      	ldr	r2, [pc, #100]	; (80016d4 <MX_SPI3_Init+0x6c>)
 8001670:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 8001672:	4b17      	ldr	r3, [pc, #92]	; (80016d0 <MX_SPI3_Init+0x68>)
 8001674:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001678:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_1LINE;
 800167a:	4b15      	ldr	r3, [pc, #84]	; (80016d0 <MX_SPI3_Init+0x68>)
 800167c:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8001680:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 8001682:	4b13      	ldr	r3, [pc, #76]	; (80016d0 <MX_SPI3_Init+0x68>)
 8001684:	2200      	movs	r2, #0
 8001686:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001688:	4b11      	ldr	r3, [pc, #68]	; (80016d0 <MX_SPI3_Init+0x68>)
 800168a:	2200      	movs	r2, #0
 800168c:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 800168e:	4b10      	ldr	r3, [pc, #64]	; (80016d0 <MX_SPI3_Init+0x68>)
 8001690:	2200      	movs	r2, #0
 8001692:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 8001694:	4b0e      	ldr	r3, [pc, #56]	; (80016d0 <MX_SPI3_Init+0x68>)
 8001696:	f44f 7200 	mov.w	r2, #512	; 0x200
 800169a:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 800169c:	4b0c      	ldr	r3, [pc, #48]	; (80016d0 <MX_SPI3_Init+0x68>)
 800169e:	2210      	movs	r2, #16
 80016a0:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80016a2:	4b0b      	ldr	r3, [pc, #44]	; (80016d0 <MX_SPI3_Init+0x68>)
 80016a4:	2200      	movs	r2, #0
 80016a6:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 80016a8:	4b09      	ldr	r3, [pc, #36]	; (80016d0 <MX_SPI3_Init+0x68>)
 80016aa:	2200      	movs	r2, #0
 80016ac:	625a      	str	r2, [r3, #36]	; 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80016ae:	4b08      	ldr	r3, [pc, #32]	; (80016d0 <MX_SPI3_Init+0x68>)
 80016b0:	2200      	movs	r2, #0
 80016b2:	629a      	str	r2, [r3, #40]	; 0x28
  hspi3.Init.CRCPolynomial = 10;
 80016b4:	4b06      	ldr	r3, [pc, #24]	; (80016d0 <MX_SPI3_Init+0x68>)
 80016b6:	220a      	movs	r2, #10
 80016b8:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 80016ba:	4805      	ldr	r0, [pc, #20]	; (80016d0 <MX_SPI3_Init+0x68>)
 80016bc:	f004 ff4e 	bl	800655c <HAL_SPI_Init>
 80016c0:	4603      	mov	r3, r0
 80016c2:	2b00      	cmp	r3, #0
 80016c4:	d001      	beq.n	80016ca <MX_SPI3_Init+0x62>
  {
    Error_Handler();
 80016c6:	f000 fb25 	bl	8001d14 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 80016ca:	bf00      	nop
 80016cc:	bd80      	pop	{r7, pc}
 80016ce:	bf00      	nop
 80016d0:	20026d84 	.word	0x20026d84
 80016d4:	40003c00 	.word	0x40003c00

080016d8 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 80016d8:	b580      	push	{r7, lr}
 80016da:	b086      	sub	sp, #24
 80016dc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80016de:	f107 0308 	add.w	r3, r7, #8
 80016e2:	2200      	movs	r2, #0
 80016e4:	601a      	str	r2, [r3, #0]
 80016e6:	605a      	str	r2, [r3, #4]
 80016e8:	609a      	str	r2, [r3, #8]
 80016ea:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80016ec:	463b      	mov	r3, r7
 80016ee:	2200      	movs	r2, #0
 80016f0:	601a      	str	r2, [r3, #0]
 80016f2:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80016f4:	4b1e      	ldr	r3, [pc, #120]	; (8001770 <MX_TIM1_Init+0x98>)
 80016f6:	4a1f      	ldr	r2, [pc, #124]	; (8001774 <MX_TIM1_Init+0x9c>)
 80016f8:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 80016fa:	4b1d      	ldr	r3, [pc, #116]	; (8001770 <MX_TIM1_Init+0x98>)
 80016fc:	2200      	movs	r2, #0
 80016fe:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001700:	4b1b      	ldr	r3, [pc, #108]	; (8001770 <MX_TIM1_Init+0x98>)
 8001702:	2200      	movs	r2, #0
 8001704:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 0;
 8001706:	4b1a      	ldr	r3, [pc, #104]	; (8001770 <MX_TIM1_Init+0x98>)
 8001708:	2200      	movs	r2, #0
 800170a:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800170c:	4b18      	ldr	r3, [pc, #96]	; (8001770 <MX_TIM1_Init+0x98>)
 800170e:	2200      	movs	r2, #0
 8001710:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8001712:	4b17      	ldr	r3, [pc, #92]	; (8001770 <MX_TIM1_Init+0x98>)
 8001714:	2200      	movs	r2, #0
 8001716:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001718:	4b15      	ldr	r3, [pc, #84]	; (8001770 <MX_TIM1_Init+0x98>)
 800171a:	2200      	movs	r2, #0
 800171c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800171e:	4814      	ldr	r0, [pc, #80]	; (8001770 <MX_TIM1_Init+0x98>)
 8001720:	f005 fc98 	bl	8007054 <HAL_TIM_Base_Init>
 8001724:	4603      	mov	r3, r0
 8001726:	2b00      	cmp	r3, #0
 8001728:	d001      	beq.n	800172e <MX_TIM1_Init+0x56>
  {
    Error_Handler();
 800172a:	f000 faf3 	bl	8001d14 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800172e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001732:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8001734:	f107 0308 	add.w	r3, r7, #8
 8001738:	4619      	mov	r1, r3
 800173a:	480d      	ldr	r0, [pc, #52]	; (8001770 <MX_TIM1_Init+0x98>)
 800173c:	f005 fe08 	bl	8007350 <HAL_TIM_ConfigClockSource>
 8001740:	4603      	mov	r3, r0
 8001742:	2b00      	cmp	r3, #0
 8001744:	d001      	beq.n	800174a <MX_TIM1_Init+0x72>
  {
    Error_Handler();
 8001746:	f000 fae5 	bl	8001d14 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800174a:	2300      	movs	r3, #0
 800174c:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800174e:	2300      	movs	r3, #0
 8001750:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001752:	463b      	mov	r3, r7
 8001754:	4619      	mov	r1, r3
 8001756:	4806      	ldr	r0, [pc, #24]	; (8001770 <MX_TIM1_Init+0x98>)
 8001758:	f006 f9c2 	bl	8007ae0 <HAL_TIMEx_MasterConfigSynchronization>
 800175c:	4603      	mov	r3, r0
 800175e:	2b00      	cmp	r3, #0
 8001760:	d001      	beq.n	8001766 <MX_TIM1_Init+0x8e>
  {
    Error_Handler();
 8001762:	f000 fad7 	bl	8001d14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8001766:	bf00      	nop
 8001768:	3718      	adds	r7, #24
 800176a:	46bd      	mov	sp, r7
 800176c:	bd80      	pop	{r7, pc}
 800176e:	bf00      	nop
 8001770:	20026f08 	.word	0x20026f08
 8001774:	40010000 	.word	0x40010000

08001778 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001778:	b580      	push	{r7, lr}
 800177a:	b08a      	sub	sp, #40	; 0x28
 800177c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800177e:	f107 0320 	add.w	r3, r7, #32
 8001782:	2200      	movs	r2, #0
 8001784:	601a      	str	r2, [r3, #0]
 8001786:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001788:	1d3b      	adds	r3, r7, #4
 800178a:	2200      	movs	r2, #0
 800178c:	601a      	str	r2, [r3, #0]
 800178e:	605a      	str	r2, [r3, #4]
 8001790:	609a      	str	r2, [r3, #8]
 8001792:	60da      	str	r2, [r3, #12]
 8001794:	611a      	str	r2, [r3, #16]
 8001796:	615a      	str	r2, [r3, #20]
 8001798:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800179a:	4b22      	ldr	r3, [pc, #136]	; (8001824 <MX_TIM2_Init+0xac>)
 800179c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80017a0:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 119;
 80017a2:	4b20      	ldr	r3, [pc, #128]	; (8001824 <MX_TIM2_Init+0xac>)
 80017a4:	2277      	movs	r2, #119	; 0x77
 80017a6:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017a8:	4b1e      	ldr	r3, [pc, #120]	; (8001824 <MX_TIM2_Init+0xac>)
 80017aa:	2200      	movs	r2, #0
 80017ac:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 100;
 80017ae:	4b1d      	ldr	r3, [pc, #116]	; (8001824 <MX_TIM2_Init+0xac>)
 80017b0:	2264      	movs	r2, #100	; 0x64
 80017b2:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80017b4:	4b1b      	ldr	r3, [pc, #108]	; (8001824 <MX_TIM2_Init+0xac>)
 80017b6:	2200      	movs	r2, #0
 80017b8:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80017ba:	4b1a      	ldr	r3, [pc, #104]	; (8001824 <MX_TIM2_Init+0xac>)
 80017bc:	2200      	movs	r2, #0
 80017be:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80017c0:	4818      	ldr	r0, [pc, #96]	; (8001824 <MX_TIM2_Init+0xac>)
 80017c2:	f005 fc96 	bl	80070f2 <HAL_TIM_PWM_Init>
 80017c6:	4603      	mov	r3, r0
 80017c8:	2b00      	cmp	r3, #0
 80017ca:	d001      	beq.n	80017d0 <MX_TIM2_Init+0x58>
  {
    Error_Handler();
 80017cc:	f000 faa2 	bl	8001d14 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80017d0:	2300      	movs	r3, #0
 80017d2:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017d4:	2300      	movs	r3, #0
 80017d6:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80017d8:	f107 0320 	add.w	r3, r7, #32
 80017dc:	4619      	mov	r1, r3
 80017de:	4811      	ldr	r0, [pc, #68]	; (8001824 <MX_TIM2_Init+0xac>)
 80017e0:	f006 f97e 	bl	8007ae0 <HAL_TIMEx_MasterConfigSynchronization>
 80017e4:	4603      	mov	r3, r0
 80017e6:	2b00      	cmp	r3, #0
 80017e8:	d001      	beq.n	80017ee <MX_TIM2_Init+0x76>
  {
    Error_Handler();
 80017ea:	f000 fa93 	bl	8001d14 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80017ee:	2360      	movs	r3, #96	; 0x60
 80017f0:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80017f2:	2300      	movs	r3, #0
 80017f4:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80017f6:	2300      	movs	r3, #0
 80017f8:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80017fa:	2300      	movs	r3, #0
 80017fc:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80017fe:	1d3b      	adds	r3, r7, #4
 8001800:	2200      	movs	r2, #0
 8001802:	4619      	mov	r1, r3
 8001804:	4807      	ldr	r0, [pc, #28]	; (8001824 <MX_TIM2_Init+0xac>)
 8001806:	f005 fcdd 	bl	80071c4 <HAL_TIM_PWM_ConfigChannel>
 800180a:	4603      	mov	r3, r0
 800180c:	2b00      	cmp	r3, #0
 800180e:	d001      	beq.n	8001814 <MX_TIM2_Init+0x9c>
  {
    Error_Handler();
 8001810:	f000 fa80 	bl	8001d14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001814:	4803      	ldr	r0, [pc, #12]	; (8001824 <MX_TIM2_Init+0xac>)
 8001816:	f000 fd97 	bl	8002348 <HAL_TIM_MspPostInit>

}
 800181a:	bf00      	nop
 800181c:	3728      	adds	r7, #40	; 0x28
 800181e:	46bd      	mov	sp, r7
 8001820:	bd80      	pop	{r7, pc}
 8001822:	bf00      	nop
 8001824:	20026fc8 	.word	0x20026fc8

08001828 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001828:	b580      	push	{r7, lr}
 800182a:	b08a      	sub	sp, #40	; 0x28
 800182c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800182e:	f107 0320 	add.w	r3, r7, #32
 8001832:	2200      	movs	r2, #0
 8001834:	601a      	str	r2, [r3, #0]
 8001836:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001838:	1d3b      	adds	r3, r7, #4
 800183a:	2200      	movs	r2, #0
 800183c:	601a      	str	r2, [r3, #0]
 800183e:	605a      	str	r2, [r3, #4]
 8001840:	609a      	str	r2, [r3, #8]
 8001842:	60da      	str	r2, [r3, #12]
 8001844:	611a      	str	r2, [r3, #16]
 8001846:	615a      	str	r2, [r3, #20]
 8001848:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 800184a:	4b21      	ldr	r3, [pc, #132]	; (80018d0 <MX_TIM3_Init+0xa8>)
 800184c:	4a21      	ldr	r2, [pc, #132]	; (80018d4 <MX_TIM3_Init+0xac>)
 800184e:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 119;
 8001850:	4b1f      	ldr	r3, [pc, #124]	; (80018d0 <MX_TIM3_Init+0xa8>)
 8001852:	2277      	movs	r2, #119	; 0x77
 8001854:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001856:	4b1e      	ldr	r3, [pc, #120]	; (80018d0 <MX_TIM3_Init+0xa8>)
 8001858:	2200      	movs	r2, #0
 800185a:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 100;
 800185c:	4b1c      	ldr	r3, [pc, #112]	; (80018d0 <MX_TIM3_Init+0xa8>)
 800185e:	2264      	movs	r2, #100	; 0x64
 8001860:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001862:	4b1b      	ldr	r3, [pc, #108]	; (80018d0 <MX_TIM3_Init+0xa8>)
 8001864:	2200      	movs	r2, #0
 8001866:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001868:	4b19      	ldr	r3, [pc, #100]	; (80018d0 <MX_TIM3_Init+0xa8>)
 800186a:	2200      	movs	r2, #0
 800186c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 800186e:	4818      	ldr	r0, [pc, #96]	; (80018d0 <MX_TIM3_Init+0xa8>)
 8001870:	f005 fc3f 	bl	80070f2 <HAL_TIM_PWM_Init>
 8001874:	4603      	mov	r3, r0
 8001876:	2b00      	cmp	r3, #0
 8001878:	d001      	beq.n	800187e <MX_TIM3_Init+0x56>
  {
    Error_Handler();
 800187a:	f000 fa4b 	bl	8001d14 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800187e:	2300      	movs	r3, #0
 8001880:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001882:	2300      	movs	r3, #0
 8001884:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001886:	f107 0320 	add.w	r3, r7, #32
 800188a:	4619      	mov	r1, r3
 800188c:	4810      	ldr	r0, [pc, #64]	; (80018d0 <MX_TIM3_Init+0xa8>)
 800188e:	f006 f927 	bl	8007ae0 <HAL_TIMEx_MasterConfigSynchronization>
 8001892:	4603      	mov	r3, r0
 8001894:	2b00      	cmp	r3, #0
 8001896:	d001      	beq.n	800189c <MX_TIM3_Init+0x74>
  {
    Error_Handler();
 8001898:	f000 fa3c 	bl	8001d14 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800189c:	2360      	movs	r3, #96	; 0x60
 800189e:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80018a0:	2300      	movs	r3, #0
 80018a2:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80018a4:	2300      	movs	r3, #0
 80018a6:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80018a8:	2300      	movs	r3, #0
 80018aa:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 80018ac:	1d3b      	adds	r3, r7, #4
 80018ae:	2208      	movs	r2, #8
 80018b0:	4619      	mov	r1, r3
 80018b2:	4807      	ldr	r0, [pc, #28]	; (80018d0 <MX_TIM3_Init+0xa8>)
 80018b4:	f005 fc86 	bl	80071c4 <HAL_TIM_PWM_ConfigChannel>
 80018b8:	4603      	mov	r3, r0
 80018ba:	2b00      	cmp	r3, #0
 80018bc:	d001      	beq.n	80018c2 <MX_TIM3_Init+0x9a>
  {
    Error_Handler();
 80018be:	f000 fa29 	bl	8001d14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 80018c2:	4803      	ldr	r0, [pc, #12]	; (80018d0 <MX_TIM3_Init+0xa8>)
 80018c4:	f000 fd40 	bl	8002348 <HAL_TIM_MspPostInit>

}
 80018c8:	bf00      	nop
 80018ca:	3728      	adds	r7, #40	; 0x28
 80018cc:	46bd      	mov	sp, r7
 80018ce:	bd80      	pop	{r7, pc}
 80018d0:	20026d44 	.word	0x20026d44
 80018d4:	40000400 	.word	0x40000400

080018d8 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 80018d8:	b580      	push	{r7, lr}
 80018da:	b08a      	sub	sp, #40	; 0x28
 80018dc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80018de:	f107 0320 	add.w	r3, r7, #32
 80018e2:	2200      	movs	r2, #0
 80018e4:	601a      	str	r2, [r3, #0]
 80018e6:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80018e8:	1d3b      	adds	r3, r7, #4
 80018ea:	2200      	movs	r2, #0
 80018ec:	601a      	str	r2, [r3, #0]
 80018ee:	605a      	str	r2, [r3, #4]
 80018f0:	609a      	str	r2, [r3, #8]
 80018f2:	60da      	str	r2, [r3, #12]
 80018f4:	611a      	str	r2, [r3, #16]
 80018f6:	615a      	str	r2, [r3, #20]
 80018f8:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 80018fa:	4b21      	ldr	r3, [pc, #132]	; (8001980 <MX_TIM4_Init+0xa8>)
 80018fc:	4a21      	ldr	r2, [pc, #132]	; (8001984 <MX_TIM4_Init+0xac>)
 80018fe:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 119;
 8001900:	4b1f      	ldr	r3, [pc, #124]	; (8001980 <MX_TIM4_Init+0xa8>)
 8001902:	2277      	movs	r2, #119	; 0x77
 8001904:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001906:	4b1e      	ldr	r3, [pc, #120]	; (8001980 <MX_TIM4_Init+0xa8>)
 8001908:	2200      	movs	r2, #0
 800190a:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 100;
 800190c:	4b1c      	ldr	r3, [pc, #112]	; (8001980 <MX_TIM4_Init+0xa8>)
 800190e:	2264      	movs	r2, #100	; 0x64
 8001910:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001912:	4b1b      	ldr	r3, [pc, #108]	; (8001980 <MX_TIM4_Init+0xa8>)
 8001914:	2200      	movs	r2, #0
 8001916:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001918:	4b19      	ldr	r3, [pc, #100]	; (8001980 <MX_TIM4_Init+0xa8>)
 800191a:	2200      	movs	r2, #0
 800191c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 800191e:	4818      	ldr	r0, [pc, #96]	; (8001980 <MX_TIM4_Init+0xa8>)
 8001920:	f005 fbe7 	bl	80070f2 <HAL_TIM_PWM_Init>
 8001924:	4603      	mov	r3, r0
 8001926:	2b00      	cmp	r3, #0
 8001928:	d001      	beq.n	800192e <MX_TIM4_Init+0x56>
  {
    Error_Handler();
 800192a:	f000 f9f3 	bl	8001d14 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800192e:	2300      	movs	r3, #0
 8001930:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001932:	2300      	movs	r3, #0
 8001934:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001936:	f107 0320 	add.w	r3, r7, #32
 800193a:	4619      	mov	r1, r3
 800193c:	4810      	ldr	r0, [pc, #64]	; (8001980 <MX_TIM4_Init+0xa8>)
 800193e:	f006 f8cf 	bl	8007ae0 <HAL_TIMEx_MasterConfigSynchronization>
 8001942:	4603      	mov	r3, r0
 8001944:	2b00      	cmp	r3, #0
 8001946:	d001      	beq.n	800194c <MX_TIM4_Init+0x74>
  {
    Error_Handler();
 8001948:	f000 f9e4 	bl	8001d14 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800194c:	2360      	movs	r3, #96	; 0x60
 800194e:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001950:	2300      	movs	r3, #0
 8001952:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001954:	2300      	movs	r3, #0
 8001956:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001958:	2300      	movs	r3, #0
 800195a:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 800195c:	1d3b      	adds	r3, r7, #4
 800195e:	220c      	movs	r2, #12
 8001960:	4619      	mov	r1, r3
 8001962:	4807      	ldr	r0, [pc, #28]	; (8001980 <MX_TIM4_Init+0xa8>)
 8001964:	f005 fc2e 	bl	80071c4 <HAL_TIM_PWM_ConfigChannel>
 8001968:	4603      	mov	r3, r0
 800196a:	2b00      	cmp	r3, #0
 800196c:	d001      	beq.n	8001972 <MX_TIM4_Init+0x9a>
  {
    Error_Handler();
 800196e:	f000 f9d1 	bl	8001d14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 8001972:	4803      	ldr	r0, [pc, #12]	; (8001980 <MX_TIM4_Init+0xa8>)
 8001974:	f000 fce8 	bl	8002348 <HAL_TIM_MspPostInit>

}
 8001978:	bf00      	nop
 800197a:	3728      	adds	r7, #40	; 0x28
 800197c:	46bd      	mov	sp, r7
 800197e:	bd80      	pop	{r7, pc}
 8001980:	20026ca8 	.word	0x20026ca8
 8001984:	40000800 	.word	0x40000800

08001988 <MX_UART4_Init>:
  * @brief UART4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART4_Init(void)
{
 8001988:	b580      	push	{r7, lr}
 800198a:	af00      	add	r7, sp, #0
  /* USER CODE END UART4_Init 0 */

  /* USER CODE BEGIN UART4_Init 1 */

  /* USER CODE END UART4_Init 1 */
  huart4.Instance = UART4;
 800198c:	4b11      	ldr	r3, [pc, #68]	; (80019d4 <MX_UART4_Init+0x4c>)
 800198e:	4a12      	ldr	r2, [pc, #72]	; (80019d8 <MX_UART4_Init+0x50>)
 8001990:	601a      	str	r2, [r3, #0]
  huart4.Init.BaudRate = 115200;
 8001992:	4b10      	ldr	r3, [pc, #64]	; (80019d4 <MX_UART4_Init+0x4c>)
 8001994:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001998:	605a      	str	r2, [r3, #4]
  huart4.Init.WordLength = UART_WORDLENGTH_8B;
 800199a:	4b0e      	ldr	r3, [pc, #56]	; (80019d4 <MX_UART4_Init+0x4c>)
 800199c:	2200      	movs	r2, #0
 800199e:	609a      	str	r2, [r3, #8]
  huart4.Init.StopBits = UART_STOPBITS_1;
 80019a0:	4b0c      	ldr	r3, [pc, #48]	; (80019d4 <MX_UART4_Init+0x4c>)
 80019a2:	2200      	movs	r2, #0
 80019a4:	60da      	str	r2, [r3, #12]
  huart4.Init.Parity = UART_PARITY_NONE;
 80019a6:	4b0b      	ldr	r3, [pc, #44]	; (80019d4 <MX_UART4_Init+0x4c>)
 80019a8:	2200      	movs	r2, #0
 80019aa:	611a      	str	r2, [r3, #16]
  huart4.Init.Mode = UART_MODE_TX_RX;
 80019ac:	4b09      	ldr	r3, [pc, #36]	; (80019d4 <MX_UART4_Init+0x4c>)
 80019ae:	220c      	movs	r2, #12
 80019b0:	615a      	str	r2, [r3, #20]
  huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80019b2:	4b08      	ldr	r3, [pc, #32]	; (80019d4 <MX_UART4_Init+0x4c>)
 80019b4:	2200      	movs	r2, #0
 80019b6:	619a      	str	r2, [r3, #24]
  huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 80019b8:	4b06      	ldr	r3, [pc, #24]	; (80019d4 <MX_UART4_Init+0x4c>)
 80019ba:	2200      	movs	r2, #0
 80019bc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart4) != HAL_OK)
 80019be:	4805      	ldr	r0, [pc, #20]	; (80019d4 <MX_UART4_Init+0x4c>)
 80019c0:	f006 f90a 	bl	8007bd8 <HAL_UART_Init>
 80019c4:	4603      	mov	r3, r0
 80019c6:	2b00      	cmp	r3, #0
 80019c8:	d001      	beq.n	80019ce <MX_UART4_Init+0x46>
  {
    Error_Handler();
 80019ca:	f000 f9a3 	bl	8001d14 <Error_Handler>
  }
  /* USER CODE BEGIN UART4_Init 2 */

  /* USER CODE END UART4_Init 2 */

}
 80019ce:	bf00      	nop
 80019d0:	bd80      	pop	{r7, pc}
 80019d2:	bf00      	nop
 80019d4:	20026f48 	.word	0x20026f48
 80019d8:	40004c00 	.word	0x40004c00

080019dc <MX_UART7_Init>:
  * @brief UART7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART7_Init(void)
{
 80019dc:	b580      	push	{r7, lr}
 80019de:	af00      	add	r7, sp, #0
  /* USER CODE END UART7_Init 0 */

  /* USER CODE BEGIN UART7_Init 1 */

  /* USER CODE END UART7_Init 1 */
  huart7.Instance = UART7;
 80019e0:	4b11      	ldr	r3, [pc, #68]	; (8001a28 <MX_UART7_Init+0x4c>)
 80019e2:	4a12      	ldr	r2, [pc, #72]	; (8001a2c <MX_UART7_Init+0x50>)
 80019e4:	601a      	str	r2, [r3, #0]
  huart7.Init.BaudRate = 9600;
 80019e6:	4b10      	ldr	r3, [pc, #64]	; (8001a28 <MX_UART7_Init+0x4c>)
 80019e8:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80019ec:	605a      	str	r2, [r3, #4]
  huart7.Init.WordLength = UART_WORDLENGTH_8B;
 80019ee:	4b0e      	ldr	r3, [pc, #56]	; (8001a28 <MX_UART7_Init+0x4c>)
 80019f0:	2200      	movs	r2, #0
 80019f2:	609a      	str	r2, [r3, #8]
  huart7.Init.StopBits = UART_STOPBITS_1;
 80019f4:	4b0c      	ldr	r3, [pc, #48]	; (8001a28 <MX_UART7_Init+0x4c>)
 80019f6:	2200      	movs	r2, #0
 80019f8:	60da      	str	r2, [r3, #12]
  huart7.Init.Parity = UART_PARITY_NONE;
 80019fa:	4b0b      	ldr	r3, [pc, #44]	; (8001a28 <MX_UART7_Init+0x4c>)
 80019fc:	2200      	movs	r2, #0
 80019fe:	611a      	str	r2, [r3, #16]
  huart7.Init.Mode = UART_MODE_TX_RX;
 8001a00:	4b09      	ldr	r3, [pc, #36]	; (8001a28 <MX_UART7_Init+0x4c>)
 8001a02:	220c      	movs	r2, #12
 8001a04:	615a      	str	r2, [r3, #20]
  huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001a06:	4b08      	ldr	r3, [pc, #32]	; (8001a28 <MX_UART7_Init+0x4c>)
 8001a08:	2200      	movs	r2, #0
 8001a0a:	619a      	str	r2, [r3, #24]
  huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 8001a0c:	4b06      	ldr	r3, [pc, #24]	; (8001a28 <MX_UART7_Init+0x4c>)
 8001a0e:	2200      	movs	r2, #0
 8001a10:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart7) != HAL_OK)
 8001a12:	4805      	ldr	r0, [pc, #20]	; (8001a28 <MX_UART7_Init+0x4c>)
 8001a14:	f006 f8e0 	bl	8007bd8 <HAL_UART_Init>
 8001a18:	4603      	mov	r3, r0
 8001a1a:	2b00      	cmp	r3, #0
 8001a1c:	d001      	beq.n	8001a22 <MX_UART7_Init+0x46>
  {
    Error_Handler();
 8001a1e:	f000 f979 	bl	8001d14 <Error_Handler>
  }
  /* USER CODE BEGIN UART7_Init 2 */

  /* USER CODE END UART7_Init 2 */

}
 8001a22:	bf00      	nop
 8001a24:	bd80      	pop	{r7, pc}
 8001a26:	bf00      	nop
 8001a28:	20026c68 	.word	0x20026c68
 8001a2c:	40007800 	.word	0x40007800

08001a30 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001a30:	b580      	push	{r7, lr}
 8001a32:	b08c      	sub	sp, #48	; 0x30
 8001a34:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a36:	f107 031c 	add.w	r3, r7, #28
 8001a3a:	2200      	movs	r2, #0
 8001a3c:	601a      	str	r2, [r3, #0]
 8001a3e:	605a      	str	r2, [r3, #4]
 8001a40:	609a      	str	r2, [r3, #8]
 8001a42:	60da      	str	r2, [r3, #12]
 8001a44:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001a46:	2300      	movs	r3, #0
 8001a48:	61bb      	str	r3, [r7, #24]
 8001a4a:	4baa      	ldr	r3, [pc, #680]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001a4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a4e:	4aa9      	ldr	r2, [pc, #676]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001a50:	f043 0310 	orr.w	r3, r3, #16
 8001a54:	6313      	str	r3, [r2, #48]	; 0x30
 8001a56:	4ba7      	ldr	r3, [pc, #668]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001a58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a5a:	f003 0310 	and.w	r3, r3, #16
 8001a5e:	61bb      	str	r3, [r7, #24]
 8001a60:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a62:	2300      	movs	r3, #0
 8001a64:	617b      	str	r3, [r7, #20]
 8001a66:	4ba3      	ldr	r3, [pc, #652]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001a68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a6a:	4aa2      	ldr	r2, [pc, #648]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001a6c:	f043 0304 	orr.w	r3, r3, #4
 8001a70:	6313      	str	r3, [r2, #48]	; 0x30
 8001a72:	4ba0      	ldr	r3, [pc, #640]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001a74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a76:	f003 0304 	and.w	r3, r3, #4
 8001a7a:	617b      	str	r3, [r7, #20]
 8001a7c:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001a7e:	2300      	movs	r3, #0
 8001a80:	613b      	str	r3, [r7, #16]
 8001a82:	4b9c      	ldr	r3, [pc, #624]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001a84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a86:	4a9b      	ldr	r2, [pc, #620]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001a88:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001a8c:	6313      	str	r3, [r2, #48]	; 0x30
 8001a8e:	4b99      	ldr	r3, [pc, #612]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001a90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a92:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001a96:	613b      	str	r3, [r7, #16]
 8001a98:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a9a:	2300      	movs	r3, #0
 8001a9c:	60fb      	str	r3, [r7, #12]
 8001a9e:	4b95      	ldr	r3, [pc, #596]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001aa0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aa2:	4a94      	ldr	r2, [pc, #592]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001aa4:	f043 0301 	orr.w	r3, r3, #1
 8001aa8:	6313      	str	r3, [r2, #48]	; 0x30
 8001aaa:	4b92      	ldr	r3, [pc, #584]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001aac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aae:	f003 0301 	and.w	r3, r3, #1
 8001ab2:	60fb      	str	r3, [r7, #12]
 8001ab4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ab6:	2300      	movs	r3, #0
 8001ab8:	60bb      	str	r3, [r7, #8]
 8001aba:	4b8e      	ldr	r3, [pc, #568]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001abc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001abe:	4a8d      	ldr	r2, [pc, #564]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001ac0:	f043 0302 	orr.w	r3, r3, #2
 8001ac4:	6313      	str	r3, [r2, #48]	; 0x30
 8001ac6:	4b8b      	ldr	r3, [pc, #556]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001ac8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aca:	f003 0302 	and.w	r3, r3, #2
 8001ace:	60bb      	str	r3, [r7, #8]
 8001ad0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ad2:	2300      	movs	r3, #0
 8001ad4:	607b      	str	r3, [r7, #4]
 8001ad6:	4b87      	ldr	r3, [pc, #540]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001ad8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ada:	4a86      	ldr	r2, [pc, #536]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001adc:	f043 0308 	orr.w	r3, r3, #8
 8001ae0:	6313      	str	r3, [r2, #48]	; 0x30
 8001ae2:	4b84      	ldr	r3, [pc, #528]	; (8001cf4 <MX_GPIO_Init+0x2c4>)
 8001ae4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ae6:	f003 0308 	and.w	r3, r3, #8
 8001aea:	607b      	str	r3, [r7, #4]
 8001aec:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, CMD_LED2_Pin|CMD_LED3_Pin|CMD_LED4_Pin|CMD_LED5_Pin 
 8001aee:	2200      	movs	r2, #0
 8001af0:	217e      	movs	r1, #126	; 0x7e
 8001af2:	4881      	ldr	r0, [pc, #516]	; (8001cf8 <MX_GPIO_Init+0x2c8>)
 8001af4:	f002 fb56 	bl	80041a4 <HAL_GPIO_WritePin>
                          |CMD_LED6_Pin|CMD_LED1_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, EN_OTG_Pin|SHDN_CONTROL_Pin|WR_LCD_Pin|ALIM_CLE_USB_Pin, GPIO_PIN_RESET);
 8001af8:	2200      	movs	r2, #0
 8001afa:	f648 0130 	movw	r1, #34864	; 0x8830
 8001afe:	487f      	ldr	r0, [pc, #508]	; (8001cfc <MX_GPIO_Init+0x2cc>)
 8001b00:	f002 fb50 	bl	80041a4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_RESET);
 8001b04:	2200      	movs	r2, #0
 8001b06:	2104      	movs	r1, #4
 8001b08:	487d      	ldr	r0, [pc, #500]	; (8001d00 <MX_GPIO_Init+0x2d0>)
 8001b0a:	f002 fb4b 	bl	80041a4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, TP_RESET_Pin|EN_DRIVER_Pin|CS_LCD_Pin|CMD_ALIM_LCD_Pin 
 8001b0e:	2200      	movs	r2, #0
 8001b10:	f242 21c3 	movw	r1, #8899	; 0x22c3
 8001b14:	487b      	ldr	r0, [pc, #492]	; (8001d04 <MX_GPIO_Init+0x2d4>)
 8001b16:	f002 fb45 	bl	80041a4 <HAL_GPIO_WritePin>
                          |CMD_ALIM_BLE_Pin|CS_FLASH_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(CMD_WP_MEM_GPIO_Port, CMD_WP_MEM_Pin, GPIO_PIN_RESET);
 8001b1a:	2200      	movs	r2, #0
 8001b1c:	2120      	movs	r1, #32
 8001b1e:	487a      	ldr	r0, [pc, #488]	; (8001d08 <MX_GPIO_Init+0x2d8>)
 8001b20:	f002 fb40 	bl	80041a4 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : CMD_LED2_Pin CMD_LED3_Pin CMD_LED4_Pin CMD_LED5_Pin 
                           CMD_LED6_Pin CMD_LED1_Pin */
  GPIO_InitStruct.Pin = CMD_LED2_Pin|CMD_LED3_Pin|CMD_LED4_Pin|CMD_LED5_Pin 
 8001b24:	237e      	movs	r3, #126	; 0x7e
 8001b26:	61fb      	str	r3, [r7, #28]
                          |CMD_LED6_Pin|CMD_LED1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001b28:	2301      	movs	r3, #1
 8001b2a:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b2c:	2300      	movs	r3, #0
 8001b2e:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b30:	2300      	movs	r3, #0
 8001b32:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001b34:	f107 031c 	add.w	r3, r7, #28
 8001b38:	4619      	mov	r1, r3
 8001b3a:	486f      	ldr	r0, [pc, #444]	; (8001cf8 <MX_GPIO_Init+0x2c8>)
 8001b3c:	f002 f866 	bl	8003c0c <HAL_GPIO_Init>

  /*Configure GPIO pins : CHRG_OK_Pin CMPOUT_Pin */
  GPIO_InitStruct.Pin = CHRG_OK_Pin|CMPOUT_Pin;
 8001b40:	f242 0302 	movw	r3, #8194	; 0x2002
 8001b44:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001b46:	4b71      	ldr	r3, [pc, #452]	; (8001d0c <MX_GPIO_Init+0x2dc>)
 8001b48:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b4a:	2300      	movs	r3, #0
 8001b4c:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b4e:	f107 031c 	add.w	r3, r7, #28
 8001b52:	4619      	mov	r1, r3
 8001b54:	4869      	ldr	r0, [pc, #420]	; (8001cfc <MX_GPIO_Init+0x2cc>)
 8001b56:	f002 f859 	bl	8003c0c <HAL_GPIO_Init>

  /*Configure GPIO pin : PROCHOT_Pin */
  GPIO_InitStruct.Pin = PROCHOT_Pin;
 8001b5a:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001b5e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001b60:	2300      	movs	r3, #0
 8001b62:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b64:	2300      	movs	r3, #0
 8001b66:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(PROCHOT_GPIO_Port, &GPIO_InitStruct);
 8001b68:	f107 031c 	add.w	r3, r7, #28
 8001b6c:	4619      	mov	r1, r3
 8001b6e:	4863      	ldr	r0, [pc, #396]	; (8001cfc <MX_GPIO_Init+0x2cc>)
 8001b70:	f002 f84c 	bl	8003c0c <HAL_GPIO_Init>

  /*Configure GPIO pins : EN_OTG_Pin SHDN_CONTROL_Pin WR_LCD_Pin ALIM_CLE_USB_Pin */
  GPIO_InitStruct.Pin = EN_OTG_Pin|SHDN_CONTROL_Pin|WR_LCD_Pin|ALIM_CLE_USB_Pin;
 8001b74:	f648 0330 	movw	r3, #34864	; 0x8830
 8001b78:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001b7a:	2301      	movs	r3, #1
 8001b7c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b7e:	2300      	movs	r3, #0
 8001b80:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b82:	2300      	movs	r3, #0
 8001b84:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b86:	f107 031c 	add.w	r3, r7, #28
 8001b8a:	4619      	mov	r1, r3
 8001b8c:	485b      	ldr	r0, [pc, #364]	; (8001cfc <MX_GPIO_Init+0x2cc>)
 8001b8e:	f002 f83d 	bl	8003c0c <HAL_GPIO_Init>

  /*Configure GPIO pin : LCD_RESET_Pin */
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
 8001b92:	2304      	movs	r3, #4
 8001b94:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001b96:	2301      	movs	r3, #1
 8001b98:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b9a:	2300      	movs	r3, #0
 8001b9c:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b9e:	2300      	movs	r3, #0
 8001ba0:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
 8001ba2:	f107 031c 	add.w	r3, r7, #28
 8001ba6:	4619      	mov	r1, r3
 8001ba8:	4855      	ldr	r0, [pc, #340]	; (8001d00 <MX_GPIO_Init+0x2d0>)
 8001baa:	f002 f82f 	bl	8003c0c <HAL_GPIO_Init>

  /*Configure GPIO pin : PA7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001bae:	2380      	movs	r3, #128	; 0x80
 8001bb0:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bb2:	2302      	movs	r3, #2
 8001bb4:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bb6:	2300      	movs	r3, #0
 8001bb8:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bba:	2303      	movs	r3, #3
 8001bbc:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8001bbe:	2305      	movs	r3, #5
 8001bc0:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bc2:	f107 031c 	add.w	r3, r7, #28
 8001bc6:	4619      	mov	r1, r3
 8001bc8:	484d      	ldr	r0, [pc, #308]	; (8001d00 <MX_GPIO_Init+0x2d0>)
 8001bca:	f002 f81f 	bl	8003c0c <HAL_GPIO_Init>

  /*Configure GPIO pins : PB14 PB15 */
  GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8001bce:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8001bd2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bd4:	2302      	movs	r3, #2
 8001bd6:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bd8:	2300      	movs	r3, #0
 8001bda:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bdc:	2303      	movs	r3, #3
 8001bde:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 8001be0:	230c      	movs	r3, #12
 8001be2:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001be4:	f107 031c 	add.w	r3, r7, #28
 8001be8:	4619      	mov	r1, r3
 8001bea:	4847      	ldr	r0, [pc, #284]	; (8001d08 <MX_GPIO_Init+0x2d8>)
 8001bec:	f002 f80e 	bl	8003c0c <HAL_GPIO_Init>

  /*Configure GPIO pins : TP_RESET_Pin EN_DRIVER_Pin CS_LCD_Pin CMD_ALIM_LCD_Pin 
                           CMD_ALIM_BLE_Pin CS_FLASH_Pin */
  GPIO_InitStruct.Pin = TP_RESET_Pin|EN_DRIVER_Pin|CS_LCD_Pin|CMD_ALIM_LCD_Pin
 8001bf0:	f242 23c3 	movw	r3, #8899	; 0x22c3
 8001bf4:	61fb      	str	r3, [r7, #28]
                          |CMD_ALIM_BLE_Pin|CS_FLASH_Pin;
  //GPIO_InitStruct.Pin = CS_LCD_Pin | CMD_ALIM_LCD_Pin |CMD_ALIM_BLE_Pin|CS_FLASH_Pin;

  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bf6:	2301      	movs	r3, #1
 8001bf8:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bfa:	2300      	movs	r3, #0
 8001bfc:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001bfe:	2300      	movs	r3, #0
 8001c00:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c02:	f107 031c 	add.w	r3, r7, #28
 8001c06:	4619      	mov	r1, r3
 8001c08:	483e      	ldr	r0, [pc, #248]	; (8001d04 <MX_GPIO_Init+0x2d4>)
 8001c0a:	f001 ffff 	bl	8003c0c <HAL_GPIO_Init>

  /*Configure GPIO pins : TP_INT_Pin FLT_Pin */
  GPIO_InitStruct.Pin = TP_INT_Pin|FLT_Pin;
 8001c0e:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 8001c12:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001c14:	4b3d      	ldr	r3, [pc, #244]	; (8001d0c <MX_GPIO_Init+0x2dc>)
 8001c16:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c18:	2300      	movs	r3, #0
 8001c1a:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c1c:	f107 031c 	add.w	r3, r7, #28
 8001c20:	4619      	mov	r1, r3
 8001c22:	4838      	ldr	r0, [pc, #224]	; (8001d04 <MX_GPIO_Init+0x2d4>)
 8001c24:	f001 fff2 	bl	8003c0c <HAL_GPIO_Init>

  /*Configure GPIO pin : CMD_ON_OFF_Pin */
  GPIO_InitStruct.Pin = CMD_ON_OFF_Pin;
 8001c28:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001c2c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8001c2e:	4b38      	ldr	r3, [pc, #224]	; (8001d10 <MX_GPIO_Init+0x2e0>)
 8001c30:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c32:	2300      	movs	r3, #0
 8001c34:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(CMD_ON_OFF_GPIO_Port, &GPIO_InitStruct);
 8001c36:	f107 031c 	add.w	r3, r7, #28
 8001c3a:	4619      	mov	r1, r3
 8001c3c:	4831      	ldr	r0, [pc, #196]	; (8001d04 <MX_GPIO_Init+0x2d4>)
 8001c3e:	f001 ffe5 	bl	8003c0c <HAL_GPIO_Init>

  /*Configure GPIO pin : PC9 */
  GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c42:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001c46:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001c48:	2312      	movs	r3, #18
 8001c4a:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001c4c:	2301      	movs	r3, #1
 8001c4e:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c50:	2303      	movs	r3, #3
 8001c52:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c54:	2304      	movs	r3, #4
 8001c56:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c58:	f107 031c 	add.w	r3, r7, #28
 8001c5c:	4619      	mov	r1, r3
 8001c5e:	4827      	ldr	r0, [pc, #156]	; (8001cfc <MX_GPIO_Init+0x2cc>)
 8001c60:	f001 ffd4 	bl	8003c0c <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c64:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001c68:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001c6a:	2312      	movs	r3, #18
 8001c6c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001c6e:	2301      	movs	r3, #1
 8001c70:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c72:	2303      	movs	r3, #3
 8001c74:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c76:	2304      	movs	r3, #4
 8001c78:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c7a:	f107 031c 	add.w	r3, r7, #28
 8001c7e:	4619      	mov	r1, r3
 8001c80:	481f      	ldr	r0, [pc, #124]	; (8001d00 <MX_GPIO_Init+0x2d0>)
 8001c82:	f001 ffc3 	bl	8003c0c <HAL_GPIO_Init>

  /*Configure GPIO pins : POWER_OK3_Pin POWER_OK2_Pin */
  GPIO_InitStruct.Pin = POWER_OK3_Pin|POWER_OK2_Pin;
 8001c86:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8001c8a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001c8c:	2300      	movs	r3, #0
 8001c8e:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c90:	2300      	movs	r3, #0
 8001c92:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c94:	f107 031c 	add.w	r3, r7, #28
 8001c98:	4619      	mov	r1, r3
 8001c9a:	4819      	ldr	r0, [pc, #100]	; (8001d00 <MX_GPIO_Init+0x2d0>)
 8001c9c:	f001 ffb6 	bl	8003c0c <HAL_GPIO_Init>

  /*Configure GPIO pins : PB3 PB4 */
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4;
 8001ca0:	2318      	movs	r3, #24
 8001ca2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca4:	2302      	movs	r3, #2
 8001ca6:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ca8:	2300      	movs	r3, #0
 8001caa:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cac:	2303      	movs	r3, #3
 8001cae:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8001cb0:	2305      	movs	r3, #5
 8001cb2:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cb4:	f107 031c 	add.w	r3, r7, #28
 8001cb8:	4619      	mov	r1, r3
 8001cba:	4813      	ldr	r0, [pc, #76]	; (8001d08 <MX_GPIO_Init+0x2d8>)
 8001cbc:	f001 ffa6 	bl	8003c0c <HAL_GPIO_Init>

  /*Configure GPIO pin : CMD_WP_MEM_Pin */
  GPIO_InitStruct.Pin = CMD_WP_MEM_Pin;
 8001cc0:	2320      	movs	r3, #32
 8001cc2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001cc4:	2301      	movs	r3, #1
 8001cc6:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cc8:	2300      	movs	r3, #0
 8001cca:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ccc:	2300      	movs	r3, #0
 8001cce:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(CMD_WP_MEM_GPIO_Port, &GPIO_InitStruct);
 8001cd0:	f107 031c 	add.w	r3, r7, #28
 8001cd4:	4619      	mov	r1, r3
 8001cd6:	480c      	ldr	r0, [pc, #48]	; (8001d08 <MX_GPIO_Init+0x2d8>)
 8001cd8:	f001 ff98 	bl	8003c0c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8001cdc:	2200      	movs	r2, #0
 8001cde:	2100      	movs	r1, #0
 8001ce0:	2028      	movs	r0, #40	; 0x28
 8001ce2:	f001 fbba 	bl	800345a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001ce6:	2028      	movs	r0, #40	; 0x28
 8001ce8:	f001 fbd3 	bl	8003492 <HAL_NVIC_EnableIRQ>

}
 8001cec:	bf00      	nop
 8001cee:	3730      	adds	r7, #48	; 0x30
 8001cf0:	46bd      	mov	sp, r7
 8001cf2:	bd80      	pop	{r7, pc}
 8001cf4:	40023800 	.word	0x40023800
 8001cf8:	40021000 	.word	0x40021000
 8001cfc:	40020800 	.word	0x40020800
 8001d00:	40020000 	.word	0x40020000
 8001d04:	40020c00 	.word	0x40020c00
 8001d08:	40020400 	.word	0x40020400
 8001d0c:	10110000 	.word	0x10110000
 8001d10:	10310000 	.word	0x10310000

08001d14 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001d14:	b480      	push	{r7}
 8001d16:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001d18:	bf00      	nop
 8001d1a:	46bd      	mov	sp, r7
 8001d1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d20:	4770      	bx	lr
	...

08001d24 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                            /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001d24:	b480      	push	{r7}
 8001d26:	b083      	sub	sp, #12
 8001d28:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001d2a:	2300      	movs	r3, #0
 8001d2c:	607b      	str	r3, [r7, #4]
 8001d2e:	4b10      	ldr	r3, [pc, #64]	; (8001d70 <HAL_MspInit+0x4c>)
 8001d30:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001d32:	4a0f      	ldr	r2, [pc, #60]	; (8001d70 <HAL_MspInit+0x4c>)
 8001d34:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001d38:	6453      	str	r3, [r2, #68]	; 0x44
 8001d3a:	4b0d      	ldr	r3, [pc, #52]	; (8001d70 <HAL_MspInit+0x4c>)
 8001d3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001d3e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001d42:	607b      	str	r3, [r7, #4]
 8001d44:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001d46:	2300      	movs	r3, #0
 8001d48:	603b      	str	r3, [r7, #0]
 8001d4a:	4b09      	ldr	r3, [pc, #36]	; (8001d70 <HAL_MspInit+0x4c>)
 8001d4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d4e:	4a08      	ldr	r2, [pc, #32]	; (8001d70 <HAL_MspInit+0x4c>)
 8001d50:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001d54:	6413      	str	r3, [r2, #64]	; 0x40
 8001d56:	4b06      	ldr	r3, [pc, #24]	; (8001d70 <HAL_MspInit+0x4c>)
 8001d58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d5a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001d5e:	603b      	str	r3, [r7, #0]
 8001d60:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001d62:	bf00      	nop
 8001d64:	370c      	adds	r7, #12
 8001d66:	46bd      	mov	sp, r7
 8001d68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d6c:	4770      	bx	lr
 8001d6e:	bf00      	nop
 8001d70:	40023800 	.word	0x40023800

08001d74 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8001d74:	b480      	push	{r7}
 8001d76:	b085      	sub	sp, #20
 8001d78:	af00      	add	r7, sp, #0
 8001d7a:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001d7c:	687b      	ldr	r3, [r7, #4]
 8001d7e:	681b      	ldr	r3, [r3, #0]
 8001d80:	4a0b      	ldr	r2, [pc, #44]	; (8001db0 <HAL_CRC_MspInit+0x3c>)
 8001d82:	4293      	cmp	r3, r2
 8001d84:	d10d      	bne.n	8001da2 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001d86:	2300      	movs	r3, #0
 8001d88:	60fb      	str	r3, [r7, #12]
 8001d8a:	4b0a      	ldr	r3, [pc, #40]	; (8001db4 <HAL_CRC_MspInit+0x40>)
 8001d8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d8e:	4a09      	ldr	r2, [pc, #36]	; (8001db4 <HAL_CRC_MspInit+0x40>)
 8001d90:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001d94:	6313      	str	r3, [r2, #48]	; 0x30
 8001d96:	4b07      	ldr	r3, [pc, #28]	; (8001db4 <HAL_CRC_MspInit+0x40>)
 8001d98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d9a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001d9e:	60fb      	str	r3, [r7, #12]
 8001da0:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001da2:	bf00      	nop
 8001da4:	3714      	adds	r7, #20
 8001da6:	46bd      	mov	sp, r7
 8001da8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dac:	4770      	bx	lr
 8001dae:	bf00      	nop
 8001db0:	40023000 	.word	0x40023000
 8001db4:	40023800 	.word	0x40023800

08001db8 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001db8:	b580      	push	{r7, lr}
 8001dba:	b08a      	sub	sp, #40	; 0x28
 8001dbc:	af00      	add	r7, sp, #0
 8001dbe:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dc0:	f107 0314 	add.w	r3, r7, #20
 8001dc4:	2200      	movs	r2, #0
 8001dc6:	601a      	str	r2, [r3, #0]
 8001dc8:	605a      	str	r2, [r3, #4]
 8001dca:	609a      	str	r2, [r3, #8]
 8001dcc:	60da      	str	r2, [r3, #12]
 8001dce:	611a      	str	r2, [r3, #16]
  if(hdac->Instance==DAC)
 8001dd0:	687b      	ldr	r3, [r7, #4]
 8001dd2:	681b      	ldr	r3, [r3, #0]
 8001dd4:	4a17      	ldr	r2, [pc, #92]	; (8001e34 <HAL_DAC_MspInit+0x7c>)
 8001dd6:	4293      	cmp	r3, r2
 8001dd8:	d127      	bne.n	8001e2a <HAL_DAC_MspInit+0x72>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001dda:	2300      	movs	r3, #0
 8001ddc:	613b      	str	r3, [r7, #16]
 8001dde:	4b16      	ldr	r3, [pc, #88]	; (8001e38 <HAL_DAC_MspInit+0x80>)
 8001de0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001de2:	4a15      	ldr	r2, [pc, #84]	; (8001e38 <HAL_DAC_MspInit+0x80>)
 8001de4:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8001de8:	6413      	str	r3, [r2, #64]	; 0x40
 8001dea:	4b13      	ldr	r3, [pc, #76]	; (8001e38 <HAL_DAC_MspInit+0x80>)
 8001dec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001dee:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8001df2:	613b      	str	r3, [r7, #16]
 8001df4:	693b      	ldr	r3, [r7, #16]
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001df6:	2300      	movs	r3, #0
 8001df8:	60fb      	str	r3, [r7, #12]
 8001dfa:	4b0f      	ldr	r3, [pc, #60]	; (8001e38 <HAL_DAC_MspInit+0x80>)
 8001dfc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dfe:	4a0e      	ldr	r2, [pc, #56]	; (8001e38 <HAL_DAC_MspInit+0x80>)
 8001e00:	f043 0301 	orr.w	r3, r3, #1
 8001e04:	6313      	str	r3, [r2, #48]	; 0x30
 8001e06:	4b0c      	ldr	r3, [pc, #48]	; (8001e38 <HAL_DAC_MspInit+0x80>)
 8001e08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e0a:	f003 0301 	and.w	r3, r3, #1
 8001e0e:	60fb      	str	r3, [r7, #12]
 8001e10:	68fb      	ldr	r3, [r7, #12]
    /**DAC GPIO Configuration    
    PA5     ------> DAC_OUT2 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 8001e12:	2320      	movs	r3, #32
 8001e14:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001e16:	2303      	movs	r3, #3
 8001e18:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e1a:	2300      	movs	r3, #0
 8001e1c:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e1e:	f107 0314 	add.w	r3, r7, #20
 8001e22:	4619      	mov	r1, r3
 8001e24:	4805      	ldr	r0, [pc, #20]	; (8001e3c <HAL_DAC_MspInit+0x84>)
 8001e26:	f001 fef1 	bl	8003c0c <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001e2a:	bf00      	nop
 8001e2c:	3728      	adds	r7, #40	; 0x28
 8001e2e:	46bd      	mov	sp, r7
 8001e30:	bd80      	pop	{r7, pc}
 8001e32:	bf00      	nop
 8001e34:	40007400 	.word	0x40007400
 8001e38:	40023800 	.word	0x40023800
 8001e3c:	40020000 	.word	0x40020000

08001e40 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001e40:	b480      	push	{r7}
 8001e42:	b085      	sub	sp, #20
 8001e44:	af00      	add	r7, sp, #0
 8001e46:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 8001e48:	687b      	ldr	r3, [r7, #4]
 8001e4a:	681b      	ldr	r3, [r3, #0]
 8001e4c:	4a0b      	ldr	r2, [pc, #44]	; (8001e7c <HAL_DMA2D_MspInit+0x3c>)
 8001e4e:	4293      	cmp	r3, r2
 8001e50:	d10d      	bne.n	8001e6e <HAL_DMA2D_MspInit+0x2e>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001e52:	2300      	movs	r3, #0
 8001e54:	60fb      	str	r3, [r7, #12]
 8001e56:	4b0a      	ldr	r3, [pc, #40]	; (8001e80 <HAL_DMA2D_MspInit+0x40>)
 8001e58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e5a:	4a09      	ldr	r2, [pc, #36]	; (8001e80 <HAL_DMA2D_MspInit+0x40>)
 8001e5c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001e60:	6313      	str	r3, [r2, #48]	; 0x30
 8001e62:	4b07      	ldr	r3, [pc, #28]	; (8001e80 <HAL_DMA2D_MspInit+0x40>)
 8001e64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e66:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001e6a:	60fb      	str	r3, [r7, #12]
 8001e6c:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001e6e:	bf00      	nop
 8001e70:	3714      	adds	r7, #20
 8001e72:	46bd      	mov	sp, r7
 8001e74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e78:	4770      	bx	lr
 8001e7a:	bf00      	nop
 8001e7c:	4002b000 	.word	0x4002b000
 8001e80:	40023800 	.word	0x40023800

08001e84 <HAL_DMA2D_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001e84:	b480      	push	{r7}
 8001e86:	b083      	sub	sp, #12
 8001e88:	af00      	add	r7, sp, #0
 8001e8a:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 8001e8c:	687b      	ldr	r3, [r7, #4]
 8001e8e:	681b      	ldr	r3, [r3, #0]
 8001e90:	4a07      	ldr	r2, [pc, #28]	; (8001eb0 <HAL_DMA2D_MspDeInit+0x2c>)
 8001e92:	4293      	cmp	r3, r2
 8001e94:	d105      	bne.n	8001ea2 <HAL_DMA2D_MspDeInit+0x1e>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 8001e96:	4b07      	ldr	r3, [pc, #28]	; (8001eb4 <HAL_DMA2D_MspDeInit+0x30>)
 8001e98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e9a:	4a06      	ldr	r2, [pc, #24]	; (8001eb4 <HAL_DMA2D_MspDeInit+0x30>)
 8001e9c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001ea0:	6313      	str	r3, [r2, #48]	; 0x30
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 8001ea2:	bf00      	nop
 8001ea4:	370c      	adds	r7, #12
 8001ea6:	46bd      	mov	sp, r7
 8001ea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eac:	4770      	bx	lr
 8001eae:	bf00      	nop
 8001eb0:	4002b000 	.word	0x4002b000
 8001eb4:	40023800 	.word	0x40023800

08001eb8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001eb8:	b580      	push	{r7, lr}
 8001eba:	b08a      	sub	sp, #40	; 0x28
 8001ebc:	af00      	add	r7, sp, #0
 8001ebe:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ec0:	f107 0314 	add.w	r3, r7, #20
 8001ec4:	2200      	movs	r2, #0
 8001ec6:	601a      	str	r2, [r3, #0]
 8001ec8:	605a      	str	r2, [r3, #4]
 8001eca:	609a      	str	r2, [r3, #8]
 8001ecc:	60da      	str	r2, [r3, #12]
 8001ece:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8001ed0:	687b      	ldr	r3, [r7, #4]
 8001ed2:	681b      	ldr	r3, [r3, #0]
 8001ed4:	4a19      	ldr	r2, [pc, #100]	; (8001f3c <HAL_I2C_MspInit+0x84>)
 8001ed6:	4293      	cmp	r3, r2
 8001ed8:	d12b      	bne.n	8001f32 <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */
  
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001eda:	2300      	movs	r3, #0
 8001edc:	613b      	str	r3, [r7, #16]
 8001ede:	4b18      	ldr	r3, [pc, #96]	; (8001f40 <HAL_I2C_MspInit+0x88>)
 8001ee0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ee2:	4a17      	ldr	r2, [pc, #92]	; (8001f40 <HAL_I2C_MspInit+0x88>)
 8001ee4:	f043 0302 	orr.w	r3, r3, #2
 8001ee8:	6313      	str	r3, [r2, #48]	; 0x30
 8001eea:	4b15      	ldr	r3, [pc, #84]	; (8001f40 <HAL_I2C_MspInit+0x88>)
 8001eec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001eee:	f003 0302 	and.w	r3, r3, #2
 8001ef2:	613b      	str	r3, [r7, #16]
 8001ef4:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration    
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001ef6:	23c0      	movs	r3, #192	; 0xc0
 8001ef8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001efa:	2312      	movs	r3, #18
 8001efc:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001efe:	2301      	movs	r3, #1
 8001f00:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f02:	2303      	movs	r3, #3
 8001f04:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001f06:	2304      	movs	r3, #4
 8001f08:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f0a:	f107 0314 	add.w	r3, r7, #20
 8001f0e:	4619      	mov	r1, r3
 8001f10:	480c      	ldr	r0, [pc, #48]	; (8001f44 <HAL_I2C_MspInit+0x8c>)
 8001f12:	f001 fe7b 	bl	8003c0c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001f16:	2300      	movs	r3, #0
 8001f18:	60fb      	str	r3, [r7, #12]
 8001f1a:	4b09      	ldr	r3, [pc, #36]	; (8001f40 <HAL_I2C_MspInit+0x88>)
 8001f1c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f1e:	4a08      	ldr	r2, [pc, #32]	; (8001f40 <HAL_I2C_MspInit+0x88>)
 8001f20:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001f24:	6413      	str	r3, [r2, #64]	; 0x40
 8001f26:	4b06      	ldr	r3, [pc, #24]	; (8001f40 <HAL_I2C_MspInit+0x88>)
 8001f28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f2a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001f2e:	60fb      	str	r3, [r7, #12]
 8001f30:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001f32:	bf00      	nop
 8001f34:	3728      	adds	r7, #40	; 0x28
 8001f36:	46bd      	mov	sp, r7
 8001f38:	bd80      	pop	{r7, pc}
 8001f3a:	bf00      	nop
 8001f3c:	40005400 	.word	0x40005400
 8001f40:	40023800 	.word	0x40023800
 8001f44:	40020400 	.word	0x40020400

08001f48 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001f48:	b580      	push	{r7, lr}
 8001f4a:	b08e      	sub	sp, #56	; 0x38
 8001f4c:	af00      	add	r7, sp, #0
 8001f4e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f50:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001f54:	2200      	movs	r2, #0
 8001f56:	601a      	str	r2, [r3, #0]
 8001f58:	605a      	str	r2, [r3, #4]
 8001f5a:	609a      	str	r2, [r3, #8]
 8001f5c:	60da      	str	r2, [r3, #12]
 8001f5e:	611a      	str	r2, [r3, #16]
  if(hltdc->Instance==LTDC)
 8001f60:	687b      	ldr	r3, [r7, #4]
 8001f62:	681b      	ldr	r3, [r3, #0]
 8001f64:	4a67      	ldr	r2, [pc, #412]	; (8002104 <HAL_LTDC_MspInit+0x1bc>)
 8001f66:	4293      	cmp	r3, r2
 8001f68:	f040 80c8 	bne.w	80020fc <HAL_LTDC_MspInit+0x1b4>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001f6c:	2300      	movs	r3, #0
 8001f6e:	623b      	str	r3, [r7, #32]
 8001f70:	4b65      	ldr	r3, [pc, #404]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001f72:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f74:	4a64      	ldr	r2, [pc, #400]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001f76:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001f7a:	6453      	str	r3, [r2, #68]	; 0x44
 8001f7c:	4b62      	ldr	r3, [pc, #392]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001f7e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f80:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001f84:	623b      	str	r3, [r7, #32]
 8001f86:	6a3b      	ldr	r3, [r7, #32]
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f88:	2300      	movs	r3, #0
 8001f8a:	61fb      	str	r3, [r7, #28]
 8001f8c:	4b5e      	ldr	r3, [pc, #376]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001f8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f90:	4a5d      	ldr	r2, [pc, #372]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001f92:	f043 0301 	orr.w	r3, r3, #1
 8001f96:	6313      	str	r3, [r2, #48]	; 0x30
 8001f98:	4b5b      	ldr	r3, [pc, #364]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001f9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f9c:	f003 0301 	and.w	r3, r3, #1
 8001fa0:	61fb      	str	r3, [r7, #28]
 8001fa2:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001fa4:	2300      	movs	r3, #0
 8001fa6:	61bb      	str	r3, [r7, #24]
 8001fa8:	4b57      	ldr	r3, [pc, #348]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001faa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fac:	4a56      	ldr	r2, [pc, #344]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001fae:	f043 0302 	orr.w	r3, r3, #2
 8001fb2:	6313      	str	r3, [r2, #48]	; 0x30
 8001fb4:	4b54      	ldr	r3, [pc, #336]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001fb6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fb8:	f003 0302 	and.w	r3, r3, #2
 8001fbc:	61bb      	str	r3, [r7, #24]
 8001fbe:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8001fc0:	2300      	movs	r3, #0
 8001fc2:	617b      	str	r3, [r7, #20]
 8001fc4:	4b50      	ldr	r3, [pc, #320]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001fc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fc8:	4a4f      	ldr	r2, [pc, #316]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001fca:	f043 0310 	orr.w	r3, r3, #16
 8001fce:	6313      	str	r3, [r2, #48]	; 0x30
 8001fd0:	4b4d      	ldr	r3, [pc, #308]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001fd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fd4:	f003 0310 	and.w	r3, r3, #16
 8001fd8:	617b      	str	r3, [r7, #20]
 8001fda:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001fdc:	2300      	movs	r3, #0
 8001fde:	613b      	str	r3, [r7, #16]
 8001fe0:	4b49      	ldr	r3, [pc, #292]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001fe2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fe4:	4a48      	ldr	r2, [pc, #288]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001fe6:	f043 0308 	orr.w	r3, r3, #8
 8001fea:	6313      	str	r3, [r2, #48]	; 0x30
 8001fec:	4b46      	ldr	r3, [pc, #280]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001fee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ff0:	f003 0308 	and.w	r3, r3, #8
 8001ff4:	613b      	str	r3, [r7, #16]
 8001ff6:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ff8:	2300      	movs	r3, #0
 8001ffa:	60fb      	str	r3, [r7, #12]
 8001ffc:	4b42      	ldr	r3, [pc, #264]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8001ffe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002000:	4a41      	ldr	r2, [pc, #260]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 8002002:	f043 0304 	orr.w	r3, r3, #4
 8002006:	6313      	str	r3, [r2, #48]	; 0x30
 8002008:	4b3f      	ldr	r3, [pc, #252]	; (8002108 <HAL_LTDC_MspInit+0x1c0>)
 800200a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800200c:	f003 0304 	and.w	r3, r3, #4
 8002010:	60fb      	str	r3, [r7, #12]
 8002012:	68fb      	ldr	r3, [r7, #12]
    PA12     ------> LTDC_R5
    PD3     ------> LTDC_G7
    PB8     ------> LTDC_B6
    PB9     ------> LTDC_B7 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11 
 8002014:	f641 0358 	movw	r3, #6232	; 0x1858
 8002018:	627b      	str	r3, [r7, #36]	; 0x24
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800201a:	2302      	movs	r3, #2
 800201c:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800201e:	2300      	movs	r3, #0
 8002020:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002022:	2300      	movs	r3, #0
 8002024:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002026:	230e      	movs	r3, #14
 8002028:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800202a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800202e:	4619      	mov	r1, r3
 8002030:	4836      	ldr	r0, [pc, #216]	; (800210c <HAL_LTDC_MspInit+0x1c4>)
 8002032:	f001 fdeb 	bl	8003c0c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002036:	2303      	movs	r3, #3
 8002038:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800203a:	2302      	movs	r3, #2
 800203c:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800203e:	2300      	movs	r3, #0
 8002040:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002042:	2300      	movs	r3, #0
 8002044:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002046:	2309      	movs	r3, #9
 8002048:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800204a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800204e:	4619      	mov	r1, r3
 8002050:	482f      	ldr	r0, [pc, #188]	; (8002110 <HAL_LTDC_MspInit+0x1c8>)
 8002052:	f001 fddb 	bl	8003c0c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 8002056:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 800205a:	627b      	str	r3, [r7, #36]	; 0x24
                          |GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800205c:	2302      	movs	r3, #2
 800205e:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002060:	2300      	movs	r3, #0
 8002062:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002064:	2300      	movs	r3, #0
 8002066:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002068:	230e      	movs	r3, #14
 800206a:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800206c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002070:	4619      	mov	r1, r3
 8002072:	4828      	ldr	r0, [pc, #160]	; (8002114 <HAL_LTDC_MspInit+0x1cc>)
 8002074:	f001 fdca 	bl	8003c0c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002078:	f44f 6370 	mov.w	r3, #3840	; 0xf00
 800207c:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800207e:	2302      	movs	r3, #2
 8002080:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002082:	2300      	movs	r3, #0
 8002084:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002086:	2300      	movs	r3, #0
 8002088:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800208a:	230e      	movs	r3, #14
 800208c:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800208e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002092:	4619      	mov	r1, r3
 8002094:	481e      	ldr	r0, [pc, #120]	; (8002110 <HAL_LTDC_MspInit+0x1c8>)
 8002096:	f001 fdb9 	bl	8003c0c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_3;
 800209a:	f44f 6381 	mov.w	r3, #1032	; 0x408
 800209e:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020a0:	2302      	movs	r3, #2
 80020a2:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020a4:	2300      	movs	r3, #0
 80020a6:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80020a8:	2300      	movs	r3, #0
 80020aa:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020ac:	230e      	movs	r3, #14
 80020ae:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020b0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80020b4:	4619      	mov	r1, r3
 80020b6:	4818      	ldr	r0, [pc, #96]	; (8002118 <HAL_LTDC_MspInit+0x1d0>)
 80020b8:	f001 fda8 	bl	8003c0c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80020bc:	23c0      	movs	r3, #192	; 0xc0
 80020be:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020c0:	2302      	movs	r3, #2
 80020c2:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020c4:	2300      	movs	r3, #0
 80020c6:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80020c8:	2300      	movs	r3, #0
 80020ca:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020cc:	230e      	movs	r3, #14
 80020ce:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020d0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80020d4:	4619      	mov	r1, r3
 80020d6:	4811      	ldr	r0, [pc, #68]	; (800211c <HAL_LTDC_MspInit+0x1d4>)
 80020d8:	f001 fd98 	bl	8003c0c <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 0, 0);
 80020dc:	2200      	movs	r2, #0
 80020de:	2100      	movs	r1, #0
 80020e0:	2058      	movs	r0, #88	; 0x58
 80020e2:	f001 f9ba 	bl	800345a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80020e6:	2058      	movs	r0, #88	; 0x58
 80020e8:	f001 f9d3 	bl	8003492 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(LTDC_ER_IRQn, 0, 0);
 80020ec:	2200      	movs	r2, #0
 80020ee:	2100      	movs	r1, #0
 80020f0:	2059      	movs	r0, #89	; 0x59
 80020f2:	f001 f9b2 	bl	800345a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_ER_IRQn);
 80020f6:	2059      	movs	r0, #89	; 0x59
 80020f8:	f001 f9cb 	bl	8003492 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80020fc:	bf00      	nop
 80020fe:	3738      	adds	r7, #56	; 0x38
 8002100:	46bd      	mov	sp, r7
 8002102:	bd80      	pop	{r7, pc}
 8002104:	40016800 	.word	0x40016800
 8002108:	40023800 	.word	0x40023800
 800210c:	40020000 	.word	0x40020000
 8002110:	40020400 	.word	0x40020400
 8002114:	40021000 	.word	0x40021000
 8002118:	40020c00 	.word	0x40020c00
 800211c:	40020800 	.word	0x40020800

08002120 <HAL_LTDC_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspDeInit(LTDC_HandleTypeDef* hltdc)
{
 8002120:	b580      	push	{r7, lr}
 8002122:	b082      	sub	sp, #8
 8002124:	af00      	add	r7, sp, #0
 8002126:	6078      	str	r0, [r7, #4]
  if(hltdc->Instance==LTDC)
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	681b      	ldr	r3, [r3, #0]
 800212c:	4a15      	ldr	r2, [pc, #84]	; (8002184 <HAL_LTDC_MspDeInit+0x64>)
 800212e:	4293      	cmp	r3, r2
 8002130:	d123      	bne.n	800217a <HAL_LTDC_MspDeInit+0x5a>
  {
  /* USER CODE BEGIN LTDC_MspDeInit 0 */

  /* USER CODE END LTDC_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_LTDC_CLK_DISABLE();
 8002132:	4b15      	ldr	r3, [pc, #84]	; (8002188 <HAL_LTDC_MspDeInit+0x68>)
 8002134:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002136:	4a14      	ldr	r2, [pc, #80]	; (8002188 <HAL_LTDC_MspDeInit+0x68>)
 8002138:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800213c:	6453      	str	r3, [r2, #68]	; 0x44
    PA12     ------> LTDC_R5
    PD3     ------> LTDC_G7
    PB8     ------> LTDC_B6
    PB9     ------> LTDC_B7 
    */
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11 
 800213e:	f641 0158 	movw	r1, #6232	; 0x1858
 8002142:	4812      	ldr	r0, [pc, #72]	; (800218c <HAL_LTDC_MspDeInit+0x6c>)
 8002144:	f001 ff0c 	bl	8003f60 <HAL_GPIO_DeInit>
                          |GPIO_PIN_12);

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_10|GPIO_PIN_11 
 8002148:	f640 7103 	movw	r1, #3843	; 0xf03
 800214c:	4810      	ldr	r0, [pc, #64]	; (8002190 <HAL_LTDC_MspDeInit+0x70>)
 800214e:	f001 ff07 	bl	8003f60 <HAL_GPIO_DeInit>
                          |GPIO_PIN_8|GPIO_PIN_9);

    HAL_GPIO_DeInit(GPIOE, GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 8002152:	f44f 4178 	mov.w	r1, #63488	; 0xf800
 8002156:	480f      	ldr	r0, [pc, #60]	; (8002194 <HAL_LTDC_MspDeInit+0x74>)
 8002158:	f001 ff02 	bl	8003f60 <HAL_GPIO_DeInit>
                          |GPIO_PIN_15);

    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_10|GPIO_PIN_3);
 800215c:	f44f 6181 	mov.w	r1, #1032	; 0x408
 8002160:	480d      	ldr	r0, [pc, #52]	; (8002198 <HAL_LTDC_MspDeInit+0x78>)
 8002162:	f001 fefd 	bl	8003f60 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOC, GPIO_PIN_6|GPIO_PIN_7);
 8002166:	21c0      	movs	r1, #192	; 0xc0
 8002168:	480c      	ldr	r0, [pc, #48]	; (800219c <HAL_LTDC_MspDeInit+0x7c>)
 800216a:	f001 fef9 	bl	8003f60 <HAL_GPIO_DeInit>

    /* LTDC interrupt DeInit */
    HAL_NVIC_DisableIRQ(LTDC_IRQn);
 800216e:	2058      	movs	r0, #88	; 0x58
 8002170:	f001 f99d 	bl	80034ae <HAL_NVIC_DisableIRQ>
    HAL_NVIC_DisableIRQ(LTDC_ER_IRQn);
 8002174:	2059      	movs	r0, #89	; 0x59
 8002176:	f001 f99a 	bl	80034ae <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN LTDC_MspDeInit 1 */

  /* USER CODE END LTDC_MspDeInit 1 */
  }

}
 800217a:	bf00      	nop
 800217c:	3708      	adds	r7, #8
 800217e:	46bd      	mov	sp, r7
 8002180:	bd80      	pop	{r7, pc}
 8002182:	bf00      	nop
 8002184:	40016800 	.word	0x40016800
 8002188:	40023800 	.word	0x40023800
 800218c:	40020000 	.word	0x40020000
 8002190:	40020400 	.word	0x40020400
 8002194:	40021000 	.word	0x40021000
 8002198:	40020c00 	.word	0x40020c00
 800219c:	40020800 	.word	0x40020800

080021a0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80021a0:	b580      	push	{r7, lr}
 80021a2:	b08a      	sub	sp, #40	; 0x28
 80021a4:	af00      	add	r7, sp, #0
 80021a6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021a8:	f107 0314 	add.w	r3, r7, #20
 80021ac:	2200      	movs	r2, #0
 80021ae:	601a      	str	r2, [r3, #0]
 80021b0:	605a      	str	r2, [r3, #4]
 80021b2:	609a      	str	r2, [r3, #8]
 80021b4:	60da      	str	r2, [r3, #12]
 80021b6:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI3)
 80021b8:	687b      	ldr	r3, [r7, #4]
 80021ba:	681b      	ldr	r3, [r3, #0]
 80021bc:	4a19      	ldr	r2, [pc, #100]	; (8002224 <HAL_SPI_MspInit+0x84>)
 80021be:	4293      	cmp	r3, r2
 80021c0:	d12c      	bne.n	800221c <HAL_SPI_MspInit+0x7c>
  {
  /* USER CODE BEGIN SPI3_MspInit 0 */

  /* USER CODE END SPI3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI3_CLK_ENABLE();
 80021c2:	2300      	movs	r3, #0
 80021c4:	613b      	str	r3, [r7, #16]
 80021c6:	4b18      	ldr	r3, [pc, #96]	; (8002228 <HAL_SPI_MspInit+0x88>)
 80021c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021ca:	4a17      	ldr	r2, [pc, #92]	; (8002228 <HAL_SPI_MspInit+0x88>)
 80021cc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80021d0:	6413      	str	r3, [r2, #64]	; 0x40
 80021d2:	4b15      	ldr	r3, [pc, #84]	; (8002228 <HAL_SPI_MspInit+0x88>)
 80021d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021d6:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80021da:	613b      	str	r3, [r7, #16]
 80021dc:	693b      	ldr	r3, [r7, #16]
  
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80021de:	2300      	movs	r3, #0
 80021e0:	60fb      	str	r3, [r7, #12]
 80021e2:	4b11      	ldr	r3, [pc, #68]	; (8002228 <HAL_SPI_MspInit+0x88>)
 80021e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021e6:	4a10      	ldr	r2, [pc, #64]	; (8002228 <HAL_SPI_MspInit+0x88>)
 80021e8:	f043 0304 	orr.w	r3, r3, #4
 80021ec:	6313      	str	r3, [r2, #48]	; 0x30
 80021ee:	4b0e      	ldr	r3, [pc, #56]	; (8002228 <HAL_SPI_MspInit+0x88>)
 80021f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021f2:	f003 0304 	and.w	r3, r3, #4
 80021f6:	60fb      	str	r3, [r7, #12]
 80021f8:	68fb      	ldr	r3, [r7, #12]
    /**SPI3 GPIO Configuration    
    PC10     ------> SPI3_SCK
    PC12     ------> SPI3_MOSI 
    */
    GPIO_InitStruct.Pin = SCK_LCD_Pin|MOSI_LCD_Pin;
 80021fa:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80021fe:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002200:	2302      	movs	r3, #2
 8002202:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002204:	2300      	movs	r3, #0
 8002206:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002208:	2303      	movs	r3, #3
 800220a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 800220c:	2306      	movs	r3, #6
 800220e:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002210:	f107 0314 	add.w	r3, r7, #20
 8002214:	4619      	mov	r1, r3
 8002216:	4805      	ldr	r0, [pc, #20]	; (800222c <HAL_SPI_MspInit+0x8c>)
 8002218:	f001 fcf8 	bl	8003c0c <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI3_MspInit 1 */

  /* USER CODE END SPI3_MspInit 1 */
  }

}
 800221c:	bf00      	nop
 800221e:	3728      	adds	r7, #40	; 0x28
 8002220:	46bd      	mov	sp, r7
 8002222:	bd80      	pop	{r7, pc}
 8002224:	40003c00 	.word	0x40003c00
 8002228:	40023800 	.word	0x40023800
 800222c:	40020800 	.word	0x40020800

08002230 <HAL_SPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspDeInit(SPI_HandleTypeDef* hspi)
{
 8002230:	b580      	push	{r7, lr}
 8002232:	b082      	sub	sp, #8
 8002234:	af00      	add	r7, sp, #0
 8002236:	6078      	str	r0, [r7, #4]
  if(hspi->Instance==SPI3)
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	681b      	ldr	r3, [r3, #0]
 800223c:	4a08      	ldr	r2, [pc, #32]	; (8002260 <HAL_SPI_MspDeInit+0x30>)
 800223e:	4293      	cmp	r3, r2
 8002240:	d10a      	bne.n	8002258 <HAL_SPI_MspDeInit+0x28>
  {
  /* USER CODE BEGIN SPI3_MspDeInit 0 */

  /* USER CODE END SPI3_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_SPI3_CLK_DISABLE();
 8002242:	4b08      	ldr	r3, [pc, #32]	; (8002264 <HAL_SPI_MspDeInit+0x34>)
 8002244:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002246:	4a07      	ldr	r2, [pc, #28]	; (8002264 <HAL_SPI_MspDeInit+0x34>)
 8002248:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800224c:	6413      	str	r3, [r2, #64]	; 0x40
  
    /**SPI3 GPIO Configuration    
    PC10     ------> SPI3_SCK
    PC12     ------> SPI3_MOSI 
    */
    HAL_GPIO_DeInit(GPIOC, SCK_LCD_Pin|MOSI_LCD_Pin);
 800224e:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8002252:	4805      	ldr	r0, [pc, #20]	; (8002268 <HAL_SPI_MspDeInit+0x38>)
 8002254:	f001 fe84 	bl	8003f60 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN SPI3_MspDeInit 1 */

  /* USER CODE END SPI3_MspDeInit 1 */
  }

}
 8002258:	bf00      	nop
 800225a:	3708      	adds	r7, #8
 800225c:	46bd      	mov	sp, r7
 800225e:	bd80      	pop	{r7, pc}
 8002260:	40003c00 	.word	0x40003c00
 8002264:	40023800 	.word	0x40023800
 8002268:	40020800 	.word	0x40020800

0800226c <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 800226c:	b480      	push	{r7}
 800226e:	b085      	sub	sp, #20
 8002270:	af00      	add	r7, sp, #0
 8002272:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	681b      	ldr	r3, [r3, #0]
 8002278:	4a0b      	ldr	r2, [pc, #44]	; (80022a8 <HAL_TIM_Base_MspInit+0x3c>)
 800227a:	4293      	cmp	r3, r2
 800227c:	d10d      	bne.n	800229a <HAL_TIM_Base_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800227e:	2300      	movs	r3, #0
 8002280:	60fb      	str	r3, [r7, #12]
 8002282:	4b0a      	ldr	r3, [pc, #40]	; (80022ac <HAL_TIM_Base_MspInit+0x40>)
 8002284:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002286:	4a09      	ldr	r2, [pc, #36]	; (80022ac <HAL_TIM_Base_MspInit+0x40>)
 8002288:	f043 0301 	orr.w	r3, r3, #1
 800228c:	6453      	str	r3, [r2, #68]	; 0x44
 800228e:	4b07      	ldr	r3, [pc, #28]	; (80022ac <HAL_TIM_Base_MspInit+0x40>)
 8002290:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002292:	f003 0301 	and.w	r3, r3, #1
 8002296:	60fb      	str	r3, [r7, #12]
 8002298:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 800229a:	bf00      	nop
 800229c:	3714      	adds	r7, #20
 800229e:	46bd      	mov	sp, r7
 80022a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022a4:	4770      	bx	lr
 80022a6:	bf00      	nop
 80022a8:	40010000 	.word	0x40010000
 80022ac:	40023800 	.word	0x40023800

080022b0 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 80022b0:	b480      	push	{r7}
 80022b2:	b087      	sub	sp, #28
 80022b4:	af00      	add	r7, sp, #0
 80022b6:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM2)
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	681b      	ldr	r3, [r3, #0]
 80022bc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80022c0:	d10e      	bne.n	80022e0 <HAL_TIM_PWM_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80022c2:	2300      	movs	r3, #0
 80022c4:	617b      	str	r3, [r7, #20]
 80022c6:	4b1d      	ldr	r3, [pc, #116]	; (800233c <HAL_TIM_PWM_MspInit+0x8c>)
 80022c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022ca:	4a1c      	ldr	r2, [pc, #112]	; (800233c <HAL_TIM_PWM_MspInit+0x8c>)
 80022cc:	f043 0301 	orr.w	r3, r3, #1
 80022d0:	6413      	str	r3, [r2, #64]	; 0x40
 80022d2:	4b1a      	ldr	r3, [pc, #104]	; (800233c <HAL_TIM_PWM_MspInit+0x8c>)
 80022d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022d6:	f003 0301 	and.w	r3, r3, #1
 80022da:	617b      	str	r3, [r7, #20]
 80022dc:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 80022de:	e026      	b.n	800232e <HAL_TIM_PWM_MspInit+0x7e>
  else if(htim_pwm->Instance==TIM3)
 80022e0:	687b      	ldr	r3, [r7, #4]
 80022e2:	681b      	ldr	r3, [r3, #0]
 80022e4:	4a16      	ldr	r2, [pc, #88]	; (8002340 <HAL_TIM_PWM_MspInit+0x90>)
 80022e6:	4293      	cmp	r3, r2
 80022e8:	d10e      	bne.n	8002308 <HAL_TIM_PWM_MspInit+0x58>
    __HAL_RCC_TIM3_CLK_ENABLE();
 80022ea:	2300      	movs	r3, #0
 80022ec:	613b      	str	r3, [r7, #16]
 80022ee:	4b13      	ldr	r3, [pc, #76]	; (800233c <HAL_TIM_PWM_MspInit+0x8c>)
 80022f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022f2:	4a12      	ldr	r2, [pc, #72]	; (800233c <HAL_TIM_PWM_MspInit+0x8c>)
 80022f4:	f043 0302 	orr.w	r3, r3, #2
 80022f8:	6413      	str	r3, [r2, #64]	; 0x40
 80022fa:	4b10      	ldr	r3, [pc, #64]	; (800233c <HAL_TIM_PWM_MspInit+0x8c>)
 80022fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022fe:	f003 0302 	and.w	r3, r3, #2
 8002302:	613b      	str	r3, [r7, #16]
 8002304:	693b      	ldr	r3, [r7, #16]
}
 8002306:	e012      	b.n	800232e <HAL_TIM_PWM_MspInit+0x7e>
  else if(htim_pwm->Instance==TIM4)
 8002308:	687b      	ldr	r3, [r7, #4]
 800230a:	681b      	ldr	r3, [r3, #0]
 800230c:	4a0d      	ldr	r2, [pc, #52]	; (8002344 <HAL_TIM_PWM_MspInit+0x94>)
 800230e:	4293      	cmp	r3, r2
 8002310:	d10d      	bne.n	800232e <HAL_TIM_PWM_MspInit+0x7e>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8002312:	2300      	movs	r3, #0
 8002314:	60fb      	str	r3, [r7, #12]
 8002316:	4b09      	ldr	r3, [pc, #36]	; (800233c <HAL_TIM_PWM_MspInit+0x8c>)
 8002318:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800231a:	4a08      	ldr	r2, [pc, #32]	; (800233c <HAL_TIM_PWM_MspInit+0x8c>)
 800231c:	f043 0304 	orr.w	r3, r3, #4
 8002320:	6413      	str	r3, [r2, #64]	; 0x40
 8002322:	4b06      	ldr	r3, [pc, #24]	; (800233c <HAL_TIM_PWM_MspInit+0x8c>)
 8002324:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002326:	f003 0304 	and.w	r3, r3, #4
 800232a:	60fb      	str	r3, [r7, #12]
 800232c:	68fb      	ldr	r3, [r7, #12]
}
 800232e:	bf00      	nop
 8002330:	371c      	adds	r7, #28
 8002332:	46bd      	mov	sp, r7
 8002334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002338:	4770      	bx	lr
 800233a:	bf00      	nop
 800233c:	40023800 	.word	0x40023800
 8002340:	40000400 	.word	0x40000400
 8002344:	40000800 	.word	0x40000800

08002348 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002348:	b580      	push	{r7, lr}
 800234a:	b08a      	sub	sp, #40	; 0x28
 800234c:	af00      	add	r7, sp, #0
 800234e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002350:	f107 0314 	add.w	r3, r7, #20
 8002354:	2200      	movs	r2, #0
 8002356:	601a      	str	r2, [r3, #0]
 8002358:	605a      	str	r2, [r3, #4]
 800235a:	609a      	str	r2, [r3, #8]
 800235c:	60da      	str	r2, [r3, #12]
 800235e:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	681b      	ldr	r3, [r3, #0]
 8002364:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002368:	d11f      	bne.n	80023aa <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800236a:	2300      	movs	r3, #0
 800236c:	613b      	str	r3, [r7, #16]
 800236e:	4b35      	ldr	r3, [pc, #212]	; (8002444 <HAL_TIM_MspPostInit+0xfc>)
 8002370:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002372:	4a34      	ldr	r2, [pc, #208]	; (8002444 <HAL_TIM_MspPostInit+0xfc>)
 8002374:	f043 0301 	orr.w	r3, r3, #1
 8002378:	6313      	str	r3, [r2, #48]	; 0x30
 800237a:	4b32      	ldr	r3, [pc, #200]	; (8002444 <HAL_TIM_MspPostInit+0xfc>)
 800237c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800237e:	f003 0301 	and.w	r3, r3, #1
 8002382:	613b      	str	r3, [r7, #16]
 8002384:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration    
    PA15     ------> TIM2_CH1 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_15;
 8002386:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800238a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800238c:	2302      	movs	r3, #2
 800238e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002390:	2300      	movs	r3, #0
 8002392:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002394:	2300      	movs	r3, #0
 8002396:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8002398:	2301      	movs	r3, #1
 800239a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800239c:	f107 0314 	add.w	r3, r7, #20
 80023a0:	4619      	mov	r1, r3
 80023a2:	4829      	ldr	r0, [pc, #164]	; (8002448 <HAL_TIM_MspPostInit+0x100>)
 80023a4:	f001 fc32 	bl	8003c0c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 80023a8:	e048      	b.n	800243c <HAL_TIM_MspPostInit+0xf4>
  else if(htim->Instance==TIM3)
 80023aa:	687b      	ldr	r3, [r7, #4]
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	4a27      	ldr	r2, [pc, #156]	; (800244c <HAL_TIM_MspPostInit+0x104>)
 80023b0:	4293      	cmp	r3, r2
 80023b2:	d11f      	bne.n	80023f4 <HAL_TIM_MspPostInit+0xac>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80023b4:	2300      	movs	r3, #0
 80023b6:	60fb      	str	r3, [r7, #12]
 80023b8:	4b22      	ldr	r3, [pc, #136]	; (8002444 <HAL_TIM_MspPostInit+0xfc>)
 80023ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023bc:	4a21      	ldr	r2, [pc, #132]	; (8002444 <HAL_TIM_MspPostInit+0xfc>)
 80023be:	f043 0304 	orr.w	r3, r3, #4
 80023c2:	6313      	str	r3, [r2, #48]	; 0x30
 80023c4:	4b1f      	ldr	r3, [pc, #124]	; (8002444 <HAL_TIM_MspPostInit+0xfc>)
 80023c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023c8:	f003 0304 	and.w	r3, r3, #4
 80023cc:	60fb      	str	r3, [r7, #12]
 80023ce:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80023d0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80023d4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023d6:	2302      	movs	r3, #2
 80023d8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023da:	2300      	movs	r3, #0
 80023dc:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80023de:	2300      	movs	r3, #0
 80023e0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 80023e2:	2302      	movs	r3, #2
 80023e4:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023e6:	f107 0314 	add.w	r3, r7, #20
 80023ea:	4619      	mov	r1, r3
 80023ec:	4818      	ldr	r0, [pc, #96]	; (8002450 <HAL_TIM_MspPostInit+0x108>)
 80023ee:	f001 fc0d 	bl	8003c0c <HAL_GPIO_Init>
}
 80023f2:	e023      	b.n	800243c <HAL_TIM_MspPostInit+0xf4>
  else if(htim->Instance==TIM4)
 80023f4:	687b      	ldr	r3, [r7, #4]
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	4a16      	ldr	r2, [pc, #88]	; (8002454 <HAL_TIM_MspPostInit+0x10c>)
 80023fa:	4293      	cmp	r3, r2
 80023fc:	d11e      	bne.n	800243c <HAL_TIM_MspPostInit+0xf4>
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023fe:	2300      	movs	r3, #0
 8002400:	60bb      	str	r3, [r7, #8]
 8002402:	4b10      	ldr	r3, [pc, #64]	; (8002444 <HAL_TIM_MspPostInit+0xfc>)
 8002404:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002406:	4a0f      	ldr	r2, [pc, #60]	; (8002444 <HAL_TIM_MspPostInit+0xfc>)
 8002408:	f043 0308 	orr.w	r3, r3, #8
 800240c:	6313      	str	r3, [r2, #48]	; 0x30
 800240e:	4b0d      	ldr	r3, [pc, #52]	; (8002444 <HAL_TIM_MspPostInit+0xfc>)
 8002410:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002412:	f003 0308 	and.w	r3, r3, #8
 8002416:	60bb      	str	r3, [r7, #8]
 8002418:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_15;
 800241a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800241e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002420:	2302      	movs	r3, #2
 8002422:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002424:	2300      	movs	r3, #0
 8002426:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002428:	2300      	movs	r3, #0
 800242a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 800242c:	2302      	movs	r3, #2
 800242e:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002430:	f107 0314 	add.w	r3, r7, #20
 8002434:	4619      	mov	r1, r3
 8002436:	4808      	ldr	r0, [pc, #32]	; (8002458 <HAL_TIM_MspPostInit+0x110>)
 8002438:	f001 fbe8 	bl	8003c0c <HAL_GPIO_Init>
}
 800243c:	bf00      	nop
 800243e:	3728      	adds	r7, #40	; 0x28
 8002440:	46bd      	mov	sp, r7
 8002442:	bd80      	pop	{r7, pc}
 8002444:	40023800 	.word	0x40023800
 8002448:	40020000 	.word	0x40020000
 800244c:	40000400 	.word	0x40000400
 8002450:	40020800 	.word	0x40020800
 8002454:	40000800 	.word	0x40000800
 8002458:	40020c00 	.word	0x40020c00

0800245c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800245c:	b580      	push	{r7, lr}
 800245e:	b08c      	sub	sp, #48	; 0x30
 8002460:	af00      	add	r7, sp, #0
 8002462:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002464:	f107 031c 	add.w	r3, r7, #28
 8002468:	2200      	movs	r2, #0
 800246a:	601a      	str	r2, [r3, #0]
 800246c:	605a      	str	r2, [r3, #4]
 800246e:	609a      	str	r2, [r3, #8]
 8002470:	60da      	str	r2, [r3, #12]
 8002472:	611a      	str	r2, [r3, #16]
  if(huart->Instance==UART4)
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	4a36      	ldr	r2, [pc, #216]	; (8002554 <HAL_UART_MspInit+0xf8>)
 800247a:	4293      	cmp	r3, r2
 800247c:	d12c      	bne.n	80024d8 <HAL_UART_MspInit+0x7c>
  {
  /* USER CODE BEGIN UART4_MspInit 0 */

  /* USER CODE END UART4_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_UART4_CLK_ENABLE();
 800247e:	2300      	movs	r3, #0
 8002480:	61bb      	str	r3, [r7, #24]
 8002482:	4b35      	ldr	r3, [pc, #212]	; (8002558 <HAL_UART_MspInit+0xfc>)
 8002484:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002486:	4a34      	ldr	r2, [pc, #208]	; (8002558 <HAL_UART_MspInit+0xfc>)
 8002488:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800248c:	6413      	str	r3, [r2, #64]	; 0x40
 800248e:	4b32      	ldr	r3, [pc, #200]	; (8002558 <HAL_UART_MspInit+0xfc>)
 8002490:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002492:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8002496:	61bb      	str	r3, [r7, #24]
 8002498:	69bb      	ldr	r3, [r7, #24]
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800249a:	2300      	movs	r3, #0
 800249c:	617b      	str	r3, [r7, #20]
 800249e:	4b2e      	ldr	r3, [pc, #184]	; (8002558 <HAL_UART_MspInit+0xfc>)
 80024a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024a2:	4a2d      	ldr	r2, [pc, #180]	; (8002558 <HAL_UART_MspInit+0xfc>)
 80024a4:	f043 0301 	orr.w	r3, r3, #1
 80024a8:	6313      	str	r3, [r2, #48]	; 0x30
 80024aa:	4b2b      	ldr	r3, [pc, #172]	; (8002558 <HAL_UART_MspInit+0xfc>)
 80024ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024ae:	f003 0301 	and.w	r3, r3, #1
 80024b2:	617b      	str	r3, [r7, #20]
 80024b4:	697b      	ldr	r3, [r7, #20]
    /**UART4 GPIO Configuration    
    PA0/WKUP     ------> UART4_TX
    PA1     ------> UART4_RX 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80024b6:	2303      	movs	r3, #3
 80024b8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024ba:	2302      	movs	r3, #2
 80024bc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80024be:	2301      	movs	r3, #1
 80024c0:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80024c2:	2303      	movs	r3, #3
 80024c4:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
 80024c6:	2308      	movs	r3, #8
 80024c8:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024ca:	f107 031c 	add.w	r3, r7, #28
 80024ce:	4619      	mov	r1, r3
 80024d0:	4822      	ldr	r0, [pc, #136]	; (800255c <HAL_UART_MspInit+0x100>)
 80024d2:	f001 fb9b 	bl	8003c0c <HAL_GPIO_Init>
  /* USER CODE BEGIN UART7_MspInit 1 */

  /* USER CODE END UART7_MspInit 1 */
  }

}
 80024d6:	e039      	b.n	800254c <HAL_UART_MspInit+0xf0>
  else if(huart->Instance==UART7)
 80024d8:	687b      	ldr	r3, [r7, #4]
 80024da:	681b      	ldr	r3, [r3, #0]
 80024dc:	4a20      	ldr	r2, [pc, #128]	; (8002560 <HAL_UART_MspInit+0x104>)
 80024de:	4293      	cmp	r3, r2
 80024e0:	d134      	bne.n	800254c <HAL_UART_MspInit+0xf0>
    __HAL_RCC_UART7_CLK_ENABLE();
 80024e2:	2300      	movs	r3, #0
 80024e4:	613b      	str	r3, [r7, #16]
 80024e6:	4b1c      	ldr	r3, [pc, #112]	; (8002558 <HAL_UART_MspInit+0xfc>)
 80024e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80024ea:	4a1b      	ldr	r2, [pc, #108]	; (8002558 <HAL_UART_MspInit+0xfc>)
 80024ec:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80024f0:	6413      	str	r3, [r2, #64]	; 0x40
 80024f2:	4b19      	ldr	r3, [pc, #100]	; (8002558 <HAL_UART_MspInit+0xfc>)
 80024f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80024f6:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 80024fa:	613b      	str	r3, [r7, #16]
 80024fc:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 80024fe:	2300      	movs	r3, #0
 8002500:	60fb      	str	r3, [r7, #12]
 8002502:	4b15      	ldr	r3, [pc, #84]	; (8002558 <HAL_UART_MspInit+0xfc>)
 8002504:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002506:	4a14      	ldr	r2, [pc, #80]	; (8002558 <HAL_UART_MspInit+0xfc>)
 8002508:	f043 0310 	orr.w	r3, r3, #16
 800250c:	6313      	str	r3, [r2, #48]	; 0x30
 800250e:	4b12      	ldr	r3, [pc, #72]	; (8002558 <HAL_UART_MspInit+0xfc>)
 8002510:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002512:	f003 0310 	and.w	r3, r3, #16
 8002516:	60fb      	str	r3, [r7, #12]
 8002518:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8;
 800251a:	f44f 73c0 	mov.w	r3, #384	; 0x180
 800251e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002520:	2302      	movs	r3, #2
 8002522:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002524:	2301      	movs	r3, #1
 8002526:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002528:	2303      	movs	r3, #3
 800252a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF8_UART7;
 800252c:	2308      	movs	r3, #8
 800252e:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002530:	f107 031c 	add.w	r3, r7, #28
 8002534:	4619      	mov	r1, r3
 8002536:	480b      	ldr	r0, [pc, #44]	; (8002564 <HAL_UART_MspInit+0x108>)
 8002538:	f001 fb68 	bl	8003c0c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(UART7_IRQn, 5, 0);
 800253c:	2200      	movs	r2, #0
 800253e:	2105      	movs	r1, #5
 8002540:	2052      	movs	r0, #82	; 0x52
 8002542:	f000 ff8a 	bl	800345a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART7_IRQn);
 8002546:	2052      	movs	r0, #82	; 0x52
 8002548:	f000 ffa3 	bl	8003492 <HAL_NVIC_EnableIRQ>
}
 800254c:	bf00      	nop
 800254e:	3730      	adds	r7, #48	; 0x30
 8002550:	46bd      	mov	sp, r7
 8002552:	bd80      	pop	{r7, pc}
 8002554:	40004c00 	.word	0x40004c00
 8002558:	40023800 	.word	0x40023800
 800255c:	40020000 	.word	0x40020000
 8002560:	40007800 	.word	0x40007800
 8002564:	40021000 	.word	0x40021000

08002568 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002568:	b480      	push	{r7}
 800256a:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 800256c:	bf00      	nop
 800256e:	46bd      	mov	sp, r7
 8002570:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002574:	4770      	bx	lr

08002576 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002576:	b480      	push	{r7}
 8002578:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800257a:	e7fe      	b.n	800257a <HardFault_Handler+0x4>

0800257c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800257c:	b480      	push	{r7}
 800257e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002580:	e7fe      	b.n	8002580 <MemManage_Handler+0x4>

08002582 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002582:	b480      	push	{r7}
 8002584:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002586:	e7fe      	b.n	8002586 <BusFault_Handler+0x4>

08002588 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002588:	b480      	push	{r7}
 800258a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800258c:	e7fe      	b.n	800258c <UsageFault_Handler+0x4>

0800258e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800258e:	b480      	push	{r7}
 8002590:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002592:	bf00      	nop
 8002594:	46bd      	mov	sp, r7
 8002596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800259a:	4770      	bx	lr

0800259c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800259c:	b480      	push	{r7}
 800259e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80025a0:	bf00      	nop
 80025a2:	46bd      	mov	sp, r7
 80025a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025a8:	4770      	bx	lr

080025aa <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80025aa:	b480      	push	{r7}
 80025ac:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80025ae:	bf00      	nop
 80025b0:	46bd      	mov	sp, r7
 80025b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025b6:	4770      	bx	lr

080025b8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80025b8:	b580      	push	{r7, lr}
 80025ba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80025bc:	f000 fe0e 	bl	80031dc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80025c0:	bf00      	nop
 80025c2:	bd80      	pop	{r7, pc}

080025c4 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 80025c4:	b580      	push	{r7, lr}
 80025c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_11);
 80025c8:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80025cc:	f001 fe04 	bl	80041d8 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_12);
 80025d0:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 80025d4:	f001 fe00 	bl	80041d8 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 80025d8:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 80025dc:	f001 fdfc 	bl	80041d8 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_14);
 80025e0:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80025e4:	f001 fdf8 	bl	80041d8 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 80025e8:	bf00      	nop
 80025ea:	bd80      	pop	{r7, pc}

080025ec <UART7_IRQHandler>:

/**
  * @brief This function handles UART7 global interrupt.
  */
void UART7_IRQHandler(void)
{
 80025ec:	b580      	push	{r7, lr}
 80025ee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UART7_IRQn 0 */

  /* USER CODE END UART7_IRQn 0 */
  HAL_UART_IRQHandler(&huart7);
 80025f0:	4802      	ldr	r0, [pc, #8]	; (80025fc <UART7_IRQHandler+0x10>)
 80025f2:	f005 fc2d 	bl	8007e50 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN UART7_IRQn 1 */

  /* USER CODE END UART7_IRQn 1 */
}
 80025f6:	bf00      	nop
 80025f8:	bd80      	pop	{r7, pc}
 80025fa:	bf00      	nop
 80025fc:	20026c68 	.word	0x20026c68

08002600 <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 8002600:	b580      	push	{r7, lr}
 8002602:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002604:	4802      	ldr	r0, [pc, #8]	; (8002610 <LTDC_IRQHandler+0x10>)
 8002606:	f002 fee9 	bl	80053dc <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 800260a:	bf00      	nop
 800260c:	bd80      	pop	{r7, pc}
 800260e:	bf00      	nop
 8002610:	20026ddc 	.word	0x20026ddc

08002614 <LTDC_ER_IRQHandler>:

/**
  * @brief This function handles LTDC global error interrupt.
  */
void LTDC_ER_IRQHandler(void)
{
 8002614:	b580      	push	{r7, lr}
 8002616:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_ER_IRQn 0 */

  /* USER CODE END LTDC_ER_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002618:	4802      	ldr	r0, [pc, #8]	; (8002624 <LTDC_ER_IRQHandler+0x10>)
 800261a:	f002 fedf 	bl	80053dc <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_ER_IRQn 1 */

  /* USER CODE END LTDC_ER_IRQn 1 */
}
 800261e:	bf00      	nop
 8002620:	bd80      	pop	{r7, pc}
 8002622:	bf00      	nop
 8002624:	20026ddc 	.word	0x20026ddc

08002628 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002628:	b480      	push	{r7}
 800262a:	af00      	add	r7, sp, #0
	return 1;
 800262c:	2301      	movs	r3, #1
}
 800262e:	4618      	mov	r0, r3
 8002630:	46bd      	mov	sp, r7
 8002632:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002636:	4770      	bx	lr

08002638 <_kill>:

int _kill(int pid, int sig)
{
 8002638:	b580      	push	{r7, lr}
 800263a:	b082      	sub	sp, #8
 800263c:	af00      	add	r7, sp, #0
 800263e:	6078      	str	r0, [r7, #4]
 8002640:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8002642:	f018 fe47 	bl	801b2d4 <__errno>
 8002646:	4602      	mov	r2, r0
 8002648:	2316      	movs	r3, #22
 800264a:	6013      	str	r3, [r2, #0]
	return -1;
 800264c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002650:	4618      	mov	r0, r3
 8002652:	3708      	adds	r7, #8
 8002654:	46bd      	mov	sp, r7
 8002656:	bd80      	pop	{r7, pc}

08002658 <_exit>:

void _exit (int status)
{
 8002658:	b580      	push	{r7, lr}
 800265a:	b082      	sub	sp, #8
 800265c:	af00      	add	r7, sp, #0
 800265e:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8002660:	f04f 31ff 	mov.w	r1, #4294967295
 8002664:	6878      	ldr	r0, [r7, #4]
 8002666:	f7ff ffe7 	bl	8002638 <_kill>
	while (1) {}		/* Make sure we hang here */
 800266a:	e7fe      	b.n	800266a <_exit+0x12>

0800266c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800266c:	b580      	push	{r7, lr}
 800266e:	b086      	sub	sp, #24
 8002670:	af00      	add	r7, sp, #0
 8002672:	60f8      	str	r0, [r7, #12]
 8002674:	60b9      	str	r1, [r7, #8]
 8002676:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002678:	2300      	movs	r3, #0
 800267a:	617b      	str	r3, [r7, #20]
 800267c:	e00a      	b.n	8002694 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800267e:	f3af 8000 	nop.w
 8002682:	4601      	mov	r1, r0
 8002684:	68bb      	ldr	r3, [r7, #8]
 8002686:	1c5a      	adds	r2, r3, #1
 8002688:	60ba      	str	r2, [r7, #8]
 800268a:	b2ca      	uxtb	r2, r1
 800268c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800268e:	697b      	ldr	r3, [r7, #20]
 8002690:	3301      	adds	r3, #1
 8002692:	617b      	str	r3, [r7, #20]
 8002694:	697a      	ldr	r2, [r7, #20]
 8002696:	687b      	ldr	r3, [r7, #4]
 8002698:	429a      	cmp	r2, r3
 800269a:	dbf0      	blt.n	800267e <_read+0x12>
	}

return len;
 800269c:	687b      	ldr	r3, [r7, #4]
}
 800269e:	4618      	mov	r0, r3
 80026a0:	3718      	adds	r7, #24
 80026a2:	46bd      	mov	sp, r7
 80026a4:	bd80      	pop	{r7, pc}

080026a6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80026a6:	b580      	push	{r7, lr}
 80026a8:	b086      	sub	sp, #24
 80026aa:	af00      	add	r7, sp, #0
 80026ac:	60f8      	str	r0, [r7, #12]
 80026ae:	60b9      	str	r1, [r7, #8]
 80026b0:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80026b2:	2300      	movs	r3, #0
 80026b4:	617b      	str	r3, [r7, #20]
 80026b6:	e009      	b.n	80026cc <_write+0x26>
	{
		__io_putchar(*ptr++);
 80026b8:	68bb      	ldr	r3, [r7, #8]
 80026ba:	1c5a      	adds	r2, r3, #1
 80026bc:	60ba      	str	r2, [r7, #8]
 80026be:	781b      	ldrb	r3, [r3, #0]
 80026c0:	4618      	mov	r0, r3
 80026c2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80026c6:	697b      	ldr	r3, [r7, #20]
 80026c8:	3301      	adds	r3, #1
 80026ca:	617b      	str	r3, [r7, #20]
 80026cc:	697a      	ldr	r2, [r7, #20]
 80026ce:	687b      	ldr	r3, [r7, #4]
 80026d0:	429a      	cmp	r2, r3
 80026d2:	dbf1      	blt.n	80026b8 <_write+0x12>
	}
	return len;
 80026d4:	687b      	ldr	r3, [r7, #4]
}
 80026d6:	4618      	mov	r0, r3
 80026d8:	3718      	adds	r7, #24
 80026da:	46bd      	mov	sp, r7
 80026dc:	bd80      	pop	{r7, pc}

080026de <_close>:

int _close(int file)
{
 80026de:	b480      	push	{r7}
 80026e0:	b083      	sub	sp, #12
 80026e2:	af00      	add	r7, sp, #0
 80026e4:	6078      	str	r0, [r7, #4]
	return -1;
 80026e6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80026ea:	4618      	mov	r0, r3
 80026ec:	370c      	adds	r7, #12
 80026ee:	46bd      	mov	sp, r7
 80026f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026f4:	4770      	bx	lr

080026f6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80026f6:	b480      	push	{r7}
 80026f8:	b083      	sub	sp, #12
 80026fa:	af00      	add	r7, sp, #0
 80026fc:	6078      	str	r0, [r7, #4]
 80026fe:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8002700:	683b      	ldr	r3, [r7, #0]
 8002702:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002706:	605a      	str	r2, [r3, #4]
	return 0;
 8002708:	2300      	movs	r3, #0
}
 800270a:	4618      	mov	r0, r3
 800270c:	370c      	adds	r7, #12
 800270e:	46bd      	mov	sp, r7
 8002710:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002714:	4770      	bx	lr

08002716 <_isatty>:

int _isatty(int file)
{
 8002716:	b480      	push	{r7}
 8002718:	b083      	sub	sp, #12
 800271a:	af00      	add	r7, sp, #0
 800271c:	6078      	str	r0, [r7, #4]
	return 1;
 800271e:	2301      	movs	r3, #1
}
 8002720:	4618      	mov	r0, r3
 8002722:	370c      	adds	r7, #12
 8002724:	46bd      	mov	sp, r7
 8002726:	f85d 7b04 	ldr.w	r7, [sp], #4
 800272a:	4770      	bx	lr

0800272c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800272c:	b480      	push	{r7}
 800272e:	b085      	sub	sp, #20
 8002730:	af00      	add	r7, sp, #0
 8002732:	60f8      	str	r0, [r7, #12]
 8002734:	60b9      	str	r1, [r7, #8]
 8002736:	607a      	str	r2, [r7, #4]
	return 0;
 8002738:	2300      	movs	r3, #0
}
 800273a:	4618      	mov	r0, r3
 800273c:	3714      	adds	r7, #20
 800273e:	46bd      	mov	sp, r7
 8002740:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002744:	4770      	bx	lr
	...

08002748 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8002748:	b580      	push	{r7, lr}
 800274a:	b084      	sub	sp, #16
 800274c:	af00      	add	r7, sp, #0
 800274e:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002750:	4b11      	ldr	r3, [pc, #68]	; (8002798 <_sbrk+0x50>)
 8002752:	681b      	ldr	r3, [r3, #0]
 8002754:	2b00      	cmp	r3, #0
 8002756:	d102      	bne.n	800275e <_sbrk+0x16>
		heap_end = &end;
 8002758:	4b0f      	ldr	r3, [pc, #60]	; (8002798 <_sbrk+0x50>)
 800275a:	4a10      	ldr	r2, [pc, #64]	; (800279c <_sbrk+0x54>)
 800275c:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800275e:	4b0e      	ldr	r3, [pc, #56]	; (8002798 <_sbrk+0x50>)
 8002760:	681b      	ldr	r3, [r3, #0]
 8002762:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8002764:	4b0c      	ldr	r3, [pc, #48]	; (8002798 <_sbrk+0x50>)
 8002766:	681a      	ldr	r2, [r3, #0]
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	4413      	add	r3, r2
 800276c:	466a      	mov	r2, sp
 800276e:	4293      	cmp	r3, r2
 8002770:	d907      	bls.n	8002782 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8002772:	f018 fdaf 	bl	801b2d4 <__errno>
 8002776:	4602      	mov	r2, r0
 8002778:	230c      	movs	r3, #12
 800277a:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 800277c:	f04f 33ff 	mov.w	r3, #4294967295
 8002780:	e006      	b.n	8002790 <_sbrk+0x48>
	}

	heap_end += incr;
 8002782:	4b05      	ldr	r3, [pc, #20]	; (8002798 <_sbrk+0x50>)
 8002784:	681a      	ldr	r2, [r3, #0]
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	4413      	add	r3, r2
 800278a:	4a03      	ldr	r2, [pc, #12]	; (8002798 <_sbrk+0x50>)
 800278c:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800278e:	68fb      	ldr	r3, [r7, #12]
}
 8002790:	4618      	mov	r0, r3
 8002792:	3710      	adds	r7, #16
 8002794:	46bd      	mov	sp, r7
 8002796:	bd80      	pop	{r7, pc}
 8002798:	20025914 	.word	0x20025914
 800279c:	20027010 	.word	0x20027010

080027a0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80027a0:	b480      	push	{r7}
 80027a2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80027a4:	4b08      	ldr	r3, [pc, #32]	; (80027c8 <SystemInit+0x28>)
 80027a6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80027aa:	4a07      	ldr	r2, [pc, #28]	; (80027c8 <SystemInit+0x28>)
 80027ac:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80027b0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80027b4:	4b04      	ldr	r3, [pc, #16]	; (80027c8 <SystemInit+0x28>)
 80027b6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80027ba:	609a      	str	r2, [r3, #8]
#endif
}
 80027bc:	bf00      	nop
 80027be:	46bd      	mov	sp, r7
 80027c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027c4:	4770      	bx	lr
 80027c6:	bf00      	nop
 80027c8:	e000ed00 	.word	0xe000ed00

080027cc <UART_Init>:
		HAL_UART_Receive_IT(&huart5, Uart_data.Rx_data, 1);   //activate UART receive interrupt every time
	}
}
*/
//UART MAIN TASK
void UART_Init(){
 80027cc:	b580      	push	{r7, lr}
 80027ce:	af00      	add	r7, sp, #0
	//HAL_UART_Receive_IT(&huart5, Rx_data, 1);
	UART_Reset_CMD();
 80027d0:	f000 f966 	bl	8002aa0 <UART_Reset_CMD>
	Uart_data.Uart_cmd_duty= 10;
 80027d4:	4b06      	ldr	r3, [pc, #24]	; (80027f0 <UART_Init+0x24>)
 80027d6:	220a      	movs	r2, #10
 80027d8:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
	Uart_data.Uart_cmd_freq= 25;
 80027dc:	4b04      	ldr	r3, [pc, #16]	; (80027f0 <UART_Init+0x24>)
 80027de:	2219      	movs	r2, #25
 80027e0:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
	Uart_data.Uart_cmd_lum = 50;
 80027e4:	4b02      	ldr	r3, [pc, #8]	; (80027f0 <UART_Init+0x24>)
 80027e6:	2232      	movs	r2, #50	; 0x32
 80027e8:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
}
 80027ec:	bf00      	nop
 80027ee:	bd80      	pop	{r7, pc}
 80027f0:	20026e98 	.word	0x20026e98

080027f4 <UART_Task>:

void UART_Task(){
 80027f4:	b580      	push	{r7, lr}
 80027f6:	b082      	sub	sp, #8
 80027f8:	af00      	add	r7, sp, #0
	if (Uart_data.Transfer_cplt)
 80027fa:	4b9e      	ldr	r3, [pc, #632]	; (8002a74 <UART_Task+0x280>)
 80027fc:	f893 3067 	ldrb.w	r3, [r3, #103]	; 0x67
 8002800:	2b00      	cmp	r3, #0
 8002802:	f000 8147 	beq.w	8002a94 <UART_Task+0x2a0>
	{
		//Check data reveive here
		//freq=xyz
		if 	((  Uart_data.Rx_Buffer[0]  == 'f')
 8002806:	4b9b      	ldr	r3, [pc, #620]	; (8002a74 <UART_Task+0x280>)
 8002808:	78db      	ldrb	r3, [r3, #3]
 800280a:	2b66      	cmp	r3, #102	; 0x66
 800280c:	d129      	bne.n	8002862 <UART_Task+0x6e>
			&& (Uart_data.Rx_Buffer[1]  == 'r')
 800280e:	4b99      	ldr	r3, [pc, #612]	; (8002a74 <UART_Task+0x280>)
 8002810:	791b      	ldrb	r3, [r3, #4]
 8002812:	2b72      	cmp	r3, #114	; 0x72
 8002814:	d125      	bne.n	8002862 <UART_Task+0x6e>
			&& (Uart_data.Rx_Buffer[2]  == 'e')
 8002816:	4b97      	ldr	r3, [pc, #604]	; (8002a74 <UART_Task+0x280>)
 8002818:	795b      	ldrb	r3, [r3, #5]
 800281a:	2b65      	cmp	r3, #101	; 0x65
 800281c:	d121      	bne.n	8002862 <UART_Task+0x6e>
			&& (Uart_data.Rx_Buffer[3]  == 'q'))
 800281e:	4b95      	ldr	r3, [pc, #596]	; (8002a74 <UART_Task+0x280>)
 8002820:	799b      	ldrb	r3, [r3, #6]
 8002822:	2b71      	cmp	r3, #113	; 0x71
 8002824:	d11d      	bne.n	8002862 <UART_Task+0x6e>
		{
			uint8_t value = (Uart_data.Rx_Buffer[4] - '0')*10 + (Uart_data.Rx_Buffer[5] - '0');
 8002826:	4b93      	ldr	r3, [pc, #588]	; (8002a74 <UART_Task+0x280>)
 8002828:	79db      	ldrb	r3, [r3, #7]
 800282a:	461a      	mov	r2, r3
 800282c:	0092      	lsls	r2, r2, #2
 800282e:	4413      	add	r3, r2
 8002830:	005b      	lsls	r3, r3, #1
 8002832:	b2da      	uxtb	r2, r3
 8002834:	4b8f      	ldr	r3, [pc, #572]	; (8002a74 <UART_Task+0x280>)
 8002836:	7a1b      	ldrb	r3, [r3, #8]
 8002838:	4413      	add	r3, r2
 800283a:	b2db      	uxtb	r3, r3
 800283c:	3b10      	subs	r3, #16
 800283e:	71bb      	strb	r3, [r7, #6]
			if ((value >=0) && (value <=50)){
 8002840:	79bb      	ldrb	r3, [r7, #6]
 8002842:	2b32      	cmp	r3, #50	; 0x32
 8002844:	d808      	bhi.n	8002858 <UART_Task+0x64>
				Uart_data.Uart_cmd_freq = value;
 8002846:	4a8b      	ldr	r2, [pc, #556]	; (8002a74 <UART_Task+0x280>)
 8002848:	79bb      	ldrb	r3, [r7, #6]
 800284a:	f882 306b 	strb.w	r3, [r2, #107]	; 0x6b
				Uart_data.Uart_cmd = UART_CMD_FREQ;
 800284e:	4b89      	ldr	r3, [pc, #548]	; (8002a74 <UART_Task+0x280>)
 8002850:	2200      	movs	r2, #0
 8002852:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
		{
 8002856:	e117      	b.n	8002a88 <UART_Task+0x294>
			}
			else{
				Uart_data.Uart_cmd = UART_CMD_FREQ_ERROR;
 8002858:	4b86      	ldr	r3, [pc, #536]	; (8002a74 <UART_Task+0x280>)
 800285a:	2201      	movs	r2, #1
 800285c:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
		{
 8002860:	e112      	b.n	8002a88 <UART_Task+0x294>
			}
		}
		//duty=xyz
		else if		((  Uart_data.Rx_Buffer[0]  == 'd')
 8002862:	4b84      	ldr	r3, [pc, #528]	; (8002a74 <UART_Task+0x280>)
 8002864:	78db      	ldrb	r3, [r3, #3]
 8002866:	2b64      	cmp	r3, #100	; 0x64
 8002868:	d129      	bne.n	80028be <UART_Task+0xca>
					&& (Uart_data.Rx_Buffer[1]  == 'u')
 800286a:	4b82      	ldr	r3, [pc, #520]	; (8002a74 <UART_Task+0x280>)
 800286c:	791b      	ldrb	r3, [r3, #4]
 800286e:	2b75      	cmp	r3, #117	; 0x75
 8002870:	d125      	bne.n	80028be <UART_Task+0xca>
					&& (Uart_data.Rx_Buffer[2]  == 't')
 8002872:	4b80      	ldr	r3, [pc, #512]	; (8002a74 <UART_Task+0x280>)
 8002874:	795b      	ldrb	r3, [r3, #5]
 8002876:	2b74      	cmp	r3, #116	; 0x74
 8002878:	d121      	bne.n	80028be <UART_Task+0xca>
					&& (Uart_data.Rx_Buffer[3]  == 'y'))
 800287a:	4b7e      	ldr	r3, [pc, #504]	; (8002a74 <UART_Task+0x280>)
 800287c:	799b      	ldrb	r3, [r3, #6]
 800287e:	2b79      	cmp	r3, #121	; 0x79
 8002880:	d11d      	bne.n	80028be <UART_Task+0xca>
		{
			uint8_t value =(Uart_data.Rx_Buffer[4] - '0')*10 + (Uart_data.Rx_Buffer[5] - '0');
 8002882:	4b7c      	ldr	r3, [pc, #496]	; (8002a74 <UART_Task+0x280>)
 8002884:	79db      	ldrb	r3, [r3, #7]
 8002886:	461a      	mov	r2, r3
 8002888:	0092      	lsls	r2, r2, #2
 800288a:	4413      	add	r3, r2
 800288c:	005b      	lsls	r3, r3, #1
 800288e:	b2da      	uxtb	r2, r3
 8002890:	4b78      	ldr	r3, [pc, #480]	; (8002a74 <UART_Task+0x280>)
 8002892:	7a1b      	ldrb	r3, [r3, #8]
 8002894:	4413      	add	r3, r2
 8002896:	b2db      	uxtb	r3, r3
 8002898:	3b10      	subs	r3, #16
 800289a:	717b      	strb	r3, [r7, #5]
			if ((value >=0) && (value <=50)){
 800289c:	797b      	ldrb	r3, [r7, #5]
 800289e:	2b32      	cmp	r3, #50	; 0x32
 80028a0:	d808      	bhi.n	80028b4 <UART_Task+0xc0>
				Uart_data.Uart_cmd_duty = value;
 80028a2:	4a74      	ldr	r2, [pc, #464]	; (8002a74 <UART_Task+0x280>)
 80028a4:	797b      	ldrb	r3, [r7, #5]
 80028a6:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
				Uart_data.Uart_cmd = UART_CMD_DUTY;
 80028aa:	4b72      	ldr	r3, [pc, #456]	; (8002a74 <UART_Task+0x280>)
 80028ac:	2202      	movs	r2, #2
 80028ae:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
		{
 80028b2:	e0e9      	b.n	8002a88 <UART_Task+0x294>
			}
			else{
				Uart_data.Uart_cmd = UART_CMD_DUTY_ERROR;
 80028b4:	4b6f      	ldr	r3, [pc, #444]	; (8002a74 <UART_Task+0x280>)
 80028b6:	2203      	movs	r2, #3
 80028b8:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
		{
 80028bc:	e0e4      	b.n	8002a88 <UART_Task+0x294>
			}
		}
		//lum=xyz
		else if		((  Uart_data.Rx_Buffer[0]  == 'l')
 80028be:	4b6d      	ldr	r3, [pc, #436]	; (8002a74 <UART_Task+0x280>)
 80028c0:	78db      	ldrb	r3, [r3, #3]
 80028c2:	2b6c      	cmp	r3, #108	; 0x6c
 80028c4:	d158      	bne.n	8002978 <UART_Task+0x184>
					&& (Uart_data.Rx_Buffer[1]  == 'u')
 80028c6:	4b6b      	ldr	r3, [pc, #428]	; (8002a74 <UART_Task+0x280>)
 80028c8:	791b      	ldrb	r3, [r3, #4]
 80028ca:	2b75      	cmp	r3, #117	; 0x75
 80028cc:	d154      	bne.n	8002978 <UART_Task+0x184>
					&& (Uart_data.Rx_Buffer[2]  == 'm'))
 80028ce:	4b69      	ldr	r3, [pc, #420]	; (8002a74 <UART_Task+0x280>)
 80028d0:	795b      	ldrb	r3, [r3, #5]
 80028d2:	2b6d      	cmp	r3, #109	; 0x6d
 80028d4:	d150      	bne.n	8002978 <UART_Task+0x184>
		{
			uint8_t value = 0;
 80028d6:	2300      	movs	r3, #0
 80028d8:	71fb      	strb	r3, [r7, #7]
			if (Uart_data.Rx_Buffer[6] ==  '\0'){
 80028da:	4b66      	ldr	r3, [pc, #408]	; (8002a74 <UART_Task+0x280>)
 80028dc:	7a5b      	ldrb	r3, [r3, #9]
 80028de:	2b00      	cmp	r3, #0
 80028e0:	d139      	bne.n	8002956 <UART_Task+0x162>
				if (Uart_data.Rx_Buffer[5] ==  '\0'){
 80028e2:	4b64      	ldr	r3, [pc, #400]	; (8002a74 <UART_Task+0x280>)
 80028e4:	7a1b      	ldrb	r3, [r3, #8]
 80028e6:	2b00      	cmp	r3, #0
 80028e8:	d11a      	bne.n	8002920 <UART_Task+0x12c>
					if (Uart_data.Rx_Buffer[4] ==  '\0'){
 80028ea:	4b62      	ldr	r3, [pc, #392]	; (8002a74 <UART_Task+0x280>)
 80028ec:	79db      	ldrb	r3, [r3, #7]
 80028ee:	2b00      	cmp	r3, #0
 80028f0:	d108      	bne.n	8002904 <UART_Task+0x110>
						if (Uart_data.Rx_Buffer[3] !=  '\0'){
 80028f2:	4b60      	ldr	r3, [pc, #384]	; (8002a74 <UART_Task+0x280>)
 80028f4:	799b      	ldrb	r3, [r3, #6]
 80028f6:	2b00      	cmp	r3, #0
 80028f8:	d02d      	beq.n	8002956 <UART_Task+0x162>
							value = (Uart_data.Rx_Buffer[3] - '0');
 80028fa:	4b5e      	ldr	r3, [pc, #376]	; (8002a74 <UART_Task+0x280>)
 80028fc:	799b      	ldrb	r3, [r3, #6]
 80028fe:	3b30      	subs	r3, #48	; 0x30
 8002900:	71fb      	strb	r3, [r7, #7]
 8002902:	e028      	b.n	8002956 <UART_Task+0x162>
						}
					}
					else
					{
						value = (Uart_data.Rx_Buffer[3] - '0')*10 + (Uart_data.Rx_Buffer[4] - '0');
 8002904:	4b5b      	ldr	r3, [pc, #364]	; (8002a74 <UART_Task+0x280>)
 8002906:	799b      	ldrb	r3, [r3, #6]
 8002908:	461a      	mov	r2, r3
 800290a:	0092      	lsls	r2, r2, #2
 800290c:	4413      	add	r3, r2
 800290e:	005b      	lsls	r3, r3, #1
 8002910:	b2da      	uxtb	r2, r3
 8002912:	4b58      	ldr	r3, [pc, #352]	; (8002a74 <UART_Task+0x280>)
 8002914:	79db      	ldrb	r3, [r3, #7]
 8002916:	4413      	add	r3, r2
 8002918:	b2db      	uxtb	r3, r3
 800291a:	3b10      	subs	r3, #16
 800291c:	71fb      	strb	r3, [r7, #7]
 800291e:	e01a      	b.n	8002956 <UART_Task+0x162>
					}
				}
				else
				{
					value = (Uart_data.Rx_Buffer[3] - '0')*100 + (Uart_data.Rx_Buffer[4] - '0')*10 + (Uart_data.Rx_Buffer[5] - '0');
 8002920:	4b54      	ldr	r3, [pc, #336]	; (8002a74 <UART_Task+0x280>)
 8002922:	799b      	ldrb	r3, [r3, #6]
 8002924:	461a      	mov	r2, r3
 8002926:	0092      	lsls	r2, r2, #2
 8002928:	4413      	add	r3, r2
 800292a:	461a      	mov	r2, r3
 800292c:	0091      	lsls	r1, r2, #2
 800292e:	461a      	mov	r2, r3
 8002930:	460b      	mov	r3, r1
 8002932:	4413      	add	r3, r2
 8002934:	009b      	lsls	r3, r3, #2
 8002936:	b2da      	uxtb	r2, r3
 8002938:	4b4e      	ldr	r3, [pc, #312]	; (8002a74 <UART_Task+0x280>)
 800293a:	79db      	ldrb	r3, [r3, #7]
 800293c:	4619      	mov	r1, r3
 800293e:	0089      	lsls	r1, r1, #2
 8002940:	440b      	add	r3, r1
 8002942:	005b      	lsls	r3, r3, #1
 8002944:	b2db      	uxtb	r3, r3
 8002946:	4413      	add	r3, r2
 8002948:	b2da      	uxtb	r2, r3
 800294a:	4b4a      	ldr	r3, [pc, #296]	; (8002a74 <UART_Task+0x280>)
 800294c:	7a1b      	ldrb	r3, [r3, #8]
 800294e:	4413      	add	r3, r2
 8002950:	b2db      	uxtb	r3, r3
 8002952:	3330      	adds	r3, #48	; 0x30
 8002954:	71fb      	strb	r3, [r7, #7]
				}
			}
			if ((value >=0) && (value <=100)){
 8002956:	79fb      	ldrb	r3, [r7, #7]
 8002958:	2b64      	cmp	r3, #100	; 0x64
 800295a:	d808      	bhi.n	800296e <UART_Task+0x17a>
				Uart_data.Uart_cmd_lum = value;
 800295c:	4a45      	ldr	r2, [pc, #276]	; (8002a74 <UART_Task+0x280>)
 800295e:	79fb      	ldrb	r3, [r7, #7]
 8002960:	f882 306c 	strb.w	r3, [r2, #108]	; 0x6c
				Uart_data.Uart_cmd = UART_CMD_LUMINOSITY;
 8002964:	4b43      	ldr	r3, [pc, #268]	; (8002a74 <UART_Task+0x280>)
 8002966:	2204      	movs	r2, #4
 8002968:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
		{
 800296c:	e08c      	b.n	8002a88 <UART_Task+0x294>
			}
			else{
				Uart_data.Uart_cmd = UART_CMD_LUMINOSITY_ERROR;
 800296e:	4b41      	ldr	r3, [pc, #260]	; (8002a74 <UART_Task+0x280>)
 8002970:	2205      	movs	r2, #5
 8002972:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
		{
 8002976:	e087      	b.n	8002a88 <UART_Task+0x294>
			}
		}
		else if		((  Uart_data.Rx_Buffer[0]  == 'l')
 8002978:	4b3e      	ldr	r3, [pc, #248]	; (8002a74 <UART_Task+0x280>)
 800297a:	78db      	ldrb	r3, [r3, #3]
 800297c:	2b6c      	cmp	r3, #108	; 0x6c
 800297e:	d124      	bne.n	80029ca <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[1]  == 'e')
 8002980:	4b3c      	ldr	r3, [pc, #240]	; (8002a74 <UART_Task+0x280>)
 8002982:	791b      	ldrb	r3, [r3, #4]
 8002984:	2b65      	cmp	r3, #101	; 0x65
 8002986:	d120      	bne.n	80029ca <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[2]  == 'x')
 8002988:	4b3a      	ldr	r3, [pc, #232]	; (8002a74 <UART_Task+0x280>)
 800298a:	795b      	ldrb	r3, [r3, #5]
 800298c:	2b78      	cmp	r3, #120	; 0x78
 800298e:	d11c      	bne.n	80029ca <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[3]  == 'i')
 8002990:	4b38      	ldr	r3, [pc, #224]	; (8002a74 <UART_Task+0x280>)
 8002992:	799b      	ldrb	r3, [r3, #6]
 8002994:	2b69      	cmp	r3, #105	; 0x69
 8002996:	d118      	bne.n	80029ca <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[4]  == 'l')
 8002998:	4b36      	ldr	r3, [pc, #216]	; (8002a74 <UART_Task+0x280>)
 800299a:	79db      	ldrb	r3, [r3, #7]
 800299c:	2b6c      	cmp	r3, #108	; 0x6c
 800299e:	d114      	bne.n	80029ca <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[5]  == 'i')
 80029a0:	4b34      	ldr	r3, [pc, #208]	; (8002a74 <UART_Task+0x280>)
 80029a2:	7a1b      	ldrb	r3, [r3, #8]
 80029a4:	2b69      	cmp	r3, #105	; 0x69
 80029a6:	d110      	bne.n	80029ca <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[6]  == 'g')
 80029a8:	4b32      	ldr	r3, [pc, #200]	; (8002a74 <UART_Task+0x280>)
 80029aa:	7a5b      	ldrb	r3, [r3, #9]
 80029ac:	2b67      	cmp	r3, #103	; 0x67
 80029ae:	d10c      	bne.n	80029ca <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[7]  == 'h')
 80029b0:	4b30      	ldr	r3, [pc, #192]	; (8002a74 <UART_Task+0x280>)
 80029b2:	7a9b      	ldrb	r3, [r3, #10]
 80029b4:	2b68      	cmp	r3, #104	; 0x68
 80029b6:	d108      	bne.n	80029ca <UART_Task+0x1d6>
					&& (Uart_data.Rx_Buffer[8]  == 't'))
 80029b8:	4b2e      	ldr	r3, [pc, #184]	; (8002a74 <UART_Task+0x280>)
 80029ba:	7adb      	ldrb	r3, [r3, #11]
 80029bc:	2b74      	cmp	r3, #116	; 0x74
 80029be:	d104      	bne.n	80029ca <UART_Task+0x1d6>
		{
			Uart_data.Uart_cmd = UART_CMD_LEXI_MODE;
 80029c0:	4b2c      	ldr	r3, [pc, #176]	; (8002a74 <UART_Task+0x280>)
 80029c2:	2206      	movs	r2, #6
 80029c4:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 80029c8:	e05e      	b.n	8002a88 <UART_Task+0x294>
		}
		else if		((  Uart_data.Rx_Buffer[0]  == 'n')
 80029ca:	4b2a      	ldr	r3, [pc, #168]	; (8002a74 <UART_Task+0x280>)
 80029cc:	78db      	ldrb	r3, [r3, #3]
 80029ce:	2b6e      	cmp	r3, #110	; 0x6e
 80029d0:	d118      	bne.n	8002a04 <UART_Task+0x210>
					&& (Uart_data.Rx_Buffer[1]  == 'o')
 80029d2:	4b28      	ldr	r3, [pc, #160]	; (8002a74 <UART_Task+0x280>)
 80029d4:	791b      	ldrb	r3, [r3, #4]
 80029d6:	2b6f      	cmp	r3, #111	; 0x6f
 80029d8:	d114      	bne.n	8002a04 <UART_Task+0x210>
					&& (Uart_data.Rx_Buffer[2]  == 'r')
 80029da:	4b26      	ldr	r3, [pc, #152]	; (8002a74 <UART_Task+0x280>)
 80029dc:	795b      	ldrb	r3, [r3, #5]
 80029de:	2b72      	cmp	r3, #114	; 0x72
 80029e0:	d110      	bne.n	8002a04 <UART_Task+0x210>
					&& (Uart_data.Rx_Buffer[3]  == 'm')
 80029e2:	4b24      	ldr	r3, [pc, #144]	; (8002a74 <UART_Task+0x280>)
 80029e4:	799b      	ldrb	r3, [r3, #6]
 80029e6:	2b6d      	cmp	r3, #109	; 0x6d
 80029e8:	d10c      	bne.n	8002a04 <UART_Task+0x210>
					&& (Uart_data.Rx_Buffer[4]  == 'a')
 80029ea:	4b22      	ldr	r3, [pc, #136]	; (8002a74 <UART_Task+0x280>)
 80029ec:	79db      	ldrb	r3, [r3, #7]
 80029ee:	2b61      	cmp	r3, #97	; 0x61
 80029f0:	d108      	bne.n	8002a04 <UART_Task+0x210>
					&& (Uart_data.Rx_Buffer[5]  == 'l'))
 80029f2:	4b20      	ldr	r3, [pc, #128]	; (8002a74 <UART_Task+0x280>)
 80029f4:	7a1b      	ldrb	r3, [r3, #8]
 80029f6:	2b6c      	cmp	r3, #108	; 0x6c
 80029f8:	d104      	bne.n	8002a04 <UART_Task+0x210>
		{
			Uart_data.Uart_cmd = UART_CMD_NORMAL_MODE;
 80029fa:	4b1e      	ldr	r3, [pc, #120]	; (8002a74 <UART_Task+0x280>)
 80029fc:	2207      	movs	r2, #7
 80029fe:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 8002a02:	e041      	b.n	8002a88 <UART_Task+0x294>
		}
		else if		((  Uart_data.Rx_Buffer[0]  == 'o')
 8002a04:	4b1b      	ldr	r3, [pc, #108]	; (8002a74 <UART_Task+0x280>)
 8002a06:	78db      	ldrb	r3, [r3, #3]
 8002a08:	2b6f      	cmp	r3, #111	; 0x6f
 8002a0a:	d108      	bne.n	8002a1e <UART_Task+0x22a>
					&& (Uart_data.Rx_Buffer[1]  == 'n'))
 8002a0c:	4b19      	ldr	r3, [pc, #100]	; (8002a74 <UART_Task+0x280>)
 8002a0e:	791b      	ldrb	r3, [r3, #4]
 8002a10:	2b6e      	cmp	r3, #110	; 0x6e
 8002a12:	d104      	bne.n	8002a1e <UART_Task+0x22a>
		{
			Uart_data.Uart_cmd = UART_CMD_NORMAL_MODE;
 8002a14:	4b17      	ldr	r3, [pc, #92]	; (8002a74 <UART_Task+0x280>)
 8002a16:	2207      	movs	r2, #7
 8002a18:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 8002a1c:	e034      	b.n	8002a88 <UART_Task+0x294>
		}
		else if		((  Uart_data.Rx_Buffer[0]  == 'o')
 8002a1e:	4b15      	ldr	r3, [pc, #84]	; (8002a74 <UART_Task+0x280>)
 8002a20:	78db      	ldrb	r3, [r3, #3]
 8002a22:	2b6f      	cmp	r3, #111	; 0x6f
 8002a24:	d10c      	bne.n	8002a40 <UART_Task+0x24c>
					&& (Uart_data.Rx_Buffer[1]  == 'f')
 8002a26:	4b13      	ldr	r3, [pc, #76]	; (8002a74 <UART_Task+0x280>)
 8002a28:	791b      	ldrb	r3, [r3, #4]
 8002a2a:	2b66      	cmp	r3, #102	; 0x66
 8002a2c:	d108      	bne.n	8002a40 <UART_Task+0x24c>
					&& (Uart_data.Rx_Buffer[2]  == 'f'))
 8002a2e:	4b11      	ldr	r3, [pc, #68]	; (8002a74 <UART_Task+0x280>)
 8002a30:	795b      	ldrb	r3, [r3, #5]
 8002a32:	2b66      	cmp	r3, #102	; 0x66
 8002a34:	d104      	bne.n	8002a40 <UART_Task+0x24c>
		{
			Uart_data.Uart_cmd = UART_CMD_OFF_MODE;
 8002a36:	4b0f      	ldr	r3, [pc, #60]	; (8002a74 <UART_Task+0x280>)
 8002a38:	2208      	movs	r2, #8
 8002a3a:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 8002a3e:	e023      	b.n	8002a88 <UART_Task+0x294>
		}
		else if		((  Uart_data.Rx_Buffer[0]  == 's')
 8002a40:	4b0c      	ldr	r3, [pc, #48]	; (8002a74 <UART_Task+0x280>)
 8002a42:	78db      	ldrb	r3, [r3, #3]
 8002a44:	2b73      	cmp	r3, #115	; 0x73
 8002a46:	d117      	bne.n	8002a78 <UART_Task+0x284>
					&& (Uart_data.Rx_Buffer[1]  == 't')
 8002a48:	4b0a      	ldr	r3, [pc, #40]	; (8002a74 <UART_Task+0x280>)
 8002a4a:	791b      	ldrb	r3, [r3, #4]
 8002a4c:	2b74      	cmp	r3, #116	; 0x74
 8002a4e:	d113      	bne.n	8002a78 <UART_Task+0x284>
					&& (Uart_data.Rx_Buffer[2]  == 'a')
 8002a50:	4b08      	ldr	r3, [pc, #32]	; (8002a74 <UART_Task+0x280>)
 8002a52:	795b      	ldrb	r3, [r3, #5]
 8002a54:	2b61      	cmp	r3, #97	; 0x61
 8002a56:	d10f      	bne.n	8002a78 <UART_Task+0x284>
					&& (Uart_data.Rx_Buffer[3]  == 't')
 8002a58:	4b06      	ldr	r3, [pc, #24]	; (8002a74 <UART_Task+0x280>)
 8002a5a:	799b      	ldrb	r3, [r3, #6]
 8002a5c:	2b74      	cmp	r3, #116	; 0x74
 8002a5e:	d10b      	bne.n	8002a78 <UART_Task+0x284>
					&& (Uart_data.Rx_Buffer[4]  == 'e'))
 8002a60:	4b04      	ldr	r3, [pc, #16]	; (8002a74 <UART_Task+0x280>)
 8002a62:	79db      	ldrb	r3, [r3, #7]
 8002a64:	2b65      	cmp	r3, #101	; 0x65
 8002a66:	d107      	bne.n	8002a78 <UART_Task+0x284>
		{
			Uart_data.Uart_cmd = UART_CMD_STATE;
 8002a68:	4b02      	ldr	r3, [pc, #8]	; (8002a74 <UART_Task+0x280>)
 8002a6a:	220a      	movs	r2, #10
 8002a6c:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 8002a70:	e00a      	b.n	8002a88 <UART_Task+0x294>
 8002a72:	bf00      	nop
 8002a74:	20026e98 	.word	0x20026e98
		}
		else{
			Uart_data.Uart_cmd = UART_CMD_ERROR;
 8002a78:	4b08      	ldr	r3, [pc, #32]	; (8002a9c <UART_Task+0x2a8>)
 8002a7a:	220c      	movs	r2, #12
 8002a7c:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
			Uart_data.Uart_cmd_value = 0;
 8002a80:	4b06      	ldr	r3, [pc, #24]	; (8002a9c <UART_Task+0x2a8>)
 8002a82:	2200      	movs	r2, #0
 8002a84:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
		}
		UART_Send_CMD();
 8002a88:	f000 f81c 	bl	8002ac4 <UART_Send_CMD>
		Uart_data.Transfer_cplt = false;
 8002a8c:	4b03      	ldr	r3, [pc, #12]	; (8002a9c <UART_Task+0x2a8>)
 8002a8e:	2200      	movs	r2, #0
 8002a90:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
	}
}
 8002a94:	bf00      	nop
 8002a96:	3708      	adds	r7, #8
 8002a98:	46bd      	mov	sp, r7
 8002a9a:	bd80      	pop	{r7, pc}
 8002a9c:	20026e98 	.word	0x20026e98

08002aa0 <UART_Reset_CMD>:
void UART_Reset_CMD(){
 8002aa0:	b480      	push	{r7}
 8002aa2:	af00      	add	r7, sp, #0
	Uart_data.Uart_cmd = UART_WAIT_CMD;
 8002aa4:	4b06      	ldr	r3, [pc, #24]	; (8002ac0 <UART_Reset_CMD+0x20>)
 8002aa6:	220b      	movs	r2, #11
 8002aa8:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
	Uart_data.Uart_cmd_value = 0;
 8002aac:	4b04      	ldr	r3, [pc, #16]	; (8002ac0 <UART_Reset_CMD+0x20>)
 8002aae:	2200      	movs	r2, #0
 8002ab0:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
}
 8002ab4:	bf00      	nop
 8002ab6:	46bd      	mov	sp, r7
 8002ab8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002abc:	4770      	bx	lr
 8002abe:	bf00      	nop
 8002ac0:	20026e98 	.word	0x20026e98

08002ac4 <UART_Send_CMD>:
void UART_Send_CMD(){
 8002ac4:	b5b0      	push	{r4, r5, r7, lr}
 8002ac6:	b09a      	sub	sp, #104	; 0x68
 8002ac8:	af00      	add	r7, sp, #0
	//uint8_t i = 0;
	uint8_t buffer[100];
	uint8_t len;
	switch (Uart_data.Uart_cmd)
 8002aca:	4bb5      	ldr	r3, [pc, #724]	; (8002da0 <UART_Send_CMD+0x2dc>)
 8002acc:	f893 3068 	ldrb.w	r3, [r3, #104]	; 0x68
 8002ad0:	2b0a      	cmp	r3, #10
 8002ad2:	f200 81f7 	bhi.w	8002ec4 <UART_Send_CMD+0x400>
 8002ad6:	a201      	add	r2, pc, #4	; (adr r2, 8002adc <UART_Send_CMD+0x18>)
 8002ad8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002adc:	08002b09 	.word	0x08002b09
 8002ae0:	08002b5f 	.word	0x08002b5f
 8002ae4:	08002b95 	.word	0x08002b95
 8002ae8:	08002beb 	.word	0x08002beb
 8002aec:	08002c21 	.word	0x08002c21
 8002af0:	08002c6d 	.word	0x08002c6d
 8002af4:	08002cd9 	.word	0x08002cd9
 8002af8:	08002ca3 	.word	0x08002ca3
 8002afc:	08002d0f 	.word	0x08002d0f
 8002b00:	08002ec5 	.word	0x08002ec5
 8002b04:	08002d45 	.word	0x08002d45
	{
		case UART_CMD_FREQ:
			if (( Uart_data.Uart_cmd_freq>= 0 ) && ( Uart_data.Uart_cmd_freq <= 50)){
 8002b08:	4ba5      	ldr	r3, [pc, #660]	; (8002da0 <UART_Send_CMD+0x2dc>)
 8002b0a:	f893 306b 	ldrb.w	r3, [r3, #107]	; 0x6b
 8002b0e:	2b32      	cmp	r3, #50	; 0x32
 8002b10:	f200 81da 	bhi.w	8002ec8 <UART_Send_CMD+0x404>
				uint8_t value = Uart_data.Uart_cmd_freq + 65;
 8002b14:	4ba2      	ldr	r3, [pc, #648]	; (8002da0 <UART_Send_CMD+0x2dc>)
 8002b16:	f893 306b 	ldrb.w	r3, [r3, #107]	; 0x6b
 8002b1a:	3341      	adds	r3, #65	; 0x41
 8002b1c:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
				Lexi_Set_Freq(value);
 8002b20:	f897 3064 	ldrb.w	r3, [r7, #100]	; 0x64
 8002b24:	4618      	mov	r0, r3
 8002b26:	f7fe f9c9 	bl	8000ebc <Lexi_Set_Freq>
				sprintf(buffer,"New Freq %i\r\n",Uart_data.Uart_cmd_freq);
 8002b2a:	4b9d      	ldr	r3, [pc, #628]	; (8002da0 <UART_Send_CMD+0x2dc>)
 8002b2c:	f893 306b 	ldrb.w	r3, [r3, #107]	; 0x6b
 8002b30:	461a      	mov	r2, r3
 8002b32:	463b      	mov	r3, r7
 8002b34:	499b      	ldr	r1, [pc, #620]	; (8002da4 <UART_Send_CMD+0x2e0>)
 8002b36:	4618      	mov	r0, r3
 8002b38:	f018 fff0 	bl	801bb1c <siprintf>
				len=strlen(buffer);
 8002b3c:	463b      	mov	r3, r7
 8002b3e:	4618      	mov	r0, r3
 8002b40:	f7fd fb56 	bl	80001f0 <strlen>
 8002b44:	4603      	mov	r3, r0
 8002b46:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
				HAL_UART_Transmit(&huart7, buffer, len, 1000);
 8002b4a:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 8002b4e:	b29a      	uxth	r2, r3
 8002b50:	4639      	mov	r1, r7
 8002b52:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002b56:	4894      	ldr	r0, [pc, #592]	; (8002da8 <UART_Send_CMD+0x2e4>)
 8002b58:	f005 f88b 	bl	8007c72 <HAL_UART_Transmit>
			}
			break;
 8002b5c:	e1b4      	b.n	8002ec8 <UART_Send_CMD+0x404>

		case UART_CMD_FREQ_ERROR:
			sprintf(buffer,"Freq must be 00 to 50\r\n");
 8002b5e:	463b      	mov	r3, r7
 8002b60:	4a92      	ldr	r2, [pc, #584]	; (8002dac <UART_Send_CMD+0x2e8>)
 8002b62:	461c      	mov	r4, r3
 8002b64:	4615      	mov	r5, r2
 8002b66:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002b68:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002b6a:	e895 0003 	ldmia.w	r5, {r0, r1}
 8002b6e:	e884 0003 	stmia.w	r4, {r0, r1}
			len=strlen(buffer);
 8002b72:	463b      	mov	r3, r7
 8002b74:	4618      	mov	r0, r3
 8002b76:	f7fd fb3b 	bl	80001f0 <strlen>
 8002b7a:	4603      	mov	r3, r0
 8002b7c:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
			HAL_UART_Transmit(&huart7, buffer, len, 1000);
 8002b80:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 8002b84:	b29a      	uxth	r2, r3
 8002b86:	4639      	mov	r1, r7
 8002b88:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002b8c:	4886      	ldr	r0, [pc, #536]	; (8002da8 <UART_Send_CMD+0x2e4>)
 8002b8e:	f005 f870 	bl	8007c72 <HAL_UART_Transmit>
			break;
 8002b92:	e19e      	b.n	8002ed2 <UART_Send_CMD+0x40e>

		case UART_CMD_DUTY:
			if (( Uart_data.Uart_cmd_duty>= 0 ) && ( Uart_data.Uart_cmd_duty <= 50)){
 8002b94:	4b82      	ldr	r3, [pc, #520]	; (8002da0 <UART_Send_CMD+0x2dc>)
 8002b96:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 8002b9a:	2b32      	cmp	r3, #50	; 0x32
 8002b9c:	f200 8196 	bhi.w	8002ecc <UART_Send_CMD+0x408>
				uint8_t value = Uart_data.Uart_cmd_duty + 10;
 8002ba0:	4b7f      	ldr	r3, [pc, #508]	; (8002da0 <UART_Send_CMD+0x2dc>)
 8002ba2:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 8002ba6:	330a      	adds	r3, #10
 8002ba8:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
				Lexi_Set_Duty(value);
 8002bac:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 8002bb0:	4618      	mov	r0, r3
 8002bb2:	f7fe f96d 	bl	8000e90 <Lexi_Set_Duty>
				sprintf(buffer,"New Duty %i \r\n",Uart_data.Uart_cmd_duty);
 8002bb6:	4b7a      	ldr	r3, [pc, #488]	; (8002da0 <UART_Send_CMD+0x2dc>)
 8002bb8:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 8002bbc:	461a      	mov	r2, r3
 8002bbe:	463b      	mov	r3, r7
 8002bc0:	497b      	ldr	r1, [pc, #492]	; (8002db0 <UART_Send_CMD+0x2ec>)
 8002bc2:	4618      	mov	r0, r3
 8002bc4:	f018 ffaa 	bl	801bb1c <siprintf>
				len=strlen(buffer);
 8002bc8:	463b      	mov	r3, r7
 8002bca:	4618      	mov	r0, r3
 8002bcc:	f7fd fb10 	bl	80001f0 <strlen>
 8002bd0:	4603      	mov	r3, r0
 8002bd2:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
				HAL_UART_Transmit(&huart7, buffer, len, 1000);
 8002bd6:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 8002bda:	b29a      	uxth	r2, r3
 8002bdc:	4639      	mov	r1, r7
 8002bde:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002be2:	4871      	ldr	r0, [pc, #452]	; (8002da8 <UART_Send_CMD+0x2e4>)
 8002be4:	f005 f845 	bl	8007c72 <HAL_UART_Transmit>
			}
			break;
 8002be8:	e170      	b.n	8002ecc <UART_Send_CMD+0x408>

		case UART_CMD_DUTY_ERROR:
			sprintf(buffer,"Duty must be 00 to 50\r\n");
 8002bea:	463b      	mov	r3, r7
 8002bec:	4a71      	ldr	r2, [pc, #452]	; (8002db4 <UART_Send_CMD+0x2f0>)
 8002bee:	461c      	mov	r4, r3
 8002bf0:	4615      	mov	r5, r2
 8002bf2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002bf4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002bf6:	e895 0003 	ldmia.w	r5, {r0, r1}
 8002bfa:	e884 0003 	stmia.w	r4, {r0, r1}
			len=strlen(buffer);
 8002bfe:	463b      	mov	r3, r7
 8002c00:	4618      	mov	r0, r3
 8002c02:	f7fd faf5 	bl	80001f0 <strlen>
 8002c06:	4603      	mov	r3, r0
 8002c08:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
			HAL_UART_Transmit(&huart7, buffer, len, 1000);
 8002c0c:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 8002c10:	b29a      	uxth	r2, r3
 8002c12:	4639      	mov	r1, r7
 8002c14:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002c18:	4863      	ldr	r0, [pc, #396]	; (8002da8 <UART_Send_CMD+0x2e4>)
 8002c1a:	f005 f82a 	bl	8007c72 <HAL_UART_Transmit>
			break;
 8002c1e:	e158      	b.n	8002ed2 <UART_Send_CMD+0x40e>

		case UART_CMD_LUMINOSITY:
			if ((Uart_data.Uart_cmd_lum <= 100)&& (Uart_data.Uart_cmd_lum >= 0)){
 8002c20:	4b5f      	ldr	r3, [pc, #380]	; (8002da0 <UART_Send_CMD+0x2dc>)
 8002c22:	f893 306c 	ldrb.w	r3, [r3, #108]	; 0x6c
 8002c26:	2b64      	cmp	r3, #100	; 0x64
 8002c28:	f200 8152 	bhi.w	8002ed0 <UART_Send_CMD+0x40c>
				Lexi_Set_Luminosity(Uart_data.Uart_cmd_lum);
 8002c2c:	4b5c      	ldr	r3, [pc, #368]	; (8002da0 <UART_Send_CMD+0x2dc>)
 8002c2e:	f893 306c 	ldrb.w	r3, [r3, #108]	; 0x6c
 8002c32:	4618      	mov	r0, r3
 8002c34:	f7fe f960 	bl	8000ef8 <Lexi_Set_Luminosity>
				sprintf(buffer,"New Luminosity %i\r\n",Uart_data.Uart_cmd_lum);
 8002c38:	4b59      	ldr	r3, [pc, #356]	; (8002da0 <UART_Send_CMD+0x2dc>)
 8002c3a:	f893 306c 	ldrb.w	r3, [r3, #108]	; 0x6c
 8002c3e:	461a      	mov	r2, r3
 8002c40:	463b      	mov	r3, r7
 8002c42:	495d      	ldr	r1, [pc, #372]	; (8002db8 <UART_Send_CMD+0x2f4>)
 8002c44:	4618      	mov	r0, r3
 8002c46:	f018 ff69 	bl	801bb1c <siprintf>
				len=strlen(buffer);
 8002c4a:	463b      	mov	r3, r7
 8002c4c:	4618      	mov	r0, r3
 8002c4e:	f7fd facf 	bl	80001f0 <strlen>
 8002c52:	4603      	mov	r3, r0
 8002c54:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
				HAL_UART_Transmit(&huart7, buffer, len, 1000);
 8002c58:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 8002c5c:	b29a      	uxth	r2, r3
 8002c5e:	4639      	mov	r1, r7
 8002c60:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002c64:	4850      	ldr	r0, [pc, #320]	; (8002da8 <UART_Send_CMD+0x2e4>)
 8002c66:	f005 f804 	bl	8007c72 <HAL_UART_Transmit>
			}
			break;
 8002c6a:	e131      	b.n	8002ed0 <UART_Send_CMD+0x40c>

		case UART_CMD_LUMINOSITY_ERROR:
			sprintf(buffer,"Luminosity must be 0, 1, 2 \r\n");
 8002c6c:	463b      	mov	r3, r7
 8002c6e:	4a53      	ldr	r2, [pc, #332]	; (8002dbc <UART_Send_CMD+0x2f8>)
 8002c70:	461c      	mov	r4, r3
 8002c72:	4615      	mov	r5, r2
 8002c74:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002c76:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002c78:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002c7c:	c407      	stmia	r4!, {r0, r1, r2}
 8002c7e:	8023      	strh	r3, [r4, #0]
			len=strlen(buffer);
 8002c80:	463b      	mov	r3, r7
 8002c82:	4618      	mov	r0, r3
 8002c84:	f7fd fab4 	bl	80001f0 <strlen>
 8002c88:	4603      	mov	r3, r0
 8002c8a:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
			HAL_UART_Transmit(&huart7, buffer, len, 1000);
 8002c8e:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 8002c92:	b29a      	uxth	r2, r3
 8002c94:	4639      	mov	r1, r7
 8002c96:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002c9a:	4843      	ldr	r0, [pc, #268]	; (8002da8 <UART_Send_CMD+0x2e4>)
 8002c9c:	f004 ffe9 	bl	8007c72 <HAL_UART_Transmit>
			break;
 8002ca0:	e117      	b.n	8002ed2 <UART_Send_CMD+0x40e>

		case UART_CMD_NORMAL_MODE:
			Lexi_Set_State_STANDARD();
 8002ca2:	f7fe f8d9 	bl	8000e58 <Lexi_Set_State_STANDARD>
			sprintf(buffer,"Light Mode Normal\r\n");
 8002ca6:	463b      	mov	r3, r7
 8002ca8:	4a45      	ldr	r2, [pc, #276]	; (8002dc0 <UART_Send_CMD+0x2fc>)
 8002caa:	461c      	mov	r4, r3
 8002cac:	4615      	mov	r5, r2
 8002cae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002cb0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002cb2:	682b      	ldr	r3, [r5, #0]
 8002cb4:	6023      	str	r3, [r4, #0]
			len=strlen(buffer);
 8002cb6:	463b      	mov	r3, r7
 8002cb8:	4618      	mov	r0, r3
 8002cba:	f7fd fa99 	bl	80001f0 <strlen>
 8002cbe:	4603      	mov	r3, r0
 8002cc0:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
			HAL_UART_Transmit(&huart7, buffer, len, 1000);
 8002cc4:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 8002cc8:	b29a      	uxth	r2, r3
 8002cca:	4639      	mov	r1, r7
 8002ccc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002cd0:	4835      	ldr	r0, [pc, #212]	; (8002da8 <UART_Send_CMD+0x2e4>)
 8002cd2:	f004 ffce 	bl	8007c72 <HAL_UART_Transmit>
			break;
 8002cd6:	e0fc      	b.n	8002ed2 <UART_Send_CMD+0x40e>

		case UART_CMD_LEXI_MODE:
			Lexi_Set_State_LEXI();
 8002cd8:	f7fe f8cc 	bl	8000e74 <Lexi_Set_State_LEXI>
			sprintf(buffer,"Light Mode Lexi\r\n");
 8002cdc:	463b      	mov	r3, r7
 8002cde:	4a39      	ldr	r2, [pc, #228]	; (8002dc4 <UART_Send_CMD+0x300>)
 8002ce0:	461c      	mov	r4, r3
 8002ce2:	4615      	mov	r5, r2
 8002ce4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002ce6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002ce8:	682b      	ldr	r3, [r5, #0]
 8002cea:	8023      	strh	r3, [r4, #0]
			len=strlen(buffer);
 8002cec:	463b      	mov	r3, r7
 8002cee:	4618      	mov	r0, r3
 8002cf0:	f7fd fa7e 	bl	80001f0 <strlen>
 8002cf4:	4603      	mov	r3, r0
 8002cf6:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
			HAL_UART_Transmit(&huart7, buffer, len, 1000);
 8002cfa:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 8002cfe:	b29a      	uxth	r2, r3
 8002d00:	4639      	mov	r1, r7
 8002d02:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002d06:	4828      	ldr	r0, [pc, #160]	; (8002da8 <UART_Send_CMD+0x2e4>)
 8002d08:	f004 ffb3 	bl	8007c72 <HAL_UART_Transmit>
			break;
 8002d0c:	e0e1      	b.n	8002ed2 <UART_Send_CMD+0x40e>

		case UART_CMD_OFF_MODE:
			Lexi_Set_State_OFF();
 8002d0e:	f7fe f887 	bl	8000e20 <Lexi_Set_State_OFF>
			sprintf(buffer,"Light Mode Off\r\n");
 8002d12:	463b      	mov	r3, r7
 8002d14:	4a2c      	ldr	r2, [pc, #176]	; (8002dc8 <UART_Send_CMD+0x304>)
 8002d16:	461c      	mov	r4, r3
 8002d18:	4615      	mov	r5, r2
 8002d1a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002d1c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002d1e:	682b      	ldr	r3, [r5, #0]
 8002d20:	7023      	strb	r3, [r4, #0]
			len=strlen(buffer);
 8002d22:	463b      	mov	r3, r7
 8002d24:	4618      	mov	r0, r3
 8002d26:	f7fd fa63 	bl	80001f0 <strlen>
 8002d2a:	4603      	mov	r3, r0
 8002d2c:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
			HAL_UART_Transmit(&huart7, buffer, len, 1000);
 8002d30:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 8002d34:	b29a      	uxth	r2, r3
 8002d36:	4639      	mov	r1, r7
 8002d38:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002d3c:	481a      	ldr	r0, [pc, #104]	; (8002da8 <UART_Send_CMD+0x2e4>)
 8002d3e:	f004 ff98 	bl	8007c72 <HAL_UART_Transmit>
			break;
 8002d42:	e0c6      	b.n	8002ed2 <UART_Send_CMD+0x40e>

		case UART_CMD_STATE:
			sprintf(buffer,"-- State ");
 8002d44:	463b      	mov	r3, r7
 8002d46:	4a21      	ldr	r2, [pc, #132]	; (8002dcc <UART_Send_CMD+0x308>)
 8002d48:	ca07      	ldmia	r2, {r0, r1, r2}
 8002d4a:	c303      	stmia	r3!, {r0, r1}
 8002d4c:	801a      	strh	r2, [r3, #0]
			uint8_t value_lum = Lexi_Get_Luminosity();
 8002d4e:	f7fe f837 	bl	8000dc0 <Lexi_Get_Luminosity>
 8002d52:	4603      	mov	r3, r0
 8002d54:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
			if ( Lexi_Get_Led_State() == 1){
 8002d58:	f7fe f83e 	bl	8000dd8 <Lexi_Get_Led_State>
 8002d5c:	4603      	mov	r3, r0
 8002d5e:	2b01      	cmp	r3, #1
 8002d60:	d13a      	bne.n	8002dd8 <UART_Send_CMD+0x314>
				sprintf(buffer + strlen(buffer),"- LED NORMAL ");
 8002d62:	463b      	mov	r3, r7
 8002d64:	4618      	mov	r0, r3
 8002d66:	f7fd fa43 	bl	80001f0 <strlen>
 8002d6a:	4602      	mov	r2, r0
 8002d6c:	463b      	mov	r3, r7
 8002d6e:	4413      	add	r3, r2
 8002d70:	4a17      	ldr	r2, [pc, #92]	; (8002dd0 <UART_Send_CMD+0x30c>)
 8002d72:	461c      	mov	r4, r3
 8002d74:	4613      	mov	r3, r2
 8002d76:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002d78:	6020      	str	r0, [r4, #0]
 8002d7a:	6061      	str	r1, [r4, #4]
 8002d7c:	60a2      	str	r2, [r4, #8]
 8002d7e:	881b      	ldrh	r3, [r3, #0]
 8002d80:	81a3      	strh	r3, [r4, #12]
				sprintf(buffer + strlen(buffer),"- Luminosity: %i ", value_lum);
 8002d82:	463b      	mov	r3, r7
 8002d84:	4618      	mov	r0, r3
 8002d86:	f7fd fa33 	bl	80001f0 <strlen>
 8002d8a:	4602      	mov	r2, r0
 8002d8c:	463b      	mov	r3, r7
 8002d8e:	4413      	add	r3, r2
 8002d90:	f897 2067 	ldrb.w	r2, [r7, #103]	; 0x67
 8002d94:	490f      	ldr	r1, [pc, #60]	; (8002dd4 <UART_Send_CMD+0x310>)
 8002d96:	4618      	mov	r0, r3
 8002d98:	f018 fec0 	bl	801bb1c <siprintf>
 8002d9c:	e072      	b.n	8002e84 <UART_Send_CMD+0x3c0>
 8002d9e:	bf00      	nop
 8002da0:	20026e98 	.word	0x20026e98
 8002da4:	0801c608 	.word	0x0801c608
 8002da8:	20026c68 	.word	0x20026c68
 8002dac:	0801c618 	.word	0x0801c618
 8002db0:	0801c630 	.word	0x0801c630
 8002db4:	0801c640 	.word	0x0801c640
 8002db8:	0801c658 	.word	0x0801c658
 8002dbc:	0801c66c 	.word	0x0801c66c
 8002dc0:	0801c68c 	.word	0x0801c68c
 8002dc4:	0801c6a0 	.word	0x0801c6a0
 8002dc8:	0801c6b4 	.word	0x0801c6b4
 8002dcc:	0801c6c8 	.word	0x0801c6c8
 8002dd0:	0801c6d4 	.word	0x0801c6d4
 8002dd4:	0801c6e4 	.word	0x0801c6e4
			}
			else if ( Lexi_Get_Led_State() == 2){
 8002dd8:	f7fd fffe 	bl	8000dd8 <Lexi_Get_Led_State>
 8002ddc:	4603      	mov	r3, r0
 8002dde:	2b02      	cmp	r3, #2
 8002de0:	d13a      	bne.n	8002e58 <UART_Send_CMD+0x394>
				sprintf(buffer + strlen(buffer),"- LED LEXI MODE ");
 8002de2:	463b      	mov	r3, r7
 8002de4:	4618      	mov	r0, r3
 8002de6:	f7fd fa03 	bl	80001f0 <strlen>
 8002dea:	4602      	mov	r2, r0
 8002dec:	463b      	mov	r3, r7
 8002dee:	4413      	add	r3, r2
 8002df0:	4a3a      	ldr	r2, [pc, #232]	; (8002edc <UART_Send_CMD+0x418>)
 8002df2:	461d      	mov	r5, r3
 8002df4:	4614      	mov	r4, r2
 8002df6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002df8:	6028      	str	r0, [r5, #0]
 8002dfa:	6069      	str	r1, [r5, #4]
 8002dfc:	60aa      	str	r2, [r5, #8]
 8002dfe:	60eb      	str	r3, [r5, #12]
 8002e00:	7823      	ldrb	r3, [r4, #0]
 8002e02:	742b      	strb	r3, [r5, #16]
				sprintf(buffer + strlen(buffer),"- Duty : %i " , Uart_data.Uart_cmd_duty );
 8002e04:	463b      	mov	r3, r7
 8002e06:	4618      	mov	r0, r3
 8002e08:	f7fd f9f2 	bl	80001f0 <strlen>
 8002e0c:	4602      	mov	r2, r0
 8002e0e:	463b      	mov	r3, r7
 8002e10:	1898      	adds	r0, r3, r2
 8002e12:	4b33      	ldr	r3, [pc, #204]	; (8002ee0 <UART_Send_CMD+0x41c>)
 8002e14:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 8002e18:	461a      	mov	r2, r3
 8002e1a:	4932      	ldr	r1, [pc, #200]	; (8002ee4 <UART_Send_CMD+0x420>)
 8002e1c:	f018 fe7e 	bl	801bb1c <siprintf>
				sprintf(buffer + strlen(buffer),"- Frequency : %i " , Uart_data.Uart_cmd_freq );
 8002e20:	463b      	mov	r3, r7
 8002e22:	4618      	mov	r0, r3
 8002e24:	f7fd f9e4 	bl	80001f0 <strlen>
 8002e28:	4602      	mov	r2, r0
 8002e2a:	463b      	mov	r3, r7
 8002e2c:	1898      	adds	r0, r3, r2
 8002e2e:	4b2c      	ldr	r3, [pc, #176]	; (8002ee0 <UART_Send_CMD+0x41c>)
 8002e30:	f893 306b 	ldrb.w	r3, [r3, #107]	; 0x6b
 8002e34:	461a      	mov	r2, r3
 8002e36:	492c      	ldr	r1, [pc, #176]	; (8002ee8 <UART_Send_CMD+0x424>)
 8002e38:	f018 fe70 	bl	801bb1c <siprintf>
				sprintf(buffer + strlen(buffer),"- Luminosity : %i ", value_lum );
 8002e3c:	463b      	mov	r3, r7
 8002e3e:	4618      	mov	r0, r3
 8002e40:	f7fd f9d6 	bl	80001f0 <strlen>
 8002e44:	4602      	mov	r2, r0
 8002e46:	463b      	mov	r3, r7
 8002e48:	4413      	add	r3, r2
 8002e4a:	f897 2067 	ldrb.w	r2, [r7, #103]	; 0x67
 8002e4e:	4927      	ldr	r1, [pc, #156]	; (8002eec <UART_Send_CMD+0x428>)
 8002e50:	4618      	mov	r0, r3
 8002e52:	f018 fe63 	bl	801bb1c <siprintf>
 8002e56:	e015      	b.n	8002e84 <UART_Send_CMD+0x3c0>
			}
			else if ( Lexi_Get_Led_State() == 0){
 8002e58:	f7fd ffbe 	bl	8000dd8 <Lexi_Get_Led_State>
 8002e5c:	4603      	mov	r3, r0
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	d110      	bne.n	8002e84 <UART_Send_CMD+0x3c0>
				sprintf(buffer + strlen(buffer),"- LED OFF ");
 8002e62:	463b      	mov	r3, r7
 8002e64:	4618      	mov	r0, r3
 8002e66:	f7fd f9c3 	bl	80001f0 <strlen>
 8002e6a:	4602      	mov	r2, r0
 8002e6c:	463b      	mov	r3, r7
 8002e6e:	4413      	add	r3, r2
 8002e70:	491f      	ldr	r1, [pc, #124]	; (8002ef0 <UART_Send_CMD+0x42c>)
 8002e72:	461a      	mov	r2, r3
 8002e74:	460b      	mov	r3, r1
 8002e76:	cb03      	ldmia	r3!, {r0, r1}
 8002e78:	6010      	str	r0, [r2, #0]
 8002e7a:	6051      	str	r1, [r2, #4]
 8002e7c:	8819      	ldrh	r1, [r3, #0]
 8002e7e:	789b      	ldrb	r3, [r3, #2]
 8002e80:	8111      	strh	r1, [r2, #8]
 8002e82:	7293      	strb	r3, [r2, #10]
			}
			sprintf(buffer + strlen(buffer),"- Battery level: %i \r\n", BQ25713_Get_VBat());
 8002e84:	463b      	mov	r3, r7
 8002e86:	4618      	mov	r0, r3
 8002e88:	f7fd f9b2 	bl	80001f0 <strlen>
 8002e8c:	4602      	mov	r2, r0
 8002e8e:	463b      	mov	r3, r7
 8002e90:	189c      	adds	r4, r3, r2
 8002e92:	f7fd fdb7 	bl	8000a04 <BQ25713_Get_VBat>
 8002e96:	4603      	mov	r3, r0
 8002e98:	461a      	mov	r2, r3
 8002e9a:	4916      	ldr	r1, [pc, #88]	; (8002ef4 <UART_Send_CMD+0x430>)
 8002e9c:	4620      	mov	r0, r4
 8002e9e:	f018 fe3d 	bl	801bb1c <siprintf>
			len=strlen(buffer);
 8002ea2:	463b      	mov	r3, r7
 8002ea4:	4618      	mov	r0, r3
 8002ea6:	f7fd f9a3 	bl	80001f0 <strlen>
 8002eaa:	4603      	mov	r3, r0
 8002eac:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
			HAL_UART_Transmit(&huart7, buffer, len, 2000);
 8002eb0:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 8002eb4:	b29a      	uxth	r2, r3
 8002eb6:	4639      	mov	r1, r7
 8002eb8:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
 8002ebc:	480e      	ldr	r0, [pc, #56]	; (8002ef8 <UART_Send_CMD+0x434>)
 8002ebe:	f004 fed8 	bl	8007c72 <HAL_UART_Transmit>
			break;
 8002ec2:	e006      	b.n	8002ed2 <UART_Send_CMD+0x40e>

		default:
			break;
 8002ec4:	bf00      	nop
 8002ec6:	e004      	b.n	8002ed2 <UART_Send_CMD+0x40e>
			break;
 8002ec8:	bf00      	nop
 8002eca:	e002      	b.n	8002ed2 <UART_Send_CMD+0x40e>
			break;
 8002ecc:	bf00      	nop
 8002ece:	e000      	b.n	8002ed2 <UART_Send_CMD+0x40e>
			break;
 8002ed0:	bf00      	nop
	}
}
 8002ed2:	bf00      	nop
 8002ed4:	3768      	adds	r7, #104	; 0x68
 8002ed6:	46bd      	mov	sp, r7
 8002ed8:	bdb0      	pop	{r4, r5, r7, pc}
 8002eda:	bf00      	nop
 8002edc:	0801c6f8 	.word	0x0801c6f8
 8002ee0:	20026e98 	.word	0x20026e98
 8002ee4:	0801c70c 	.word	0x0801c70c
 8002ee8:	0801c71c 	.word	0x0801c71c
 8002eec:	0801c730 	.word	0x0801c730
 8002ef0:	0801c744 	.word	0x0801c744
 8002ef4:	0801c750 	.word	0x0801c750
 8002ef8:	20026c68 	.word	0x20026c68

08002efc <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8002efc:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002f34 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8002f00:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8002f02:	e003      	b.n	8002f0c <LoopCopyDataInit>

08002f04 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8002f04:	4b0c      	ldr	r3, [pc, #48]	; (8002f38 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8002f06:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8002f08:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8002f0a:	3104      	adds	r1, #4

08002f0c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8002f0c:	480b      	ldr	r0, [pc, #44]	; (8002f3c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8002f0e:	4b0c      	ldr	r3, [pc, #48]	; (8002f40 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8002f10:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8002f12:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8002f14:	d3f6      	bcc.n	8002f04 <CopyDataInit>
  ldr  r2, =_sbss
 8002f16:	4a0b      	ldr	r2, [pc, #44]	; (8002f44 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8002f18:	e002      	b.n	8002f20 <LoopFillZerobss>

08002f1a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8002f1a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8002f1c:	f842 3b04 	str.w	r3, [r2], #4

08002f20 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8002f20:	4b09      	ldr	r3, [pc, #36]	; (8002f48 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8002f22:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8002f24:	d3f9      	bcc.n	8002f1a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8002f26:	f7ff fc3b 	bl	80027a0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8002f2a:	f018 f9eb 	bl	801b304 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8002f2e:	f7fe f943 	bl	80011b8 <main>
  bx  lr    
 8002f32:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8002f34:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8002f38:	080337bc 	.word	0x080337bc
  ldr  r0, =_sdata
 8002f3c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8002f40:	200000f8 	.word	0x200000f8
  ldr  r2, =_sbss
 8002f44:	200258f8 	.word	0x200258f8
  ldr  r3, = _ebss
 8002f48:	20027010 	.word	0x20027010

08002f4c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8002f4c:	e7fe      	b.n	8002f4c <ADC_IRQHandler>

08002f4e <ST7789H2_Init>:
  * @brief  Initialize the st7789h2 LCD Component.
  * @param  None
  * @retval None
  */
void ST7789H2_Init(void)
{
 8002f4e:	b580      	push	{r7, lr}
 8002f50:	b084      	sub	sp, #16
 8002f52:	af00      	add	r7, sp, #0
  uint8_t   parameter[14];
  
  /* Initialize st7789h2 low level bus layer ----------------------------------*/
  LCD_IO_Init();
 8002f54:	f7fe f822 	bl	8000f9c <LCD_IO_Init>
  
  /* Sleep Out Command */
  ST7789H2_WriteReg(ST7789H2_SLEEP_OUT, (uint8_t*)NULL, 0);
 8002f58:	2200      	movs	r2, #0
 8002f5a:	2100      	movs	r1, #0
 8002f5c:	2011      	movs	r0, #17
 8002f5e:	f000 f8c9 	bl	80030f4 <ST7789H2_WriteReg>
  LCD_IO_Delay(120); 
 8002f62:	2078      	movs	r0, #120	; 0x78
 8002f64:	f7fe f86e 	bl	8001044 <LCD_IO_Delay>

  ST7789H2_DisplayOn();
 8002f68:	f000 f8ac 	bl	80030c4 <ST7789H2_DisplayOn>

  /* Normal display for Driver Down side */
  parameter[0] = 0x00;     
 8002f6c:	2300      	movs	r3, #0
 8002f6e:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_NORMAL_DISPLAY, parameter, 1);
 8002f70:	463b      	mov	r3, r7
 8002f72:	2201      	movs	r2, #1
 8002f74:	4619      	mov	r1, r3
 8002f76:	2036      	movs	r0, #54	; 0x36
 8002f78:	f000 f8bc 	bl	80030f4 <ST7789H2_WriteReg>
 
  /* Color mode 16bits/pixel */
  parameter[0] = 0x05;
 8002f7c:	2305      	movs	r3, #5
 8002f7e:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_COLOR_MODE, parameter, 1);
 8002f80:	463b      	mov	r3, r7
 8002f82:	2201      	movs	r2, #1
 8002f84:	4619      	mov	r1, r3
 8002f86:	203a      	movs	r0, #58	; 0x3a
 8002f88:	f000 f8b4 	bl	80030f4 <ST7789H2_WriteReg>
  */

  /*--------------- ST7789H2 Frame rate setting -------------------------------*/
  /* PORCH control setting */      

  parameter[0] = 0x0C;
 8002f8c:	230c      	movs	r3, #12
 8002f8e:	703b      	strb	r3, [r7, #0]
  parameter[1] = 0x0C;
 8002f90:	230c      	movs	r3, #12
 8002f92:	707b      	strb	r3, [r7, #1]
  parameter[2] = 0x00;
 8002f94:	2300      	movs	r3, #0
 8002f96:	70bb      	strb	r3, [r7, #2]
  parameter[3] = 0x33;
 8002f98:	2333      	movs	r3, #51	; 0x33
 8002f9a:	70fb      	strb	r3, [r7, #3]
  parameter[4] = 0x33; 
 8002f9c:	2333      	movs	r3, #51	; 0x33
 8002f9e:	713b      	strb	r3, [r7, #4]
  ST7789H2_WriteReg(ST7789H2_PORCH_CTRL, parameter, 5);
 8002fa0:	463b      	mov	r3, r7
 8002fa2:	2205      	movs	r2, #5
 8002fa4:	4619      	mov	r1, r3
 8002fa6:	20b2      	movs	r0, #178	; 0xb2
 8002fa8:	f000 f8a4 	bl	80030f4 <ST7789H2_WriteReg>
  
  /* GATE control setting */
  parameter[0] = 0x75; 	// Old 0x35 new 0x75
 8002fac:	2375      	movs	r3, #117	; 0x75
 8002fae:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_GATE_CTRL, parameter, 1);
 8002fb0:	463b      	mov	r3, r7
 8002fb2:	2201      	movs	r2, #1
 8002fb4:	4619      	mov	r1, r3
 8002fb6:	20b7      	movs	r0, #183	; 0xb7
 8002fb8:	f000 f89c 	bl	80030f4 <ST7789H2_WriteReg>
  
  /*--------------- ST7789H2 Power setting ------------------------------------*/
  /* VCOM setting */ 
  parameter[0] = 0x21; 	//old 0x1F new 0x21
 8002fbc:	2321      	movs	r3, #33	; 0x21
 8002fbe:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_VCOM_SET, parameter, 1); 
 8002fc0:	463b      	mov	r3, r7
 8002fc2:	2201      	movs	r2, #1
 8002fc4:	4619      	mov	r1, r3
 8002fc6:	20bb      	movs	r0, #187	; 0xbb
 8002fc8:	f000 f894 	bl	80030f4 <ST7789H2_WriteReg>
  
  /* LCM Control setting */ 
  parameter[0] = 0x2C; 
 8002fcc:	232c      	movs	r3, #44	; 0x2c
 8002fce:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_LCM_CTRL, parameter, 1);
 8002fd0:	463b      	mov	r3, r7
 8002fd2:	2201      	movs	r2, #1
 8002fd4:	4619      	mov	r1, r3
 8002fd6:	20c0      	movs	r0, #192	; 0xc0
 8002fd8:	f000 f88c 	bl	80030f4 <ST7789H2_WriteReg>
  
  /* VDV and VRH Command Enable */ 
  parameter[0] = 0x01;
 8002fdc:	2301      	movs	r3, #1
 8002fde:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_VDV_VRH_EN, parameter, 1);
 8002fe0:	463b      	mov	r3, r7
 8002fe2:	2201      	movs	r2, #1
 8002fe4:	4619      	mov	r1, r3
 8002fe6:	20c2      	movs	r0, #194	; 0xc2
 8002fe8:	f000 f884 	bl	80030f4 <ST7789H2_WriteReg>

  parameter[0] = 0x17;	//old 0xC3 new 0x17
 8002fec:	2317      	movs	r3, #23
 8002fee:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(0xC3, parameter, 1);
 8002ff0:	463b      	mov	r3, r7
 8002ff2:	2201      	movs	r2, #1
 8002ff4:	4619      	mov	r1, r3
 8002ff6:	20c3      	movs	r0, #195	; 0xc3
 8002ff8:	f000 f87c 	bl	80030f4 <ST7789H2_WriteReg>
  
  /* VDV Set */ 
  parameter[0] = 0x20; 
 8002ffc:	2320      	movs	r3, #32
 8002ffe:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_VDV_SET, parameter, 1); 
 8003000:	463b      	mov	r3, r7
 8003002:	2201      	movs	r2, #1
 8003004:	4619      	mov	r1, r3
 8003006:	20c4      	movs	r0, #196	; 0xc4
 8003008:	f000 f874 	bl	80030f4 <ST7789H2_WriteReg>
  
  /* Frame Rate Control in normal mode */ 
  parameter[0] = 0x0A; 	//old 0x0F new 0x0A
 800300c:	230a      	movs	r3, #10
 800300e:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_FR_CTRL, parameter, 1); 
 8003010:	463b      	mov	r3, r7
 8003012:	2201      	movs	r2, #1
 8003014:	4619      	mov	r1, r3
 8003016:	20c6      	movs	r0, #198	; 0xc6
 8003018:	f000 f86c 	bl	80030f4 <ST7789H2_WriteReg>
  
  /* Power Control */     
  parameter[0] = 0xA4;
 800301c:	23a4      	movs	r3, #164	; 0xa4
 800301e:	703b      	strb	r3, [r7, #0]
  ST7789H2_WriteReg(ST7789H2_POWER_CTRL, parameter, 1); 
 8003020:	463b      	mov	r3, r7
 8003022:	2201      	movs	r2, #1
 8003024:	4619      	mov	r1, r3
 8003026:	20d0      	movs	r0, #208	; 0xd0
 8003028:	f000 f864 	bl	80030f4 <ST7789H2_WriteReg>
  
  /*--------------- ST7789H2 Gamma setting ------------------------------------*/
  /* Positive Voltage Gamma Control */ 
  parameter[0] = 0xD0;
 800302c:	23d0      	movs	r3, #208	; 0xd0
 800302e:	703b      	strb	r3, [r7, #0]
  parameter[1] = 0x0F;		//old 0x08 new 0x0F
 8003030:	230f      	movs	r3, #15
 8003032:	707b      	strb	r3, [r7, #1]
  parameter[2] = 0x17;		//0x11 new 0x17
 8003034:	2317      	movs	r3, #23
 8003036:	70bb      	strb	r3, [r7, #2]
  parameter[3] = 0x0D;		//0x08 new 0x0d
 8003038:	230d      	movs	r3, #13
 800303a:	70fb      	strb	r3, [r7, #3]
  parameter[4] = 0x0E;		//0x0C
 800303c:	230e      	movs	r3, #14
 800303e:	713b      	strb	r3, [r7, #4]
  parameter[5] = 0x02;		//0x15
 8003040:	2302      	movs	r3, #2
 8003042:	717b      	strb	r3, [r7, #5]
  parameter[6] = 0x3D;		//0x39
 8003044:	233d      	movs	r3, #61	; 0x3d
 8003046:	71bb      	strb	r3, [r7, #6]
  parameter[7] = 0x44;		//0x33
 8003048:	2344      	movs	r3, #68	; 0x44
 800304a:	71fb      	strb	r3, [r7, #7]
  parameter[8] = 0x4E;		//0x50
 800304c:	234e      	movs	r3, #78	; 0x4e
 800304e:	723b      	strb	r3, [r7, #8]
  parameter[9] = 0x0C;		//0x36
 8003050:	230c      	movs	r3, #12
 8003052:	727b      	strb	r3, [r7, #9]
  parameter[10] = 0x1B;		//0x13
 8003054:	231b      	movs	r3, #27
 8003056:	72bb      	strb	r3, [r7, #10]
  parameter[11] = 0x1B;		//0x14
 8003058:	231b      	movs	r3, #27
 800305a:	72fb      	strb	r3, [r7, #11]
  parameter[12] = 0x1C;		//0x29
 800305c:	231c      	movs	r3, #28
 800305e:	733b      	strb	r3, [r7, #12]
  parameter[13] = 0x1F;		//0x2D
 8003060:	231f      	movs	r3, #31
 8003062:	737b      	strb	r3, [r7, #13]
  ST7789H2_WriteReg(ST7789H2_PV_GAMMA_CTRL, parameter, 14); 
 8003064:	463b      	mov	r3, r7
 8003066:	220e      	movs	r2, #14
 8003068:	4619      	mov	r1, r3
 800306a:	20e0      	movs	r0, #224	; 0xe0
 800306c:	f000 f842 	bl	80030f4 <ST7789H2_WriteReg>
  
  /* Negative Voltage Gamma Control */     
  parameter[0] = 0xD0;		//0xD0
 8003070:	23d0      	movs	r3, #208	; 0xd0
 8003072:	703b      	strb	r3, [r7, #0]
  parameter[1] = 0x0F;		//0x08
 8003074:	230f      	movs	r3, #15
 8003076:	707b      	strb	r3, [r7, #1]
  parameter[2] = 0x17;		//0x10
 8003078:	2317      	movs	r3, #23
 800307a:	70bb      	strb	r3, [r7, #2]
  parameter[3] = 0x0D;		//0x08
 800307c:	230d      	movs	r3, #13
 800307e:	70fb      	strb	r3, [r7, #3]
  parameter[4] = 0x0E;		//0x06
 8003080:	230e      	movs	r3, #14
 8003082:	713b      	strb	r3, [r7, #4]
  parameter[5] = 0x02;		//0x06
 8003084:	2302      	movs	r3, #2
 8003086:	717b      	strb	r3, [r7, #5]
  parameter[6] = 0x3D;		//0x39
 8003088:	233d      	movs	r3, #61	; 0x3d
 800308a:	71bb      	strb	r3, [r7, #6]
  parameter[7] = 0x44;		//0x44
 800308c:	2344      	movs	r3, #68	; 0x44
 800308e:	71fb      	strb	r3, [r7, #7]
  parameter[8] = 0x4E;		//0x51
 8003090:	234e      	movs	r3, #78	; 0x4e
 8003092:	723b      	strb	r3, [r7, #8]
  parameter[9] = 0x0C;		//0x0B
 8003094:	230c      	movs	r3, #12
 8003096:	727b      	strb	r3, [r7, #9]
  parameter[10] = 0x1B;		//0x16
 8003098:	231b      	movs	r3, #27
 800309a:	72bb      	strb	r3, [r7, #10]
  parameter[11] = 0x1B;		//0x14
 800309c:	231b      	movs	r3, #27
 800309e:	72fb      	strb	r3, [r7, #11]
  parameter[12] = 0x1C;		//0x2F
 80030a0:	231c      	movs	r3, #28
 80030a2:	733b      	strb	r3, [r7, #12]
  parameter[13] = 0x1F;		//0x31
 80030a4:	231f      	movs	r3, #31
 80030a6:	737b      	strb	r3, [r7, #13]
  ST7789H2_WriteReg(ST7789H2_NV_GAMMA_CTRL, parameter, 14); 
 80030a8:	463b      	mov	r3, r7
 80030aa:	220e      	movs	r2, #14
 80030ac:	4619      	mov	r1, r3
 80030ae:	20e1      	movs	r0, #225	; 0xe1
 80030b0:	f000 f820 	bl	80030f4 <ST7789H2_WriteReg>
  ST7789H2_ReadID();
 80030b4:	f000 f814 	bl	80030e0 <ST7789H2_ReadID>
  /* Display ON command */
  ST7789H2_DisplayOn();
 80030b8:	f000 f804 	bl	80030c4 <ST7789H2_DisplayOn>
              ST7789H2_WritePixel(x,y,color);
        }
       }
  }
  */
}
 80030bc:	bf00      	nop
 80030be:	3710      	adds	r7, #16
 80030c0:	46bd      	mov	sp, r7
 80030c2:	bd80      	pop	{r7, pc}

080030c4 <ST7789H2_DisplayOn>:
  * @brief  Enables the Display.
  * @param  None
  * @retval None
  */
void ST7789H2_DisplayOn(void)
{
 80030c4:	b580      	push	{r7, lr}
 80030c6:	af00      	add	r7, sp, #0
  /* Display ON command */
  ST7789H2_WriteReg(ST7789H2_DISPLAY_ON, (uint8_t*)NULL, 0);
 80030c8:	2200      	movs	r2, #0
 80030ca:	2100      	movs	r1, #0
 80030cc:	2029      	movs	r0, #41	; 0x29
 80030ce:	f000 f811 	bl	80030f4 <ST7789H2_WriteReg>

  /* Sleep Out command */
  ST7789H2_WriteReg(ST7789H2_SLEEP_OUT, (uint8_t*)NULL, 0);
 80030d2:	2200      	movs	r2, #0
 80030d4:	2100      	movs	r1, #0
 80030d6:	2011      	movs	r0, #17
 80030d8:	f000 f80c 	bl	80030f4 <ST7789H2_WriteReg>
}
 80030dc:	bf00      	nop
 80030de:	bd80      	pop	{r7, pc}

080030e0 <ST7789H2_ReadID>:
  * @brief  Get the st7789h2 ID.
  * @param  None
  * @retval The st7789h2 ID 
  */
uint16_t ST7789H2_ReadID(void)
{
 80030e0:	b580      	push	{r7, lr}
 80030e2:	af00      	add	r7, sp, #0
  LCD_IO_Init();
 80030e4:	f7fd ff5a 	bl	8000f9c <LCD_IO_Init>
  
  return LCD_IO_ReadData(ST7789H2_LCD_ID);
 80030e8:	2004      	movs	r0, #4
 80030ea:	f7fd ffb7 	bl	800105c <LCD_IO_ReadData>
 80030ee:	4603      	mov	r3, r0
}
 80030f0:	4618      	mov	r0, r3
 80030f2:	bd80      	pop	{r7, pc}

080030f4 <ST7789H2_WriteReg>:
  * @param  Parameters: pointer on parameters value (if command uses one or several parameters).
  * @param  NbParameters: number of command parameters (0 if no parameter)
  * @retval None
  */
void ST7789H2_WriteReg(uint8_t Command, uint8_t *Parameters, uint8_t NbParameters)
{
 80030f4:	b580      	push	{r7, lr}
 80030f6:	b084      	sub	sp, #16
 80030f8:	af00      	add	r7, sp, #0
 80030fa:	4603      	mov	r3, r0
 80030fc:	6039      	str	r1, [r7, #0]
 80030fe:	71fb      	strb	r3, [r7, #7]
 8003100:	4613      	mov	r3, r2
 8003102:	71bb      	strb	r3, [r7, #6]
  uint8_t   i;
  /* Send command */
  LCD_IO_WriteReg(Command);
 8003104:	79fb      	ldrb	r3, [r7, #7]
 8003106:	4618      	mov	r0, r3
 8003108:	f7fd ff5a 	bl	8000fc0 <LCD_IO_WriteReg>
  
  /* Send command's parameters if any */
  for (i=0; i<NbParameters; i++)
 800310c:	2300      	movs	r3, #0
 800310e:	73fb      	strb	r3, [r7, #15]
 8003110:	e00a      	b.n	8003128 <ST7789H2_WriteReg+0x34>
  {
    LCD_IO_WriteData(Parameters[i]);
 8003112:	7bfb      	ldrb	r3, [r7, #15]
 8003114:	683a      	ldr	r2, [r7, #0]
 8003116:	4413      	add	r3, r2
 8003118:	781b      	ldrb	r3, [r3, #0]
 800311a:	b29b      	uxth	r3, r3
 800311c:	4618      	mov	r0, r3
 800311e:	f7fd ff71 	bl	8001004 <LCD_IO_WriteData>
  for (i=0; i<NbParameters; i++)
 8003122:	7bfb      	ldrb	r3, [r7, #15]
 8003124:	3301      	adds	r3, #1
 8003126:	73fb      	strb	r3, [r7, #15]
 8003128:	7bfa      	ldrb	r2, [r7, #15]
 800312a:	79bb      	ldrb	r3, [r7, #6]
 800312c:	429a      	cmp	r2, r3
 800312e:	d3f0      	bcc.n	8003112 <ST7789H2_WriteReg+0x1e>
  }

}
 8003130:	bf00      	nop
 8003132:	3710      	adds	r7, #16
 8003134:	46bd      	mov	sp, r7
 8003136:	bd80      	pop	{r7, pc}

08003138 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003138:	b580      	push	{r7, lr}
 800313a:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800313c:	4b0e      	ldr	r3, [pc, #56]	; (8003178 <HAL_Init+0x40>)
 800313e:	681b      	ldr	r3, [r3, #0]
 8003140:	4a0d      	ldr	r2, [pc, #52]	; (8003178 <HAL_Init+0x40>)
 8003142:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003146:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003148:	4b0b      	ldr	r3, [pc, #44]	; (8003178 <HAL_Init+0x40>)
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	4a0a      	ldr	r2, [pc, #40]	; (8003178 <HAL_Init+0x40>)
 800314e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8003152:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003154:	4b08      	ldr	r3, [pc, #32]	; (8003178 <HAL_Init+0x40>)
 8003156:	681b      	ldr	r3, [r3, #0]
 8003158:	4a07      	ldr	r2, [pc, #28]	; (8003178 <HAL_Init+0x40>)
 800315a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800315e:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003160:	2003      	movs	r0, #3
 8003162:	f000 f96f 	bl	8003444 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003166:	2000      	movs	r0, #0
 8003168:	f000 f808 	bl	800317c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800316c:	f7fe fdda 	bl	8001d24 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8003170:	2300      	movs	r3, #0
}
 8003172:	4618      	mov	r0, r3
 8003174:	bd80      	pop	{r7, pc}
 8003176:	bf00      	nop
 8003178:	40023c00 	.word	0x40023c00

0800317c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800317c:	b580      	push	{r7, lr}
 800317e:	b082      	sub	sp, #8
 8003180:	af00      	add	r7, sp, #0
 8003182:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8003184:	4b12      	ldr	r3, [pc, #72]	; (80031d0 <HAL_InitTick+0x54>)
 8003186:	681a      	ldr	r2, [r3, #0]
 8003188:	4b12      	ldr	r3, [pc, #72]	; (80031d4 <HAL_InitTick+0x58>)
 800318a:	781b      	ldrb	r3, [r3, #0]
 800318c:	4619      	mov	r1, r3
 800318e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003192:	fbb3 f3f1 	udiv	r3, r3, r1
 8003196:	fbb2 f3f3 	udiv	r3, r2, r3
 800319a:	4618      	mov	r0, r3
 800319c:	f000 f995 	bl	80034ca <HAL_SYSTICK_Config>
 80031a0:	4603      	mov	r3, r0
 80031a2:	2b00      	cmp	r3, #0
 80031a4:	d001      	beq.n	80031aa <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 80031a6:	2301      	movs	r3, #1
 80031a8:	e00e      	b.n	80031c8 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	2b0f      	cmp	r3, #15
 80031ae:	d80a      	bhi.n	80031c6 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80031b0:	2200      	movs	r2, #0
 80031b2:	6879      	ldr	r1, [r7, #4]
 80031b4:	f04f 30ff 	mov.w	r0, #4294967295
 80031b8:	f000 f94f 	bl	800345a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80031bc:	4a06      	ldr	r2, [pc, #24]	; (80031d8 <HAL_InitTick+0x5c>)
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80031c2:	2300      	movs	r3, #0
 80031c4:	e000      	b.n	80031c8 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 80031c6:	2301      	movs	r3, #1
}
 80031c8:	4618      	mov	r0, r3
 80031ca:	3708      	adds	r7, #8
 80031cc:	46bd      	mov	sp, r7
 80031ce:	bd80      	pop	{r7, pc}
 80031d0:	20000004 	.word	0x20000004
 80031d4:	2000000c 	.word	0x2000000c
 80031d8:	20000008 	.word	0x20000008

080031dc <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80031dc:	b480      	push	{r7}
 80031de:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80031e0:	4b06      	ldr	r3, [pc, #24]	; (80031fc <HAL_IncTick+0x20>)
 80031e2:	781b      	ldrb	r3, [r3, #0]
 80031e4:	461a      	mov	r2, r3
 80031e6:	4b06      	ldr	r3, [pc, #24]	; (8003200 <HAL_IncTick+0x24>)
 80031e8:	681b      	ldr	r3, [r3, #0]
 80031ea:	4413      	add	r3, r2
 80031ec:	4a04      	ldr	r2, [pc, #16]	; (8003200 <HAL_IncTick+0x24>)
 80031ee:	6013      	str	r3, [r2, #0]
}
 80031f0:	bf00      	nop
 80031f2:	46bd      	mov	sp, r7
 80031f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031f8:	4770      	bx	lr
 80031fa:	bf00      	nop
 80031fc:	2000000c 	.word	0x2000000c
 8003200:	20027008 	.word	0x20027008

08003204 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8003204:	b480      	push	{r7}
 8003206:	af00      	add	r7, sp, #0
  return uwTick;
 8003208:	4b03      	ldr	r3, [pc, #12]	; (8003218 <HAL_GetTick+0x14>)
 800320a:	681b      	ldr	r3, [r3, #0]
}
 800320c:	4618      	mov	r0, r3
 800320e:	46bd      	mov	sp, r7
 8003210:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003214:	4770      	bx	lr
 8003216:	bf00      	nop
 8003218:	20027008 	.word	0x20027008

0800321c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800321c:	b580      	push	{r7, lr}
 800321e:	b084      	sub	sp, #16
 8003220:	af00      	add	r7, sp, #0
 8003222:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8003224:	f7ff ffee 	bl	8003204 <HAL_GetTick>
 8003228:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 800322a:	687b      	ldr	r3, [r7, #4]
 800322c:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800322e:	68fb      	ldr	r3, [r7, #12]
 8003230:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003234:	d005      	beq.n	8003242 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8003236:	4b09      	ldr	r3, [pc, #36]	; (800325c <HAL_Delay+0x40>)
 8003238:	781b      	ldrb	r3, [r3, #0]
 800323a:	461a      	mov	r2, r3
 800323c:	68fb      	ldr	r3, [r7, #12]
 800323e:	4413      	add	r3, r2
 8003240:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003242:	bf00      	nop
 8003244:	f7ff ffde 	bl	8003204 <HAL_GetTick>
 8003248:	4602      	mov	r2, r0
 800324a:	68bb      	ldr	r3, [r7, #8]
 800324c:	1ad3      	subs	r3, r2, r3
 800324e:	68fa      	ldr	r2, [r7, #12]
 8003250:	429a      	cmp	r2, r3
 8003252:	d8f7      	bhi.n	8003244 <HAL_Delay+0x28>
  {
  }
}
 8003254:	bf00      	nop
 8003256:	3710      	adds	r7, #16
 8003258:	46bd      	mov	sp, r7
 800325a:	bd80      	pop	{r7, pc}
 800325c:	2000000c 	.word	0x2000000c

08003260 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003260:	b480      	push	{r7}
 8003262:	b085      	sub	sp, #20
 8003264:	af00      	add	r7, sp, #0
 8003266:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	f003 0307 	and.w	r3, r3, #7
 800326e:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003270:	4b0c      	ldr	r3, [pc, #48]	; (80032a4 <__NVIC_SetPriorityGrouping+0x44>)
 8003272:	68db      	ldr	r3, [r3, #12]
 8003274:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003276:	68ba      	ldr	r2, [r7, #8]
 8003278:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800327c:	4013      	ands	r3, r2
 800327e:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003280:	68fb      	ldr	r3, [r7, #12]
 8003282:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003284:	68bb      	ldr	r3, [r7, #8]
 8003286:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003288:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800328c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003290:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8003292:	4a04      	ldr	r2, [pc, #16]	; (80032a4 <__NVIC_SetPriorityGrouping+0x44>)
 8003294:	68bb      	ldr	r3, [r7, #8]
 8003296:	60d3      	str	r3, [r2, #12]
}
 8003298:	bf00      	nop
 800329a:	3714      	adds	r7, #20
 800329c:	46bd      	mov	sp, r7
 800329e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032a2:	4770      	bx	lr
 80032a4:	e000ed00 	.word	0xe000ed00

080032a8 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80032a8:	b480      	push	{r7}
 80032aa:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80032ac:	4b04      	ldr	r3, [pc, #16]	; (80032c0 <__NVIC_GetPriorityGrouping+0x18>)
 80032ae:	68db      	ldr	r3, [r3, #12]
 80032b0:	0a1b      	lsrs	r3, r3, #8
 80032b2:	f003 0307 	and.w	r3, r3, #7
}
 80032b6:	4618      	mov	r0, r3
 80032b8:	46bd      	mov	sp, r7
 80032ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032be:	4770      	bx	lr
 80032c0:	e000ed00 	.word	0xe000ed00

080032c4 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80032c4:	b480      	push	{r7}
 80032c6:	b083      	sub	sp, #12
 80032c8:	af00      	add	r7, sp, #0
 80032ca:	4603      	mov	r3, r0
 80032cc:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80032ce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80032d2:	2b00      	cmp	r3, #0
 80032d4:	db0b      	blt.n	80032ee <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80032d6:	79fb      	ldrb	r3, [r7, #7]
 80032d8:	f003 021f 	and.w	r2, r3, #31
 80032dc:	4907      	ldr	r1, [pc, #28]	; (80032fc <__NVIC_EnableIRQ+0x38>)
 80032de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80032e2:	095b      	lsrs	r3, r3, #5
 80032e4:	2001      	movs	r0, #1
 80032e6:	fa00 f202 	lsl.w	r2, r0, r2
 80032ea:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80032ee:	bf00      	nop
 80032f0:	370c      	adds	r7, #12
 80032f2:	46bd      	mov	sp, r7
 80032f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032f8:	4770      	bx	lr
 80032fa:	bf00      	nop
 80032fc:	e000e100 	.word	0xe000e100

08003300 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8003300:	b480      	push	{r7}
 8003302:	b083      	sub	sp, #12
 8003304:	af00      	add	r7, sp, #0
 8003306:	4603      	mov	r3, r0
 8003308:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800330a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800330e:	2b00      	cmp	r3, #0
 8003310:	db10      	blt.n	8003334 <__NVIC_DisableIRQ+0x34>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003312:	79fb      	ldrb	r3, [r7, #7]
 8003314:	f003 021f 	and.w	r2, r3, #31
 8003318:	4909      	ldr	r1, [pc, #36]	; (8003340 <__NVIC_DisableIRQ+0x40>)
 800331a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800331e:	095b      	lsrs	r3, r3, #5
 8003320:	2001      	movs	r0, #1
 8003322:	fa00 f202 	lsl.w	r2, r0, r2
 8003326:	3320      	adds	r3, #32
 8003328:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800332c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8003330:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
  }
}
 8003334:	bf00      	nop
 8003336:	370c      	adds	r7, #12
 8003338:	46bd      	mov	sp, r7
 800333a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800333e:	4770      	bx	lr
 8003340:	e000e100 	.word	0xe000e100

08003344 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003344:	b480      	push	{r7}
 8003346:	b083      	sub	sp, #12
 8003348:	af00      	add	r7, sp, #0
 800334a:	4603      	mov	r3, r0
 800334c:	6039      	str	r1, [r7, #0]
 800334e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003350:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003354:	2b00      	cmp	r3, #0
 8003356:	db0a      	blt.n	800336e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003358:	683b      	ldr	r3, [r7, #0]
 800335a:	b2da      	uxtb	r2, r3
 800335c:	490c      	ldr	r1, [pc, #48]	; (8003390 <__NVIC_SetPriority+0x4c>)
 800335e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003362:	0112      	lsls	r2, r2, #4
 8003364:	b2d2      	uxtb	r2, r2
 8003366:	440b      	add	r3, r1
 8003368:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800336c:	e00a      	b.n	8003384 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800336e:	683b      	ldr	r3, [r7, #0]
 8003370:	b2da      	uxtb	r2, r3
 8003372:	4908      	ldr	r1, [pc, #32]	; (8003394 <__NVIC_SetPriority+0x50>)
 8003374:	79fb      	ldrb	r3, [r7, #7]
 8003376:	f003 030f 	and.w	r3, r3, #15
 800337a:	3b04      	subs	r3, #4
 800337c:	0112      	lsls	r2, r2, #4
 800337e:	b2d2      	uxtb	r2, r2
 8003380:	440b      	add	r3, r1
 8003382:	761a      	strb	r2, [r3, #24]
}
 8003384:	bf00      	nop
 8003386:	370c      	adds	r7, #12
 8003388:	46bd      	mov	sp, r7
 800338a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800338e:	4770      	bx	lr
 8003390:	e000e100 	.word	0xe000e100
 8003394:	e000ed00 	.word	0xe000ed00

08003398 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8003398:	b480      	push	{r7}
 800339a:	b089      	sub	sp, #36	; 0x24
 800339c:	af00      	add	r7, sp, #0
 800339e:	60f8      	str	r0, [r7, #12]
 80033a0:	60b9      	str	r1, [r7, #8]
 80033a2:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80033a4:	68fb      	ldr	r3, [r7, #12]
 80033a6:	f003 0307 	and.w	r3, r3, #7
 80033aa:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80033ac:	69fb      	ldr	r3, [r7, #28]
 80033ae:	f1c3 0307 	rsb	r3, r3, #7
 80033b2:	2b04      	cmp	r3, #4
 80033b4:	bf28      	it	cs
 80033b6:	2304      	movcs	r3, #4
 80033b8:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80033ba:	69fb      	ldr	r3, [r7, #28]
 80033bc:	3304      	adds	r3, #4
 80033be:	2b06      	cmp	r3, #6
 80033c0:	d902      	bls.n	80033c8 <NVIC_EncodePriority+0x30>
 80033c2:	69fb      	ldr	r3, [r7, #28]
 80033c4:	3b03      	subs	r3, #3
 80033c6:	e000      	b.n	80033ca <NVIC_EncodePriority+0x32>
 80033c8:	2300      	movs	r3, #0
 80033ca:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80033cc:	f04f 32ff 	mov.w	r2, #4294967295
 80033d0:	69bb      	ldr	r3, [r7, #24]
 80033d2:	fa02 f303 	lsl.w	r3, r2, r3
 80033d6:	43da      	mvns	r2, r3
 80033d8:	68bb      	ldr	r3, [r7, #8]
 80033da:	401a      	ands	r2, r3
 80033dc:	697b      	ldr	r3, [r7, #20]
 80033de:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80033e0:	f04f 31ff 	mov.w	r1, #4294967295
 80033e4:	697b      	ldr	r3, [r7, #20]
 80033e6:	fa01 f303 	lsl.w	r3, r1, r3
 80033ea:	43d9      	mvns	r1, r3
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80033f0:	4313      	orrs	r3, r2
         );
}
 80033f2:	4618      	mov	r0, r3
 80033f4:	3724      	adds	r7, #36	; 0x24
 80033f6:	46bd      	mov	sp, r7
 80033f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033fc:	4770      	bx	lr
	...

08003400 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8003400:	b580      	push	{r7, lr}
 8003402:	b082      	sub	sp, #8
 8003404:	af00      	add	r7, sp, #0
 8003406:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	3b01      	subs	r3, #1
 800340c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003410:	d301      	bcc.n	8003416 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003412:	2301      	movs	r3, #1
 8003414:	e00f      	b.n	8003436 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003416:	4a0a      	ldr	r2, [pc, #40]	; (8003440 <SysTick_Config+0x40>)
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	3b01      	subs	r3, #1
 800341c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800341e:	210f      	movs	r1, #15
 8003420:	f04f 30ff 	mov.w	r0, #4294967295
 8003424:	f7ff ff8e 	bl	8003344 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003428:	4b05      	ldr	r3, [pc, #20]	; (8003440 <SysTick_Config+0x40>)
 800342a:	2200      	movs	r2, #0
 800342c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800342e:	4b04      	ldr	r3, [pc, #16]	; (8003440 <SysTick_Config+0x40>)
 8003430:	2207      	movs	r2, #7
 8003432:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003434:	2300      	movs	r3, #0
}
 8003436:	4618      	mov	r0, r3
 8003438:	3708      	adds	r7, #8
 800343a:	46bd      	mov	sp, r7
 800343c:	bd80      	pop	{r7, pc}
 800343e:	bf00      	nop
 8003440:	e000e010 	.word	0xe000e010

08003444 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003444:	b580      	push	{r7, lr}
 8003446:	b082      	sub	sp, #8
 8003448:	af00      	add	r7, sp, #0
 800344a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 800344c:	6878      	ldr	r0, [r7, #4]
 800344e:	f7ff ff07 	bl	8003260 <__NVIC_SetPriorityGrouping>
}
 8003452:	bf00      	nop
 8003454:	3708      	adds	r7, #8
 8003456:	46bd      	mov	sp, r7
 8003458:	bd80      	pop	{r7, pc}

0800345a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800345a:	b580      	push	{r7, lr}
 800345c:	b086      	sub	sp, #24
 800345e:	af00      	add	r7, sp, #0
 8003460:	4603      	mov	r3, r0
 8003462:	60b9      	str	r1, [r7, #8]
 8003464:	607a      	str	r2, [r7, #4]
 8003466:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8003468:	2300      	movs	r3, #0
 800346a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 800346c:	f7ff ff1c 	bl	80032a8 <__NVIC_GetPriorityGrouping>
 8003470:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8003472:	687a      	ldr	r2, [r7, #4]
 8003474:	68b9      	ldr	r1, [r7, #8]
 8003476:	6978      	ldr	r0, [r7, #20]
 8003478:	f7ff ff8e 	bl	8003398 <NVIC_EncodePriority>
 800347c:	4602      	mov	r2, r0
 800347e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003482:	4611      	mov	r1, r2
 8003484:	4618      	mov	r0, r3
 8003486:	f7ff ff5d 	bl	8003344 <__NVIC_SetPriority>
}
 800348a:	bf00      	nop
 800348c:	3718      	adds	r7, #24
 800348e:	46bd      	mov	sp, r7
 8003490:	bd80      	pop	{r7, pc}

08003492 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003492:	b580      	push	{r7, lr}
 8003494:	b082      	sub	sp, #8
 8003496:	af00      	add	r7, sp, #0
 8003498:	4603      	mov	r3, r0
 800349a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 800349c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034a0:	4618      	mov	r0, r3
 80034a2:	f7ff ff0f 	bl	80032c4 <__NVIC_EnableIRQ>
}
 80034a6:	bf00      	nop
 80034a8:	3708      	adds	r7, #8
 80034aa:	46bd      	mov	sp, r7
 80034ac:	bd80      	pop	{r7, pc}

080034ae <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80034ae:	b580      	push	{r7, lr}
 80034b0:	b082      	sub	sp, #8
 80034b2:	af00      	add	r7, sp, #0
 80034b4:	4603      	mov	r3, r0
 80034b6:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 80034b8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034bc:	4618      	mov	r0, r3
 80034be:	f7ff ff1f 	bl	8003300 <__NVIC_DisableIRQ>
}
 80034c2:	bf00      	nop
 80034c4:	3708      	adds	r7, #8
 80034c6:	46bd      	mov	sp, r7
 80034c8:	bd80      	pop	{r7, pc}

080034ca <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80034ca:	b580      	push	{r7, lr}
 80034cc:	b082      	sub	sp, #8
 80034ce:	af00      	add	r7, sp, #0
 80034d0:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80034d2:	6878      	ldr	r0, [r7, #4]
 80034d4:	f7ff ff94 	bl	8003400 <SysTick_Config>
 80034d8:	4603      	mov	r3, r0
}
 80034da:	4618      	mov	r0, r3
 80034dc:	3708      	adds	r7, #8
 80034de:	46bd      	mov	sp, r7
 80034e0:	bd80      	pop	{r7, pc}

080034e2 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80034e2:	b580      	push	{r7, lr}
 80034e4:	b082      	sub	sp, #8
 80034e6:	af00      	add	r7, sp, #0
 80034e8:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80034ea:	687b      	ldr	r3, [r7, #4]
 80034ec:	2b00      	cmp	r3, #0
 80034ee:	d101      	bne.n	80034f4 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 80034f0:	2301      	movs	r3, #1
 80034f2:	e00e      	b.n	8003512 <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	795b      	ldrb	r3, [r3, #5]
 80034f8:	b2db      	uxtb	r3, r3
 80034fa:	2b00      	cmp	r3, #0
 80034fc:	d105      	bne.n	800350a <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	2200      	movs	r2, #0
 8003502:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003504:	6878      	ldr	r0, [r7, #4]
 8003506:	f7fe fc35 	bl	8001d74 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	2201      	movs	r2, #1
 800350e:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8003510:	2300      	movs	r3, #0
}
 8003512:	4618      	mov	r0, r3
 8003514:	3708      	adds	r7, #8
 8003516:	46bd      	mov	sp, r7
 8003518:	bd80      	pop	{r7, pc}

0800351a <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 800351a:	b580      	push	{r7, lr}
 800351c:	b082      	sub	sp, #8
 800351e:	af00      	add	r7, sp, #0
 8003520:	6078      	str	r0, [r7, #4]
  /* Check DAC handle */
  if(hdac == NULL)
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	2b00      	cmp	r3, #0
 8003526:	d101      	bne.n	800352c <HAL_DAC_Init+0x12>
  {
     return HAL_ERROR;
 8003528:	2301      	movs	r3, #1
 800352a:	e014      	b.n	8003556 <HAL_DAC_Init+0x3c>
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 800352c:	687b      	ldr	r3, [r7, #4]
 800352e:	791b      	ldrb	r3, [r3, #4]
 8003530:	b2db      	uxtb	r3, r3
 8003532:	2b00      	cmp	r3, #0
 8003534:	d105      	bne.n	8003542 <HAL_DAC_Init+0x28>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	2200      	movs	r2, #0
 800353a:	715a      	strb	r2, [r3, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 800353c:	6878      	ldr	r0, [r7, #4]
 800353e:	f7fe fc3b 	bl	8001db8 <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 8003542:	687b      	ldr	r3, [r7, #4]
 8003544:	2202      	movs	r2, #2
 8003546:	711a      	strb	r2, [r3, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	2200      	movs	r2, #0
 800354c:	611a      	str	r2, [r3, #16]
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	2201      	movs	r2, #1
 8003552:	711a      	strb	r2, [r3, #4]
  
  /* Return function status */
  return HAL_OK;
 8003554:	2300      	movs	r3, #0
}
 8003556:	4618      	mov	r0, r3
 8003558:	3708      	adds	r7, #8
 800355a:	46bd      	mov	sp, r7
 800355c:	bd80      	pop	{r7, pc}

0800355e <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 800355e:	b480      	push	{r7}
 8003560:	b087      	sub	sp, #28
 8003562:	af00      	add	r7, sp, #0
 8003564:	60f8      	str	r0, [r7, #12]
 8003566:	60b9      	str	r1, [r7, #8]
 8003568:	607a      	str	r2, [r7, #4]
  uint32_t tmpreg1 = 0U, tmpreg2 = 0U;
 800356a:	2300      	movs	r3, #0
 800356c:	617b      	str	r3, [r7, #20]
 800356e:	2300      	movs	r3, #0
 8003570:	613b      	str	r3, [r7, #16]
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 8003572:	68fb      	ldr	r3, [r7, #12]
 8003574:	795b      	ldrb	r3, [r3, #5]
 8003576:	2b01      	cmp	r3, #1
 8003578:	d101      	bne.n	800357e <HAL_DAC_ConfigChannel+0x20>
 800357a:	2302      	movs	r3, #2
 800357c:	e036      	b.n	80035ec <HAL_DAC_ConfigChannel+0x8e>
 800357e:	68fb      	ldr	r3, [r7, #12]
 8003580:	2201      	movs	r2, #1
 8003582:	715a      	strb	r2, [r3, #5]
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 8003584:	68fb      	ldr	r3, [r7, #12]
 8003586:	2202      	movs	r2, #2
 8003588:	711a      	strb	r2, [r3, #4]
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 800358a:	68fb      	ldr	r3, [r7, #12]
 800358c:	681b      	ldr	r3, [r3, #0]
 800358e:	681b      	ldr	r3, [r3, #0]
 8003590:	617b      	str	r3, [r7, #20]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 8003592:	f640 72fe 	movw	r2, #4094	; 0xffe
 8003596:	687b      	ldr	r3, [r7, #4]
 8003598:	fa02 f303 	lsl.w	r3, r2, r3
 800359c:	43db      	mvns	r3, r3
 800359e:	697a      	ldr	r2, [r7, #20]
 80035a0:	4013      	ands	r3, r2
 80035a2:	617b      	str	r3, [r7, #20]
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 80035a4:	68bb      	ldr	r3, [r7, #8]
 80035a6:	681a      	ldr	r2, [r3, #0]
 80035a8:	68bb      	ldr	r3, [r7, #8]
 80035aa:	685b      	ldr	r3, [r3, #4]
 80035ac:	4313      	orrs	r3, r2
 80035ae:	613b      	str	r3, [r7, #16]
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 80035b0:	693a      	ldr	r2, [r7, #16]
 80035b2:	687b      	ldr	r3, [r7, #4]
 80035b4:	fa02 f303 	lsl.w	r3, r2, r3
 80035b8:	697a      	ldr	r2, [r7, #20]
 80035ba:	4313      	orrs	r3, r2
 80035bc:	617b      	str	r3, [r7, #20]
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 80035be:	68fb      	ldr	r3, [r7, #12]
 80035c0:	681b      	ldr	r3, [r3, #0]
 80035c2:	697a      	ldr	r2, [r7, #20]
 80035c4:	601a      	str	r2, [r3, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 80035c6:	68fb      	ldr	r3, [r7, #12]
 80035c8:	681b      	ldr	r3, [r3, #0]
 80035ca:	6819      	ldr	r1, [r3, #0]
 80035cc:	22c0      	movs	r2, #192	; 0xc0
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	fa02 f303 	lsl.w	r3, r2, r3
 80035d4:	43da      	mvns	r2, r3
 80035d6:	68fb      	ldr	r3, [r7, #12]
 80035d8:	681b      	ldr	r3, [r3, #0]
 80035da:	400a      	ands	r2, r1
 80035dc:	601a      	str	r2, [r3, #0]
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80035de:	68fb      	ldr	r3, [r7, #12]
 80035e0:	2201      	movs	r2, #1
 80035e2:	711a      	strb	r2, [r3, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80035e4:	68fb      	ldr	r3, [r7, #12]
 80035e6:	2200      	movs	r2, #0
 80035e8:	715a      	strb	r2, [r3, #5]
  
  /* Return function status */
  return HAL_OK;
 80035ea:	2300      	movs	r3, #0
}
 80035ec:	4618      	mov	r0, r3
 80035ee:	371c      	adds	r7, #28
 80035f0:	46bd      	mov	sp, r7
 80035f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035f6:	4770      	bx	lr

080035f8 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 80035f8:	b480      	push	{r7}
 80035fa:	b083      	sub	sp, #12
 80035fc:	af00      	add	r7, sp, #0
 80035fe:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003606:	b2db      	uxtb	r3, r3
 8003608:	2b02      	cmp	r3, #2
 800360a:	d004      	beq.n	8003616 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800360c:	687b      	ldr	r3, [r7, #4]
 800360e:	2280      	movs	r2, #128	; 0x80
 8003610:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 8003612:	2301      	movs	r3, #1
 8003614:	e00c      	b.n	8003630 <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	2205      	movs	r2, #5
 800361a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	681a      	ldr	r2, [r3, #0]
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	681b      	ldr	r3, [r3, #0]
 8003628:	f022 0201 	bic.w	r2, r2, #1
 800362c:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 800362e:	2300      	movs	r3, #0
}
 8003630:	4618      	mov	r0, r3
 8003632:	370c      	adds	r7, #12
 8003634:	46bd      	mov	sp, r7
 8003636:	f85d 7b04 	ldr.w	r7, [sp], #4
 800363a:	4770      	bx	lr

0800363c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800363c:	b580      	push	{r7, lr}
 800363e:	b082      	sub	sp, #8
 8003640:	af00      	add	r7, sp, #0
 8003642:	6078      	str	r0, [r7, #4]
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	2b00      	cmp	r3, #0
 8003648:	d101      	bne.n	800364e <HAL_DMA2D_Init+0x12>
  {
     return HAL_ERROR;
 800364a:	2301      	movs	r3, #1
 800364c:	e03b      	b.n	80036c6 <HAL_DMA2D_Init+0x8a>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 800364e:	687b      	ldr	r3, [r7, #4]
 8003650:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8003654:	b2db      	uxtb	r3, r3
 8003656:	2b00      	cmp	r3, #0
 8003658:	d106      	bne.n	8003668 <HAL_DMA2D_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	2200      	movs	r2, #0
 800365e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8003662:	6878      	ldr	r0, [r7, #4]
 8003664:	f7fe fbec 	bl	8001e40 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	2202      	movs	r2, #2
 800366c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003670:	687b      	ldr	r3, [r7, #4]
 8003672:	681b      	ldr	r3, [r3, #0]
 8003674:	681b      	ldr	r3, [r3, #0]
 8003676:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	685a      	ldr	r2, [r3, #4]
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	681b      	ldr	r3, [r3, #0]
 8003682:	430a      	orrs	r2, r1
 8003684:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003686:	687b      	ldr	r3, [r7, #4]
 8003688:	681b      	ldr	r3, [r3, #0]
 800368a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800368c:	f023 0107 	bic.w	r1, r3, #7
 8003690:	687b      	ldr	r3, [r7, #4]
 8003692:	689a      	ldr	r2, [r3, #8]
 8003694:	687b      	ldr	r3, [r7, #4]
 8003696:	681b      	ldr	r3, [r3, #0]
 8003698:	430a      	orrs	r2, r1
 800369a:	635a      	str	r2, [r3, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	681b      	ldr	r3, [r3, #0]
 80036a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036a2:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80036a6:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80036aa:	687a      	ldr	r2, [r7, #4]
 80036ac:	68d1      	ldr	r1, [r2, #12]
 80036ae:	687a      	ldr	r2, [r7, #4]
 80036b0:	6812      	ldr	r2, [r2, #0]
 80036b2:	430b      	orrs	r3, r1
 80036b4:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80036b6:	687b      	ldr	r3, [r7, #4]
 80036b8:	2200      	movs	r2, #0
 80036ba:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80036bc:	687b      	ldr	r3, [r7, #4]
 80036be:	2201      	movs	r2, #1
 80036c0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  return HAL_OK;
 80036c4:	2300      	movs	r3, #0
}
 80036c6:	4618      	mov	r0, r3
 80036c8:	3708      	adds	r7, #8
 80036ca:	46bd      	mov	sp, r7
 80036cc:	bd80      	pop	{r7, pc}
	...

080036d0 <HAL_DMA2D_DeInit>:
  *                 the configuration information for the DMA2D.
  * @retval None
  */

HAL_StatusTypeDef HAL_DMA2D_DeInit(DMA2D_HandleTypeDef *hdma2d)
{
 80036d0:	b580      	push	{r7, lr}
 80036d2:	b082      	sub	sp, #8
 80036d4:	af00      	add	r7, sp, #0
 80036d6:	6078      	str	r0, [r7, #4]

  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	2b00      	cmp	r3, #0
 80036dc:	d101      	bne.n	80036e2 <HAL_DMA2D_DeInit+0x12>
  {
     return HAL_ERROR;
 80036de:	2301      	movs	r3, #1
 80036e0:	e05f      	b.n	80037a2 <HAL_DMA2D_DeInit+0xd2>
  }

  /* Before aborting any DMA2D transfer or CLUT loading, check
     first whether or not DMA2D clock is enabled */
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 80036e2:	4b32      	ldr	r3, [pc, #200]	; (80037ac <HAL_DMA2D_DeInit+0xdc>)
 80036e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036e6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80036ea:	2b00      	cmp	r3, #0
 80036ec:	d02e      	beq.n	800374c <HAL_DMA2D_DeInit+0x7c>
  {
    /* Abort DMA2D transfer if any */
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	681b      	ldr	r3, [r3, #0]
 80036f4:	f003 0301 	and.w	r3, r3, #1
 80036f8:	2b01      	cmp	r3, #1
 80036fa:	d107      	bne.n	800370c <HAL_DMA2D_DeInit+0x3c>
    {
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 80036fc:	6878      	ldr	r0, [r7, #4]
 80036fe:	f000 f8c1 	bl	8003884 <HAL_DMA2D_Abort>
 8003702:	4603      	mov	r3, r0
 8003704:	2b00      	cmp	r3, #0
 8003706:	d021      	beq.n	800374c <HAL_DMA2D_DeInit+0x7c>
      {
        /* Issue when aborting DMA2D transfer */
        return HAL_ERROR;
 8003708:	2301      	movs	r3, #1
 800370a:	e04a      	b.n	80037a2 <HAL_DMA2D_DeInit+0xd2>
      }
    }
    else
    {
      /* Abort background CLUT loading if any */
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 800370c:	687b      	ldr	r3, [r7, #4]
 800370e:	681b      	ldr	r3, [r3, #0]
 8003710:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003712:	f003 0320 	and.w	r3, r3, #32
 8003716:	2b20      	cmp	r3, #32
 8003718:	d108      	bne.n	800372c <HAL_DMA2D_DeInit+0x5c>
      {
        if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 0U) != HAL_OK)
 800371a:	2100      	movs	r1, #0
 800371c:	6878      	ldr	r0, [r7, #4]
 800371e:	f000 f8f7 	bl	8003910 <HAL_DMA2D_CLUTLoading_Abort>
 8003722:	4603      	mov	r3, r0
 8003724:	2b00      	cmp	r3, #0
 8003726:	d011      	beq.n	800374c <HAL_DMA2D_DeInit+0x7c>
        {
          /* Issue when aborting background CLUT loading */
          return HAL_ERROR;
 8003728:	2301      	movs	r3, #1
 800372a:	e03a      	b.n	80037a2 <HAL_DMA2D_DeInit+0xd2>
        }
      }
      else
      {
        /* Abort foreground CLUT loading if any */
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	681b      	ldr	r3, [r3, #0]
 8003730:	69db      	ldr	r3, [r3, #28]
 8003732:	f003 0320 	and.w	r3, r3, #32
 8003736:	2b20      	cmp	r3, #32
 8003738:	d108      	bne.n	800374c <HAL_DMA2D_DeInit+0x7c>
        {
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 800373a:	2101      	movs	r1, #1
 800373c:	6878      	ldr	r0, [r7, #4]
 800373e:	f000 f8e7 	bl	8003910 <HAL_DMA2D_CLUTLoading_Abort>
 8003742:	4603      	mov	r3, r0
 8003744:	2b00      	cmp	r3, #0
 8003746:	d001      	beq.n	800374c <HAL_DMA2D_DeInit+0x7c>
          {
            /* Issue when aborting foreground CLUT loading */
            return HAL_ERROR;
 8003748:	2301      	movs	r3, #1
 800374a:	e02a      	b.n	80037a2 <HAL_DMA2D_DeInit+0xd2>
      }
    }
  }

  /* Reset DMA2D control registers*/
  hdma2d->Instance->CR       =    0U;
 800374c:	687b      	ldr	r3, [r7, #4]
 800374e:	681b      	ldr	r3, [r3, #0]
 8003750:	2200      	movs	r2, #0
 8003752:	601a      	str	r2, [r3, #0]
  hdma2d->Instance->IFCR     = 0x3FU;
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	681b      	ldr	r3, [r3, #0]
 8003758:	223f      	movs	r2, #63	; 0x3f
 800375a:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	681b      	ldr	r3, [r3, #0]
 8003760:	2200      	movs	r2, #0
 8003762:	611a      	str	r2, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 8003764:	687b      	ldr	r3, [r7, #4]
 8003766:	681b      	ldr	r3, [r3, #0]
 8003768:	2200      	movs	r2, #0
 800376a:	619a      	str	r2, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 800376c:	687b      	ldr	r3, [r7, #4]
 800376e:	681b      	ldr	r3, [r3, #0]
 8003770:	2200      	movs	r2, #0
 8003772:	61da      	str	r2, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	681b      	ldr	r3, [r3, #0]
 8003778:	2200      	movs	r2, #0
 800377a:	625a      	str	r2, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	681b      	ldr	r3, [r3, #0]
 8003780:	2200      	movs	r2, #0
 8003782:	635a      	str	r2, [r3, #52]	; 0x34
    /* DeInit the low level hardware */
    hdma2d->MspDeInitCallback(hdma2d);

#else
  /* Carry on with de-initialization of low level hardware */
  HAL_DMA2D_MspDeInit(hdma2d);
 8003784:	6878      	ldr	r0, [r7, #4]
 8003786:	f7fe fb7d 	bl	8001e84 <HAL_DMA2D_MspDeInit>
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800378a:	687b      	ldr	r3, [r7, #4]
 800378c:	2200      	movs	r2, #0
 800378e:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	2200      	movs	r2, #0
 8003794:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Release Lock */
  __HAL_UNLOCK(hdma2d);
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	2200      	movs	r2, #0
 800379c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 80037a0:	2300      	movs	r3, #0
}
 80037a2:	4618      	mov	r0, r3
 80037a4:	3708      	adds	r7, #8
 80037a6:	46bd      	mov	sp, r7
 80037a8:	bd80      	pop	{r7, pc}
 80037aa:	bf00      	nop
 80037ac:	40023800 	.word	0x40023800

080037b0 <HAL_DMA2D_Start_IT>:
  * @param  Width      The width of data to be transferred from source to destination (expressed in number of pixels per line).
  * @param  Height     The height of data to be transferred from source to destination (expressed in number of lines).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Start_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width,  uint32_t Height)
{
 80037b0:	b580      	push	{r7, lr}
 80037b2:	b086      	sub	sp, #24
 80037b4:	af02      	add	r7, sp, #8
 80037b6:	60f8      	str	r0, [r7, #12]
 80037b8:	60b9      	str	r1, [r7, #8]
 80037ba:	607a      	str	r2, [r7, #4]
 80037bc:	603b      	str	r3, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DMA2D_LINE(Height));
  assert_param(IS_DMA2D_PIXEL(Width));

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80037be:	68fb      	ldr	r3, [r7, #12]
 80037c0:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80037c4:	2b01      	cmp	r3, #1
 80037c6:	d101      	bne.n	80037cc <HAL_DMA2D_Start_IT+0x1c>
 80037c8:	2302      	movs	r3, #2
 80037ca:	e020      	b.n	800380e <HAL_DMA2D_Start_IT+0x5e>
 80037cc:	68fb      	ldr	r3, [r7, #12]
 80037ce:	2201      	movs	r2, #1
 80037d0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80037d4:	68fb      	ldr	r3, [r7, #12]
 80037d6:	2202      	movs	r2, #2
 80037d8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Configure the source, destination address and the data size */
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 80037dc:	69bb      	ldr	r3, [r7, #24]
 80037de:	9300      	str	r3, [sp, #0]
 80037e0:	683b      	ldr	r3, [r7, #0]
 80037e2:	687a      	ldr	r2, [r7, #4]
 80037e4:	68b9      	ldr	r1, [r7, #8]
 80037e6:	68f8      	ldr	r0, [r7, #12]
 80037e8:	f000 f974 	bl	8003ad4 <DMA2D_SetConfig>

  /* Enable the transfer complete, transfer error and configuration error interrupts */
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80037ec:	68fb      	ldr	r3, [r7, #12]
 80037ee:	681b      	ldr	r3, [r3, #0]
 80037f0:	681a      	ldr	r2, [r3, #0]
 80037f2:	68fb      	ldr	r3, [r7, #12]
 80037f4:	681b      	ldr	r3, [r3, #0]
 80037f6:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 80037fa:	601a      	str	r2, [r3, #0]

  /* Enable the Peripheral */
  __HAL_DMA2D_ENABLE(hdma2d);
 80037fc:	68fb      	ldr	r3, [r7, #12]
 80037fe:	681b      	ldr	r3, [r3, #0]
 8003800:	681a      	ldr	r2, [r3, #0]
 8003802:	68fb      	ldr	r3, [r7, #12]
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	f042 0201 	orr.w	r2, r2, #1
 800380a:	601a      	str	r2, [r3, #0]

  return HAL_OK;
 800380c:	2300      	movs	r3, #0
}
 800380e:	4618      	mov	r0, r3
 8003810:	3710      	adds	r7, #16
 8003812:	46bd      	mov	sp, r7
 8003814:	bd80      	pop	{r7, pc}

08003816 <HAL_DMA2D_BlendingStart_IT>:
  * @param  Width       The width of data to be transferred from source to destination (expressed in number of pixels per line).
  * @param  Height      The height of data to be transferred from source to destination (expressed in number of lines).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_BlendingStart_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uint32_t  SrcAddress2, uint32_t DstAddress, uint32_t Width,  uint32_t Height)
{
 8003816:	b580      	push	{r7, lr}
 8003818:	b086      	sub	sp, #24
 800381a:	af02      	add	r7, sp, #8
 800381c:	60f8      	str	r0, [r7, #12]
 800381e:	60b9      	str	r1, [r7, #8]
 8003820:	607a      	str	r2, [r7, #4]
 8003822:	603b      	str	r3, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DMA2D_LINE(Height));
  assert_param(IS_DMA2D_PIXEL(Width));

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003824:	68fb      	ldr	r3, [r7, #12]
 8003826:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800382a:	2b01      	cmp	r3, #1
 800382c:	d101      	bne.n	8003832 <HAL_DMA2D_BlendingStart_IT+0x1c>
 800382e:	2302      	movs	r3, #2
 8003830:	e024      	b.n	800387c <HAL_DMA2D_BlendingStart_IT+0x66>
 8003832:	68fb      	ldr	r3, [r7, #12]
 8003834:	2201      	movs	r2, #1
 8003836:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800383a:	68fb      	ldr	r3, [r7, #12]
 800383c:	2202      	movs	r2, #2
 800383e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Configure DMA2D Stream source2 address */
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8003842:	68fb      	ldr	r3, [r7, #12]
 8003844:	681b      	ldr	r3, [r3, #0]
 8003846:	687a      	ldr	r2, [r7, #4]
 8003848:	615a      	str	r2, [r3, #20]

  /* Configure the source, destination address and the data size */
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 800384a:	69fb      	ldr	r3, [r7, #28]
 800384c:	9300      	str	r3, [sp, #0]
 800384e:	69bb      	ldr	r3, [r7, #24]
 8003850:	683a      	ldr	r2, [r7, #0]
 8003852:	68b9      	ldr	r1, [r7, #8]
 8003854:	68f8      	ldr	r0, [r7, #12]
 8003856:	f000 f93d 	bl	8003ad4 <DMA2D_SetConfig>

  /* Enable the transfer complete, transfer error and configuration error interrupts */
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 800385a:	68fb      	ldr	r3, [r7, #12]
 800385c:	681b      	ldr	r3, [r3, #0]
 800385e:	681a      	ldr	r2, [r3, #0]
 8003860:	68fb      	ldr	r3, [r7, #12]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8003868:	601a      	str	r2, [r3, #0]

  /* Enable the Peripheral */
  __HAL_DMA2D_ENABLE(hdma2d);
 800386a:	68fb      	ldr	r3, [r7, #12]
 800386c:	681b      	ldr	r3, [r3, #0]
 800386e:	681a      	ldr	r2, [r3, #0]
 8003870:	68fb      	ldr	r3, [r7, #12]
 8003872:	681b      	ldr	r3, [r3, #0]
 8003874:	f042 0201 	orr.w	r2, r2, #1
 8003878:	601a      	str	r2, [r3, #0]

  return HAL_OK;
 800387a:	2300      	movs	r3, #0
}
 800387c:	4618      	mov	r0, r3
 800387e:	3710      	adds	r7, #16
 8003880:	46bd      	mov	sp, r7
 8003882:	bd80      	pop	{r7, pc}

08003884 <HAL_DMA2D_Abort>:
  * @param  hdma2d  pointer to a DMA2D_HandleTypeDef structure that contains
  *                  the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Abort(DMA2D_HandleTypeDef *hdma2d)
{
 8003884:	b580      	push	{r7, lr}
 8003886:	b084      	sub	sp, #16
 8003888:	af00      	add	r7, sp, #0
 800388a:	6078      	str	r0, [r7, #4]

  /* Abort the DMA2D transfer */
  /* START bit is reset to make sure not to set it again, in the event the HW clears it
     between the register read and the register write by the CPU (writing 0 has no
     effect on START bitvalue) */
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 800388c:	687b      	ldr	r3, [r7, #4]
 800388e:	681b      	ldr	r3, [r3, #0]
 8003890:	681b      	ldr	r3, [r3, #0]
 8003892:	f023 0205 	bic.w	r2, r3, #5
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	681b      	ldr	r3, [r3, #0]
 800389a:	f042 0204 	orr.w	r2, r2, #4
 800389e:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80038a0:	f7ff fcb0 	bl	8003204 <HAL_GetTick>
 80038a4:	60f8      	str	r0, [r7, #12]

  /* Check if the DMA2D is effectively disabled */
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 80038a6:	e017      	b.n	80038d8 <HAL_DMA2D_Abort+0x54>
  {
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 80038a8:	f7ff fcac 	bl	8003204 <HAL_GetTick>
 80038ac:	4602      	mov	r2, r0
 80038ae:	68fb      	ldr	r3, [r7, #12]
 80038b0:	1ad3      	subs	r3, r2, r3
 80038b2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80038b6:	d90f      	bls.n	80038d8 <HAL_DMA2D_Abort+0x54>
    {
      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80038bc:	f043 0220 	orr.w	r2, r3, #32
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change the DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	2203      	movs	r2, #3
 80038c8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	2200      	movs	r2, #0
 80038d0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      return HAL_TIMEOUT;
 80038d4:	2303      	movs	r3, #3
 80038d6:	e017      	b.n	8003908 <HAL_DMA2D_Abort+0x84>
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	681b      	ldr	r3, [r3, #0]
 80038dc:	681b      	ldr	r3, [r3, #0]
 80038de:	f003 0301 	and.w	r3, r3, #1
 80038e2:	2b00      	cmp	r3, #0
 80038e4:	d1e0      	bne.n	80038a8 <HAL_DMA2D_Abort+0x24>
    }
  }

  /* Disable the Transfer Complete, Transfer Error and Configuration Error interrupts */
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	681b      	ldr	r3, [r3, #0]
 80038ea:	681a      	ldr	r2, [r3, #0]
 80038ec:	687b      	ldr	r3, [r7, #4]
 80038ee:	681b      	ldr	r3, [r3, #0]
 80038f0:	f422 520c 	bic.w	r2, r2, #8960	; 0x2300
 80038f4:	601a      	str	r2, [r3, #0]

  /* Change the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	2201      	movs	r2, #1
 80038fa:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process Unlocked */
  __HAL_UNLOCK(hdma2d);
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	2200      	movs	r2, #0
 8003902:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8003906:	2300      	movs	r3, #0
}
 8003908:	4618      	mov	r0, r3
 800390a:	3710      	adds	r7, #16
 800390c:	46bd      	mov	sp, r7
 800390e:	bd80      	pop	{r7, pc}

08003910 <HAL_DMA2D_CLUTLoading_Abort>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Abort(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003910:	b580      	push	{r7, lr}
 8003912:	b084      	sub	sp, #16
 8003914:	af00      	add	r7, sp, #0
 8003916:	6078      	str	r0, [r7, #4]
 8003918:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 800391a:	687b      	ldr	r3, [r7, #4]
 800391c:	681b      	ldr	r3, [r3, #0]
 800391e:	3324      	adds	r3, #36	; 0x24
 8003920:	60fb      	str	r3, [r7, #12]

  /* Abort the CLUT loading */
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 8003922:	687b      	ldr	r3, [r7, #4]
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	681a      	ldr	r2, [r3, #0]
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	681b      	ldr	r3, [r3, #0]
 800392c:	f042 0204 	orr.w	r2, r2, #4
 8003930:	601a      	str	r2, [r3, #0]

  /* If foreground CLUT loading is considered, update local variables */
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 8003932:	683b      	ldr	r3, [r7, #0]
 8003934:	2b01      	cmp	r3, #1
 8003936:	d103      	bne.n	8003940 <HAL_DMA2D_CLUTLoading_Abort+0x30>
  {
    reg  = &(hdma2d->Instance->FGPFCCR);
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	681b      	ldr	r3, [r3, #0]
 800393c:	331c      	adds	r3, #28
 800393e:	60fb      	str	r3, [r7, #12]
  }


  /* Get tick */
  tickstart = HAL_GetTick();
 8003940:	f7ff fc60 	bl	8003204 <HAL_GetTick>
 8003944:	60b8      	str	r0, [r7, #8]

  /* Check if the CLUT loading is aborted */
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8003946:	e017      	b.n	8003978 <HAL_DMA2D_CLUTLoading_Abort+0x68>
  {
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8003948:	f7ff fc5c 	bl	8003204 <HAL_GetTick>
 800394c:	4602      	mov	r2, r0
 800394e:	68bb      	ldr	r3, [r7, #8]
 8003950:	1ad3      	subs	r3, r2, r3
 8003952:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003956:	d90f      	bls.n	8003978 <HAL_DMA2D_CLUTLoading_Abort+0x68>
    {
      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800395c:	f043 0220 	orr.w	r2, r3, #32
 8003960:	687b      	ldr	r3, [r7, #4]
 8003962:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change the DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	2203      	movs	r2, #3
 8003968:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	2200      	movs	r2, #0
 8003970:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      return HAL_TIMEOUT;
 8003974:	2303      	movs	r3, #3
 8003976:	e016      	b.n	80039a6 <HAL_DMA2D_CLUTLoading_Abort+0x96>
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8003978:	68fb      	ldr	r3, [r7, #12]
 800397a:	681b      	ldr	r3, [r3, #0]
 800397c:	f003 0320 	and.w	r3, r3, #32
 8003980:	2b00      	cmp	r3, #0
 8003982:	d1e1      	bne.n	8003948 <HAL_DMA2D_CLUTLoading_Abort+0x38>
    }
  }

  /* Disable the CLUT Transfer Complete, Transfer Error, Configuration Error and CLUT Access Error interrupts */
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	681b      	ldr	r3, [r3, #0]
 8003988:	681a      	ldr	r2, [r3, #0]
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	681b      	ldr	r3, [r3, #0]
 800398e:	f422 5264 	bic.w	r2, r2, #14592	; 0x3900
 8003992:	601a      	str	r2, [r3, #0]

  /* Change the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003994:	687b      	ldr	r3, [r7, #4]
 8003996:	2201      	movs	r2, #1
 8003998:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process Unlocked */
  __HAL_UNLOCK(hdma2d);
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	2200      	movs	r2, #0
 80039a0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 80039a4:	2300      	movs	r3, #0
}
 80039a6:	4618      	mov	r0, r3
 80039a8:	3710      	adds	r7, #16
 80039aa:	46bd      	mov	sp, r7
 80039ac:	bd80      	pop	{r7, pc}
	...

080039b0 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80039b0:	b480      	push	{r7}
 80039b2:	b087      	sub	sp, #28
 80039b4:	af00      	add	r7, sp, #0
 80039b6:	6078      	str	r0, [r7, #4]
 80039b8:	6039      	str	r1, [r7, #0]
  uint32_t regMask, regValue;

  /* Check the parameters */
  assert_param(IS_DMA2D_LAYER(LayerIdx));
  assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
  if(hdma2d->Init.Mode != DMA2D_R2M)
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	685b      	ldr	r3, [r3, #4]
 80039be:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80039c8:	2b01      	cmp	r3, #1
 80039ca:	d101      	bne.n	80039d0 <HAL_DMA2D_ConfigLayer+0x20>
 80039cc:	2302      	movs	r3, #2
 80039ce:	e079      	b.n	8003ac4 <HAL_DMA2D_ConfigLayer+0x114>
 80039d0:	687b      	ldr	r3, [r7, #4]
 80039d2:	2201      	movs	r2, #1
 80039d4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	2202      	movs	r2, #2
 80039dc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 80039e0:	683b      	ldr	r3, [r7, #0]
 80039e2:	011b      	lsls	r3, r3, #4
 80039e4:	3318      	adds	r3, #24
 80039e6:	687a      	ldr	r2, [r7, #4]
 80039e8:	4413      	add	r3, r2
 80039ea:	613b      	str	r3, [r7, #16]

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80039ec:	693b      	ldr	r3, [r7, #16]
 80039ee:	685a      	ldr	r2, [r3, #4]
 80039f0:	693b      	ldr	r3, [r7, #16]
 80039f2:	689b      	ldr	r3, [r3, #8]
 80039f4:	041b      	lsls	r3, r3, #16
 80039f6:	4313      	orrs	r3, r2
 80039f8:	617b      	str	r3, [r7, #20]
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
 80039fa:	4b35      	ldr	r3, [pc, #212]	; (8003ad0 <HAL_DMA2D_ConfigLayer+0x120>)
 80039fc:	60fb      	str	r3, [r7, #12]


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80039fe:	693b      	ldr	r3, [r7, #16]
 8003a00:	685b      	ldr	r3, [r3, #4]
 8003a02:	2b0a      	cmp	r3, #10
 8003a04:	d003      	beq.n	8003a0e <HAL_DMA2D_ConfigLayer+0x5e>
 8003a06:	693b      	ldr	r3, [r7, #16]
 8003a08:	685b      	ldr	r3, [r3, #4]
 8003a0a:	2b09      	cmp	r3, #9
 8003a0c:	d107      	bne.n	8003a1e <HAL_DMA2D_ConfigLayer+0x6e>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003a0e:	693b      	ldr	r3, [r7, #16]
 8003a10:	68db      	ldr	r3, [r3, #12]
 8003a12:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003a16:	697a      	ldr	r2, [r7, #20]
 8003a18:	4313      	orrs	r3, r2
 8003a1a:	617b      	str	r3, [r7, #20]
 8003a1c:	e005      	b.n	8003a2a <HAL_DMA2D_ConfigLayer+0x7a>
  }
  else
  {
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003a1e:	693b      	ldr	r3, [r7, #16]
 8003a20:	68db      	ldr	r3, [r3, #12]
 8003a22:	061b      	lsls	r3, r3, #24
 8003a24:	697a      	ldr	r2, [r7, #20]
 8003a26:	4313      	orrs	r3, r2
 8003a28:	617b      	str	r3, [r7, #20]
  }

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8003a2a:	683b      	ldr	r3, [r7, #0]
 8003a2c:	2b00      	cmp	r3, #0
 8003a2e:	d120      	bne.n	8003a72 <HAL_DMA2D_ConfigLayer+0xc2>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	681b      	ldr	r3, [r3, #0]
 8003a34:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003a36:	68fb      	ldr	r3, [r7, #12]
 8003a38:	43db      	mvns	r3, r3
 8003a3a:	ea02 0103 	and.w	r1, r2, r3
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	681b      	ldr	r3, [r3, #0]
 8003a42:	697a      	ldr	r2, [r7, #20]
 8003a44:	430a      	orrs	r2, r1
 8003a46:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	681b      	ldr	r3, [r3, #0]
 8003a4c:	693a      	ldr	r2, [r7, #16]
 8003a4e:	6812      	ldr	r2, [r2, #0]
 8003a50:	619a      	str	r2, [r3, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003a52:	693b      	ldr	r3, [r7, #16]
 8003a54:	685b      	ldr	r3, [r3, #4]
 8003a56:	2b0a      	cmp	r3, #10
 8003a58:	d003      	beq.n	8003a62 <HAL_DMA2D_ConfigLayer+0xb2>
 8003a5a:	693b      	ldr	r3, [r7, #16]
 8003a5c:	685b      	ldr	r3, [r3, #4]
 8003a5e:	2b09      	cmp	r3, #9
 8003a60:	d127      	bne.n	8003ab2 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8003a62:	693b      	ldr	r3, [r7, #16]
 8003a64:	68da      	ldr	r2, [r3, #12]
 8003a66:	687b      	ldr	r3, [r7, #4]
 8003a68:	681b      	ldr	r3, [r3, #0]
 8003a6a:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003a6e:	629a      	str	r2, [r3, #40]	; 0x28
 8003a70:	e01f      	b.n	8003ab2 <HAL_DMA2D_ConfigLayer+0x102>
  else
  {


     /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	681b      	ldr	r3, [r3, #0]
 8003a76:	69da      	ldr	r2, [r3, #28]
 8003a78:	68fb      	ldr	r3, [r7, #12]
 8003a7a:	43db      	mvns	r3, r3
 8003a7c:	ea02 0103 	and.w	r1, r2, r3
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	681b      	ldr	r3, [r3, #0]
 8003a84:	697a      	ldr	r2, [r7, #20]
 8003a86:	430a      	orrs	r2, r1
 8003a88:	61da      	str	r2, [r3, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003a8a:	687b      	ldr	r3, [r7, #4]
 8003a8c:	681b      	ldr	r3, [r3, #0]
 8003a8e:	693a      	ldr	r2, [r7, #16]
 8003a90:	6812      	ldr	r2, [r2, #0]
 8003a92:	611a      	str	r2, [r3, #16]

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003a94:	693b      	ldr	r3, [r7, #16]
 8003a96:	685b      	ldr	r3, [r3, #4]
 8003a98:	2b0a      	cmp	r3, #10
 8003a9a:	d003      	beq.n	8003aa4 <HAL_DMA2D_ConfigLayer+0xf4>
 8003a9c:	693b      	ldr	r3, [r7, #16]
 8003a9e:	685b      	ldr	r3, [r3, #4]
 8003aa0:	2b09      	cmp	r3, #9
 8003aa2:	d106      	bne.n	8003ab2 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8003aa4:	693b      	ldr	r3, [r7, #16]
 8003aa6:	68da      	ldr	r2, [r3, #12]
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	681b      	ldr	r3, [r3, #0]
 8003aac:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003ab0:	621a      	str	r2, [r3, #32]
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003ab2:	687b      	ldr	r3, [r7, #4]
 8003ab4:	2201      	movs	r2, #1
 8003ab6:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	2200      	movs	r2, #0
 8003abe:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8003ac2:	2300      	movs	r3, #0
}
 8003ac4:	4618      	mov	r0, r3
 8003ac6:	371c      	adds	r7, #28
 8003ac8:	46bd      	mov	sp, r7
 8003aca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ace:	4770      	bx	lr
 8003ad0:	ff03000f 	.word	0xff03000f

08003ad4 <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 8003ad4:	b480      	push	{r7}
 8003ad6:	b08b      	sub	sp, #44	; 0x2c
 8003ad8:	af00      	add	r7, sp, #0
 8003ada:	60f8      	str	r0, [r7, #12]
 8003adc:	60b9      	str	r1, [r7, #8]
 8003ade:	607a      	str	r2, [r7, #4]
 8003ae0:	603b      	str	r3, [r7, #0]
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 8003ae2:	68fb      	ldr	r3, [r7, #12]
 8003ae4:	681b      	ldr	r3, [r3, #0]
 8003ae6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003ae8:	f003 4140 	and.w	r1, r3, #3221225472	; 0xc0000000
 8003aec:	683b      	ldr	r3, [r7, #0]
 8003aee:	041a      	lsls	r2, r3, #16
 8003af0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003af2:	431a      	orrs	r2, r3
 8003af4:	68fb      	ldr	r3, [r7, #12]
 8003af6:	681b      	ldr	r3, [r3, #0]
 8003af8:	430a      	orrs	r2, r1
 8003afa:	645a      	str	r2, [r3, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 8003afc:	68fb      	ldr	r3, [r7, #12]
 8003afe:	681b      	ldr	r3, [r3, #0]
 8003b00:	687a      	ldr	r2, [r7, #4]
 8003b02:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8003b04:	68fb      	ldr	r3, [r7, #12]
 8003b06:	685b      	ldr	r3, [r3, #4]
 8003b08:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8003b0c:	d174      	bne.n	8003bf8 <DMA2D_SetConfig+0x124>
  {
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 8003b0e:	68bb      	ldr	r3, [r7, #8]
 8003b10:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003b14:	623b      	str	r3, [r7, #32]
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 8003b16:	68bb      	ldr	r3, [r7, #8]
 8003b18:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8003b1c:	61fb      	str	r3, [r7, #28]
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 8003b1e:	68bb      	ldr	r3, [r7, #8]
 8003b20:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8003b24:	61bb      	str	r3, [r7, #24]
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 8003b26:	68bb      	ldr	r3, [r7, #8]
 8003b28:	b2db      	uxtb	r3, r3
 8003b2a:	617b      	str	r3, [r7, #20]

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 8003b2c:	68fb      	ldr	r3, [r7, #12]
 8003b2e:	689b      	ldr	r3, [r3, #8]
 8003b30:	2b00      	cmp	r3, #0
 8003b32:	d108      	bne.n	8003b46 <DMA2D_SetConfig+0x72>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
 8003b34:	69ba      	ldr	r2, [r7, #24]
 8003b36:	69fb      	ldr	r3, [r7, #28]
 8003b38:	431a      	orrs	r2, r3
 8003b3a:	6a3b      	ldr	r3, [r7, #32]
 8003b3c:	4313      	orrs	r3, r2
 8003b3e:	697a      	ldr	r2, [r7, #20]
 8003b40:	4313      	orrs	r3, r2
 8003b42:	627b      	str	r3, [r7, #36]	; 0x24
 8003b44:	e053      	b.n	8003bee <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 8003b46:	68fb      	ldr	r3, [r7, #12]
 8003b48:	689b      	ldr	r3, [r3, #8]
 8003b4a:	2b01      	cmp	r3, #1
 8003b4c:	d106      	bne.n	8003b5c <DMA2D_SetConfig+0x88>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 8003b4e:	69ba      	ldr	r2, [r7, #24]
 8003b50:	69fb      	ldr	r3, [r7, #28]
 8003b52:	4313      	orrs	r3, r2
 8003b54:	697a      	ldr	r2, [r7, #20]
 8003b56:	4313      	orrs	r3, r2
 8003b58:	627b      	str	r3, [r7, #36]	; 0x24
 8003b5a:	e048      	b.n	8003bee <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8003b5c:	68fb      	ldr	r3, [r7, #12]
 8003b5e:	689b      	ldr	r3, [r3, #8]
 8003b60:	2b02      	cmp	r3, #2
 8003b62:	d111      	bne.n	8003b88 <DMA2D_SetConfig+0xb4>
    {
      tmp2 = (tmp2 >> 19U);
 8003b64:	69fb      	ldr	r3, [r7, #28]
 8003b66:	0cdb      	lsrs	r3, r3, #19
 8003b68:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 10U);
 8003b6a:	69bb      	ldr	r3, [r7, #24]
 8003b6c:	0a9b      	lsrs	r3, r3, #10
 8003b6e:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 3U );
 8003b70:	697b      	ldr	r3, [r7, #20]
 8003b72:	08db      	lsrs	r3, r3, #3
 8003b74:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 8003b76:	69bb      	ldr	r3, [r7, #24]
 8003b78:	015a      	lsls	r2, r3, #5
 8003b7a:	69fb      	ldr	r3, [r7, #28]
 8003b7c:	02db      	lsls	r3, r3, #11
 8003b7e:	4313      	orrs	r3, r2
 8003b80:	697a      	ldr	r2, [r7, #20]
 8003b82:	4313      	orrs	r3, r2
 8003b84:	627b      	str	r3, [r7, #36]	; 0x24
 8003b86:	e032      	b.n	8003bee <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8003b88:	68fb      	ldr	r3, [r7, #12]
 8003b8a:	689b      	ldr	r3, [r3, #8]
 8003b8c:	2b03      	cmp	r3, #3
 8003b8e:	d117      	bne.n	8003bc0 <DMA2D_SetConfig+0xec>
    {
      tmp1 = (tmp1 >> 31U);
 8003b90:	6a3b      	ldr	r3, [r7, #32]
 8003b92:	0fdb      	lsrs	r3, r3, #31
 8003b94:	623b      	str	r3, [r7, #32]
      tmp2 = (tmp2 >> 19U);
 8003b96:	69fb      	ldr	r3, [r7, #28]
 8003b98:	0cdb      	lsrs	r3, r3, #19
 8003b9a:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 11U);
 8003b9c:	69bb      	ldr	r3, [r7, #24]
 8003b9e:	0adb      	lsrs	r3, r3, #11
 8003ba0:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 3U );
 8003ba2:	697b      	ldr	r3, [r7, #20]
 8003ba4:	08db      	lsrs	r3, r3, #3
 8003ba6:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8003ba8:	69bb      	ldr	r3, [r7, #24]
 8003baa:	015a      	lsls	r2, r3, #5
 8003bac:	69fb      	ldr	r3, [r7, #28]
 8003bae:	029b      	lsls	r3, r3, #10
 8003bb0:	431a      	orrs	r2, r3
 8003bb2:	6a3b      	ldr	r3, [r7, #32]
 8003bb4:	03db      	lsls	r3, r3, #15
 8003bb6:	4313      	orrs	r3, r2
 8003bb8:	697a      	ldr	r2, [r7, #20]
 8003bba:	4313      	orrs	r3, r2
 8003bbc:	627b      	str	r3, [r7, #36]	; 0x24
 8003bbe:	e016      	b.n	8003bee <DMA2D_SetConfig+0x11a>
    }
    else /* Dhdma2d->Init.ColorMode = DMA2D_OUTPUT_ARGB4444 */
    {
      tmp1 = (tmp1 >> 28U);
 8003bc0:	6a3b      	ldr	r3, [r7, #32]
 8003bc2:	0f1b      	lsrs	r3, r3, #28
 8003bc4:	623b      	str	r3, [r7, #32]
      tmp2 = (tmp2 >> 20U);
 8003bc6:	69fb      	ldr	r3, [r7, #28]
 8003bc8:	0d1b      	lsrs	r3, r3, #20
 8003bca:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 12U);
 8003bcc:	69bb      	ldr	r3, [r7, #24]
 8003bce:	0b1b      	lsrs	r3, r3, #12
 8003bd0:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 4U );
 8003bd2:	697b      	ldr	r3, [r7, #20]
 8003bd4:	091b      	lsrs	r3, r3, #4
 8003bd6:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8003bd8:	69bb      	ldr	r3, [r7, #24]
 8003bda:	011a      	lsls	r2, r3, #4
 8003bdc:	69fb      	ldr	r3, [r7, #28]
 8003bde:	021b      	lsls	r3, r3, #8
 8003be0:	431a      	orrs	r2, r3
 8003be2:	6a3b      	ldr	r3, [r7, #32]
 8003be4:	031b      	lsls	r3, r3, #12
 8003be6:	4313      	orrs	r3, r2
 8003be8:	697a      	ldr	r2, [r7, #20]
 8003bea:	4313      	orrs	r3, r2
 8003bec:	627b      	str	r3, [r7, #36]	; 0x24
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 8003bee:	68fb      	ldr	r3, [r7, #12]
 8003bf0:	681b      	ldr	r3, [r3, #0]
 8003bf2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003bf4:	639a      	str	r2, [r3, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 8003bf6:	e003      	b.n	8003c00 <DMA2D_SetConfig+0x12c>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 8003bf8:	68fb      	ldr	r3, [r7, #12]
 8003bfa:	681b      	ldr	r3, [r3, #0]
 8003bfc:	68ba      	ldr	r2, [r7, #8]
 8003bfe:	60da      	str	r2, [r3, #12]
}
 8003c00:	bf00      	nop
 8003c02:	372c      	adds	r7, #44	; 0x2c
 8003c04:	46bd      	mov	sp, r7
 8003c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c0a:	4770      	bx	lr

08003c0c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003c0c:	b480      	push	{r7}
 8003c0e:	b089      	sub	sp, #36	; 0x24
 8003c10:	af00      	add	r7, sp, #0
 8003c12:	6078      	str	r0, [r7, #4]
 8003c14:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8003c16:	2300      	movs	r3, #0
 8003c18:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8003c1a:	2300      	movs	r3, #0
 8003c1c:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8003c1e:	2300      	movs	r3, #0
 8003c20:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003c22:	2300      	movs	r3, #0
 8003c24:	61fb      	str	r3, [r7, #28]
 8003c26:	e177      	b.n	8003f18 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8003c28:	2201      	movs	r2, #1
 8003c2a:	69fb      	ldr	r3, [r7, #28]
 8003c2c:	fa02 f303 	lsl.w	r3, r2, r3
 8003c30:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003c32:	683b      	ldr	r3, [r7, #0]
 8003c34:	681b      	ldr	r3, [r3, #0]
 8003c36:	697a      	ldr	r2, [r7, #20]
 8003c38:	4013      	ands	r3, r2
 8003c3a:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8003c3c:	693a      	ldr	r2, [r7, #16]
 8003c3e:	697b      	ldr	r3, [r7, #20]
 8003c40:	429a      	cmp	r2, r3
 8003c42:	f040 8166 	bne.w	8003f12 <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003c46:	683b      	ldr	r3, [r7, #0]
 8003c48:	685b      	ldr	r3, [r3, #4]
 8003c4a:	2b01      	cmp	r3, #1
 8003c4c:	d00b      	beq.n	8003c66 <HAL_GPIO_Init+0x5a>
 8003c4e:	683b      	ldr	r3, [r7, #0]
 8003c50:	685b      	ldr	r3, [r3, #4]
 8003c52:	2b02      	cmp	r3, #2
 8003c54:	d007      	beq.n	8003c66 <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003c56:	683b      	ldr	r3, [r7, #0]
 8003c58:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003c5a:	2b11      	cmp	r3, #17
 8003c5c:	d003      	beq.n	8003c66 <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003c5e:	683b      	ldr	r3, [r7, #0]
 8003c60:	685b      	ldr	r3, [r3, #4]
 8003c62:	2b12      	cmp	r3, #18
 8003c64:	d130      	bne.n	8003cc8 <HAL_GPIO_Init+0xbc>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	689b      	ldr	r3, [r3, #8]
 8003c6a:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003c6c:	69fb      	ldr	r3, [r7, #28]
 8003c6e:	005b      	lsls	r3, r3, #1
 8003c70:	2203      	movs	r2, #3
 8003c72:	fa02 f303 	lsl.w	r3, r2, r3
 8003c76:	43db      	mvns	r3, r3
 8003c78:	69ba      	ldr	r2, [r7, #24]
 8003c7a:	4013      	ands	r3, r2
 8003c7c:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003c7e:	683b      	ldr	r3, [r7, #0]
 8003c80:	68da      	ldr	r2, [r3, #12]
 8003c82:	69fb      	ldr	r3, [r7, #28]
 8003c84:	005b      	lsls	r3, r3, #1
 8003c86:	fa02 f303 	lsl.w	r3, r2, r3
 8003c8a:	69ba      	ldr	r2, [r7, #24]
 8003c8c:	4313      	orrs	r3, r2
 8003c8e:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	69ba      	ldr	r2, [r7, #24]
 8003c94:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003c96:	687b      	ldr	r3, [r7, #4]
 8003c98:	685b      	ldr	r3, [r3, #4]
 8003c9a:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003c9c:	2201      	movs	r2, #1
 8003c9e:	69fb      	ldr	r3, [r7, #28]
 8003ca0:	fa02 f303 	lsl.w	r3, r2, r3
 8003ca4:	43db      	mvns	r3, r3
 8003ca6:	69ba      	ldr	r2, [r7, #24]
 8003ca8:	4013      	ands	r3, r2
 8003caa:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8003cac:	683b      	ldr	r3, [r7, #0]
 8003cae:	685b      	ldr	r3, [r3, #4]
 8003cb0:	091b      	lsrs	r3, r3, #4
 8003cb2:	f003 0201 	and.w	r2, r3, #1
 8003cb6:	69fb      	ldr	r3, [r7, #28]
 8003cb8:	fa02 f303 	lsl.w	r3, r2, r3
 8003cbc:	69ba      	ldr	r2, [r7, #24]
 8003cbe:	4313      	orrs	r3, r2
 8003cc0:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	69ba      	ldr	r2, [r7, #24]
 8003cc6:	605a      	str	r2, [r3, #4]
       }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	68db      	ldr	r3, [r3, #12]
 8003ccc:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8003cce:	69fb      	ldr	r3, [r7, #28]
 8003cd0:	005b      	lsls	r3, r3, #1
 8003cd2:	2203      	movs	r2, #3
 8003cd4:	fa02 f303 	lsl.w	r3, r2, r3
 8003cd8:	43db      	mvns	r3, r3
 8003cda:	69ba      	ldr	r2, [r7, #24]
 8003cdc:	4013      	ands	r3, r2
 8003cde:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003ce0:	683b      	ldr	r3, [r7, #0]
 8003ce2:	689a      	ldr	r2, [r3, #8]
 8003ce4:	69fb      	ldr	r3, [r7, #28]
 8003ce6:	005b      	lsls	r3, r3, #1
 8003ce8:	fa02 f303 	lsl.w	r3, r2, r3
 8003cec:	69ba      	ldr	r2, [r7, #24]
 8003cee:	4313      	orrs	r3, r2
 8003cf0:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	69ba      	ldr	r2, [r7, #24]
 8003cf6:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003cf8:	683b      	ldr	r3, [r7, #0]
 8003cfa:	685b      	ldr	r3, [r3, #4]
 8003cfc:	2b02      	cmp	r3, #2
 8003cfe:	d003      	beq.n	8003d08 <HAL_GPIO_Init+0xfc>
 8003d00:	683b      	ldr	r3, [r7, #0]
 8003d02:	685b      	ldr	r3, [r3, #4]
 8003d04:	2b12      	cmp	r3, #18
 8003d06:	d123      	bne.n	8003d50 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8003d08:	69fb      	ldr	r3, [r7, #28]
 8003d0a:	08da      	lsrs	r2, r3, #3
 8003d0c:	687b      	ldr	r3, [r7, #4]
 8003d0e:	3208      	adds	r2, #8
 8003d10:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003d14:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003d16:	69fb      	ldr	r3, [r7, #28]
 8003d18:	f003 0307 	and.w	r3, r3, #7
 8003d1c:	009b      	lsls	r3, r3, #2
 8003d1e:	220f      	movs	r2, #15
 8003d20:	fa02 f303 	lsl.w	r3, r2, r3
 8003d24:	43db      	mvns	r3, r3
 8003d26:	69ba      	ldr	r2, [r7, #24]
 8003d28:	4013      	ands	r3, r2
 8003d2a:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8003d2c:	683b      	ldr	r3, [r7, #0]
 8003d2e:	691a      	ldr	r2, [r3, #16]
 8003d30:	69fb      	ldr	r3, [r7, #28]
 8003d32:	f003 0307 	and.w	r3, r3, #7
 8003d36:	009b      	lsls	r3, r3, #2
 8003d38:	fa02 f303 	lsl.w	r3, r2, r3
 8003d3c:	69ba      	ldr	r2, [r7, #24]
 8003d3e:	4313      	orrs	r3, r2
 8003d40:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8003d42:	69fb      	ldr	r3, [r7, #28]
 8003d44:	08da      	lsrs	r2, r3, #3
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	3208      	adds	r2, #8
 8003d4a:	69b9      	ldr	r1, [r7, #24]
 8003d4c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8003d50:	687b      	ldr	r3, [r7, #4]
 8003d52:	681b      	ldr	r3, [r3, #0]
 8003d54:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8003d56:	69fb      	ldr	r3, [r7, #28]
 8003d58:	005b      	lsls	r3, r3, #1
 8003d5a:	2203      	movs	r2, #3
 8003d5c:	fa02 f303 	lsl.w	r3, r2, r3
 8003d60:	43db      	mvns	r3, r3
 8003d62:	69ba      	ldr	r2, [r7, #24]
 8003d64:	4013      	ands	r3, r2
 8003d66:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003d68:	683b      	ldr	r3, [r7, #0]
 8003d6a:	685b      	ldr	r3, [r3, #4]
 8003d6c:	f003 0203 	and.w	r2, r3, #3
 8003d70:	69fb      	ldr	r3, [r7, #28]
 8003d72:	005b      	lsls	r3, r3, #1
 8003d74:	fa02 f303 	lsl.w	r3, r2, r3
 8003d78:	69ba      	ldr	r2, [r7, #24]
 8003d7a:	4313      	orrs	r3, r2
 8003d7c:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8003d7e:	687b      	ldr	r3, [r7, #4]
 8003d80:	69ba      	ldr	r2, [r7, #24]
 8003d82:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8003d84:	683b      	ldr	r3, [r7, #0]
 8003d86:	685b      	ldr	r3, [r3, #4]
 8003d88:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003d8c:	2b00      	cmp	r3, #0
 8003d8e:	f000 80c0 	beq.w	8003f12 <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003d92:	2300      	movs	r3, #0
 8003d94:	60fb      	str	r3, [r7, #12]
 8003d96:	4b65      	ldr	r3, [pc, #404]	; (8003f2c <HAL_GPIO_Init+0x320>)
 8003d98:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003d9a:	4a64      	ldr	r2, [pc, #400]	; (8003f2c <HAL_GPIO_Init+0x320>)
 8003d9c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003da0:	6453      	str	r3, [r2, #68]	; 0x44
 8003da2:	4b62      	ldr	r3, [pc, #392]	; (8003f2c <HAL_GPIO_Init+0x320>)
 8003da4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003da6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003daa:	60fb      	str	r3, [r7, #12]
 8003dac:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8003dae:	4a60      	ldr	r2, [pc, #384]	; (8003f30 <HAL_GPIO_Init+0x324>)
 8003db0:	69fb      	ldr	r3, [r7, #28]
 8003db2:	089b      	lsrs	r3, r3, #2
 8003db4:	3302      	adds	r3, #2
 8003db6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003dba:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003dbc:	69fb      	ldr	r3, [r7, #28]
 8003dbe:	f003 0303 	and.w	r3, r3, #3
 8003dc2:	009b      	lsls	r3, r3, #2
 8003dc4:	220f      	movs	r2, #15
 8003dc6:	fa02 f303 	lsl.w	r3, r2, r3
 8003dca:	43db      	mvns	r3, r3
 8003dcc:	69ba      	ldr	r2, [r7, #24]
 8003dce:	4013      	ands	r3, r2
 8003dd0:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	4a57      	ldr	r2, [pc, #348]	; (8003f34 <HAL_GPIO_Init+0x328>)
 8003dd6:	4293      	cmp	r3, r2
 8003dd8:	d037      	beq.n	8003e4a <HAL_GPIO_Init+0x23e>
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	4a56      	ldr	r2, [pc, #344]	; (8003f38 <HAL_GPIO_Init+0x32c>)
 8003dde:	4293      	cmp	r3, r2
 8003de0:	d031      	beq.n	8003e46 <HAL_GPIO_Init+0x23a>
 8003de2:	687b      	ldr	r3, [r7, #4]
 8003de4:	4a55      	ldr	r2, [pc, #340]	; (8003f3c <HAL_GPIO_Init+0x330>)
 8003de6:	4293      	cmp	r3, r2
 8003de8:	d02b      	beq.n	8003e42 <HAL_GPIO_Init+0x236>
 8003dea:	687b      	ldr	r3, [r7, #4]
 8003dec:	4a54      	ldr	r2, [pc, #336]	; (8003f40 <HAL_GPIO_Init+0x334>)
 8003dee:	4293      	cmp	r3, r2
 8003df0:	d025      	beq.n	8003e3e <HAL_GPIO_Init+0x232>
 8003df2:	687b      	ldr	r3, [r7, #4]
 8003df4:	4a53      	ldr	r2, [pc, #332]	; (8003f44 <HAL_GPIO_Init+0x338>)
 8003df6:	4293      	cmp	r3, r2
 8003df8:	d01f      	beq.n	8003e3a <HAL_GPIO_Init+0x22e>
 8003dfa:	687b      	ldr	r3, [r7, #4]
 8003dfc:	4a52      	ldr	r2, [pc, #328]	; (8003f48 <HAL_GPIO_Init+0x33c>)
 8003dfe:	4293      	cmp	r3, r2
 8003e00:	d019      	beq.n	8003e36 <HAL_GPIO_Init+0x22a>
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	4a51      	ldr	r2, [pc, #324]	; (8003f4c <HAL_GPIO_Init+0x340>)
 8003e06:	4293      	cmp	r3, r2
 8003e08:	d013      	beq.n	8003e32 <HAL_GPIO_Init+0x226>
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	4a50      	ldr	r2, [pc, #320]	; (8003f50 <HAL_GPIO_Init+0x344>)
 8003e0e:	4293      	cmp	r3, r2
 8003e10:	d00d      	beq.n	8003e2e <HAL_GPIO_Init+0x222>
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	4a4f      	ldr	r2, [pc, #316]	; (8003f54 <HAL_GPIO_Init+0x348>)
 8003e16:	4293      	cmp	r3, r2
 8003e18:	d007      	beq.n	8003e2a <HAL_GPIO_Init+0x21e>
 8003e1a:	687b      	ldr	r3, [r7, #4]
 8003e1c:	4a4e      	ldr	r2, [pc, #312]	; (8003f58 <HAL_GPIO_Init+0x34c>)
 8003e1e:	4293      	cmp	r3, r2
 8003e20:	d101      	bne.n	8003e26 <HAL_GPIO_Init+0x21a>
 8003e22:	2309      	movs	r3, #9
 8003e24:	e012      	b.n	8003e4c <HAL_GPIO_Init+0x240>
 8003e26:	230a      	movs	r3, #10
 8003e28:	e010      	b.n	8003e4c <HAL_GPIO_Init+0x240>
 8003e2a:	2308      	movs	r3, #8
 8003e2c:	e00e      	b.n	8003e4c <HAL_GPIO_Init+0x240>
 8003e2e:	2307      	movs	r3, #7
 8003e30:	e00c      	b.n	8003e4c <HAL_GPIO_Init+0x240>
 8003e32:	2306      	movs	r3, #6
 8003e34:	e00a      	b.n	8003e4c <HAL_GPIO_Init+0x240>
 8003e36:	2305      	movs	r3, #5
 8003e38:	e008      	b.n	8003e4c <HAL_GPIO_Init+0x240>
 8003e3a:	2304      	movs	r3, #4
 8003e3c:	e006      	b.n	8003e4c <HAL_GPIO_Init+0x240>
 8003e3e:	2303      	movs	r3, #3
 8003e40:	e004      	b.n	8003e4c <HAL_GPIO_Init+0x240>
 8003e42:	2302      	movs	r3, #2
 8003e44:	e002      	b.n	8003e4c <HAL_GPIO_Init+0x240>
 8003e46:	2301      	movs	r3, #1
 8003e48:	e000      	b.n	8003e4c <HAL_GPIO_Init+0x240>
 8003e4a:	2300      	movs	r3, #0
 8003e4c:	69fa      	ldr	r2, [r7, #28]
 8003e4e:	f002 0203 	and.w	r2, r2, #3
 8003e52:	0092      	lsls	r2, r2, #2
 8003e54:	4093      	lsls	r3, r2
 8003e56:	69ba      	ldr	r2, [r7, #24]
 8003e58:	4313      	orrs	r3, r2
 8003e5a:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8003e5c:	4934      	ldr	r1, [pc, #208]	; (8003f30 <HAL_GPIO_Init+0x324>)
 8003e5e:	69fb      	ldr	r3, [r7, #28]
 8003e60:	089b      	lsrs	r3, r3, #2
 8003e62:	3302      	adds	r3, #2
 8003e64:	69ba      	ldr	r2, [r7, #24]
 8003e66:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003e6a:	4b3c      	ldr	r3, [pc, #240]	; (8003f5c <HAL_GPIO_Init+0x350>)
 8003e6c:	681b      	ldr	r3, [r3, #0]
 8003e6e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003e70:	693b      	ldr	r3, [r7, #16]
 8003e72:	43db      	mvns	r3, r3
 8003e74:	69ba      	ldr	r2, [r7, #24]
 8003e76:	4013      	ands	r3, r2
 8003e78:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8003e7a:	683b      	ldr	r3, [r7, #0]
 8003e7c:	685b      	ldr	r3, [r3, #4]
 8003e7e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003e82:	2b00      	cmp	r3, #0
 8003e84:	d003      	beq.n	8003e8e <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 8003e86:	69ba      	ldr	r2, [r7, #24]
 8003e88:	693b      	ldr	r3, [r7, #16]
 8003e8a:	4313      	orrs	r3, r2
 8003e8c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8003e8e:	4a33      	ldr	r2, [pc, #204]	; (8003f5c <HAL_GPIO_Init+0x350>)
 8003e90:	69bb      	ldr	r3, [r7, #24]
 8003e92:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8003e94:	4b31      	ldr	r3, [pc, #196]	; (8003f5c <HAL_GPIO_Init+0x350>)
 8003e96:	685b      	ldr	r3, [r3, #4]
 8003e98:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003e9a:	693b      	ldr	r3, [r7, #16]
 8003e9c:	43db      	mvns	r3, r3
 8003e9e:	69ba      	ldr	r2, [r7, #24]
 8003ea0:	4013      	ands	r3, r2
 8003ea2:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8003ea4:	683b      	ldr	r3, [r7, #0]
 8003ea6:	685b      	ldr	r3, [r3, #4]
 8003ea8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003eac:	2b00      	cmp	r3, #0
 8003eae:	d003      	beq.n	8003eb8 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 8003eb0:	69ba      	ldr	r2, [r7, #24]
 8003eb2:	693b      	ldr	r3, [r7, #16]
 8003eb4:	4313      	orrs	r3, r2
 8003eb6:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8003eb8:	4a28      	ldr	r2, [pc, #160]	; (8003f5c <HAL_GPIO_Init+0x350>)
 8003eba:	69bb      	ldr	r3, [r7, #24]
 8003ebc:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003ebe:	4b27      	ldr	r3, [pc, #156]	; (8003f5c <HAL_GPIO_Init+0x350>)
 8003ec0:	689b      	ldr	r3, [r3, #8]
 8003ec2:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003ec4:	693b      	ldr	r3, [r7, #16]
 8003ec6:	43db      	mvns	r3, r3
 8003ec8:	69ba      	ldr	r2, [r7, #24]
 8003eca:	4013      	ands	r3, r2
 8003ecc:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8003ece:	683b      	ldr	r3, [r7, #0]
 8003ed0:	685b      	ldr	r3, [r3, #4]
 8003ed2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003ed6:	2b00      	cmp	r3, #0
 8003ed8:	d003      	beq.n	8003ee2 <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 8003eda:	69ba      	ldr	r2, [r7, #24]
 8003edc:	693b      	ldr	r3, [r7, #16]
 8003ede:	4313      	orrs	r3, r2
 8003ee0:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8003ee2:	4a1e      	ldr	r2, [pc, #120]	; (8003f5c <HAL_GPIO_Init+0x350>)
 8003ee4:	69bb      	ldr	r3, [r7, #24]
 8003ee6:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8003ee8:	4b1c      	ldr	r3, [pc, #112]	; (8003f5c <HAL_GPIO_Init+0x350>)
 8003eea:	68db      	ldr	r3, [r3, #12]
 8003eec:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003eee:	693b      	ldr	r3, [r7, #16]
 8003ef0:	43db      	mvns	r3, r3
 8003ef2:	69ba      	ldr	r2, [r7, #24]
 8003ef4:	4013      	ands	r3, r2
 8003ef6:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8003ef8:	683b      	ldr	r3, [r7, #0]
 8003efa:	685b      	ldr	r3, [r3, #4]
 8003efc:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003f00:	2b00      	cmp	r3, #0
 8003f02:	d003      	beq.n	8003f0c <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 8003f04:	69ba      	ldr	r2, [r7, #24]
 8003f06:	693b      	ldr	r3, [r7, #16]
 8003f08:	4313      	orrs	r3, r2
 8003f0a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8003f0c:	4a13      	ldr	r2, [pc, #76]	; (8003f5c <HAL_GPIO_Init+0x350>)
 8003f0e:	69bb      	ldr	r3, [r7, #24]
 8003f10:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003f12:	69fb      	ldr	r3, [r7, #28]
 8003f14:	3301      	adds	r3, #1
 8003f16:	61fb      	str	r3, [r7, #28]
 8003f18:	69fb      	ldr	r3, [r7, #28]
 8003f1a:	2b0f      	cmp	r3, #15
 8003f1c:	f67f ae84 	bls.w	8003c28 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8003f20:	bf00      	nop
 8003f22:	3724      	adds	r7, #36	; 0x24
 8003f24:	46bd      	mov	sp, r7
 8003f26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f2a:	4770      	bx	lr
 8003f2c:	40023800 	.word	0x40023800
 8003f30:	40013800 	.word	0x40013800
 8003f34:	40020000 	.word	0x40020000
 8003f38:	40020400 	.word	0x40020400
 8003f3c:	40020800 	.word	0x40020800
 8003f40:	40020c00 	.word	0x40020c00
 8003f44:	40021000 	.word	0x40021000
 8003f48:	40021400 	.word	0x40021400
 8003f4c:	40021800 	.word	0x40021800
 8003f50:	40021c00 	.word	0x40021c00
 8003f54:	40022000 	.word	0x40022000
 8003f58:	40022400 	.word	0x40022400
 8003f5c:	40013c00 	.word	0x40013c00

08003f60 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8003f60:	b480      	push	{r7}
 8003f62:	b087      	sub	sp, #28
 8003f64:	af00      	add	r7, sp, #0
 8003f66:	6078      	str	r0, [r7, #4]
 8003f68:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8003f6a:	2300      	movs	r3, #0
 8003f6c:	613b      	str	r3, [r7, #16]
  uint32_t iocurrent = 0x00U;
 8003f6e:	2300      	movs	r3, #0
 8003f70:	60fb      	str	r3, [r7, #12]
  uint32_t tmp = 0x00U;
 8003f72:	2300      	movs	r3, #0
 8003f74:	60bb      	str	r3, [r7, #8]

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  
  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003f76:	2300      	movs	r3, #0
 8003f78:	617b      	str	r3, [r7, #20]
 8003f7a:	e0d9      	b.n	8004130 <HAL_GPIO_DeInit+0x1d0>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8003f7c:	2201      	movs	r2, #1
 8003f7e:	697b      	ldr	r3, [r7, #20]
 8003f80:	fa02 f303 	lsl.w	r3, r2, r3
 8003f84:	613b      	str	r3, [r7, #16]
    /* Get the current IO position */
    iocurrent = (GPIO_Pin) & ioposition;
 8003f86:	683a      	ldr	r2, [r7, #0]
 8003f88:	693b      	ldr	r3, [r7, #16]
 8003f8a:	4013      	ands	r3, r2
 8003f8c:	60fb      	str	r3, [r7, #12]

    if(iocurrent == ioposition)
 8003f8e:	68fa      	ldr	r2, [r7, #12]
 8003f90:	693b      	ldr	r3, [r7, #16]
 8003f92:	429a      	cmp	r2, r3
 8003f94:	f040 80c9 	bne.w	800412a <HAL_GPIO_DeInit+0x1ca>
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2U];
 8003f98:	4a6a      	ldr	r2, [pc, #424]	; (8004144 <HAL_GPIO_DeInit+0x1e4>)
 8003f9a:	697b      	ldr	r3, [r7, #20]
 8003f9c:	089b      	lsrs	r3, r3, #2
 8003f9e:	3302      	adds	r3, #2
 8003fa0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003fa4:	60bb      	str	r3, [r7, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8003fa6:	697b      	ldr	r3, [r7, #20]
 8003fa8:	f003 0303 	and.w	r3, r3, #3
 8003fac:	009b      	lsls	r3, r3, #2
 8003fae:	220f      	movs	r2, #15
 8003fb0:	fa02 f303 	lsl.w	r3, r2, r3
 8003fb4:	68ba      	ldr	r2, [r7, #8]
 8003fb6:	4013      	ands	r3, r2
 8003fb8:	60bb      	str	r3, [r7, #8]
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8003fba:	687b      	ldr	r3, [r7, #4]
 8003fbc:	4a62      	ldr	r2, [pc, #392]	; (8004148 <HAL_GPIO_DeInit+0x1e8>)
 8003fbe:	4293      	cmp	r3, r2
 8003fc0:	d037      	beq.n	8004032 <HAL_GPIO_DeInit+0xd2>
 8003fc2:	687b      	ldr	r3, [r7, #4]
 8003fc4:	4a61      	ldr	r2, [pc, #388]	; (800414c <HAL_GPIO_DeInit+0x1ec>)
 8003fc6:	4293      	cmp	r3, r2
 8003fc8:	d031      	beq.n	800402e <HAL_GPIO_DeInit+0xce>
 8003fca:	687b      	ldr	r3, [r7, #4]
 8003fcc:	4a60      	ldr	r2, [pc, #384]	; (8004150 <HAL_GPIO_DeInit+0x1f0>)
 8003fce:	4293      	cmp	r3, r2
 8003fd0:	d02b      	beq.n	800402a <HAL_GPIO_DeInit+0xca>
 8003fd2:	687b      	ldr	r3, [r7, #4]
 8003fd4:	4a5f      	ldr	r2, [pc, #380]	; (8004154 <HAL_GPIO_DeInit+0x1f4>)
 8003fd6:	4293      	cmp	r3, r2
 8003fd8:	d025      	beq.n	8004026 <HAL_GPIO_DeInit+0xc6>
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	4a5e      	ldr	r2, [pc, #376]	; (8004158 <HAL_GPIO_DeInit+0x1f8>)
 8003fde:	4293      	cmp	r3, r2
 8003fe0:	d01f      	beq.n	8004022 <HAL_GPIO_DeInit+0xc2>
 8003fe2:	687b      	ldr	r3, [r7, #4]
 8003fe4:	4a5d      	ldr	r2, [pc, #372]	; (800415c <HAL_GPIO_DeInit+0x1fc>)
 8003fe6:	4293      	cmp	r3, r2
 8003fe8:	d019      	beq.n	800401e <HAL_GPIO_DeInit+0xbe>
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	4a5c      	ldr	r2, [pc, #368]	; (8004160 <HAL_GPIO_DeInit+0x200>)
 8003fee:	4293      	cmp	r3, r2
 8003ff0:	d013      	beq.n	800401a <HAL_GPIO_DeInit+0xba>
 8003ff2:	687b      	ldr	r3, [r7, #4]
 8003ff4:	4a5b      	ldr	r2, [pc, #364]	; (8004164 <HAL_GPIO_DeInit+0x204>)
 8003ff6:	4293      	cmp	r3, r2
 8003ff8:	d00d      	beq.n	8004016 <HAL_GPIO_DeInit+0xb6>
 8003ffa:	687b      	ldr	r3, [r7, #4]
 8003ffc:	4a5a      	ldr	r2, [pc, #360]	; (8004168 <HAL_GPIO_DeInit+0x208>)
 8003ffe:	4293      	cmp	r3, r2
 8004000:	d007      	beq.n	8004012 <HAL_GPIO_DeInit+0xb2>
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	4a59      	ldr	r2, [pc, #356]	; (800416c <HAL_GPIO_DeInit+0x20c>)
 8004006:	4293      	cmp	r3, r2
 8004008:	d101      	bne.n	800400e <HAL_GPIO_DeInit+0xae>
 800400a:	2309      	movs	r3, #9
 800400c:	e012      	b.n	8004034 <HAL_GPIO_DeInit+0xd4>
 800400e:	230a      	movs	r3, #10
 8004010:	e010      	b.n	8004034 <HAL_GPIO_DeInit+0xd4>
 8004012:	2308      	movs	r3, #8
 8004014:	e00e      	b.n	8004034 <HAL_GPIO_DeInit+0xd4>
 8004016:	2307      	movs	r3, #7
 8004018:	e00c      	b.n	8004034 <HAL_GPIO_DeInit+0xd4>
 800401a:	2306      	movs	r3, #6
 800401c:	e00a      	b.n	8004034 <HAL_GPIO_DeInit+0xd4>
 800401e:	2305      	movs	r3, #5
 8004020:	e008      	b.n	8004034 <HAL_GPIO_DeInit+0xd4>
 8004022:	2304      	movs	r3, #4
 8004024:	e006      	b.n	8004034 <HAL_GPIO_DeInit+0xd4>
 8004026:	2303      	movs	r3, #3
 8004028:	e004      	b.n	8004034 <HAL_GPIO_DeInit+0xd4>
 800402a:	2302      	movs	r3, #2
 800402c:	e002      	b.n	8004034 <HAL_GPIO_DeInit+0xd4>
 800402e:	2301      	movs	r3, #1
 8004030:	e000      	b.n	8004034 <HAL_GPIO_DeInit+0xd4>
 8004032:	2300      	movs	r3, #0
 8004034:	697a      	ldr	r2, [r7, #20]
 8004036:	f002 0203 	and.w	r2, r2, #3
 800403a:	0092      	lsls	r2, r2, #2
 800403c:	4093      	lsls	r3, r2
 800403e:	68ba      	ldr	r2, [r7, #8]
 8004040:	429a      	cmp	r2, r3
 8004042:	d132      	bne.n	80040aa <HAL_GPIO_DeInit+0x14a>
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004044:	4b4a      	ldr	r3, [pc, #296]	; (8004170 <HAL_GPIO_DeInit+0x210>)
 8004046:	681a      	ldr	r2, [r3, #0]
 8004048:	68fb      	ldr	r3, [r7, #12]
 800404a:	43db      	mvns	r3, r3
 800404c:	4948      	ldr	r1, [pc, #288]	; (8004170 <HAL_GPIO_DeInit+0x210>)
 800404e:	4013      	ands	r3, r2
 8004050:	600b      	str	r3, [r1, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8004052:	4b47      	ldr	r3, [pc, #284]	; (8004170 <HAL_GPIO_DeInit+0x210>)
 8004054:	685a      	ldr	r2, [r3, #4]
 8004056:	68fb      	ldr	r3, [r7, #12]
 8004058:	43db      	mvns	r3, r3
 800405a:	4945      	ldr	r1, [pc, #276]	; (8004170 <HAL_GPIO_DeInit+0x210>)
 800405c:	4013      	ands	r3, r2
 800405e:	604b      	str	r3, [r1, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8004060:	4b43      	ldr	r3, [pc, #268]	; (8004170 <HAL_GPIO_DeInit+0x210>)
 8004062:	689a      	ldr	r2, [r3, #8]
 8004064:	68fb      	ldr	r3, [r7, #12]
 8004066:	43db      	mvns	r3, r3
 8004068:	4941      	ldr	r1, [pc, #260]	; (8004170 <HAL_GPIO_DeInit+0x210>)
 800406a:	4013      	ands	r3, r2
 800406c:	608b      	str	r3, [r1, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 800406e:	4b40      	ldr	r3, [pc, #256]	; (8004170 <HAL_GPIO_DeInit+0x210>)
 8004070:	68da      	ldr	r2, [r3, #12]
 8004072:	68fb      	ldr	r3, [r7, #12]
 8004074:	43db      	mvns	r3, r3
 8004076:	493e      	ldr	r1, [pc, #248]	; (8004170 <HAL_GPIO_DeInit+0x210>)
 8004078:	4013      	ands	r3, r2
 800407a:	60cb      	str	r3, [r1, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
 800407c:	697b      	ldr	r3, [r7, #20]
 800407e:	f003 0303 	and.w	r3, r3, #3
 8004082:	009b      	lsls	r3, r3, #2
 8004084:	220f      	movs	r2, #15
 8004086:	fa02 f303 	lsl.w	r3, r2, r3
 800408a:	60bb      	str	r3, [r7, #8]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 800408c:	4a2d      	ldr	r2, [pc, #180]	; (8004144 <HAL_GPIO_DeInit+0x1e4>)
 800408e:	697b      	ldr	r3, [r7, #20]
 8004090:	089b      	lsrs	r3, r3, #2
 8004092:	3302      	adds	r3, #2
 8004094:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8004098:	68bb      	ldr	r3, [r7, #8]
 800409a:	43da      	mvns	r2, r3
 800409c:	4829      	ldr	r0, [pc, #164]	; (8004144 <HAL_GPIO_DeInit+0x1e4>)
 800409e:	697b      	ldr	r3, [r7, #20]
 80040a0:	089b      	lsrs	r3, r3, #2
 80040a2:	400a      	ands	r2, r1
 80040a4:	3302      	adds	r3, #2
 80040a6:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	681a      	ldr	r2, [r3, #0]
 80040ae:	697b      	ldr	r3, [r7, #20]
 80040b0:	005b      	lsls	r3, r3, #1
 80040b2:	2103      	movs	r1, #3
 80040b4:	fa01 f303 	lsl.w	r3, r1, r3
 80040b8:	43db      	mvns	r3, r3
 80040ba:	401a      	ands	r2, r3
 80040bc:	687b      	ldr	r3, [r7, #4]
 80040be:	601a      	str	r2, [r3, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80040c0:	697b      	ldr	r3, [r7, #20]
 80040c2:	08da      	lsrs	r2, r3, #3
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	3208      	adds	r2, #8
 80040c8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80040cc:	697b      	ldr	r3, [r7, #20]
 80040ce:	f003 0307 	and.w	r3, r3, #7
 80040d2:	009b      	lsls	r3, r3, #2
 80040d4:	220f      	movs	r2, #15
 80040d6:	fa02 f303 	lsl.w	r3, r2, r3
 80040da:	43db      	mvns	r3, r3
 80040dc:	697a      	ldr	r2, [r7, #20]
 80040de:	08d2      	lsrs	r2, r2, #3
 80040e0:	4019      	ands	r1, r3
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	3208      	adds	r2, #8
 80040e6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80040ea:	687b      	ldr	r3, [r7, #4]
 80040ec:	68da      	ldr	r2, [r3, #12]
 80040ee:	697b      	ldr	r3, [r7, #20]
 80040f0:	005b      	lsls	r3, r3, #1
 80040f2:	2103      	movs	r1, #3
 80040f4:	fa01 f303 	lsl.w	r3, r1, r3
 80040f8:	43db      	mvns	r3, r3
 80040fa:	401a      	ands	r2, r3
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	60da      	str	r2, [r3, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004100:	687b      	ldr	r3, [r7, #4]
 8004102:	685a      	ldr	r2, [r3, #4]
 8004104:	2101      	movs	r1, #1
 8004106:	697b      	ldr	r3, [r7, #20]
 8004108:	fa01 f303 	lsl.w	r3, r1, r3
 800410c:	43db      	mvns	r3, r3
 800410e:	401a      	ands	r2, r3
 8004110:	687b      	ldr	r3, [r7, #4]
 8004112:	605a      	str	r2, [r3, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	689a      	ldr	r2, [r3, #8]
 8004118:	697b      	ldr	r3, [r7, #20]
 800411a:	005b      	lsls	r3, r3, #1
 800411c:	2103      	movs	r1, #3
 800411e:	fa01 f303 	lsl.w	r3, r1, r3
 8004122:	43db      	mvns	r3, r3
 8004124:	401a      	ands	r2, r3
 8004126:	687b      	ldr	r3, [r7, #4]
 8004128:	609a      	str	r2, [r3, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800412a:	697b      	ldr	r3, [r7, #20]
 800412c:	3301      	adds	r3, #1
 800412e:	617b      	str	r3, [r7, #20]
 8004130:	697b      	ldr	r3, [r7, #20]
 8004132:	2b0f      	cmp	r3, #15
 8004134:	f67f af22 	bls.w	8003f7c <HAL_GPIO_DeInit+0x1c>
    }
  }
}
 8004138:	bf00      	nop
 800413a:	371c      	adds	r7, #28
 800413c:	46bd      	mov	sp, r7
 800413e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004142:	4770      	bx	lr
 8004144:	40013800 	.word	0x40013800
 8004148:	40020000 	.word	0x40020000
 800414c:	40020400 	.word	0x40020400
 8004150:	40020800 	.word	0x40020800
 8004154:	40020c00 	.word	0x40020c00
 8004158:	40021000 	.word	0x40021000
 800415c:	40021400 	.word	0x40021400
 8004160:	40021800 	.word	0x40021800
 8004164:	40021c00 	.word	0x40021c00
 8004168:	40022000 	.word	0x40022000
 800416c:	40022400 	.word	0x40022400
 8004170:	40013c00 	.word	0x40013c00

08004174 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8004174:	b480      	push	{r7}
 8004176:	b085      	sub	sp, #20
 8004178:	af00      	add	r7, sp, #0
 800417a:	6078      	str	r0, [r7, #4]
 800417c:	460b      	mov	r3, r1
 800417e:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004180:	687b      	ldr	r3, [r7, #4]
 8004182:	691a      	ldr	r2, [r3, #16]
 8004184:	887b      	ldrh	r3, [r7, #2]
 8004186:	4013      	ands	r3, r2
 8004188:	2b00      	cmp	r3, #0
 800418a:	d002      	beq.n	8004192 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 800418c:	2301      	movs	r3, #1
 800418e:	73fb      	strb	r3, [r7, #15]
 8004190:	e001      	b.n	8004196 <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 8004192:	2300      	movs	r3, #0
 8004194:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 8004196:	7bfb      	ldrb	r3, [r7, #15]
}
 8004198:	4618      	mov	r0, r3
 800419a:	3714      	adds	r7, #20
 800419c:	46bd      	mov	sp, r7
 800419e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041a2:	4770      	bx	lr

080041a4 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80041a4:	b480      	push	{r7}
 80041a6:	b083      	sub	sp, #12
 80041a8:	af00      	add	r7, sp, #0
 80041aa:	6078      	str	r0, [r7, #4]
 80041ac:	460b      	mov	r3, r1
 80041ae:	807b      	strh	r3, [r7, #2]
 80041b0:	4613      	mov	r3, r2
 80041b2:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80041b4:	787b      	ldrb	r3, [r7, #1]
 80041b6:	2b00      	cmp	r3, #0
 80041b8:	d003      	beq.n	80041c2 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80041ba:	887a      	ldrh	r2, [r7, #2]
 80041bc:	687b      	ldr	r3, [r7, #4]
 80041be:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 80041c0:	e003      	b.n	80041ca <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80041c2:	887b      	ldrh	r3, [r7, #2]
 80041c4:	041a      	lsls	r2, r3, #16
 80041c6:	687b      	ldr	r3, [r7, #4]
 80041c8:	619a      	str	r2, [r3, #24]
}
 80041ca:	bf00      	nop
 80041cc:	370c      	adds	r7, #12
 80041ce:	46bd      	mov	sp, r7
 80041d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041d4:	4770      	bx	lr
	...

080041d8 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 80041d8:	b580      	push	{r7, lr}
 80041da:	b082      	sub	sp, #8
 80041dc:	af00      	add	r7, sp, #0
 80041de:	4603      	mov	r3, r0
 80041e0:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80041e2:	4b08      	ldr	r3, [pc, #32]	; (8004204 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80041e4:	695a      	ldr	r2, [r3, #20]
 80041e6:	88fb      	ldrh	r3, [r7, #6]
 80041e8:	4013      	ands	r3, r2
 80041ea:	2b00      	cmp	r3, #0
 80041ec:	d006      	beq.n	80041fc <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80041ee:	4a05      	ldr	r2, [pc, #20]	; (8004204 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80041f0:	88fb      	ldrh	r3, [r7, #6]
 80041f2:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80041f4:	88fb      	ldrh	r3, [r7, #6]
 80041f6:	4618      	mov	r0, r3
 80041f8:	f7fc ffa8 	bl	800114c <HAL_GPIO_EXTI_Callback>
  }
}
 80041fc:	bf00      	nop
 80041fe:	3708      	adds	r7, #8
 8004200:	46bd      	mov	sp, r7
 8004202:	bd80      	pop	{r7, pc}
 8004204:	40013c00 	.word	0x40013c00

08004208 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8004208:	b580      	push	{r7, lr}
 800420a:	b084      	sub	sp, #16
 800420c:	af00      	add	r7, sp, #0
 800420e:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	2b00      	cmp	r3, #0
 8004214:	d101      	bne.n	800421a <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8004216:	2301      	movs	r3, #1
 8004218:	e11f      	b.n	800445a <HAL_I2C_Init+0x252>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 800421a:	687b      	ldr	r3, [r7, #4]
 800421c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004220:	b2db      	uxtb	r3, r3
 8004222:	2b00      	cmp	r3, #0
 8004224:	d106      	bne.n	8004234 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8004226:	687b      	ldr	r3, [r7, #4]
 8004228:	2200      	movs	r2, #0
 800422a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 800422e:	6878      	ldr	r0, [r7, #4]
 8004230:	f7fd fe42 	bl	8001eb8 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8004234:	687b      	ldr	r3, [r7, #4]
 8004236:	2224      	movs	r2, #36	; 0x24
 8004238:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 800423c:	687b      	ldr	r3, [r7, #4]
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	681a      	ldr	r2, [r3, #0]
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	681b      	ldr	r3, [r3, #0]
 8004246:	f022 0201 	bic.w	r2, r2, #1
 800424a:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800424c:	687b      	ldr	r3, [r7, #4]
 800424e:	681b      	ldr	r3, [r3, #0]
 8004250:	681a      	ldr	r2, [r3, #0]
 8004252:	687b      	ldr	r3, [r7, #4]
 8004254:	681b      	ldr	r3, [r3, #0]
 8004256:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800425a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800425c:	687b      	ldr	r3, [r7, #4]
 800425e:	681b      	ldr	r3, [r3, #0]
 8004260:	681a      	ldr	r2, [r3, #0]
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	681b      	ldr	r3, [r3, #0]
 8004266:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800426a:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800426c:	f001 ff90 	bl	8006190 <HAL_RCC_GetPCLK1Freq>
 8004270:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004272:	687b      	ldr	r3, [r7, #4]
 8004274:	685b      	ldr	r3, [r3, #4]
 8004276:	4a7b      	ldr	r2, [pc, #492]	; (8004464 <HAL_I2C_Init+0x25c>)
 8004278:	4293      	cmp	r3, r2
 800427a:	d807      	bhi.n	800428c <HAL_I2C_Init+0x84>
 800427c:	68fb      	ldr	r3, [r7, #12]
 800427e:	4a7a      	ldr	r2, [pc, #488]	; (8004468 <HAL_I2C_Init+0x260>)
 8004280:	4293      	cmp	r3, r2
 8004282:	bf94      	ite	ls
 8004284:	2301      	movls	r3, #1
 8004286:	2300      	movhi	r3, #0
 8004288:	b2db      	uxtb	r3, r3
 800428a:	e006      	b.n	800429a <HAL_I2C_Init+0x92>
 800428c:	68fb      	ldr	r3, [r7, #12]
 800428e:	4a77      	ldr	r2, [pc, #476]	; (800446c <HAL_I2C_Init+0x264>)
 8004290:	4293      	cmp	r3, r2
 8004292:	bf94      	ite	ls
 8004294:	2301      	movls	r3, #1
 8004296:	2300      	movhi	r3, #0
 8004298:	b2db      	uxtb	r3, r3
 800429a:	2b00      	cmp	r3, #0
 800429c:	d001      	beq.n	80042a2 <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 800429e:	2301      	movs	r3, #1
 80042a0:	e0db      	b.n	800445a <HAL_I2C_Init+0x252>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 80042a2:	68fb      	ldr	r3, [r7, #12]
 80042a4:	4a72      	ldr	r2, [pc, #456]	; (8004470 <HAL_I2C_Init+0x268>)
 80042a6:	fba2 2303 	umull	r2, r3, r2, r3
 80042aa:	0c9b      	lsrs	r3, r3, #18
 80042ac:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80042ae:	687b      	ldr	r3, [r7, #4]
 80042b0:	681b      	ldr	r3, [r3, #0]
 80042b2:	685b      	ldr	r3, [r3, #4]
 80042b4:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 80042b8:	687b      	ldr	r3, [r7, #4]
 80042ba:	681b      	ldr	r3, [r3, #0]
 80042bc:	68ba      	ldr	r2, [r7, #8]
 80042be:	430a      	orrs	r2, r1
 80042c0:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	681b      	ldr	r3, [r3, #0]
 80042c6:	6a1b      	ldr	r3, [r3, #32]
 80042c8:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 80042cc:	687b      	ldr	r3, [r7, #4]
 80042ce:	685b      	ldr	r3, [r3, #4]
 80042d0:	4a64      	ldr	r2, [pc, #400]	; (8004464 <HAL_I2C_Init+0x25c>)
 80042d2:	4293      	cmp	r3, r2
 80042d4:	d802      	bhi.n	80042dc <HAL_I2C_Init+0xd4>
 80042d6:	68bb      	ldr	r3, [r7, #8]
 80042d8:	3301      	adds	r3, #1
 80042da:	e009      	b.n	80042f0 <HAL_I2C_Init+0xe8>
 80042dc:	68bb      	ldr	r3, [r7, #8]
 80042de:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80042e2:	fb02 f303 	mul.w	r3, r2, r3
 80042e6:	4a63      	ldr	r2, [pc, #396]	; (8004474 <HAL_I2C_Init+0x26c>)
 80042e8:	fba2 2303 	umull	r2, r3, r2, r3
 80042ec:	099b      	lsrs	r3, r3, #6
 80042ee:	3301      	adds	r3, #1
 80042f0:	687a      	ldr	r2, [r7, #4]
 80042f2:	6812      	ldr	r2, [r2, #0]
 80042f4:	430b      	orrs	r3, r1
 80042f6:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	681b      	ldr	r3, [r3, #0]
 80042fc:	69db      	ldr	r3, [r3, #28]
 80042fe:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8004302:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	685b      	ldr	r3, [r3, #4]
 800430a:	4956      	ldr	r1, [pc, #344]	; (8004464 <HAL_I2C_Init+0x25c>)
 800430c:	428b      	cmp	r3, r1
 800430e:	d80d      	bhi.n	800432c <HAL_I2C_Init+0x124>
 8004310:	68fb      	ldr	r3, [r7, #12]
 8004312:	1e59      	subs	r1, r3, #1
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	685b      	ldr	r3, [r3, #4]
 8004318:	005b      	lsls	r3, r3, #1
 800431a:	fbb1 f3f3 	udiv	r3, r1, r3
 800431e:	3301      	adds	r3, #1
 8004320:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004324:	2b04      	cmp	r3, #4
 8004326:	bf38      	it	cc
 8004328:	2304      	movcc	r3, #4
 800432a:	e04f      	b.n	80043cc <HAL_I2C_Init+0x1c4>
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	689b      	ldr	r3, [r3, #8]
 8004330:	2b00      	cmp	r3, #0
 8004332:	d111      	bne.n	8004358 <HAL_I2C_Init+0x150>
 8004334:	68fb      	ldr	r3, [r7, #12]
 8004336:	1e58      	subs	r0, r3, #1
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	6859      	ldr	r1, [r3, #4]
 800433c:	460b      	mov	r3, r1
 800433e:	005b      	lsls	r3, r3, #1
 8004340:	440b      	add	r3, r1
 8004342:	fbb0 f3f3 	udiv	r3, r0, r3
 8004346:	3301      	adds	r3, #1
 8004348:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800434c:	2b00      	cmp	r3, #0
 800434e:	bf0c      	ite	eq
 8004350:	2301      	moveq	r3, #1
 8004352:	2300      	movne	r3, #0
 8004354:	b2db      	uxtb	r3, r3
 8004356:	e012      	b.n	800437e <HAL_I2C_Init+0x176>
 8004358:	68fb      	ldr	r3, [r7, #12]
 800435a:	1e58      	subs	r0, r3, #1
 800435c:	687b      	ldr	r3, [r7, #4]
 800435e:	6859      	ldr	r1, [r3, #4]
 8004360:	460b      	mov	r3, r1
 8004362:	009b      	lsls	r3, r3, #2
 8004364:	440b      	add	r3, r1
 8004366:	0099      	lsls	r1, r3, #2
 8004368:	440b      	add	r3, r1
 800436a:	fbb0 f3f3 	udiv	r3, r0, r3
 800436e:	3301      	adds	r3, #1
 8004370:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004374:	2b00      	cmp	r3, #0
 8004376:	bf0c      	ite	eq
 8004378:	2301      	moveq	r3, #1
 800437a:	2300      	movne	r3, #0
 800437c:	b2db      	uxtb	r3, r3
 800437e:	2b00      	cmp	r3, #0
 8004380:	d001      	beq.n	8004386 <HAL_I2C_Init+0x17e>
 8004382:	2301      	movs	r3, #1
 8004384:	e022      	b.n	80043cc <HAL_I2C_Init+0x1c4>
 8004386:	687b      	ldr	r3, [r7, #4]
 8004388:	689b      	ldr	r3, [r3, #8]
 800438a:	2b00      	cmp	r3, #0
 800438c:	d10e      	bne.n	80043ac <HAL_I2C_Init+0x1a4>
 800438e:	68fb      	ldr	r3, [r7, #12]
 8004390:	1e58      	subs	r0, r3, #1
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	6859      	ldr	r1, [r3, #4]
 8004396:	460b      	mov	r3, r1
 8004398:	005b      	lsls	r3, r3, #1
 800439a:	440b      	add	r3, r1
 800439c:	fbb0 f3f3 	udiv	r3, r0, r3
 80043a0:	3301      	adds	r3, #1
 80043a2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80043a6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80043aa:	e00f      	b.n	80043cc <HAL_I2C_Init+0x1c4>
 80043ac:	68fb      	ldr	r3, [r7, #12]
 80043ae:	1e58      	subs	r0, r3, #1
 80043b0:	687b      	ldr	r3, [r7, #4]
 80043b2:	6859      	ldr	r1, [r3, #4]
 80043b4:	460b      	mov	r3, r1
 80043b6:	009b      	lsls	r3, r3, #2
 80043b8:	440b      	add	r3, r1
 80043ba:	0099      	lsls	r1, r3, #2
 80043bc:	440b      	add	r3, r1
 80043be:	fbb0 f3f3 	udiv	r3, r0, r3
 80043c2:	3301      	adds	r3, #1
 80043c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80043c8:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80043cc:	6879      	ldr	r1, [r7, #4]
 80043ce:	6809      	ldr	r1, [r1, #0]
 80043d0:	4313      	orrs	r3, r2
 80043d2:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	681b      	ldr	r3, [r3, #0]
 80043d8:	681b      	ldr	r3, [r3, #0]
 80043da:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 80043de:	687b      	ldr	r3, [r7, #4]
 80043e0:	69da      	ldr	r2, [r3, #28]
 80043e2:	687b      	ldr	r3, [r7, #4]
 80043e4:	6a1b      	ldr	r3, [r3, #32]
 80043e6:	431a      	orrs	r2, r3
 80043e8:	687b      	ldr	r3, [r7, #4]
 80043ea:	681b      	ldr	r3, [r3, #0]
 80043ec:	430a      	orrs	r2, r1
 80043ee:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	689b      	ldr	r3, [r3, #8]
 80043f6:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 80043fa:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80043fe:	687a      	ldr	r2, [r7, #4]
 8004400:	6911      	ldr	r1, [r2, #16]
 8004402:	687a      	ldr	r2, [r7, #4]
 8004404:	68d2      	ldr	r2, [r2, #12]
 8004406:	4311      	orrs	r1, r2
 8004408:	687a      	ldr	r2, [r7, #4]
 800440a:	6812      	ldr	r2, [r2, #0]
 800440c:	430b      	orrs	r3, r1
 800440e:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004410:	687b      	ldr	r3, [r7, #4]
 8004412:	681b      	ldr	r3, [r3, #0]
 8004414:	68db      	ldr	r3, [r3, #12]
 8004416:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 800441a:	687b      	ldr	r3, [r7, #4]
 800441c:	695a      	ldr	r2, [r3, #20]
 800441e:	687b      	ldr	r3, [r7, #4]
 8004420:	699b      	ldr	r3, [r3, #24]
 8004422:	431a      	orrs	r2, r3
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	681b      	ldr	r3, [r3, #0]
 8004428:	430a      	orrs	r2, r1
 800442a:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 800442c:	687b      	ldr	r3, [r7, #4]
 800442e:	681b      	ldr	r3, [r3, #0]
 8004430:	681a      	ldr	r2, [r3, #0]
 8004432:	687b      	ldr	r3, [r7, #4]
 8004434:	681b      	ldr	r3, [r3, #0]
 8004436:	f042 0201 	orr.w	r2, r2, #1
 800443a:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800443c:	687b      	ldr	r3, [r7, #4]
 800443e:	2200      	movs	r2, #0
 8004440:	641a      	str	r2, [r3, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004442:	687b      	ldr	r3, [r7, #4]
 8004444:	2220      	movs	r2, #32
 8004446:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800444a:	687b      	ldr	r3, [r7, #4]
 800444c:	2200      	movs	r2, #0
 800444e:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004450:	687b      	ldr	r3, [r7, #4]
 8004452:	2200      	movs	r2, #0
 8004454:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 8004458:	2300      	movs	r3, #0
}
 800445a:	4618      	mov	r0, r3
 800445c:	3710      	adds	r7, #16
 800445e:	46bd      	mov	sp, r7
 8004460:	bd80      	pop	{r7, pc}
 8004462:	bf00      	nop
 8004464:	000186a0 	.word	0x000186a0
 8004468:	001e847f 	.word	0x001e847f
 800446c:	003d08ff 	.word	0x003d08ff
 8004470:	431bde83 	.word	0x431bde83
 8004474:	10624dd3 	.word	0x10624dd3

08004478 <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004478:	b580      	push	{r7, lr}
 800447a:	b088      	sub	sp, #32
 800447c:	af02      	add	r7, sp, #8
 800447e:	60f8      	str	r0, [r7, #12]
 8004480:	607a      	str	r2, [r7, #4]
 8004482:	461a      	mov	r2, r3
 8004484:	460b      	mov	r3, r1
 8004486:	817b      	strh	r3, [r7, #10]
 8004488:	4613      	mov	r3, r2
 800448a:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 800448c:	f7fe feba 	bl	8003204 <HAL_GetTick>
 8004490:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004492:	68fb      	ldr	r3, [r7, #12]
 8004494:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004498:	b2db      	uxtb	r3, r3
 800449a:	2b20      	cmp	r3, #32
 800449c:	f040 80e0 	bne.w	8004660 <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80044a0:	697b      	ldr	r3, [r7, #20]
 80044a2:	9300      	str	r3, [sp, #0]
 80044a4:	2319      	movs	r3, #25
 80044a6:	2201      	movs	r2, #1
 80044a8:	4970      	ldr	r1, [pc, #448]	; (800466c <HAL_I2C_Master_Transmit+0x1f4>)
 80044aa:	68f8      	ldr	r0, [r7, #12]
 80044ac:	f000 fc56 	bl	8004d5c <I2C_WaitOnFlagUntilTimeout>
 80044b0:	4603      	mov	r3, r0
 80044b2:	2b00      	cmp	r3, #0
 80044b4:	d001      	beq.n	80044ba <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 80044b6:	2302      	movs	r3, #2
 80044b8:	e0d3      	b.n	8004662 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 80044ba:	68fb      	ldr	r3, [r7, #12]
 80044bc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80044c0:	2b01      	cmp	r3, #1
 80044c2:	d101      	bne.n	80044c8 <HAL_I2C_Master_Transmit+0x50>
 80044c4:	2302      	movs	r3, #2
 80044c6:	e0cc      	b.n	8004662 <HAL_I2C_Master_Transmit+0x1ea>
 80044c8:	68fb      	ldr	r3, [r7, #12]
 80044ca:	2201      	movs	r2, #1
 80044cc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80044d0:	68fb      	ldr	r3, [r7, #12]
 80044d2:	681b      	ldr	r3, [r3, #0]
 80044d4:	681b      	ldr	r3, [r3, #0]
 80044d6:	f003 0301 	and.w	r3, r3, #1
 80044da:	2b01      	cmp	r3, #1
 80044dc:	d007      	beq.n	80044ee <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 80044de:	68fb      	ldr	r3, [r7, #12]
 80044e0:	681b      	ldr	r3, [r3, #0]
 80044e2:	681a      	ldr	r2, [r3, #0]
 80044e4:	68fb      	ldr	r3, [r7, #12]
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	f042 0201 	orr.w	r2, r2, #1
 80044ec:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80044ee:	68fb      	ldr	r3, [r7, #12]
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	681a      	ldr	r2, [r3, #0]
 80044f4:	68fb      	ldr	r3, [r7, #12]
 80044f6:	681b      	ldr	r3, [r3, #0]
 80044f8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80044fc:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 80044fe:	68fb      	ldr	r3, [r7, #12]
 8004500:	2221      	movs	r2, #33	; 0x21
 8004502:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 8004506:	68fb      	ldr	r3, [r7, #12]
 8004508:	2210      	movs	r2, #16
 800450a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 800450e:	68fb      	ldr	r3, [r7, #12]
 8004510:	2200      	movs	r2, #0
 8004512:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8004514:	68fb      	ldr	r3, [r7, #12]
 8004516:	687a      	ldr	r2, [r7, #4]
 8004518:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 800451a:	68fb      	ldr	r3, [r7, #12]
 800451c:	893a      	ldrh	r2, [r7, #8]
 800451e:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004520:	68fb      	ldr	r3, [r7, #12]
 8004522:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004524:	b29a      	uxth	r2, r3
 8004526:	68fb      	ldr	r3, [r7, #12]
 8004528:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800452a:	68fb      	ldr	r3, [r7, #12]
 800452c:	4a50      	ldr	r2, [pc, #320]	; (8004670 <HAL_I2C_Master_Transmit+0x1f8>)
 800452e:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 8004530:	8979      	ldrh	r1, [r7, #10]
 8004532:	697b      	ldr	r3, [r7, #20]
 8004534:	6a3a      	ldr	r2, [r7, #32]
 8004536:	68f8      	ldr	r0, [r7, #12]
 8004538:	f000 fac2 	bl	8004ac0 <I2C_MasterRequestWrite>
 800453c:	4603      	mov	r3, r0
 800453e:	2b00      	cmp	r3, #0
 8004540:	d001      	beq.n	8004546 <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 8004542:	2301      	movs	r3, #1
 8004544:	e08d      	b.n	8004662 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004546:	2300      	movs	r3, #0
 8004548:	613b      	str	r3, [r7, #16]
 800454a:	68fb      	ldr	r3, [r7, #12]
 800454c:	681b      	ldr	r3, [r3, #0]
 800454e:	695b      	ldr	r3, [r3, #20]
 8004550:	613b      	str	r3, [r7, #16]
 8004552:	68fb      	ldr	r3, [r7, #12]
 8004554:	681b      	ldr	r3, [r3, #0]
 8004556:	699b      	ldr	r3, [r3, #24]
 8004558:	613b      	str	r3, [r7, #16]
 800455a:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 800455c:	e066      	b.n	800462c <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800455e:	697a      	ldr	r2, [r7, #20]
 8004560:	6a39      	ldr	r1, [r7, #32]
 8004562:	68f8      	ldr	r0, [r7, #12]
 8004564:	f000 fcd0 	bl	8004f08 <I2C_WaitOnTXEFlagUntilTimeout>
 8004568:	4603      	mov	r3, r0
 800456a:	2b00      	cmp	r3, #0
 800456c:	d00d      	beq.n	800458a <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800456e:	68fb      	ldr	r3, [r7, #12]
 8004570:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004572:	2b04      	cmp	r3, #4
 8004574:	d107      	bne.n	8004586 <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004576:	68fb      	ldr	r3, [r7, #12]
 8004578:	681b      	ldr	r3, [r3, #0]
 800457a:	681a      	ldr	r2, [r3, #0]
 800457c:	68fb      	ldr	r3, [r7, #12]
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004584:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8004586:	2301      	movs	r3, #1
 8004588:	e06b      	b.n	8004662 <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800458a:	68fb      	ldr	r3, [r7, #12]
 800458c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800458e:	781a      	ldrb	r2, [r3, #0]
 8004590:	68fb      	ldr	r3, [r7, #12]
 8004592:	681b      	ldr	r3, [r3, #0]
 8004594:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8004596:	68fb      	ldr	r3, [r7, #12]
 8004598:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800459a:	1c5a      	adds	r2, r3, #1
 800459c:	68fb      	ldr	r3, [r7, #12]
 800459e:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferCount--;
 80045a0:	68fb      	ldr	r3, [r7, #12]
 80045a2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80045a4:	b29b      	uxth	r3, r3
 80045a6:	3b01      	subs	r3, #1
 80045a8:	b29a      	uxth	r2, r3
 80045aa:	68fb      	ldr	r3, [r7, #12]
 80045ac:	855a      	strh	r2, [r3, #42]	; 0x2a
      hi2c->XferSize--;
 80045ae:	68fb      	ldr	r3, [r7, #12]
 80045b0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80045b2:	3b01      	subs	r3, #1
 80045b4:	b29a      	uxth	r2, r3
 80045b6:	68fb      	ldr	r3, [r7, #12]
 80045b8:	851a      	strh	r2, [r3, #40]	; 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80045ba:	68fb      	ldr	r3, [r7, #12]
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	695b      	ldr	r3, [r3, #20]
 80045c0:	f003 0304 	and.w	r3, r3, #4
 80045c4:	2b04      	cmp	r3, #4
 80045c6:	d11b      	bne.n	8004600 <HAL_I2C_Master_Transmit+0x188>
 80045c8:	68fb      	ldr	r3, [r7, #12]
 80045ca:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80045cc:	2b00      	cmp	r3, #0
 80045ce:	d017      	beq.n	8004600 <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80045d0:	68fb      	ldr	r3, [r7, #12]
 80045d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045d4:	781a      	ldrb	r2, [r3, #0]
 80045d6:	68fb      	ldr	r3, [r7, #12]
 80045d8:	681b      	ldr	r3, [r3, #0]
 80045da:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 80045dc:	68fb      	ldr	r3, [r7, #12]
 80045de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045e0:	1c5a      	adds	r2, r3, #1
 80045e2:	68fb      	ldr	r3, [r7, #12]
 80045e4:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferCount--;
 80045e6:	68fb      	ldr	r3, [r7, #12]
 80045e8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80045ea:	b29b      	uxth	r3, r3
 80045ec:	3b01      	subs	r3, #1
 80045ee:	b29a      	uxth	r2, r3
 80045f0:	68fb      	ldr	r3, [r7, #12]
 80045f2:	855a      	strh	r2, [r3, #42]	; 0x2a
        hi2c->XferSize--;
 80045f4:	68fb      	ldr	r3, [r7, #12]
 80045f6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80045f8:	3b01      	subs	r3, #1
 80045fa:	b29a      	uxth	r2, r3
 80045fc:	68fb      	ldr	r3, [r7, #12]
 80045fe:	851a      	strh	r2, [r3, #40]	; 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004600:	697a      	ldr	r2, [r7, #20]
 8004602:	6a39      	ldr	r1, [r7, #32]
 8004604:	68f8      	ldr	r0, [r7, #12]
 8004606:	f000 fcc0 	bl	8004f8a <I2C_WaitOnBTFFlagUntilTimeout>
 800460a:	4603      	mov	r3, r0
 800460c:	2b00      	cmp	r3, #0
 800460e:	d00d      	beq.n	800462c <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004610:	68fb      	ldr	r3, [r7, #12]
 8004612:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004614:	2b04      	cmp	r3, #4
 8004616:	d107      	bne.n	8004628 <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004618:	68fb      	ldr	r3, [r7, #12]
 800461a:	681b      	ldr	r3, [r3, #0]
 800461c:	681a      	ldr	r2, [r3, #0]
 800461e:	68fb      	ldr	r3, [r7, #12]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004626:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8004628:	2301      	movs	r3, #1
 800462a:	e01a      	b.n	8004662 <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 800462c:	68fb      	ldr	r3, [r7, #12]
 800462e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004630:	2b00      	cmp	r3, #0
 8004632:	d194      	bne.n	800455e <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004634:	68fb      	ldr	r3, [r7, #12]
 8004636:	681b      	ldr	r3, [r3, #0]
 8004638:	681a      	ldr	r2, [r3, #0]
 800463a:	68fb      	ldr	r3, [r7, #12]
 800463c:	681b      	ldr	r3, [r3, #0]
 800463e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004642:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004644:	68fb      	ldr	r3, [r7, #12]
 8004646:	2220      	movs	r2, #32
 8004648:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800464c:	68fb      	ldr	r3, [r7, #12]
 800464e:	2200      	movs	r2, #0
 8004650:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004654:	68fb      	ldr	r3, [r7, #12]
 8004656:	2200      	movs	r2, #0
 8004658:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 800465c:	2300      	movs	r3, #0
 800465e:	e000      	b.n	8004662 <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 8004660:	2302      	movs	r3, #2
  }
}
 8004662:	4618      	mov	r0, r3
 8004664:	3718      	adds	r7, #24
 8004666:	46bd      	mov	sp, r7
 8004668:	bd80      	pop	{r7, pc}
 800466a:	bf00      	nop
 800466c:	00100002 	.word	0x00100002
 8004670:	ffff0000 	.word	0xffff0000

08004674 <HAL_I2C_Master_Receive>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004674:	b580      	push	{r7, lr}
 8004676:	b08c      	sub	sp, #48	; 0x30
 8004678:	af02      	add	r7, sp, #8
 800467a:	60f8      	str	r0, [r7, #12]
 800467c:	607a      	str	r2, [r7, #4]
 800467e:	461a      	mov	r2, r3
 8004680:	460b      	mov	r3, r1
 8004682:	817b      	strh	r3, [r7, #10]
 8004684:	4613      	mov	r3, r2
 8004686:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8004688:	f7fe fdbc 	bl	8003204 <HAL_GetTick>
 800468c:	6278      	str	r0, [r7, #36]	; 0x24

  if (hi2c->State == HAL_I2C_STATE_READY)
 800468e:	68fb      	ldr	r3, [r7, #12]
 8004690:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004694:	b2db      	uxtb	r3, r3
 8004696:	2b20      	cmp	r3, #32
 8004698:	f040 820b 	bne.w	8004ab2 <HAL_I2C_Master_Receive+0x43e>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800469c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800469e:	9300      	str	r3, [sp, #0]
 80046a0:	2319      	movs	r3, #25
 80046a2:	2201      	movs	r2, #1
 80046a4:	497c      	ldr	r1, [pc, #496]	; (8004898 <HAL_I2C_Master_Receive+0x224>)
 80046a6:	68f8      	ldr	r0, [r7, #12]
 80046a8:	f000 fb58 	bl	8004d5c <I2C_WaitOnFlagUntilTimeout>
 80046ac:	4603      	mov	r3, r0
 80046ae:	2b00      	cmp	r3, #0
 80046b0:	d001      	beq.n	80046b6 <HAL_I2C_Master_Receive+0x42>
    {
      return HAL_BUSY;
 80046b2:	2302      	movs	r3, #2
 80046b4:	e1fe      	b.n	8004ab4 <HAL_I2C_Master_Receive+0x440>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 80046b6:	68fb      	ldr	r3, [r7, #12]
 80046b8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80046bc:	2b01      	cmp	r3, #1
 80046be:	d101      	bne.n	80046c4 <HAL_I2C_Master_Receive+0x50>
 80046c0:	2302      	movs	r3, #2
 80046c2:	e1f7      	b.n	8004ab4 <HAL_I2C_Master_Receive+0x440>
 80046c4:	68fb      	ldr	r3, [r7, #12]
 80046c6:	2201      	movs	r2, #1
 80046c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80046cc:	68fb      	ldr	r3, [r7, #12]
 80046ce:	681b      	ldr	r3, [r3, #0]
 80046d0:	681b      	ldr	r3, [r3, #0]
 80046d2:	f003 0301 	and.w	r3, r3, #1
 80046d6:	2b01      	cmp	r3, #1
 80046d8:	d007      	beq.n	80046ea <HAL_I2C_Master_Receive+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 80046da:	68fb      	ldr	r3, [r7, #12]
 80046dc:	681b      	ldr	r3, [r3, #0]
 80046de:	681a      	ldr	r2, [r3, #0]
 80046e0:	68fb      	ldr	r3, [r7, #12]
 80046e2:	681b      	ldr	r3, [r3, #0]
 80046e4:	f042 0201 	orr.w	r2, r2, #1
 80046e8:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80046ea:	68fb      	ldr	r3, [r7, #12]
 80046ec:	681b      	ldr	r3, [r3, #0]
 80046ee:	681a      	ldr	r2, [r3, #0]
 80046f0:	68fb      	ldr	r3, [r7, #12]
 80046f2:	681b      	ldr	r3, [r3, #0]
 80046f4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80046f8:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 80046fa:	68fb      	ldr	r3, [r7, #12]
 80046fc:	2222      	movs	r2, #34	; 0x22
 80046fe:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 8004702:	68fb      	ldr	r3, [r7, #12]
 8004704:	2210      	movs	r2, #16
 8004706:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 800470a:	68fb      	ldr	r3, [r7, #12]
 800470c:	2200      	movs	r2, #0
 800470e:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8004710:	68fb      	ldr	r3, [r7, #12]
 8004712:	687a      	ldr	r2, [r7, #4]
 8004714:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004716:	68fb      	ldr	r3, [r7, #12]
 8004718:	893a      	ldrh	r2, [r7, #8]
 800471a:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800471c:	68fb      	ldr	r3, [r7, #12]
 800471e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004720:	b29a      	uxth	r2, r3
 8004722:	68fb      	ldr	r3, [r7, #12]
 8004724:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004726:	68fb      	ldr	r3, [r7, #12]
 8004728:	4a5c      	ldr	r2, [pc, #368]	; (800489c <HAL_I2C_Master_Receive+0x228>)
 800472a:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestRead(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 800472c:	8979      	ldrh	r1, [r7, #10]
 800472e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004730:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004732:	68f8      	ldr	r0, [r7, #12]
 8004734:	f000 fa46 	bl	8004bc4 <I2C_MasterRequestRead>
 8004738:	4603      	mov	r3, r0
 800473a:	2b00      	cmp	r3, #0
 800473c:	d001      	beq.n	8004742 <HAL_I2C_Master_Receive+0xce>
    {
      return HAL_ERROR;
 800473e:	2301      	movs	r3, #1
 8004740:	e1b8      	b.n	8004ab4 <HAL_I2C_Master_Receive+0x440>
    }

    if (hi2c->XferSize == 0U)
 8004742:	68fb      	ldr	r3, [r7, #12]
 8004744:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004746:	2b00      	cmp	r3, #0
 8004748:	d113      	bne.n	8004772 <HAL_I2C_Master_Receive+0xfe>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800474a:	2300      	movs	r3, #0
 800474c:	623b      	str	r3, [r7, #32]
 800474e:	68fb      	ldr	r3, [r7, #12]
 8004750:	681b      	ldr	r3, [r3, #0]
 8004752:	695b      	ldr	r3, [r3, #20]
 8004754:	623b      	str	r3, [r7, #32]
 8004756:	68fb      	ldr	r3, [r7, #12]
 8004758:	681b      	ldr	r3, [r3, #0]
 800475a:	699b      	ldr	r3, [r3, #24]
 800475c:	623b      	str	r3, [r7, #32]
 800475e:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004760:	68fb      	ldr	r3, [r7, #12]
 8004762:	681b      	ldr	r3, [r3, #0]
 8004764:	681a      	ldr	r2, [r3, #0]
 8004766:	68fb      	ldr	r3, [r7, #12]
 8004768:	681b      	ldr	r3, [r3, #0]
 800476a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800476e:	601a      	str	r2, [r3, #0]
 8004770:	e18c      	b.n	8004a8c <HAL_I2C_Master_Receive+0x418>
    }
    else if (hi2c->XferSize == 1U)
 8004772:	68fb      	ldr	r3, [r7, #12]
 8004774:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004776:	2b01      	cmp	r3, #1
 8004778:	d11b      	bne.n	80047b2 <HAL_I2C_Master_Receive+0x13e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800477a:	68fb      	ldr	r3, [r7, #12]
 800477c:	681b      	ldr	r3, [r3, #0]
 800477e:	681a      	ldr	r2, [r3, #0]
 8004780:	68fb      	ldr	r3, [r7, #12]
 8004782:	681b      	ldr	r3, [r3, #0]
 8004784:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004788:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800478a:	2300      	movs	r3, #0
 800478c:	61fb      	str	r3, [r7, #28]
 800478e:	68fb      	ldr	r3, [r7, #12]
 8004790:	681b      	ldr	r3, [r3, #0]
 8004792:	695b      	ldr	r3, [r3, #20]
 8004794:	61fb      	str	r3, [r7, #28]
 8004796:	68fb      	ldr	r3, [r7, #12]
 8004798:	681b      	ldr	r3, [r3, #0]
 800479a:	699b      	ldr	r3, [r3, #24]
 800479c:	61fb      	str	r3, [r7, #28]
 800479e:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80047a0:	68fb      	ldr	r3, [r7, #12]
 80047a2:	681b      	ldr	r3, [r3, #0]
 80047a4:	681a      	ldr	r2, [r3, #0]
 80047a6:	68fb      	ldr	r3, [r7, #12]
 80047a8:	681b      	ldr	r3, [r3, #0]
 80047aa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80047ae:	601a      	str	r2, [r3, #0]
 80047b0:	e16c      	b.n	8004a8c <HAL_I2C_Master_Receive+0x418>
    }
    else if (hi2c->XferSize == 2U)
 80047b2:	68fb      	ldr	r3, [r7, #12]
 80047b4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80047b6:	2b02      	cmp	r3, #2
 80047b8:	d11b      	bne.n	80047f2 <HAL_I2C_Master_Receive+0x17e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80047ba:	68fb      	ldr	r3, [r7, #12]
 80047bc:	681b      	ldr	r3, [r3, #0]
 80047be:	681a      	ldr	r2, [r3, #0]
 80047c0:	68fb      	ldr	r3, [r7, #12]
 80047c2:	681b      	ldr	r3, [r3, #0]
 80047c4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80047c8:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80047ca:	68fb      	ldr	r3, [r7, #12]
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	681a      	ldr	r2, [r3, #0]
 80047d0:	68fb      	ldr	r3, [r7, #12]
 80047d2:	681b      	ldr	r3, [r3, #0]
 80047d4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80047d8:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80047da:	2300      	movs	r3, #0
 80047dc:	61bb      	str	r3, [r7, #24]
 80047de:	68fb      	ldr	r3, [r7, #12]
 80047e0:	681b      	ldr	r3, [r3, #0]
 80047e2:	695b      	ldr	r3, [r3, #20]
 80047e4:	61bb      	str	r3, [r7, #24]
 80047e6:	68fb      	ldr	r3, [r7, #12]
 80047e8:	681b      	ldr	r3, [r3, #0]
 80047ea:	699b      	ldr	r3, [r3, #24]
 80047ec:	61bb      	str	r3, [r7, #24]
 80047ee:	69bb      	ldr	r3, [r7, #24]
 80047f0:	e14c      	b.n	8004a8c <HAL_I2C_Master_Receive+0x418>
    }
    else
    {
      /* Enable Acknowledge */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80047f2:	68fb      	ldr	r3, [r7, #12]
 80047f4:	681b      	ldr	r3, [r3, #0]
 80047f6:	681a      	ldr	r2, [r3, #0]
 80047f8:	68fb      	ldr	r3, [r7, #12]
 80047fa:	681b      	ldr	r3, [r3, #0]
 80047fc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004800:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004802:	2300      	movs	r3, #0
 8004804:	617b      	str	r3, [r7, #20]
 8004806:	68fb      	ldr	r3, [r7, #12]
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	695b      	ldr	r3, [r3, #20]
 800480c:	617b      	str	r3, [r7, #20]
 800480e:	68fb      	ldr	r3, [r7, #12]
 8004810:	681b      	ldr	r3, [r3, #0]
 8004812:	699b      	ldr	r3, [r3, #24]
 8004814:	617b      	str	r3, [r7, #20]
 8004816:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 8004818:	e138      	b.n	8004a8c <HAL_I2C_Master_Receive+0x418>
    {
      if (hi2c->XferSize <= 3U)
 800481a:	68fb      	ldr	r3, [r7, #12]
 800481c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800481e:	2b03      	cmp	r3, #3
 8004820:	f200 80f1 	bhi.w	8004a06 <HAL_I2C_Master_Receive+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 8004824:	68fb      	ldr	r3, [r7, #12]
 8004826:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004828:	2b01      	cmp	r3, #1
 800482a:	d123      	bne.n	8004874 <HAL_I2C_Master_Receive+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800482c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800482e:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8004830:	68f8      	ldr	r0, [r7, #12]
 8004832:	f000 fbeb 	bl	800500c <I2C_WaitOnRXNEFlagUntilTimeout>
 8004836:	4603      	mov	r3, r0
 8004838:	2b00      	cmp	r3, #0
 800483a:	d001      	beq.n	8004840 <HAL_I2C_Master_Receive+0x1cc>
          {
            return HAL_ERROR;
 800483c:	2301      	movs	r3, #1
 800483e:	e139      	b.n	8004ab4 <HAL_I2C_Master_Receive+0x440>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004840:	68fb      	ldr	r3, [r7, #12]
 8004842:	681b      	ldr	r3, [r3, #0]
 8004844:	691a      	ldr	r2, [r3, #16]
 8004846:	68fb      	ldr	r3, [r7, #12]
 8004848:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800484a:	b2d2      	uxtb	r2, r2
 800484c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800484e:	68fb      	ldr	r3, [r7, #12]
 8004850:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004852:	1c5a      	adds	r2, r3, #1
 8004854:	68fb      	ldr	r3, [r7, #12]
 8004856:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004858:	68fb      	ldr	r3, [r7, #12]
 800485a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800485c:	3b01      	subs	r3, #1
 800485e:	b29a      	uxth	r2, r3
 8004860:	68fb      	ldr	r3, [r7, #12]
 8004862:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8004864:	68fb      	ldr	r3, [r7, #12]
 8004866:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004868:	b29b      	uxth	r3, r3
 800486a:	3b01      	subs	r3, #1
 800486c:	b29a      	uxth	r2, r3
 800486e:	68fb      	ldr	r3, [r7, #12]
 8004870:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004872:	e10b      	b.n	8004a8c <HAL_I2C_Master_Receive+0x418>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 8004874:	68fb      	ldr	r3, [r7, #12]
 8004876:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004878:	2b02      	cmp	r3, #2
 800487a:	d14e      	bne.n	800491a <HAL_I2C_Master_Receive+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800487c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800487e:	9300      	str	r3, [sp, #0]
 8004880:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004882:	2200      	movs	r2, #0
 8004884:	4906      	ldr	r1, [pc, #24]	; (80048a0 <HAL_I2C_Master_Receive+0x22c>)
 8004886:	68f8      	ldr	r0, [r7, #12]
 8004888:	f000 fa68 	bl	8004d5c <I2C_WaitOnFlagUntilTimeout>
 800488c:	4603      	mov	r3, r0
 800488e:	2b00      	cmp	r3, #0
 8004890:	d008      	beq.n	80048a4 <HAL_I2C_Master_Receive+0x230>
          {
            return HAL_ERROR;
 8004892:	2301      	movs	r3, #1
 8004894:	e10e      	b.n	8004ab4 <HAL_I2C_Master_Receive+0x440>
 8004896:	bf00      	nop
 8004898:	00100002 	.word	0x00100002
 800489c:	ffff0000 	.word	0xffff0000
 80048a0:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80048a4:	68fb      	ldr	r3, [r7, #12]
 80048a6:	681b      	ldr	r3, [r3, #0]
 80048a8:	681a      	ldr	r2, [r3, #0]
 80048aa:	68fb      	ldr	r3, [r7, #12]
 80048ac:	681b      	ldr	r3, [r3, #0]
 80048ae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80048b2:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80048b4:	68fb      	ldr	r3, [r7, #12]
 80048b6:	681b      	ldr	r3, [r3, #0]
 80048b8:	691a      	ldr	r2, [r3, #16]
 80048ba:	68fb      	ldr	r3, [r7, #12]
 80048bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048be:	b2d2      	uxtb	r2, r2
 80048c0:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80048c2:	68fb      	ldr	r3, [r7, #12]
 80048c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048c6:	1c5a      	adds	r2, r3, #1
 80048c8:	68fb      	ldr	r3, [r7, #12]
 80048ca:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80048cc:	68fb      	ldr	r3, [r7, #12]
 80048ce:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80048d0:	3b01      	subs	r3, #1
 80048d2:	b29a      	uxth	r2, r3
 80048d4:	68fb      	ldr	r3, [r7, #12]
 80048d6:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80048d8:	68fb      	ldr	r3, [r7, #12]
 80048da:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80048dc:	b29b      	uxth	r3, r3
 80048de:	3b01      	subs	r3, #1
 80048e0:	b29a      	uxth	r2, r3
 80048e2:	68fb      	ldr	r3, [r7, #12]
 80048e4:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80048e6:	68fb      	ldr	r3, [r7, #12]
 80048e8:	681b      	ldr	r3, [r3, #0]
 80048ea:	691a      	ldr	r2, [r3, #16]
 80048ec:	68fb      	ldr	r3, [r7, #12]
 80048ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048f0:	b2d2      	uxtb	r2, r2
 80048f2:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80048f4:	68fb      	ldr	r3, [r7, #12]
 80048f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048f8:	1c5a      	adds	r2, r3, #1
 80048fa:	68fb      	ldr	r3, [r7, #12]
 80048fc:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80048fe:	68fb      	ldr	r3, [r7, #12]
 8004900:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004902:	3b01      	subs	r3, #1
 8004904:	b29a      	uxth	r2, r3
 8004906:	68fb      	ldr	r3, [r7, #12]
 8004908:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 800490a:	68fb      	ldr	r3, [r7, #12]
 800490c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800490e:	b29b      	uxth	r3, r3
 8004910:	3b01      	subs	r3, #1
 8004912:	b29a      	uxth	r2, r3
 8004914:	68fb      	ldr	r3, [r7, #12]
 8004916:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004918:	e0b8      	b.n	8004a8c <HAL_I2C_Master_Receive+0x418>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800491a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800491c:	9300      	str	r3, [sp, #0]
 800491e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004920:	2200      	movs	r2, #0
 8004922:	4966      	ldr	r1, [pc, #408]	; (8004abc <HAL_I2C_Master_Receive+0x448>)
 8004924:	68f8      	ldr	r0, [r7, #12]
 8004926:	f000 fa19 	bl	8004d5c <I2C_WaitOnFlagUntilTimeout>
 800492a:	4603      	mov	r3, r0
 800492c:	2b00      	cmp	r3, #0
 800492e:	d001      	beq.n	8004934 <HAL_I2C_Master_Receive+0x2c0>
          {
            return HAL_ERROR;
 8004930:	2301      	movs	r3, #1
 8004932:	e0bf      	b.n	8004ab4 <HAL_I2C_Master_Receive+0x440>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004934:	68fb      	ldr	r3, [r7, #12]
 8004936:	681b      	ldr	r3, [r3, #0]
 8004938:	681a      	ldr	r2, [r3, #0]
 800493a:	68fb      	ldr	r3, [r7, #12]
 800493c:	681b      	ldr	r3, [r3, #0]
 800493e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004942:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004944:	68fb      	ldr	r3, [r7, #12]
 8004946:	681b      	ldr	r3, [r3, #0]
 8004948:	691a      	ldr	r2, [r3, #16]
 800494a:	68fb      	ldr	r3, [r7, #12]
 800494c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800494e:	b2d2      	uxtb	r2, r2
 8004950:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004952:	68fb      	ldr	r3, [r7, #12]
 8004954:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004956:	1c5a      	adds	r2, r3, #1
 8004958:	68fb      	ldr	r3, [r7, #12]
 800495a:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 800495c:	68fb      	ldr	r3, [r7, #12]
 800495e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004960:	3b01      	subs	r3, #1
 8004962:	b29a      	uxth	r2, r3
 8004964:	68fb      	ldr	r3, [r7, #12]
 8004966:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8004968:	68fb      	ldr	r3, [r7, #12]
 800496a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800496c:	b29b      	uxth	r3, r3
 800496e:	3b01      	subs	r3, #1
 8004970:	b29a      	uxth	r2, r3
 8004972:	68fb      	ldr	r3, [r7, #12]
 8004974:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004976:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004978:	9300      	str	r3, [sp, #0]
 800497a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800497c:	2200      	movs	r2, #0
 800497e:	494f      	ldr	r1, [pc, #316]	; (8004abc <HAL_I2C_Master_Receive+0x448>)
 8004980:	68f8      	ldr	r0, [r7, #12]
 8004982:	f000 f9eb 	bl	8004d5c <I2C_WaitOnFlagUntilTimeout>
 8004986:	4603      	mov	r3, r0
 8004988:	2b00      	cmp	r3, #0
 800498a:	d001      	beq.n	8004990 <HAL_I2C_Master_Receive+0x31c>
          {
            return HAL_ERROR;
 800498c:	2301      	movs	r3, #1
 800498e:	e091      	b.n	8004ab4 <HAL_I2C_Master_Receive+0x440>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004990:	68fb      	ldr	r3, [r7, #12]
 8004992:	681b      	ldr	r3, [r3, #0]
 8004994:	681a      	ldr	r2, [r3, #0]
 8004996:	68fb      	ldr	r3, [r7, #12]
 8004998:	681b      	ldr	r3, [r3, #0]
 800499a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800499e:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80049a0:	68fb      	ldr	r3, [r7, #12]
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	691a      	ldr	r2, [r3, #16]
 80049a6:	68fb      	ldr	r3, [r7, #12]
 80049a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049aa:	b2d2      	uxtb	r2, r2
 80049ac:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80049ae:	68fb      	ldr	r3, [r7, #12]
 80049b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049b2:	1c5a      	adds	r2, r3, #1
 80049b4:	68fb      	ldr	r3, [r7, #12]
 80049b6:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80049b8:	68fb      	ldr	r3, [r7, #12]
 80049ba:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80049bc:	3b01      	subs	r3, #1
 80049be:	b29a      	uxth	r2, r3
 80049c0:	68fb      	ldr	r3, [r7, #12]
 80049c2:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80049c4:	68fb      	ldr	r3, [r7, #12]
 80049c6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80049c8:	b29b      	uxth	r3, r3
 80049ca:	3b01      	subs	r3, #1
 80049cc:	b29a      	uxth	r2, r3
 80049ce:	68fb      	ldr	r3, [r7, #12]
 80049d0:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80049d2:	68fb      	ldr	r3, [r7, #12]
 80049d4:	681b      	ldr	r3, [r3, #0]
 80049d6:	691a      	ldr	r2, [r3, #16]
 80049d8:	68fb      	ldr	r3, [r7, #12]
 80049da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049dc:	b2d2      	uxtb	r2, r2
 80049de:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80049e0:	68fb      	ldr	r3, [r7, #12]
 80049e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049e4:	1c5a      	adds	r2, r3, #1
 80049e6:	68fb      	ldr	r3, [r7, #12]
 80049e8:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80049ea:	68fb      	ldr	r3, [r7, #12]
 80049ec:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80049ee:	3b01      	subs	r3, #1
 80049f0:	b29a      	uxth	r2, r3
 80049f2:	68fb      	ldr	r3, [r7, #12]
 80049f4:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80049f6:	68fb      	ldr	r3, [r7, #12]
 80049f8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80049fa:	b29b      	uxth	r3, r3
 80049fc:	3b01      	subs	r3, #1
 80049fe:	b29a      	uxth	r2, r3
 8004a00:	68fb      	ldr	r3, [r7, #12]
 8004a02:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004a04:	e042      	b.n	8004a8c <HAL_I2C_Master_Receive+0x418>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004a06:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004a08:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8004a0a:	68f8      	ldr	r0, [r7, #12]
 8004a0c:	f000 fafe 	bl	800500c <I2C_WaitOnRXNEFlagUntilTimeout>
 8004a10:	4603      	mov	r3, r0
 8004a12:	2b00      	cmp	r3, #0
 8004a14:	d001      	beq.n	8004a1a <HAL_I2C_Master_Receive+0x3a6>
        {
          return HAL_ERROR;
 8004a16:	2301      	movs	r3, #1
 8004a18:	e04c      	b.n	8004ab4 <HAL_I2C_Master_Receive+0x440>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004a1a:	68fb      	ldr	r3, [r7, #12]
 8004a1c:	681b      	ldr	r3, [r3, #0]
 8004a1e:	691a      	ldr	r2, [r3, #16]
 8004a20:	68fb      	ldr	r3, [r7, #12]
 8004a22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a24:	b2d2      	uxtb	r2, r2
 8004a26:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8004a28:	68fb      	ldr	r3, [r7, #12]
 8004a2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a2c:	1c5a      	adds	r2, r3, #1
 8004a2e:	68fb      	ldr	r3, [r7, #12]
 8004a30:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 8004a32:	68fb      	ldr	r3, [r7, #12]
 8004a34:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004a36:	3b01      	subs	r3, #1
 8004a38:	b29a      	uxth	r2, r3
 8004a3a:	68fb      	ldr	r3, [r7, #12]
 8004a3c:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 8004a3e:	68fb      	ldr	r3, [r7, #12]
 8004a40:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004a42:	b29b      	uxth	r3, r3
 8004a44:	3b01      	subs	r3, #1
 8004a46:	b29a      	uxth	r2, r3
 8004a48:	68fb      	ldr	r3, [r7, #12]
 8004a4a:	855a      	strh	r2, [r3, #42]	; 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004a4c:	68fb      	ldr	r3, [r7, #12]
 8004a4e:	681b      	ldr	r3, [r3, #0]
 8004a50:	695b      	ldr	r3, [r3, #20]
 8004a52:	f003 0304 	and.w	r3, r3, #4
 8004a56:	2b04      	cmp	r3, #4
 8004a58:	d118      	bne.n	8004a8c <HAL_I2C_Master_Receive+0x418>
        {
          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004a5a:	68fb      	ldr	r3, [r7, #12]
 8004a5c:	681b      	ldr	r3, [r3, #0]
 8004a5e:	691a      	ldr	r2, [r3, #16]
 8004a60:	68fb      	ldr	r3, [r7, #12]
 8004a62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a64:	b2d2      	uxtb	r2, r2
 8004a66:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004a68:	68fb      	ldr	r3, [r7, #12]
 8004a6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a6c:	1c5a      	adds	r2, r3, #1
 8004a6e:	68fb      	ldr	r3, [r7, #12]
 8004a70:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004a72:	68fb      	ldr	r3, [r7, #12]
 8004a74:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004a76:	3b01      	subs	r3, #1
 8004a78:	b29a      	uxth	r2, r3
 8004a7a:	68fb      	ldr	r3, [r7, #12]
 8004a7c:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8004a7e:	68fb      	ldr	r3, [r7, #12]
 8004a80:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004a82:	b29b      	uxth	r3, r3
 8004a84:	3b01      	subs	r3, #1
 8004a86:	b29a      	uxth	r2, r3
 8004a88:	68fb      	ldr	r3, [r7, #12]
 8004a8a:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8004a8c:	68fb      	ldr	r3, [r7, #12]
 8004a8e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004a90:	2b00      	cmp	r3, #0
 8004a92:	f47f aec2 	bne.w	800481a <HAL_I2C_Master_Receive+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 8004a96:	68fb      	ldr	r3, [r7, #12]
 8004a98:	2220      	movs	r2, #32
 8004a9a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004a9e:	68fb      	ldr	r3, [r7, #12]
 8004aa0:	2200      	movs	r2, #0
 8004aa2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004aa6:	68fb      	ldr	r3, [r7, #12]
 8004aa8:	2200      	movs	r2, #0
 8004aaa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8004aae:	2300      	movs	r3, #0
 8004ab0:	e000      	b.n	8004ab4 <HAL_I2C_Master_Receive+0x440>
  }
  else
  {
    return HAL_BUSY;
 8004ab2:	2302      	movs	r3, #2
  }
}
 8004ab4:	4618      	mov	r0, r3
 8004ab6:	3728      	adds	r7, #40	; 0x28
 8004ab8:	46bd      	mov	sp, r7
 8004aba:	bd80      	pop	{r7, pc}
 8004abc:	00010004 	.word	0x00010004

08004ac0 <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8004ac0:	b580      	push	{r7, lr}
 8004ac2:	b088      	sub	sp, #32
 8004ac4:	af02      	add	r7, sp, #8
 8004ac6:	60f8      	str	r0, [r7, #12]
 8004ac8:	607a      	str	r2, [r7, #4]
 8004aca:	603b      	str	r3, [r7, #0]
 8004acc:	460b      	mov	r3, r1
 8004ace:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8004ad0:	68fb      	ldr	r3, [r7, #12]
 8004ad2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004ad4:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8004ad6:	697b      	ldr	r3, [r7, #20]
 8004ad8:	2b08      	cmp	r3, #8
 8004ada:	d006      	beq.n	8004aea <I2C_MasterRequestWrite+0x2a>
 8004adc:	697b      	ldr	r3, [r7, #20]
 8004ade:	2b01      	cmp	r3, #1
 8004ae0:	d003      	beq.n	8004aea <I2C_MasterRequestWrite+0x2a>
 8004ae2:	697b      	ldr	r3, [r7, #20]
 8004ae4:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8004ae8:	d108      	bne.n	8004afc <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004aea:	68fb      	ldr	r3, [r7, #12]
 8004aec:	681b      	ldr	r3, [r3, #0]
 8004aee:	681a      	ldr	r2, [r3, #0]
 8004af0:	68fb      	ldr	r3, [r7, #12]
 8004af2:	681b      	ldr	r3, [r3, #0]
 8004af4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004af8:	601a      	str	r2, [r3, #0]
 8004afa:	e00b      	b.n	8004b14 <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 8004afc:	68fb      	ldr	r3, [r7, #12]
 8004afe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b00:	2b12      	cmp	r3, #18
 8004b02:	d107      	bne.n	8004b14 <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004b04:	68fb      	ldr	r3, [r7, #12]
 8004b06:	681b      	ldr	r3, [r3, #0]
 8004b08:	681a      	ldr	r2, [r3, #0]
 8004b0a:	68fb      	ldr	r3, [r7, #12]
 8004b0c:	681b      	ldr	r3, [r3, #0]
 8004b0e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004b12:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004b14:	683b      	ldr	r3, [r7, #0]
 8004b16:	9300      	str	r3, [sp, #0]
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	2200      	movs	r2, #0
 8004b1c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8004b20:	68f8      	ldr	r0, [r7, #12]
 8004b22:	f000 f91b 	bl	8004d5c <I2C_WaitOnFlagUntilTimeout>
 8004b26:	4603      	mov	r3, r0
 8004b28:	2b00      	cmp	r3, #0
 8004b2a:	d00c      	beq.n	8004b46 <I2C_MasterRequestWrite+0x86>
  {
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8004b2c:	68fb      	ldr	r3, [r7, #12]
 8004b2e:	681b      	ldr	r3, [r3, #0]
 8004b30:	681b      	ldr	r3, [r3, #0]
 8004b32:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b36:	2b00      	cmp	r3, #0
 8004b38:	d003      	beq.n	8004b42 <I2C_MasterRequestWrite+0x82>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004b3a:	68fb      	ldr	r3, [r7, #12]
 8004b3c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004b40:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8004b42:	2303      	movs	r3, #3
 8004b44:	e035      	b.n	8004bb2 <I2C_MasterRequestWrite+0xf2>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004b46:	68fb      	ldr	r3, [r7, #12]
 8004b48:	691b      	ldr	r3, [r3, #16]
 8004b4a:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8004b4e:	d108      	bne.n	8004b62 <I2C_MasterRequestWrite+0xa2>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004b50:	897b      	ldrh	r3, [r7, #10]
 8004b52:	b2db      	uxtb	r3, r3
 8004b54:	461a      	mov	r2, r3
 8004b56:	68fb      	ldr	r3, [r7, #12]
 8004b58:	681b      	ldr	r3, [r3, #0]
 8004b5a:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8004b5e:	611a      	str	r2, [r3, #16]
 8004b60:	e01b      	b.n	8004b9a <I2C_MasterRequestWrite+0xda>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004b62:	897b      	ldrh	r3, [r7, #10]
 8004b64:	11db      	asrs	r3, r3, #7
 8004b66:	b2db      	uxtb	r3, r3
 8004b68:	f003 0306 	and.w	r3, r3, #6
 8004b6c:	b2db      	uxtb	r3, r3
 8004b6e:	f063 030f 	orn	r3, r3, #15
 8004b72:	b2da      	uxtb	r2, r3
 8004b74:	68fb      	ldr	r3, [r7, #12]
 8004b76:	681b      	ldr	r3, [r3, #0]
 8004b78:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8004b7a:	683b      	ldr	r3, [r7, #0]
 8004b7c:	687a      	ldr	r2, [r7, #4]
 8004b7e:	490f      	ldr	r1, [pc, #60]	; (8004bbc <I2C_MasterRequestWrite+0xfc>)
 8004b80:	68f8      	ldr	r0, [r7, #12]
 8004b82:	f000 f942 	bl	8004e0a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004b86:	4603      	mov	r3, r0
 8004b88:	2b00      	cmp	r3, #0
 8004b8a:	d001      	beq.n	8004b90 <I2C_MasterRequestWrite+0xd0>
    {
      return HAL_ERROR;
 8004b8c:	2301      	movs	r3, #1
 8004b8e:	e010      	b.n	8004bb2 <I2C_MasterRequestWrite+0xf2>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004b90:	897b      	ldrh	r3, [r7, #10]
 8004b92:	b2da      	uxtb	r2, r3
 8004b94:	68fb      	ldr	r3, [r7, #12]
 8004b96:	681b      	ldr	r3, [r3, #0]
 8004b98:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004b9a:	683b      	ldr	r3, [r7, #0]
 8004b9c:	687a      	ldr	r2, [r7, #4]
 8004b9e:	4908      	ldr	r1, [pc, #32]	; (8004bc0 <I2C_MasterRequestWrite+0x100>)
 8004ba0:	68f8      	ldr	r0, [r7, #12]
 8004ba2:	f000 f932 	bl	8004e0a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004ba6:	4603      	mov	r3, r0
 8004ba8:	2b00      	cmp	r3, #0
 8004baa:	d001      	beq.n	8004bb0 <I2C_MasterRequestWrite+0xf0>
  {
    return HAL_ERROR;
 8004bac:	2301      	movs	r3, #1
 8004bae:	e000      	b.n	8004bb2 <I2C_MasterRequestWrite+0xf2>
  }

  return HAL_OK;
 8004bb0:	2300      	movs	r3, #0
}
 8004bb2:	4618      	mov	r0, r3
 8004bb4:	3718      	adds	r7, #24
 8004bb6:	46bd      	mov	sp, r7
 8004bb8:	bd80      	pop	{r7, pc}
 8004bba:	bf00      	nop
 8004bbc:	00010008 	.word	0x00010008
 8004bc0:	00010002 	.word	0x00010002

08004bc4 <I2C_MasterRequestRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8004bc4:	b580      	push	{r7, lr}
 8004bc6:	b088      	sub	sp, #32
 8004bc8:	af02      	add	r7, sp, #8
 8004bca:	60f8      	str	r0, [r7, #12]
 8004bcc:	607a      	str	r2, [r7, #4]
 8004bce:	603b      	str	r3, [r7, #0]
 8004bd0:	460b      	mov	r3, r1
 8004bd2:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8004bd4:	68fb      	ldr	r3, [r7, #12]
 8004bd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004bd8:	617b      	str	r3, [r7, #20]

  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004bda:	68fb      	ldr	r3, [r7, #12]
 8004bdc:	681b      	ldr	r3, [r3, #0]
 8004bde:	681a      	ldr	r2, [r3, #0]
 8004be0:	68fb      	ldr	r3, [r7, #12]
 8004be2:	681b      	ldr	r3, [r3, #0]
 8004be4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004be8:	601a      	str	r2, [r3, #0]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8004bea:	697b      	ldr	r3, [r7, #20]
 8004bec:	2b08      	cmp	r3, #8
 8004bee:	d006      	beq.n	8004bfe <I2C_MasterRequestRead+0x3a>
 8004bf0:	697b      	ldr	r3, [r7, #20]
 8004bf2:	2b01      	cmp	r3, #1
 8004bf4:	d003      	beq.n	8004bfe <I2C_MasterRequestRead+0x3a>
 8004bf6:	697b      	ldr	r3, [r7, #20]
 8004bf8:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8004bfc:	d108      	bne.n	8004c10 <I2C_MasterRequestRead+0x4c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004bfe:	68fb      	ldr	r3, [r7, #12]
 8004c00:	681b      	ldr	r3, [r3, #0]
 8004c02:	681a      	ldr	r2, [r3, #0]
 8004c04:	68fb      	ldr	r3, [r7, #12]
 8004c06:	681b      	ldr	r3, [r3, #0]
 8004c08:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004c0c:	601a      	str	r2, [r3, #0]
 8004c0e:	e00b      	b.n	8004c28 <I2C_MasterRequestRead+0x64>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 8004c10:	68fb      	ldr	r3, [r7, #12]
 8004c12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c14:	2b11      	cmp	r3, #17
 8004c16:	d107      	bne.n	8004c28 <I2C_MasterRequestRead+0x64>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004c18:	68fb      	ldr	r3, [r7, #12]
 8004c1a:	681b      	ldr	r3, [r3, #0]
 8004c1c:	681a      	ldr	r2, [r3, #0]
 8004c1e:	68fb      	ldr	r3, [r7, #12]
 8004c20:	681b      	ldr	r3, [r3, #0]
 8004c22:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004c26:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004c28:	683b      	ldr	r3, [r7, #0]
 8004c2a:	9300      	str	r3, [sp, #0]
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	2200      	movs	r2, #0
 8004c30:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8004c34:	68f8      	ldr	r0, [r7, #12]
 8004c36:	f000 f891 	bl	8004d5c <I2C_WaitOnFlagUntilTimeout>
 8004c3a:	4603      	mov	r3, r0
 8004c3c:	2b00      	cmp	r3, #0
 8004c3e:	d00c      	beq.n	8004c5a <I2C_MasterRequestRead+0x96>
  {
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8004c40:	68fb      	ldr	r3, [r7, #12]
 8004c42:	681b      	ldr	r3, [r3, #0]
 8004c44:	681b      	ldr	r3, [r3, #0]
 8004c46:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004c4a:	2b00      	cmp	r3, #0
 8004c4c:	d003      	beq.n	8004c56 <I2C_MasterRequestRead+0x92>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004c4e:	68fb      	ldr	r3, [r7, #12]
 8004c50:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004c54:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8004c56:	2303      	movs	r3, #3
 8004c58:	e078      	b.n	8004d4c <I2C_MasterRequestRead+0x188>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004c5a:	68fb      	ldr	r3, [r7, #12]
 8004c5c:	691b      	ldr	r3, [r3, #16]
 8004c5e:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8004c62:	d108      	bne.n	8004c76 <I2C_MasterRequestRead+0xb2>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004c64:	897b      	ldrh	r3, [r7, #10]
 8004c66:	b2db      	uxtb	r3, r3
 8004c68:	f043 0301 	orr.w	r3, r3, #1
 8004c6c:	b2da      	uxtb	r2, r3
 8004c6e:	68fb      	ldr	r3, [r7, #12]
 8004c70:	681b      	ldr	r3, [r3, #0]
 8004c72:	611a      	str	r2, [r3, #16]
 8004c74:	e05e      	b.n	8004d34 <I2C_MasterRequestRead+0x170>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004c76:	897b      	ldrh	r3, [r7, #10]
 8004c78:	11db      	asrs	r3, r3, #7
 8004c7a:	b2db      	uxtb	r3, r3
 8004c7c:	f003 0306 	and.w	r3, r3, #6
 8004c80:	b2db      	uxtb	r3, r3
 8004c82:	f063 030f 	orn	r3, r3, #15
 8004c86:	b2da      	uxtb	r2, r3
 8004c88:	68fb      	ldr	r3, [r7, #12]
 8004c8a:	681b      	ldr	r3, [r3, #0]
 8004c8c:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8004c8e:	683b      	ldr	r3, [r7, #0]
 8004c90:	687a      	ldr	r2, [r7, #4]
 8004c92:	4930      	ldr	r1, [pc, #192]	; (8004d54 <I2C_MasterRequestRead+0x190>)
 8004c94:	68f8      	ldr	r0, [r7, #12]
 8004c96:	f000 f8b8 	bl	8004e0a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004c9a:	4603      	mov	r3, r0
 8004c9c:	2b00      	cmp	r3, #0
 8004c9e:	d001      	beq.n	8004ca4 <I2C_MasterRequestRead+0xe0>
    {
      return HAL_ERROR;
 8004ca0:	2301      	movs	r3, #1
 8004ca2:	e053      	b.n	8004d4c <I2C_MasterRequestRead+0x188>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004ca4:	897b      	ldrh	r3, [r7, #10]
 8004ca6:	b2da      	uxtb	r2, r3
 8004ca8:	68fb      	ldr	r3, [r7, #12]
 8004caa:	681b      	ldr	r3, [r3, #0]
 8004cac:	611a      	str	r2, [r3, #16]

    /* Wait until ADDR flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004cae:	683b      	ldr	r3, [r7, #0]
 8004cb0:	687a      	ldr	r2, [r7, #4]
 8004cb2:	4929      	ldr	r1, [pc, #164]	; (8004d58 <I2C_MasterRequestRead+0x194>)
 8004cb4:	68f8      	ldr	r0, [r7, #12]
 8004cb6:	f000 f8a8 	bl	8004e0a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004cba:	4603      	mov	r3, r0
 8004cbc:	2b00      	cmp	r3, #0
 8004cbe:	d001      	beq.n	8004cc4 <I2C_MasterRequestRead+0x100>
    {
      return HAL_ERROR;
 8004cc0:	2301      	movs	r3, #1
 8004cc2:	e043      	b.n	8004d4c <I2C_MasterRequestRead+0x188>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004cc4:	2300      	movs	r3, #0
 8004cc6:	613b      	str	r3, [r7, #16]
 8004cc8:	68fb      	ldr	r3, [r7, #12]
 8004cca:	681b      	ldr	r3, [r3, #0]
 8004ccc:	695b      	ldr	r3, [r3, #20]
 8004cce:	613b      	str	r3, [r7, #16]
 8004cd0:	68fb      	ldr	r3, [r7, #12]
 8004cd2:	681b      	ldr	r3, [r3, #0]
 8004cd4:	699b      	ldr	r3, [r3, #24]
 8004cd6:	613b      	str	r3, [r7, #16]
 8004cd8:	693b      	ldr	r3, [r7, #16]

    /* Generate Restart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004cda:	68fb      	ldr	r3, [r7, #12]
 8004cdc:	681b      	ldr	r3, [r3, #0]
 8004cde:	681a      	ldr	r2, [r3, #0]
 8004ce0:	68fb      	ldr	r3, [r7, #12]
 8004ce2:	681b      	ldr	r3, [r3, #0]
 8004ce4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004ce8:	601a      	str	r2, [r3, #0]

    /* Wait until SB flag is set */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004cea:	683b      	ldr	r3, [r7, #0]
 8004cec:	9300      	str	r3, [sp, #0]
 8004cee:	687b      	ldr	r3, [r7, #4]
 8004cf0:	2200      	movs	r2, #0
 8004cf2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8004cf6:	68f8      	ldr	r0, [r7, #12]
 8004cf8:	f000 f830 	bl	8004d5c <I2C_WaitOnFlagUntilTimeout>
 8004cfc:	4603      	mov	r3, r0
 8004cfe:	2b00      	cmp	r3, #0
 8004d00:	d00c      	beq.n	8004d1c <I2C_MasterRequestRead+0x158>
    {
      if (hi2c->Instance->CR1 & I2C_CR1_START)
 8004d02:	68fb      	ldr	r3, [r7, #12]
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	681b      	ldr	r3, [r3, #0]
 8004d08:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004d0c:	2b00      	cmp	r3, #0
 8004d0e:	d003      	beq.n	8004d18 <I2C_MasterRequestRead+0x154>
      {
        hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004d10:	68fb      	ldr	r3, [r7, #12]
 8004d12:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004d16:	641a      	str	r2, [r3, #64]	; 0x40
      }
      return HAL_TIMEOUT;
 8004d18:	2303      	movs	r3, #3
 8004d1a:	e017      	b.n	8004d4c <I2C_MasterRequestRead+0x188>
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 8004d1c:	897b      	ldrh	r3, [r7, #10]
 8004d1e:	11db      	asrs	r3, r3, #7
 8004d20:	b2db      	uxtb	r3, r3
 8004d22:	f003 0306 	and.w	r3, r3, #6
 8004d26:	b2db      	uxtb	r3, r3
 8004d28:	f063 030e 	orn	r3, r3, #14
 8004d2c:	b2da      	uxtb	r2, r3
 8004d2e:	68fb      	ldr	r3, [r7, #12]
 8004d30:	681b      	ldr	r3, [r3, #0]
 8004d32:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004d34:	683b      	ldr	r3, [r7, #0]
 8004d36:	687a      	ldr	r2, [r7, #4]
 8004d38:	4907      	ldr	r1, [pc, #28]	; (8004d58 <I2C_MasterRequestRead+0x194>)
 8004d3a:	68f8      	ldr	r0, [r7, #12]
 8004d3c:	f000 f865 	bl	8004e0a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004d40:	4603      	mov	r3, r0
 8004d42:	2b00      	cmp	r3, #0
 8004d44:	d001      	beq.n	8004d4a <I2C_MasterRequestRead+0x186>
  {
    return HAL_ERROR;
 8004d46:	2301      	movs	r3, #1
 8004d48:	e000      	b.n	8004d4c <I2C_MasterRequestRead+0x188>
  }

  return HAL_OK;
 8004d4a:	2300      	movs	r3, #0
}
 8004d4c:	4618      	mov	r0, r3
 8004d4e:	3718      	adds	r7, #24
 8004d50:	46bd      	mov	sp, r7
 8004d52:	bd80      	pop	{r7, pc}
 8004d54:	00010008 	.word	0x00010008
 8004d58:	00010002 	.word	0x00010002

08004d5c <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 8004d5c:	b580      	push	{r7, lr}
 8004d5e:	b084      	sub	sp, #16
 8004d60:	af00      	add	r7, sp, #0
 8004d62:	60f8      	str	r0, [r7, #12]
 8004d64:	60b9      	str	r1, [r7, #8]
 8004d66:	603b      	str	r3, [r7, #0]
 8004d68:	4613      	mov	r3, r2
 8004d6a:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004d6c:	e025      	b.n	8004dba <I2C_WaitOnFlagUntilTimeout+0x5e>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004d6e:	683b      	ldr	r3, [r7, #0]
 8004d70:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004d74:	d021      	beq.n	8004dba <I2C_WaitOnFlagUntilTimeout+0x5e>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004d76:	f7fe fa45 	bl	8003204 <HAL_GetTick>
 8004d7a:	4602      	mov	r2, r0
 8004d7c:	69bb      	ldr	r3, [r7, #24]
 8004d7e:	1ad3      	subs	r3, r2, r3
 8004d80:	683a      	ldr	r2, [r7, #0]
 8004d82:	429a      	cmp	r2, r3
 8004d84:	d302      	bcc.n	8004d8c <I2C_WaitOnFlagUntilTimeout+0x30>
 8004d86:	683b      	ldr	r3, [r7, #0]
 8004d88:	2b00      	cmp	r3, #0
 8004d8a:	d116      	bne.n	8004dba <I2C_WaitOnFlagUntilTimeout+0x5e>
      {
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004d8c:	68fb      	ldr	r3, [r7, #12]
 8004d8e:	2200      	movs	r2, #0
 8004d90:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004d92:	68fb      	ldr	r3, [r7, #12]
 8004d94:	2220      	movs	r2, #32
 8004d96:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004d9a:	68fb      	ldr	r3, [r7, #12]
 8004d9c:	2200      	movs	r2, #0
 8004d9e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004da2:	68fb      	ldr	r3, [r7, #12]
 8004da4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004da6:	f043 0220 	orr.w	r2, r3, #32
 8004daa:	68fb      	ldr	r3, [r7, #12]
 8004dac:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004dae:	68fb      	ldr	r3, [r7, #12]
 8004db0:	2200      	movs	r2, #0
 8004db2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8004db6:	2301      	movs	r3, #1
 8004db8:	e023      	b.n	8004e02 <I2C_WaitOnFlagUntilTimeout+0xa6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004dba:	68bb      	ldr	r3, [r7, #8]
 8004dbc:	0c1b      	lsrs	r3, r3, #16
 8004dbe:	b2db      	uxtb	r3, r3
 8004dc0:	2b01      	cmp	r3, #1
 8004dc2:	d10d      	bne.n	8004de0 <I2C_WaitOnFlagUntilTimeout+0x84>
 8004dc4:	68fb      	ldr	r3, [r7, #12]
 8004dc6:	681b      	ldr	r3, [r3, #0]
 8004dc8:	695b      	ldr	r3, [r3, #20]
 8004dca:	43da      	mvns	r2, r3
 8004dcc:	68bb      	ldr	r3, [r7, #8]
 8004dce:	4013      	ands	r3, r2
 8004dd0:	b29b      	uxth	r3, r3
 8004dd2:	2b00      	cmp	r3, #0
 8004dd4:	bf0c      	ite	eq
 8004dd6:	2301      	moveq	r3, #1
 8004dd8:	2300      	movne	r3, #0
 8004dda:	b2db      	uxtb	r3, r3
 8004ddc:	461a      	mov	r2, r3
 8004dde:	e00c      	b.n	8004dfa <I2C_WaitOnFlagUntilTimeout+0x9e>
 8004de0:	68fb      	ldr	r3, [r7, #12]
 8004de2:	681b      	ldr	r3, [r3, #0]
 8004de4:	699b      	ldr	r3, [r3, #24]
 8004de6:	43da      	mvns	r2, r3
 8004de8:	68bb      	ldr	r3, [r7, #8]
 8004dea:	4013      	ands	r3, r2
 8004dec:	b29b      	uxth	r3, r3
 8004dee:	2b00      	cmp	r3, #0
 8004df0:	bf0c      	ite	eq
 8004df2:	2301      	moveq	r3, #1
 8004df4:	2300      	movne	r3, #0
 8004df6:	b2db      	uxtb	r3, r3
 8004df8:	461a      	mov	r2, r3
 8004dfa:	79fb      	ldrb	r3, [r7, #7]
 8004dfc:	429a      	cmp	r2, r3
 8004dfe:	d0b6      	beq.n	8004d6e <I2C_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8004e00:	2300      	movs	r3, #0
}
 8004e02:	4618      	mov	r0, r3
 8004e04:	3710      	adds	r7, #16
 8004e06:	46bd      	mov	sp, r7
 8004e08:	bd80      	pop	{r7, pc}

08004e0a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 8004e0a:	b580      	push	{r7, lr}
 8004e0c:	b084      	sub	sp, #16
 8004e0e:	af00      	add	r7, sp, #0
 8004e10:	60f8      	str	r0, [r7, #12]
 8004e12:	60b9      	str	r1, [r7, #8]
 8004e14:	607a      	str	r2, [r7, #4]
 8004e16:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004e18:	e051      	b.n	8004ebe <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004e1a:	68fb      	ldr	r3, [r7, #12]
 8004e1c:	681b      	ldr	r3, [r3, #0]
 8004e1e:	695b      	ldr	r3, [r3, #20]
 8004e20:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004e24:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004e28:	d123      	bne.n	8004e72 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004e2a:	68fb      	ldr	r3, [r7, #12]
 8004e2c:	681b      	ldr	r3, [r3, #0]
 8004e2e:	681a      	ldr	r2, [r3, #0]
 8004e30:	68fb      	ldr	r3, [r7, #12]
 8004e32:	681b      	ldr	r3, [r3, #0]
 8004e34:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004e38:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004e3a:	68fb      	ldr	r3, [r7, #12]
 8004e3c:	681b      	ldr	r3, [r3, #0]
 8004e3e:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8004e42:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8004e44:	68fb      	ldr	r3, [r7, #12]
 8004e46:	2200      	movs	r2, #0
 8004e48:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004e4a:	68fb      	ldr	r3, [r7, #12]
 8004e4c:	2220      	movs	r2, #32
 8004e4e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004e52:	68fb      	ldr	r3, [r7, #12]
 8004e54:	2200      	movs	r2, #0
 8004e56:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004e5a:	68fb      	ldr	r3, [r7, #12]
 8004e5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e5e:	f043 0204 	orr.w	r2, r3, #4
 8004e62:	68fb      	ldr	r3, [r7, #12]
 8004e64:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8004e66:	68fb      	ldr	r3, [r7, #12]
 8004e68:	2200      	movs	r2, #0
 8004e6a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 8004e6e:	2301      	movs	r3, #1
 8004e70:	e046      	b.n	8004f00 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004e72:	687b      	ldr	r3, [r7, #4]
 8004e74:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004e78:	d021      	beq.n	8004ebe <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004e7a:	f7fe f9c3 	bl	8003204 <HAL_GetTick>
 8004e7e:	4602      	mov	r2, r0
 8004e80:	683b      	ldr	r3, [r7, #0]
 8004e82:	1ad3      	subs	r3, r2, r3
 8004e84:	687a      	ldr	r2, [r7, #4]
 8004e86:	429a      	cmp	r2, r3
 8004e88:	d302      	bcc.n	8004e90 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8004e8a:	687b      	ldr	r3, [r7, #4]
 8004e8c:	2b00      	cmp	r3, #0
 8004e8e:	d116      	bne.n	8004ebe <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004e90:	68fb      	ldr	r3, [r7, #12]
 8004e92:	2200      	movs	r2, #0
 8004e94:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004e96:	68fb      	ldr	r3, [r7, #12]
 8004e98:	2220      	movs	r2, #32
 8004e9a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004e9e:	68fb      	ldr	r3, [r7, #12]
 8004ea0:	2200      	movs	r2, #0
 8004ea2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004ea6:	68fb      	ldr	r3, [r7, #12]
 8004ea8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004eaa:	f043 0220 	orr.w	r2, r3, #32
 8004eae:	68fb      	ldr	r3, [r7, #12]
 8004eb0:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004eb2:	68fb      	ldr	r3, [r7, #12]
 8004eb4:	2200      	movs	r2, #0
 8004eb6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8004eba:	2301      	movs	r3, #1
 8004ebc:	e020      	b.n	8004f00 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004ebe:	68bb      	ldr	r3, [r7, #8]
 8004ec0:	0c1b      	lsrs	r3, r3, #16
 8004ec2:	b2db      	uxtb	r3, r3
 8004ec4:	2b01      	cmp	r3, #1
 8004ec6:	d10c      	bne.n	8004ee2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8004ec8:	68fb      	ldr	r3, [r7, #12]
 8004eca:	681b      	ldr	r3, [r3, #0]
 8004ecc:	695b      	ldr	r3, [r3, #20]
 8004ece:	43da      	mvns	r2, r3
 8004ed0:	68bb      	ldr	r3, [r7, #8]
 8004ed2:	4013      	ands	r3, r2
 8004ed4:	b29b      	uxth	r3, r3
 8004ed6:	2b00      	cmp	r3, #0
 8004ed8:	bf14      	ite	ne
 8004eda:	2301      	movne	r3, #1
 8004edc:	2300      	moveq	r3, #0
 8004ede:	b2db      	uxtb	r3, r3
 8004ee0:	e00b      	b.n	8004efa <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8004ee2:	68fb      	ldr	r3, [r7, #12]
 8004ee4:	681b      	ldr	r3, [r3, #0]
 8004ee6:	699b      	ldr	r3, [r3, #24]
 8004ee8:	43da      	mvns	r2, r3
 8004eea:	68bb      	ldr	r3, [r7, #8]
 8004eec:	4013      	ands	r3, r2
 8004eee:	b29b      	uxth	r3, r3
 8004ef0:	2b00      	cmp	r3, #0
 8004ef2:	bf14      	ite	ne
 8004ef4:	2301      	movne	r3, #1
 8004ef6:	2300      	moveq	r3, #0
 8004ef8:	b2db      	uxtb	r3, r3
 8004efa:	2b00      	cmp	r3, #0
 8004efc:	d18d      	bne.n	8004e1a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
      }
    }
  }
  return HAL_OK;
 8004efe:	2300      	movs	r3, #0
}
 8004f00:	4618      	mov	r0, r3
 8004f02:	3710      	adds	r7, #16
 8004f04:	46bd      	mov	sp, r7
 8004f06:	bd80      	pop	{r7, pc}

08004f08 <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004f08:	b580      	push	{r7, lr}
 8004f0a:	b084      	sub	sp, #16
 8004f0c:	af00      	add	r7, sp, #0
 8004f0e:	60f8      	str	r0, [r7, #12]
 8004f10:	60b9      	str	r1, [r7, #8]
 8004f12:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004f14:	e02d      	b.n	8004f72 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004f16:	68f8      	ldr	r0, [r7, #12]
 8004f18:	f000 f8ce 	bl	80050b8 <I2C_IsAcknowledgeFailed>
 8004f1c:	4603      	mov	r3, r0
 8004f1e:	2b00      	cmp	r3, #0
 8004f20:	d001      	beq.n	8004f26 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8004f22:	2301      	movs	r3, #1
 8004f24:	e02d      	b.n	8004f82 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004f26:	68bb      	ldr	r3, [r7, #8]
 8004f28:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004f2c:	d021      	beq.n	8004f72 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f2e:	f7fe f969 	bl	8003204 <HAL_GetTick>
 8004f32:	4602      	mov	r2, r0
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	1ad3      	subs	r3, r2, r3
 8004f38:	68ba      	ldr	r2, [r7, #8]
 8004f3a:	429a      	cmp	r2, r3
 8004f3c:	d302      	bcc.n	8004f44 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8004f3e:	68bb      	ldr	r3, [r7, #8]
 8004f40:	2b00      	cmp	r3, #0
 8004f42:	d116      	bne.n	8004f72 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004f44:	68fb      	ldr	r3, [r7, #12]
 8004f46:	2200      	movs	r2, #0
 8004f48:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004f4a:	68fb      	ldr	r3, [r7, #12]
 8004f4c:	2220      	movs	r2, #32
 8004f4e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004f52:	68fb      	ldr	r3, [r7, #12]
 8004f54:	2200      	movs	r2, #0
 8004f56:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004f5a:	68fb      	ldr	r3, [r7, #12]
 8004f5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f5e:	f043 0220 	orr.w	r2, r3, #32
 8004f62:	68fb      	ldr	r3, [r7, #12]
 8004f64:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004f66:	68fb      	ldr	r3, [r7, #12]
 8004f68:	2200      	movs	r2, #0
 8004f6a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8004f6e:	2301      	movs	r3, #1
 8004f70:	e007      	b.n	8004f82 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004f72:	68fb      	ldr	r3, [r7, #12]
 8004f74:	681b      	ldr	r3, [r3, #0]
 8004f76:	695b      	ldr	r3, [r3, #20]
 8004f78:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004f7c:	2b80      	cmp	r3, #128	; 0x80
 8004f7e:	d1ca      	bne.n	8004f16 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8004f80:	2300      	movs	r3, #0
}
 8004f82:	4618      	mov	r0, r3
 8004f84:	3710      	adds	r7, #16
 8004f86:	46bd      	mov	sp, r7
 8004f88:	bd80      	pop	{r7, pc}

08004f8a <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004f8a:	b580      	push	{r7, lr}
 8004f8c:	b084      	sub	sp, #16
 8004f8e:	af00      	add	r7, sp, #0
 8004f90:	60f8      	str	r0, [r7, #12]
 8004f92:	60b9      	str	r1, [r7, #8]
 8004f94:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004f96:	e02d      	b.n	8004ff4 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004f98:	68f8      	ldr	r0, [r7, #12]
 8004f9a:	f000 f88d 	bl	80050b8 <I2C_IsAcknowledgeFailed>
 8004f9e:	4603      	mov	r3, r0
 8004fa0:	2b00      	cmp	r3, #0
 8004fa2:	d001      	beq.n	8004fa8 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8004fa4:	2301      	movs	r3, #1
 8004fa6:	e02d      	b.n	8005004 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004fa8:	68bb      	ldr	r3, [r7, #8]
 8004faa:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004fae:	d021      	beq.n	8004ff4 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004fb0:	f7fe f928 	bl	8003204 <HAL_GetTick>
 8004fb4:	4602      	mov	r2, r0
 8004fb6:	687b      	ldr	r3, [r7, #4]
 8004fb8:	1ad3      	subs	r3, r2, r3
 8004fba:	68ba      	ldr	r2, [r7, #8]
 8004fbc:	429a      	cmp	r2, r3
 8004fbe:	d302      	bcc.n	8004fc6 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8004fc0:	68bb      	ldr	r3, [r7, #8]
 8004fc2:	2b00      	cmp	r3, #0
 8004fc4:	d116      	bne.n	8004ff4 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004fc6:	68fb      	ldr	r3, [r7, #12]
 8004fc8:	2200      	movs	r2, #0
 8004fca:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004fcc:	68fb      	ldr	r3, [r7, #12]
 8004fce:	2220      	movs	r2, #32
 8004fd0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004fd4:	68fb      	ldr	r3, [r7, #12]
 8004fd6:	2200      	movs	r2, #0
 8004fd8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004fdc:	68fb      	ldr	r3, [r7, #12]
 8004fde:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fe0:	f043 0220 	orr.w	r2, r3, #32
 8004fe4:	68fb      	ldr	r3, [r7, #12]
 8004fe6:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004fe8:	68fb      	ldr	r3, [r7, #12]
 8004fea:	2200      	movs	r2, #0
 8004fec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8004ff0:	2301      	movs	r3, #1
 8004ff2:	e007      	b.n	8005004 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004ff4:	68fb      	ldr	r3, [r7, #12]
 8004ff6:	681b      	ldr	r3, [r3, #0]
 8004ff8:	695b      	ldr	r3, [r3, #20]
 8004ffa:	f003 0304 	and.w	r3, r3, #4
 8004ffe:	2b04      	cmp	r3, #4
 8005000:	d1ca      	bne.n	8004f98 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8005002:	2300      	movs	r3, #0
}
 8005004:	4618      	mov	r0, r3
 8005006:	3710      	adds	r7, #16
 8005008:	46bd      	mov	sp, r7
 800500a:	bd80      	pop	{r7, pc}

0800500c <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 800500c:	b580      	push	{r7, lr}
 800500e:	b084      	sub	sp, #16
 8005010:	af00      	add	r7, sp, #0
 8005012:	60f8      	str	r0, [r7, #12]
 8005014:	60b9      	str	r1, [r7, #8]
 8005016:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005018:	e042      	b.n	80050a0 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800501a:	68fb      	ldr	r3, [r7, #12]
 800501c:	681b      	ldr	r3, [r3, #0]
 800501e:	695b      	ldr	r3, [r3, #20]
 8005020:	f003 0310 	and.w	r3, r3, #16
 8005024:	2b10      	cmp	r3, #16
 8005026:	d119      	bne.n	800505c <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005028:	68fb      	ldr	r3, [r7, #12]
 800502a:	681b      	ldr	r3, [r3, #0]
 800502c:	f06f 0210 	mvn.w	r2, #16
 8005030:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8005032:	68fb      	ldr	r3, [r7, #12]
 8005034:	2200      	movs	r2, #0
 8005036:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005038:	68fb      	ldr	r3, [r7, #12]
 800503a:	2220      	movs	r2, #32
 800503c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005040:	68fb      	ldr	r3, [r7, #12]
 8005042:	2200      	movs	r2, #0
 8005044:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8005048:	68fb      	ldr	r3, [r7, #12]
 800504a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800504c:	68fb      	ldr	r3, [r7, #12]
 800504e:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8005050:	68fb      	ldr	r3, [r7, #12]
 8005052:	2200      	movs	r2, #0
 8005054:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 8005058:	2301      	movs	r3, #1
 800505a:	e029      	b.n	80050b0 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800505c:	f7fe f8d2 	bl	8003204 <HAL_GetTick>
 8005060:	4602      	mov	r2, r0
 8005062:	687b      	ldr	r3, [r7, #4]
 8005064:	1ad3      	subs	r3, r2, r3
 8005066:	68ba      	ldr	r2, [r7, #8]
 8005068:	429a      	cmp	r2, r3
 800506a:	d302      	bcc.n	8005072 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 800506c:	68bb      	ldr	r3, [r7, #8]
 800506e:	2b00      	cmp	r3, #0
 8005070:	d116      	bne.n	80050a0 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
    {
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005072:	68fb      	ldr	r3, [r7, #12]
 8005074:	2200      	movs	r2, #0
 8005076:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005078:	68fb      	ldr	r3, [r7, #12]
 800507a:	2220      	movs	r2, #32
 800507c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005080:	68fb      	ldr	r3, [r7, #12]
 8005082:	2200      	movs	r2, #0
 8005084:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005088:	68fb      	ldr	r3, [r7, #12]
 800508a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800508c:	f043 0220 	orr.w	r2, r3, #32
 8005090:	68fb      	ldr	r3, [r7, #12]
 8005092:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8005094:	68fb      	ldr	r3, [r7, #12]
 8005096:	2200      	movs	r2, #0
 8005098:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 800509c:	2301      	movs	r3, #1
 800509e:	e007      	b.n	80050b0 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80050a0:	68fb      	ldr	r3, [r7, #12]
 80050a2:	681b      	ldr	r3, [r3, #0]
 80050a4:	695b      	ldr	r3, [r3, #20]
 80050a6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80050aa:	2b40      	cmp	r3, #64	; 0x40
 80050ac:	d1b5      	bne.n	800501a <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
    }
  }
  return HAL_OK;
 80050ae:	2300      	movs	r3, #0
}
 80050b0:	4618      	mov	r0, r3
 80050b2:	3710      	adds	r7, #16
 80050b4:	46bd      	mov	sp, r7
 80050b6:	bd80      	pop	{r7, pc}

080050b8 <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 80050b8:	b480      	push	{r7}
 80050ba:	b083      	sub	sp, #12
 80050bc:	af00      	add	r7, sp, #0
 80050be:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80050c0:	687b      	ldr	r3, [r7, #4]
 80050c2:	681b      	ldr	r3, [r3, #0]
 80050c4:	695b      	ldr	r3, [r3, #20]
 80050c6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80050ca:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80050ce:	d11b      	bne.n	8005108 <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80050d0:	687b      	ldr	r3, [r7, #4]
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80050d8:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	2200      	movs	r2, #0
 80050de:	631a      	str	r2, [r3, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	2220      	movs	r2, #32
 80050e4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	2200      	movs	r2, #0
 80050ec:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80050f0:	687b      	ldr	r3, [r7, #4]
 80050f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80050f4:	f043 0204 	orr.w	r2, r3, #4
 80050f8:	687b      	ldr	r3, [r7, #4]
 80050fa:	641a      	str	r2, [r3, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80050fc:	687b      	ldr	r3, [r7, #4]
 80050fe:	2200      	movs	r2, #0
 8005100:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_ERROR;
 8005104:	2301      	movs	r3, #1
 8005106:	e000      	b.n	800510a <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 8005108:	2300      	movs	r3, #0
}
 800510a:	4618      	mov	r0, r3
 800510c:	370c      	adds	r7, #12
 800510e:	46bd      	mov	sp, r7
 8005110:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005114:	4770      	bx	lr

08005116 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005116:	b480      	push	{r7}
 8005118:	b083      	sub	sp, #12
 800511a:	af00      	add	r7, sp, #0
 800511c:	6078      	str	r0, [r7, #4]
 800511e:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005126:	b2db      	uxtb	r3, r3
 8005128:	2b20      	cmp	r3, #32
 800512a:	d129      	bne.n	8005180 <HAL_I2CEx_ConfigAnalogFilter+0x6a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	2224      	movs	r2, #36	; 0x24
 8005130:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	681b      	ldr	r3, [r3, #0]
 8005138:	681a      	ldr	r2, [r3, #0]
 800513a:	687b      	ldr	r3, [r7, #4]
 800513c:	681b      	ldr	r3, [r3, #0]
 800513e:	f022 0201 	bic.w	r2, r2, #1
 8005142:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8005144:	687b      	ldr	r3, [r7, #4]
 8005146:	681b      	ldr	r3, [r3, #0]
 8005148:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800514a:	687b      	ldr	r3, [r7, #4]
 800514c:	681b      	ldr	r3, [r3, #0]
 800514e:	f022 0210 	bic.w	r2, r2, #16
 8005152:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	681b      	ldr	r3, [r3, #0]
 8005158:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	681b      	ldr	r3, [r3, #0]
 800515e:	683a      	ldr	r2, [r7, #0]
 8005160:	430a      	orrs	r2, r1
 8005162:	625a      	str	r2, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005164:	687b      	ldr	r3, [r7, #4]
 8005166:	681b      	ldr	r3, [r3, #0]
 8005168:	681a      	ldr	r2, [r3, #0]
 800516a:	687b      	ldr	r3, [r7, #4]
 800516c:	681b      	ldr	r3, [r3, #0]
 800516e:	f042 0201 	orr.w	r2, r2, #1
 8005172:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	2220      	movs	r2, #32
 8005178:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    return HAL_OK;
 800517c:	2300      	movs	r3, #0
 800517e:	e000      	b.n	8005182 <HAL_I2CEx_ConfigAnalogFilter+0x6c>
  }
  else
  {
    return HAL_BUSY;
 8005180:	2302      	movs	r3, #2
  }
}
 8005182:	4618      	mov	r0, r3
 8005184:	370c      	adds	r7, #12
 8005186:	46bd      	mov	sp, r7
 8005188:	f85d 7b04 	ldr.w	r7, [sp], #4
 800518c:	4770      	bx	lr

0800518e <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800518e:	b480      	push	{r7}
 8005190:	b085      	sub	sp, #20
 8005192:	af00      	add	r7, sp, #0
 8005194:	6078      	str	r0, [r7, #4]
 8005196:	6039      	str	r1, [r7, #0]
  uint16_t tmpreg = 0;
 8005198:	2300      	movs	r3, #0
 800519a:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80051a2:	b2db      	uxtb	r3, r3
 80051a4:	2b20      	cmp	r3, #32
 80051a6:	d12a      	bne.n	80051fe <HAL_I2CEx_ConfigDigitalFilter+0x70>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80051a8:	687b      	ldr	r3, [r7, #4]
 80051aa:	2224      	movs	r2, #36	; 0x24
 80051ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80051b0:	687b      	ldr	r3, [r7, #4]
 80051b2:	681b      	ldr	r3, [r3, #0]
 80051b4:	681a      	ldr	r2, [r3, #0]
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	681b      	ldr	r3, [r3, #0]
 80051ba:	f022 0201 	bic.w	r2, r2, #1
 80051be:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80051c0:	687b      	ldr	r3, [r7, #4]
 80051c2:	681b      	ldr	r3, [r3, #0]
 80051c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051c6:	81fb      	strh	r3, [r7, #14]

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 80051c8:	89fb      	ldrh	r3, [r7, #14]
 80051ca:	f023 030f 	bic.w	r3, r3, #15
 80051ce:	81fb      	strh	r3, [r7, #14]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 80051d0:	683b      	ldr	r3, [r7, #0]
 80051d2:	b29a      	uxth	r2, r3
 80051d4:	89fb      	ldrh	r3, [r7, #14]
 80051d6:	4313      	orrs	r3, r2
 80051d8:	81fb      	strh	r3, [r7, #14]

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 80051da:	687b      	ldr	r3, [r7, #4]
 80051dc:	681b      	ldr	r3, [r3, #0]
 80051de:	89fa      	ldrh	r2, [r7, #14]
 80051e0:	625a      	str	r2, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80051e2:	687b      	ldr	r3, [r7, #4]
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	681a      	ldr	r2, [r3, #0]
 80051e8:	687b      	ldr	r3, [r7, #4]
 80051ea:	681b      	ldr	r3, [r3, #0]
 80051ec:	f042 0201 	orr.w	r2, r2, #1
 80051f0:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80051f2:	687b      	ldr	r3, [r7, #4]
 80051f4:	2220      	movs	r2, #32
 80051f6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    return HAL_OK;
 80051fa:	2300      	movs	r3, #0
 80051fc:	e000      	b.n	8005200 <HAL_I2CEx_ConfigDigitalFilter+0x72>
  }
  else
  {
    return HAL_BUSY;
 80051fe:	2302      	movs	r3, #2
  }
}
 8005200:	4618      	mov	r0, r3
 8005202:	3714      	adds	r7, #20
 8005204:	46bd      	mov	sp, r7
 8005206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800520a:	4770      	bx	lr

0800520c <HAL_LTDC_Init>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
 800520c:	b580      	push	{r7, lr}
 800520e:	b084      	sub	sp, #16
 8005210:	af00      	add	r7, sp, #0
 8005212:	6078      	str	r0, [r7, #4]
  uint32_t tmp, tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	2b00      	cmp	r3, #0
 8005218:	d101      	bne.n	800521e <HAL_LTDC_Init+0x12>
  {
    return HAL_ERROR;
 800521a:	2301      	movs	r3, #1
 800521c:	e0bf      	b.n	800539e <HAL_LTDC_Init+0x192>
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800521e:	687b      	ldr	r3, [r7, #4]
 8005220:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8005224:	b2db      	uxtb	r3, r3
 8005226:	2b00      	cmp	r3, #0
 8005228:	d106      	bne.n	8005238 <HAL_LTDC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hltdc->Lock = HAL_UNLOCKED;
 800522a:	687b      	ldr	r3, [r7, #4]
 800522c:	2200      	movs	r2, #0
 800522e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
    /* Init the low level hardware */
    HAL_LTDC_MspInit(hltdc);
 8005232:	6878      	ldr	r0, [r7, #4]
 8005234:	f7fc fe88 	bl	8001f48 <HAL_LTDC_MspInit>
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005238:	687b      	ldr	r3, [r7, #4]
 800523a:	2202      	movs	r2, #2
 800523c:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005240:	687b      	ldr	r3, [r7, #4]
 8005242:	681b      	ldr	r3, [r3, #0]
 8005244:	699a      	ldr	r2, [r3, #24]
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	681b      	ldr	r3, [r3, #0]
 800524a:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800524e:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005250:	687b      	ldr	r3, [r7, #4]
 8005252:	681b      	ldr	r3, [r3, #0]
 8005254:	6999      	ldr	r1, [r3, #24]
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	685a      	ldr	r2, [r3, #4]
 800525a:	687b      	ldr	r3, [r7, #4]
 800525c:	689b      	ldr	r3, [r3, #8]
 800525e:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005260:	687b      	ldr	r3, [r7, #4]
 8005262:	68db      	ldr	r3, [r3, #12]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005264:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005266:	687b      	ldr	r3, [r7, #4]
 8005268:	691b      	ldr	r3, [r3, #16]
 800526a:	431a      	orrs	r2, r3
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800526c:	687b      	ldr	r3, [r7, #4]
 800526e:	681b      	ldr	r3, [r3, #0]
 8005270:	430a      	orrs	r2, r1
 8005272:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005274:	687b      	ldr	r3, [r7, #4]
 8005276:	681b      	ldr	r3, [r3, #0]
 8005278:	6899      	ldr	r1, [r3, #8]
 800527a:	687b      	ldr	r3, [r7, #4]
 800527c:	681a      	ldr	r2, [r3, #0]
 800527e:	4b4a      	ldr	r3, [pc, #296]	; (80053a8 <HAL_LTDC_Init+0x19c>)
 8005280:	400b      	ands	r3, r1
 8005282:	6093      	str	r3, [r2, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005284:	687b      	ldr	r3, [r7, #4]
 8005286:	695b      	ldr	r3, [r3, #20]
 8005288:	041b      	lsls	r3, r3, #16
 800528a:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800528c:	687b      	ldr	r3, [r7, #4]
 800528e:	681b      	ldr	r3, [r3, #0]
 8005290:	6899      	ldr	r1, [r3, #8]
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	699a      	ldr	r2, [r3, #24]
 8005296:	68fb      	ldr	r3, [r7, #12]
 8005298:	431a      	orrs	r2, r3
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	681b      	ldr	r3, [r3, #0]
 800529e:	430a      	orrs	r2, r1
 80052a0:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	681b      	ldr	r3, [r3, #0]
 80052a6:	68d9      	ldr	r1, [r3, #12]
 80052a8:	687b      	ldr	r3, [r7, #4]
 80052aa:	681a      	ldr	r2, [r3, #0]
 80052ac:	4b3e      	ldr	r3, [pc, #248]	; (80053a8 <HAL_LTDC_Init+0x19c>)
 80052ae:	400b      	ands	r3, r1
 80052b0:	60d3      	str	r3, [r2, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80052b2:	687b      	ldr	r3, [r7, #4]
 80052b4:	69db      	ldr	r3, [r3, #28]
 80052b6:	041b      	lsls	r3, r3, #16
 80052b8:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80052ba:	687b      	ldr	r3, [r7, #4]
 80052bc:	681b      	ldr	r3, [r3, #0]
 80052be:	68d9      	ldr	r1, [r3, #12]
 80052c0:	687b      	ldr	r3, [r7, #4]
 80052c2:	6a1a      	ldr	r2, [r3, #32]
 80052c4:	68fb      	ldr	r3, [r7, #12]
 80052c6:	431a      	orrs	r2, r3
 80052c8:	687b      	ldr	r3, [r7, #4]
 80052ca:	681b      	ldr	r3, [r3, #0]
 80052cc:	430a      	orrs	r2, r1
 80052ce:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80052d0:	687b      	ldr	r3, [r7, #4]
 80052d2:	681b      	ldr	r3, [r3, #0]
 80052d4:	6919      	ldr	r1, [r3, #16]
 80052d6:	687b      	ldr	r3, [r7, #4]
 80052d8:	681a      	ldr	r2, [r3, #0]
 80052da:	4b33      	ldr	r3, [pc, #204]	; (80053a8 <HAL_LTDC_Init+0x19c>)
 80052dc:	400b      	ands	r3, r1
 80052de:	6113      	str	r3, [r2, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052e4:	041b      	lsls	r3, r3, #16
 80052e6:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	681b      	ldr	r3, [r3, #0]
 80052ec:	6919      	ldr	r1, [r3, #16]
 80052ee:	687b      	ldr	r3, [r7, #4]
 80052f0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80052f2:	68fb      	ldr	r3, [r7, #12]
 80052f4:	431a      	orrs	r2, r3
 80052f6:	687b      	ldr	r3, [r7, #4]
 80052f8:	681b      	ldr	r3, [r3, #0]
 80052fa:	430a      	orrs	r2, r1
 80052fc:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	6959      	ldr	r1, [r3, #20]
 8005304:	687b      	ldr	r3, [r7, #4]
 8005306:	681a      	ldr	r2, [r3, #0]
 8005308:	4b27      	ldr	r3, [pc, #156]	; (80053a8 <HAL_LTDC_Init+0x19c>)
 800530a:	400b      	ands	r3, r1
 800530c:	6153      	str	r3, [r2, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800530e:	687b      	ldr	r3, [r7, #4]
 8005310:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005312:	041b      	lsls	r3, r3, #16
 8005314:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005316:	687b      	ldr	r3, [r7, #4]
 8005318:	681b      	ldr	r3, [r3, #0]
 800531a:	6959      	ldr	r1, [r3, #20]
 800531c:	687b      	ldr	r3, [r7, #4]
 800531e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005320:	68fb      	ldr	r3, [r7, #12]
 8005322:	431a      	orrs	r2, r3
 8005324:	687b      	ldr	r3, [r7, #4]
 8005326:	681b      	ldr	r3, [r3, #0]
 8005328:	430a      	orrs	r2, r1
 800532a:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800532c:	687b      	ldr	r3, [r7, #4]
 800532e:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8005332:	021b      	lsls	r3, r3, #8
 8005334:	60fb      	str	r3, [r7, #12]
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 800533c:	041b      	lsls	r3, r3, #16
 800533e:	60bb      	str	r3, [r7, #8]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005340:	687b      	ldr	r3, [r7, #4]
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005346:	687b      	ldr	r3, [r7, #4]
 8005348:	681b      	ldr	r3, [r3, #0]
 800534a:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800534e:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005350:	687b      	ldr	r3, [r7, #4]
 8005352:	681b      	ldr	r3, [r3, #0]
 8005354:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005356:	68ba      	ldr	r2, [r7, #8]
 8005358:	68fb      	ldr	r3, [r7, #12]
 800535a:	4313      	orrs	r3, r2
 800535c:	687a      	ldr	r2, [r7, #4]
 800535e:	f892 2034 	ldrb.w	r2, [r2, #52]	; 0x34
 8005362:	431a      	orrs	r2, r3
 8005364:	687b      	ldr	r3, [r7, #4]
 8005366:	681b      	ldr	r3, [r3, #0]
 8005368:	430a      	orrs	r2, r1
 800536a:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800536c:	687b      	ldr	r3, [r7, #4]
 800536e:	681b      	ldr	r3, [r3, #0]
 8005370:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005372:	687b      	ldr	r3, [r7, #4]
 8005374:	681b      	ldr	r3, [r3, #0]
 8005376:	f042 0206 	orr.w	r2, r2, #6
 800537a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800537c:	687b      	ldr	r3, [r7, #4]
 800537e:	681b      	ldr	r3, [r3, #0]
 8005380:	699a      	ldr	r2, [r3, #24]
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	681b      	ldr	r3, [r3, #0]
 8005386:	f042 0201 	orr.w	r2, r2, #1
 800538a:	619a      	str	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800538c:	687b      	ldr	r3, [r7, #4]
 800538e:	2200      	movs	r2, #0
 8005390:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8005394:	687b      	ldr	r3, [r7, #4]
 8005396:	2201      	movs	r2, #1
 8005398:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  return HAL_OK;
 800539c:	2300      	movs	r3, #0
}
 800539e:	4618      	mov	r0, r3
 80053a0:	3710      	adds	r7, #16
 80053a2:	46bd      	mov	sp, r7
 80053a4:	bd80      	pop	{r7, pc}
 80053a6:	bf00      	nop
 80053a8:	f000f800 	.word	0xf000f800

080053ac <HAL_LTDC_DeInit>:
  *                the configuration information for the LTDC.
  * @retval None
  */

HAL_StatusTypeDef HAL_LTDC_DeInit(LTDC_HandleTypeDef *hltdc)
{
 80053ac:	b580      	push	{r7, lr}
 80053ae:	b082      	sub	sp, #8
 80053b0:	af00      	add	r7, sp, #0
 80053b2:	6078      	str	r0, [r7, #4]
  }
  /* DeInit the low level hardware */
  hltdc->MspDeInitCallback(hltdc);
#else
  /* DeInit the low level hardware */
  HAL_LTDC_MspDeInit(hltdc);
 80053b4:	6878      	ldr	r0, [r7, #4]
 80053b6:	f7fc feb3 	bl	8002120 <HAL_LTDC_MspDeInit>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	2200      	movs	r2, #0
 80053be:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_RESET;
 80053c2:	687b      	ldr	r3, [r7, #4]
 80053c4:	2200      	movs	r2, #0
 80053c6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Release Lock */
  __HAL_UNLOCK(hltdc);
 80053ca:	687b      	ldr	r3, [r7, #4]
 80053cc:	2200      	movs	r2, #0
 80053ce:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 80053d2:	2300      	movs	r3, #0
}
 80053d4:	4618      	mov	r0, r3
 80053d6:	3708      	adds	r7, #8
 80053d8:	46bd      	mov	sp, r7
 80053da:	bd80      	pop	{r7, pc}

080053dc <HAL_LTDC_IRQHandler>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
 80053dc:	b580      	push	{r7, lr}
 80053de:	b084      	sub	sp, #16
 80053e0:	af00      	add	r7, sp, #0
 80053e2:	6078      	str	r0, [r7, #4]
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80053e4:	687b      	ldr	r3, [r7, #4]
 80053e6:	681b      	ldr	r3, [r3, #0]
 80053e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80053ea:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80053ec:	687b      	ldr	r3, [r7, #4]
 80053ee:	681b      	ldr	r3, [r3, #0]
 80053f0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80053f2:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80053f4:	68fb      	ldr	r3, [r7, #12]
 80053f6:	f003 0304 	and.w	r3, r3, #4
 80053fa:	2b00      	cmp	r3, #0
 80053fc:	d023      	beq.n	8005446 <HAL_LTDC_IRQHandler+0x6a>
 80053fe:	68bb      	ldr	r3, [r7, #8]
 8005400:	f003 0304 	and.w	r3, r3, #4
 8005404:	2b00      	cmp	r3, #0
 8005406:	d01e      	beq.n	8005446 <HAL_LTDC_IRQHandler+0x6a>
  {
    /* Disable the transfer Error interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005408:	687b      	ldr	r3, [r7, #4]
 800540a:	681b      	ldr	r3, [r3, #0]
 800540c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800540e:	687b      	ldr	r3, [r7, #4]
 8005410:	681b      	ldr	r3, [r3, #0]
 8005412:	f022 0204 	bic.w	r2, r2, #4
 8005416:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the transfer error flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005418:	687b      	ldr	r3, [r7, #4]
 800541a:	681b      	ldr	r3, [r3, #0]
 800541c:	2204      	movs	r2, #4
 800541e:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8005426:	f043 0201 	orr.w	r2, r3, #1
 800542a:	687b      	ldr	r3, [r7, #4]
 800542c:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005430:	687b      	ldr	r3, [r7, #4]
 8005432:	2204      	movs	r2, #4
 8005434:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8005438:	687b      	ldr	r3, [r7, #4]
 800543a:	2200      	movs	r2, #0
 800543c:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8005440:	6878      	ldr	r0, [r7, #4]
 8005442:	f000 f86f 	bl	8005524 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005446:	68fb      	ldr	r3, [r7, #12]
 8005448:	f003 0302 	and.w	r3, r3, #2
 800544c:	2b00      	cmp	r3, #0
 800544e:	d023      	beq.n	8005498 <HAL_LTDC_IRQHandler+0xbc>
 8005450:	68bb      	ldr	r3, [r7, #8]
 8005452:	f003 0302 	and.w	r3, r3, #2
 8005456:	2b00      	cmp	r3, #0
 8005458:	d01e      	beq.n	8005498 <HAL_LTDC_IRQHandler+0xbc>
  {
    /* Disable the FIFO underrun interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800545a:	687b      	ldr	r3, [r7, #4]
 800545c:	681b      	ldr	r3, [r3, #0]
 800545e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005460:	687b      	ldr	r3, [r7, #4]
 8005462:	681b      	ldr	r3, [r3, #0]
 8005464:	f022 0202 	bic.w	r2, r2, #2
 8005468:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the FIFO underrun flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800546a:	687b      	ldr	r3, [r7, #4]
 800546c:	681b      	ldr	r3, [r3, #0]
 800546e:	2202      	movs	r2, #2
 8005470:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005472:	687b      	ldr	r3, [r7, #4]
 8005474:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8005478:	f043 0202 	orr.w	r2, r3, #2
 800547c:	687b      	ldr	r3, [r7, #4]
 800547e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005482:	687b      	ldr	r3, [r7, #4]
 8005484:	2204      	movs	r2, #4
 8005486:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 800548a:	687b      	ldr	r3, [r7, #4]
 800548c:	2200      	movs	r2, #0
 800548e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8005492:	6878      	ldr	r0, [r7, #4]
 8005494:	f000 f846 	bl	8005524 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005498:	68fb      	ldr	r3, [r7, #12]
 800549a:	f003 0301 	and.w	r3, r3, #1
 800549e:	2b00      	cmp	r3, #0
 80054a0:	d01b      	beq.n	80054da <HAL_LTDC_IRQHandler+0xfe>
 80054a2:	68bb      	ldr	r3, [r7, #8]
 80054a4:	f003 0301 	and.w	r3, r3, #1
 80054a8:	2b00      	cmp	r3, #0
 80054aa:	d016      	beq.n	80054da <HAL_LTDC_IRQHandler+0xfe>
  {
    /* Disable the Line interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80054ac:	687b      	ldr	r3, [r7, #4]
 80054ae:	681b      	ldr	r3, [r3, #0]
 80054b0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80054b2:	687b      	ldr	r3, [r7, #4]
 80054b4:	681b      	ldr	r3, [r3, #0]
 80054b6:	f022 0201 	bic.w	r2, r2, #1
 80054ba:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the Line interrupt flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80054bc:	687b      	ldr	r3, [r7, #4]
 80054be:	681b      	ldr	r3, [r3, #0]
 80054c0:	2201      	movs	r2, #1
 80054c2:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 80054c4:	687b      	ldr	r3, [r7, #4]
 80054c6:	2201      	movs	r2, #1
 80054c8:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80054cc:	687b      	ldr	r3, [r7, #4]
 80054ce:	2200      	movs	r2, #0
 80054d0:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered Line Event callback */
    hltdc->LineEventCallback(hltdc);
#else
    /*Call Legacy Line Event callback */
    HAL_LTDC_LineEventCallback(hltdc);
 80054d4:	6878      	ldr	r0, [r7, #4]
 80054d6:	f006 feb7 	bl	800c248 <HAL_LTDC_LineEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80054da:	68fb      	ldr	r3, [r7, #12]
 80054dc:	f003 0308 	and.w	r3, r3, #8
 80054e0:	2b00      	cmp	r3, #0
 80054e2:	d01b      	beq.n	800551c <HAL_LTDC_IRQHandler+0x140>
 80054e4:	68bb      	ldr	r3, [r7, #8]
 80054e6:	f003 0308 	and.w	r3, r3, #8
 80054ea:	2b00      	cmp	r3, #0
 80054ec:	d016      	beq.n	800551c <HAL_LTDC_IRQHandler+0x140>
  {
    /* Disable the register reload interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80054ee:	687b      	ldr	r3, [r7, #4]
 80054f0:	681b      	ldr	r3, [r3, #0]
 80054f2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80054f4:	687b      	ldr	r3, [r7, #4]
 80054f6:	681b      	ldr	r3, [r3, #0]
 80054f8:	f022 0208 	bic.w	r2, r2, #8
 80054fc:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the register reload flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80054fe:	687b      	ldr	r3, [r7, #4]
 8005500:	681b      	ldr	r3, [r3, #0]
 8005502:	2208      	movs	r2, #8
 8005504:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8005506:	687b      	ldr	r3, [r7, #4]
 8005508:	2201      	movs	r2, #1
 800550a:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	2200      	movs	r2, #0
 8005512:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered reload Event callback */
    hltdc->ReloadEventCallback(hltdc);
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005516:	6878      	ldr	r0, [r7, #4]
 8005518:	f000 f80e 	bl	8005538 <HAL_LTDC_ReloadEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800551c:	bf00      	nop
 800551e:	3710      	adds	r7, #16
 8005520:	46bd      	mov	sp, r7
 8005522:	bd80      	pop	{r7, pc}

08005524 <HAL_LTDC_ErrorCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
{
 8005524:	b480      	push	{r7}
 8005526:	b083      	sub	sp, #12
 8005528:	af00      	add	r7, sp, #0
 800552a:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ErrorCallback could be implemented in the user file
   */
}
 800552c:	bf00      	nop
 800552e:	370c      	adds	r7, #12
 8005530:	46bd      	mov	sp, r7
 8005532:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005536:	4770      	bx	lr

08005538 <HAL_LTDC_ReloadEventCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
{
 8005538:	b480      	push	{r7}
 800553a:	b083      	sub	sp, #12
 800553c:	af00      	add	r7, sp, #0
 800553e:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ReloadEvenCallback could be implemented in the user file
   */
}
 8005540:	bf00      	nop
 8005542:	370c      	adds	r7, #12
 8005544:	46bd      	mov	sp, r7
 8005546:	f85d 7b04 	ldr.w	r7, [sp], #4
 800554a:	4770      	bx	lr

0800554c <HAL_LTDC_ConfigLayer>:
  *                    This parameter can be one of the following values:
  *                    LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 800554c:	b5b0      	push	{r4, r5, r7, lr}
 800554e:	b084      	sub	sp, #16
 8005550:	af00      	add	r7, sp, #0
 8005552:	60f8      	str	r0, [r7, #12]
 8005554:	60b9      	str	r1, [r7, #8]
 8005556:	607a      	str	r2, [r7, #4]
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8005558:	68fb      	ldr	r3, [r7, #12]
 800555a:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 800555e:	2b01      	cmp	r3, #1
 8005560:	d101      	bne.n	8005566 <HAL_LTDC_ConfigLayer+0x1a>
 8005562:	2302      	movs	r3, #2
 8005564:	e02c      	b.n	80055c0 <HAL_LTDC_ConfigLayer+0x74>
 8005566:	68fb      	ldr	r3, [r7, #12]
 8005568:	2201      	movs	r2, #1
 800556a:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800556e:	68fb      	ldr	r3, [r7, #12]
 8005570:	2202      	movs	r2, #2
 8005572:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005576:	68fa      	ldr	r2, [r7, #12]
 8005578:	687b      	ldr	r3, [r7, #4]
 800557a:	2134      	movs	r1, #52	; 0x34
 800557c:	fb01 f303 	mul.w	r3, r1, r3
 8005580:	4413      	add	r3, r2
 8005582:	f103 0238 	add.w	r2, r3, #56	; 0x38
 8005586:	68bb      	ldr	r3, [r7, #8]
 8005588:	4614      	mov	r4, r2
 800558a:	461d      	mov	r5, r3
 800558c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800558e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005590:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005592:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005594:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005596:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005598:	682b      	ldr	r3, [r5, #0]
 800559a:	6023      	str	r3, [r4, #0]

  /* Configure the LTDC Layer */
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800559c:	687a      	ldr	r2, [r7, #4]
 800559e:	68b9      	ldr	r1, [r7, #8]
 80055a0:	68f8      	ldr	r0, [r7, #12]
 80055a2:	f000 f849 	bl	8005638 <LTDC_SetConfig>

  /* Set the Immediate Reload type */
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80055a6:	68fb      	ldr	r3, [r7, #12]
 80055a8:	681b      	ldr	r3, [r3, #0]
 80055aa:	2201      	movs	r2, #1
 80055ac:	625a      	str	r2, [r3, #36]	; 0x24

  /* Initialize the LTDC state*/
  hltdc->State  = HAL_LTDC_STATE_READY;
 80055ae:	68fb      	ldr	r3, [r7, #12]
 80055b0:	2201      	movs	r2, #1
 80055b2:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 80055b6:	68fb      	ldr	r3, [r7, #12]
 80055b8:	2200      	movs	r2, #0
 80055ba:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 80055be:	2300      	movs	r3, #0
}
 80055c0:	4618      	mov	r0, r3
 80055c2:	3710      	adds	r7, #16
 80055c4:	46bd      	mov	sp, r7
 80055c6:	bdb0      	pop	{r4, r5, r7, pc}

080055c8 <HAL_LTDC_ProgramLineEvent>:
  * @param  Line    Line Interrupt Position.
  * @note   User application may resort to HAL_LTDC_LineEventCallback() at line interrupt generation.
  * @retval  HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ProgramLineEvent(LTDC_HandleTypeDef *hltdc, uint32_t Line)
{
 80055c8:	b480      	push	{r7}
 80055ca:	b083      	sub	sp, #12
 80055cc:	af00      	add	r7, sp, #0
 80055ce:	6078      	str	r0, [r7, #4]
 80055d0:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_LTDC_LIPOS(Line));

  /* Process locked */
  __HAL_LOCK(hltdc);
 80055d2:	687b      	ldr	r3, [r7, #4]
 80055d4:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 80055d8:	2b01      	cmp	r3, #1
 80055da:	d101      	bne.n	80055e0 <HAL_LTDC_ProgramLineEvent+0x18>
 80055dc:	2302      	movs	r3, #2
 80055de:	e023      	b.n	8005628 <HAL_LTDC_ProgramLineEvent+0x60>
 80055e0:	687b      	ldr	r3, [r7, #4]
 80055e2:	2201      	movs	r2, #1
 80055e4:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80055e8:	687b      	ldr	r3, [r7, #4]
 80055ea:	2202      	movs	r2, #2
 80055ec:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Disable the Line interrupt */
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80055f0:	687b      	ldr	r3, [r7, #4]
 80055f2:	681b      	ldr	r3, [r3, #0]
 80055f4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80055f6:	687b      	ldr	r3, [r7, #4]
 80055f8:	681b      	ldr	r3, [r3, #0]
 80055fa:	f022 0201 	bic.w	r2, r2, #1
 80055fe:	635a      	str	r2, [r3, #52]	; 0x34

  /* Set the Line Interrupt position */
  LTDC->LIPCR = (uint32_t)Line;
 8005600:	4a0c      	ldr	r2, [pc, #48]	; (8005634 <HAL_LTDC_ProgramLineEvent+0x6c>)
 8005602:	683b      	ldr	r3, [r7, #0]
 8005604:	6413      	str	r3, [r2, #64]	; 0x40

  /* Enable the Line interrupt */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005606:	687b      	ldr	r3, [r7, #4]
 8005608:	681b      	ldr	r3, [r3, #0]
 800560a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800560c:	687b      	ldr	r3, [r7, #4]
 800560e:	681b      	ldr	r3, [r3, #0]
 8005610:	f042 0201 	orr.w	r2, r2, #1
 8005614:	635a      	str	r2, [r3, #52]	; 0x34

  /* Change the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8005616:	687b      	ldr	r3, [r7, #4]
 8005618:	2201      	movs	r2, #1
 800561a:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 800561e:	687b      	ldr	r3, [r7, #4]
 8005620:	2200      	movs	r2, #0
 8005622:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 8005626:	2300      	movs	r3, #0
}
 8005628:	4618      	mov	r0, r3
 800562a:	370c      	adds	r7, #12
 800562c:	46bd      	mov	sp, r7
 800562e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005632:	4770      	bx	lr
 8005634:	40016800 	.word	0x40016800

08005638 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8005638:	b480      	push	{r7}
 800563a:	b089      	sub	sp, #36	; 0x24
 800563c:	af00      	add	r7, sp, #0
 800563e:	60f8      	str	r0, [r7, #12]
 8005640:	60b9      	str	r1, [r7, #8]
 8005642:	607a      	str	r2, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005644:	68bb      	ldr	r3, [r7, #8]
 8005646:	685a      	ldr	r2, [r3, #4]
 8005648:	68fb      	ldr	r3, [r7, #12]
 800564a:	681b      	ldr	r3, [r3, #0]
 800564c:	68db      	ldr	r3, [r3, #12]
 800564e:	0c1b      	lsrs	r3, r3, #16
 8005650:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005654:	4413      	add	r3, r2
 8005656:	041b      	lsls	r3, r3, #16
 8005658:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800565a:	68fb      	ldr	r3, [r7, #12]
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	461a      	mov	r2, r3
 8005660:	687b      	ldr	r3, [r7, #4]
 8005662:	01db      	lsls	r3, r3, #7
 8005664:	4413      	add	r3, r2
 8005666:	3384      	adds	r3, #132	; 0x84
 8005668:	685b      	ldr	r3, [r3, #4]
 800566a:	68fa      	ldr	r2, [r7, #12]
 800566c:	6812      	ldr	r2, [r2, #0]
 800566e:	4611      	mov	r1, r2
 8005670:	687a      	ldr	r2, [r7, #4]
 8005672:	01d2      	lsls	r2, r2, #7
 8005674:	440a      	add	r2, r1
 8005676:	3284      	adds	r2, #132	; 0x84
 8005678:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800567c:	6053      	str	r3, [r2, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800567e:	68bb      	ldr	r3, [r7, #8]
 8005680:	681a      	ldr	r2, [r3, #0]
 8005682:	68fb      	ldr	r3, [r7, #12]
 8005684:	681b      	ldr	r3, [r3, #0]
 8005686:	68db      	ldr	r3, [r3, #12]
 8005688:	0c1b      	lsrs	r3, r3, #16
 800568a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800568e:	4413      	add	r3, r2
 8005690:	1c5a      	adds	r2, r3, #1
 8005692:	68fb      	ldr	r3, [r7, #12]
 8005694:	681b      	ldr	r3, [r3, #0]
 8005696:	4619      	mov	r1, r3
 8005698:	687b      	ldr	r3, [r7, #4]
 800569a:	01db      	lsls	r3, r3, #7
 800569c:	440b      	add	r3, r1
 800569e:	3384      	adds	r3, #132	; 0x84
 80056a0:	4619      	mov	r1, r3
 80056a2:	69fb      	ldr	r3, [r7, #28]
 80056a4:	4313      	orrs	r3, r2
 80056a6:	604b      	str	r3, [r1, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80056a8:	68bb      	ldr	r3, [r7, #8]
 80056aa:	68da      	ldr	r2, [r3, #12]
 80056ac:	68fb      	ldr	r3, [r7, #12]
 80056ae:	681b      	ldr	r3, [r3, #0]
 80056b0:	68db      	ldr	r3, [r3, #12]
 80056b2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80056b6:	4413      	add	r3, r2
 80056b8:	041b      	lsls	r3, r3, #16
 80056ba:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80056bc:	68fb      	ldr	r3, [r7, #12]
 80056be:	681b      	ldr	r3, [r3, #0]
 80056c0:	461a      	mov	r2, r3
 80056c2:	687b      	ldr	r3, [r7, #4]
 80056c4:	01db      	lsls	r3, r3, #7
 80056c6:	4413      	add	r3, r2
 80056c8:	3384      	adds	r3, #132	; 0x84
 80056ca:	689b      	ldr	r3, [r3, #8]
 80056cc:	68fa      	ldr	r2, [r7, #12]
 80056ce:	6812      	ldr	r2, [r2, #0]
 80056d0:	4611      	mov	r1, r2
 80056d2:	687a      	ldr	r2, [r7, #4]
 80056d4:	01d2      	lsls	r2, r2, #7
 80056d6:	440a      	add	r2, r1
 80056d8:	3284      	adds	r2, #132	; 0x84
 80056da:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 80056de:	6093      	str	r3, [r2, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80056e0:	68bb      	ldr	r3, [r7, #8]
 80056e2:	689a      	ldr	r2, [r3, #8]
 80056e4:	68fb      	ldr	r3, [r7, #12]
 80056e6:	681b      	ldr	r3, [r3, #0]
 80056e8:	68db      	ldr	r3, [r3, #12]
 80056ea:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80056ee:	4413      	add	r3, r2
 80056f0:	1c5a      	adds	r2, r3, #1
 80056f2:	68fb      	ldr	r3, [r7, #12]
 80056f4:	681b      	ldr	r3, [r3, #0]
 80056f6:	4619      	mov	r1, r3
 80056f8:	687b      	ldr	r3, [r7, #4]
 80056fa:	01db      	lsls	r3, r3, #7
 80056fc:	440b      	add	r3, r1
 80056fe:	3384      	adds	r3, #132	; 0x84
 8005700:	4619      	mov	r1, r3
 8005702:	69fb      	ldr	r3, [r7, #28]
 8005704:	4313      	orrs	r3, r2
 8005706:	608b      	str	r3, [r1, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005708:	68fb      	ldr	r3, [r7, #12]
 800570a:	681b      	ldr	r3, [r3, #0]
 800570c:	461a      	mov	r2, r3
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	01db      	lsls	r3, r3, #7
 8005712:	4413      	add	r3, r2
 8005714:	3384      	adds	r3, #132	; 0x84
 8005716:	691b      	ldr	r3, [r3, #16]
 8005718:	68fa      	ldr	r2, [r7, #12]
 800571a:	6812      	ldr	r2, [r2, #0]
 800571c:	4611      	mov	r1, r2
 800571e:	687a      	ldr	r2, [r7, #4]
 8005720:	01d2      	lsls	r2, r2, #7
 8005722:	440a      	add	r2, r1
 8005724:	3284      	adds	r2, #132	; 0x84
 8005726:	f023 0307 	bic.w	r3, r3, #7
 800572a:	6113      	str	r3, [r2, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800572c:	68fb      	ldr	r3, [r7, #12]
 800572e:	681b      	ldr	r3, [r3, #0]
 8005730:	461a      	mov	r2, r3
 8005732:	687b      	ldr	r3, [r7, #4]
 8005734:	01db      	lsls	r3, r3, #7
 8005736:	4413      	add	r3, r2
 8005738:	3384      	adds	r3, #132	; 0x84
 800573a:	461a      	mov	r2, r3
 800573c:	68bb      	ldr	r3, [r7, #8]
 800573e:	691b      	ldr	r3, [r3, #16]
 8005740:	6113      	str	r3, [r2, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005742:	68bb      	ldr	r3, [r7, #8]
 8005744:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 8005748:	021b      	lsls	r3, r3, #8
 800574a:	61fb      	str	r3, [r7, #28]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800574c:	68bb      	ldr	r3, [r7, #8]
 800574e:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 8005752:	041b      	lsls	r3, r3, #16
 8005754:	61bb      	str	r3, [r7, #24]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005756:	68bb      	ldr	r3, [r7, #8]
 8005758:	699b      	ldr	r3, [r3, #24]
 800575a:	061b      	lsls	r3, r3, #24
 800575c:	617b      	str	r3, [r7, #20]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800575e:	68fb      	ldr	r3, [r7, #12]
 8005760:	681b      	ldr	r3, [r3, #0]
 8005762:	461a      	mov	r2, r3
 8005764:	687b      	ldr	r3, [r7, #4]
 8005766:	01db      	lsls	r3, r3, #7
 8005768:	4413      	add	r3, r2
 800576a:	3384      	adds	r3, #132	; 0x84
 800576c:	699b      	ldr	r3, [r3, #24]
 800576e:	68fb      	ldr	r3, [r7, #12]
 8005770:	681b      	ldr	r3, [r3, #0]
 8005772:	461a      	mov	r2, r3
 8005774:	687b      	ldr	r3, [r7, #4]
 8005776:	01db      	lsls	r3, r3, #7
 8005778:	4413      	add	r3, r2
 800577a:	3384      	adds	r3, #132	; 0x84
 800577c:	461a      	mov	r2, r3
 800577e:	2300      	movs	r3, #0
 8005780:	6193      	str	r3, [r2, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005782:	68bb      	ldr	r3, [r7, #8]
 8005784:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8005788:	461a      	mov	r2, r3
 800578a:	69fb      	ldr	r3, [r7, #28]
 800578c:	431a      	orrs	r2, r3
 800578e:	69bb      	ldr	r3, [r7, #24]
 8005790:	431a      	orrs	r2, r3
 8005792:	68fb      	ldr	r3, [r7, #12]
 8005794:	681b      	ldr	r3, [r3, #0]
 8005796:	4619      	mov	r1, r3
 8005798:	687b      	ldr	r3, [r7, #4]
 800579a:	01db      	lsls	r3, r3, #7
 800579c:	440b      	add	r3, r1
 800579e:	3384      	adds	r3, #132	; 0x84
 80057a0:	4619      	mov	r1, r3
 80057a2:	697b      	ldr	r3, [r7, #20]
 80057a4:	4313      	orrs	r3, r2
 80057a6:	618b      	str	r3, [r1, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80057a8:	68fb      	ldr	r3, [r7, #12]
 80057aa:	681b      	ldr	r3, [r3, #0]
 80057ac:	461a      	mov	r2, r3
 80057ae:	687b      	ldr	r3, [r7, #4]
 80057b0:	01db      	lsls	r3, r3, #7
 80057b2:	4413      	add	r3, r2
 80057b4:	3384      	adds	r3, #132	; 0x84
 80057b6:	695b      	ldr	r3, [r3, #20]
 80057b8:	68fa      	ldr	r2, [r7, #12]
 80057ba:	6812      	ldr	r2, [r2, #0]
 80057bc:	4611      	mov	r1, r2
 80057be:	687a      	ldr	r2, [r7, #4]
 80057c0:	01d2      	lsls	r2, r2, #7
 80057c2:	440a      	add	r2, r1
 80057c4:	3284      	adds	r2, #132	; 0x84
 80057c6:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80057ca:	6153      	str	r3, [r2, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80057cc:	68fb      	ldr	r3, [r7, #12]
 80057ce:	681b      	ldr	r3, [r3, #0]
 80057d0:	461a      	mov	r2, r3
 80057d2:	687b      	ldr	r3, [r7, #4]
 80057d4:	01db      	lsls	r3, r3, #7
 80057d6:	4413      	add	r3, r2
 80057d8:	3384      	adds	r3, #132	; 0x84
 80057da:	461a      	mov	r2, r3
 80057dc:	68bb      	ldr	r3, [r7, #8]
 80057de:	695b      	ldr	r3, [r3, #20]
 80057e0:	6153      	str	r3, [r2, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80057e2:	68fb      	ldr	r3, [r7, #12]
 80057e4:	681b      	ldr	r3, [r3, #0]
 80057e6:	461a      	mov	r2, r3
 80057e8:	687b      	ldr	r3, [r7, #4]
 80057ea:	01db      	lsls	r3, r3, #7
 80057ec:	4413      	add	r3, r2
 80057ee:	3384      	adds	r3, #132	; 0x84
 80057f0:	69db      	ldr	r3, [r3, #28]
 80057f2:	68fa      	ldr	r2, [r7, #12]
 80057f4:	6812      	ldr	r2, [r2, #0]
 80057f6:	4611      	mov	r1, r2
 80057f8:	687a      	ldr	r2, [r7, #4]
 80057fa:	01d2      	lsls	r2, r2, #7
 80057fc:	440a      	add	r2, r1
 80057fe:	3284      	adds	r2, #132	; 0x84
 8005800:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8005804:	f023 0307 	bic.w	r3, r3, #7
 8005808:	61d3      	str	r3, [r2, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800580a:	68bb      	ldr	r3, [r7, #8]
 800580c:	69da      	ldr	r2, [r3, #28]
 800580e:	68bb      	ldr	r3, [r7, #8]
 8005810:	6a1b      	ldr	r3, [r3, #32]
 8005812:	68f9      	ldr	r1, [r7, #12]
 8005814:	6809      	ldr	r1, [r1, #0]
 8005816:	4608      	mov	r0, r1
 8005818:	6879      	ldr	r1, [r7, #4]
 800581a:	01c9      	lsls	r1, r1, #7
 800581c:	4401      	add	r1, r0
 800581e:	3184      	adds	r1, #132	; 0x84
 8005820:	4313      	orrs	r3, r2
 8005822:	61cb      	str	r3, [r1, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005824:	68fb      	ldr	r3, [r7, #12]
 8005826:	681b      	ldr	r3, [r3, #0]
 8005828:	461a      	mov	r2, r3
 800582a:	687b      	ldr	r3, [r7, #4]
 800582c:	01db      	lsls	r3, r3, #7
 800582e:	4413      	add	r3, r2
 8005830:	3384      	adds	r3, #132	; 0x84
 8005832:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005834:	68fb      	ldr	r3, [r7, #12]
 8005836:	681b      	ldr	r3, [r3, #0]
 8005838:	461a      	mov	r2, r3
 800583a:	687b      	ldr	r3, [r7, #4]
 800583c:	01db      	lsls	r3, r3, #7
 800583e:	4413      	add	r3, r2
 8005840:	3384      	adds	r3, #132	; 0x84
 8005842:	461a      	mov	r2, r3
 8005844:	2300      	movs	r3, #0
 8005846:	6293      	str	r3, [r2, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005848:	68fb      	ldr	r3, [r7, #12]
 800584a:	681b      	ldr	r3, [r3, #0]
 800584c:	461a      	mov	r2, r3
 800584e:	687b      	ldr	r3, [r7, #4]
 8005850:	01db      	lsls	r3, r3, #7
 8005852:	4413      	add	r3, r2
 8005854:	3384      	adds	r3, #132	; 0x84
 8005856:	461a      	mov	r2, r3
 8005858:	68bb      	ldr	r3, [r7, #8]
 800585a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800585c:	6293      	str	r3, [r2, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800585e:	68bb      	ldr	r3, [r7, #8]
 8005860:	691b      	ldr	r3, [r3, #16]
 8005862:	2b00      	cmp	r3, #0
 8005864:	d102      	bne.n	800586c <LTDC_SetConfig+0x234>
  {
    tmp = 4U;
 8005866:	2304      	movs	r3, #4
 8005868:	61fb      	str	r3, [r7, #28]
 800586a:	e01b      	b.n	80058a4 <LTDC_SetConfig+0x26c>
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800586c:	68bb      	ldr	r3, [r7, #8]
 800586e:	691b      	ldr	r3, [r3, #16]
 8005870:	2b01      	cmp	r3, #1
 8005872:	d102      	bne.n	800587a <LTDC_SetConfig+0x242>
  {
    tmp = 3U;
 8005874:	2303      	movs	r3, #3
 8005876:	61fb      	str	r3, [r7, #28]
 8005878:	e014      	b.n	80058a4 <LTDC_SetConfig+0x26c>
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800587a:	68bb      	ldr	r3, [r7, #8]
 800587c:	691b      	ldr	r3, [r3, #16]
 800587e:	2b04      	cmp	r3, #4
 8005880:	d00b      	beq.n	800589a <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8005882:	68bb      	ldr	r3, [r7, #8]
 8005884:	691b      	ldr	r3, [r3, #16]
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005886:	2b02      	cmp	r3, #2
 8005888:	d007      	beq.n	800589a <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 800588a:	68bb      	ldr	r3, [r7, #8]
 800588c:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 800588e:	2b03      	cmp	r3, #3
 8005890:	d003      	beq.n	800589a <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
 8005892:	68bb      	ldr	r3, [r7, #8]
 8005894:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8005896:	2b07      	cmp	r3, #7
 8005898:	d102      	bne.n	80058a0 <LTDC_SetConfig+0x268>
  {
    tmp = 2U;
 800589a:	2302      	movs	r3, #2
 800589c:	61fb      	str	r3, [r7, #28]
 800589e:	e001      	b.n	80058a4 <LTDC_SetConfig+0x26c>
  }
  else
  {
    tmp = 1U;
 80058a0:	2301      	movs	r3, #1
 80058a2:	61fb      	str	r3, [r7, #28]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80058a4:	68fb      	ldr	r3, [r7, #12]
 80058a6:	681b      	ldr	r3, [r3, #0]
 80058a8:	461a      	mov	r2, r3
 80058aa:	687b      	ldr	r3, [r7, #4]
 80058ac:	01db      	lsls	r3, r3, #7
 80058ae:	4413      	add	r3, r2
 80058b0:	3384      	adds	r3, #132	; 0x84
 80058b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80058b4:	68fa      	ldr	r2, [r7, #12]
 80058b6:	6812      	ldr	r2, [r2, #0]
 80058b8:	4611      	mov	r1, r2
 80058ba:	687a      	ldr	r2, [r7, #4]
 80058bc:	01d2      	lsls	r2, r2, #7
 80058be:	440a      	add	r2, r1
 80058c0:	3284      	adds	r2, #132	; 0x84
 80058c2:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 80058c6:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80058c8:	68bb      	ldr	r3, [r7, #8]
 80058ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80058cc:	69fa      	ldr	r2, [r7, #28]
 80058ce:	fb02 f303 	mul.w	r3, r2, r3
 80058d2:	041a      	lsls	r2, r3, #16
 80058d4:	68bb      	ldr	r3, [r7, #8]
 80058d6:	6859      	ldr	r1, [r3, #4]
 80058d8:	68bb      	ldr	r3, [r7, #8]
 80058da:	681b      	ldr	r3, [r3, #0]
 80058dc:	1acb      	subs	r3, r1, r3
 80058de:	69f9      	ldr	r1, [r7, #28]
 80058e0:	fb01 f303 	mul.w	r3, r1, r3
 80058e4:	3303      	adds	r3, #3
 80058e6:	68f9      	ldr	r1, [r7, #12]
 80058e8:	6809      	ldr	r1, [r1, #0]
 80058ea:	4608      	mov	r0, r1
 80058ec:	6879      	ldr	r1, [r7, #4]
 80058ee:	01c9      	lsls	r1, r1, #7
 80058f0:	4401      	add	r1, r0
 80058f2:	3184      	adds	r1, #132	; 0x84
 80058f4:	4313      	orrs	r3, r2
 80058f6:	62cb      	str	r3, [r1, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80058f8:	68fb      	ldr	r3, [r7, #12]
 80058fa:	681b      	ldr	r3, [r3, #0]
 80058fc:	461a      	mov	r2, r3
 80058fe:	687b      	ldr	r3, [r7, #4]
 8005900:	01db      	lsls	r3, r3, #7
 8005902:	4413      	add	r3, r2
 8005904:	3384      	adds	r3, #132	; 0x84
 8005906:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005908:	68fa      	ldr	r2, [r7, #12]
 800590a:	6812      	ldr	r2, [r2, #0]
 800590c:	4611      	mov	r1, r2
 800590e:	687a      	ldr	r2, [r7, #4]
 8005910:	01d2      	lsls	r2, r2, #7
 8005912:	440a      	add	r2, r1
 8005914:	3284      	adds	r2, #132	; 0x84
 8005916:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800591a:	f023 0307 	bic.w	r3, r3, #7
 800591e:	6313      	str	r3, [r2, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005920:	68fb      	ldr	r3, [r7, #12]
 8005922:	681b      	ldr	r3, [r3, #0]
 8005924:	461a      	mov	r2, r3
 8005926:	687b      	ldr	r3, [r7, #4]
 8005928:	01db      	lsls	r3, r3, #7
 800592a:	4413      	add	r3, r2
 800592c:	3384      	adds	r3, #132	; 0x84
 800592e:	461a      	mov	r2, r3
 8005930:	68bb      	ldr	r3, [r7, #8]
 8005932:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005934:	6313      	str	r3, [r2, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005936:	68fb      	ldr	r3, [r7, #12]
 8005938:	681b      	ldr	r3, [r3, #0]
 800593a:	461a      	mov	r2, r3
 800593c:	687b      	ldr	r3, [r7, #4]
 800593e:	01db      	lsls	r3, r3, #7
 8005940:	4413      	add	r3, r2
 8005942:	3384      	adds	r3, #132	; 0x84
 8005944:	681b      	ldr	r3, [r3, #0]
 8005946:	68fa      	ldr	r2, [r7, #12]
 8005948:	6812      	ldr	r2, [r2, #0]
 800594a:	4611      	mov	r1, r2
 800594c:	687a      	ldr	r2, [r7, #4]
 800594e:	01d2      	lsls	r2, r2, #7
 8005950:	440a      	add	r2, r1
 8005952:	3284      	adds	r2, #132	; 0x84
 8005954:	f043 0301 	orr.w	r3, r3, #1
 8005958:	6013      	str	r3, [r2, #0]
}
 800595a:	bf00      	nop
 800595c:	3724      	adds	r7, #36	; 0x24
 800595e:	46bd      	mov	sp, r7
 8005960:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005964:	4770      	bx	lr
	...

08005968 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005968:	b580      	push	{r7, lr}
 800596a:	b086      	sub	sp, #24
 800596c:	af00      	add	r7, sp, #0
 800596e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8005970:	687b      	ldr	r3, [r7, #4]
 8005972:	2b00      	cmp	r3, #0
 8005974:	d101      	bne.n	800597a <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8005976:	2301      	movs	r3, #1
 8005978:	e25b      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800597a:	687b      	ldr	r3, [r7, #4]
 800597c:	681b      	ldr	r3, [r3, #0]
 800597e:	f003 0301 	and.w	r3, r3, #1
 8005982:	2b00      	cmp	r3, #0
 8005984:	d075      	beq.n	8005a72 <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8005986:	4ba3      	ldr	r3, [pc, #652]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005988:	689b      	ldr	r3, [r3, #8]
 800598a:	f003 030c 	and.w	r3, r3, #12
 800598e:	2b04      	cmp	r3, #4
 8005990:	d00c      	beq.n	80059ac <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005992:	4ba0      	ldr	r3, [pc, #640]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005994:	689b      	ldr	r3, [r3, #8]
 8005996:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800599a:	2b08      	cmp	r3, #8
 800599c:	d112      	bne.n	80059c4 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800599e:	4b9d      	ldr	r3, [pc, #628]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 80059a0:	685b      	ldr	r3, [r3, #4]
 80059a2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80059a6:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80059aa:	d10b      	bne.n	80059c4 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80059ac:	4b99      	ldr	r3, [pc, #612]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 80059ae:	681b      	ldr	r3, [r3, #0]
 80059b0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80059b4:	2b00      	cmp	r3, #0
 80059b6:	d05b      	beq.n	8005a70 <HAL_RCC_OscConfig+0x108>
 80059b8:	687b      	ldr	r3, [r7, #4]
 80059ba:	685b      	ldr	r3, [r3, #4]
 80059bc:	2b00      	cmp	r3, #0
 80059be:	d157      	bne.n	8005a70 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 80059c0:	2301      	movs	r3, #1
 80059c2:	e236      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	685b      	ldr	r3, [r3, #4]
 80059c8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80059cc:	d106      	bne.n	80059dc <HAL_RCC_OscConfig+0x74>
 80059ce:	4b91      	ldr	r3, [pc, #580]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 80059d0:	681b      	ldr	r3, [r3, #0]
 80059d2:	4a90      	ldr	r2, [pc, #576]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 80059d4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80059d8:	6013      	str	r3, [r2, #0]
 80059da:	e01d      	b.n	8005a18 <HAL_RCC_OscConfig+0xb0>
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	685b      	ldr	r3, [r3, #4]
 80059e0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80059e4:	d10c      	bne.n	8005a00 <HAL_RCC_OscConfig+0x98>
 80059e6:	4b8b      	ldr	r3, [pc, #556]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 80059e8:	681b      	ldr	r3, [r3, #0]
 80059ea:	4a8a      	ldr	r2, [pc, #552]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 80059ec:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80059f0:	6013      	str	r3, [r2, #0]
 80059f2:	4b88      	ldr	r3, [pc, #544]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	4a87      	ldr	r2, [pc, #540]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 80059f8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80059fc:	6013      	str	r3, [r2, #0]
 80059fe:	e00b      	b.n	8005a18 <HAL_RCC_OscConfig+0xb0>
 8005a00:	4b84      	ldr	r3, [pc, #528]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005a02:	681b      	ldr	r3, [r3, #0]
 8005a04:	4a83      	ldr	r2, [pc, #524]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005a06:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005a0a:	6013      	str	r3, [r2, #0]
 8005a0c:	4b81      	ldr	r3, [pc, #516]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005a0e:	681b      	ldr	r3, [r3, #0]
 8005a10:	4a80      	ldr	r2, [pc, #512]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005a12:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005a16:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005a18:	687b      	ldr	r3, [r7, #4]
 8005a1a:	685b      	ldr	r3, [r3, #4]
 8005a1c:	2b00      	cmp	r3, #0
 8005a1e:	d013      	beq.n	8005a48 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005a20:	f7fd fbf0 	bl	8003204 <HAL_GetTick>
 8005a24:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005a26:	e008      	b.n	8005a3a <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005a28:	f7fd fbec 	bl	8003204 <HAL_GetTick>
 8005a2c:	4602      	mov	r2, r0
 8005a2e:	693b      	ldr	r3, [r7, #16]
 8005a30:	1ad3      	subs	r3, r2, r3
 8005a32:	2b64      	cmp	r3, #100	; 0x64
 8005a34:	d901      	bls.n	8005a3a <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8005a36:	2303      	movs	r3, #3
 8005a38:	e1fb      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005a3a:	4b76      	ldr	r3, [pc, #472]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005a3c:	681b      	ldr	r3, [r3, #0]
 8005a3e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005a42:	2b00      	cmp	r3, #0
 8005a44:	d0f0      	beq.n	8005a28 <HAL_RCC_OscConfig+0xc0>
 8005a46:	e014      	b.n	8005a72 <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005a48:	f7fd fbdc 	bl	8003204 <HAL_GetTick>
 8005a4c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005a4e:	e008      	b.n	8005a62 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005a50:	f7fd fbd8 	bl	8003204 <HAL_GetTick>
 8005a54:	4602      	mov	r2, r0
 8005a56:	693b      	ldr	r3, [r7, #16]
 8005a58:	1ad3      	subs	r3, r2, r3
 8005a5a:	2b64      	cmp	r3, #100	; 0x64
 8005a5c:	d901      	bls.n	8005a62 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8005a5e:	2303      	movs	r3, #3
 8005a60:	e1e7      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005a62:	4b6c      	ldr	r3, [pc, #432]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005a64:	681b      	ldr	r3, [r3, #0]
 8005a66:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005a6a:	2b00      	cmp	r3, #0
 8005a6c:	d1f0      	bne.n	8005a50 <HAL_RCC_OscConfig+0xe8>
 8005a6e:	e000      	b.n	8005a72 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005a70:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005a72:	687b      	ldr	r3, [r7, #4]
 8005a74:	681b      	ldr	r3, [r3, #0]
 8005a76:	f003 0302 	and.w	r3, r3, #2
 8005a7a:	2b00      	cmp	r3, #0
 8005a7c:	d063      	beq.n	8005b46 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005a7e:	4b65      	ldr	r3, [pc, #404]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005a80:	689b      	ldr	r3, [r3, #8]
 8005a82:	f003 030c 	and.w	r3, r3, #12
 8005a86:	2b00      	cmp	r3, #0
 8005a88:	d00b      	beq.n	8005aa2 <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005a8a:	4b62      	ldr	r3, [pc, #392]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005a8c:	689b      	ldr	r3, [r3, #8]
 8005a8e:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005a92:	2b08      	cmp	r3, #8
 8005a94:	d11c      	bne.n	8005ad0 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005a96:	4b5f      	ldr	r3, [pc, #380]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005a98:	685b      	ldr	r3, [r3, #4]
 8005a9a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005a9e:	2b00      	cmp	r3, #0
 8005aa0:	d116      	bne.n	8005ad0 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005aa2:	4b5c      	ldr	r3, [pc, #368]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005aa4:	681b      	ldr	r3, [r3, #0]
 8005aa6:	f003 0302 	and.w	r3, r3, #2
 8005aaa:	2b00      	cmp	r3, #0
 8005aac:	d005      	beq.n	8005aba <HAL_RCC_OscConfig+0x152>
 8005aae:	687b      	ldr	r3, [r7, #4]
 8005ab0:	68db      	ldr	r3, [r3, #12]
 8005ab2:	2b01      	cmp	r3, #1
 8005ab4:	d001      	beq.n	8005aba <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8005ab6:	2301      	movs	r3, #1
 8005ab8:	e1bb      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005aba:	4b56      	ldr	r3, [pc, #344]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005abc:	681b      	ldr	r3, [r3, #0]
 8005abe:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005ac2:	687b      	ldr	r3, [r7, #4]
 8005ac4:	691b      	ldr	r3, [r3, #16]
 8005ac6:	00db      	lsls	r3, r3, #3
 8005ac8:	4952      	ldr	r1, [pc, #328]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005aca:	4313      	orrs	r3, r2
 8005acc:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005ace:	e03a      	b.n	8005b46 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8005ad0:	687b      	ldr	r3, [r7, #4]
 8005ad2:	68db      	ldr	r3, [r3, #12]
 8005ad4:	2b00      	cmp	r3, #0
 8005ad6:	d020      	beq.n	8005b1a <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8005ad8:	4b4f      	ldr	r3, [pc, #316]	; (8005c18 <HAL_RCC_OscConfig+0x2b0>)
 8005ada:	2201      	movs	r2, #1
 8005adc:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005ade:	f7fd fb91 	bl	8003204 <HAL_GetTick>
 8005ae2:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005ae4:	e008      	b.n	8005af8 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005ae6:	f7fd fb8d 	bl	8003204 <HAL_GetTick>
 8005aea:	4602      	mov	r2, r0
 8005aec:	693b      	ldr	r3, [r7, #16]
 8005aee:	1ad3      	subs	r3, r2, r3
 8005af0:	2b02      	cmp	r3, #2
 8005af2:	d901      	bls.n	8005af8 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8005af4:	2303      	movs	r3, #3
 8005af6:	e19c      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005af8:	4b46      	ldr	r3, [pc, #280]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005afa:	681b      	ldr	r3, [r3, #0]
 8005afc:	f003 0302 	and.w	r3, r3, #2
 8005b00:	2b00      	cmp	r3, #0
 8005b02:	d0f0      	beq.n	8005ae6 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005b04:	4b43      	ldr	r3, [pc, #268]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005b06:	681b      	ldr	r3, [r3, #0]
 8005b08:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005b0c:	687b      	ldr	r3, [r7, #4]
 8005b0e:	691b      	ldr	r3, [r3, #16]
 8005b10:	00db      	lsls	r3, r3, #3
 8005b12:	4940      	ldr	r1, [pc, #256]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005b14:	4313      	orrs	r3, r2
 8005b16:	600b      	str	r3, [r1, #0]
 8005b18:	e015      	b.n	8005b46 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8005b1a:	4b3f      	ldr	r3, [pc, #252]	; (8005c18 <HAL_RCC_OscConfig+0x2b0>)
 8005b1c:	2200      	movs	r2, #0
 8005b1e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005b20:	f7fd fb70 	bl	8003204 <HAL_GetTick>
 8005b24:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005b26:	e008      	b.n	8005b3a <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005b28:	f7fd fb6c 	bl	8003204 <HAL_GetTick>
 8005b2c:	4602      	mov	r2, r0
 8005b2e:	693b      	ldr	r3, [r7, #16]
 8005b30:	1ad3      	subs	r3, r2, r3
 8005b32:	2b02      	cmp	r3, #2
 8005b34:	d901      	bls.n	8005b3a <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8005b36:	2303      	movs	r3, #3
 8005b38:	e17b      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005b3a:	4b36      	ldr	r3, [pc, #216]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005b3c:	681b      	ldr	r3, [r3, #0]
 8005b3e:	f003 0302 	and.w	r3, r3, #2
 8005b42:	2b00      	cmp	r3, #0
 8005b44:	d1f0      	bne.n	8005b28 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005b46:	687b      	ldr	r3, [r7, #4]
 8005b48:	681b      	ldr	r3, [r3, #0]
 8005b4a:	f003 0308 	and.w	r3, r3, #8
 8005b4e:	2b00      	cmp	r3, #0
 8005b50:	d030      	beq.n	8005bb4 <HAL_RCC_OscConfig+0x24c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	695b      	ldr	r3, [r3, #20]
 8005b56:	2b00      	cmp	r3, #0
 8005b58:	d016      	beq.n	8005b88 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8005b5a:	4b30      	ldr	r3, [pc, #192]	; (8005c1c <HAL_RCC_OscConfig+0x2b4>)
 8005b5c:	2201      	movs	r2, #1
 8005b5e:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005b60:	f7fd fb50 	bl	8003204 <HAL_GetTick>
 8005b64:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005b66:	e008      	b.n	8005b7a <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005b68:	f7fd fb4c 	bl	8003204 <HAL_GetTick>
 8005b6c:	4602      	mov	r2, r0
 8005b6e:	693b      	ldr	r3, [r7, #16]
 8005b70:	1ad3      	subs	r3, r2, r3
 8005b72:	2b02      	cmp	r3, #2
 8005b74:	d901      	bls.n	8005b7a <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8005b76:	2303      	movs	r3, #3
 8005b78:	e15b      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005b7a:	4b26      	ldr	r3, [pc, #152]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005b7c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005b7e:	f003 0302 	and.w	r3, r3, #2
 8005b82:	2b00      	cmp	r3, #0
 8005b84:	d0f0      	beq.n	8005b68 <HAL_RCC_OscConfig+0x200>
 8005b86:	e015      	b.n	8005bb4 <HAL_RCC_OscConfig+0x24c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8005b88:	4b24      	ldr	r3, [pc, #144]	; (8005c1c <HAL_RCC_OscConfig+0x2b4>)
 8005b8a:	2200      	movs	r2, #0
 8005b8c:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8005b8e:	f7fd fb39 	bl	8003204 <HAL_GetTick>
 8005b92:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005b94:	e008      	b.n	8005ba8 <HAL_RCC_OscConfig+0x240>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005b96:	f7fd fb35 	bl	8003204 <HAL_GetTick>
 8005b9a:	4602      	mov	r2, r0
 8005b9c:	693b      	ldr	r3, [r7, #16]
 8005b9e:	1ad3      	subs	r3, r2, r3
 8005ba0:	2b02      	cmp	r3, #2
 8005ba2:	d901      	bls.n	8005ba8 <HAL_RCC_OscConfig+0x240>
        {
          return HAL_TIMEOUT;
 8005ba4:	2303      	movs	r3, #3
 8005ba6:	e144      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005ba8:	4b1a      	ldr	r3, [pc, #104]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005baa:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005bac:	f003 0302 	and.w	r3, r3, #2
 8005bb0:	2b00      	cmp	r3, #0
 8005bb2:	d1f0      	bne.n	8005b96 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005bb4:	687b      	ldr	r3, [r7, #4]
 8005bb6:	681b      	ldr	r3, [r3, #0]
 8005bb8:	f003 0304 	and.w	r3, r3, #4
 8005bbc:	2b00      	cmp	r3, #0
 8005bbe:	f000 80a0 	beq.w	8005d02 <HAL_RCC_OscConfig+0x39a>
  {
    FlagStatus       pwrclkchanged = RESET;
 8005bc2:	2300      	movs	r3, #0
 8005bc4:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005bc6:	4b13      	ldr	r3, [pc, #76]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005bc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005bca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005bce:	2b00      	cmp	r3, #0
 8005bd0:	d10f      	bne.n	8005bf2 <HAL_RCC_OscConfig+0x28a>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8005bd2:	2300      	movs	r3, #0
 8005bd4:	60bb      	str	r3, [r7, #8]
 8005bd6:	4b0f      	ldr	r3, [pc, #60]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005bd8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005bda:	4a0e      	ldr	r2, [pc, #56]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005bdc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005be0:	6413      	str	r3, [r2, #64]	; 0x40
 8005be2:	4b0c      	ldr	r3, [pc, #48]	; (8005c14 <HAL_RCC_OscConfig+0x2ac>)
 8005be4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005be6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005bea:	60bb      	str	r3, [r7, #8]
 8005bec:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8005bee:	2301      	movs	r3, #1
 8005bf0:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005bf2:	4b0b      	ldr	r3, [pc, #44]	; (8005c20 <HAL_RCC_OscConfig+0x2b8>)
 8005bf4:	681b      	ldr	r3, [r3, #0]
 8005bf6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005bfa:	2b00      	cmp	r3, #0
 8005bfc:	d121      	bne.n	8005c42 <HAL_RCC_OscConfig+0x2da>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005bfe:	4b08      	ldr	r3, [pc, #32]	; (8005c20 <HAL_RCC_OscConfig+0x2b8>)
 8005c00:	681b      	ldr	r3, [r3, #0]
 8005c02:	4a07      	ldr	r2, [pc, #28]	; (8005c20 <HAL_RCC_OscConfig+0x2b8>)
 8005c04:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005c08:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8005c0a:	f7fd fafb 	bl	8003204 <HAL_GetTick>
 8005c0e:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005c10:	e011      	b.n	8005c36 <HAL_RCC_OscConfig+0x2ce>
 8005c12:	bf00      	nop
 8005c14:	40023800 	.word	0x40023800
 8005c18:	42470000 	.word	0x42470000
 8005c1c:	42470e80 	.word	0x42470e80
 8005c20:	40007000 	.word	0x40007000
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005c24:	f7fd faee 	bl	8003204 <HAL_GetTick>
 8005c28:	4602      	mov	r2, r0
 8005c2a:	693b      	ldr	r3, [r7, #16]
 8005c2c:	1ad3      	subs	r3, r2, r3
 8005c2e:	2b02      	cmp	r3, #2
 8005c30:	d901      	bls.n	8005c36 <HAL_RCC_OscConfig+0x2ce>
        {
          return HAL_TIMEOUT;
 8005c32:	2303      	movs	r3, #3
 8005c34:	e0fd      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005c36:	4b81      	ldr	r3, [pc, #516]	; (8005e3c <HAL_RCC_OscConfig+0x4d4>)
 8005c38:	681b      	ldr	r3, [r3, #0]
 8005c3a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005c3e:	2b00      	cmp	r3, #0
 8005c40:	d0f0      	beq.n	8005c24 <HAL_RCC_OscConfig+0x2bc>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005c42:	687b      	ldr	r3, [r7, #4]
 8005c44:	689b      	ldr	r3, [r3, #8]
 8005c46:	2b01      	cmp	r3, #1
 8005c48:	d106      	bne.n	8005c58 <HAL_RCC_OscConfig+0x2f0>
 8005c4a:	4b7d      	ldr	r3, [pc, #500]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005c4c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005c4e:	4a7c      	ldr	r2, [pc, #496]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005c50:	f043 0301 	orr.w	r3, r3, #1
 8005c54:	6713      	str	r3, [r2, #112]	; 0x70
 8005c56:	e01c      	b.n	8005c92 <HAL_RCC_OscConfig+0x32a>
 8005c58:	687b      	ldr	r3, [r7, #4]
 8005c5a:	689b      	ldr	r3, [r3, #8]
 8005c5c:	2b05      	cmp	r3, #5
 8005c5e:	d10c      	bne.n	8005c7a <HAL_RCC_OscConfig+0x312>
 8005c60:	4b77      	ldr	r3, [pc, #476]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005c62:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005c64:	4a76      	ldr	r2, [pc, #472]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005c66:	f043 0304 	orr.w	r3, r3, #4
 8005c6a:	6713      	str	r3, [r2, #112]	; 0x70
 8005c6c:	4b74      	ldr	r3, [pc, #464]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005c6e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005c70:	4a73      	ldr	r2, [pc, #460]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005c72:	f043 0301 	orr.w	r3, r3, #1
 8005c76:	6713      	str	r3, [r2, #112]	; 0x70
 8005c78:	e00b      	b.n	8005c92 <HAL_RCC_OscConfig+0x32a>
 8005c7a:	4b71      	ldr	r3, [pc, #452]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005c7c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005c7e:	4a70      	ldr	r2, [pc, #448]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005c80:	f023 0301 	bic.w	r3, r3, #1
 8005c84:	6713      	str	r3, [r2, #112]	; 0x70
 8005c86:	4b6e      	ldr	r3, [pc, #440]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005c88:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005c8a:	4a6d      	ldr	r2, [pc, #436]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005c8c:	f023 0304 	bic.w	r3, r3, #4
 8005c90:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005c92:	687b      	ldr	r3, [r7, #4]
 8005c94:	689b      	ldr	r3, [r3, #8]
 8005c96:	2b00      	cmp	r3, #0
 8005c98:	d015      	beq.n	8005cc6 <HAL_RCC_OscConfig+0x35e>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005c9a:	f7fd fab3 	bl	8003204 <HAL_GetTick>
 8005c9e:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005ca0:	e00a      	b.n	8005cb8 <HAL_RCC_OscConfig+0x350>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005ca2:	f7fd faaf 	bl	8003204 <HAL_GetTick>
 8005ca6:	4602      	mov	r2, r0
 8005ca8:	693b      	ldr	r3, [r7, #16]
 8005caa:	1ad3      	subs	r3, r2, r3
 8005cac:	f241 3288 	movw	r2, #5000	; 0x1388
 8005cb0:	4293      	cmp	r3, r2
 8005cb2:	d901      	bls.n	8005cb8 <HAL_RCC_OscConfig+0x350>
        {
          return HAL_TIMEOUT;
 8005cb4:	2303      	movs	r3, #3
 8005cb6:	e0bc      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005cb8:	4b61      	ldr	r3, [pc, #388]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005cba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005cbc:	f003 0302 	and.w	r3, r3, #2
 8005cc0:	2b00      	cmp	r3, #0
 8005cc2:	d0ee      	beq.n	8005ca2 <HAL_RCC_OscConfig+0x33a>
 8005cc4:	e014      	b.n	8005cf0 <HAL_RCC_OscConfig+0x388>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8005cc6:	f7fd fa9d 	bl	8003204 <HAL_GetTick>
 8005cca:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005ccc:	e00a      	b.n	8005ce4 <HAL_RCC_OscConfig+0x37c>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005cce:	f7fd fa99 	bl	8003204 <HAL_GetTick>
 8005cd2:	4602      	mov	r2, r0
 8005cd4:	693b      	ldr	r3, [r7, #16]
 8005cd6:	1ad3      	subs	r3, r2, r3
 8005cd8:	f241 3288 	movw	r2, #5000	; 0x1388
 8005cdc:	4293      	cmp	r3, r2
 8005cde:	d901      	bls.n	8005ce4 <HAL_RCC_OscConfig+0x37c>
        {
          return HAL_TIMEOUT;
 8005ce0:	2303      	movs	r3, #3
 8005ce2:	e0a6      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005ce4:	4b56      	ldr	r3, [pc, #344]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005ce6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005ce8:	f003 0302 	and.w	r3, r3, #2
 8005cec:	2b00      	cmp	r3, #0
 8005cee:	d1ee      	bne.n	8005cce <HAL_RCC_OscConfig+0x366>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8005cf0:	7dfb      	ldrb	r3, [r7, #23]
 8005cf2:	2b01      	cmp	r3, #1
 8005cf4:	d105      	bne.n	8005d02 <HAL_RCC_OscConfig+0x39a>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8005cf6:	4b52      	ldr	r3, [pc, #328]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005cf8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005cfa:	4a51      	ldr	r2, [pc, #324]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005cfc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005d00:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005d02:	687b      	ldr	r3, [r7, #4]
 8005d04:	699b      	ldr	r3, [r3, #24]
 8005d06:	2b00      	cmp	r3, #0
 8005d08:	f000 8092 	beq.w	8005e30 <HAL_RCC_OscConfig+0x4c8>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005d0c:	4b4c      	ldr	r3, [pc, #304]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005d0e:	689b      	ldr	r3, [r3, #8]
 8005d10:	f003 030c 	and.w	r3, r3, #12
 8005d14:	2b08      	cmp	r3, #8
 8005d16:	d05c      	beq.n	8005dd2 <HAL_RCC_OscConfig+0x46a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005d18:	687b      	ldr	r3, [r7, #4]
 8005d1a:	699b      	ldr	r3, [r3, #24]
 8005d1c:	2b02      	cmp	r3, #2
 8005d1e:	d141      	bne.n	8005da4 <HAL_RCC_OscConfig+0x43c>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005d20:	4b48      	ldr	r3, [pc, #288]	; (8005e44 <HAL_RCC_OscConfig+0x4dc>)
 8005d22:	2200      	movs	r2, #0
 8005d24:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005d26:	f7fd fa6d 	bl	8003204 <HAL_GetTick>
 8005d2a:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005d2c:	e008      	b.n	8005d40 <HAL_RCC_OscConfig+0x3d8>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005d2e:	f7fd fa69 	bl	8003204 <HAL_GetTick>
 8005d32:	4602      	mov	r2, r0
 8005d34:	693b      	ldr	r3, [r7, #16]
 8005d36:	1ad3      	subs	r3, r2, r3
 8005d38:	2b02      	cmp	r3, #2
 8005d3a:	d901      	bls.n	8005d40 <HAL_RCC_OscConfig+0x3d8>
          {
            return HAL_TIMEOUT;
 8005d3c:	2303      	movs	r3, #3
 8005d3e:	e078      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005d40:	4b3f      	ldr	r3, [pc, #252]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005d42:	681b      	ldr	r3, [r3, #0]
 8005d44:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005d48:	2b00      	cmp	r3, #0
 8005d4a:	d1f0      	bne.n	8005d2e <HAL_RCC_OscConfig+0x3c6>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005d4c:	687b      	ldr	r3, [r7, #4]
 8005d4e:	69da      	ldr	r2, [r3, #28]
 8005d50:	687b      	ldr	r3, [r7, #4]
 8005d52:	6a1b      	ldr	r3, [r3, #32]
 8005d54:	431a      	orrs	r2, r3
 8005d56:	687b      	ldr	r3, [r7, #4]
 8005d58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d5a:	019b      	lsls	r3, r3, #6
 8005d5c:	431a      	orrs	r2, r3
 8005d5e:	687b      	ldr	r3, [r7, #4]
 8005d60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005d62:	085b      	lsrs	r3, r3, #1
 8005d64:	3b01      	subs	r3, #1
 8005d66:	041b      	lsls	r3, r3, #16
 8005d68:	431a      	orrs	r2, r3
 8005d6a:	687b      	ldr	r3, [r7, #4]
 8005d6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005d6e:	061b      	lsls	r3, r3, #24
 8005d70:	4933      	ldr	r1, [pc, #204]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005d72:	4313      	orrs	r3, r2
 8005d74:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8005d76:	4b33      	ldr	r3, [pc, #204]	; (8005e44 <HAL_RCC_OscConfig+0x4dc>)
 8005d78:	2201      	movs	r2, #1
 8005d7a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005d7c:	f7fd fa42 	bl	8003204 <HAL_GetTick>
 8005d80:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005d82:	e008      	b.n	8005d96 <HAL_RCC_OscConfig+0x42e>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005d84:	f7fd fa3e 	bl	8003204 <HAL_GetTick>
 8005d88:	4602      	mov	r2, r0
 8005d8a:	693b      	ldr	r3, [r7, #16]
 8005d8c:	1ad3      	subs	r3, r2, r3
 8005d8e:	2b02      	cmp	r3, #2
 8005d90:	d901      	bls.n	8005d96 <HAL_RCC_OscConfig+0x42e>
          {
            return HAL_TIMEOUT;
 8005d92:	2303      	movs	r3, #3
 8005d94:	e04d      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005d96:	4b2a      	ldr	r3, [pc, #168]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005d98:	681b      	ldr	r3, [r3, #0]
 8005d9a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005d9e:	2b00      	cmp	r3, #0
 8005da0:	d0f0      	beq.n	8005d84 <HAL_RCC_OscConfig+0x41c>
 8005da2:	e045      	b.n	8005e30 <HAL_RCC_OscConfig+0x4c8>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005da4:	4b27      	ldr	r3, [pc, #156]	; (8005e44 <HAL_RCC_OscConfig+0x4dc>)
 8005da6:	2200      	movs	r2, #0
 8005da8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005daa:	f7fd fa2b 	bl	8003204 <HAL_GetTick>
 8005dae:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005db0:	e008      	b.n	8005dc4 <HAL_RCC_OscConfig+0x45c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005db2:	f7fd fa27 	bl	8003204 <HAL_GetTick>
 8005db6:	4602      	mov	r2, r0
 8005db8:	693b      	ldr	r3, [r7, #16]
 8005dba:	1ad3      	subs	r3, r2, r3
 8005dbc:	2b02      	cmp	r3, #2
 8005dbe:	d901      	bls.n	8005dc4 <HAL_RCC_OscConfig+0x45c>
          {
            return HAL_TIMEOUT;
 8005dc0:	2303      	movs	r3, #3
 8005dc2:	e036      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005dc4:	4b1e      	ldr	r3, [pc, #120]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005dc6:	681b      	ldr	r3, [r3, #0]
 8005dc8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005dcc:	2b00      	cmp	r3, #0
 8005dce:	d1f0      	bne.n	8005db2 <HAL_RCC_OscConfig+0x44a>
 8005dd0:	e02e      	b.n	8005e30 <HAL_RCC_OscConfig+0x4c8>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005dd2:	687b      	ldr	r3, [r7, #4]
 8005dd4:	699b      	ldr	r3, [r3, #24]
 8005dd6:	2b01      	cmp	r3, #1
 8005dd8:	d101      	bne.n	8005dde <HAL_RCC_OscConfig+0x476>
      {
        return HAL_ERROR;
 8005dda:	2301      	movs	r3, #1
 8005ddc:	e029      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8005dde:	4b18      	ldr	r3, [pc, #96]	; (8005e40 <HAL_RCC_OscConfig+0x4d8>)
 8005de0:	689b      	ldr	r3, [r3, #8]
 8005de2:	60fb      	str	r3, [r7, #12]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005de4:	68fb      	ldr	r3, [r7, #12]
 8005de6:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8005dea:	687b      	ldr	r3, [r7, #4]
 8005dec:	69db      	ldr	r3, [r3, #28]
 8005dee:	429a      	cmp	r2, r3
 8005df0:	d11c      	bne.n	8005e2c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005df2:	68fb      	ldr	r3, [r7, #12]
 8005df4:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8005df8:	687b      	ldr	r3, [r7, #4]
 8005dfa:	6a1b      	ldr	r3, [r3, #32]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005dfc:	429a      	cmp	r2, r3
 8005dfe:	d115      	bne.n	8005e2c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8005e00:	68fa      	ldr	r2, [r7, #12]
 8005e02:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8005e06:	4013      	ands	r3, r2
 8005e08:	687a      	ldr	r2, [r7, #4]
 8005e0a:	6a52      	ldr	r2, [r2, #36]	; 0x24
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005e0c:	4293      	cmp	r3, r2
 8005e0e:	d10d      	bne.n	8005e2c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8005e10:	68fb      	ldr	r3, [r7, #12]
 8005e12:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8005e16:	687b      	ldr	r3, [r7, #4]
 8005e18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8005e1a:	429a      	cmp	r2, r3
 8005e1c:	d106      	bne.n	8005e2c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8005e1e:	68fb      	ldr	r3, [r7, #12]
 8005e20:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8005e24:	687b      	ldr	r3, [r7, #4]
 8005e26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8005e28:	429a      	cmp	r2, r3
 8005e2a:	d001      	beq.n	8005e30 <HAL_RCC_OscConfig+0x4c8>
        {
          return HAL_ERROR;
 8005e2c:	2301      	movs	r3, #1
 8005e2e:	e000      	b.n	8005e32 <HAL_RCC_OscConfig+0x4ca>
        }
      }
    }
  }
  return HAL_OK;
 8005e30:	2300      	movs	r3, #0
}
 8005e32:	4618      	mov	r0, r3
 8005e34:	3718      	adds	r7, #24
 8005e36:	46bd      	mov	sp, r7
 8005e38:	bd80      	pop	{r7, pc}
 8005e3a:	bf00      	nop
 8005e3c:	40007000 	.word	0x40007000
 8005e40:	40023800 	.word	0x40023800
 8005e44:	42470060 	.word	0x42470060

08005e48 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8005e48:	b580      	push	{r7, lr}
 8005e4a:	b084      	sub	sp, #16
 8005e4c:	af00      	add	r7, sp, #0
 8005e4e:	6078      	str	r0, [r7, #4]
 8005e50:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8005e52:	687b      	ldr	r3, [r7, #4]
 8005e54:	2b00      	cmp	r3, #0
 8005e56:	d101      	bne.n	8005e5c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8005e58:	2301      	movs	r3, #1
 8005e5a:	e0cc      	b.n	8005ff6 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8005e5c:	4b68      	ldr	r3, [pc, #416]	; (8006000 <HAL_RCC_ClockConfig+0x1b8>)
 8005e5e:	681b      	ldr	r3, [r3, #0]
 8005e60:	f003 030f 	and.w	r3, r3, #15
 8005e64:	683a      	ldr	r2, [r7, #0]
 8005e66:	429a      	cmp	r2, r3
 8005e68:	d90c      	bls.n	8005e84 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005e6a:	4b65      	ldr	r3, [pc, #404]	; (8006000 <HAL_RCC_ClockConfig+0x1b8>)
 8005e6c:	683a      	ldr	r2, [r7, #0]
 8005e6e:	b2d2      	uxtb	r2, r2
 8005e70:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005e72:	4b63      	ldr	r3, [pc, #396]	; (8006000 <HAL_RCC_ClockConfig+0x1b8>)
 8005e74:	681b      	ldr	r3, [r3, #0]
 8005e76:	f003 030f 	and.w	r3, r3, #15
 8005e7a:	683a      	ldr	r2, [r7, #0]
 8005e7c:	429a      	cmp	r2, r3
 8005e7e:	d001      	beq.n	8005e84 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8005e80:	2301      	movs	r3, #1
 8005e82:	e0b8      	b.n	8005ff6 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005e84:	687b      	ldr	r3, [r7, #4]
 8005e86:	681b      	ldr	r3, [r3, #0]
 8005e88:	f003 0302 	and.w	r3, r3, #2
 8005e8c:	2b00      	cmp	r3, #0
 8005e8e:	d020      	beq.n	8005ed2 <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	681b      	ldr	r3, [r3, #0]
 8005e94:	f003 0304 	and.w	r3, r3, #4
 8005e98:	2b00      	cmp	r3, #0
 8005e9a:	d005      	beq.n	8005ea8 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005e9c:	4b59      	ldr	r3, [pc, #356]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005e9e:	689b      	ldr	r3, [r3, #8]
 8005ea0:	4a58      	ldr	r2, [pc, #352]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005ea2:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8005ea6:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005ea8:	687b      	ldr	r3, [r7, #4]
 8005eaa:	681b      	ldr	r3, [r3, #0]
 8005eac:	f003 0308 	and.w	r3, r3, #8
 8005eb0:	2b00      	cmp	r3, #0
 8005eb2:	d005      	beq.n	8005ec0 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005eb4:	4b53      	ldr	r3, [pc, #332]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005eb6:	689b      	ldr	r3, [r3, #8]
 8005eb8:	4a52      	ldr	r2, [pc, #328]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005eba:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8005ebe:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005ec0:	4b50      	ldr	r3, [pc, #320]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005ec2:	689b      	ldr	r3, [r3, #8]
 8005ec4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8005ec8:	687b      	ldr	r3, [r7, #4]
 8005eca:	689b      	ldr	r3, [r3, #8]
 8005ecc:	494d      	ldr	r1, [pc, #308]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005ece:	4313      	orrs	r3, r2
 8005ed0:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005ed2:	687b      	ldr	r3, [r7, #4]
 8005ed4:	681b      	ldr	r3, [r3, #0]
 8005ed6:	f003 0301 	and.w	r3, r3, #1
 8005eda:	2b00      	cmp	r3, #0
 8005edc:	d044      	beq.n	8005f68 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005ede:	687b      	ldr	r3, [r7, #4]
 8005ee0:	685b      	ldr	r3, [r3, #4]
 8005ee2:	2b01      	cmp	r3, #1
 8005ee4:	d107      	bne.n	8005ef6 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005ee6:	4b47      	ldr	r3, [pc, #284]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005ee8:	681b      	ldr	r3, [r3, #0]
 8005eea:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005eee:	2b00      	cmp	r3, #0
 8005ef0:	d119      	bne.n	8005f26 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8005ef2:	2301      	movs	r3, #1
 8005ef4:	e07f      	b.n	8005ff6 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005ef6:	687b      	ldr	r3, [r7, #4]
 8005ef8:	685b      	ldr	r3, [r3, #4]
 8005efa:	2b02      	cmp	r3, #2
 8005efc:	d003      	beq.n	8005f06 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8005efe:	687b      	ldr	r3, [r7, #4]
 8005f00:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005f02:	2b03      	cmp	r3, #3
 8005f04:	d107      	bne.n	8005f16 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005f06:	4b3f      	ldr	r3, [pc, #252]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005f08:	681b      	ldr	r3, [r3, #0]
 8005f0a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005f0e:	2b00      	cmp	r3, #0
 8005f10:	d109      	bne.n	8005f26 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8005f12:	2301      	movs	r3, #1
 8005f14:	e06f      	b.n	8005ff6 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005f16:	4b3b      	ldr	r3, [pc, #236]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005f18:	681b      	ldr	r3, [r3, #0]
 8005f1a:	f003 0302 	and.w	r3, r3, #2
 8005f1e:	2b00      	cmp	r3, #0
 8005f20:	d101      	bne.n	8005f26 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8005f22:	2301      	movs	r3, #1
 8005f24:	e067      	b.n	8005ff6 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005f26:	4b37      	ldr	r3, [pc, #220]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005f28:	689b      	ldr	r3, [r3, #8]
 8005f2a:	f023 0203 	bic.w	r2, r3, #3
 8005f2e:	687b      	ldr	r3, [r7, #4]
 8005f30:	685b      	ldr	r3, [r3, #4]
 8005f32:	4934      	ldr	r1, [pc, #208]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005f34:	4313      	orrs	r3, r2
 8005f36:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8005f38:	f7fd f964 	bl	8003204 <HAL_GetTick>
 8005f3c:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005f3e:	e00a      	b.n	8005f56 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005f40:	f7fd f960 	bl	8003204 <HAL_GetTick>
 8005f44:	4602      	mov	r2, r0
 8005f46:	68fb      	ldr	r3, [r7, #12]
 8005f48:	1ad3      	subs	r3, r2, r3
 8005f4a:	f241 3288 	movw	r2, #5000	; 0x1388
 8005f4e:	4293      	cmp	r3, r2
 8005f50:	d901      	bls.n	8005f56 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8005f52:	2303      	movs	r3, #3
 8005f54:	e04f      	b.n	8005ff6 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005f56:	4b2b      	ldr	r3, [pc, #172]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005f58:	689b      	ldr	r3, [r3, #8]
 8005f5a:	f003 020c 	and.w	r2, r3, #12
 8005f5e:	687b      	ldr	r3, [r7, #4]
 8005f60:	685b      	ldr	r3, [r3, #4]
 8005f62:	009b      	lsls	r3, r3, #2
 8005f64:	429a      	cmp	r2, r3
 8005f66:	d1eb      	bne.n	8005f40 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8005f68:	4b25      	ldr	r3, [pc, #148]	; (8006000 <HAL_RCC_ClockConfig+0x1b8>)
 8005f6a:	681b      	ldr	r3, [r3, #0]
 8005f6c:	f003 030f 	and.w	r3, r3, #15
 8005f70:	683a      	ldr	r2, [r7, #0]
 8005f72:	429a      	cmp	r2, r3
 8005f74:	d20c      	bcs.n	8005f90 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005f76:	4b22      	ldr	r3, [pc, #136]	; (8006000 <HAL_RCC_ClockConfig+0x1b8>)
 8005f78:	683a      	ldr	r2, [r7, #0]
 8005f7a:	b2d2      	uxtb	r2, r2
 8005f7c:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005f7e:	4b20      	ldr	r3, [pc, #128]	; (8006000 <HAL_RCC_ClockConfig+0x1b8>)
 8005f80:	681b      	ldr	r3, [r3, #0]
 8005f82:	f003 030f 	and.w	r3, r3, #15
 8005f86:	683a      	ldr	r2, [r7, #0]
 8005f88:	429a      	cmp	r2, r3
 8005f8a:	d001      	beq.n	8005f90 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8005f8c:	2301      	movs	r3, #1
 8005f8e:	e032      	b.n	8005ff6 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005f90:	687b      	ldr	r3, [r7, #4]
 8005f92:	681b      	ldr	r3, [r3, #0]
 8005f94:	f003 0304 	and.w	r3, r3, #4
 8005f98:	2b00      	cmp	r3, #0
 8005f9a:	d008      	beq.n	8005fae <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005f9c:	4b19      	ldr	r3, [pc, #100]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005f9e:	689b      	ldr	r3, [r3, #8]
 8005fa0:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8005fa4:	687b      	ldr	r3, [r7, #4]
 8005fa6:	68db      	ldr	r3, [r3, #12]
 8005fa8:	4916      	ldr	r1, [pc, #88]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005faa:	4313      	orrs	r3, r2
 8005fac:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005fae:	687b      	ldr	r3, [r7, #4]
 8005fb0:	681b      	ldr	r3, [r3, #0]
 8005fb2:	f003 0308 	and.w	r3, r3, #8
 8005fb6:	2b00      	cmp	r3, #0
 8005fb8:	d009      	beq.n	8005fce <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005fba:	4b12      	ldr	r3, [pc, #72]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005fbc:	689b      	ldr	r3, [r3, #8]
 8005fbe:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8005fc2:	687b      	ldr	r3, [r7, #4]
 8005fc4:	691b      	ldr	r3, [r3, #16]
 8005fc6:	00db      	lsls	r3, r3, #3
 8005fc8:	490e      	ldr	r1, [pc, #56]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005fca:	4313      	orrs	r3, r2
 8005fcc:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8005fce:	f000 f821 	bl	8006014 <HAL_RCC_GetSysClockFreq>
 8005fd2:	4601      	mov	r1, r0
 8005fd4:	4b0b      	ldr	r3, [pc, #44]	; (8006004 <HAL_RCC_ClockConfig+0x1bc>)
 8005fd6:	689b      	ldr	r3, [r3, #8]
 8005fd8:	091b      	lsrs	r3, r3, #4
 8005fda:	f003 030f 	and.w	r3, r3, #15
 8005fde:	4a0a      	ldr	r2, [pc, #40]	; (8006008 <HAL_RCC_ClockConfig+0x1c0>)
 8005fe0:	5cd3      	ldrb	r3, [r2, r3]
 8005fe2:	fa21 f303 	lsr.w	r3, r1, r3
 8005fe6:	4a09      	ldr	r2, [pc, #36]	; (800600c <HAL_RCC_ClockConfig+0x1c4>)
 8005fe8:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 8005fea:	4b09      	ldr	r3, [pc, #36]	; (8006010 <HAL_RCC_ClockConfig+0x1c8>)
 8005fec:	681b      	ldr	r3, [r3, #0]
 8005fee:	4618      	mov	r0, r3
 8005ff0:	f7fd f8c4 	bl	800317c <HAL_InitTick>

  return HAL_OK;
 8005ff4:	2300      	movs	r3, #0
}
 8005ff6:	4618      	mov	r0, r3
 8005ff8:	3710      	adds	r7, #16
 8005ffa:	46bd      	mov	sp, r7
 8005ffc:	bd80      	pop	{r7, pc}
 8005ffe:	bf00      	nop
 8006000:	40023c00 	.word	0x40023c00
 8006004:	40023800 	.word	0x40023800
 8006008:	0801ca98 	.word	0x0801ca98
 800600c:	20000004 	.word	0x20000004
 8006010:	20000008 	.word	0x20000008

08006014 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8006014:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006016:	b085      	sub	sp, #20
 8006018:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 800601a:	2300      	movs	r3, #0
 800601c:	607b      	str	r3, [r7, #4]
 800601e:	2300      	movs	r3, #0
 8006020:	60fb      	str	r3, [r7, #12]
 8006022:	2300      	movs	r3, #0
 8006024:	603b      	str	r3, [r7, #0]
  uint32_t sysclockfreq = 0U;
 8006026:	2300      	movs	r3, #0
 8006028:	60bb      	str	r3, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800602a:	4b50      	ldr	r3, [pc, #320]	; (800616c <HAL_RCC_GetSysClockFreq+0x158>)
 800602c:	689b      	ldr	r3, [r3, #8]
 800602e:	f003 030c 	and.w	r3, r3, #12
 8006032:	2b04      	cmp	r3, #4
 8006034:	d007      	beq.n	8006046 <HAL_RCC_GetSysClockFreq+0x32>
 8006036:	2b08      	cmp	r3, #8
 8006038:	d008      	beq.n	800604c <HAL_RCC_GetSysClockFreq+0x38>
 800603a:	2b00      	cmp	r3, #0
 800603c:	f040 808d 	bne.w	800615a <HAL_RCC_GetSysClockFreq+0x146>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8006040:	4b4b      	ldr	r3, [pc, #300]	; (8006170 <HAL_RCC_GetSysClockFreq+0x15c>)
 8006042:	60bb      	str	r3, [r7, #8]
       break;
 8006044:	e08c      	b.n	8006160 <HAL_RCC_GetSysClockFreq+0x14c>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8006046:	4b4b      	ldr	r3, [pc, #300]	; (8006174 <HAL_RCC_GetSysClockFreq+0x160>)
 8006048:	60bb      	str	r3, [r7, #8]
      break;
 800604a:	e089      	b.n	8006160 <HAL_RCC_GetSysClockFreq+0x14c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800604c:	4b47      	ldr	r3, [pc, #284]	; (800616c <HAL_RCC_GetSysClockFreq+0x158>)
 800604e:	685b      	ldr	r3, [r3, #4]
 8006050:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006054:	607b      	str	r3, [r7, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006056:	4b45      	ldr	r3, [pc, #276]	; (800616c <HAL_RCC_GetSysClockFreq+0x158>)
 8006058:	685b      	ldr	r3, [r3, #4]
 800605a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800605e:	2b00      	cmp	r3, #0
 8006060:	d023      	beq.n	80060aa <HAL_RCC_GetSysClockFreq+0x96>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006062:	4b42      	ldr	r3, [pc, #264]	; (800616c <HAL_RCC_GetSysClockFreq+0x158>)
 8006064:	685b      	ldr	r3, [r3, #4]
 8006066:	099b      	lsrs	r3, r3, #6
 8006068:	f04f 0400 	mov.w	r4, #0
 800606c:	f240 11ff 	movw	r1, #511	; 0x1ff
 8006070:	f04f 0200 	mov.w	r2, #0
 8006074:	ea03 0501 	and.w	r5, r3, r1
 8006078:	ea04 0602 	and.w	r6, r4, r2
 800607c:	4a3d      	ldr	r2, [pc, #244]	; (8006174 <HAL_RCC_GetSysClockFreq+0x160>)
 800607e:	fb02 f106 	mul.w	r1, r2, r6
 8006082:	2200      	movs	r2, #0
 8006084:	fb02 f205 	mul.w	r2, r2, r5
 8006088:	440a      	add	r2, r1
 800608a:	493a      	ldr	r1, [pc, #232]	; (8006174 <HAL_RCC_GetSysClockFreq+0x160>)
 800608c:	fba5 0101 	umull	r0, r1, r5, r1
 8006090:	1853      	adds	r3, r2, r1
 8006092:	4619      	mov	r1, r3
 8006094:	687b      	ldr	r3, [r7, #4]
 8006096:	f04f 0400 	mov.w	r4, #0
 800609a:	461a      	mov	r2, r3
 800609c:	4623      	mov	r3, r4
 800609e:	f7fa f8ff 	bl	80002a0 <__aeabi_uldivmod>
 80060a2:	4603      	mov	r3, r0
 80060a4:	460c      	mov	r4, r1
 80060a6:	60fb      	str	r3, [r7, #12]
 80060a8:	e049      	b.n	800613e <HAL_RCC_GetSysClockFreq+0x12a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80060aa:	4b30      	ldr	r3, [pc, #192]	; (800616c <HAL_RCC_GetSysClockFreq+0x158>)
 80060ac:	685b      	ldr	r3, [r3, #4]
 80060ae:	099b      	lsrs	r3, r3, #6
 80060b0:	f04f 0400 	mov.w	r4, #0
 80060b4:	f240 11ff 	movw	r1, #511	; 0x1ff
 80060b8:	f04f 0200 	mov.w	r2, #0
 80060bc:	ea03 0501 	and.w	r5, r3, r1
 80060c0:	ea04 0602 	and.w	r6, r4, r2
 80060c4:	4629      	mov	r1, r5
 80060c6:	4632      	mov	r2, r6
 80060c8:	f04f 0300 	mov.w	r3, #0
 80060cc:	f04f 0400 	mov.w	r4, #0
 80060d0:	0154      	lsls	r4, r2, #5
 80060d2:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 80060d6:	014b      	lsls	r3, r1, #5
 80060d8:	4619      	mov	r1, r3
 80060da:	4622      	mov	r2, r4
 80060dc:	1b49      	subs	r1, r1, r5
 80060de:	eb62 0206 	sbc.w	r2, r2, r6
 80060e2:	f04f 0300 	mov.w	r3, #0
 80060e6:	f04f 0400 	mov.w	r4, #0
 80060ea:	0194      	lsls	r4, r2, #6
 80060ec:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 80060f0:	018b      	lsls	r3, r1, #6
 80060f2:	1a5b      	subs	r3, r3, r1
 80060f4:	eb64 0402 	sbc.w	r4, r4, r2
 80060f8:	f04f 0100 	mov.w	r1, #0
 80060fc:	f04f 0200 	mov.w	r2, #0
 8006100:	00e2      	lsls	r2, r4, #3
 8006102:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8006106:	00d9      	lsls	r1, r3, #3
 8006108:	460b      	mov	r3, r1
 800610a:	4614      	mov	r4, r2
 800610c:	195b      	adds	r3, r3, r5
 800610e:	eb44 0406 	adc.w	r4, r4, r6
 8006112:	f04f 0100 	mov.w	r1, #0
 8006116:	f04f 0200 	mov.w	r2, #0
 800611a:	02a2      	lsls	r2, r4, #10
 800611c:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 8006120:	0299      	lsls	r1, r3, #10
 8006122:	460b      	mov	r3, r1
 8006124:	4614      	mov	r4, r2
 8006126:	4618      	mov	r0, r3
 8006128:	4621      	mov	r1, r4
 800612a:	687b      	ldr	r3, [r7, #4]
 800612c:	f04f 0400 	mov.w	r4, #0
 8006130:	461a      	mov	r2, r3
 8006132:	4623      	mov	r3, r4
 8006134:	f7fa f8b4 	bl	80002a0 <__aeabi_uldivmod>
 8006138:	4603      	mov	r3, r0
 800613a:	460c      	mov	r4, r1
 800613c:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800613e:	4b0b      	ldr	r3, [pc, #44]	; (800616c <HAL_RCC_GetSysClockFreq+0x158>)
 8006140:	685b      	ldr	r3, [r3, #4]
 8006142:	0c1b      	lsrs	r3, r3, #16
 8006144:	f003 0303 	and.w	r3, r3, #3
 8006148:	3301      	adds	r3, #1
 800614a:	005b      	lsls	r3, r3, #1
 800614c:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco/pllp;
 800614e:	68fa      	ldr	r2, [r7, #12]
 8006150:	683b      	ldr	r3, [r7, #0]
 8006152:	fbb2 f3f3 	udiv	r3, r2, r3
 8006156:	60bb      	str	r3, [r7, #8]
      break;
 8006158:	e002      	b.n	8006160 <HAL_RCC_GetSysClockFreq+0x14c>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 800615a:	4b05      	ldr	r3, [pc, #20]	; (8006170 <HAL_RCC_GetSysClockFreq+0x15c>)
 800615c:	60bb      	str	r3, [r7, #8]
      break;
 800615e:	bf00      	nop
    }
  }
  return sysclockfreq;
 8006160:	68bb      	ldr	r3, [r7, #8]
}
 8006162:	4618      	mov	r0, r3
 8006164:	3714      	adds	r7, #20
 8006166:	46bd      	mov	sp, r7
 8006168:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800616a:	bf00      	nop
 800616c:	40023800 	.word	0x40023800
 8006170:	00f42400 	.word	0x00f42400
 8006174:	017d7840 	.word	0x017d7840

08006178 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8006178:	b480      	push	{r7}
 800617a:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 800617c:	4b03      	ldr	r3, [pc, #12]	; (800618c <HAL_RCC_GetHCLKFreq+0x14>)
 800617e:	681b      	ldr	r3, [r3, #0]
}
 8006180:	4618      	mov	r0, r3
 8006182:	46bd      	mov	sp, r7
 8006184:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006188:	4770      	bx	lr
 800618a:	bf00      	nop
 800618c:	20000004 	.word	0x20000004

08006190 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8006190:	b580      	push	{r7, lr}
 8006192:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006194:	f7ff fff0 	bl	8006178 <HAL_RCC_GetHCLKFreq>
 8006198:	4601      	mov	r1, r0
 800619a:	4b05      	ldr	r3, [pc, #20]	; (80061b0 <HAL_RCC_GetPCLK1Freq+0x20>)
 800619c:	689b      	ldr	r3, [r3, #8]
 800619e:	0a9b      	lsrs	r3, r3, #10
 80061a0:	f003 0307 	and.w	r3, r3, #7
 80061a4:	4a03      	ldr	r2, [pc, #12]	; (80061b4 <HAL_RCC_GetPCLK1Freq+0x24>)
 80061a6:	5cd3      	ldrb	r3, [r2, r3]
 80061a8:	fa21 f303 	lsr.w	r3, r1, r3
}
 80061ac:	4618      	mov	r0, r3
 80061ae:	bd80      	pop	{r7, pc}
 80061b0:	40023800 	.word	0x40023800
 80061b4:	0801caa8 	.word	0x0801caa8

080061b8 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 80061b8:	b580      	push	{r7, lr}
 80061ba:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 80061bc:	f7ff ffdc 	bl	8006178 <HAL_RCC_GetHCLKFreq>
 80061c0:	4601      	mov	r1, r0
 80061c2:	4b05      	ldr	r3, [pc, #20]	; (80061d8 <HAL_RCC_GetPCLK2Freq+0x20>)
 80061c4:	689b      	ldr	r3, [r3, #8]
 80061c6:	0b5b      	lsrs	r3, r3, #13
 80061c8:	f003 0307 	and.w	r3, r3, #7
 80061cc:	4a03      	ldr	r2, [pc, #12]	; (80061dc <HAL_RCC_GetPCLK2Freq+0x24>)
 80061ce:	5cd3      	ldrb	r3, [r2, r3]
 80061d0:	fa21 f303 	lsr.w	r3, r1, r3
}
 80061d4:	4618      	mov	r0, r3
 80061d6:	bd80      	pop	{r7, pc}
 80061d8:	40023800 	.word	0x40023800
 80061dc:	0801caa8 	.word	0x0801caa8

080061e0 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80061e0:	b580      	push	{r7, lr}
 80061e2:	b086      	sub	sp, #24
 80061e4:	af00      	add	r7, sp, #0
 80061e6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 80061e8:	2300      	movs	r3, #0
 80061ea:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg1 = 0U;
 80061ec:	2300      	movs	r3, #0
 80061ee:	613b      	str	r3, [r7, #16]

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80061f0:	687b      	ldr	r3, [r7, #4]
 80061f2:	681b      	ldr	r3, [r3, #0]
 80061f4:	f003 0301 	and.w	r3, r3, #1
 80061f8:	2b00      	cmp	r3, #0
 80061fa:	d10b      	bne.n	8006214 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 80061fc:	687b      	ldr	r3, [r7, #4]
 80061fe:	681b      	ldr	r3, [r3, #0]
 8006200:	f003 0302 	and.w	r3, r3, #2
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006204:	2b00      	cmp	r3, #0
 8006206:	d105      	bne.n	8006214 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8006208:	687b      	ldr	r3, [r7, #4]
 800620a:	681b      	ldr	r3, [r3, #0]
 800620c:	f003 0340 	and.w	r3, r3, #64	; 0x40
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8006210:	2b00      	cmp	r3, #0
 8006212:	d075      	beq.n	8006300 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* check for Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8006214:	4bad      	ldr	r3, [pc, #692]	; (80064cc <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8006216:	2200      	movs	r2, #0
 8006218:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 800621a:	f7fc fff3 	bl	8003204 <HAL_GetTick>
 800621e:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006220:	e008      	b.n	8006234 <HAL_RCCEx_PeriphCLKConfig+0x54>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006222:	f7fc ffef 	bl	8003204 <HAL_GetTick>
 8006226:	4602      	mov	r2, r0
 8006228:	697b      	ldr	r3, [r7, #20]
 800622a:	1ad3      	subs	r3, r2, r3
 800622c:	2b02      	cmp	r3, #2
 800622e:	d901      	bls.n	8006234 <HAL_RCCEx_PeriphCLKConfig+0x54>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8006230:	2303      	movs	r3, #3
 8006232:	e18b      	b.n	800654c <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006234:	4ba6      	ldr	r3, [pc, #664]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006236:	681b      	ldr	r3, [r3, #0]
 8006238:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800623c:	2b00      	cmp	r3, #0
 800623e:	d1f0      	bne.n	8006222 <HAL_RCCEx_PeriphCLKConfig+0x42>
    }

    /*---------------------------- I2S configuration -------------------------*/
    /* In Case of I2S Clock Configuration through PLLI2S, PLLI2SR must be added
      only for I2S configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006240:	687b      	ldr	r3, [r7, #4]
 8006242:	681b      	ldr	r3, [r3, #0]
 8006244:	f003 0301 	and.w	r3, r3, #1
 8006248:	2b00      	cmp	r3, #0
 800624a:	d009      	beq.n	8006260 <HAL_RCCEx_PeriphCLKConfig+0x80>
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800624c:	687b      	ldr	r3, [r7, #4]
 800624e:	685b      	ldr	r3, [r3, #4]
 8006250:	019a      	lsls	r2, r3, #6
 8006252:	687b      	ldr	r3, [r7, #4]
 8006254:	689b      	ldr	r3, [r3, #8]
 8006256:	071b      	lsls	r3, r3, #28
 8006258:	499d      	ldr	r1, [pc, #628]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800625a:	4313      	orrs	r3, r2
 800625c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLI2S, PLLI2SQ and PLLI2S_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006260:	687b      	ldr	r3, [r7, #4]
 8006262:	681b      	ldr	r3, [r3, #0]
 8006264:	f003 0302 	and.w	r3, r3, #2
 8006268:	2b00      	cmp	r3, #0
 800626a:	d01f      	beq.n	80062ac <HAL_RCCEx_PeriphCLKConfig+0xcc>
      /* Check the PLLI2S division factors */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SR value from PLLI2SCFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800626c:	4b98      	ldr	r3, [pc, #608]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800626e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006272:	0f1b      	lsrs	r3, r3, #28
 8006274:	f003 0307 	and.w	r3, r3, #7
 8006278:	613b      	str	r3, [r7, #16]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800627a:	687b      	ldr	r3, [r7, #4]
 800627c:	685b      	ldr	r3, [r3, #4]
 800627e:	019a      	lsls	r2, r3, #6
 8006280:	687b      	ldr	r3, [r7, #4]
 8006282:	68db      	ldr	r3, [r3, #12]
 8006284:	061b      	lsls	r3, r3, #24
 8006286:	431a      	orrs	r2, r3
 8006288:	693b      	ldr	r3, [r7, #16]
 800628a:	071b      	lsls	r3, r3, #28
 800628c:	4990      	ldr	r1, [pc, #576]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800628e:	4313      	orrs	r3, r2
 8006290:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006294:	4b8e      	ldr	r3, [pc, #568]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006296:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800629a:	f023 021f 	bic.w	r2, r3, #31
 800629e:	687b      	ldr	r3, [r7, #4]
 80062a0:	69db      	ldr	r3, [r3, #28]
 80062a2:	3b01      	subs	r3, #1
 80062a4:	498a      	ldr	r1, [pc, #552]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80062a6:	4313      	orrs	r3, r2
 80062a8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80062ac:	687b      	ldr	r3, [r7, #4]
 80062ae:	681b      	ldr	r3, [r3, #0]
 80062b0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80062b4:	2b00      	cmp	r3, #0
 80062b6:	d00d      	beq.n	80062d4 <HAL_RCCEx_PeriphCLKConfig+0xf4>
      /* Check for Parameters */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Configure the PLLI2S multiplication and division factors */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80062b8:	687b      	ldr	r3, [r7, #4]
 80062ba:	685b      	ldr	r3, [r3, #4]
 80062bc:	019a      	lsls	r2, r3, #6
 80062be:	687b      	ldr	r3, [r7, #4]
 80062c0:	68db      	ldr	r3, [r3, #12]
 80062c2:	061b      	lsls	r3, r3, #24
 80062c4:	431a      	orrs	r2, r3
 80062c6:	687b      	ldr	r3, [r7, #4]
 80062c8:	689b      	ldr	r3, [r3, #8]
 80062ca:	071b      	lsls	r3, r3, #28
 80062cc:	4980      	ldr	r1, [pc, #512]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80062ce:	4313      	orrs	r3, r2
 80062d0:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 80062d4:	4b7d      	ldr	r3, [pc, #500]	; (80064cc <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80062d6:	2201      	movs	r2, #1
 80062d8:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80062da:	f7fc ff93 	bl	8003204 <HAL_GetTick>
 80062de:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80062e0:	e008      	b.n	80062f4 <HAL_RCCEx_PeriphCLKConfig+0x114>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80062e2:	f7fc ff8f 	bl	8003204 <HAL_GetTick>
 80062e6:	4602      	mov	r2, r0
 80062e8:	697b      	ldr	r3, [r7, #20]
 80062ea:	1ad3      	subs	r3, r2, r3
 80062ec:	2b02      	cmp	r3, #2
 80062ee:	d901      	bls.n	80062f4 <HAL_RCCEx_PeriphCLKConfig+0x114>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 80062f0:	2303      	movs	r3, #3
 80062f2:	e12b      	b.n	800654c <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80062f4:	4b76      	ldr	r3, [pc, #472]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80062f6:	681b      	ldr	r3, [r3, #0]
 80062f8:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80062fc:	2b00      	cmp	r3, #0
 80062fe:	d0f0      	beq.n	80062e2 <HAL_RCCEx_PeriphCLKConfig+0x102>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006300:	687b      	ldr	r3, [r7, #4]
 8006302:	681b      	ldr	r3, [r3, #0]
 8006304:	f003 0304 	and.w	r3, r3, #4
 8006308:	2b00      	cmp	r3, #0
 800630a:	d105      	bne.n	8006318 <HAL_RCCEx_PeriphCLKConfig+0x138>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC))
 800630c:	687b      	ldr	r3, [r7, #4]
 800630e:	681b      	ldr	r3, [r3, #0]
 8006310:	f003 0308 	and.w	r3, r3, #8
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006314:	2b00      	cmp	r3, #0
 8006316:	d079      	beq.n	800640c <HAL_RCCEx_PeriphCLKConfig+0x22c>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006318:	4b6e      	ldr	r3, [pc, #440]	; (80064d4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 800631a:	2200      	movs	r2, #0
 800631c:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 800631e:	f7fc ff71 	bl	8003204 <HAL_GetTick>
 8006322:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006324:	e008      	b.n	8006338 <HAL_RCCEx_PeriphCLKConfig+0x158>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006326:	f7fc ff6d 	bl	8003204 <HAL_GetTick>
 800632a:	4602      	mov	r2, r0
 800632c:	697b      	ldr	r3, [r7, #20]
 800632e:	1ad3      	subs	r3, r2, r3
 8006330:	2b02      	cmp	r3, #2
 8006332:	d901      	bls.n	8006338 <HAL_RCCEx_PeriphCLKConfig+0x158>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8006334:	2303      	movs	r3, #3
 8006336:	e109      	b.n	800654c <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006338:	4b65      	ldr	r3, [pc, #404]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800633a:	681b      	ldr	r3, [r3, #0]
 800633c:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8006340:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8006344:	d0ef      	beq.n	8006326 <HAL_RCCEx_PeriphCLKConfig+0x146>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006346:	687b      	ldr	r3, [r7, #4]
 8006348:	681b      	ldr	r3, [r3, #0]
 800634a:	f003 0304 	and.w	r3, r3, #4
 800634e:	2b00      	cmp	r3, #0
 8006350:	d020      	beq.n	8006394 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006352:	4b5f      	ldr	r3, [pc, #380]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006354:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006358:	0f1b      	lsrs	r3, r3, #28
 800635a:	f003 0307 	and.w	r3, r3, #7
 800635e:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006360:	687b      	ldr	r3, [r7, #4]
 8006362:	691b      	ldr	r3, [r3, #16]
 8006364:	019a      	lsls	r2, r3, #6
 8006366:	687b      	ldr	r3, [r7, #4]
 8006368:	695b      	ldr	r3, [r3, #20]
 800636a:	061b      	lsls	r3, r3, #24
 800636c:	431a      	orrs	r2, r3
 800636e:	693b      	ldr	r3, [r7, #16]
 8006370:	071b      	lsls	r3, r3, #28
 8006372:	4957      	ldr	r1, [pc, #348]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006374:	4313      	orrs	r3, r2
 8006376:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800637a:	4b55      	ldr	r3, [pc, #340]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800637c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006380:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8006384:	687b      	ldr	r3, [r7, #4]
 8006386:	6a1b      	ldr	r3, [r3, #32]
 8006388:	3b01      	subs	r3, #1
 800638a:	021b      	lsls	r3, r3, #8
 800638c:	4950      	ldr	r1, [pc, #320]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800638e:	4313      	orrs	r3, r2
 8006390:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006394:	687b      	ldr	r3, [r7, #4]
 8006396:	681b      	ldr	r3, [r3, #0]
 8006398:	f003 0308 	and.w	r3, r3, #8
 800639c:	2b00      	cmp	r3, #0
 800639e:	d01e      	beq.n	80063de <HAL_RCCEx_PeriphCLKConfig+0x1fe>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80063a0:	4b4b      	ldr	r3, [pc, #300]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80063a2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80063a6:	0e1b      	lsrs	r3, r3, #24
 80063a8:	f003 030f 	and.w	r3, r3, #15
 80063ac:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80063ae:	687b      	ldr	r3, [r7, #4]
 80063b0:	691b      	ldr	r3, [r3, #16]
 80063b2:	019a      	lsls	r2, r3, #6
 80063b4:	693b      	ldr	r3, [r7, #16]
 80063b6:	061b      	lsls	r3, r3, #24
 80063b8:	431a      	orrs	r2, r3
 80063ba:	687b      	ldr	r3, [r7, #4]
 80063bc:	699b      	ldr	r3, [r3, #24]
 80063be:	071b      	lsls	r3, r3, #28
 80063c0:	4943      	ldr	r1, [pc, #268]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80063c2:	4313      	orrs	r3, r2
 80063c4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80063c8:	4b41      	ldr	r3, [pc, #260]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80063ca:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80063ce:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80063d2:	687b      	ldr	r3, [r7, #4]
 80063d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063d6:	493e      	ldr	r1, [pc, #248]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80063d8:	4313      	orrs	r3, r2
 80063da:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80063de:	4b3d      	ldr	r3, [pc, #244]	; (80064d4 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 80063e0:	2201      	movs	r2, #1
 80063e2:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80063e4:	f7fc ff0e 	bl	8003204 <HAL_GetTick>
 80063e8:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80063ea:	e008      	b.n	80063fe <HAL_RCCEx_PeriphCLKConfig+0x21e>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80063ec:	f7fc ff0a 	bl	8003204 <HAL_GetTick>
 80063f0:	4602      	mov	r2, r0
 80063f2:	697b      	ldr	r3, [r7, #20]
 80063f4:	1ad3      	subs	r3, r2, r3
 80063f6:	2b02      	cmp	r3, #2
 80063f8:	d901      	bls.n	80063fe <HAL_RCCEx_PeriphCLKConfig+0x21e>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 80063fa:	2303      	movs	r3, #3
 80063fc:	e0a6      	b.n	800654c <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80063fe:	4b34      	ldr	r3, [pc, #208]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006400:	681b      	ldr	r3, [r3, #0]
 8006402:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8006406:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800640a:	d1ef      	bne.n	80063ec <HAL_RCCEx_PeriphCLKConfig+0x20c>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800640c:	687b      	ldr	r3, [r7, #4]
 800640e:	681b      	ldr	r3, [r3, #0]
 8006410:	f003 0320 	and.w	r3, r3, #32
 8006414:	2b00      	cmp	r3, #0
 8006416:	f000 808d 	beq.w	8006534 <HAL_RCCEx_PeriphCLKConfig+0x354>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800641a:	2300      	movs	r3, #0
 800641c:	60fb      	str	r3, [r7, #12]
 800641e:	4b2c      	ldr	r3, [pc, #176]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006420:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006422:	4a2b      	ldr	r2, [pc, #172]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006424:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006428:	6413      	str	r3, [r2, #64]	; 0x40
 800642a:	4b29      	ldr	r3, [pc, #164]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800642c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800642e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006432:	60fb      	str	r3, [r7, #12]
 8006434:	68fb      	ldr	r3, [r7, #12]

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8006436:	4b28      	ldr	r3, [pc, #160]	; (80064d8 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8006438:	681b      	ldr	r3, [r3, #0]
 800643a:	4a27      	ldr	r2, [pc, #156]	; (80064d8 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 800643c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006440:	6013      	str	r3, [r2, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8006442:	f7fc fedf 	bl	8003204 <HAL_GetTick>
 8006446:	6178      	str	r0, [r7, #20]

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006448:	e008      	b.n	800645c <HAL_RCCEx_PeriphCLKConfig+0x27c>
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800644a:	f7fc fedb 	bl	8003204 <HAL_GetTick>
 800644e:	4602      	mov	r2, r0
 8006450:	697b      	ldr	r3, [r7, #20]
 8006452:	1ad3      	subs	r3, r2, r3
 8006454:	2b02      	cmp	r3, #2
 8006456:	d901      	bls.n	800645c <HAL_RCCEx_PeriphCLKConfig+0x27c>
      {
        return HAL_TIMEOUT;
 8006458:	2303      	movs	r3, #3
 800645a:	e077      	b.n	800654c <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800645c:	4b1e      	ldr	r3, [pc, #120]	; (80064d8 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 800645e:	681b      	ldr	r3, [r3, #0]
 8006460:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006464:	2b00      	cmp	r3, #0
 8006466:	d0f0      	beq.n	800644a <HAL_RCCEx_PeriphCLKConfig+0x26a>
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006468:	4b19      	ldr	r3, [pc, #100]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800646a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800646c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006470:	613b      	str	r3, [r7, #16]
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006472:	693b      	ldr	r3, [r7, #16]
 8006474:	2b00      	cmp	r3, #0
 8006476:	d039      	beq.n	80064ec <HAL_RCCEx_PeriphCLKConfig+0x30c>
 8006478:	687b      	ldr	r3, [r7, #4]
 800647a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800647c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006480:	693a      	ldr	r2, [r7, #16]
 8006482:	429a      	cmp	r2, r3
 8006484:	d032      	beq.n	80064ec <HAL_RCCEx_PeriphCLKConfig+0x30c>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006486:	4b12      	ldr	r3, [pc, #72]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8006488:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800648a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800648e:	613b      	str	r3, [r7, #16]
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8006490:	4b12      	ldr	r3, [pc, #72]	; (80064dc <HAL_RCCEx_PeriphCLKConfig+0x2fc>)
 8006492:	2201      	movs	r2, #1
 8006494:	601a      	str	r2, [r3, #0]
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006496:	4b11      	ldr	r3, [pc, #68]	; (80064dc <HAL_RCCEx_PeriphCLKConfig+0x2fc>)
 8006498:	2200      	movs	r2, #0
 800649a:	601a      	str	r2, [r3, #0]
      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg1;
 800649c:	4a0c      	ldr	r2, [pc, #48]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800649e:	693b      	ldr	r3, [r7, #16]
 80064a0:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80064a2:	4b0b      	ldr	r3, [pc, #44]	; (80064d0 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80064a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80064a6:	f003 0301 	and.w	r3, r3, #1
 80064aa:	2b01      	cmp	r3, #1
 80064ac:	d11e      	bne.n	80064ec <HAL_RCCEx_PeriphCLKConfig+0x30c>
      {
        /* Get tick */
        tickstart = HAL_GetTick();
 80064ae:	f7fc fea9 	bl	8003204 <HAL_GetTick>
 80064b2:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80064b4:	e014      	b.n	80064e0 <HAL_RCCEx_PeriphCLKConfig+0x300>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80064b6:	f7fc fea5 	bl	8003204 <HAL_GetTick>
 80064ba:	4602      	mov	r2, r0
 80064bc:	697b      	ldr	r3, [r7, #20]
 80064be:	1ad3      	subs	r3, r2, r3
 80064c0:	f241 3288 	movw	r2, #5000	; 0x1388
 80064c4:	4293      	cmp	r3, r2
 80064c6:	d90b      	bls.n	80064e0 <HAL_RCCEx_PeriphCLKConfig+0x300>
          {
            return HAL_TIMEOUT;
 80064c8:	2303      	movs	r3, #3
 80064ca:	e03f      	b.n	800654c <HAL_RCCEx_PeriphCLKConfig+0x36c>
 80064cc:	42470068 	.word	0x42470068
 80064d0:	40023800 	.word	0x40023800
 80064d4:	42470070 	.word	0x42470070
 80064d8:	40007000 	.word	0x40007000
 80064dc:	42470e40 	.word	0x42470e40
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80064e0:	4b1c      	ldr	r3, [pc, #112]	; (8006554 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80064e2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80064e4:	f003 0302 	and.w	r3, r3, #2
 80064e8:	2b00      	cmp	r3, #0
 80064ea:	d0e4      	beq.n	80064b6 <HAL_RCCEx_PeriphCLKConfig+0x2d6>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80064ec:	687b      	ldr	r3, [r7, #4]
 80064ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80064f0:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80064f4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80064f8:	d10d      	bne.n	8006516 <HAL_RCCEx_PeriphCLKConfig+0x336>
 80064fa:	4b16      	ldr	r3, [pc, #88]	; (8006554 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80064fc:	689b      	ldr	r3, [r3, #8]
 80064fe:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8006502:	687b      	ldr	r3, [r7, #4]
 8006504:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006506:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 800650a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800650e:	4911      	ldr	r1, [pc, #68]	; (8006554 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006510:	4313      	orrs	r3, r2
 8006512:	608b      	str	r3, [r1, #8]
 8006514:	e005      	b.n	8006522 <HAL_RCCEx_PeriphCLKConfig+0x342>
 8006516:	4b0f      	ldr	r3, [pc, #60]	; (8006554 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006518:	689b      	ldr	r3, [r3, #8]
 800651a:	4a0e      	ldr	r2, [pc, #56]	; (8006554 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 800651c:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8006520:	6093      	str	r3, [r2, #8]
 8006522:	4b0c      	ldr	r3, [pc, #48]	; (8006554 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006524:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8006526:	687b      	ldr	r3, [r7, #4]
 8006528:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800652a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800652e:	4909      	ldr	r1, [pc, #36]	; (8006554 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8006530:	4313      	orrs	r3, r2
 8006532:	670b      	str	r3, [r1, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006534:	687b      	ldr	r3, [r7, #4]
 8006536:	681b      	ldr	r3, [r3, #0]
 8006538:	f003 0310 	and.w	r3, r3, #16
 800653c:	2b00      	cmp	r3, #0
 800653e:	d004      	beq.n	800654a <HAL_RCCEx_PeriphCLKConfig+0x36a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006540:	687b      	ldr	r3, [r7, #4]
 8006542:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
 8006546:	4b04      	ldr	r3, [pc, #16]	; (8006558 <HAL_RCCEx_PeriphCLKConfig+0x378>)
 8006548:	601a      	str	r2, [r3, #0]
  }
  return HAL_OK;
 800654a:	2300      	movs	r3, #0
}
 800654c:	4618      	mov	r0, r3
 800654e:	3718      	adds	r7, #24
 8006550:	46bd      	mov	sp, r7
 8006552:	bd80      	pop	{r7, pc}
 8006554:	40023800 	.word	0x40023800
 8006558:	424711e0 	.word	0x424711e0

0800655c <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 800655c:	b580      	push	{r7, lr}
 800655e:	b082      	sub	sp, #8
 8006560:	af00      	add	r7, sp, #0
 8006562:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8006564:	687b      	ldr	r3, [r7, #4]
 8006566:	2b00      	cmp	r3, #0
 8006568:	d101      	bne.n	800656e <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 800656a:	2301      	movs	r3, #1
 800656c:	e056      	b.n	800661c <HAL_SPI_Init+0xc0>
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800656e:	687b      	ldr	r3, [r7, #4]
 8006570:	2200      	movs	r2, #0
 8006572:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8006574:	687b      	ldr	r3, [r7, #4]
 8006576:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800657a:	b2db      	uxtb	r3, r3
 800657c:	2b00      	cmp	r3, #0
 800657e:	d106      	bne.n	800658e <HAL_SPI_Init+0x32>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8006580:	687b      	ldr	r3, [r7, #4]
 8006582:	2200      	movs	r2, #0
 8006584:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8006588:	6878      	ldr	r0, [r7, #4]
 800658a:	f7fb fe09 	bl	80021a0 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 800658e:	687b      	ldr	r3, [r7, #4]
 8006590:	2202      	movs	r2, #2
 8006592:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8006596:	687b      	ldr	r3, [r7, #4]
 8006598:	681b      	ldr	r3, [r3, #0]
 800659a:	681a      	ldr	r2, [r3, #0]
 800659c:	687b      	ldr	r3, [r7, #4]
 800659e:	681b      	ldr	r3, [r3, #0]
 80065a0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80065a4:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 80065a6:	687b      	ldr	r3, [r7, #4]
 80065a8:	685a      	ldr	r2, [r3, #4]
 80065aa:	687b      	ldr	r3, [r7, #4]
 80065ac:	689b      	ldr	r3, [r3, #8]
 80065ae:	431a      	orrs	r2, r3
 80065b0:	687b      	ldr	r3, [r7, #4]
 80065b2:	68db      	ldr	r3, [r3, #12]
 80065b4:	431a      	orrs	r2, r3
 80065b6:	687b      	ldr	r3, [r7, #4]
 80065b8:	691b      	ldr	r3, [r3, #16]
 80065ba:	431a      	orrs	r2, r3
 80065bc:	687b      	ldr	r3, [r7, #4]
 80065be:	695b      	ldr	r3, [r3, #20]
 80065c0:	431a      	orrs	r2, r3
 80065c2:	687b      	ldr	r3, [r7, #4]
 80065c4:	699b      	ldr	r3, [r3, #24]
 80065c6:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80065ca:	431a      	orrs	r2, r3
 80065cc:	687b      	ldr	r3, [r7, #4]
 80065ce:	69db      	ldr	r3, [r3, #28]
 80065d0:	431a      	orrs	r2, r3
 80065d2:	687b      	ldr	r3, [r7, #4]
 80065d4:	6a1b      	ldr	r3, [r3, #32]
 80065d6:	ea42 0103 	orr.w	r1, r2, r3
 80065da:	687b      	ldr	r3, [r7, #4]
 80065dc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80065de:	687b      	ldr	r3, [r7, #4]
 80065e0:	681b      	ldr	r3, [r3, #0]
 80065e2:	430a      	orrs	r2, r1
 80065e4:	601a      	str	r2, [r3, #0]
                                  hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & SPI_CR1_SSM) |
                                  hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.CRCCalculation));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 80065e6:	687b      	ldr	r3, [r7, #4]
 80065e8:	699b      	ldr	r3, [r3, #24]
 80065ea:	0c1b      	lsrs	r3, r3, #16
 80065ec:	f003 0104 	and.w	r1, r3, #4
 80065f0:	687b      	ldr	r3, [r7, #4]
 80065f2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80065f4:	687b      	ldr	r3, [r7, #4]
 80065f6:	681b      	ldr	r3, [r3, #0]
 80065f8:	430a      	orrs	r2, r1
 80065fa:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80065fc:	687b      	ldr	r3, [r7, #4]
 80065fe:	681b      	ldr	r3, [r3, #0]
 8006600:	69da      	ldr	r2, [r3, #28]
 8006602:	687b      	ldr	r3, [r7, #4]
 8006604:	681b      	ldr	r3, [r3, #0]
 8006606:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800660a:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800660c:	687b      	ldr	r3, [r7, #4]
 800660e:	2200      	movs	r2, #0
 8006610:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8006612:	687b      	ldr	r3, [r7, #4]
 8006614:	2201      	movs	r2, #1
 8006616:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 800661a:	2300      	movs	r3, #0
}
 800661c:	4618      	mov	r0, r3
 800661e:	3708      	adds	r7, #8
 8006620:	46bd      	mov	sp, r7
 8006622:	bd80      	pop	{r7, pc}

08006624 <HAL_SPI_DeInit>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
{
 8006624:	b580      	push	{r7, lr}
 8006626:	b082      	sub	sp, #8
 8006628:	af00      	add	r7, sp, #0
 800662a:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 800662c:	687b      	ldr	r3, [r7, #4]
 800662e:	2b00      	cmp	r3, #0
 8006630:	d101      	bne.n	8006636 <HAL_SPI_DeInit+0x12>
  {
    return HAL_ERROR;
 8006632:	2301      	movs	r3, #1
 8006634:	e01a      	b.n	800666c <HAL_SPI_DeInit+0x48>
  }

  /* Check SPI Instance parameter */
  assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));

  hspi->State = HAL_SPI_STATE_BUSY;
 8006636:	687b      	ldr	r3, [r7, #4]
 8006638:	2202      	movs	r2, #2
 800663a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the SPI Peripheral Clock */
  __HAL_SPI_DISABLE(hspi);
 800663e:	687b      	ldr	r3, [r7, #4]
 8006640:	681b      	ldr	r3, [r3, #0]
 8006642:	681a      	ldr	r2, [r3, #0]
 8006644:	687b      	ldr	r3, [r7, #4]
 8006646:	681b      	ldr	r3, [r3, #0]
 8006648:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800664c:	601a      	str	r2, [r3, #0]

  /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
  hspi->MspDeInitCallback(hspi);
#else
  /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
  HAL_SPI_MspDeInit(hspi);
 800664e:	6878      	ldr	r0, [r7, #4]
 8006650:	f7fb fdee 	bl	8002230 <HAL_SPI_MspDeInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006654:	687b      	ldr	r3, [r7, #4]
 8006656:	2200      	movs	r2, #0
 8006658:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State = HAL_SPI_STATE_RESET;
 800665a:	687b      	ldr	r3, [r7, #4]
 800665c:	2200      	movs	r2, #0
 800665e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Release Lock */
  __HAL_UNLOCK(hspi);
 8006662:	687b      	ldr	r3, [r7, #4]
 8006664:	2200      	movs	r2, #0
 8006666:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  return HAL_OK;
 800666a:	2300      	movs	r3, #0
}
 800666c:	4618      	mov	r0, r3
 800666e:	3708      	adds	r7, #8
 8006670:	46bd      	mov	sp, r7
 8006672:	bd80      	pop	{r7, pc}

08006674 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8006674:	b580      	push	{r7, lr}
 8006676:	b088      	sub	sp, #32
 8006678:	af00      	add	r7, sp, #0
 800667a:	60f8      	str	r0, [r7, #12]
 800667c:	60b9      	str	r1, [r7, #8]
 800667e:	603b      	str	r3, [r7, #0]
 8006680:	4613      	mov	r3, r2
 8006682:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8006684:	2300      	movs	r3, #0
 8006686:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006688:	68fb      	ldr	r3, [r7, #12]
 800668a:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800668e:	2b01      	cmp	r3, #1
 8006690:	d101      	bne.n	8006696 <HAL_SPI_Transmit+0x22>
 8006692:	2302      	movs	r3, #2
 8006694:	e11e      	b.n	80068d4 <HAL_SPI_Transmit+0x260>
 8006696:	68fb      	ldr	r3, [r7, #12]
 8006698:	2201      	movs	r2, #1
 800669a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800669e:	f7fc fdb1 	bl	8003204 <HAL_GetTick>
 80066a2:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 80066a4:	88fb      	ldrh	r3, [r7, #6]
 80066a6:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 80066a8:	68fb      	ldr	r3, [r7, #12]
 80066aa:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80066ae:	b2db      	uxtb	r3, r3
 80066b0:	2b01      	cmp	r3, #1
 80066b2:	d002      	beq.n	80066ba <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 80066b4:	2302      	movs	r3, #2
 80066b6:	77fb      	strb	r3, [r7, #31]
    goto error;
 80066b8:	e103      	b.n	80068c2 <HAL_SPI_Transmit+0x24e>
  }

  if ((pData == NULL) || (Size == 0U))
 80066ba:	68bb      	ldr	r3, [r7, #8]
 80066bc:	2b00      	cmp	r3, #0
 80066be:	d002      	beq.n	80066c6 <HAL_SPI_Transmit+0x52>
 80066c0:	88fb      	ldrh	r3, [r7, #6]
 80066c2:	2b00      	cmp	r3, #0
 80066c4:	d102      	bne.n	80066cc <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 80066c6:	2301      	movs	r3, #1
 80066c8:	77fb      	strb	r3, [r7, #31]
    goto error;
 80066ca:	e0fa      	b.n	80068c2 <HAL_SPI_Transmit+0x24e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80066cc:	68fb      	ldr	r3, [r7, #12]
 80066ce:	2203      	movs	r2, #3
 80066d0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80066d4:	68fb      	ldr	r3, [r7, #12]
 80066d6:	2200      	movs	r2, #0
 80066d8:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80066da:	68fb      	ldr	r3, [r7, #12]
 80066dc:	68ba      	ldr	r2, [r7, #8]
 80066de:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 80066e0:	68fb      	ldr	r3, [r7, #12]
 80066e2:	88fa      	ldrh	r2, [r7, #6]
 80066e4:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 80066e6:	68fb      	ldr	r3, [r7, #12]
 80066e8:	88fa      	ldrh	r2, [r7, #6]
 80066ea:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80066ec:	68fb      	ldr	r3, [r7, #12]
 80066ee:	2200      	movs	r2, #0
 80066f0:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 80066f2:	68fb      	ldr	r3, [r7, #12]
 80066f4:	2200      	movs	r2, #0
 80066f6:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 80066f8:	68fb      	ldr	r3, [r7, #12]
 80066fa:	2200      	movs	r2, #0
 80066fc:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 80066fe:	68fb      	ldr	r3, [r7, #12]
 8006700:	2200      	movs	r2, #0
 8006702:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 8006704:	68fb      	ldr	r3, [r7, #12]
 8006706:	2200      	movs	r2, #0
 8006708:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800670a:	68fb      	ldr	r3, [r7, #12]
 800670c:	689b      	ldr	r3, [r3, #8]
 800670e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006712:	d107      	bne.n	8006724 <HAL_SPI_Transmit+0xb0>
  {
    SPI_1LINE_TX(hspi);
 8006714:	68fb      	ldr	r3, [r7, #12]
 8006716:	681b      	ldr	r3, [r3, #0]
 8006718:	681a      	ldr	r2, [r3, #0]
 800671a:	68fb      	ldr	r3, [r7, #12]
 800671c:	681b      	ldr	r3, [r3, #0]
 800671e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8006722:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006724:	68fb      	ldr	r3, [r7, #12]
 8006726:	681b      	ldr	r3, [r3, #0]
 8006728:	681b      	ldr	r3, [r3, #0]
 800672a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800672e:	2b40      	cmp	r3, #64	; 0x40
 8006730:	d007      	beq.n	8006742 <HAL_SPI_Transmit+0xce>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8006732:	68fb      	ldr	r3, [r7, #12]
 8006734:	681b      	ldr	r3, [r3, #0]
 8006736:	681a      	ldr	r2, [r3, #0]
 8006738:	68fb      	ldr	r3, [r7, #12]
 800673a:	681b      	ldr	r3, [r3, #0]
 800673c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006740:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006742:	68fb      	ldr	r3, [r7, #12]
 8006744:	68db      	ldr	r3, [r3, #12]
 8006746:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800674a:	d14b      	bne.n	80067e4 <HAL_SPI_Transmit+0x170>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800674c:	68fb      	ldr	r3, [r7, #12]
 800674e:	685b      	ldr	r3, [r3, #4]
 8006750:	2b00      	cmp	r3, #0
 8006752:	d002      	beq.n	800675a <HAL_SPI_Transmit+0xe6>
 8006754:	8afb      	ldrh	r3, [r7, #22]
 8006756:	2b01      	cmp	r3, #1
 8006758:	d13e      	bne.n	80067d8 <HAL_SPI_Transmit+0x164>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800675a:	68fb      	ldr	r3, [r7, #12]
 800675c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800675e:	881a      	ldrh	r2, [r3, #0]
 8006760:	68fb      	ldr	r3, [r7, #12]
 8006762:	681b      	ldr	r3, [r3, #0]
 8006764:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006766:	68fb      	ldr	r3, [r7, #12]
 8006768:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800676a:	1c9a      	adds	r2, r3, #2
 800676c:	68fb      	ldr	r3, [r7, #12]
 800676e:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8006770:	68fb      	ldr	r3, [r7, #12]
 8006772:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006774:	b29b      	uxth	r3, r3
 8006776:	3b01      	subs	r3, #1
 8006778:	b29a      	uxth	r2, r3
 800677a:	68fb      	ldr	r3, [r7, #12]
 800677c:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 800677e:	e02b      	b.n	80067d8 <HAL_SPI_Transmit+0x164>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006780:	68fb      	ldr	r3, [r7, #12]
 8006782:	681b      	ldr	r3, [r3, #0]
 8006784:	689b      	ldr	r3, [r3, #8]
 8006786:	f003 0302 	and.w	r3, r3, #2
 800678a:	2b02      	cmp	r3, #2
 800678c:	d112      	bne.n	80067b4 <HAL_SPI_Transmit+0x140>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800678e:	68fb      	ldr	r3, [r7, #12]
 8006790:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006792:	881a      	ldrh	r2, [r3, #0]
 8006794:	68fb      	ldr	r3, [r7, #12]
 8006796:	681b      	ldr	r3, [r3, #0]
 8006798:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800679a:	68fb      	ldr	r3, [r7, #12]
 800679c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800679e:	1c9a      	adds	r2, r3, #2
 80067a0:	68fb      	ldr	r3, [r7, #12]
 80067a2:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 80067a4:	68fb      	ldr	r3, [r7, #12]
 80067a6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80067a8:	b29b      	uxth	r3, r3
 80067aa:	3b01      	subs	r3, #1
 80067ac:	b29a      	uxth	r2, r3
 80067ae:	68fb      	ldr	r3, [r7, #12]
 80067b0:	86da      	strh	r2, [r3, #54]	; 0x36
 80067b2:	e011      	b.n	80067d8 <HAL_SPI_Transmit+0x164>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80067b4:	f7fc fd26 	bl	8003204 <HAL_GetTick>
 80067b8:	4602      	mov	r2, r0
 80067ba:	69bb      	ldr	r3, [r7, #24]
 80067bc:	1ad3      	subs	r3, r2, r3
 80067be:	683a      	ldr	r2, [r7, #0]
 80067c0:	429a      	cmp	r2, r3
 80067c2:	d803      	bhi.n	80067cc <HAL_SPI_Transmit+0x158>
 80067c4:	683b      	ldr	r3, [r7, #0]
 80067c6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80067ca:	d102      	bne.n	80067d2 <HAL_SPI_Transmit+0x15e>
 80067cc:	683b      	ldr	r3, [r7, #0]
 80067ce:	2b00      	cmp	r3, #0
 80067d0:	d102      	bne.n	80067d8 <HAL_SPI_Transmit+0x164>
        {
          errorcode = HAL_TIMEOUT;
 80067d2:	2303      	movs	r3, #3
 80067d4:	77fb      	strb	r3, [r7, #31]
          goto error;
 80067d6:	e074      	b.n	80068c2 <HAL_SPI_Transmit+0x24e>
    while (hspi->TxXferCount > 0U)
 80067d8:	68fb      	ldr	r3, [r7, #12]
 80067da:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80067dc:	b29b      	uxth	r3, r3
 80067de:	2b00      	cmp	r3, #0
 80067e0:	d1ce      	bne.n	8006780 <HAL_SPI_Transmit+0x10c>
 80067e2:	e04c      	b.n	800687e <HAL_SPI_Transmit+0x20a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80067e4:	68fb      	ldr	r3, [r7, #12]
 80067e6:	685b      	ldr	r3, [r3, #4]
 80067e8:	2b00      	cmp	r3, #0
 80067ea:	d002      	beq.n	80067f2 <HAL_SPI_Transmit+0x17e>
 80067ec:	8afb      	ldrh	r3, [r7, #22]
 80067ee:	2b01      	cmp	r3, #1
 80067f0:	d140      	bne.n	8006874 <HAL_SPI_Transmit+0x200>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80067f2:	68fb      	ldr	r3, [r7, #12]
 80067f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80067f6:	68fb      	ldr	r3, [r7, #12]
 80067f8:	681b      	ldr	r3, [r3, #0]
 80067fa:	330c      	adds	r3, #12
 80067fc:	7812      	ldrb	r2, [r2, #0]
 80067fe:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006800:	68fb      	ldr	r3, [r7, #12]
 8006802:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006804:	1c5a      	adds	r2, r3, #1
 8006806:	68fb      	ldr	r3, [r7, #12]
 8006808:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 800680a:	68fb      	ldr	r3, [r7, #12]
 800680c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800680e:	b29b      	uxth	r3, r3
 8006810:	3b01      	subs	r3, #1
 8006812:	b29a      	uxth	r2, r3
 8006814:	68fb      	ldr	r3, [r7, #12]
 8006816:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 8006818:	e02c      	b.n	8006874 <HAL_SPI_Transmit+0x200>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800681a:	68fb      	ldr	r3, [r7, #12]
 800681c:	681b      	ldr	r3, [r3, #0]
 800681e:	689b      	ldr	r3, [r3, #8]
 8006820:	f003 0302 	and.w	r3, r3, #2
 8006824:	2b02      	cmp	r3, #2
 8006826:	d113      	bne.n	8006850 <HAL_SPI_Transmit+0x1dc>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006828:	68fb      	ldr	r3, [r7, #12]
 800682a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800682c:	68fb      	ldr	r3, [r7, #12]
 800682e:	681b      	ldr	r3, [r3, #0]
 8006830:	330c      	adds	r3, #12
 8006832:	7812      	ldrb	r2, [r2, #0]
 8006834:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8006836:	68fb      	ldr	r3, [r7, #12]
 8006838:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800683a:	1c5a      	adds	r2, r3, #1
 800683c:	68fb      	ldr	r3, [r7, #12]
 800683e:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8006840:	68fb      	ldr	r3, [r7, #12]
 8006842:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006844:	b29b      	uxth	r3, r3
 8006846:	3b01      	subs	r3, #1
 8006848:	b29a      	uxth	r2, r3
 800684a:	68fb      	ldr	r3, [r7, #12]
 800684c:	86da      	strh	r2, [r3, #54]	; 0x36
 800684e:	e011      	b.n	8006874 <HAL_SPI_Transmit+0x200>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006850:	f7fc fcd8 	bl	8003204 <HAL_GetTick>
 8006854:	4602      	mov	r2, r0
 8006856:	69bb      	ldr	r3, [r7, #24]
 8006858:	1ad3      	subs	r3, r2, r3
 800685a:	683a      	ldr	r2, [r7, #0]
 800685c:	429a      	cmp	r2, r3
 800685e:	d803      	bhi.n	8006868 <HAL_SPI_Transmit+0x1f4>
 8006860:	683b      	ldr	r3, [r7, #0]
 8006862:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006866:	d102      	bne.n	800686e <HAL_SPI_Transmit+0x1fa>
 8006868:	683b      	ldr	r3, [r7, #0]
 800686a:	2b00      	cmp	r3, #0
 800686c:	d102      	bne.n	8006874 <HAL_SPI_Transmit+0x200>
        {
          errorcode = HAL_TIMEOUT;
 800686e:	2303      	movs	r3, #3
 8006870:	77fb      	strb	r3, [r7, #31]
          goto error;
 8006872:	e026      	b.n	80068c2 <HAL_SPI_Transmit+0x24e>
    while (hspi->TxXferCount > 0U)
 8006874:	68fb      	ldr	r3, [r7, #12]
 8006876:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006878:	b29b      	uxth	r3, r3
 800687a:	2b00      	cmp	r3, #0
 800687c:	d1cd      	bne.n	800681a <HAL_SPI_Transmit+0x1a6>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800687e:	69ba      	ldr	r2, [r7, #24]
 8006880:	6839      	ldr	r1, [r7, #0]
 8006882:	68f8      	ldr	r0, [r7, #12]
 8006884:	f000 fba4 	bl	8006fd0 <SPI_EndRxTxTransaction>
 8006888:	4603      	mov	r3, r0
 800688a:	2b00      	cmp	r3, #0
 800688c:	d002      	beq.n	8006894 <HAL_SPI_Transmit+0x220>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800688e:	68fb      	ldr	r3, [r7, #12]
 8006890:	2220      	movs	r2, #32
 8006892:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006894:	68fb      	ldr	r3, [r7, #12]
 8006896:	689b      	ldr	r3, [r3, #8]
 8006898:	2b00      	cmp	r3, #0
 800689a:	d10a      	bne.n	80068b2 <HAL_SPI_Transmit+0x23e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800689c:	2300      	movs	r3, #0
 800689e:	613b      	str	r3, [r7, #16]
 80068a0:	68fb      	ldr	r3, [r7, #12]
 80068a2:	681b      	ldr	r3, [r3, #0]
 80068a4:	68db      	ldr	r3, [r3, #12]
 80068a6:	613b      	str	r3, [r7, #16]
 80068a8:	68fb      	ldr	r3, [r7, #12]
 80068aa:	681b      	ldr	r3, [r3, #0]
 80068ac:	689b      	ldr	r3, [r3, #8]
 80068ae:	613b      	str	r3, [r7, #16]
 80068b0:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80068b2:	68fb      	ldr	r3, [r7, #12]
 80068b4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80068b6:	2b00      	cmp	r3, #0
 80068b8:	d002      	beq.n	80068c0 <HAL_SPI_Transmit+0x24c>
  {
    errorcode = HAL_ERROR;
 80068ba:	2301      	movs	r3, #1
 80068bc:	77fb      	strb	r3, [r7, #31]
 80068be:	e000      	b.n	80068c2 <HAL_SPI_Transmit+0x24e>
  }

error:
 80068c0:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 80068c2:	68fb      	ldr	r3, [r7, #12]
 80068c4:	2201      	movs	r2, #1
 80068c6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 80068ca:	68fb      	ldr	r3, [r7, #12]
 80068cc:	2200      	movs	r2, #0
 80068ce:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 80068d2:	7ffb      	ldrb	r3, [r7, #31]
}
 80068d4:	4618      	mov	r0, r3
 80068d6:	3720      	adds	r7, #32
 80068d8:	46bd      	mov	sp, r7
 80068da:	bd80      	pop	{r7, pc}

080068dc <HAL_SPI_Receive>:
  * @param  Size amount of data to be received
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80068dc:	b580      	push	{r7, lr}
 80068de:	b088      	sub	sp, #32
 80068e0:	af02      	add	r7, sp, #8
 80068e2:	60f8      	str	r0, [r7, #12]
 80068e4:	60b9      	str	r1, [r7, #8]
 80068e6:	603b      	str	r3, [r7, #0]
 80068e8:	4613      	mov	r3, r2
 80068ea:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 80068ec:	2300      	movs	r3, #0
 80068ee:	75fb      	strb	r3, [r7, #23]

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80068f0:	68fb      	ldr	r3, [r7, #12]
 80068f2:	685b      	ldr	r3, [r3, #4]
 80068f4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80068f8:	d112      	bne.n	8006920 <HAL_SPI_Receive+0x44>
 80068fa:	68fb      	ldr	r3, [r7, #12]
 80068fc:	689b      	ldr	r3, [r3, #8]
 80068fe:	2b00      	cmp	r3, #0
 8006900:	d10e      	bne.n	8006920 <HAL_SPI_Receive+0x44>
  {
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006902:	68fb      	ldr	r3, [r7, #12]
 8006904:	2204      	movs	r2, #4
 8006906:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
    /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line */
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800690a:	88fa      	ldrh	r2, [r7, #6]
 800690c:	683b      	ldr	r3, [r7, #0]
 800690e:	9300      	str	r3, [sp, #0]
 8006910:	4613      	mov	r3, r2
 8006912:	68ba      	ldr	r2, [r7, #8]
 8006914:	68b9      	ldr	r1, [r7, #8]
 8006916:	68f8      	ldr	r0, [r7, #12]
 8006918:	f000 f8e9 	bl	8006aee <HAL_SPI_TransmitReceive>
 800691c:	4603      	mov	r3, r0
 800691e:	e0e2      	b.n	8006ae6 <HAL_SPI_Receive+0x20a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006920:	68fb      	ldr	r3, [r7, #12]
 8006922:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8006926:	2b01      	cmp	r3, #1
 8006928:	d101      	bne.n	800692e <HAL_SPI_Receive+0x52>
 800692a:	2302      	movs	r3, #2
 800692c:	e0db      	b.n	8006ae6 <HAL_SPI_Receive+0x20a>
 800692e:	68fb      	ldr	r3, [r7, #12]
 8006930:	2201      	movs	r2, #1
 8006932:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006936:	f7fc fc65 	bl	8003204 <HAL_GetTick>
 800693a:	6138      	str	r0, [r7, #16]

  if (hspi->State != HAL_SPI_STATE_READY)
 800693c:	68fb      	ldr	r3, [r7, #12]
 800693e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006942:	b2db      	uxtb	r3, r3
 8006944:	2b01      	cmp	r3, #1
 8006946:	d002      	beq.n	800694e <HAL_SPI_Receive+0x72>
  {
    errorcode = HAL_BUSY;
 8006948:	2302      	movs	r3, #2
 800694a:	75fb      	strb	r3, [r7, #23]
    goto error;
 800694c:	e0c2      	b.n	8006ad4 <HAL_SPI_Receive+0x1f8>
  }

  if ((pData == NULL) || (Size == 0U))
 800694e:	68bb      	ldr	r3, [r7, #8]
 8006950:	2b00      	cmp	r3, #0
 8006952:	d002      	beq.n	800695a <HAL_SPI_Receive+0x7e>
 8006954:	88fb      	ldrh	r3, [r7, #6]
 8006956:	2b00      	cmp	r3, #0
 8006958:	d102      	bne.n	8006960 <HAL_SPI_Receive+0x84>
  {
    errorcode = HAL_ERROR;
 800695a:	2301      	movs	r3, #1
 800695c:	75fb      	strb	r3, [r7, #23]
    goto error;
 800695e:	e0b9      	b.n	8006ad4 <HAL_SPI_Receive+0x1f8>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006960:	68fb      	ldr	r3, [r7, #12]
 8006962:	2204      	movs	r2, #4
 8006964:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006968:	68fb      	ldr	r3, [r7, #12]
 800696a:	2200      	movs	r2, #0
 800696c:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800696e:	68fb      	ldr	r3, [r7, #12]
 8006970:	68ba      	ldr	r2, [r7, #8]
 8006972:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = Size;
 8006974:	68fb      	ldr	r3, [r7, #12]
 8006976:	88fa      	ldrh	r2, [r7, #6]
 8006978:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = Size;
 800697a:	68fb      	ldr	r3, [r7, #12]
 800697c:	88fa      	ldrh	r2, [r7, #6]
 800697e:	87da      	strh	r2, [r3, #62]	; 0x3e

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8006980:	68fb      	ldr	r3, [r7, #12]
 8006982:	2200      	movs	r2, #0
 8006984:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 8006986:	68fb      	ldr	r3, [r7, #12]
 8006988:	2200      	movs	r2, #0
 800698a:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = 0U;
 800698c:	68fb      	ldr	r3, [r7, #12]
 800698e:	2200      	movs	r2, #0
 8006990:	86da      	strh	r2, [r3, #54]	; 0x36
  hspi->RxISR       = NULL;
 8006992:	68fb      	ldr	r3, [r7, #12]
 8006994:	2200      	movs	r2, #0
 8006996:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->TxISR       = NULL;
 8006998:	68fb      	ldr	r3, [r7, #12]
 800699a:	2200      	movs	r2, #0
 800699c:	645a      	str	r2, [r3, #68]	; 0x44
    hspi->RxXferCount--;
  }
#endif /* USE_SPI_CRC */

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800699e:	68fb      	ldr	r3, [r7, #12]
 80069a0:	689b      	ldr	r3, [r3, #8]
 80069a2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80069a6:	d107      	bne.n	80069b8 <HAL_SPI_Receive+0xdc>
  {
    SPI_1LINE_RX(hspi);
 80069a8:	68fb      	ldr	r3, [r7, #12]
 80069aa:	681b      	ldr	r3, [r3, #0]
 80069ac:	681a      	ldr	r2, [r3, #0]
 80069ae:	68fb      	ldr	r3, [r7, #12]
 80069b0:	681b      	ldr	r3, [r3, #0]
 80069b2:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80069b6:	601a      	str	r2, [r3, #0]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80069b8:	68fb      	ldr	r3, [r7, #12]
 80069ba:	681b      	ldr	r3, [r3, #0]
 80069bc:	681b      	ldr	r3, [r3, #0]
 80069be:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80069c2:	2b40      	cmp	r3, #64	; 0x40
 80069c4:	d007      	beq.n	80069d6 <HAL_SPI_Receive+0xfa>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80069c6:	68fb      	ldr	r3, [r7, #12]
 80069c8:	681b      	ldr	r3, [r3, #0]
 80069ca:	681a      	ldr	r2, [r3, #0]
 80069cc:	68fb      	ldr	r3, [r7, #12]
 80069ce:	681b      	ldr	r3, [r3, #0]
 80069d0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80069d4:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 8 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80069d6:	68fb      	ldr	r3, [r7, #12]
 80069d8:	68db      	ldr	r3, [r3, #12]
 80069da:	2b00      	cmp	r3, #0
 80069dc:	d162      	bne.n	8006aa4 <HAL_SPI_Receive+0x1c8>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
 80069de:	e02e      	b.n	8006a3e <HAL_SPI_Receive+0x162>
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80069e0:	68fb      	ldr	r3, [r7, #12]
 80069e2:	681b      	ldr	r3, [r3, #0]
 80069e4:	689b      	ldr	r3, [r3, #8]
 80069e6:	f003 0301 	and.w	r3, r3, #1
 80069ea:	2b01      	cmp	r3, #1
 80069ec:	d115      	bne.n	8006a1a <HAL_SPI_Receive+0x13e>
      {
        /* read the received data */
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80069ee:	68fb      	ldr	r3, [r7, #12]
 80069f0:	681b      	ldr	r3, [r3, #0]
 80069f2:	f103 020c 	add.w	r2, r3, #12
 80069f6:	68fb      	ldr	r3, [r7, #12]
 80069f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80069fa:	7812      	ldrb	r2, [r2, #0]
 80069fc:	b2d2      	uxtb	r2, r2
 80069fe:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8006a00:	68fb      	ldr	r3, [r7, #12]
 8006a02:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006a04:	1c5a      	adds	r2, r3, #1
 8006a06:	68fb      	ldr	r3, [r7, #12]
 8006a08:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8006a0a:	68fb      	ldr	r3, [r7, #12]
 8006a0c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006a0e:	b29b      	uxth	r3, r3
 8006a10:	3b01      	subs	r3, #1
 8006a12:	b29a      	uxth	r2, r3
 8006a14:	68fb      	ldr	r3, [r7, #12]
 8006a16:	87da      	strh	r2, [r3, #62]	; 0x3e
 8006a18:	e011      	b.n	8006a3e <HAL_SPI_Receive+0x162>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006a1a:	f7fc fbf3 	bl	8003204 <HAL_GetTick>
 8006a1e:	4602      	mov	r2, r0
 8006a20:	693b      	ldr	r3, [r7, #16]
 8006a22:	1ad3      	subs	r3, r2, r3
 8006a24:	683a      	ldr	r2, [r7, #0]
 8006a26:	429a      	cmp	r2, r3
 8006a28:	d803      	bhi.n	8006a32 <HAL_SPI_Receive+0x156>
 8006a2a:	683b      	ldr	r3, [r7, #0]
 8006a2c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006a30:	d102      	bne.n	8006a38 <HAL_SPI_Receive+0x15c>
 8006a32:	683b      	ldr	r3, [r7, #0]
 8006a34:	2b00      	cmp	r3, #0
 8006a36:	d102      	bne.n	8006a3e <HAL_SPI_Receive+0x162>
        {
          errorcode = HAL_TIMEOUT;
 8006a38:	2303      	movs	r3, #3
 8006a3a:	75fb      	strb	r3, [r7, #23]
          goto error;
 8006a3c:	e04a      	b.n	8006ad4 <HAL_SPI_Receive+0x1f8>
    while (hspi->RxXferCount > 0U)
 8006a3e:	68fb      	ldr	r3, [r7, #12]
 8006a40:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006a42:	b29b      	uxth	r3, r3
 8006a44:	2b00      	cmp	r3, #0
 8006a46:	d1cb      	bne.n	80069e0 <HAL_SPI_Receive+0x104>
 8006a48:	e031      	b.n	8006aae <HAL_SPI_Receive+0x1d2>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006a4a:	68fb      	ldr	r3, [r7, #12]
 8006a4c:	681b      	ldr	r3, [r3, #0]
 8006a4e:	689b      	ldr	r3, [r3, #8]
 8006a50:	f003 0301 	and.w	r3, r3, #1
 8006a54:	2b01      	cmp	r3, #1
 8006a56:	d113      	bne.n	8006a80 <HAL_SPI_Receive+0x1a4>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006a58:	68fb      	ldr	r3, [r7, #12]
 8006a5a:	681b      	ldr	r3, [r3, #0]
 8006a5c:	68da      	ldr	r2, [r3, #12]
 8006a5e:	68fb      	ldr	r3, [r7, #12]
 8006a60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006a62:	b292      	uxth	r2, r2
 8006a64:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006a66:	68fb      	ldr	r3, [r7, #12]
 8006a68:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006a6a:	1c9a      	adds	r2, r3, #2
 8006a6c:	68fb      	ldr	r3, [r7, #12]
 8006a6e:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8006a70:	68fb      	ldr	r3, [r7, #12]
 8006a72:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006a74:	b29b      	uxth	r3, r3
 8006a76:	3b01      	subs	r3, #1
 8006a78:	b29a      	uxth	r2, r3
 8006a7a:	68fb      	ldr	r3, [r7, #12]
 8006a7c:	87da      	strh	r2, [r3, #62]	; 0x3e
 8006a7e:	e011      	b.n	8006aa4 <HAL_SPI_Receive+0x1c8>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006a80:	f7fc fbc0 	bl	8003204 <HAL_GetTick>
 8006a84:	4602      	mov	r2, r0
 8006a86:	693b      	ldr	r3, [r7, #16]
 8006a88:	1ad3      	subs	r3, r2, r3
 8006a8a:	683a      	ldr	r2, [r7, #0]
 8006a8c:	429a      	cmp	r2, r3
 8006a8e:	d803      	bhi.n	8006a98 <HAL_SPI_Receive+0x1bc>
 8006a90:	683b      	ldr	r3, [r7, #0]
 8006a92:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006a96:	d102      	bne.n	8006a9e <HAL_SPI_Receive+0x1c2>
 8006a98:	683b      	ldr	r3, [r7, #0]
 8006a9a:	2b00      	cmp	r3, #0
 8006a9c:	d102      	bne.n	8006aa4 <HAL_SPI_Receive+0x1c8>
        {
          errorcode = HAL_TIMEOUT;
 8006a9e:	2303      	movs	r3, #3
 8006aa0:	75fb      	strb	r3, [r7, #23]
          goto error;
 8006aa2:	e017      	b.n	8006ad4 <HAL_SPI_Receive+0x1f8>
    while (hspi->RxXferCount > 0U)
 8006aa4:	68fb      	ldr	r3, [r7, #12]
 8006aa6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006aa8:	b29b      	uxth	r3, r3
 8006aaa:	2b00      	cmp	r3, #0
 8006aac:	d1cd      	bne.n	8006a4a <HAL_SPI_Receive+0x16e>
    READ_REG(hspi->Instance->DR);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006aae:	693a      	ldr	r2, [r7, #16]
 8006ab0:	6839      	ldr	r1, [r7, #0]
 8006ab2:	68f8      	ldr	r0, [r7, #12]
 8006ab4:	f000 fa27 	bl	8006f06 <SPI_EndRxTransaction>
 8006ab8:	4603      	mov	r3, r0
 8006aba:	2b00      	cmp	r3, #0
 8006abc:	d002      	beq.n	8006ac4 <HAL_SPI_Receive+0x1e8>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006abe:	68fb      	ldr	r3, [r7, #12]
 8006ac0:	2220      	movs	r2, #32
 8006ac2:	655a      	str	r2, [r3, #84]	; 0x54
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
    __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
  }
#endif /* USE_SPI_CRC */

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006ac4:	68fb      	ldr	r3, [r7, #12]
 8006ac6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006ac8:	2b00      	cmp	r3, #0
 8006aca:	d002      	beq.n	8006ad2 <HAL_SPI_Receive+0x1f6>
  {
    errorcode = HAL_ERROR;
 8006acc:	2301      	movs	r3, #1
 8006ace:	75fb      	strb	r3, [r7, #23]
 8006ad0:	e000      	b.n	8006ad4 <HAL_SPI_Receive+0x1f8>
  }

error :
 8006ad2:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 8006ad4:	68fb      	ldr	r3, [r7, #12]
 8006ad6:	2201      	movs	r2, #1
 8006ad8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006adc:	68fb      	ldr	r3, [r7, #12]
 8006ade:	2200      	movs	r2, #0
 8006ae0:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8006ae4:	7dfb      	ldrb	r3, [r7, #23]
}
 8006ae6:	4618      	mov	r0, r3
 8006ae8:	3718      	adds	r7, #24
 8006aea:	46bd      	mov	sp, r7
 8006aec:	bd80      	pop	{r7, pc}

08006aee <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxData, uint16_t Size,
                                          uint32_t Timeout)
{
 8006aee:	b580      	push	{r7, lr}
 8006af0:	b08c      	sub	sp, #48	; 0x30
 8006af2:	af00      	add	r7, sp, #0
 8006af4:	60f8      	str	r0, [r7, #12]
 8006af6:	60b9      	str	r1, [r7, #8]
 8006af8:	607a      	str	r2, [r7, #4]
 8006afa:	807b      	strh	r3, [r7, #2]
  uint32_t             tmp_mode;
  HAL_SPI_StateTypeDef tmp_state;
  uint32_t             tickstart;

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 8006afc:	2301      	movs	r3, #1
 8006afe:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_StatusTypeDef    errorcode = HAL_OK;
 8006b00:	2300      	movs	r3, #0
 8006b02:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006b06:	68fb      	ldr	r3, [r7, #12]
 8006b08:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8006b0c:	2b01      	cmp	r3, #1
 8006b0e:	d101      	bne.n	8006b14 <HAL_SPI_TransmitReceive+0x26>
 8006b10:	2302      	movs	r3, #2
 8006b12:	e18a      	b.n	8006e2a <HAL_SPI_TransmitReceive+0x33c>
 8006b14:	68fb      	ldr	r3, [r7, #12]
 8006b16:	2201      	movs	r2, #1
 8006b18:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006b1c:	f7fc fb72 	bl	8003204 <HAL_GetTick>
 8006b20:	6278      	str	r0, [r7, #36]	; 0x24

  /* Init temporary variables */
  tmp_state           = hspi->State;
 8006b22:	68fb      	ldr	r3, [r7, #12]
 8006b24:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006b28:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  tmp_mode            = hspi->Init.Mode;
 8006b2c:	68fb      	ldr	r3, [r7, #12]
 8006b2e:	685b      	ldr	r3, [r3, #4]
 8006b30:	61fb      	str	r3, [r7, #28]
  initial_TxXferCount = Size;
 8006b32:	887b      	ldrh	r3, [r7, #2]
 8006b34:	837b      	strh	r3, [r7, #26]

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006b36:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006b3a:	2b01      	cmp	r3, #1
 8006b3c:	d00f      	beq.n	8006b5e <HAL_SPI_TransmitReceive+0x70>
 8006b3e:	69fb      	ldr	r3, [r7, #28]
 8006b40:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006b44:	d107      	bne.n	8006b56 <HAL_SPI_TransmitReceive+0x68>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8006b46:	68fb      	ldr	r3, [r7, #12]
 8006b48:	689b      	ldr	r3, [r3, #8]
 8006b4a:	2b00      	cmp	r3, #0
 8006b4c:	d103      	bne.n	8006b56 <HAL_SPI_TransmitReceive+0x68>
 8006b4e:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006b52:	2b04      	cmp	r3, #4
 8006b54:	d003      	beq.n	8006b5e <HAL_SPI_TransmitReceive+0x70>
  {
    errorcode = HAL_BUSY;
 8006b56:	2302      	movs	r3, #2
 8006b58:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    goto error;
 8006b5c:	e15b      	b.n	8006e16 <HAL_SPI_TransmitReceive+0x328>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8006b5e:	68bb      	ldr	r3, [r7, #8]
 8006b60:	2b00      	cmp	r3, #0
 8006b62:	d005      	beq.n	8006b70 <HAL_SPI_TransmitReceive+0x82>
 8006b64:	687b      	ldr	r3, [r7, #4]
 8006b66:	2b00      	cmp	r3, #0
 8006b68:	d002      	beq.n	8006b70 <HAL_SPI_TransmitReceive+0x82>
 8006b6a:	887b      	ldrh	r3, [r7, #2]
 8006b6c:	2b00      	cmp	r3, #0
 8006b6e:	d103      	bne.n	8006b78 <HAL_SPI_TransmitReceive+0x8a>
  {
    errorcode = HAL_ERROR;
 8006b70:	2301      	movs	r3, #1
 8006b72:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    goto error;
 8006b76:	e14e      	b.n	8006e16 <HAL_SPI_TransmitReceive+0x328>
  }

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006b78:	68fb      	ldr	r3, [r7, #12]
 8006b7a:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006b7e:	b2db      	uxtb	r3, r3
 8006b80:	2b04      	cmp	r3, #4
 8006b82:	d003      	beq.n	8006b8c <HAL_SPI_TransmitReceive+0x9e>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006b84:	68fb      	ldr	r3, [r7, #12]
 8006b86:	2205      	movs	r2, #5
 8006b88:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006b8c:	68fb      	ldr	r3, [r7, #12]
 8006b8e:	2200      	movs	r2, #0
 8006b90:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006b92:	68fb      	ldr	r3, [r7, #12]
 8006b94:	687a      	ldr	r2, [r7, #4]
 8006b96:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferCount = Size;
 8006b98:	68fb      	ldr	r3, [r7, #12]
 8006b9a:	887a      	ldrh	r2, [r7, #2]
 8006b9c:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 8006b9e:	68fb      	ldr	r3, [r7, #12]
 8006ba0:	887a      	ldrh	r2, [r7, #2]
 8006ba2:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8006ba4:	68fb      	ldr	r3, [r7, #12]
 8006ba6:	68ba      	ldr	r2, [r7, #8]
 8006ba8:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferCount = Size;
 8006baa:	68fb      	ldr	r3, [r7, #12]
 8006bac:	887a      	ldrh	r2, [r7, #2]
 8006bae:	86da      	strh	r2, [r3, #54]	; 0x36
  hspi->TxXferSize  = Size;
 8006bb0:	68fb      	ldr	r3, [r7, #12]
 8006bb2:	887a      	ldrh	r2, [r7, #2]
 8006bb4:	869a      	strh	r2, [r3, #52]	; 0x34

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 8006bb6:	68fb      	ldr	r3, [r7, #12]
 8006bb8:	2200      	movs	r2, #0
 8006bba:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->TxISR       = NULL;
 8006bbc:	68fb      	ldr	r3, [r7, #12]
 8006bbe:	2200      	movs	r2, #0
 8006bc0:	645a      	str	r2, [r3, #68]	; 0x44
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006bc2:	68fb      	ldr	r3, [r7, #12]
 8006bc4:	681b      	ldr	r3, [r3, #0]
 8006bc6:	681b      	ldr	r3, [r3, #0]
 8006bc8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006bcc:	2b40      	cmp	r3, #64	; 0x40
 8006bce:	d007      	beq.n	8006be0 <HAL_SPI_TransmitReceive+0xf2>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8006bd0:	68fb      	ldr	r3, [r7, #12]
 8006bd2:	681b      	ldr	r3, [r3, #0]
 8006bd4:	681a      	ldr	r2, [r3, #0]
 8006bd6:	68fb      	ldr	r3, [r7, #12]
 8006bd8:	681b      	ldr	r3, [r3, #0]
 8006bda:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006bde:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006be0:	68fb      	ldr	r3, [r7, #12]
 8006be2:	68db      	ldr	r3, [r3, #12]
 8006be4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006be8:	d178      	bne.n	8006cdc <HAL_SPI_TransmitReceive+0x1ee>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006bea:	68fb      	ldr	r3, [r7, #12]
 8006bec:	685b      	ldr	r3, [r3, #4]
 8006bee:	2b00      	cmp	r3, #0
 8006bf0:	d002      	beq.n	8006bf8 <HAL_SPI_TransmitReceive+0x10a>
 8006bf2:	8b7b      	ldrh	r3, [r7, #26]
 8006bf4:	2b01      	cmp	r3, #1
 8006bf6:	d166      	bne.n	8006cc6 <HAL_SPI_TransmitReceive+0x1d8>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006bf8:	68fb      	ldr	r3, [r7, #12]
 8006bfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006bfc:	881a      	ldrh	r2, [r3, #0]
 8006bfe:	68fb      	ldr	r3, [r7, #12]
 8006c00:	681b      	ldr	r3, [r3, #0]
 8006c02:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006c04:	68fb      	ldr	r3, [r7, #12]
 8006c06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c08:	1c9a      	adds	r2, r3, #2
 8006c0a:	68fb      	ldr	r3, [r7, #12]
 8006c0c:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8006c0e:	68fb      	ldr	r3, [r7, #12]
 8006c10:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006c12:	b29b      	uxth	r3, r3
 8006c14:	3b01      	subs	r3, #1
 8006c16:	b29a      	uxth	r2, r3
 8006c18:	68fb      	ldr	r3, [r7, #12]
 8006c1a:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006c1c:	e053      	b.n	8006cc6 <HAL_SPI_TransmitReceive+0x1d8>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006c1e:	68fb      	ldr	r3, [r7, #12]
 8006c20:	681b      	ldr	r3, [r3, #0]
 8006c22:	689b      	ldr	r3, [r3, #8]
 8006c24:	f003 0302 	and.w	r3, r3, #2
 8006c28:	2b02      	cmp	r3, #2
 8006c2a:	d11b      	bne.n	8006c64 <HAL_SPI_TransmitReceive+0x176>
 8006c2c:	68fb      	ldr	r3, [r7, #12]
 8006c2e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006c30:	b29b      	uxth	r3, r3
 8006c32:	2b00      	cmp	r3, #0
 8006c34:	d016      	beq.n	8006c64 <HAL_SPI_TransmitReceive+0x176>
 8006c36:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006c38:	2b01      	cmp	r3, #1
 8006c3a:	d113      	bne.n	8006c64 <HAL_SPI_TransmitReceive+0x176>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006c3c:	68fb      	ldr	r3, [r7, #12]
 8006c3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c40:	881a      	ldrh	r2, [r3, #0]
 8006c42:	68fb      	ldr	r3, [r7, #12]
 8006c44:	681b      	ldr	r3, [r3, #0]
 8006c46:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006c48:	68fb      	ldr	r3, [r7, #12]
 8006c4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c4c:	1c9a      	adds	r2, r3, #2
 8006c4e:	68fb      	ldr	r3, [r7, #12]
 8006c50:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8006c52:	68fb      	ldr	r3, [r7, #12]
 8006c54:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006c56:	b29b      	uxth	r3, r3
 8006c58:	3b01      	subs	r3, #1
 8006c5a:	b29a      	uxth	r2, r3
 8006c5c:	68fb      	ldr	r3, [r7, #12]
 8006c5e:	86da      	strh	r2, [r3, #54]	; 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8006c60:	2300      	movs	r3, #0
 8006c62:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006c64:	68fb      	ldr	r3, [r7, #12]
 8006c66:	681b      	ldr	r3, [r3, #0]
 8006c68:	689b      	ldr	r3, [r3, #8]
 8006c6a:	f003 0301 	and.w	r3, r3, #1
 8006c6e:	2b01      	cmp	r3, #1
 8006c70:	d119      	bne.n	8006ca6 <HAL_SPI_TransmitReceive+0x1b8>
 8006c72:	68fb      	ldr	r3, [r7, #12]
 8006c74:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006c76:	b29b      	uxth	r3, r3
 8006c78:	2b00      	cmp	r3, #0
 8006c7a:	d014      	beq.n	8006ca6 <HAL_SPI_TransmitReceive+0x1b8>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006c7c:	68fb      	ldr	r3, [r7, #12]
 8006c7e:	681b      	ldr	r3, [r3, #0]
 8006c80:	68da      	ldr	r2, [r3, #12]
 8006c82:	68fb      	ldr	r3, [r7, #12]
 8006c84:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006c86:	b292      	uxth	r2, r2
 8006c88:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006c8a:	68fb      	ldr	r3, [r7, #12]
 8006c8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006c8e:	1c9a      	adds	r2, r3, #2
 8006c90:	68fb      	ldr	r3, [r7, #12]
 8006c92:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8006c94:	68fb      	ldr	r3, [r7, #12]
 8006c96:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006c98:	b29b      	uxth	r3, r3
 8006c9a:	3b01      	subs	r3, #1
 8006c9c:	b29a      	uxth	r2, r3
 8006c9e:	68fb      	ldr	r3, [r7, #12]
 8006ca0:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8006ca2:	2301      	movs	r3, #1
 8006ca4:	62fb      	str	r3, [r7, #44]	; 0x2c
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006ca6:	f7fc faad 	bl	8003204 <HAL_GetTick>
 8006caa:	4602      	mov	r2, r0
 8006cac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006cae:	1ad3      	subs	r3, r2, r3
 8006cb0:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8006cb2:	429a      	cmp	r2, r3
 8006cb4:	d807      	bhi.n	8006cc6 <HAL_SPI_TransmitReceive+0x1d8>
 8006cb6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006cb8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006cbc:	d003      	beq.n	8006cc6 <HAL_SPI_TransmitReceive+0x1d8>
      {
        errorcode = HAL_TIMEOUT;
 8006cbe:	2303      	movs	r3, #3
 8006cc0:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
        goto error;
 8006cc4:	e0a7      	b.n	8006e16 <HAL_SPI_TransmitReceive+0x328>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006cc6:	68fb      	ldr	r3, [r7, #12]
 8006cc8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006cca:	b29b      	uxth	r3, r3
 8006ccc:	2b00      	cmp	r3, #0
 8006cce:	d1a6      	bne.n	8006c1e <HAL_SPI_TransmitReceive+0x130>
 8006cd0:	68fb      	ldr	r3, [r7, #12]
 8006cd2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006cd4:	b29b      	uxth	r3, r3
 8006cd6:	2b00      	cmp	r3, #0
 8006cd8:	d1a1      	bne.n	8006c1e <HAL_SPI_TransmitReceive+0x130>
 8006cda:	e07c      	b.n	8006dd6 <HAL_SPI_TransmitReceive+0x2e8>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006cdc:	68fb      	ldr	r3, [r7, #12]
 8006cde:	685b      	ldr	r3, [r3, #4]
 8006ce0:	2b00      	cmp	r3, #0
 8006ce2:	d002      	beq.n	8006cea <HAL_SPI_TransmitReceive+0x1fc>
 8006ce4:	8b7b      	ldrh	r3, [r7, #26]
 8006ce6:	2b01      	cmp	r3, #1
 8006ce8:	d16b      	bne.n	8006dc2 <HAL_SPI_TransmitReceive+0x2d4>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006cea:	68fb      	ldr	r3, [r7, #12]
 8006cec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006cee:	68fb      	ldr	r3, [r7, #12]
 8006cf0:	681b      	ldr	r3, [r3, #0]
 8006cf2:	330c      	adds	r3, #12
 8006cf4:	7812      	ldrb	r2, [r2, #0]
 8006cf6:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006cf8:	68fb      	ldr	r3, [r7, #12]
 8006cfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006cfc:	1c5a      	adds	r2, r3, #1
 8006cfe:	68fb      	ldr	r3, [r7, #12]
 8006d00:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8006d02:	68fb      	ldr	r3, [r7, #12]
 8006d04:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006d06:	b29b      	uxth	r3, r3
 8006d08:	3b01      	subs	r3, #1
 8006d0a:	b29a      	uxth	r2, r3
 8006d0c:	68fb      	ldr	r3, [r7, #12]
 8006d0e:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006d10:	e057      	b.n	8006dc2 <HAL_SPI_TransmitReceive+0x2d4>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006d12:	68fb      	ldr	r3, [r7, #12]
 8006d14:	681b      	ldr	r3, [r3, #0]
 8006d16:	689b      	ldr	r3, [r3, #8]
 8006d18:	f003 0302 	and.w	r3, r3, #2
 8006d1c:	2b02      	cmp	r3, #2
 8006d1e:	d11c      	bne.n	8006d5a <HAL_SPI_TransmitReceive+0x26c>
 8006d20:	68fb      	ldr	r3, [r7, #12]
 8006d22:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006d24:	b29b      	uxth	r3, r3
 8006d26:	2b00      	cmp	r3, #0
 8006d28:	d017      	beq.n	8006d5a <HAL_SPI_TransmitReceive+0x26c>
 8006d2a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006d2c:	2b01      	cmp	r3, #1
 8006d2e:	d114      	bne.n	8006d5a <HAL_SPI_TransmitReceive+0x26c>
      {
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8006d30:	68fb      	ldr	r3, [r7, #12]
 8006d32:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006d34:	68fb      	ldr	r3, [r7, #12]
 8006d36:	681b      	ldr	r3, [r3, #0]
 8006d38:	330c      	adds	r3, #12
 8006d3a:	7812      	ldrb	r2, [r2, #0]
 8006d3c:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 8006d3e:	68fb      	ldr	r3, [r7, #12]
 8006d40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006d42:	1c5a      	adds	r2, r3, #1
 8006d44:	68fb      	ldr	r3, [r7, #12]
 8006d46:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8006d48:	68fb      	ldr	r3, [r7, #12]
 8006d4a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006d4c:	b29b      	uxth	r3, r3
 8006d4e:	3b01      	subs	r3, #1
 8006d50:	b29a      	uxth	r2, r3
 8006d52:	68fb      	ldr	r3, [r7, #12]
 8006d54:	86da      	strh	r2, [r3, #54]	; 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8006d56:	2300      	movs	r3, #0
 8006d58:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006d5a:	68fb      	ldr	r3, [r7, #12]
 8006d5c:	681b      	ldr	r3, [r3, #0]
 8006d5e:	689b      	ldr	r3, [r3, #8]
 8006d60:	f003 0301 	and.w	r3, r3, #1
 8006d64:	2b01      	cmp	r3, #1
 8006d66:	d119      	bne.n	8006d9c <HAL_SPI_TransmitReceive+0x2ae>
 8006d68:	68fb      	ldr	r3, [r7, #12]
 8006d6a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006d6c:	b29b      	uxth	r3, r3
 8006d6e:	2b00      	cmp	r3, #0
 8006d70:	d014      	beq.n	8006d9c <HAL_SPI_TransmitReceive+0x2ae>
      {
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006d72:	68fb      	ldr	r3, [r7, #12]
 8006d74:	681b      	ldr	r3, [r3, #0]
 8006d76:	68da      	ldr	r2, [r3, #12]
 8006d78:	68fb      	ldr	r3, [r7, #12]
 8006d7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006d7c:	b2d2      	uxtb	r2, r2
 8006d7e:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8006d80:	68fb      	ldr	r3, [r7, #12]
 8006d82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006d84:	1c5a      	adds	r2, r3, #1
 8006d86:	68fb      	ldr	r3, [r7, #12]
 8006d88:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8006d8a:	68fb      	ldr	r3, [r7, #12]
 8006d8c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006d8e:	b29b      	uxth	r3, r3
 8006d90:	3b01      	subs	r3, #1
 8006d92:	b29a      	uxth	r2, r3
 8006d94:	68fb      	ldr	r3, [r7, #12]
 8006d96:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8006d98:	2301      	movs	r3, #1
 8006d9a:	62fb      	str	r3, [r7, #44]	; 0x2c
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006d9c:	f7fc fa32 	bl	8003204 <HAL_GetTick>
 8006da0:	4602      	mov	r2, r0
 8006da2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006da4:	1ad3      	subs	r3, r2, r3
 8006da6:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8006da8:	429a      	cmp	r2, r3
 8006daa:	d803      	bhi.n	8006db4 <HAL_SPI_TransmitReceive+0x2c6>
 8006dac:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006dae:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006db2:	d102      	bne.n	8006dba <HAL_SPI_TransmitReceive+0x2cc>
 8006db4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006db6:	2b00      	cmp	r3, #0
 8006db8:	d103      	bne.n	8006dc2 <HAL_SPI_TransmitReceive+0x2d4>
      {
        errorcode = HAL_TIMEOUT;
 8006dba:	2303      	movs	r3, #3
 8006dbc:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
        goto error;
 8006dc0:	e029      	b.n	8006e16 <HAL_SPI_TransmitReceive+0x328>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006dc2:	68fb      	ldr	r3, [r7, #12]
 8006dc4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006dc6:	b29b      	uxth	r3, r3
 8006dc8:	2b00      	cmp	r3, #0
 8006dca:	d1a2      	bne.n	8006d12 <HAL_SPI_TransmitReceive+0x224>
 8006dcc:	68fb      	ldr	r3, [r7, #12]
 8006dce:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006dd0:	b29b      	uxth	r3, r3
 8006dd2:	2b00      	cmp	r3, #0
 8006dd4:	d19d      	bne.n	8006d12 <HAL_SPI_TransmitReceive+0x224>
    errorcode = HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006dd6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006dd8:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8006dda:	68f8      	ldr	r0, [r7, #12]
 8006ddc:	f000 f8f8 	bl	8006fd0 <SPI_EndRxTxTransaction>
 8006de0:	4603      	mov	r3, r0
 8006de2:	2b00      	cmp	r3, #0
 8006de4:	d006      	beq.n	8006df4 <HAL_SPI_TransmitReceive+0x306>
  {
    errorcode = HAL_ERROR;
 8006de6:	2301      	movs	r3, #1
 8006de8:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006dec:	68fb      	ldr	r3, [r7, #12]
 8006dee:	2220      	movs	r2, #32
 8006df0:	655a      	str	r2, [r3, #84]	; 0x54
    goto error;
 8006df2:	e010      	b.n	8006e16 <HAL_SPI_TransmitReceive+0x328>
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006df4:	68fb      	ldr	r3, [r7, #12]
 8006df6:	689b      	ldr	r3, [r3, #8]
 8006df8:	2b00      	cmp	r3, #0
 8006dfa:	d10b      	bne.n	8006e14 <HAL_SPI_TransmitReceive+0x326>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006dfc:	2300      	movs	r3, #0
 8006dfe:	617b      	str	r3, [r7, #20]
 8006e00:	68fb      	ldr	r3, [r7, #12]
 8006e02:	681b      	ldr	r3, [r3, #0]
 8006e04:	68db      	ldr	r3, [r3, #12]
 8006e06:	617b      	str	r3, [r7, #20]
 8006e08:	68fb      	ldr	r3, [r7, #12]
 8006e0a:	681b      	ldr	r3, [r3, #0]
 8006e0c:	689b      	ldr	r3, [r3, #8]
 8006e0e:	617b      	str	r3, [r7, #20]
 8006e10:	697b      	ldr	r3, [r7, #20]
 8006e12:	e000      	b.n	8006e16 <HAL_SPI_TransmitReceive+0x328>
  }

error :
 8006e14:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 8006e16:	68fb      	ldr	r3, [r7, #12]
 8006e18:	2201      	movs	r2, #1
 8006e1a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006e1e:	68fb      	ldr	r3, [r7, #12]
 8006e20:	2200      	movs	r2, #0
 8006e22:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8006e26:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
}
 8006e2a:	4618      	mov	r0, r3
 8006e2c:	3730      	adds	r7, #48	; 0x30
 8006e2e:	46bd      	mov	sp, r7
 8006e30:	bd80      	pop	{r7, pc}

08006e32 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006e32:	b580      	push	{r7, lr}
 8006e34:	b084      	sub	sp, #16
 8006e36:	af00      	add	r7, sp, #0
 8006e38:	60f8      	str	r0, [r7, #12]
 8006e3a:	60b9      	str	r1, [r7, #8]
 8006e3c:	603b      	str	r3, [r7, #0]
 8006e3e:	4613      	mov	r3, r2
 8006e40:	71fb      	strb	r3, [r7, #7]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006e42:	e04c      	b.n	8006ede <SPI_WaitFlagStateUntilTimeout+0xac>
  {
    if (Timeout != HAL_MAX_DELAY)
 8006e44:	683b      	ldr	r3, [r7, #0]
 8006e46:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006e4a:	d048      	beq.n	8006ede <SPI_WaitFlagStateUntilTimeout+0xac>
    {
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8006e4c:	f7fc f9da 	bl	8003204 <HAL_GetTick>
 8006e50:	4602      	mov	r2, r0
 8006e52:	69bb      	ldr	r3, [r7, #24]
 8006e54:	1ad3      	subs	r3, r2, r3
 8006e56:	683a      	ldr	r2, [r7, #0]
 8006e58:	429a      	cmp	r2, r3
 8006e5a:	d902      	bls.n	8006e62 <SPI_WaitFlagStateUntilTimeout+0x30>
 8006e5c:	683b      	ldr	r3, [r7, #0]
 8006e5e:	2b00      	cmp	r3, #0
 8006e60:	d13d      	bne.n	8006ede <SPI_WaitFlagStateUntilTimeout+0xac>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
        on both master and slave sides in order to resynchronize the master
        and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006e62:	68fb      	ldr	r3, [r7, #12]
 8006e64:	681b      	ldr	r3, [r3, #0]
 8006e66:	685a      	ldr	r2, [r3, #4]
 8006e68:	68fb      	ldr	r3, [r7, #12]
 8006e6a:	681b      	ldr	r3, [r3, #0]
 8006e6c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006e70:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006e72:	68fb      	ldr	r3, [r7, #12]
 8006e74:	685b      	ldr	r3, [r3, #4]
 8006e76:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006e7a:	d111      	bne.n	8006ea0 <SPI_WaitFlagStateUntilTimeout+0x6e>
 8006e7c:	68fb      	ldr	r3, [r7, #12]
 8006e7e:	689b      	ldr	r3, [r3, #8]
 8006e80:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006e84:	d004      	beq.n	8006e90 <SPI_WaitFlagStateUntilTimeout+0x5e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006e86:	68fb      	ldr	r3, [r7, #12]
 8006e88:	689b      	ldr	r3, [r3, #8]
 8006e8a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006e8e:	d107      	bne.n	8006ea0 <SPI_WaitFlagStateUntilTimeout+0x6e>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8006e90:	68fb      	ldr	r3, [r7, #12]
 8006e92:	681b      	ldr	r3, [r3, #0]
 8006e94:	681a      	ldr	r2, [r3, #0]
 8006e96:	68fb      	ldr	r3, [r7, #12]
 8006e98:	681b      	ldr	r3, [r3, #0]
 8006e9a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006e9e:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006ea0:	68fb      	ldr	r3, [r7, #12]
 8006ea2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006ea4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006ea8:	d10f      	bne.n	8006eca <SPI_WaitFlagStateUntilTimeout+0x98>
        {
          SPI_RESET_CRC(hspi);
 8006eaa:	68fb      	ldr	r3, [r7, #12]
 8006eac:	681b      	ldr	r3, [r3, #0]
 8006eae:	681a      	ldr	r2, [r3, #0]
 8006eb0:	68fb      	ldr	r3, [r7, #12]
 8006eb2:	681b      	ldr	r3, [r3, #0]
 8006eb4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006eb8:	601a      	str	r2, [r3, #0]
 8006eba:	68fb      	ldr	r3, [r7, #12]
 8006ebc:	681b      	ldr	r3, [r3, #0]
 8006ebe:	681a      	ldr	r2, [r3, #0]
 8006ec0:	68fb      	ldr	r3, [r7, #12]
 8006ec2:	681b      	ldr	r3, [r3, #0]
 8006ec4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006ec8:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8006eca:	68fb      	ldr	r3, [r7, #12]
 8006ecc:	2201      	movs	r2, #1
 8006ece:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8006ed2:	68fb      	ldr	r3, [r7, #12]
 8006ed4:	2200      	movs	r2, #0
 8006ed6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 8006eda:	2303      	movs	r3, #3
 8006edc:	e00f      	b.n	8006efe <SPI_WaitFlagStateUntilTimeout+0xcc>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006ede:	68fb      	ldr	r3, [r7, #12]
 8006ee0:	681b      	ldr	r3, [r3, #0]
 8006ee2:	689a      	ldr	r2, [r3, #8]
 8006ee4:	68bb      	ldr	r3, [r7, #8]
 8006ee6:	4013      	ands	r3, r2
 8006ee8:	68ba      	ldr	r2, [r7, #8]
 8006eea:	429a      	cmp	r2, r3
 8006eec:	bf0c      	ite	eq
 8006eee:	2301      	moveq	r3, #1
 8006ef0:	2300      	movne	r3, #0
 8006ef2:	b2db      	uxtb	r3, r3
 8006ef4:	461a      	mov	r2, r3
 8006ef6:	79fb      	ldrb	r3, [r7, #7]
 8006ef8:	429a      	cmp	r2, r3
 8006efa:	d1a3      	bne.n	8006e44 <SPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }

  return HAL_OK;
 8006efc:	2300      	movs	r3, #0
}
 8006efe:	4618      	mov	r0, r3
 8006f00:	3710      	adds	r7, #16
 8006f02:	46bd      	mov	sp, r7
 8006f04:	bd80      	pop	{r7, pc}

08006f06 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8006f06:	b580      	push	{r7, lr}
 8006f08:	b086      	sub	sp, #24
 8006f0a:	af02      	add	r7, sp, #8
 8006f0c:	60f8      	str	r0, [r7, #12]
 8006f0e:	60b9      	str	r1, [r7, #8]
 8006f10:	607a      	str	r2, [r7, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006f12:	68fb      	ldr	r3, [r7, #12]
 8006f14:	685b      	ldr	r3, [r3, #4]
 8006f16:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006f1a:	d111      	bne.n	8006f40 <SPI_EndRxTransaction+0x3a>
 8006f1c:	68fb      	ldr	r3, [r7, #12]
 8006f1e:	689b      	ldr	r3, [r3, #8]
 8006f20:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006f24:	d004      	beq.n	8006f30 <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006f26:	68fb      	ldr	r3, [r7, #12]
 8006f28:	689b      	ldr	r3, [r3, #8]
 8006f2a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006f2e:	d107      	bne.n	8006f40 <SPI_EndRxTransaction+0x3a>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8006f30:	68fb      	ldr	r3, [r7, #12]
 8006f32:	681b      	ldr	r3, [r3, #0]
 8006f34:	681a      	ldr	r2, [r3, #0]
 8006f36:	68fb      	ldr	r3, [r7, #12]
 8006f38:	681b      	ldr	r3, [r3, #0]
 8006f3a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006f3e:	601a      	str	r2, [r3, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006f40:	68fb      	ldr	r3, [r7, #12]
 8006f42:	685b      	ldr	r3, [r3, #4]
 8006f44:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006f48:	d12a      	bne.n	8006fa0 <SPI_EndRxTransaction+0x9a>
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006f4a:	68fb      	ldr	r3, [r7, #12]
 8006f4c:	689b      	ldr	r3, [r3, #8]
 8006f4e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006f52:	d012      	beq.n	8006f7a <SPI_EndRxTransaction+0x74>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006f54:	687b      	ldr	r3, [r7, #4]
 8006f56:	9300      	str	r3, [sp, #0]
 8006f58:	68bb      	ldr	r3, [r7, #8]
 8006f5a:	2200      	movs	r2, #0
 8006f5c:	2180      	movs	r1, #128	; 0x80
 8006f5e:	68f8      	ldr	r0, [r7, #12]
 8006f60:	f7ff ff67 	bl	8006e32 <SPI_WaitFlagStateUntilTimeout>
 8006f64:	4603      	mov	r3, r0
 8006f66:	2b00      	cmp	r3, #0
 8006f68:	d02d      	beq.n	8006fc6 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006f6a:	68fb      	ldr	r3, [r7, #12]
 8006f6c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006f6e:	f043 0220 	orr.w	r2, r3, #32
 8006f72:	68fb      	ldr	r3, [r7, #12]
 8006f74:	655a      	str	r2, [r3, #84]	; 0x54
        return HAL_TIMEOUT;
 8006f76:	2303      	movs	r3, #3
 8006f78:	e026      	b.n	8006fc8 <SPI_EndRxTransaction+0xc2>
      }
    }
    else
    {
      /* Wait the RXNE reset */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006f7a:	687b      	ldr	r3, [r7, #4]
 8006f7c:	9300      	str	r3, [sp, #0]
 8006f7e:	68bb      	ldr	r3, [r7, #8]
 8006f80:	2200      	movs	r2, #0
 8006f82:	2101      	movs	r1, #1
 8006f84:	68f8      	ldr	r0, [r7, #12]
 8006f86:	f7ff ff54 	bl	8006e32 <SPI_WaitFlagStateUntilTimeout>
 8006f8a:	4603      	mov	r3, r0
 8006f8c:	2b00      	cmp	r3, #0
 8006f8e:	d01a      	beq.n	8006fc6 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006f90:	68fb      	ldr	r3, [r7, #12]
 8006f92:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006f94:	f043 0220 	orr.w	r2, r3, #32
 8006f98:	68fb      	ldr	r3, [r7, #12]
 8006f9a:	655a      	str	r2, [r3, #84]	; 0x54
        return HAL_TIMEOUT;
 8006f9c:	2303      	movs	r3, #3
 8006f9e:	e013      	b.n	8006fc8 <SPI_EndRxTransaction+0xc2>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006fa0:	687b      	ldr	r3, [r7, #4]
 8006fa2:	9300      	str	r3, [sp, #0]
 8006fa4:	68bb      	ldr	r3, [r7, #8]
 8006fa6:	2200      	movs	r2, #0
 8006fa8:	2101      	movs	r1, #1
 8006faa:	68f8      	ldr	r0, [r7, #12]
 8006fac:	f7ff ff41 	bl	8006e32 <SPI_WaitFlagStateUntilTimeout>
 8006fb0:	4603      	mov	r3, r0
 8006fb2:	2b00      	cmp	r3, #0
 8006fb4:	d007      	beq.n	8006fc6 <SPI_EndRxTransaction+0xc0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006fb6:	68fb      	ldr	r3, [r7, #12]
 8006fb8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006fba:	f043 0220 	orr.w	r2, r3, #32
 8006fbe:	68fb      	ldr	r3, [r7, #12]
 8006fc0:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8006fc2:	2303      	movs	r3, #3
 8006fc4:	e000      	b.n	8006fc8 <SPI_EndRxTransaction+0xc2>
    }
  }
  return HAL_OK;
 8006fc6:	2300      	movs	r3, #0
}
 8006fc8:	4618      	mov	r0, r3
 8006fca:	3710      	adds	r7, #16
 8006fcc:	46bd      	mov	sp, r7
 8006fce:	bd80      	pop	{r7, pc}

08006fd0 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006fd0:	b580      	push	{r7, lr}
 8006fd2:	b088      	sub	sp, #32
 8006fd4:	af02      	add	r7, sp, #8
 8006fd6:	60f8      	str	r0, [r7, #12]
 8006fd8:	60b9      	str	r1, [r7, #8]
 8006fda:	607a      	str	r2, [r7, #4]
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006fdc:	4b1b      	ldr	r3, [pc, #108]	; (800704c <SPI_EndRxTxTransaction+0x7c>)
 8006fde:	681b      	ldr	r3, [r3, #0]
 8006fe0:	4a1b      	ldr	r2, [pc, #108]	; (8007050 <SPI_EndRxTxTransaction+0x80>)
 8006fe2:	fba2 2303 	umull	r2, r3, r2, r3
 8006fe6:	0d5b      	lsrs	r3, r3, #21
 8006fe8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006fec:	fb02 f303 	mul.w	r3, r2, r3
 8006ff0:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006ff2:	68fb      	ldr	r3, [r7, #12]
 8006ff4:	685b      	ldr	r3, [r3, #4]
 8006ff6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006ffa:	d112      	bne.n	8007022 <SPI_EndRxTxTransaction+0x52>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006ffc:	687b      	ldr	r3, [r7, #4]
 8006ffe:	9300      	str	r3, [sp, #0]
 8007000:	68bb      	ldr	r3, [r7, #8]
 8007002:	2200      	movs	r2, #0
 8007004:	2180      	movs	r1, #128	; 0x80
 8007006:	68f8      	ldr	r0, [r7, #12]
 8007008:	f7ff ff13 	bl	8006e32 <SPI_WaitFlagStateUntilTimeout>
 800700c:	4603      	mov	r3, r0
 800700e:	2b00      	cmp	r3, #0
 8007010:	d016      	beq.n	8007040 <SPI_EndRxTxTransaction+0x70>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007012:	68fb      	ldr	r3, [r7, #12]
 8007014:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007016:	f043 0220 	orr.w	r2, r3, #32
 800701a:	68fb      	ldr	r3, [r7, #12]
 800701c:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 800701e:	2303      	movs	r3, #3
 8007020:	e00f      	b.n	8007042 <SPI_EndRxTxTransaction+0x72>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8007022:	697b      	ldr	r3, [r7, #20]
 8007024:	2b00      	cmp	r3, #0
 8007026:	d00a      	beq.n	800703e <SPI_EndRxTxTransaction+0x6e>
      {
        break;
      }
      count--;
 8007028:	697b      	ldr	r3, [r7, #20]
 800702a:	3b01      	subs	r3, #1
 800702c:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800702e:	68fb      	ldr	r3, [r7, #12]
 8007030:	681b      	ldr	r3, [r3, #0]
 8007032:	689b      	ldr	r3, [r3, #8]
 8007034:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007038:	2b80      	cmp	r3, #128	; 0x80
 800703a:	d0f2      	beq.n	8007022 <SPI_EndRxTxTransaction+0x52>
 800703c:	e000      	b.n	8007040 <SPI_EndRxTxTransaction+0x70>
        break;
 800703e:	bf00      	nop
  }

  return HAL_OK;
 8007040:	2300      	movs	r3, #0
}
 8007042:	4618      	mov	r0, r3
 8007044:	3718      	adds	r7, #24
 8007046:	46bd      	mov	sp, r7
 8007048:	bd80      	pop	{r7, pc}
 800704a:	bf00      	nop
 800704c:	20000004 	.word	0x20000004
 8007050:	165e9f81 	.word	0x165e9f81

08007054 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8007054:	b580      	push	{r7, lr}
 8007056:	b082      	sub	sp, #8
 8007058:	af00      	add	r7, sp, #0
 800705a:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800705c:	687b      	ldr	r3, [r7, #4]
 800705e:	2b00      	cmp	r3, #0
 8007060:	d101      	bne.n	8007066 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8007062:	2301      	movs	r3, #1
 8007064:	e01d      	b.n	80070a2 <HAL_TIM_Base_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8007066:	687b      	ldr	r3, [r7, #4]
 8007068:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800706c:	b2db      	uxtb	r3, r3
 800706e:	2b00      	cmp	r3, #0
 8007070:	d106      	bne.n	8007080 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8007072:	687b      	ldr	r3, [r7, #4]
 8007074:	2200      	movs	r2, #0
 8007076:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 800707a:	6878      	ldr	r0, [r7, #4]
 800707c:	f7fb f8f6 	bl	800226c <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007080:	687b      	ldr	r3, [r7, #4]
 8007082:	2202      	movs	r2, #2
 8007084:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007088:	687b      	ldr	r3, [r7, #4]
 800708a:	681a      	ldr	r2, [r3, #0]
 800708c:	687b      	ldr	r3, [r7, #4]
 800708e:	3304      	adds	r3, #4
 8007090:	4619      	mov	r1, r3
 8007092:	4610      	mov	r0, r2
 8007094:	f000 fa14 	bl	80074c0 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8007098:	687b      	ldr	r3, [r7, #4]
 800709a:	2201      	movs	r2, #1
 800709c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 80070a0:	2300      	movs	r3, #0
}
 80070a2:	4618      	mov	r0, r3
 80070a4:	3708      	adds	r7, #8
 80070a6:	46bd      	mov	sp, r7
 80070a8:	bd80      	pop	{r7, pc}

080070aa <HAL_TIM_Base_Start>:
  * @brief  Starts the TIM Base generation.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start(TIM_HandleTypeDef *htim)
{
 80070aa:	b480      	push	{r7}
 80070ac:	b085      	sub	sp, #20
 80070ae:	af00      	add	r7, sp, #0
 80070b0:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80070b2:	687b      	ldr	r3, [r7, #4]
 80070b4:	2202      	movs	r2, #2
 80070b6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80070ba:	687b      	ldr	r3, [r7, #4]
 80070bc:	681b      	ldr	r3, [r3, #0]
 80070be:	689b      	ldr	r3, [r3, #8]
 80070c0:	f003 0307 	and.w	r3, r3, #7
 80070c4:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80070c6:	68fb      	ldr	r3, [r7, #12]
 80070c8:	2b06      	cmp	r3, #6
 80070ca:	d007      	beq.n	80070dc <HAL_TIM_Base_Start+0x32>
  {
    __HAL_TIM_ENABLE(htim);
 80070cc:	687b      	ldr	r3, [r7, #4]
 80070ce:	681b      	ldr	r3, [r3, #0]
 80070d0:	681a      	ldr	r2, [r3, #0]
 80070d2:	687b      	ldr	r3, [r7, #4]
 80070d4:	681b      	ldr	r3, [r3, #0]
 80070d6:	f042 0201 	orr.w	r2, r2, #1
 80070da:	601a      	str	r2, [r3, #0]
  }

  /* Change the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80070dc:	687b      	ldr	r3, [r7, #4]
 80070de:	2201      	movs	r2, #1
 80070e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Return function status */
  return HAL_OK;
 80070e4:	2300      	movs	r3, #0
}
 80070e6:	4618      	mov	r0, r3
 80070e8:	3714      	adds	r7, #20
 80070ea:	46bd      	mov	sp, r7
 80070ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070f0:	4770      	bx	lr

080070f2 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 80070f2:	b580      	push	{r7, lr}
 80070f4:	b082      	sub	sp, #8
 80070f6:	af00      	add	r7, sp, #0
 80070f8:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 80070fa:	687b      	ldr	r3, [r7, #4]
 80070fc:	2b00      	cmp	r3, #0
 80070fe:	d101      	bne.n	8007104 <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 8007100:	2301      	movs	r3, #1
 8007102:	e01d      	b.n	8007140 <HAL_TIM_PWM_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8007104:	687b      	ldr	r3, [r7, #4]
 8007106:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800710a:	b2db      	uxtb	r3, r3
 800710c:	2b00      	cmp	r3, #0
 800710e:	d106      	bne.n	800711e <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8007110:	687b      	ldr	r3, [r7, #4]
 8007112:	2200      	movs	r2, #0
 8007114:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8007118:	6878      	ldr	r0, [r7, #4]
 800711a:	f7fb f8c9 	bl	80022b0 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800711e:	687b      	ldr	r3, [r7, #4]
 8007120:	2202      	movs	r2, #2
 8007122:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007126:	687b      	ldr	r3, [r7, #4]
 8007128:	681a      	ldr	r2, [r3, #0]
 800712a:	687b      	ldr	r3, [r7, #4]
 800712c:	3304      	adds	r3, #4
 800712e:	4619      	mov	r1, r3
 8007130:	4610      	mov	r0, r2
 8007132:	f000 f9c5 	bl	80074c0 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8007136:	687b      	ldr	r3, [r7, #4]
 8007138:	2201      	movs	r2, #1
 800713a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 800713e:	2300      	movs	r3, #0
}
 8007140:	4618      	mov	r0, r3
 8007142:	3708      	adds	r7, #8
 8007144:	46bd      	mov	sp, r7
 8007146:	bd80      	pop	{r7, pc}

08007148 <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8007148:	b580      	push	{r7, lr}
 800714a:	b084      	sub	sp, #16
 800714c:	af00      	add	r7, sp, #0
 800714e:	6078      	str	r0, [r7, #4]
 8007150:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8007152:	687b      	ldr	r3, [r7, #4]
 8007154:	681b      	ldr	r3, [r3, #0]
 8007156:	2201      	movs	r2, #1
 8007158:	6839      	ldr	r1, [r7, #0]
 800715a:	4618      	mov	r0, r3
 800715c:	f000 fc9a 	bl	8007a94 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8007160:	687b      	ldr	r3, [r7, #4]
 8007162:	681b      	ldr	r3, [r3, #0]
 8007164:	4a15      	ldr	r2, [pc, #84]	; (80071bc <HAL_TIM_PWM_Start+0x74>)
 8007166:	4293      	cmp	r3, r2
 8007168:	d004      	beq.n	8007174 <HAL_TIM_PWM_Start+0x2c>
 800716a:	687b      	ldr	r3, [r7, #4]
 800716c:	681b      	ldr	r3, [r3, #0]
 800716e:	4a14      	ldr	r2, [pc, #80]	; (80071c0 <HAL_TIM_PWM_Start+0x78>)
 8007170:	4293      	cmp	r3, r2
 8007172:	d101      	bne.n	8007178 <HAL_TIM_PWM_Start+0x30>
 8007174:	2301      	movs	r3, #1
 8007176:	e000      	b.n	800717a <HAL_TIM_PWM_Start+0x32>
 8007178:	2300      	movs	r3, #0
 800717a:	2b00      	cmp	r3, #0
 800717c:	d007      	beq.n	800718e <HAL_TIM_PWM_Start+0x46>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 800717e:	687b      	ldr	r3, [r7, #4]
 8007180:	681b      	ldr	r3, [r3, #0]
 8007182:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8007184:	687b      	ldr	r3, [r7, #4]
 8007186:	681b      	ldr	r3, [r3, #0]
 8007188:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800718c:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800718e:	687b      	ldr	r3, [r7, #4]
 8007190:	681b      	ldr	r3, [r3, #0]
 8007192:	689b      	ldr	r3, [r3, #8]
 8007194:	f003 0307 	and.w	r3, r3, #7
 8007198:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800719a:	68fb      	ldr	r3, [r7, #12]
 800719c:	2b06      	cmp	r3, #6
 800719e:	d007      	beq.n	80071b0 <HAL_TIM_PWM_Start+0x68>
  {
    __HAL_TIM_ENABLE(htim);
 80071a0:	687b      	ldr	r3, [r7, #4]
 80071a2:	681b      	ldr	r3, [r3, #0]
 80071a4:	681a      	ldr	r2, [r3, #0]
 80071a6:	687b      	ldr	r3, [r7, #4]
 80071a8:	681b      	ldr	r3, [r3, #0]
 80071aa:	f042 0201 	orr.w	r2, r2, #1
 80071ae:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80071b0:	2300      	movs	r3, #0
}
 80071b2:	4618      	mov	r0, r3
 80071b4:	3710      	adds	r7, #16
 80071b6:	46bd      	mov	sp, r7
 80071b8:	bd80      	pop	{r7, pc}
 80071ba:	bf00      	nop
 80071bc:	40010000 	.word	0x40010000
 80071c0:	40010400 	.word	0x40010400

080071c4 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 80071c4:	b580      	push	{r7, lr}
 80071c6:	b084      	sub	sp, #16
 80071c8:	af00      	add	r7, sp, #0
 80071ca:	60f8      	str	r0, [r7, #12]
 80071cc:	60b9      	str	r1, [r7, #8]
 80071ce:	607a      	str	r2, [r7, #4]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 80071d0:	68fb      	ldr	r3, [r7, #12]
 80071d2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80071d6:	2b01      	cmp	r3, #1
 80071d8:	d101      	bne.n	80071de <HAL_TIM_PWM_ConfigChannel+0x1a>
 80071da:	2302      	movs	r3, #2
 80071dc:	e0b4      	b.n	8007348 <HAL_TIM_PWM_ConfigChannel+0x184>
 80071de:	68fb      	ldr	r3, [r7, #12]
 80071e0:	2201      	movs	r2, #1
 80071e2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 80071e6:	68fb      	ldr	r3, [r7, #12]
 80071e8:	2202      	movs	r2, #2
 80071ea:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  switch (Channel)
 80071ee:	687b      	ldr	r3, [r7, #4]
 80071f0:	2b0c      	cmp	r3, #12
 80071f2:	f200 809f 	bhi.w	8007334 <HAL_TIM_PWM_ConfigChannel+0x170>
 80071f6:	a201      	add	r2, pc, #4	; (adr r2, 80071fc <HAL_TIM_PWM_ConfigChannel+0x38>)
 80071f8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80071fc:	08007231 	.word	0x08007231
 8007200:	08007335 	.word	0x08007335
 8007204:	08007335 	.word	0x08007335
 8007208:	08007335 	.word	0x08007335
 800720c:	08007271 	.word	0x08007271
 8007210:	08007335 	.word	0x08007335
 8007214:	08007335 	.word	0x08007335
 8007218:	08007335 	.word	0x08007335
 800721c:	080072b3 	.word	0x080072b3
 8007220:	08007335 	.word	0x08007335
 8007224:	08007335 	.word	0x08007335
 8007228:	08007335 	.word	0x08007335
 800722c:	080072f3 	.word	0x080072f3
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8007230:	68fb      	ldr	r3, [r7, #12]
 8007232:	681b      	ldr	r3, [r3, #0]
 8007234:	68b9      	ldr	r1, [r7, #8]
 8007236:	4618      	mov	r0, r3
 8007238:	f000 f9e2 	bl	8007600 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800723c:	68fb      	ldr	r3, [r7, #12]
 800723e:	681b      	ldr	r3, [r3, #0]
 8007240:	699a      	ldr	r2, [r3, #24]
 8007242:	68fb      	ldr	r3, [r7, #12]
 8007244:	681b      	ldr	r3, [r3, #0]
 8007246:	f042 0208 	orr.w	r2, r2, #8
 800724a:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800724c:	68fb      	ldr	r3, [r7, #12]
 800724e:	681b      	ldr	r3, [r3, #0]
 8007250:	699a      	ldr	r2, [r3, #24]
 8007252:	68fb      	ldr	r3, [r7, #12]
 8007254:	681b      	ldr	r3, [r3, #0]
 8007256:	f022 0204 	bic.w	r2, r2, #4
 800725a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800725c:	68fb      	ldr	r3, [r7, #12]
 800725e:	681b      	ldr	r3, [r3, #0]
 8007260:	6999      	ldr	r1, [r3, #24]
 8007262:	68bb      	ldr	r3, [r7, #8]
 8007264:	691a      	ldr	r2, [r3, #16]
 8007266:	68fb      	ldr	r3, [r7, #12]
 8007268:	681b      	ldr	r3, [r3, #0]
 800726a:	430a      	orrs	r2, r1
 800726c:	619a      	str	r2, [r3, #24]
      break;
 800726e:	e062      	b.n	8007336 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8007270:	68fb      	ldr	r3, [r7, #12]
 8007272:	681b      	ldr	r3, [r3, #0]
 8007274:	68b9      	ldr	r1, [r7, #8]
 8007276:	4618      	mov	r0, r3
 8007278:	f000 fa32 	bl	80076e0 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800727c:	68fb      	ldr	r3, [r7, #12]
 800727e:	681b      	ldr	r3, [r3, #0]
 8007280:	699a      	ldr	r2, [r3, #24]
 8007282:	68fb      	ldr	r3, [r7, #12]
 8007284:	681b      	ldr	r3, [r3, #0]
 8007286:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800728a:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800728c:	68fb      	ldr	r3, [r7, #12]
 800728e:	681b      	ldr	r3, [r3, #0]
 8007290:	699a      	ldr	r2, [r3, #24]
 8007292:	68fb      	ldr	r3, [r7, #12]
 8007294:	681b      	ldr	r3, [r3, #0]
 8007296:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800729a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800729c:	68fb      	ldr	r3, [r7, #12]
 800729e:	681b      	ldr	r3, [r3, #0]
 80072a0:	6999      	ldr	r1, [r3, #24]
 80072a2:	68bb      	ldr	r3, [r7, #8]
 80072a4:	691b      	ldr	r3, [r3, #16]
 80072a6:	021a      	lsls	r2, r3, #8
 80072a8:	68fb      	ldr	r3, [r7, #12]
 80072aa:	681b      	ldr	r3, [r3, #0]
 80072ac:	430a      	orrs	r2, r1
 80072ae:	619a      	str	r2, [r3, #24]
      break;
 80072b0:	e041      	b.n	8007336 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 80072b2:	68fb      	ldr	r3, [r7, #12]
 80072b4:	681b      	ldr	r3, [r3, #0]
 80072b6:	68b9      	ldr	r1, [r7, #8]
 80072b8:	4618      	mov	r0, r3
 80072ba:	f000 fa87 	bl	80077cc <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80072be:	68fb      	ldr	r3, [r7, #12]
 80072c0:	681b      	ldr	r3, [r3, #0]
 80072c2:	69da      	ldr	r2, [r3, #28]
 80072c4:	68fb      	ldr	r3, [r7, #12]
 80072c6:	681b      	ldr	r3, [r3, #0]
 80072c8:	f042 0208 	orr.w	r2, r2, #8
 80072cc:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 80072ce:	68fb      	ldr	r3, [r7, #12]
 80072d0:	681b      	ldr	r3, [r3, #0]
 80072d2:	69da      	ldr	r2, [r3, #28]
 80072d4:	68fb      	ldr	r3, [r7, #12]
 80072d6:	681b      	ldr	r3, [r3, #0]
 80072d8:	f022 0204 	bic.w	r2, r2, #4
 80072dc:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80072de:	68fb      	ldr	r3, [r7, #12]
 80072e0:	681b      	ldr	r3, [r3, #0]
 80072e2:	69d9      	ldr	r1, [r3, #28]
 80072e4:	68bb      	ldr	r3, [r7, #8]
 80072e6:	691a      	ldr	r2, [r3, #16]
 80072e8:	68fb      	ldr	r3, [r7, #12]
 80072ea:	681b      	ldr	r3, [r3, #0]
 80072ec:	430a      	orrs	r2, r1
 80072ee:	61da      	str	r2, [r3, #28]
      break;
 80072f0:	e021      	b.n	8007336 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 80072f2:	68fb      	ldr	r3, [r7, #12]
 80072f4:	681b      	ldr	r3, [r3, #0]
 80072f6:	68b9      	ldr	r1, [r7, #8]
 80072f8:	4618      	mov	r0, r3
 80072fa:	f000 fadb 	bl	80078b4 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80072fe:	68fb      	ldr	r3, [r7, #12]
 8007300:	681b      	ldr	r3, [r3, #0]
 8007302:	69da      	ldr	r2, [r3, #28]
 8007304:	68fb      	ldr	r3, [r7, #12]
 8007306:	681b      	ldr	r3, [r3, #0]
 8007308:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800730c:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800730e:	68fb      	ldr	r3, [r7, #12]
 8007310:	681b      	ldr	r3, [r3, #0]
 8007312:	69da      	ldr	r2, [r3, #28]
 8007314:	68fb      	ldr	r3, [r7, #12]
 8007316:	681b      	ldr	r3, [r3, #0]
 8007318:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800731c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800731e:	68fb      	ldr	r3, [r7, #12]
 8007320:	681b      	ldr	r3, [r3, #0]
 8007322:	69d9      	ldr	r1, [r3, #28]
 8007324:	68bb      	ldr	r3, [r7, #8]
 8007326:	691b      	ldr	r3, [r3, #16]
 8007328:	021a      	lsls	r2, r3, #8
 800732a:	68fb      	ldr	r3, [r7, #12]
 800732c:	681b      	ldr	r3, [r3, #0]
 800732e:	430a      	orrs	r2, r1
 8007330:	61da      	str	r2, [r3, #28]
      break;
 8007332:	e000      	b.n	8007336 <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      break;
 8007334:	bf00      	nop
  }

  htim->State = HAL_TIM_STATE_READY;
 8007336:	68fb      	ldr	r3, [r7, #12]
 8007338:	2201      	movs	r2, #1
 800733a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800733e:	68fb      	ldr	r3, [r7, #12]
 8007340:	2200      	movs	r2, #0
 8007342:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8007346:	2300      	movs	r3, #0
}
 8007348:	4618      	mov	r0, r3
 800734a:	3710      	adds	r7, #16
 800734c:	46bd      	mov	sp, r7
 800734e:	bd80      	pop	{r7, pc}

08007350 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 8007350:	b580      	push	{r7, lr}
 8007352:	b084      	sub	sp, #16
 8007354:	af00      	add	r7, sp, #0
 8007356:	6078      	str	r0, [r7, #4]
 8007358:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 800735a:	687b      	ldr	r3, [r7, #4]
 800735c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007360:	2b01      	cmp	r3, #1
 8007362:	d101      	bne.n	8007368 <HAL_TIM_ConfigClockSource+0x18>
 8007364:	2302      	movs	r3, #2
 8007366:	e0a6      	b.n	80074b6 <HAL_TIM_ConfigClockSource+0x166>
 8007368:	687b      	ldr	r3, [r7, #4]
 800736a:	2201      	movs	r2, #1
 800736c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8007370:	687b      	ldr	r3, [r7, #4]
 8007372:	2202      	movs	r2, #2
 8007374:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8007378:	687b      	ldr	r3, [r7, #4]
 800737a:	681b      	ldr	r3, [r3, #0]
 800737c:	689b      	ldr	r3, [r3, #8]
 800737e:	60fb      	str	r3, [r7, #12]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8007380:	68fb      	ldr	r3, [r7, #12]
 8007382:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8007386:	60fb      	str	r3, [r7, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007388:	68fb      	ldr	r3, [r7, #12]
 800738a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800738e:	60fb      	str	r3, [r7, #12]
  htim->Instance->SMCR = tmpsmcr;
 8007390:	687b      	ldr	r3, [r7, #4]
 8007392:	681b      	ldr	r3, [r3, #0]
 8007394:	68fa      	ldr	r2, [r7, #12]
 8007396:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8007398:	683b      	ldr	r3, [r7, #0]
 800739a:	681b      	ldr	r3, [r3, #0]
 800739c:	2b40      	cmp	r3, #64	; 0x40
 800739e:	d067      	beq.n	8007470 <HAL_TIM_ConfigClockSource+0x120>
 80073a0:	2b40      	cmp	r3, #64	; 0x40
 80073a2:	d80b      	bhi.n	80073bc <HAL_TIM_ConfigClockSource+0x6c>
 80073a4:	2b10      	cmp	r3, #16
 80073a6:	d073      	beq.n	8007490 <HAL_TIM_ConfigClockSource+0x140>
 80073a8:	2b10      	cmp	r3, #16
 80073aa:	d802      	bhi.n	80073b2 <HAL_TIM_ConfigClockSource+0x62>
 80073ac:	2b00      	cmp	r3, #0
 80073ae:	d06f      	beq.n	8007490 <HAL_TIM_ConfigClockSource+0x140>
      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
      break;
    }

    default:
      break;
 80073b0:	e078      	b.n	80074a4 <HAL_TIM_ConfigClockSource+0x154>
  switch (sClockSourceConfig->ClockSource)
 80073b2:	2b20      	cmp	r3, #32
 80073b4:	d06c      	beq.n	8007490 <HAL_TIM_ConfigClockSource+0x140>
 80073b6:	2b30      	cmp	r3, #48	; 0x30
 80073b8:	d06a      	beq.n	8007490 <HAL_TIM_ConfigClockSource+0x140>
      break;
 80073ba:	e073      	b.n	80074a4 <HAL_TIM_ConfigClockSource+0x154>
  switch (sClockSourceConfig->ClockSource)
 80073bc:	2b70      	cmp	r3, #112	; 0x70
 80073be:	d00d      	beq.n	80073dc <HAL_TIM_ConfigClockSource+0x8c>
 80073c0:	2b70      	cmp	r3, #112	; 0x70
 80073c2:	d804      	bhi.n	80073ce <HAL_TIM_ConfigClockSource+0x7e>
 80073c4:	2b50      	cmp	r3, #80	; 0x50
 80073c6:	d033      	beq.n	8007430 <HAL_TIM_ConfigClockSource+0xe0>
 80073c8:	2b60      	cmp	r3, #96	; 0x60
 80073ca:	d041      	beq.n	8007450 <HAL_TIM_ConfigClockSource+0x100>
      break;
 80073cc:	e06a      	b.n	80074a4 <HAL_TIM_ConfigClockSource+0x154>
  switch (sClockSourceConfig->ClockSource)
 80073ce:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80073d2:	d066      	beq.n	80074a2 <HAL_TIM_ConfigClockSource+0x152>
 80073d4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80073d8:	d017      	beq.n	800740a <HAL_TIM_ConfigClockSource+0xba>
      break;
 80073da:	e063      	b.n	80074a4 <HAL_TIM_ConfigClockSource+0x154>
      TIM_ETR_SetConfig(htim->Instance,
 80073dc:	687b      	ldr	r3, [r7, #4]
 80073de:	6818      	ldr	r0, [r3, #0]
 80073e0:	683b      	ldr	r3, [r7, #0]
 80073e2:	6899      	ldr	r1, [r3, #8]
 80073e4:	683b      	ldr	r3, [r7, #0]
 80073e6:	685a      	ldr	r2, [r3, #4]
 80073e8:	683b      	ldr	r3, [r7, #0]
 80073ea:	68db      	ldr	r3, [r3, #12]
 80073ec:	f000 fb32 	bl	8007a54 <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 80073f0:	687b      	ldr	r3, [r7, #4]
 80073f2:	681b      	ldr	r3, [r3, #0]
 80073f4:	689b      	ldr	r3, [r3, #8]
 80073f6:	60fb      	str	r3, [r7, #12]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80073f8:	68fb      	ldr	r3, [r7, #12]
 80073fa:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80073fe:	60fb      	str	r3, [r7, #12]
      htim->Instance->SMCR = tmpsmcr;
 8007400:	687b      	ldr	r3, [r7, #4]
 8007402:	681b      	ldr	r3, [r3, #0]
 8007404:	68fa      	ldr	r2, [r7, #12]
 8007406:	609a      	str	r2, [r3, #8]
      break;
 8007408:	e04c      	b.n	80074a4 <HAL_TIM_ConfigClockSource+0x154>
      TIM_ETR_SetConfig(htim->Instance,
 800740a:	687b      	ldr	r3, [r7, #4]
 800740c:	6818      	ldr	r0, [r3, #0]
 800740e:	683b      	ldr	r3, [r7, #0]
 8007410:	6899      	ldr	r1, [r3, #8]
 8007412:	683b      	ldr	r3, [r7, #0]
 8007414:	685a      	ldr	r2, [r3, #4]
 8007416:	683b      	ldr	r3, [r7, #0]
 8007418:	68db      	ldr	r3, [r3, #12]
 800741a:	f000 fb1b 	bl	8007a54 <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800741e:	687b      	ldr	r3, [r7, #4]
 8007420:	681b      	ldr	r3, [r3, #0]
 8007422:	689a      	ldr	r2, [r3, #8]
 8007424:	687b      	ldr	r3, [r7, #4]
 8007426:	681b      	ldr	r3, [r3, #0]
 8007428:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800742c:	609a      	str	r2, [r3, #8]
      break;
 800742e:	e039      	b.n	80074a4 <HAL_TIM_ConfigClockSource+0x154>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8007430:	687b      	ldr	r3, [r7, #4]
 8007432:	6818      	ldr	r0, [r3, #0]
 8007434:	683b      	ldr	r3, [r7, #0]
 8007436:	6859      	ldr	r1, [r3, #4]
 8007438:	683b      	ldr	r3, [r7, #0]
 800743a:	68db      	ldr	r3, [r3, #12]
 800743c:	461a      	mov	r2, r3
 800743e:	f000 fa8f 	bl	8007960 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8007442:	687b      	ldr	r3, [r7, #4]
 8007444:	681b      	ldr	r3, [r3, #0]
 8007446:	2150      	movs	r1, #80	; 0x50
 8007448:	4618      	mov	r0, r3
 800744a:	f000 fae8 	bl	8007a1e <TIM_ITRx_SetConfig>
      break;
 800744e:	e029      	b.n	80074a4 <HAL_TIM_ConfigClockSource+0x154>
      TIM_TI2_ConfigInputStage(htim->Instance,
 8007450:	687b      	ldr	r3, [r7, #4]
 8007452:	6818      	ldr	r0, [r3, #0]
 8007454:	683b      	ldr	r3, [r7, #0]
 8007456:	6859      	ldr	r1, [r3, #4]
 8007458:	683b      	ldr	r3, [r7, #0]
 800745a:	68db      	ldr	r3, [r3, #12]
 800745c:	461a      	mov	r2, r3
 800745e:	f000 faae 	bl	80079be <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8007462:	687b      	ldr	r3, [r7, #4]
 8007464:	681b      	ldr	r3, [r3, #0]
 8007466:	2160      	movs	r1, #96	; 0x60
 8007468:	4618      	mov	r0, r3
 800746a:	f000 fad8 	bl	8007a1e <TIM_ITRx_SetConfig>
      break;
 800746e:	e019      	b.n	80074a4 <HAL_TIM_ConfigClockSource+0x154>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8007470:	687b      	ldr	r3, [r7, #4]
 8007472:	6818      	ldr	r0, [r3, #0]
 8007474:	683b      	ldr	r3, [r7, #0]
 8007476:	6859      	ldr	r1, [r3, #4]
 8007478:	683b      	ldr	r3, [r7, #0]
 800747a:	68db      	ldr	r3, [r3, #12]
 800747c:	461a      	mov	r2, r3
 800747e:	f000 fa6f 	bl	8007960 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8007482:	687b      	ldr	r3, [r7, #4]
 8007484:	681b      	ldr	r3, [r3, #0]
 8007486:	2140      	movs	r1, #64	; 0x40
 8007488:	4618      	mov	r0, r3
 800748a:	f000 fac8 	bl	8007a1e <TIM_ITRx_SetConfig>
      break;
 800748e:	e009      	b.n	80074a4 <HAL_TIM_ConfigClockSource+0x154>
      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 8007490:	687b      	ldr	r3, [r7, #4]
 8007492:	681a      	ldr	r2, [r3, #0]
 8007494:	683b      	ldr	r3, [r7, #0]
 8007496:	681b      	ldr	r3, [r3, #0]
 8007498:	4619      	mov	r1, r3
 800749a:	4610      	mov	r0, r2
 800749c:	f000 fabf 	bl	8007a1e <TIM_ITRx_SetConfig>
      break;
 80074a0:	e000      	b.n	80074a4 <HAL_TIM_ConfigClockSource+0x154>
      break;
 80074a2:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 80074a4:	687b      	ldr	r3, [r7, #4]
 80074a6:	2201      	movs	r2, #1
 80074a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 80074ac:	687b      	ldr	r3, [r7, #4]
 80074ae:	2200      	movs	r2, #0
 80074b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 80074b4:	2300      	movs	r3, #0
}
 80074b6:	4618      	mov	r0, r3
 80074b8:	3710      	adds	r7, #16
 80074ba:	46bd      	mov	sp, r7
 80074bc:	bd80      	pop	{r7, pc}
	...

080074c0 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 80074c0:	b480      	push	{r7}
 80074c2:	b085      	sub	sp, #20
 80074c4:	af00      	add	r7, sp, #0
 80074c6:	6078      	str	r0, [r7, #4]
 80074c8:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 80074ca:	687b      	ldr	r3, [r7, #4]
 80074cc:	681b      	ldr	r3, [r3, #0]
 80074ce:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80074d0:	687b      	ldr	r3, [r7, #4]
 80074d2:	4a40      	ldr	r2, [pc, #256]	; (80075d4 <TIM_Base_SetConfig+0x114>)
 80074d4:	4293      	cmp	r3, r2
 80074d6:	d013      	beq.n	8007500 <TIM_Base_SetConfig+0x40>
 80074d8:	687b      	ldr	r3, [r7, #4]
 80074da:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80074de:	d00f      	beq.n	8007500 <TIM_Base_SetConfig+0x40>
 80074e0:	687b      	ldr	r3, [r7, #4]
 80074e2:	4a3d      	ldr	r2, [pc, #244]	; (80075d8 <TIM_Base_SetConfig+0x118>)
 80074e4:	4293      	cmp	r3, r2
 80074e6:	d00b      	beq.n	8007500 <TIM_Base_SetConfig+0x40>
 80074e8:	687b      	ldr	r3, [r7, #4]
 80074ea:	4a3c      	ldr	r2, [pc, #240]	; (80075dc <TIM_Base_SetConfig+0x11c>)
 80074ec:	4293      	cmp	r3, r2
 80074ee:	d007      	beq.n	8007500 <TIM_Base_SetConfig+0x40>
 80074f0:	687b      	ldr	r3, [r7, #4]
 80074f2:	4a3b      	ldr	r2, [pc, #236]	; (80075e0 <TIM_Base_SetConfig+0x120>)
 80074f4:	4293      	cmp	r3, r2
 80074f6:	d003      	beq.n	8007500 <TIM_Base_SetConfig+0x40>
 80074f8:	687b      	ldr	r3, [r7, #4]
 80074fa:	4a3a      	ldr	r2, [pc, #232]	; (80075e4 <TIM_Base_SetConfig+0x124>)
 80074fc:	4293      	cmp	r3, r2
 80074fe:	d108      	bne.n	8007512 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007500:	68fb      	ldr	r3, [r7, #12]
 8007502:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007506:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 8007508:	683b      	ldr	r3, [r7, #0]
 800750a:	685b      	ldr	r3, [r3, #4]
 800750c:	68fa      	ldr	r2, [r7, #12]
 800750e:	4313      	orrs	r3, r2
 8007510:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007512:	687b      	ldr	r3, [r7, #4]
 8007514:	4a2f      	ldr	r2, [pc, #188]	; (80075d4 <TIM_Base_SetConfig+0x114>)
 8007516:	4293      	cmp	r3, r2
 8007518:	d02b      	beq.n	8007572 <TIM_Base_SetConfig+0xb2>
 800751a:	687b      	ldr	r3, [r7, #4]
 800751c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007520:	d027      	beq.n	8007572 <TIM_Base_SetConfig+0xb2>
 8007522:	687b      	ldr	r3, [r7, #4]
 8007524:	4a2c      	ldr	r2, [pc, #176]	; (80075d8 <TIM_Base_SetConfig+0x118>)
 8007526:	4293      	cmp	r3, r2
 8007528:	d023      	beq.n	8007572 <TIM_Base_SetConfig+0xb2>
 800752a:	687b      	ldr	r3, [r7, #4]
 800752c:	4a2b      	ldr	r2, [pc, #172]	; (80075dc <TIM_Base_SetConfig+0x11c>)
 800752e:	4293      	cmp	r3, r2
 8007530:	d01f      	beq.n	8007572 <TIM_Base_SetConfig+0xb2>
 8007532:	687b      	ldr	r3, [r7, #4]
 8007534:	4a2a      	ldr	r2, [pc, #168]	; (80075e0 <TIM_Base_SetConfig+0x120>)
 8007536:	4293      	cmp	r3, r2
 8007538:	d01b      	beq.n	8007572 <TIM_Base_SetConfig+0xb2>
 800753a:	687b      	ldr	r3, [r7, #4]
 800753c:	4a29      	ldr	r2, [pc, #164]	; (80075e4 <TIM_Base_SetConfig+0x124>)
 800753e:	4293      	cmp	r3, r2
 8007540:	d017      	beq.n	8007572 <TIM_Base_SetConfig+0xb2>
 8007542:	687b      	ldr	r3, [r7, #4]
 8007544:	4a28      	ldr	r2, [pc, #160]	; (80075e8 <TIM_Base_SetConfig+0x128>)
 8007546:	4293      	cmp	r3, r2
 8007548:	d013      	beq.n	8007572 <TIM_Base_SetConfig+0xb2>
 800754a:	687b      	ldr	r3, [r7, #4]
 800754c:	4a27      	ldr	r2, [pc, #156]	; (80075ec <TIM_Base_SetConfig+0x12c>)
 800754e:	4293      	cmp	r3, r2
 8007550:	d00f      	beq.n	8007572 <TIM_Base_SetConfig+0xb2>
 8007552:	687b      	ldr	r3, [r7, #4]
 8007554:	4a26      	ldr	r2, [pc, #152]	; (80075f0 <TIM_Base_SetConfig+0x130>)
 8007556:	4293      	cmp	r3, r2
 8007558:	d00b      	beq.n	8007572 <TIM_Base_SetConfig+0xb2>
 800755a:	687b      	ldr	r3, [r7, #4]
 800755c:	4a25      	ldr	r2, [pc, #148]	; (80075f4 <TIM_Base_SetConfig+0x134>)
 800755e:	4293      	cmp	r3, r2
 8007560:	d007      	beq.n	8007572 <TIM_Base_SetConfig+0xb2>
 8007562:	687b      	ldr	r3, [r7, #4]
 8007564:	4a24      	ldr	r2, [pc, #144]	; (80075f8 <TIM_Base_SetConfig+0x138>)
 8007566:	4293      	cmp	r3, r2
 8007568:	d003      	beq.n	8007572 <TIM_Base_SetConfig+0xb2>
 800756a:	687b      	ldr	r3, [r7, #4]
 800756c:	4a23      	ldr	r2, [pc, #140]	; (80075fc <TIM_Base_SetConfig+0x13c>)
 800756e:	4293      	cmp	r3, r2
 8007570:	d108      	bne.n	8007584 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8007572:	68fb      	ldr	r3, [r7, #12]
 8007574:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007578:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800757a:	683b      	ldr	r3, [r7, #0]
 800757c:	68db      	ldr	r3, [r3, #12]
 800757e:	68fa      	ldr	r2, [r7, #12]
 8007580:	4313      	orrs	r3, r2
 8007582:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007584:	68fb      	ldr	r3, [r7, #12]
 8007586:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800758a:	683b      	ldr	r3, [r7, #0]
 800758c:	695b      	ldr	r3, [r3, #20]
 800758e:	4313      	orrs	r3, r2
 8007590:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8007592:	687b      	ldr	r3, [r7, #4]
 8007594:	68fa      	ldr	r2, [r7, #12]
 8007596:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007598:	683b      	ldr	r3, [r7, #0]
 800759a:	689a      	ldr	r2, [r3, #8]
 800759c:	687b      	ldr	r3, [r7, #4]
 800759e:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80075a0:	683b      	ldr	r3, [r7, #0]
 80075a2:	681a      	ldr	r2, [r3, #0]
 80075a4:	687b      	ldr	r3, [r7, #4]
 80075a6:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80075a8:	687b      	ldr	r3, [r7, #4]
 80075aa:	4a0a      	ldr	r2, [pc, #40]	; (80075d4 <TIM_Base_SetConfig+0x114>)
 80075ac:	4293      	cmp	r3, r2
 80075ae:	d003      	beq.n	80075b8 <TIM_Base_SetConfig+0xf8>
 80075b0:	687b      	ldr	r3, [r7, #4]
 80075b2:	4a0c      	ldr	r2, [pc, #48]	; (80075e4 <TIM_Base_SetConfig+0x124>)
 80075b4:	4293      	cmp	r3, r2
 80075b6:	d103      	bne.n	80075c0 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80075b8:	683b      	ldr	r3, [r7, #0]
 80075ba:	691a      	ldr	r2, [r3, #16]
 80075bc:	687b      	ldr	r3, [r7, #4]
 80075be:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80075c0:	687b      	ldr	r3, [r7, #4]
 80075c2:	2201      	movs	r2, #1
 80075c4:	615a      	str	r2, [r3, #20]
}
 80075c6:	bf00      	nop
 80075c8:	3714      	adds	r7, #20
 80075ca:	46bd      	mov	sp, r7
 80075cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075d0:	4770      	bx	lr
 80075d2:	bf00      	nop
 80075d4:	40010000 	.word	0x40010000
 80075d8:	40000400 	.word	0x40000400
 80075dc:	40000800 	.word	0x40000800
 80075e0:	40000c00 	.word	0x40000c00
 80075e4:	40010400 	.word	0x40010400
 80075e8:	40014000 	.word	0x40014000
 80075ec:	40014400 	.word	0x40014400
 80075f0:	40014800 	.word	0x40014800
 80075f4:	40001800 	.word	0x40001800
 80075f8:	40001c00 	.word	0x40001c00
 80075fc:	40002000 	.word	0x40002000

08007600 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8007600:	b480      	push	{r7}
 8007602:	b087      	sub	sp, #28
 8007604:	af00      	add	r7, sp, #0
 8007606:	6078      	str	r0, [r7, #4]
 8007608:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800760a:	687b      	ldr	r3, [r7, #4]
 800760c:	6a1b      	ldr	r3, [r3, #32]
 800760e:	f023 0201 	bic.w	r2, r3, #1
 8007612:	687b      	ldr	r3, [r7, #4]
 8007614:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007616:	687b      	ldr	r3, [r7, #4]
 8007618:	6a1b      	ldr	r3, [r3, #32]
 800761a:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800761c:	687b      	ldr	r3, [r7, #4]
 800761e:	685b      	ldr	r3, [r3, #4]
 8007620:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8007622:	687b      	ldr	r3, [r7, #4]
 8007624:	699b      	ldr	r3, [r3, #24]
 8007626:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8007628:	68fb      	ldr	r3, [r7, #12]
 800762a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800762e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8007630:	68fb      	ldr	r3, [r7, #12]
 8007632:	f023 0303 	bic.w	r3, r3, #3
 8007636:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8007638:	683b      	ldr	r3, [r7, #0]
 800763a:	681b      	ldr	r3, [r3, #0]
 800763c:	68fa      	ldr	r2, [r7, #12]
 800763e:	4313      	orrs	r3, r2
 8007640:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8007642:	697b      	ldr	r3, [r7, #20]
 8007644:	f023 0302 	bic.w	r3, r3, #2
 8007648:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 800764a:	683b      	ldr	r3, [r7, #0]
 800764c:	689b      	ldr	r3, [r3, #8]
 800764e:	697a      	ldr	r2, [r7, #20]
 8007650:	4313      	orrs	r3, r2
 8007652:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8007654:	687b      	ldr	r3, [r7, #4]
 8007656:	4a20      	ldr	r2, [pc, #128]	; (80076d8 <TIM_OC1_SetConfig+0xd8>)
 8007658:	4293      	cmp	r3, r2
 800765a:	d003      	beq.n	8007664 <TIM_OC1_SetConfig+0x64>
 800765c:	687b      	ldr	r3, [r7, #4]
 800765e:	4a1f      	ldr	r2, [pc, #124]	; (80076dc <TIM_OC1_SetConfig+0xdc>)
 8007660:	4293      	cmp	r3, r2
 8007662:	d10c      	bne.n	800767e <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8007664:	697b      	ldr	r3, [r7, #20]
 8007666:	f023 0308 	bic.w	r3, r3, #8
 800766a:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 800766c:	683b      	ldr	r3, [r7, #0]
 800766e:	68db      	ldr	r3, [r3, #12]
 8007670:	697a      	ldr	r2, [r7, #20]
 8007672:	4313      	orrs	r3, r2
 8007674:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8007676:	697b      	ldr	r3, [r7, #20]
 8007678:	f023 0304 	bic.w	r3, r3, #4
 800767c:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800767e:	687b      	ldr	r3, [r7, #4]
 8007680:	4a15      	ldr	r2, [pc, #84]	; (80076d8 <TIM_OC1_SetConfig+0xd8>)
 8007682:	4293      	cmp	r3, r2
 8007684:	d003      	beq.n	800768e <TIM_OC1_SetConfig+0x8e>
 8007686:	687b      	ldr	r3, [r7, #4]
 8007688:	4a14      	ldr	r2, [pc, #80]	; (80076dc <TIM_OC1_SetConfig+0xdc>)
 800768a:	4293      	cmp	r3, r2
 800768c:	d111      	bne.n	80076b2 <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 800768e:	693b      	ldr	r3, [r7, #16]
 8007690:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007694:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8007696:	693b      	ldr	r3, [r7, #16]
 8007698:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800769c:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 800769e:	683b      	ldr	r3, [r7, #0]
 80076a0:	695b      	ldr	r3, [r3, #20]
 80076a2:	693a      	ldr	r2, [r7, #16]
 80076a4:	4313      	orrs	r3, r2
 80076a6:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 80076a8:	683b      	ldr	r3, [r7, #0]
 80076aa:	699b      	ldr	r3, [r3, #24]
 80076ac:	693a      	ldr	r2, [r7, #16]
 80076ae:	4313      	orrs	r3, r2
 80076b0:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80076b2:	687b      	ldr	r3, [r7, #4]
 80076b4:	693a      	ldr	r2, [r7, #16]
 80076b6:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 80076b8:	687b      	ldr	r3, [r7, #4]
 80076ba:	68fa      	ldr	r2, [r7, #12]
 80076bc:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 80076be:	683b      	ldr	r3, [r7, #0]
 80076c0:	685a      	ldr	r2, [r3, #4]
 80076c2:	687b      	ldr	r3, [r7, #4]
 80076c4:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80076c6:	687b      	ldr	r3, [r7, #4]
 80076c8:	697a      	ldr	r2, [r7, #20]
 80076ca:	621a      	str	r2, [r3, #32]
}
 80076cc:	bf00      	nop
 80076ce:	371c      	adds	r7, #28
 80076d0:	46bd      	mov	sp, r7
 80076d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076d6:	4770      	bx	lr
 80076d8:	40010000 	.word	0x40010000
 80076dc:	40010400 	.word	0x40010400

080076e0 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 80076e0:	b480      	push	{r7}
 80076e2:	b087      	sub	sp, #28
 80076e4:	af00      	add	r7, sp, #0
 80076e6:	6078      	str	r0, [r7, #4]
 80076e8:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80076ea:	687b      	ldr	r3, [r7, #4]
 80076ec:	6a1b      	ldr	r3, [r3, #32]
 80076ee:	f023 0210 	bic.w	r2, r3, #16
 80076f2:	687b      	ldr	r3, [r7, #4]
 80076f4:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80076f6:	687b      	ldr	r3, [r7, #4]
 80076f8:	6a1b      	ldr	r3, [r3, #32]
 80076fa:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80076fc:	687b      	ldr	r3, [r7, #4]
 80076fe:	685b      	ldr	r3, [r3, #4]
 8007700:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8007702:	687b      	ldr	r3, [r7, #4]
 8007704:	699b      	ldr	r3, [r3, #24]
 8007706:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8007708:	68fb      	ldr	r3, [r7, #12]
 800770a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800770e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8007710:	68fb      	ldr	r3, [r7, #12]
 8007712:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007716:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007718:	683b      	ldr	r3, [r7, #0]
 800771a:	681b      	ldr	r3, [r3, #0]
 800771c:	021b      	lsls	r3, r3, #8
 800771e:	68fa      	ldr	r2, [r7, #12]
 8007720:	4313      	orrs	r3, r2
 8007722:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8007724:	697b      	ldr	r3, [r7, #20]
 8007726:	f023 0320 	bic.w	r3, r3, #32
 800772a:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800772c:	683b      	ldr	r3, [r7, #0]
 800772e:	689b      	ldr	r3, [r3, #8]
 8007730:	011b      	lsls	r3, r3, #4
 8007732:	697a      	ldr	r2, [r7, #20]
 8007734:	4313      	orrs	r3, r2
 8007736:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	4a22      	ldr	r2, [pc, #136]	; (80077c4 <TIM_OC2_SetConfig+0xe4>)
 800773c:	4293      	cmp	r3, r2
 800773e:	d003      	beq.n	8007748 <TIM_OC2_SetConfig+0x68>
 8007740:	687b      	ldr	r3, [r7, #4]
 8007742:	4a21      	ldr	r2, [pc, #132]	; (80077c8 <TIM_OC2_SetConfig+0xe8>)
 8007744:	4293      	cmp	r3, r2
 8007746:	d10d      	bne.n	8007764 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8007748:	697b      	ldr	r3, [r7, #20]
 800774a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800774e:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8007750:	683b      	ldr	r3, [r7, #0]
 8007752:	68db      	ldr	r3, [r3, #12]
 8007754:	011b      	lsls	r3, r3, #4
 8007756:	697a      	ldr	r2, [r7, #20]
 8007758:	4313      	orrs	r3, r2
 800775a:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 800775c:	697b      	ldr	r3, [r7, #20]
 800775e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007762:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007764:	687b      	ldr	r3, [r7, #4]
 8007766:	4a17      	ldr	r2, [pc, #92]	; (80077c4 <TIM_OC2_SetConfig+0xe4>)
 8007768:	4293      	cmp	r3, r2
 800776a:	d003      	beq.n	8007774 <TIM_OC2_SetConfig+0x94>
 800776c:	687b      	ldr	r3, [r7, #4]
 800776e:	4a16      	ldr	r2, [pc, #88]	; (80077c8 <TIM_OC2_SetConfig+0xe8>)
 8007770:	4293      	cmp	r3, r2
 8007772:	d113      	bne.n	800779c <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8007774:	693b      	ldr	r3, [r7, #16]
 8007776:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800777a:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800777c:	693b      	ldr	r3, [r7, #16]
 800777e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007782:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8007784:	683b      	ldr	r3, [r7, #0]
 8007786:	695b      	ldr	r3, [r3, #20]
 8007788:	009b      	lsls	r3, r3, #2
 800778a:	693a      	ldr	r2, [r7, #16]
 800778c:	4313      	orrs	r3, r2
 800778e:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8007790:	683b      	ldr	r3, [r7, #0]
 8007792:	699b      	ldr	r3, [r3, #24]
 8007794:	009b      	lsls	r3, r3, #2
 8007796:	693a      	ldr	r2, [r7, #16]
 8007798:	4313      	orrs	r3, r2
 800779a:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800779c:	687b      	ldr	r3, [r7, #4]
 800779e:	693a      	ldr	r2, [r7, #16]
 80077a0:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 80077a2:	687b      	ldr	r3, [r7, #4]
 80077a4:	68fa      	ldr	r2, [r7, #12]
 80077a6:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 80077a8:	683b      	ldr	r3, [r7, #0]
 80077aa:	685a      	ldr	r2, [r3, #4]
 80077ac:	687b      	ldr	r3, [r7, #4]
 80077ae:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80077b0:	687b      	ldr	r3, [r7, #4]
 80077b2:	697a      	ldr	r2, [r7, #20]
 80077b4:	621a      	str	r2, [r3, #32]
}
 80077b6:	bf00      	nop
 80077b8:	371c      	adds	r7, #28
 80077ba:	46bd      	mov	sp, r7
 80077bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077c0:	4770      	bx	lr
 80077c2:	bf00      	nop
 80077c4:	40010000 	.word	0x40010000
 80077c8:	40010400 	.word	0x40010400

080077cc <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 80077cc:	b480      	push	{r7}
 80077ce:	b087      	sub	sp, #28
 80077d0:	af00      	add	r7, sp, #0
 80077d2:	6078      	str	r0, [r7, #4]
 80077d4:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80077d6:	687b      	ldr	r3, [r7, #4]
 80077d8:	6a1b      	ldr	r3, [r3, #32]
 80077da:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80077de:	687b      	ldr	r3, [r7, #4]
 80077e0:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80077e2:	687b      	ldr	r3, [r7, #4]
 80077e4:	6a1b      	ldr	r3, [r3, #32]
 80077e6:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80077e8:	687b      	ldr	r3, [r7, #4]
 80077ea:	685b      	ldr	r3, [r3, #4]
 80077ec:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80077ee:	687b      	ldr	r3, [r7, #4]
 80077f0:	69db      	ldr	r3, [r3, #28]
 80077f2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 80077f4:	68fb      	ldr	r3, [r7, #12]
 80077f6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80077fa:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 80077fc:	68fb      	ldr	r3, [r7, #12]
 80077fe:	f023 0303 	bic.w	r3, r3, #3
 8007802:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8007804:	683b      	ldr	r3, [r7, #0]
 8007806:	681b      	ldr	r3, [r3, #0]
 8007808:	68fa      	ldr	r2, [r7, #12]
 800780a:	4313      	orrs	r3, r2
 800780c:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 800780e:	697b      	ldr	r3, [r7, #20]
 8007810:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8007814:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8007816:	683b      	ldr	r3, [r7, #0]
 8007818:	689b      	ldr	r3, [r3, #8]
 800781a:	021b      	lsls	r3, r3, #8
 800781c:	697a      	ldr	r2, [r7, #20]
 800781e:	4313      	orrs	r3, r2
 8007820:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8007822:	687b      	ldr	r3, [r7, #4]
 8007824:	4a21      	ldr	r2, [pc, #132]	; (80078ac <TIM_OC3_SetConfig+0xe0>)
 8007826:	4293      	cmp	r3, r2
 8007828:	d003      	beq.n	8007832 <TIM_OC3_SetConfig+0x66>
 800782a:	687b      	ldr	r3, [r7, #4]
 800782c:	4a20      	ldr	r2, [pc, #128]	; (80078b0 <TIM_OC3_SetConfig+0xe4>)
 800782e:	4293      	cmp	r3, r2
 8007830:	d10d      	bne.n	800784e <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8007832:	697b      	ldr	r3, [r7, #20]
 8007834:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007838:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800783a:	683b      	ldr	r3, [r7, #0]
 800783c:	68db      	ldr	r3, [r3, #12]
 800783e:	021b      	lsls	r3, r3, #8
 8007840:	697a      	ldr	r2, [r7, #20]
 8007842:	4313      	orrs	r3, r2
 8007844:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8007846:	697b      	ldr	r3, [r7, #20]
 8007848:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800784c:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800784e:	687b      	ldr	r3, [r7, #4]
 8007850:	4a16      	ldr	r2, [pc, #88]	; (80078ac <TIM_OC3_SetConfig+0xe0>)
 8007852:	4293      	cmp	r3, r2
 8007854:	d003      	beq.n	800785e <TIM_OC3_SetConfig+0x92>
 8007856:	687b      	ldr	r3, [r7, #4]
 8007858:	4a15      	ldr	r2, [pc, #84]	; (80078b0 <TIM_OC3_SetConfig+0xe4>)
 800785a:	4293      	cmp	r3, r2
 800785c:	d113      	bne.n	8007886 <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 800785e:	693b      	ldr	r3, [r7, #16]
 8007860:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007864:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8007866:	693b      	ldr	r3, [r7, #16]
 8007868:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800786c:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 800786e:	683b      	ldr	r3, [r7, #0]
 8007870:	695b      	ldr	r3, [r3, #20]
 8007872:	011b      	lsls	r3, r3, #4
 8007874:	693a      	ldr	r2, [r7, #16]
 8007876:	4313      	orrs	r3, r2
 8007878:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800787a:	683b      	ldr	r3, [r7, #0]
 800787c:	699b      	ldr	r3, [r3, #24]
 800787e:	011b      	lsls	r3, r3, #4
 8007880:	693a      	ldr	r2, [r7, #16]
 8007882:	4313      	orrs	r3, r2
 8007884:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007886:	687b      	ldr	r3, [r7, #4]
 8007888:	693a      	ldr	r2, [r7, #16]
 800788a:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800788c:	687b      	ldr	r3, [r7, #4]
 800788e:	68fa      	ldr	r2, [r7, #12]
 8007890:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8007892:	683b      	ldr	r3, [r7, #0]
 8007894:	685a      	ldr	r2, [r3, #4]
 8007896:	687b      	ldr	r3, [r7, #4]
 8007898:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800789a:	687b      	ldr	r3, [r7, #4]
 800789c:	697a      	ldr	r2, [r7, #20]
 800789e:	621a      	str	r2, [r3, #32]
}
 80078a0:	bf00      	nop
 80078a2:	371c      	adds	r7, #28
 80078a4:	46bd      	mov	sp, r7
 80078a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078aa:	4770      	bx	lr
 80078ac:	40010000 	.word	0x40010000
 80078b0:	40010400 	.word	0x40010400

080078b4 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 80078b4:	b480      	push	{r7}
 80078b6:	b087      	sub	sp, #28
 80078b8:	af00      	add	r7, sp, #0
 80078ba:	6078      	str	r0, [r7, #4]
 80078bc:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	6a1b      	ldr	r3, [r3, #32]
 80078c2:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80078c6:	687b      	ldr	r3, [r7, #4]
 80078c8:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80078ca:	687b      	ldr	r3, [r7, #4]
 80078cc:	6a1b      	ldr	r3, [r3, #32]
 80078ce:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80078d0:	687b      	ldr	r3, [r7, #4]
 80078d2:	685b      	ldr	r3, [r3, #4]
 80078d4:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80078d6:	687b      	ldr	r3, [r7, #4]
 80078d8:	69db      	ldr	r3, [r3, #28]
 80078da:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 80078dc:	68fb      	ldr	r3, [r7, #12]
 80078de:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80078e2:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 80078e4:	68fb      	ldr	r3, [r7, #12]
 80078e6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80078ea:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80078ec:	683b      	ldr	r3, [r7, #0]
 80078ee:	681b      	ldr	r3, [r3, #0]
 80078f0:	021b      	lsls	r3, r3, #8
 80078f2:	68fa      	ldr	r2, [r7, #12]
 80078f4:	4313      	orrs	r3, r2
 80078f6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 80078f8:	693b      	ldr	r3, [r7, #16]
 80078fa:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80078fe:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8007900:	683b      	ldr	r3, [r7, #0]
 8007902:	689b      	ldr	r3, [r3, #8]
 8007904:	031b      	lsls	r3, r3, #12
 8007906:	693a      	ldr	r2, [r7, #16]
 8007908:	4313      	orrs	r3, r2
 800790a:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800790c:	687b      	ldr	r3, [r7, #4]
 800790e:	4a12      	ldr	r2, [pc, #72]	; (8007958 <TIM_OC4_SetConfig+0xa4>)
 8007910:	4293      	cmp	r3, r2
 8007912:	d003      	beq.n	800791c <TIM_OC4_SetConfig+0x68>
 8007914:	687b      	ldr	r3, [r7, #4]
 8007916:	4a11      	ldr	r2, [pc, #68]	; (800795c <TIM_OC4_SetConfig+0xa8>)
 8007918:	4293      	cmp	r3, r2
 800791a:	d109      	bne.n	8007930 <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 800791c:	697b      	ldr	r3, [r7, #20]
 800791e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8007922:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8007924:	683b      	ldr	r3, [r7, #0]
 8007926:	695b      	ldr	r3, [r3, #20]
 8007928:	019b      	lsls	r3, r3, #6
 800792a:	697a      	ldr	r2, [r7, #20]
 800792c:	4313      	orrs	r3, r2
 800792e:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007930:	687b      	ldr	r3, [r7, #4]
 8007932:	697a      	ldr	r2, [r7, #20]
 8007934:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8007936:	687b      	ldr	r3, [r7, #4]
 8007938:	68fa      	ldr	r2, [r7, #12]
 800793a:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800793c:	683b      	ldr	r3, [r7, #0]
 800793e:	685a      	ldr	r2, [r3, #4]
 8007940:	687b      	ldr	r3, [r7, #4]
 8007942:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007944:	687b      	ldr	r3, [r7, #4]
 8007946:	693a      	ldr	r2, [r7, #16]
 8007948:	621a      	str	r2, [r3, #32]
}
 800794a:	bf00      	nop
 800794c:	371c      	adds	r7, #28
 800794e:	46bd      	mov	sp, r7
 8007950:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007954:	4770      	bx	lr
 8007956:	bf00      	nop
 8007958:	40010000 	.word	0x40010000
 800795c:	40010400 	.word	0x40010400

08007960 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007960:	b480      	push	{r7}
 8007962:	b087      	sub	sp, #28
 8007964:	af00      	add	r7, sp, #0
 8007966:	60f8      	str	r0, [r7, #12]
 8007968:	60b9      	str	r1, [r7, #8]
 800796a:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800796c:	68fb      	ldr	r3, [r7, #12]
 800796e:	6a1b      	ldr	r3, [r3, #32]
 8007970:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007972:	68fb      	ldr	r3, [r7, #12]
 8007974:	6a1b      	ldr	r3, [r3, #32]
 8007976:	f023 0201 	bic.w	r2, r3, #1
 800797a:	68fb      	ldr	r3, [r7, #12]
 800797c:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800797e:	68fb      	ldr	r3, [r7, #12]
 8007980:	699b      	ldr	r3, [r3, #24]
 8007982:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8007984:	693b      	ldr	r3, [r7, #16]
 8007986:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800798a:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800798c:	687b      	ldr	r3, [r7, #4]
 800798e:	011b      	lsls	r3, r3, #4
 8007990:	693a      	ldr	r2, [r7, #16]
 8007992:	4313      	orrs	r3, r2
 8007994:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8007996:	697b      	ldr	r3, [r7, #20]
 8007998:	f023 030a 	bic.w	r3, r3, #10
 800799c:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 800799e:	697a      	ldr	r2, [r7, #20]
 80079a0:	68bb      	ldr	r3, [r7, #8]
 80079a2:	4313      	orrs	r3, r2
 80079a4:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 80079a6:	68fb      	ldr	r3, [r7, #12]
 80079a8:	693a      	ldr	r2, [r7, #16]
 80079aa:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 80079ac:	68fb      	ldr	r3, [r7, #12]
 80079ae:	697a      	ldr	r2, [r7, #20]
 80079b0:	621a      	str	r2, [r3, #32]
}
 80079b2:	bf00      	nop
 80079b4:	371c      	adds	r7, #28
 80079b6:	46bd      	mov	sp, r7
 80079b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079bc:	4770      	bx	lr

080079be <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 80079be:	b480      	push	{r7}
 80079c0:	b087      	sub	sp, #28
 80079c2:	af00      	add	r7, sp, #0
 80079c4:	60f8      	str	r0, [r7, #12]
 80079c6:	60b9      	str	r1, [r7, #8]
 80079c8:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80079ca:	68fb      	ldr	r3, [r7, #12]
 80079cc:	6a1b      	ldr	r3, [r3, #32]
 80079ce:	f023 0210 	bic.w	r2, r3, #16
 80079d2:	68fb      	ldr	r3, [r7, #12]
 80079d4:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80079d6:	68fb      	ldr	r3, [r7, #12]
 80079d8:	699b      	ldr	r3, [r3, #24]
 80079da:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 80079dc:	68fb      	ldr	r3, [r7, #12]
 80079de:	6a1b      	ldr	r3, [r3, #32]
 80079e0:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80079e2:	697b      	ldr	r3, [r7, #20]
 80079e4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80079e8:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 80079ea:	687b      	ldr	r3, [r7, #4]
 80079ec:	031b      	lsls	r3, r3, #12
 80079ee:	697a      	ldr	r2, [r7, #20]
 80079f0:	4313      	orrs	r3, r2
 80079f2:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 80079f4:	693b      	ldr	r3, [r7, #16]
 80079f6:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80079fa:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 80079fc:	68bb      	ldr	r3, [r7, #8]
 80079fe:	011b      	lsls	r3, r3, #4
 8007a00:	693a      	ldr	r2, [r7, #16]
 8007a02:	4313      	orrs	r3, r2
 8007a04:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8007a06:	68fb      	ldr	r3, [r7, #12]
 8007a08:	697a      	ldr	r2, [r7, #20]
 8007a0a:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007a0c:	68fb      	ldr	r3, [r7, #12]
 8007a0e:	693a      	ldr	r2, [r7, #16]
 8007a10:	621a      	str	r2, [r3, #32]
}
 8007a12:	bf00      	nop
 8007a14:	371c      	adds	r7, #28
 8007a16:	46bd      	mov	sp, r7
 8007a18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a1c:	4770      	bx	lr

08007a1e <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8007a1e:	b480      	push	{r7}
 8007a20:	b085      	sub	sp, #20
 8007a22:	af00      	add	r7, sp, #0
 8007a24:	6078      	str	r0, [r7, #4]
 8007a26:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8007a28:	687b      	ldr	r3, [r7, #4]
 8007a2a:	689b      	ldr	r3, [r3, #8]
 8007a2c:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8007a2e:	68fb      	ldr	r3, [r7, #12]
 8007a30:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007a34:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007a36:	683a      	ldr	r2, [r7, #0]
 8007a38:	68fb      	ldr	r3, [r7, #12]
 8007a3a:	4313      	orrs	r3, r2
 8007a3c:	f043 0307 	orr.w	r3, r3, #7
 8007a40:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007a42:	687b      	ldr	r3, [r7, #4]
 8007a44:	68fa      	ldr	r2, [r7, #12]
 8007a46:	609a      	str	r2, [r3, #8]
}
 8007a48:	bf00      	nop
 8007a4a:	3714      	adds	r7, #20
 8007a4c:	46bd      	mov	sp, r7
 8007a4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a52:	4770      	bx	lr

08007a54 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8007a54:	b480      	push	{r7}
 8007a56:	b087      	sub	sp, #28
 8007a58:	af00      	add	r7, sp, #0
 8007a5a:	60f8      	str	r0, [r7, #12]
 8007a5c:	60b9      	str	r1, [r7, #8]
 8007a5e:	607a      	str	r2, [r7, #4]
 8007a60:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8007a62:	68fb      	ldr	r3, [r7, #12]
 8007a64:	689b      	ldr	r3, [r3, #8]
 8007a66:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007a68:	697b      	ldr	r3, [r7, #20]
 8007a6a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007a6e:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8007a70:	683b      	ldr	r3, [r7, #0]
 8007a72:	021a      	lsls	r2, r3, #8
 8007a74:	687b      	ldr	r3, [r7, #4]
 8007a76:	431a      	orrs	r2, r3
 8007a78:	68bb      	ldr	r3, [r7, #8]
 8007a7a:	4313      	orrs	r3, r2
 8007a7c:	697a      	ldr	r2, [r7, #20]
 8007a7e:	4313      	orrs	r3, r2
 8007a80:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007a82:	68fb      	ldr	r3, [r7, #12]
 8007a84:	697a      	ldr	r2, [r7, #20]
 8007a86:	609a      	str	r2, [r3, #8]
}
 8007a88:	bf00      	nop
 8007a8a:	371c      	adds	r7, #28
 8007a8c:	46bd      	mov	sp, r7
 8007a8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a92:	4770      	bx	lr

08007a94 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8007a94:	b480      	push	{r7}
 8007a96:	b087      	sub	sp, #28
 8007a98:	af00      	add	r7, sp, #0
 8007a9a:	60f8      	str	r0, [r7, #12]
 8007a9c:	60b9      	str	r1, [r7, #8]
 8007a9e:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8007aa0:	68bb      	ldr	r3, [r7, #8]
 8007aa2:	f003 031f 	and.w	r3, r3, #31
 8007aa6:	2201      	movs	r2, #1
 8007aa8:	fa02 f303 	lsl.w	r3, r2, r3
 8007aac:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8007aae:	68fb      	ldr	r3, [r7, #12]
 8007ab0:	6a1a      	ldr	r2, [r3, #32]
 8007ab2:	697b      	ldr	r3, [r7, #20]
 8007ab4:	43db      	mvns	r3, r3
 8007ab6:	401a      	ands	r2, r3
 8007ab8:	68fb      	ldr	r3, [r7, #12]
 8007aba:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8007abc:	68fb      	ldr	r3, [r7, #12]
 8007abe:	6a1a      	ldr	r2, [r3, #32]
 8007ac0:	68bb      	ldr	r3, [r7, #8]
 8007ac2:	f003 031f 	and.w	r3, r3, #31
 8007ac6:	6879      	ldr	r1, [r7, #4]
 8007ac8:	fa01 f303 	lsl.w	r3, r1, r3
 8007acc:	431a      	orrs	r2, r3
 8007ace:	68fb      	ldr	r3, [r7, #12]
 8007ad0:	621a      	str	r2, [r3, #32]
}
 8007ad2:	bf00      	nop
 8007ad4:	371c      	adds	r7, #28
 8007ad6:	46bd      	mov	sp, r7
 8007ad8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007adc:	4770      	bx	lr
	...

08007ae0 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8007ae0:	b480      	push	{r7}
 8007ae2:	b085      	sub	sp, #20
 8007ae4:	af00      	add	r7, sp, #0
 8007ae6:	6078      	str	r0, [r7, #4]
 8007ae8:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8007aea:	687b      	ldr	r3, [r7, #4]
 8007aec:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007af0:	2b01      	cmp	r3, #1
 8007af2:	d101      	bne.n	8007af8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007af4:	2302      	movs	r3, #2
 8007af6:	e05a      	b.n	8007bae <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8007af8:	687b      	ldr	r3, [r7, #4]
 8007afa:	2201      	movs	r2, #1
 8007afc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007b00:	687b      	ldr	r3, [r7, #4]
 8007b02:	2202      	movs	r2, #2
 8007b04:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8007b08:	687b      	ldr	r3, [r7, #4]
 8007b0a:	681b      	ldr	r3, [r3, #0]
 8007b0c:	685b      	ldr	r3, [r3, #4]
 8007b0e:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8007b10:	687b      	ldr	r3, [r7, #4]
 8007b12:	681b      	ldr	r3, [r3, #0]
 8007b14:	689b      	ldr	r3, [r3, #8]
 8007b16:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8007b18:	68fb      	ldr	r3, [r7, #12]
 8007b1a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007b1e:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007b20:	683b      	ldr	r3, [r7, #0]
 8007b22:	681b      	ldr	r3, [r3, #0]
 8007b24:	68fa      	ldr	r2, [r7, #12]
 8007b26:	4313      	orrs	r3, r2
 8007b28:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007b2a:	687b      	ldr	r3, [r7, #4]
 8007b2c:	681b      	ldr	r3, [r3, #0]
 8007b2e:	68fa      	ldr	r2, [r7, #12]
 8007b30:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007b32:	687b      	ldr	r3, [r7, #4]
 8007b34:	681b      	ldr	r3, [r3, #0]
 8007b36:	4a21      	ldr	r2, [pc, #132]	; (8007bbc <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8007b38:	4293      	cmp	r3, r2
 8007b3a:	d022      	beq.n	8007b82 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007b3c:	687b      	ldr	r3, [r7, #4]
 8007b3e:	681b      	ldr	r3, [r3, #0]
 8007b40:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007b44:	d01d      	beq.n	8007b82 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007b46:	687b      	ldr	r3, [r7, #4]
 8007b48:	681b      	ldr	r3, [r3, #0]
 8007b4a:	4a1d      	ldr	r2, [pc, #116]	; (8007bc0 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8007b4c:	4293      	cmp	r3, r2
 8007b4e:	d018      	beq.n	8007b82 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007b50:	687b      	ldr	r3, [r7, #4]
 8007b52:	681b      	ldr	r3, [r3, #0]
 8007b54:	4a1b      	ldr	r2, [pc, #108]	; (8007bc4 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8007b56:	4293      	cmp	r3, r2
 8007b58:	d013      	beq.n	8007b82 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007b5a:	687b      	ldr	r3, [r7, #4]
 8007b5c:	681b      	ldr	r3, [r3, #0]
 8007b5e:	4a1a      	ldr	r2, [pc, #104]	; (8007bc8 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8007b60:	4293      	cmp	r3, r2
 8007b62:	d00e      	beq.n	8007b82 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	681b      	ldr	r3, [r3, #0]
 8007b68:	4a18      	ldr	r2, [pc, #96]	; (8007bcc <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8007b6a:	4293      	cmp	r3, r2
 8007b6c:	d009      	beq.n	8007b82 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007b6e:	687b      	ldr	r3, [r7, #4]
 8007b70:	681b      	ldr	r3, [r3, #0]
 8007b72:	4a17      	ldr	r2, [pc, #92]	; (8007bd0 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8007b74:	4293      	cmp	r3, r2
 8007b76:	d004      	beq.n	8007b82 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007b78:	687b      	ldr	r3, [r7, #4]
 8007b7a:	681b      	ldr	r3, [r3, #0]
 8007b7c:	4a15      	ldr	r2, [pc, #84]	; (8007bd4 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8007b7e:	4293      	cmp	r3, r2
 8007b80:	d10c      	bne.n	8007b9c <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8007b82:	68bb      	ldr	r3, [r7, #8]
 8007b84:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007b88:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007b8a:	683b      	ldr	r3, [r7, #0]
 8007b8c:	685b      	ldr	r3, [r3, #4]
 8007b8e:	68ba      	ldr	r2, [r7, #8]
 8007b90:	4313      	orrs	r3, r2
 8007b92:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8007b94:	687b      	ldr	r3, [r7, #4]
 8007b96:	681b      	ldr	r3, [r3, #0]
 8007b98:	68ba      	ldr	r2, [r7, #8]
 8007b9a:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8007b9c:	687b      	ldr	r3, [r7, #4]
 8007b9e:	2201      	movs	r2, #1
 8007ba0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8007ba4:	687b      	ldr	r3, [r7, #4]
 8007ba6:	2200      	movs	r2, #0
 8007ba8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8007bac:	2300      	movs	r3, #0
}
 8007bae:	4618      	mov	r0, r3
 8007bb0:	3714      	adds	r7, #20
 8007bb2:	46bd      	mov	sp, r7
 8007bb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bb8:	4770      	bx	lr
 8007bba:	bf00      	nop
 8007bbc:	40010000 	.word	0x40010000
 8007bc0:	40000400 	.word	0x40000400
 8007bc4:	40000800 	.word	0x40000800
 8007bc8:	40000c00 	.word	0x40000c00
 8007bcc:	40010400 	.word	0x40010400
 8007bd0:	40014000 	.word	0x40014000
 8007bd4:	40001800 	.word	0x40001800

08007bd8 <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8007bd8:	b580      	push	{r7, lr}
 8007bda:	b082      	sub	sp, #8
 8007bdc:	af00      	add	r7, sp, #0
 8007bde:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8007be0:	687b      	ldr	r3, [r7, #4]
 8007be2:	2b00      	cmp	r3, #0
 8007be4:	d101      	bne.n	8007bea <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8007be6:	2301      	movs	r3, #1
 8007be8:	e03f      	b.n	8007c6a <HAL_UART_Init+0x92>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
 8007bea:	687b      	ldr	r3, [r7, #4]
 8007bec:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8007bf0:	b2db      	uxtb	r3, r3
 8007bf2:	2b00      	cmp	r3, #0
 8007bf4:	d106      	bne.n	8007c04 <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8007bf6:	687b      	ldr	r3, [r7, #4]
 8007bf8:	2200      	movs	r2, #0
 8007bfa:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8007bfe:	6878      	ldr	r0, [r7, #4]
 8007c00:	f7fa fc2c 	bl	800245c <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8007c04:	687b      	ldr	r3, [r7, #4]
 8007c06:	2224      	movs	r2, #36	; 0x24
 8007c08:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 8007c0c:	687b      	ldr	r3, [r7, #4]
 8007c0e:	681b      	ldr	r3, [r3, #0]
 8007c10:	68da      	ldr	r2, [r3, #12]
 8007c12:	687b      	ldr	r3, [r7, #4]
 8007c14:	681b      	ldr	r3, [r3, #0]
 8007c16:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007c1a:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 8007c1c:	6878      	ldr	r0, [r7, #4]
 8007c1e:	f000 fb97 	bl	8008350 <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8007c22:	687b      	ldr	r3, [r7, #4]
 8007c24:	681b      	ldr	r3, [r3, #0]
 8007c26:	691a      	ldr	r2, [r3, #16]
 8007c28:	687b      	ldr	r3, [r7, #4]
 8007c2a:	681b      	ldr	r3, [r3, #0]
 8007c2c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8007c30:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8007c32:	687b      	ldr	r3, [r7, #4]
 8007c34:	681b      	ldr	r3, [r3, #0]
 8007c36:	695a      	ldr	r2, [r3, #20]
 8007c38:	687b      	ldr	r3, [r7, #4]
 8007c3a:	681b      	ldr	r3, [r3, #0]
 8007c3c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8007c40:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 8007c42:	687b      	ldr	r3, [r7, #4]
 8007c44:	681b      	ldr	r3, [r3, #0]
 8007c46:	68da      	ldr	r2, [r3, #12]
 8007c48:	687b      	ldr	r3, [r7, #4]
 8007c4a:	681b      	ldr	r3, [r3, #0]
 8007c4c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007c50:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007c52:	687b      	ldr	r3, [r7, #4]
 8007c54:	2200      	movs	r2, #0
 8007c56:	63da      	str	r2, [r3, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
 8007c58:	687b      	ldr	r3, [r7, #4]
 8007c5a:	2220      	movs	r2, #32
 8007c5c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
 8007c60:	687b      	ldr	r3, [r7, #4]
 8007c62:	2220      	movs	r2, #32
 8007c64:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

  return HAL_OK;
 8007c68:	2300      	movs	r3, #0
}
 8007c6a:	4618      	mov	r0, r3
 8007c6c:	3708      	adds	r7, #8
 8007c6e:	46bd      	mov	sp, r7
 8007c70:	bd80      	pop	{r7, pc}

08007c72 <HAL_UART_Transmit>:
  * @param  Size  Amount of data elements (u8 or u16) to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8007c72:	b580      	push	{r7, lr}
 8007c74:	b088      	sub	sp, #32
 8007c76:	af02      	add	r7, sp, #8
 8007c78:	60f8      	str	r0, [r7, #12]
 8007c7a:	60b9      	str	r1, [r7, #8]
 8007c7c:	603b      	str	r3, [r7, #0]
 8007c7e:	4613      	mov	r3, r2
 8007c80:	80fb      	strh	r3, [r7, #6]
  uint16_t *tmp;
  uint32_t tickstart = 0U;
 8007c82:	2300      	movs	r3, #0
 8007c84:	617b      	str	r3, [r7, #20]

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8007c86:	68fb      	ldr	r3, [r7, #12]
 8007c88:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8007c8c:	b2db      	uxtb	r3, r3
 8007c8e:	2b20      	cmp	r3, #32
 8007c90:	f040 8083 	bne.w	8007d9a <HAL_UART_Transmit+0x128>
  {
    if ((pData == NULL) || (Size == 0U))
 8007c94:	68bb      	ldr	r3, [r7, #8]
 8007c96:	2b00      	cmp	r3, #0
 8007c98:	d002      	beq.n	8007ca0 <HAL_UART_Transmit+0x2e>
 8007c9a:	88fb      	ldrh	r3, [r7, #6]
 8007c9c:	2b00      	cmp	r3, #0
 8007c9e:	d101      	bne.n	8007ca4 <HAL_UART_Transmit+0x32>
    {
      return  HAL_ERROR;
 8007ca0:	2301      	movs	r3, #1
 8007ca2:	e07b      	b.n	8007d9c <HAL_UART_Transmit+0x12a>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 8007ca4:	68fb      	ldr	r3, [r7, #12]
 8007ca6:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8007caa:	2b01      	cmp	r3, #1
 8007cac:	d101      	bne.n	8007cb2 <HAL_UART_Transmit+0x40>
 8007cae:	2302      	movs	r3, #2
 8007cb0:	e074      	b.n	8007d9c <HAL_UART_Transmit+0x12a>
 8007cb2:	68fb      	ldr	r3, [r7, #12]
 8007cb4:	2201      	movs	r2, #1
 8007cb6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007cba:	68fb      	ldr	r3, [r7, #12]
 8007cbc:	2200      	movs	r2, #0
 8007cbe:	63da      	str	r2, [r3, #60]	; 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8007cc0:	68fb      	ldr	r3, [r7, #12]
 8007cc2:	2221      	movs	r2, #33	; 0x21
 8007cc4:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    /* Init tickstart for timeout managment */
    tickstart = HAL_GetTick();
 8007cc8:	f7fb fa9c 	bl	8003204 <HAL_GetTick>
 8007ccc:	6178      	str	r0, [r7, #20]

    huart->TxXferSize = Size;
 8007cce:	68fb      	ldr	r3, [r7, #12]
 8007cd0:	88fa      	ldrh	r2, [r7, #6]
 8007cd2:	849a      	strh	r2, [r3, #36]	; 0x24
    huart->TxXferCount = Size;
 8007cd4:	68fb      	ldr	r3, [r7, #12]
 8007cd6:	88fa      	ldrh	r2, [r7, #6]
 8007cd8:	84da      	strh	r2, [r3, #38]	; 0x26

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 8007cda:	68fb      	ldr	r3, [r7, #12]
 8007cdc:	2200      	movs	r2, #0
 8007cde:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    while (huart->TxXferCount > 0U)
 8007ce2:	e042      	b.n	8007d6a <HAL_UART_Transmit+0xf8>
    {
      huart->TxXferCount--;
 8007ce4:	68fb      	ldr	r3, [r7, #12]
 8007ce6:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8007ce8:	b29b      	uxth	r3, r3
 8007cea:	3b01      	subs	r3, #1
 8007cec:	b29a      	uxth	r2, r3
 8007cee:	68fb      	ldr	r3, [r7, #12]
 8007cf0:	84da      	strh	r2, [r3, #38]	; 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8007cf2:	68fb      	ldr	r3, [r7, #12]
 8007cf4:	689b      	ldr	r3, [r3, #8]
 8007cf6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007cfa:	d122      	bne.n	8007d42 <HAL_UART_Transmit+0xd0>
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8007cfc:	683b      	ldr	r3, [r7, #0]
 8007cfe:	9300      	str	r3, [sp, #0]
 8007d00:	697b      	ldr	r3, [r7, #20]
 8007d02:	2200      	movs	r2, #0
 8007d04:	2180      	movs	r1, #128	; 0x80
 8007d06:	68f8      	ldr	r0, [r7, #12]
 8007d08:	f000 f9b6 	bl	8008078 <UART_WaitOnFlagUntilTimeout>
 8007d0c:	4603      	mov	r3, r0
 8007d0e:	2b00      	cmp	r3, #0
 8007d10:	d001      	beq.n	8007d16 <HAL_UART_Transmit+0xa4>
        {
          return HAL_TIMEOUT;
 8007d12:	2303      	movs	r3, #3
 8007d14:	e042      	b.n	8007d9c <HAL_UART_Transmit+0x12a>
        }
        tmp = (uint16_t *) pData;
 8007d16:	68bb      	ldr	r3, [r7, #8]
 8007d18:	613b      	str	r3, [r7, #16]
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 8007d1a:	693b      	ldr	r3, [r7, #16]
 8007d1c:	881b      	ldrh	r3, [r3, #0]
 8007d1e:	461a      	mov	r2, r3
 8007d20:	68fb      	ldr	r3, [r7, #12]
 8007d22:	681b      	ldr	r3, [r3, #0]
 8007d24:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007d28:	605a      	str	r2, [r3, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
 8007d2a:	68fb      	ldr	r3, [r7, #12]
 8007d2c:	691b      	ldr	r3, [r3, #16]
 8007d2e:	2b00      	cmp	r3, #0
 8007d30:	d103      	bne.n	8007d3a <HAL_UART_Transmit+0xc8>
        {
          pData += 2U;
 8007d32:	68bb      	ldr	r3, [r7, #8]
 8007d34:	3302      	adds	r3, #2
 8007d36:	60bb      	str	r3, [r7, #8]
 8007d38:	e017      	b.n	8007d6a <HAL_UART_Transmit+0xf8>
        }
        else
        {
          pData += 1U;
 8007d3a:	68bb      	ldr	r3, [r7, #8]
 8007d3c:	3301      	adds	r3, #1
 8007d3e:	60bb      	str	r3, [r7, #8]
 8007d40:	e013      	b.n	8007d6a <HAL_UART_Transmit+0xf8>
        }
      }
      else
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8007d42:	683b      	ldr	r3, [r7, #0]
 8007d44:	9300      	str	r3, [sp, #0]
 8007d46:	697b      	ldr	r3, [r7, #20]
 8007d48:	2200      	movs	r2, #0
 8007d4a:	2180      	movs	r1, #128	; 0x80
 8007d4c:	68f8      	ldr	r0, [r7, #12]
 8007d4e:	f000 f993 	bl	8008078 <UART_WaitOnFlagUntilTimeout>
 8007d52:	4603      	mov	r3, r0
 8007d54:	2b00      	cmp	r3, #0
 8007d56:	d001      	beq.n	8007d5c <HAL_UART_Transmit+0xea>
        {
          return HAL_TIMEOUT;
 8007d58:	2303      	movs	r3, #3
 8007d5a:	e01f      	b.n	8007d9c <HAL_UART_Transmit+0x12a>
        }
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 8007d5c:	68bb      	ldr	r3, [r7, #8]
 8007d5e:	1c5a      	adds	r2, r3, #1
 8007d60:	60ba      	str	r2, [r7, #8]
 8007d62:	781a      	ldrb	r2, [r3, #0]
 8007d64:	68fb      	ldr	r3, [r7, #12]
 8007d66:	681b      	ldr	r3, [r3, #0]
 8007d68:	605a      	str	r2, [r3, #4]
    while (huart->TxXferCount > 0U)
 8007d6a:	68fb      	ldr	r3, [r7, #12]
 8007d6c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8007d6e:	b29b      	uxth	r3, r3
 8007d70:	2b00      	cmp	r3, #0
 8007d72:	d1b7      	bne.n	8007ce4 <HAL_UART_Transmit+0x72>
      }
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8007d74:	683b      	ldr	r3, [r7, #0]
 8007d76:	9300      	str	r3, [sp, #0]
 8007d78:	697b      	ldr	r3, [r7, #20]
 8007d7a:	2200      	movs	r2, #0
 8007d7c:	2140      	movs	r1, #64	; 0x40
 8007d7e:	68f8      	ldr	r0, [r7, #12]
 8007d80:	f000 f97a 	bl	8008078 <UART_WaitOnFlagUntilTimeout>
 8007d84:	4603      	mov	r3, r0
 8007d86:	2b00      	cmp	r3, #0
 8007d88:	d001      	beq.n	8007d8e <HAL_UART_Transmit+0x11c>
    {
      return HAL_TIMEOUT;
 8007d8a:	2303      	movs	r3, #3
 8007d8c:	e006      	b.n	8007d9c <HAL_UART_Transmit+0x12a>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8007d8e:	68fb      	ldr	r3, [r7, #12]
 8007d90:	2220      	movs	r2, #32
 8007d92:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    return HAL_OK;
 8007d96:	2300      	movs	r3, #0
 8007d98:	e000      	b.n	8007d9c <HAL_UART_Transmit+0x12a>
  }
  else
  {
    return HAL_BUSY;
 8007d9a:	2302      	movs	r3, #2
  }
}
 8007d9c:	4618      	mov	r0, r3
 8007d9e:	3718      	adds	r7, #24
 8007da0:	46bd      	mov	sp, r7
 8007da2:	bd80      	pop	{r7, pc}

08007da4 <HAL_UART_Receive_IT>:
  * @param  pData Pointer to data buffer (u8 or u16 data elements).
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 8007da4:	b480      	push	{r7}
 8007da6:	b085      	sub	sp, #20
 8007da8:	af00      	add	r7, sp, #0
 8007daa:	60f8      	str	r0, [r7, #12]
 8007dac:	60b9      	str	r1, [r7, #8]
 8007dae:	4613      	mov	r3, r2
 8007db0:	80fb      	strh	r3, [r7, #6]
  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8007db2:	68fb      	ldr	r3, [r7, #12]
 8007db4:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8007db8:	b2db      	uxtb	r3, r3
 8007dba:	2b20      	cmp	r3, #32
 8007dbc:	d140      	bne.n	8007e40 <HAL_UART_Receive_IT+0x9c>
  {
    if ((pData == NULL) || (Size == 0U))
 8007dbe:	68bb      	ldr	r3, [r7, #8]
 8007dc0:	2b00      	cmp	r3, #0
 8007dc2:	d002      	beq.n	8007dca <HAL_UART_Receive_IT+0x26>
 8007dc4:	88fb      	ldrh	r3, [r7, #6]
 8007dc6:	2b00      	cmp	r3, #0
 8007dc8:	d101      	bne.n	8007dce <HAL_UART_Receive_IT+0x2a>
    {
      return HAL_ERROR;
 8007dca:	2301      	movs	r3, #1
 8007dcc:	e039      	b.n	8007e42 <HAL_UART_Receive_IT+0x9e>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 8007dce:	68fb      	ldr	r3, [r7, #12]
 8007dd0:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8007dd4:	2b01      	cmp	r3, #1
 8007dd6:	d101      	bne.n	8007ddc <HAL_UART_Receive_IT+0x38>
 8007dd8:	2302      	movs	r3, #2
 8007dda:	e032      	b.n	8007e42 <HAL_UART_Receive_IT+0x9e>
 8007ddc:	68fb      	ldr	r3, [r7, #12]
 8007dde:	2201      	movs	r2, #1
 8007de0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    huart->pRxBuffPtr = pData;
 8007de4:	68fb      	ldr	r3, [r7, #12]
 8007de6:	68ba      	ldr	r2, [r7, #8]
 8007de8:	629a      	str	r2, [r3, #40]	; 0x28
    huart->RxXferSize = Size;
 8007dea:	68fb      	ldr	r3, [r7, #12]
 8007dec:	88fa      	ldrh	r2, [r7, #6]
 8007dee:	859a      	strh	r2, [r3, #44]	; 0x2c
    huart->RxXferCount = Size;
 8007df0:	68fb      	ldr	r3, [r7, #12]
 8007df2:	88fa      	ldrh	r2, [r7, #6]
 8007df4:	85da      	strh	r2, [r3, #46]	; 0x2e

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007df6:	68fb      	ldr	r3, [r7, #12]
 8007df8:	2200      	movs	r2, #0
 8007dfa:	63da      	str	r2, [r3, #60]	; 0x3c
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8007dfc:	68fb      	ldr	r3, [r7, #12]
 8007dfe:	2222      	movs	r2, #34	; 0x22
 8007e00:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 8007e04:	68fb      	ldr	r3, [r7, #12]
 8007e06:	2200      	movs	r2, #0
 8007e08:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Enable the UART Parity Error Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 8007e0c:	68fb      	ldr	r3, [r7, #12]
 8007e0e:	681b      	ldr	r3, [r3, #0]
 8007e10:	68da      	ldr	r2, [r3, #12]
 8007e12:	68fb      	ldr	r3, [r7, #12]
 8007e14:	681b      	ldr	r3, [r3, #0]
 8007e16:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007e1a:	60da      	str	r2, [r3, #12]

    /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
    __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 8007e1c:	68fb      	ldr	r3, [r7, #12]
 8007e1e:	681b      	ldr	r3, [r3, #0]
 8007e20:	695a      	ldr	r2, [r3, #20]
 8007e22:	68fb      	ldr	r3, [r7, #12]
 8007e24:	681b      	ldr	r3, [r3, #0]
 8007e26:	f042 0201 	orr.w	r2, r2, #1
 8007e2a:	615a      	str	r2, [r3, #20]

    /* Enable the UART Data Register not empty Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 8007e2c:	68fb      	ldr	r3, [r7, #12]
 8007e2e:	681b      	ldr	r3, [r3, #0]
 8007e30:	68da      	ldr	r2, [r3, #12]
 8007e32:	68fb      	ldr	r3, [r7, #12]
 8007e34:	681b      	ldr	r3, [r3, #0]
 8007e36:	f042 0220 	orr.w	r2, r2, #32
 8007e3a:	60da      	str	r2, [r3, #12]

    return HAL_OK;
 8007e3c:	2300      	movs	r3, #0
 8007e3e:	e000      	b.n	8007e42 <HAL_UART_Receive_IT+0x9e>
  }
  else
  {
    return HAL_BUSY;
 8007e40:	2302      	movs	r3, #2
  }
}
 8007e42:	4618      	mov	r0, r3
 8007e44:	3714      	adds	r7, #20
 8007e46:	46bd      	mov	sp, r7
 8007e48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e4c:	4770      	bx	lr
	...

08007e50 <HAL_UART_IRQHandler>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 8007e50:	b580      	push	{r7, lr}
 8007e52:	b088      	sub	sp, #32
 8007e54:	af00      	add	r7, sp, #0
 8007e56:	6078      	str	r0, [r7, #4]
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8007e58:	687b      	ldr	r3, [r7, #4]
 8007e5a:	681b      	ldr	r3, [r3, #0]
 8007e5c:	681b      	ldr	r3, [r3, #0]
 8007e5e:	61fb      	str	r3, [r7, #28]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8007e60:	687b      	ldr	r3, [r7, #4]
 8007e62:	681b      	ldr	r3, [r3, #0]
 8007e64:	68db      	ldr	r3, [r3, #12]
 8007e66:	61bb      	str	r3, [r7, #24]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8007e68:	687b      	ldr	r3, [r7, #4]
 8007e6a:	681b      	ldr	r3, [r3, #0]
 8007e6c:	695b      	ldr	r3, [r3, #20]
 8007e6e:	617b      	str	r3, [r7, #20]
  uint32_t errorflags = 0x00U;
 8007e70:	2300      	movs	r3, #0
 8007e72:	613b      	str	r3, [r7, #16]
  uint32_t dmarequest = 0x00U;
 8007e74:	2300      	movs	r3, #0
 8007e76:	60fb      	str	r3, [r7, #12]

  /* If no error occurs */
  errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 8007e78:	69fb      	ldr	r3, [r7, #28]
 8007e7a:	f003 030f 	and.w	r3, r3, #15
 8007e7e:	613b      	str	r3, [r7, #16]
  if (errorflags == RESET)
 8007e80:	693b      	ldr	r3, [r7, #16]
 8007e82:	2b00      	cmp	r3, #0
 8007e84:	d10d      	bne.n	8007ea2 <HAL_UART_IRQHandler+0x52>
  {
    /* UART in mode Receiver -------------------------------------------------*/
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8007e86:	69fb      	ldr	r3, [r7, #28]
 8007e88:	f003 0320 	and.w	r3, r3, #32
 8007e8c:	2b00      	cmp	r3, #0
 8007e8e:	d008      	beq.n	8007ea2 <HAL_UART_IRQHandler+0x52>
 8007e90:	69bb      	ldr	r3, [r7, #24]
 8007e92:	f003 0320 	and.w	r3, r3, #32
 8007e96:	2b00      	cmp	r3, #0
 8007e98:	d003      	beq.n	8007ea2 <HAL_UART_IRQHandler+0x52>
    {
      UART_Receive_IT(huart);
 8007e9a:	6878      	ldr	r0, [r7, #4]
 8007e9c:	f000 f9d6 	bl	800824c <UART_Receive_IT>
      return;
 8007ea0:	e0d1      	b.n	8008046 <HAL_UART_IRQHandler+0x1f6>
    }
  }

  /* If some errors occur */
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 8007ea2:	693b      	ldr	r3, [r7, #16]
 8007ea4:	2b00      	cmp	r3, #0
 8007ea6:	f000 80b0 	beq.w	800800a <HAL_UART_IRQHandler+0x1ba>
 8007eaa:	697b      	ldr	r3, [r7, #20]
 8007eac:	f003 0301 	and.w	r3, r3, #1
 8007eb0:	2b00      	cmp	r3, #0
 8007eb2:	d105      	bne.n	8007ec0 <HAL_UART_IRQHandler+0x70>
 8007eb4:	69bb      	ldr	r3, [r7, #24]
 8007eb6:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8007eba:	2b00      	cmp	r3, #0
 8007ebc:	f000 80a5 	beq.w	800800a <HAL_UART_IRQHandler+0x1ba>
  {
    /* UART parity error interrupt occurred ----------------------------------*/
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 8007ec0:	69fb      	ldr	r3, [r7, #28]
 8007ec2:	f003 0301 	and.w	r3, r3, #1
 8007ec6:	2b00      	cmp	r3, #0
 8007ec8:	d00a      	beq.n	8007ee0 <HAL_UART_IRQHandler+0x90>
 8007eca:	69bb      	ldr	r3, [r7, #24]
 8007ecc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007ed0:	2b00      	cmp	r3, #0
 8007ed2:	d005      	beq.n	8007ee0 <HAL_UART_IRQHandler+0x90>
    {
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8007ed4:	687b      	ldr	r3, [r7, #4]
 8007ed6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007ed8:	f043 0201 	orr.w	r2, r3, #1
 8007edc:	687b      	ldr	r3, [r7, #4]
 8007ede:	63da      	str	r2, [r3, #60]	; 0x3c
    }

    /* UART noise error interrupt occurred -----------------------------------*/
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8007ee0:	69fb      	ldr	r3, [r7, #28]
 8007ee2:	f003 0304 	and.w	r3, r3, #4
 8007ee6:	2b00      	cmp	r3, #0
 8007ee8:	d00a      	beq.n	8007f00 <HAL_UART_IRQHandler+0xb0>
 8007eea:	697b      	ldr	r3, [r7, #20]
 8007eec:	f003 0301 	and.w	r3, r3, #1
 8007ef0:	2b00      	cmp	r3, #0
 8007ef2:	d005      	beq.n	8007f00 <HAL_UART_IRQHandler+0xb0>
    {
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8007ef4:	687b      	ldr	r3, [r7, #4]
 8007ef6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007ef8:	f043 0202 	orr.w	r2, r3, #2
 8007efc:	687b      	ldr	r3, [r7, #4]
 8007efe:	63da      	str	r2, [r3, #60]	; 0x3c
    }

    /* UART frame error interrupt occurred -----------------------------------*/
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8007f00:	69fb      	ldr	r3, [r7, #28]
 8007f02:	f003 0302 	and.w	r3, r3, #2
 8007f06:	2b00      	cmp	r3, #0
 8007f08:	d00a      	beq.n	8007f20 <HAL_UART_IRQHandler+0xd0>
 8007f0a:	697b      	ldr	r3, [r7, #20]
 8007f0c:	f003 0301 	and.w	r3, r3, #1
 8007f10:	2b00      	cmp	r3, #0
 8007f12:	d005      	beq.n	8007f20 <HAL_UART_IRQHandler+0xd0>
    {
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8007f14:	687b      	ldr	r3, [r7, #4]
 8007f16:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007f18:	f043 0204 	orr.w	r2, r3, #4
 8007f1c:	687b      	ldr	r3, [r7, #4]
 8007f1e:	63da      	str	r2, [r3, #60]	; 0x3c
    }

    /* UART Over-Run interrupt occurred --------------------------------------*/
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 8007f20:	69fb      	ldr	r3, [r7, #28]
 8007f22:	f003 0308 	and.w	r3, r3, #8
 8007f26:	2b00      	cmp	r3, #0
 8007f28:	d00f      	beq.n	8007f4a <HAL_UART_IRQHandler+0xfa>
 8007f2a:	69bb      	ldr	r3, [r7, #24]
 8007f2c:	f003 0320 	and.w	r3, r3, #32
 8007f30:	2b00      	cmp	r3, #0
 8007f32:	d104      	bne.n	8007f3e <HAL_UART_IRQHandler+0xee>
 8007f34:	697b      	ldr	r3, [r7, #20]
 8007f36:	f003 0301 	and.w	r3, r3, #1
 8007f3a:	2b00      	cmp	r3, #0
 8007f3c:	d005      	beq.n	8007f4a <HAL_UART_IRQHandler+0xfa>
    {
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8007f3e:	687b      	ldr	r3, [r7, #4]
 8007f40:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007f42:	f043 0208 	orr.w	r2, r3, #8
 8007f46:	687b      	ldr	r3, [r7, #4]
 8007f48:	63da      	str	r2, [r3, #60]	; 0x3c
    }

    /* Call UART Error Call back function if need be --------------------------*/
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8007f4a:	687b      	ldr	r3, [r7, #4]
 8007f4c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007f4e:	2b00      	cmp	r3, #0
 8007f50:	d078      	beq.n	8008044 <HAL_UART_IRQHandler+0x1f4>
    {
      /* UART in mode Receiver -----------------------------------------------*/
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8007f52:	69fb      	ldr	r3, [r7, #28]
 8007f54:	f003 0320 	and.w	r3, r3, #32
 8007f58:	2b00      	cmp	r3, #0
 8007f5a:	d007      	beq.n	8007f6c <HAL_UART_IRQHandler+0x11c>
 8007f5c:	69bb      	ldr	r3, [r7, #24]
 8007f5e:	f003 0320 	and.w	r3, r3, #32
 8007f62:	2b00      	cmp	r3, #0
 8007f64:	d002      	beq.n	8007f6c <HAL_UART_IRQHandler+0x11c>
      {
        UART_Receive_IT(huart);
 8007f66:	6878      	ldr	r0, [r7, #4]
 8007f68:	f000 f970 	bl	800824c <UART_Receive_IT>
      }

      /* If Overrun error occurs, or if any error occurs in DMA mode reception,
         consider error as blocking */
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8007f6c:	687b      	ldr	r3, [r7, #4]
 8007f6e:	681b      	ldr	r3, [r3, #0]
 8007f70:	695b      	ldr	r3, [r3, #20]
 8007f72:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007f76:	2b40      	cmp	r3, #64	; 0x40
 8007f78:	bf0c      	ite	eq
 8007f7a:	2301      	moveq	r3, #1
 8007f7c:	2300      	movne	r3, #0
 8007f7e:	b2db      	uxtb	r3, r3
 8007f80:	60fb      	str	r3, [r7, #12]
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8007f82:	687b      	ldr	r3, [r7, #4]
 8007f84:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007f86:	f003 0308 	and.w	r3, r3, #8
 8007f8a:	2b00      	cmp	r3, #0
 8007f8c:	d102      	bne.n	8007f94 <HAL_UART_IRQHandler+0x144>
 8007f8e:	68fb      	ldr	r3, [r7, #12]
 8007f90:	2b00      	cmp	r3, #0
 8007f92:	d031      	beq.n	8007ff8 <HAL_UART_IRQHandler+0x1a8>
      {
        /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
        UART_EndRxTransfer(huart);
 8007f94:	6878      	ldr	r0, [r7, #4]
 8007f96:	f000 f8b9 	bl	800810c <UART_EndRxTransfer>

        /* Disable the UART DMA Rx request if enabled */
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007f9a:	687b      	ldr	r3, [r7, #4]
 8007f9c:	681b      	ldr	r3, [r3, #0]
 8007f9e:	695b      	ldr	r3, [r3, #20]
 8007fa0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007fa4:	2b40      	cmp	r3, #64	; 0x40
 8007fa6:	d123      	bne.n	8007ff0 <HAL_UART_IRQHandler+0x1a0>
        {
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8007fa8:	687b      	ldr	r3, [r7, #4]
 8007faa:	681b      	ldr	r3, [r3, #0]
 8007fac:	695a      	ldr	r2, [r3, #20]
 8007fae:	687b      	ldr	r3, [r7, #4]
 8007fb0:	681b      	ldr	r3, [r3, #0]
 8007fb2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007fb6:	615a      	str	r2, [r3, #20]

          /* Abort the UART DMA Rx stream */
          if (huart->hdmarx != NULL)
 8007fb8:	687b      	ldr	r3, [r7, #4]
 8007fba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007fbc:	2b00      	cmp	r3, #0
 8007fbe:	d013      	beq.n	8007fe8 <HAL_UART_IRQHandler+0x198>
          {
            /* Set the UART DMA Abort callback :
               will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8007fc0:	687b      	ldr	r3, [r7, #4]
 8007fc2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007fc4:	4a21      	ldr	r2, [pc, #132]	; (800804c <HAL_UART_IRQHandler+0x1fc>)
 8007fc6:	651a      	str	r2, [r3, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8007fc8:	687b      	ldr	r3, [r7, #4]
 8007fca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007fcc:	4618      	mov	r0, r3
 8007fce:	f7fb fb13 	bl	80035f8 <HAL_DMA_Abort_IT>
 8007fd2:	4603      	mov	r3, r0
 8007fd4:	2b00      	cmp	r3, #0
 8007fd6:	d016      	beq.n	8008006 <HAL_UART_IRQHandler+0x1b6>
            {
              /* Call Directly XferAbortCallback function in case of error */
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8007fd8:	687b      	ldr	r3, [r7, #4]
 8007fda:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007fdc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007fde:	687a      	ldr	r2, [r7, #4]
 8007fe0:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8007fe2:	4610      	mov	r0, r2
 8007fe4:	4798      	blx	r3
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007fe6:	e00e      	b.n	8008006 <HAL_UART_IRQHandler+0x1b6>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
            /*Call registered error callback*/
            huart->ErrorCallback(huart);
#else
            /*Call legacy weak error callback*/
            HAL_UART_ErrorCallback(huart);
 8007fe8:	6878      	ldr	r0, [r7, #4]
 8007fea:	f000 f83b 	bl	8008064 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007fee:	e00a      	b.n	8008006 <HAL_UART_IRQHandler+0x1b6>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 8007ff0:	6878      	ldr	r0, [r7, #4]
 8007ff2:	f000 f837 	bl	8008064 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8007ff6:	e006      	b.n	8008006 <HAL_UART_IRQHandler+0x1b6>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered error callback*/
        huart->ErrorCallback(huart);
#else
        /*Call legacy weak error callback*/
        HAL_UART_ErrorCallback(huart);
 8007ff8:	6878      	ldr	r0, [r7, #4]
 8007ffa:	f000 f833 	bl	8008064 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */

        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007ffe:	687b      	ldr	r3, [r7, #4]
 8008000:	2200      	movs	r2, #0
 8008002:	63da      	str	r2, [r3, #60]	; 0x3c
      }
    }
    return;
 8008004:	e01e      	b.n	8008044 <HAL_UART_IRQHandler+0x1f4>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8008006:	bf00      	nop
    return;
 8008008:	e01c      	b.n	8008044 <HAL_UART_IRQHandler+0x1f4>
  } /* End if some error occurs */

  /* UART in mode Transmitter ------------------------------------------------*/
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 800800a:	69fb      	ldr	r3, [r7, #28]
 800800c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008010:	2b00      	cmp	r3, #0
 8008012:	d008      	beq.n	8008026 <HAL_UART_IRQHandler+0x1d6>
 8008014:	69bb      	ldr	r3, [r7, #24]
 8008016:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800801a:	2b00      	cmp	r3, #0
 800801c:	d003      	beq.n	8008026 <HAL_UART_IRQHandler+0x1d6>
  {
    UART_Transmit_IT(huart);
 800801e:	6878      	ldr	r0, [r7, #4]
 8008020:	f000 f8a6 	bl	8008170 <UART_Transmit_IT>
    return;
 8008024:	e00f      	b.n	8008046 <HAL_UART_IRQHandler+0x1f6>
  }

  /* UART in mode Transmitter end --------------------------------------------*/
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 8008026:	69fb      	ldr	r3, [r7, #28]
 8008028:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800802c:	2b00      	cmp	r3, #0
 800802e:	d00a      	beq.n	8008046 <HAL_UART_IRQHandler+0x1f6>
 8008030:	69bb      	ldr	r3, [r7, #24]
 8008032:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008036:	2b00      	cmp	r3, #0
 8008038:	d005      	beq.n	8008046 <HAL_UART_IRQHandler+0x1f6>
  {
    UART_EndTransmit_IT(huart);
 800803a:	6878      	ldr	r0, [r7, #4]
 800803c:	f000 f8ee 	bl	800821c <UART_EndTransmit_IT>
    return;
 8008040:	bf00      	nop
 8008042:	e000      	b.n	8008046 <HAL_UART_IRQHandler+0x1f6>
    return;
 8008044:	bf00      	nop
  }
}
 8008046:	3720      	adds	r7, #32
 8008048:	46bd      	mov	sp, r7
 800804a:	bd80      	pop	{r7, pc}
 800804c:	08008149 	.word	0x08008149

08008050 <HAL_UART_TxCpltCallback>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8008050:	b480      	push	{r7}
 8008052:	b083      	sub	sp, #12
 8008054:	af00      	add	r7, sp, #0
 8008056:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);
  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_TxCpltCallback could be implemented in the user file
   */
}
 8008058:	bf00      	nop
 800805a:	370c      	adds	r7, #12
 800805c:	46bd      	mov	sp, r7
 800805e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008062:	4770      	bx	lr

08008064 <HAL_UART_ErrorCallback>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 8008064:	b480      	push	{r7}
 8008066:	b083      	sub	sp, #12
 8008068:	af00      	add	r7, sp, #0
 800806a:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);
  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_ErrorCallback could be implemented in the user file
   */
}
 800806c:	bf00      	nop
 800806e:	370c      	adds	r7, #12
 8008070:	46bd      	mov	sp, r7
 8008072:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008076:	4770      	bx	lr

08008078 <UART_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
{
 8008078:	b580      	push	{r7, lr}
 800807a:	b084      	sub	sp, #16
 800807c:	af00      	add	r7, sp, #0
 800807e:	60f8      	str	r0, [r7, #12]
 8008080:	60b9      	str	r1, [r7, #8]
 8008082:	603b      	str	r3, [r7, #0]
 8008084:	4613      	mov	r3, r2
 8008086:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8008088:	e02c      	b.n	80080e4 <UART_WaitOnFlagUntilTimeout+0x6c>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800808a:	69bb      	ldr	r3, [r7, #24]
 800808c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008090:	d028      	beq.n	80080e4 <UART_WaitOnFlagUntilTimeout+0x6c>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 8008092:	69bb      	ldr	r3, [r7, #24]
 8008094:	2b00      	cmp	r3, #0
 8008096:	d007      	beq.n	80080a8 <UART_WaitOnFlagUntilTimeout+0x30>
 8008098:	f7fb f8b4 	bl	8003204 <HAL_GetTick>
 800809c:	4602      	mov	r2, r0
 800809e:	683b      	ldr	r3, [r7, #0]
 80080a0:	1ad3      	subs	r3, r2, r3
 80080a2:	69ba      	ldr	r2, [r7, #24]
 80080a4:	429a      	cmp	r2, r3
 80080a6:	d21d      	bcs.n	80080e4 <UART_WaitOnFlagUntilTimeout+0x6c>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80080a8:	68fb      	ldr	r3, [r7, #12]
 80080aa:	681b      	ldr	r3, [r3, #0]
 80080ac:	68da      	ldr	r2, [r3, #12]
 80080ae:	68fb      	ldr	r3, [r7, #12]
 80080b0:	681b      	ldr	r3, [r3, #0]
 80080b2:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80080b6:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80080b8:	68fb      	ldr	r3, [r7, #12]
 80080ba:	681b      	ldr	r3, [r3, #0]
 80080bc:	695a      	ldr	r2, [r3, #20]
 80080be:	68fb      	ldr	r3, [r7, #12]
 80080c0:	681b      	ldr	r3, [r3, #0]
 80080c2:	f022 0201 	bic.w	r2, r2, #1
 80080c6:	615a      	str	r2, [r3, #20]

        huart->gState  = HAL_UART_STATE_READY;
 80080c8:	68fb      	ldr	r3, [r7, #12]
 80080ca:	2220      	movs	r2, #32
 80080cc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        huart->RxState = HAL_UART_STATE_READY;
 80080d0:	68fb      	ldr	r3, [r7, #12]
 80080d2:	2220      	movs	r2, #32
 80080d4:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

        /* Process Unlocked */
        __HAL_UNLOCK(huart);
 80080d8:	68fb      	ldr	r3, [r7, #12]
 80080da:	2200      	movs	r2, #0
 80080dc:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

        return HAL_TIMEOUT;
 80080e0:	2303      	movs	r3, #3
 80080e2:	e00f      	b.n	8008104 <UART_WaitOnFlagUntilTimeout+0x8c>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80080e4:	68fb      	ldr	r3, [r7, #12]
 80080e6:	681b      	ldr	r3, [r3, #0]
 80080e8:	681a      	ldr	r2, [r3, #0]
 80080ea:	68bb      	ldr	r3, [r7, #8]
 80080ec:	4013      	ands	r3, r2
 80080ee:	68ba      	ldr	r2, [r7, #8]
 80080f0:	429a      	cmp	r2, r3
 80080f2:	bf0c      	ite	eq
 80080f4:	2301      	moveq	r3, #1
 80080f6:	2300      	movne	r3, #0
 80080f8:	b2db      	uxtb	r3, r3
 80080fa:	461a      	mov	r2, r3
 80080fc:	79fb      	ldrb	r3, [r7, #7]
 80080fe:	429a      	cmp	r2, r3
 8008100:	d0c3      	beq.n	800808a <UART_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8008102:	2300      	movs	r3, #0
}
 8008104:	4618      	mov	r0, r3
 8008106:	3710      	adds	r7, #16
 8008108:	46bd      	mov	sp, r7
 800810a:	bd80      	pop	{r7, pc}

0800810c <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 800810c:	b480      	push	{r7}
 800810e:	b083      	sub	sp, #12
 8008110:	af00      	add	r7, sp, #0
 8008112:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8008114:	687b      	ldr	r3, [r7, #4]
 8008116:	681b      	ldr	r3, [r3, #0]
 8008118:	68da      	ldr	r2, [r3, #12]
 800811a:	687b      	ldr	r3, [r7, #4]
 800811c:	681b      	ldr	r3, [r3, #0]
 800811e:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8008122:	60da      	str	r2, [r3, #12]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8008124:	687b      	ldr	r3, [r7, #4]
 8008126:	681b      	ldr	r3, [r3, #0]
 8008128:	695a      	ldr	r2, [r3, #20]
 800812a:	687b      	ldr	r3, [r7, #4]
 800812c:	681b      	ldr	r3, [r3, #0]
 800812e:	f022 0201 	bic.w	r2, r2, #1
 8008132:	615a      	str	r2, [r3, #20]

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8008134:	687b      	ldr	r3, [r7, #4]
 8008136:	2220      	movs	r2, #32
 8008138:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
}
 800813c:	bf00      	nop
 800813e:	370c      	adds	r7, #12
 8008140:	46bd      	mov	sp, r7
 8008142:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008146:	4770      	bx	lr

08008148 <UART_DMAAbortOnError>:
  * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8008148:	b580      	push	{r7, lr}
 800814a:	b084      	sub	sp, #16
 800814c:	af00      	add	r7, sp, #0
 800814e:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8008150:	687b      	ldr	r3, [r7, #4]
 8008152:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008154:	60fb      	str	r3, [r7, #12]
  huart->RxXferCount = 0x00U;
 8008156:	68fb      	ldr	r3, [r7, #12]
 8008158:	2200      	movs	r2, #0
 800815a:	85da      	strh	r2, [r3, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 800815c:	68fb      	ldr	r3, [r7, #12]
 800815e:	2200      	movs	r2, #0
 8008160:	84da      	strh	r2, [r3, #38]	; 0x26
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 8008162:	68f8      	ldr	r0, [r7, #12]
 8008164:	f7ff ff7e 	bl	8008064 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8008168:	bf00      	nop
 800816a:	3710      	adds	r7, #16
 800816c:	46bd      	mov	sp, r7
 800816e:	bd80      	pop	{r7, pc}

08008170 <UART_Transmit_IT>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
{
 8008170:	b480      	push	{r7}
 8008172:	b085      	sub	sp, #20
 8008174:	af00      	add	r7, sp, #0
 8008176:	6078      	str	r0, [r7, #4]
  uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8008178:	687b      	ldr	r3, [r7, #4]
 800817a:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800817e:	b2db      	uxtb	r3, r3
 8008180:	2b21      	cmp	r3, #33	; 0x21
 8008182:	d144      	bne.n	800820e <UART_Transmit_IT+0x9e>
  {
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8008184:	687b      	ldr	r3, [r7, #4]
 8008186:	689b      	ldr	r3, [r3, #8]
 8008188:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800818c:	d11a      	bne.n	80081c4 <UART_Transmit_IT+0x54>
    {
      tmp = (uint16_t *) huart->pTxBuffPtr;
 800818e:	687b      	ldr	r3, [r7, #4]
 8008190:	6a1b      	ldr	r3, [r3, #32]
 8008192:	60fb      	str	r3, [r7, #12]
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 8008194:	68fb      	ldr	r3, [r7, #12]
 8008196:	881b      	ldrh	r3, [r3, #0]
 8008198:	461a      	mov	r2, r3
 800819a:	687b      	ldr	r3, [r7, #4]
 800819c:	681b      	ldr	r3, [r3, #0]
 800819e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80081a2:	605a      	str	r2, [r3, #4]
      if (huart->Init.Parity == UART_PARITY_NONE)
 80081a4:	687b      	ldr	r3, [r7, #4]
 80081a6:	691b      	ldr	r3, [r3, #16]
 80081a8:	2b00      	cmp	r3, #0
 80081aa:	d105      	bne.n	80081b8 <UART_Transmit_IT+0x48>
      {
        huart->pTxBuffPtr += 2U;
 80081ac:	687b      	ldr	r3, [r7, #4]
 80081ae:	6a1b      	ldr	r3, [r3, #32]
 80081b0:	1c9a      	adds	r2, r3, #2
 80081b2:	687b      	ldr	r3, [r7, #4]
 80081b4:	621a      	str	r2, [r3, #32]
 80081b6:	e00e      	b.n	80081d6 <UART_Transmit_IT+0x66>
      }
      else
      {
        huart->pTxBuffPtr += 1U;
 80081b8:	687b      	ldr	r3, [r7, #4]
 80081ba:	6a1b      	ldr	r3, [r3, #32]
 80081bc:	1c5a      	adds	r2, r3, #1
 80081be:	687b      	ldr	r3, [r7, #4]
 80081c0:	621a      	str	r2, [r3, #32]
 80081c2:	e008      	b.n	80081d6 <UART_Transmit_IT+0x66>
      }
    }
    else
    {
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 80081c4:	687b      	ldr	r3, [r7, #4]
 80081c6:	6a1b      	ldr	r3, [r3, #32]
 80081c8:	1c59      	adds	r1, r3, #1
 80081ca:	687a      	ldr	r2, [r7, #4]
 80081cc:	6211      	str	r1, [r2, #32]
 80081ce:	781a      	ldrb	r2, [r3, #0]
 80081d0:	687b      	ldr	r3, [r7, #4]
 80081d2:	681b      	ldr	r3, [r3, #0]
 80081d4:	605a      	str	r2, [r3, #4]
    }

    if (--huart->TxXferCount == 0U)
 80081d6:	687b      	ldr	r3, [r7, #4]
 80081d8:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80081da:	b29b      	uxth	r3, r3
 80081dc:	3b01      	subs	r3, #1
 80081de:	b29b      	uxth	r3, r3
 80081e0:	687a      	ldr	r2, [r7, #4]
 80081e2:	4619      	mov	r1, r3
 80081e4:	84d1      	strh	r1, [r2, #38]	; 0x26
 80081e6:	2b00      	cmp	r3, #0
 80081e8:	d10f      	bne.n	800820a <UART_Transmit_IT+0x9a>
    {
      /* Disable the UART Transmit Complete Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 80081ea:	687b      	ldr	r3, [r7, #4]
 80081ec:	681b      	ldr	r3, [r3, #0]
 80081ee:	68da      	ldr	r2, [r3, #12]
 80081f0:	687b      	ldr	r3, [r7, #4]
 80081f2:	681b      	ldr	r3, [r3, #0]
 80081f4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80081f8:	60da      	str	r2, [r3, #12]

      /* Enable the UART Transmit Complete Interrupt */
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 80081fa:	687b      	ldr	r3, [r7, #4]
 80081fc:	681b      	ldr	r3, [r3, #0]
 80081fe:	68da      	ldr	r2, [r3, #12]
 8008200:	687b      	ldr	r3, [r7, #4]
 8008202:	681b      	ldr	r3, [r3, #0]
 8008204:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008208:	60da      	str	r2, [r3, #12]
    }
    return HAL_OK;
 800820a:	2300      	movs	r3, #0
 800820c:	e000      	b.n	8008210 <UART_Transmit_IT+0xa0>
  }
  else
  {
    return HAL_BUSY;
 800820e:	2302      	movs	r3, #2
  }
}
 8008210:	4618      	mov	r0, r3
 8008212:	3714      	adds	r7, #20
 8008214:	46bd      	mov	sp, r7
 8008216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800821a:	4770      	bx	lr

0800821c <UART_EndTransmit_IT>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 800821c:	b580      	push	{r7, lr}
 800821e:	b082      	sub	sp, #8
 8008220:	af00      	add	r7, sp, #0
 8008222:	6078      	str	r0, [r7, #4]
  /* Disable the UART Transmit Complete Interrupt */
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8008224:	687b      	ldr	r3, [r7, #4]
 8008226:	681b      	ldr	r3, [r3, #0]
 8008228:	68da      	ldr	r2, [r3, #12]
 800822a:	687b      	ldr	r3, [r7, #4]
 800822c:	681b      	ldr	r3, [r3, #0]
 800822e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008232:	60da      	str	r2, [r3, #12]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 8008234:	687b      	ldr	r3, [r7, #4]
 8008236:	2220      	movs	r2, #32
 8008238:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 800823c:	6878      	ldr	r0, [r7, #4]
 800823e:	f7ff ff07 	bl	8008050 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */

  return HAL_OK;
 8008242:	2300      	movs	r3, #0
}
 8008244:	4618      	mov	r0, r3
 8008246:	3708      	adds	r7, #8
 8008248:	46bd      	mov	sp, r7
 800824a:	bd80      	pop	{r7, pc}

0800824c <UART_Receive_IT>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
{
 800824c:	b580      	push	{r7, lr}
 800824e:	b084      	sub	sp, #16
 8008250:	af00      	add	r7, sp, #0
 8008252:	6078      	str	r0, [r7, #4]
  uint16_t *tmp;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8008254:	687b      	ldr	r3, [r7, #4]
 8008256:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 800825a:	b2db      	uxtb	r3, r3
 800825c:	2b22      	cmp	r3, #34	; 0x22
 800825e:	d171      	bne.n	8008344 <UART_Receive_IT+0xf8>
  {
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8008260:	687b      	ldr	r3, [r7, #4]
 8008262:	689b      	ldr	r3, [r3, #8]
 8008264:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008268:	d123      	bne.n	80082b2 <UART_Receive_IT+0x66>
    {
      tmp = (uint16_t *) huart->pRxBuffPtr;
 800826a:	687b      	ldr	r3, [r7, #4]
 800826c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800826e:	60fb      	str	r3, [r7, #12]
      if (huart->Init.Parity == UART_PARITY_NONE)
 8008270:	687b      	ldr	r3, [r7, #4]
 8008272:	691b      	ldr	r3, [r3, #16]
 8008274:	2b00      	cmp	r3, #0
 8008276:	d10e      	bne.n	8008296 <UART_Receive_IT+0x4a>
      {
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8008278:	687b      	ldr	r3, [r7, #4]
 800827a:	681b      	ldr	r3, [r3, #0]
 800827c:	685b      	ldr	r3, [r3, #4]
 800827e:	b29b      	uxth	r3, r3
 8008280:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008284:	b29a      	uxth	r2, r3
 8008286:	68fb      	ldr	r3, [r7, #12]
 8008288:	801a      	strh	r2, [r3, #0]
        huart->pRxBuffPtr += 2U;
 800828a:	687b      	ldr	r3, [r7, #4]
 800828c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800828e:	1c9a      	adds	r2, r3, #2
 8008290:	687b      	ldr	r3, [r7, #4]
 8008292:	629a      	str	r2, [r3, #40]	; 0x28
 8008294:	e029      	b.n	80082ea <UART_Receive_IT+0x9e>
      }
      else
      {
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 8008296:	687b      	ldr	r3, [r7, #4]
 8008298:	681b      	ldr	r3, [r3, #0]
 800829a:	685b      	ldr	r3, [r3, #4]
 800829c:	b29b      	uxth	r3, r3
 800829e:	b2db      	uxtb	r3, r3
 80082a0:	b29a      	uxth	r2, r3
 80082a2:	68fb      	ldr	r3, [r7, #12]
 80082a4:	801a      	strh	r2, [r3, #0]
        huart->pRxBuffPtr += 1U;
 80082a6:	687b      	ldr	r3, [r7, #4]
 80082a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80082aa:	1c5a      	adds	r2, r3, #1
 80082ac:	687b      	ldr	r3, [r7, #4]
 80082ae:	629a      	str	r2, [r3, #40]	; 0x28
 80082b0:	e01b      	b.n	80082ea <UART_Receive_IT+0x9e>
      }
    }
    else
    {
      if (huart->Init.Parity == UART_PARITY_NONE)
 80082b2:	687b      	ldr	r3, [r7, #4]
 80082b4:	691b      	ldr	r3, [r3, #16]
 80082b6:	2b00      	cmp	r3, #0
 80082b8:	d10a      	bne.n	80082d0 <UART_Receive_IT+0x84>
      {
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 80082ba:	687b      	ldr	r3, [r7, #4]
 80082bc:	681b      	ldr	r3, [r3, #0]
 80082be:	6858      	ldr	r0, [r3, #4]
 80082c0:	687b      	ldr	r3, [r7, #4]
 80082c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80082c4:	1c59      	adds	r1, r3, #1
 80082c6:	687a      	ldr	r2, [r7, #4]
 80082c8:	6291      	str	r1, [r2, #40]	; 0x28
 80082ca:	b2c2      	uxtb	r2, r0
 80082cc:	701a      	strb	r2, [r3, #0]
 80082ce:	e00c      	b.n	80082ea <UART_Receive_IT+0x9e>
      }
      else
      {
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 80082d0:	687b      	ldr	r3, [r7, #4]
 80082d2:	681b      	ldr	r3, [r3, #0]
 80082d4:	685b      	ldr	r3, [r3, #4]
 80082d6:	b2da      	uxtb	r2, r3
 80082d8:	687b      	ldr	r3, [r7, #4]
 80082da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80082dc:	1c58      	adds	r0, r3, #1
 80082de:	6879      	ldr	r1, [r7, #4]
 80082e0:	6288      	str	r0, [r1, #40]	; 0x28
 80082e2:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 80082e6:	b2d2      	uxtb	r2, r2
 80082e8:	701a      	strb	r2, [r3, #0]
      }
    }

    if (--huart->RxXferCount == 0U)
 80082ea:	687b      	ldr	r3, [r7, #4]
 80082ec:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80082ee:	b29b      	uxth	r3, r3
 80082f0:	3b01      	subs	r3, #1
 80082f2:	b29b      	uxth	r3, r3
 80082f4:	687a      	ldr	r2, [r7, #4]
 80082f6:	4619      	mov	r1, r3
 80082f8:	85d1      	strh	r1, [r2, #46]	; 0x2e
 80082fa:	2b00      	cmp	r3, #0
 80082fc:	d120      	bne.n	8008340 <UART_Receive_IT+0xf4>
    {
      /* Disable the UART Data Register not empty Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 80082fe:	687b      	ldr	r3, [r7, #4]
 8008300:	681b      	ldr	r3, [r3, #0]
 8008302:	68da      	ldr	r2, [r3, #12]
 8008304:	687b      	ldr	r3, [r7, #4]
 8008306:	681b      	ldr	r3, [r3, #0]
 8008308:	f022 0220 	bic.w	r2, r2, #32
 800830c:	60da      	str	r2, [r3, #12]

      /* Disable the UART Parity Error Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 800830e:	687b      	ldr	r3, [r7, #4]
 8008310:	681b      	ldr	r3, [r3, #0]
 8008312:	68da      	ldr	r2, [r3, #12]
 8008314:	687b      	ldr	r3, [r7, #4]
 8008316:	681b      	ldr	r3, [r3, #0]
 8008318:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800831c:	60da      	str	r2, [r3, #12]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 800831e:	687b      	ldr	r3, [r7, #4]
 8008320:	681b      	ldr	r3, [r3, #0]
 8008322:	695a      	ldr	r2, [r3, #20]
 8008324:	687b      	ldr	r3, [r7, #4]
 8008326:	681b      	ldr	r3, [r3, #0]
 8008328:	f022 0201 	bic.w	r2, r2, #1
 800832c:	615a      	str	r2, [r3, #20]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 800832e:	687b      	ldr	r3, [r7, #4]
 8008330:	2220      	movs	r2, #32
 8008332:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
      /*Call registered Rx complete callback*/
      huart->RxCpltCallback(huart);
#else
      /*Call legacy weak Rx complete callback*/
      HAL_UART_RxCpltCallback(huart);
 8008336:	6878      	ldr	r0, [r7, #4]
 8008338:	f7f8 febc 	bl	80010b4 <HAL_UART_RxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */

      return HAL_OK;
 800833c:	2300      	movs	r3, #0
 800833e:	e002      	b.n	8008346 <UART_Receive_IT+0xfa>
    }
    return HAL_OK;
 8008340:	2300      	movs	r3, #0
 8008342:	e000      	b.n	8008346 <UART_Receive_IT+0xfa>
  }
  else
  {
    return HAL_BUSY;
 8008344:	2302      	movs	r3, #2
  }
}
 8008346:	4618      	mov	r0, r3
 8008348:	3710      	adds	r7, #16
 800834a:	46bd      	mov	sp, r7
 800834c:	bd80      	pop	{r7, pc}
	...

08008350 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8008350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008354:	b085      	sub	sp, #20
 8008356:	af00      	add	r7, sp, #0
 8008358:	6078      	str	r0, [r7, #4]
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800835a:	687b      	ldr	r3, [r7, #4]
 800835c:	681b      	ldr	r3, [r3, #0]
 800835e:	691b      	ldr	r3, [r3, #16]
 8008360:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8008364:	687b      	ldr	r3, [r7, #4]
 8008366:	68da      	ldr	r2, [r3, #12]
 8008368:	687b      	ldr	r3, [r7, #4]
 800836a:	681b      	ldr	r3, [r3, #0]
 800836c:	430a      	orrs	r2, r1
 800836e:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8008370:	687b      	ldr	r3, [r7, #4]
 8008372:	689a      	ldr	r2, [r3, #8]
 8008374:	687b      	ldr	r3, [r7, #4]
 8008376:	691b      	ldr	r3, [r3, #16]
 8008378:	431a      	orrs	r2, r3
 800837a:	687b      	ldr	r3, [r7, #4]
 800837c:	695b      	ldr	r3, [r3, #20]
 800837e:	431a      	orrs	r2, r3
 8008380:	687b      	ldr	r3, [r7, #4]
 8008382:	69db      	ldr	r3, [r3, #28]
 8008384:	4313      	orrs	r3, r2
 8008386:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(huart->Instance->CR1,
 8008388:	687b      	ldr	r3, [r7, #4]
 800838a:	681b      	ldr	r3, [r3, #0]
 800838c:	68db      	ldr	r3, [r3, #12]
 800838e:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 8008392:	f023 030c 	bic.w	r3, r3, #12
 8008396:	687a      	ldr	r2, [r7, #4]
 8008398:	6812      	ldr	r2, [r2, #0]
 800839a:	68f9      	ldr	r1, [r7, #12]
 800839c:	430b      	orrs	r3, r1
 800839e:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 80083a0:	687b      	ldr	r3, [r7, #4]
 80083a2:	681b      	ldr	r3, [r3, #0]
 80083a4:	695b      	ldr	r3, [r3, #20]
 80083a6:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 80083aa:	687b      	ldr	r3, [r7, #4]
 80083ac:	699a      	ldr	r2, [r3, #24]
 80083ae:	687b      	ldr	r3, [r7, #4]
 80083b0:	681b      	ldr	r3, [r3, #0]
 80083b2:	430a      	orrs	r2, r1
 80083b4:	615a      	str	r2, [r3, #20]

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80083b6:	687b      	ldr	r3, [r7, #4]
 80083b8:	69db      	ldr	r3, [r3, #28]
 80083ba:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80083be:	f040 818b 	bne.w	80086d8 <UART_SetConfig+0x388>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 80083c2:	687b      	ldr	r3, [r7, #4]
 80083c4:	681b      	ldr	r3, [r3, #0]
 80083c6:	4ac1      	ldr	r2, [pc, #772]	; (80086cc <UART_SetConfig+0x37c>)
 80083c8:	4293      	cmp	r3, r2
 80083ca:	d005      	beq.n	80083d8 <UART_SetConfig+0x88>
 80083cc:	687b      	ldr	r3, [r7, #4]
 80083ce:	681b      	ldr	r3, [r3, #0]
 80083d0:	4abf      	ldr	r2, [pc, #764]	; (80086d0 <UART_SetConfig+0x380>)
 80083d2:	4293      	cmp	r3, r2
 80083d4:	f040 80bd 	bne.w	8008552 <UART_SetConfig+0x202>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 80083d8:	f7fd feee 	bl	80061b8 <HAL_RCC_GetPCLK2Freq>
 80083dc:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 80083de:	68bb      	ldr	r3, [r7, #8]
 80083e0:	461d      	mov	r5, r3
 80083e2:	f04f 0600 	mov.w	r6, #0
 80083e6:	46a8      	mov	r8, r5
 80083e8:	46b1      	mov	r9, r6
 80083ea:	eb18 0308 	adds.w	r3, r8, r8
 80083ee:	eb49 0409 	adc.w	r4, r9, r9
 80083f2:	4698      	mov	r8, r3
 80083f4:	46a1      	mov	r9, r4
 80083f6:	eb18 0805 	adds.w	r8, r8, r5
 80083fa:	eb49 0906 	adc.w	r9, r9, r6
 80083fe:	f04f 0100 	mov.w	r1, #0
 8008402:	f04f 0200 	mov.w	r2, #0
 8008406:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 800840a:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 800840e:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8008412:	4688      	mov	r8, r1
 8008414:	4691      	mov	r9, r2
 8008416:	eb18 0005 	adds.w	r0, r8, r5
 800841a:	eb49 0106 	adc.w	r1, r9, r6
 800841e:	687b      	ldr	r3, [r7, #4]
 8008420:	685b      	ldr	r3, [r3, #4]
 8008422:	461d      	mov	r5, r3
 8008424:	f04f 0600 	mov.w	r6, #0
 8008428:	196b      	adds	r3, r5, r5
 800842a:	eb46 0406 	adc.w	r4, r6, r6
 800842e:	461a      	mov	r2, r3
 8008430:	4623      	mov	r3, r4
 8008432:	f7f7 ff35 	bl	80002a0 <__aeabi_uldivmod>
 8008436:	4603      	mov	r3, r0
 8008438:	460c      	mov	r4, r1
 800843a:	461a      	mov	r2, r3
 800843c:	4ba5      	ldr	r3, [pc, #660]	; (80086d4 <UART_SetConfig+0x384>)
 800843e:	fba3 2302 	umull	r2, r3, r3, r2
 8008442:	095b      	lsrs	r3, r3, #5
 8008444:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8008448:	68bb      	ldr	r3, [r7, #8]
 800844a:	461d      	mov	r5, r3
 800844c:	f04f 0600 	mov.w	r6, #0
 8008450:	46a9      	mov	r9, r5
 8008452:	46b2      	mov	sl, r6
 8008454:	eb19 0309 	adds.w	r3, r9, r9
 8008458:	eb4a 040a 	adc.w	r4, sl, sl
 800845c:	4699      	mov	r9, r3
 800845e:	46a2      	mov	sl, r4
 8008460:	eb19 0905 	adds.w	r9, r9, r5
 8008464:	eb4a 0a06 	adc.w	sl, sl, r6
 8008468:	f04f 0100 	mov.w	r1, #0
 800846c:	f04f 0200 	mov.w	r2, #0
 8008470:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8008474:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8008478:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800847c:	4689      	mov	r9, r1
 800847e:	4692      	mov	sl, r2
 8008480:	eb19 0005 	adds.w	r0, r9, r5
 8008484:	eb4a 0106 	adc.w	r1, sl, r6
 8008488:	687b      	ldr	r3, [r7, #4]
 800848a:	685b      	ldr	r3, [r3, #4]
 800848c:	461d      	mov	r5, r3
 800848e:	f04f 0600 	mov.w	r6, #0
 8008492:	196b      	adds	r3, r5, r5
 8008494:	eb46 0406 	adc.w	r4, r6, r6
 8008498:	461a      	mov	r2, r3
 800849a:	4623      	mov	r3, r4
 800849c:	f7f7 ff00 	bl	80002a0 <__aeabi_uldivmod>
 80084a0:	4603      	mov	r3, r0
 80084a2:	460c      	mov	r4, r1
 80084a4:	461a      	mov	r2, r3
 80084a6:	4b8b      	ldr	r3, [pc, #556]	; (80086d4 <UART_SetConfig+0x384>)
 80084a8:	fba3 1302 	umull	r1, r3, r3, r2
 80084ac:	095b      	lsrs	r3, r3, #5
 80084ae:	2164      	movs	r1, #100	; 0x64
 80084b0:	fb01 f303 	mul.w	r3, r1, r3
 80084b4:	1ad3      	subs	r3, r2, r3
 80084b6:	00db      	lsls	r3, r3, #3
 80084b8:	3332      	adds	r3, #50	; 0x32
 80084ba:	4a86      	ldr	r2, [pc, #536]	; (80086d4 <UART_SetConfig+0x384>)
 80084bc:	fba2 2303 	umull	r2, r3, r2, r3
 80084c0:	095b      	lsrs	r3, r3, #5
 80084c2:	005b      	lsls	r3, r3, #1
 80084c4:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 80084c8:	4498      	add	r8, r3
 80084ca:	68bb      	ldr	r3, [r7, #8]
 80084cc:	461d      	mov	r5, r3
 80084ce:	f04f 0600 	mov.w	r6, #0
 80084d2:	46a9      	mov	r9, r5
 80084d4:	46b2      	mov	sl, r6
 80084d6:	eb19 0309 	adds.w	r3, r9, r9
 80084da:	eb4a 040a 	adc.w	r4, sl, sl
 80084de:	4699      	mov	r9, r3
 80084e0:	46a2      	mov	sl, r4
 80084e2:	eb19 0905 	adds.w	r9, r9, r5
 80084e6:	eb4a 0a06 	adc.w	sl, sl, r6
 80084ea:	f04f 0100 	mov.w	r1, #0
 80084ee:	f04f 0200 	mov.w	r2, #0
 80084f2:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80084f6:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80084fa:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80084fe:	4689      	mov	r9, r1
 8008500:	4692      	mov	sl, r2
 8008502:	eb19 0005 	adds.w	r0, r9, r5
 8008506:	eb4a 0106 	adc.w	r1, sl, r6
 800850a:	687b      	ldr	r3, [r7, #4]
 800850c:	685b      	ldr	r3, [r3, #4]
 800850e:	461d      	mov	r5, r3
 8008510:	f04f 0600 	mov.w	r6, #0
 8008514:	196b      	adds	r3, r5, r5
 8008516:	eb46 0406 	adc.w	r4, r6, r6
 800851a:	461a      	mov	r2, r3
 800851c:	4623      	mov	r3, r4
 800851e:	f7f7 febf 	bl	80002a0 <__aeabi_uldivmod>
 8008522:	4603      	mov	r3, r0
 8008524:	460c      	mov	r4, r1
 8008526:	461a      	mov	r2, r3
 8008528:	4b6a      	ldr	r3, [pc, #424]	; (80086d4 <UART_SetConfig+0x384>)
 800852a:	fba3 1302 	umull	r1, r3, r3, r2
 800852e:	095b      	lsrs	r3, r3, #5
 8008530:	2164      	movs	r1, #100	; 0x64
 8008532:	fb01 f303 	mul.w	r3, r1, r3
 8008536:	1ad3      	subs	r3, r2, r3
 8008538:	00db      	lsls	r3, r3, #3
 800853a:	3332      	adds	r3, #50	; 0x32
 800853c:	4a65      	ldr	r2, [pc, #404]	; (80086d4 <UART_SetConfig+0x384>)
 800853e:	fba2 2303 	umull	r2, r3, r2, r3
 8008542:	095b      	lsrs	r3, r3, #5
 8008544:	f003 0207 	and.w	r2, r3, #7
 8008548:	687b      	ldr	r3, [r7, #4]
 800854a:	681b      	ldr	r3, [r3, #0]
 800854c:	4442      	add	r2, r8
 800854e:	609a      	str	r2, [r3, #8]
 8008550:	e26f      	b.n	8008a32 <UART_SetConfig+0x6e2>
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 8008552:	f7fd fe1d 	bl	8006190 <HAL_RCC_GetPCLK1Freq>
 8008556:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8008558:	68bb      	ldr	r3, [r7, #8]
 800855a:	461d      	mov	r5, r3
 800855c:	f04f 0600 	mov.w	r6, #0
 8008560:	46a8      	mov	r8, r5
 8008562:	46b1      	mov	r9, r6
 8008564:	eb18 0308 	adds.w	r3, r8, r8
 8008568:	eb49 0409 	adc.w	r4, r9, r9
 800856c:	4698      	mov	r8, r3
 800856e:	46a1      	mov	r9, r4
 8008570:	eb18 0805 	adds.w	r8, r8, r5
 8008574:	eb49 0906 	adc.w	r9, r9, r6
 8008578:	f04f 0100 	mov.w	r1, #0
 800857c:	f04f 0200 	mov.w	r2, #0
 8008580:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8008584:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8008588:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 800858c:	4688      	mov	r8, r1
 800858e:	4691      	mov	r9, r2
 8008590:	eb18 0005 	adds.w	r0, r8, r5
 8008594:	eb49 0106 	adc.w	r1, r9, r6
 8008598:	687b      	ldr	r3, [r7, #4]
 800859a:	685b      	ldr	r3, [r3, #4]
 800859c:	461d      	mov	r5, r3
 800859e:	f04f 0600 	mov.w	r6, #0
 80085a2:	196b      	adds	r3, r5, r5
 80085a4:	eb46 0406 	adc.w	r4, r6, r6
 80085a8:	461a      	mov	r2, r3
 80085aa:	4623      	mov	r3, r4
 80085ac:	f7f7 fe78 	bl	80002a0 <__aeabi_uldivmod>
 80085b0:	4603      	mov	r3, r0
 80085b2:	460c      	mov	r4, r1
 80085b4:	461a      	mov	r2, r3
 80085b6:	4b47      	ldr	r3, [pc, #284]	; (80086d4 <UART_SetConfig+0x384>)
 80085b8:	fba3 2302 	umull	r2, r3, r3, r2
 80085bc:	095b      	lsrs	r3, r3, #5
 80085be:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80085c2:	68bb      	ldr	r3, [r7, #8]
 80085c4:	461d      	mov	r5, r3
 80085c6:	f04f 0600 	mov.w	r6, #0
 80085ca:	46a9      	mov	r9, r5
 80085cc:	46b2      	mov	sl, r6
 80085ce:	eb19 0309 	adds.w	r3, r9, r9
 80085d2:	eb4a 040a 	adc.w	r4, sl, sl
 80085d6:	4699      	mov	r9, r3
 80085d8:	46a2      	mov	sl, r4
 80085da:	eb19 0905 	adds.w	r9, r9, r5
 80085de:	eb4a 0a06 	adc.w	sl, sl, r6
 80085e2:	f04f 0100 	mov.w	r1, #0
 80085e6:	f04f 0200 	mov.w	r2, #0
 80085ea:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80085ee:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80085f2:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80085f6:	4689      	mov	r9, r1
 80085f8:	4692      	mov	sl, r2
 80085fa:	eb19 0005 	adds.w	r0, r9, r5
 80085fe:	eb4a 0106 	adc.w	r1, sl, r6
 8008602:	687b      	ldr	r3, [r7, #4]
 8008604:	685b      	ldr	r3, [r3, #4]
 8008606:	461d      	mov	r5, r3
 8008608:	f04f 0600 	mov.w	r6, #0
 800860c:	196b      	adds	r3, r5, r5
 800860e:	eb46 0406 	adc.w	r4, r6, r6
 8008612:	461a      	mov	r2, r3
 8008614:	4623      	mov	r3, r4
 8008616:	f7f7 fe43 	bl	80002a0 <__aeabi_uldivmod>
 800861a:	4603      	mov	r3, r0
 800861c:	460c      	mov	r4, r1
 800861e:	461a      	mov	r2, r3
 8008620:	4b2c      	ldr	r3, [pc, #176]	; (80086d4 <UART_SetConfig+0x384>)
 8008622:	fba3 1302 	umull	r1, r3, r3, r2
 8008626:	095b      	lsrs	r3, r3, #5
 8008628:	2164      	movs	r1, #100	; 0x64
 800862a:	fb01 f303 	mul.w	r3, r1, r3
 800862e:	1ad3      	subs	r3, r2, r3
 8008630:	00db      	lsls	r3, r3, #3
 8008632:	3332      	adds	r3, #50	; 0x32
 8008634:	4a27      	ldr	r2, [pc, #156]	; (80086d4 <UART_SetConfig+0x384>)
 8008636:	fba2 2303 	umull	r2, r3, r2, r3
 800863a:	095b      	lsrs	r3, r3, #5
 800863c:	005b      	lsls	r3, r3, #1
 800863e:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8008642:	4498      	add	r8, r3
 8008644:	68bb      	ldr	r3, [r7, #8]
 8008646:	461d      	mov	r5, r3
 8008648:	f04f 0600 	mov.w	r6, #0
 800864c:	46a9      	mov	r9, r5
 800864e:	46b2      	mov	sl, r6
 8008650:	eb19 0309 	adds.w	r3, r9, r9
 8008654:	eb4a 040a 	adc.w	r4, sl, sl
 8008658:	4699      	mov	r9, r3
 800865a:	46a2      	mov	sl, r4
 800865c:	eb19 0905 	adds.w	r9, r9, r5
 8008660:	eb4a 0a06 	adc.w	sl, sl, r6
 8008664:	f04f 0100 	mov.w	r1, #0
 8008668:	f04f 0200 	mov.w	r2, #0
 800866c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8008670:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8008674:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8008678:	4689      	mov	r9, r1
 800867a:	4692      	mov	sl, r2
 800867c:	eb19 0005 	adds.w	r0, r9, r5
 8008680:	eb4a 0106 	adc.w	r1, sl, r6
 8008684:	687b      	ldr	r3, [r7, #4]
 8008686:	685b      	ldr	r3, [r3, #4]
 8008688:	461d      	mov	r5, r3
 800868a:	f04f 0600 	mov.w	r6, #0
 800868e:	196b      	adds	r3, r5, r5
 8008690:	eb46 0406 	adc.w	r4, r6, r6
 8008694:	461a      	mov	r2, r3
 8008696:	4623      	mov	r3, r4
 8008698:	f7f7 fe02 	bl	80002a0 <__aeabi_uldivmod>
 800869c:	4603      	mov	r3, r0
 800869e:	460c      	mov	r4, r1
 80086a0:	461a      	mov	r2, r3
 80086a2:	4b0c      	ldr	r3, [pc, #48]	; (80086d4 <UART_SetConfig+0x384>)
 80086a4:	fba3 1302 	umull	r1, r3, r3, r2
 80086a8:	095b      	lsrs	r3, r3, #5
 80086aa:	2164      	movs	r1, #100	; 0x64
 80086ac:	fb01 f303 	mul.w	r3, r1, r3
 80086b0:	1ad3      	subs	r3, r2, r3
 80086b2:	00db      	lsls	r3, r3, #3
 80086b4:	3332      	adds	r3, #50	; 0x32
 80086b6:	4a07      	ldr	r2, [pc, #28]	; (80086d4 <UART_SetConfig+0x384>)
 80086b8:	fba2 2303 	umull	r2, r3, r2, r3
 80086bc:	095b      	lsrs	r3, r3, #5
 80086be:	f003 0207 	and.w	r2, r3, #7
 80086c2:	687b      	ldr	r3, [r7, #4]
 80086c4:	681b      	ldr	r3, [r3, #0]
 80086c6:	4442      	add	r2, r8
 80086c8:	609a      	str	r2, [r3, #8]
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    }
  }
}
 80086ca:	e1b2      	b.n	8008a32 <UART_SetConfig+0x6e2>
 80086cc:	40011000 	.word	0x40011000
 80086d0:	40011400 	.word	0x40011400
 80086d4:	51eb851f 	.word	0x51eb851f
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 80086d8:	687b      	ldr	r3, [r7, #4]
 80086da:	681b      	ldr	r3, [r3, #0]
 80086dc:	4ad7      	ldr	r2, [pc, #860]	; (8008a3c <UART_SetConfig+0x6ec>)
 80086de:	4293      	cmp	r3, r2
 80086e0:	d005      	beq.n	80086ee <UART_SetConfig+0x39e>
 80086e2:	687b      	ldr	r3, [r7, #4]
 80086e4:	681b      	ldr	r3, [r3, #0]
 80086e6:	4ad6      	ldr	r2, [pc, #856]	; (8008a40 <UART_SetConfig+0x6f0>)
 80086e8:	4293      	cmp	r3, r2
 80086ea:	f040 80d1 	bne.w	8008890 <UART_SetConfig+0x540>
      pclk = HAL_RCC_GetPCLK2Freq();
 80086ee:	f7fd fd63 	bl	80061b8 <HAL_RCC_GetPCLK2Freq>
 80086f2:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 80086f4:	68bb      	ldr	r3, [r7, #8]
 80086f6:	469a      	mov	sl, r3
 80086f8:	f04f 0b00 	mov.w	fp, #0
 80086fc:	46d0      	mov	r8, sl
 80086fe:	46d9      	mov	r9, fp
 8008700:	eb18 0308 	adds.w	r3, r8, r8
 8008704:	eb49 0409 	adc.w	r4, r9, r9
 8008708:	4698      	mov	r8, r3
 800870a:	46a1      	mov	r9, r4
 800870c:	eb18 080a 	adds.w	r8, r8, sl
 8008710:	eb49 090b 	adc.w	r9, r9, fp
 8008714:	f04f 0100 	mov.w	r1, #0
 8008718:	f04f 0200 	mov.w	r2, #0
 800871c:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8008720:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8008724:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8008728:	4688      	mov	r8, r1
 800872a:	4691      	mov	r9, r2
 800872c:	eb1a 0508 	adds.w	r5, sl, r8
 8008730:	eb4b 0609 	adc.w	r6, fp, r9
 8008734:	687b      	ldr	r3, [r7, #4]
 8008736:	685b      	ldr	r3, [r3, #4]
 8008738:	4619      	mov	r1, r3
 800873a:	f04f 0200 	mov.w	r2, #0
 800873e:	f04f 0300 	mov.w	r3, #0
 8008742:	f04f 0400 	mov.w	r4, #0
 8008746:	0094      	lsls	r4, r2, #2
 8008748:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800874c:	008b      	lsls	r3, r1, #2
 800874e:	461a      	mov	r2, r3
 8008750:	4623      	mov	r3, r4
 8008752:	4628      	mov	r0, r5
 8008754:	4631      	mov	r1, r6
 8008756:	f7f7 fda3 	bl	80002a0 <__aeabi_uldivmod>
 800875a:	4603      	mov	r3, r0
 800875c:	460c      	mov	r4, r1
 800875e:	461a      	mov	r2, r3
 8008760:	4bb8      	ldr	r3, [pc, #736]	; (8008a44 <UART_SetConfig+0x6f4>)
 8008762:	fba3 2302 	umull	r2, r3, r3, r2
 8008766:	095b      	lsrs	r3, r3, #5
 8008768:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800876c:	68bb      	ldr	r3, [r7, #8]
 800876e:	469b      	mov	fp, r3
 8008770:	f04f 0c00 	mov.w	ip, #0
 8008774:	46d9      	mov	r9, fp
 8008776:	46e2      	mov	sl, ip
 8008778:	eb19 0309 	adds.w	r3, r9, r9
 800877c:	eb4a 040a 	adc.w	r4, sl, sl
 8008780:	4699      	mov	r9, r3
 8008782:	46a2      	mov	sl, r4
 8008784:	eb19 090b 	adds.w	r9, r9, fp
 8008788:	eb4a 0a0c 	adc.w	sl, sl, ip
 800878c:	f04f 0100 	mov.w	r1, #0
 8008790:	f04f 0200 	mov.w	r2, #0
 8008794:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8008798:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800879c:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80087a0:	4689      	mov	r9, r1
 80087a2:	4692      	mov	sl, r2
 80087a4:	eb1b 0509 	adds.w	r5, fp, r9
 80087a8:	eb4c 060a 	adc.w	r6, ip, sl
 80087ac:	687b      	ldr	r3, [r7, #4]
 80087ae:	685b      	ldr	r3, [r3, #4]
 80087b0:	4619      	mov	r1, r3
 80087b2:	f04f 0200 	mov.w	r2, #0
 80087b6:	f04f 0300 	mov.w	r3, #0
 80087ba:	f04f 0400 	mov.w	r4, #0
 80087be:	0094      	lsls	r4, r2, #2
 80087c0:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 80087c4:	008b      	lsls	r3, r1, #2
 80087c6:	461a      	mov	r2, r3
 80087c8:	4623      	mov	r3, r4
 80087ca:	4628      	mov	r0, r5
 80087cc:	4631      	mov	r1, r6
 80087ce:	f7f7 fd67 	bl	80002a0 <__aeabi_uldivmod>
 80087d2:	4603      	mov	r3, r0
 80087d4:	460c      	mov	r4, r1
 80087d6:	461a      	mov	r2, r3
 80087d8:	4b9a      	ldr	r3, [pc, #616]	; (8008a44 <UART_SetConfig+0x6f4>)
 80087da:	fba3 1302 	umull	r1, r3, r3, r2
 80087de:	095b      	lsrs	r3, r3, #5
 80087e0:	2164      	movs	r1, #100	; 0x64
 80087e2:	fb01 f303 	mul.w	r3, r1, r3
 80087e6:	1ad3      	subs	r3, r2, r3
 80087e8:	011b      	lsls	r3, r3, #4
 80087ea:	3332      	adds	r3, #50	; 0x32
 80087ec:	4a95      	ldr	r2, [pc, #596]	; (8008a44 <UART_SetConfig+0x6f4>)
 80087ee:	fba2 2303 	umull	r2, r3, r2, r3
 80087f2:	095b      	lsrs	r3, r3, #5
 80087f4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80087f8:	4498      	add	r8, r3
 80087fa:	68bb      	ldr	r3, [r7, #8]
 80087fc:	469b      	mov	fp, r3
 80087fe:	f04f 0c00 	mov.w	ip, #0
 8008802:	46d9      	mov	r9, fp
 8008804:	46e2      	mov	sl, ip
 8008806:	eb19 0309 	adds.w	r3, r9, r9
 800880a:	eb4a 040a 	adc.w	r4, sl, sl
 800880e:	4699      	mov	r9, r3
 8008810:	46a2      	mov	sl, r4
 8008812:	eb19 090b 	adds.w	r9, r9, fp
 8008816:	eb4a 0a0c 	adc.w	sl, sl, ip
 800881a:	f04f 0100 	mov.w	r1, #0
 800881e:	f04f 0200 	mov.w	r2, #0
 8008822:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8008826:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800882a:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800882e:	4689      	mov	r9, r1
 8008830:	4692      	mov	sl, r2
 8008832:	eb1b 0509 	adds.w	r5, fp, r9
 8008836:	eb4c 060a 	adc.w	r6, ip, sl
 800883a:	687b      	ldr	r3, [r7, #4]
 800883c:	685b      	ldr	r3, [r3, #4]
 800883e:	4619      	mov	r1, r3
 8008840:	f04f 0200 	mov.w	r2, #0
 8008844:	f04f 0300 	mov.w	r3, #0
 8008848:	f04f 0400 	mov.w	r4, #0
 800884c:	0094      	lsls	r4, r2, #2
 800884e:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8008852:	008b      	lsls	r3, r1, #2
 8008854:	461a      	mov	r2, r3
 8008856:	4623      	mov	r3, r4
 8008858:	4628      	mov	r0, r5
 800885a:	4631      	mov	r1, r6
 800885c:	f7f7 fd20 	bl	80002a0 <__aeabi_uldivmod>
 8008860:	4603      	mov	r3, r0
 8008862:	460c      	mov	r4, r1
 8008864:	461a      	mov	r2, r3
 8008866:	4b77      	ldr	r3, [pc, #476]	; (8008a44 <UART_SetConfig+0x6f4>)
 8008868:	fba3 1302 	umull	r1, r3, r3, r2
 800886c:	095b      	lsrs	r3, r3, #5
 800886e:	2164      	movs	r1, #100	; 0x64
 8008870:	fb01 f303 	mul.w	r3, r1, r3
 8008874:	1ad3      	subs	r3, r2, r3
 8008876:	011b      	lsls	r3, r3, #4
 8008878:	3332      	adds	r3, #50	; 0x32
 800887a:	4a72      	ldr	r2, [pc, #456]	; (8008a44 <UART_SetConfig+0x6f4>)
 800887c:	fba2 2303 	umull	r2, r3, r2, r3
 8008880:	095b      	lsrs	r3, r3, #5
 8008882:	f003 020f 	and.w	r2, r3, #15
 8008886:	687b      	ldr	r3, [r7, #4]
 8008888:	681b      	ldr	r3, [r3, #0]
 800888a:	4442      	add	r2, r8
 800888c:	609a      	str	r2, [r3, #8]
 800888e:	e0d0      	b.n	8008a32 <UART_SetConfig+0x6e2>
      pclk = HAL_RCC_GetPCLK1Freq();
 8008890:	f7fd fc7e 	bl	8006190 <HAL_RCC_GetPCLK1Freq>
 8008894:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8008896:	68bb      	ldr	r3, [r7, #8]
 8008898:	469a      	mov	sl, r3
 800889a:	f04f 0b00 	mov.w	fp, #0
 800889e:	46d0      	mov	r8, sl
 80088a0:	46d9      	mov	r9, fp
 80088a2:	eb18 0308 	adds.w	r3, r8, r8
 80088a6:	eb49 0409 	adc.w	r4, r9, r9
 80088aa:	4698      	mov	r8, r3
 80088ac:	46a1      	mov	r9, r4
 80088ae:	eb18 080a 	adds.w	r8, r8, sl
 80088b2:	eb49 090b 	adc.w	r9, r9, fp
 80088b6:	f04f 0100 	mov.w	r1, #0
 80088ba:	f04f 0200 	mov.w	r2, #0
 80088be:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 80088c2:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 80088c6:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80088ca:	4688      	mov	r8, r1
 80088cc:	4691      	mov	r9, r2
 80088ce:	eb1a 0508 	adds.w	r5, sl, r8
 80088d2:	eb4b 0609 	adc.w	r6, fp, r9
 80088d6:	687b      	ldr	r3, [r7, #4]
 80088d8:	685b      	ldr	r3, [r3, #4]
 80088da:	4619      	mov	r1, r3
 80088dc:	f04f 0200 	mov.w	r2, #0
 80088e0:	f04f 0300 	mov.w	r3, #0
 80088e4:	f04f 0400 	mov.w	r4, #0
 80088e8:	0094      	lsls	r4, r2, #2
 80088ea:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 80088ee:	008b      	lsls	r3, r1, #2
 80088f0:	461a      	mov	r2, r3
 80088f2:	4623      	mov	r3, r4
 80088f4:	4628      	mov	r0, r5
 80088f6:	4631      	mov	r1, r6
 80088f8:	f7f7 fcd2 	bl	80002a0 <__aeabi_uldivmod>
 80088fc:	4603      	mov	r3, r0
 80088fe:	460c      	mov	r4, r1
 8008900:	461a      	mov	r2, r3
 8008902:	4b50      	ldr	r3, [pc, #320]	; (8008a44 <UART_SetConfig+0x6f4>)
 8008904:	fba3 2302 	umull	r2, r3, r3, r2
 8008908:	095b      	lsrs	r3, r3, #5
 800890a:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800890e:	68bb      	ldr	r3, [r7, #8]
 8008910:	469b      	mov	fp, r3
 8008912:	f04f 0c00 	mov.w	ip, #0
 8008916:	46d9      	mov	r9, fp
 8008918:	46e2      	mov	sl, ip
 800891a:	eb19 0309 	adds.w	r3, r9, r9
 800891e:	eb4a 040a 	adc.w	r4, sl, sl
 8008922:	4699      	mov	r9, r3
 8008924:	46a2      	mov	sl, r4
 8008926:	eb19 090b 	adds.w	r9, r9, fp
 800892a:	eb4a 0a0c 	adc.w	sl, sl, ip
 800892e:	f04f 0100 	mov.w	r1, #0
 8008932:	f04f 0200 	mov.w	r2, #0
 8008936:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800893a:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800893e:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8008942:	4689      	mov	r9, r1
 8008944:	4692      	mov	sl, r2
 8008946:	eb1b 0509 	adds.w	r5, fp, r9
 800894a:	eb4c 060a 	adc.w	r6, ip, sl
 800894e:	687b      	ldr	r3, [r7, #4]
 8008950:	685b      	ldr	r3, [r3, #4]
 8008952:	4619      	mov	r1, r3
 8008954:	f04f 0200 	mov.w	r2, #0
 8008958:	f04f 0300 	mov.w	r3, #0
 800895c:	f04f 0400 	mov.w	r4, #0
 8008960:	0094      	lsls	r4, r2, #2
 8008962:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8008966:	008b      	lsls	r3, r1, #2
 8008968:	461a      	mov	r2, r3
 800896a:	4623      	mov	r3, r4
 800896c:	4628      	mov	r0, r5
 800896e:	4631      	mov	r1, r6
 8008970:	f7f7 fc96 	bl	80002a0 <__aeabi_uldivmod>
 8008974:	4603      	mov	r3, r0
 8008976:	460c      	mov	r4, r1
 8008978:	461a      	mov	r2, r3
 800897a:	4b32      	ldr	r3, [pc, #200]	; (8008a44 <UART_SetConfig+0x6f4>)
 800897c:	fba3 1302 	umull	r1, r3, r3, r2
 8008980:	095b      	lsrs	r3, r3, #5
 8008982:	2164      	movs	r1, #100	; 0x64
 8008984:	fb01 f303 	mul.w	r3, r1, r3
 8008988:	1ad3      	subs	r3, r2, r3
 800898a:	011b      	lsls	r3, r3, #4
 800898c:	3332      	adds	r3, #50	; 0x32
 800898e:	4a2d      	ldr	r2, [pc, #180]	; (8008a44 <UART_SetConfig+0x6f4>)
 8008990:	fba2 2303 	umull	r2, r3, r2, r3
 8008994:	095b      	lsrs	r3, r3, #5
 8008996:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800899a:	4498      	add	r8, r3
 800899c:	68bb      	ldr	r3, [r7, #8]
 800899e:	469b      	mov	fp, r3
 80089a0:	f04f 0c00 	mov.w	ip, #0
 80089a4:	46d9      	mov	r9, fp
 80089a6:	46e2      	mov	sl, ip
 80089a8:	eb19 0309 	adds.w	r3, r9, r9
 80089ac:	eb4a 040a 	adc.w	r4, sl, sl
 80089b0:	4699      	mov	r9, r3
 80089b2:	46a2      	mov	sl, r4
 80089b4:	eb19 090b 	adds.w	r9, r9, fp
 80089b8:	eb4a 0a0c 	adc.w	sl, sl, ip
 80089bc:	f04f 0100 	mov.w	r1, #0
 80089c0:	f04f 0200 	mov.w	r2, #0
 80089c4:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80089c8:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80089cc:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80089d0:	4689      	mov	r9, r1
 80089d2:	4692      	mov	sl, r2
 80089d4:	eb1b 0509 	adds.w	r5, fp, r9
 80089d8:	eb4c 060a 	adc.w	r6, ip, sl
 80089dc:	687b      	ldr	r3, [r7, #4]
 80089de:	685b      	ldr	r3, [r3, #4]
 80089e0:	4619      	mov	r1, r3
 80089e2:	f04f 0200 	mov.w	r2, #0
 80089e6:	f04f 0300 	mov.w	r3, #0
 80089ea:	f04f 0400 	mov.w	r4, #0
 80089ee:	0094      	lsls	r4, r2, #2
 80089f0:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 80089f4:	008b      	lsls	r3, r1, #2
 80089f6:	461a      	mov	r2, r3
 80089f8:	4623      	mov	r3, r4
 80089fa:	4628      	mov	r0, r5
 80089fc:	4631      	mov	r1, r6
 80089fe:	f7f7 fc4f 	bl	80002a0 <__aeabi_uldivmod>
 8008a02:	4603      	mov	r3, r0
 8008a04:	460c      	mov	r4, r1
 8008a06:	461a      	mov	r2, r3
 8008a08:	4b0e      	ldr	r3, [pc, #56]	; (8008a44 <UART_SetConfig+0x6f4>)
 8008a0a:	fba3 1302 	umull	r1, r3, r3, r2
 8008a0e:	095b      	lsrs	r3, r3, #5
 8008a10:	2164      	movs	r1, #100	; 0x64
 8008a12:	fb01 f303 	mul.w	r3, r1, r3
 8008a16:	1ad3      	subs	r3, r2, r3
 8008a18:	011b      	lsls	r3, r3, #4
 8008a1a:	3332      	adds	r3, #50	; 0x32
 8008a1c:	4a09      	ldr	r2, [pc, #36]	; (8008a44 <UART_SetConfig+0x6f4>)
 8008a1e:	fba2 2303 	umull	r2, r3, r2, r3
 8008a22:	095b      	lsrs	r3, r3, #5
 8008a24:	f003 020f 	and.w	r2, r3, #15
 8008a28:	687b      	ldr	r3, [r7, #4]
 8008a2a:	681b      	ldr	r3, [r3, #0]
 8008a2c:	4442      	add	r2, r8
 8008a2e:	609a      	str	r2, [r3, #8]
}
 8008a30:	e7ff      	b.n	8008a32 <UART_SetConfig+0x6e2>
 8008a32:	bf00      	nop
 8008a34:	3714      	adds	r7, #20
 8008a36:	46bd      	mov	sp, r7
 8008a38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008a3c:	40011000 	.word	0x40011000
 8008a40:	40011400 	.word	0x40011400
 8008a44:	51eb851f 	.word	0x51eb851f

08008a48 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8008a48:	b580      	push	{r7, lr}
 8008a4a:	af00      	add	r7, sp, #0
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 8008a4c:	f003 f81e 	bl	800ba8c <touchgfx_init>
}
 8008a50:	bf00      	nop
 8008a52:	bd80      	pop	{r7, pc}

08008a54 <_ZN8touchgfx12FontProviderD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~FontProvider()
 8008a54:	b480      	push	{r7}
 8008a56:	b083      	sub	sp, #12
 8008a58:	af00      	add	r7, sp, #0
 8008a5a:	6078      	str	r0, [r7, #4]
    {
 8008a5c:	4a04      	ldr	r2, [pc, #16]	; (8008a70 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 8008a5e:	687b      	ldr	r3, [r7, #4]
 8008a60:	601a      	str	r2, [r3, #0]
    }
 8008a62:	687b      	ldr	r3, [r7, #4]
 8008a64:	4618      	mov	r0, r3
 8008a66:	370c      	adds	r7, #12
 8008a68:	46bd      	mov	sp, r7
 8008a6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a6e:	4770      	bx	lr
 8008a70:	0801cacc 	.word	0x0801cacc

08008a74 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8008a74:	b580      	push	{r7, lr}
 8008a76:	b082      	sub	sp, #8
 8008a78:	af00      	add	r7, sp, #0
 8008a7a:	6078      	str	r0, [r7, #4]
    }
 8008a7c:	6878      	ldr	r0, [r7, #4]
 8008a7e:	f7ff ffe9 	bl	8008a54 <_ZN8touchgfx12FontProviderD1Ev>
 8008a82:	2104      	movs	r1, #4
 8008a84:	6878      	ldr	r0, [r7, #4]
 8008a86:	f012 fbc7 	bl	801b218 <_ZdlPvj>
 8008a8a:	687b      	ldr	r3, [r7, #4]
 8008a8c:	4618      	mov	r0, r3
 8008a8e:	3708      	adds	r7, #8
 8008a90:	46bd      	mov	sp, r7
 8008a92:	bd80      	pop	{r7, pc}

08008a94 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8008a94:	b580      	push	{r7, lr}
 8008a96:	b082      	sub	sp, #8
 8008a98:	af00      	add	r7, sp, #0
 8008a9a:	6078      	str	r0, [r7, #4]
 8008a9c:	460b      	mov	r3, r1
 8008a9e:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8008aa0:	887b      	ldrh	r3, [r7, #2]
 8008aa2:	2b01      	cmp	r3, #1
 8008aa4:	d008      	beq.n	8008ab8 <_ZN23ApplicationFontProvider7getFontEt+0x24>
 8008aa6:	2b02      	cmp	r3, #2
 8008aa8:	d00b      	beq.n	8008ac2 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8008aaa:	2b00      	cmp	r3, #0
 8008aac:	d10e      	bne.n	8008acc <_ZN23ApplicationFontProvider7getFontEt+0x38>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8008aae:	f001 fbfd 	bl	800a2ac <_ZN17TypedTextDatabase8getFontsEv>
 8008ab2:	4603      	mov	r3, r0
 8008ab4:	681b      	ldr	r3, [r3, #0]
 8008ab6:	e00a      	b.n	8008ace <_ZN23ApplicationFontProvider7getFontEt+0x3a>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8008ab8:	f001 fbf8 	bl	800a2ac <_ZN17TypedTextDatabase8getFontsEv>
 8008abc:	4603      	mov	r3, r0
 8008abe:	685b      	ldr	r3, [r3, #4]
 8008ac0:	e005      	b.n	8008ace <_ZN23ApplicationFontProvider7getFontEt+0x3a>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8008ac2:	f001 fbf3 	bl	800a2ac <_ZN17TypedTextDatabase8getFontsEv>
 8008ac6:	4603      	mov	r3, r0
 8008ac8:	689b      	ldr	r3, [r3, #8]
 8008aca:	e000      	b.n	8008ace <_ZN23ApplicationFontProvider7getFontEt+0x3a>
    default:
        return 0;
 8008acc:	2300      	movs	r3, #0
    }
}
 8008ace:	4618      	mov	r0, r3
 8008ad0:	3708      	adds	r7, #8
 8008ad2:	46bd      	mov	sp, r7
 8008ad4:	bd80      	pop	{r7, pc}
	...

08008ad8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8008ad8:	b580      	push	{r7, lr}
 8008ada:	b082      	sub	sp, #8
 8008adc:	af00      	add	r7, sp, #0
 8008ade:	6078      	str	r0, [r7, #4]
 8008ae0:	4a05      	ldr	r2, [pc, #20]	; (8008af8 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 8008ae2:	687b      	ldr	r3, [r7, #4]
 8008ae4:	601a      	str	r2, [r3, #0]
 8008ae6:	687b      	ldr	r3, [r7, #4]
 8008ae8:	4618      	mov	r0, r3
 8008aea:	f7ff ffb3 	bl	8008a54 <_ZN8touchgfx12FontProviderD1Ev>
 8008aee:	687b      	ldr	r3, [r7, #4]
 8008af0:	4618      	mov	r0, r3
 8008af2:	3708      	adds	r7, #8
 8008af4:	46bd      	mov	sp, r7
 8008af6:	bd80      	pop	{r7, pc}
 8008af8:	0801cab8 	.word	0x0801cab8

08008afc <_ZN23ApplicationFontProviderD0Ev>:
 8008afc:	b580      	push	{r7, lr}
 8008afe:	b082      	sub	sp, #8
 8008b00:	af00      	add	r7, sp, #0
 8008b02:	6078      	str	r0, [r7, #4]
 8008b04:	6878      	ldr	r0, [r7, #4]
 8008b06:	f7ff ffe7 	bl	8008ad8 <_ZN23ApplicationFontProviderD1Ev>
 8008b0a:	2104      	movs	r1, #4
 8008b0c:	6878      	ldr	r0, [r7, #4]
 8008b0e:	f012 fb83 	bl	801b218 <_ZdlPvj>
 8008b12:	687b      	ldr	r3, [r7, #4]
 8008b14:	4618      	mov	r0, r3
 8008b16:	3708      	adds	r7, #8
 8008b18:	46bd      	mov	sp, r7
 8008b1a:	bd80      	pop	{r7, pc}

08008b1c <_ZN8touchgfx4FontD1Ev>:
 *        It provides utility functions such as obtaining string width and font height.
 */
class Font
{
public:
    virtual ~Font() { }
 8008b1c:	b480      	push	{r7}
 8008b1e:	b083      	sub	sp, #12
 8008b20:	af00      	add	r7, sp, #0
 8008b22:	6078      	str	r0, [r7, #4]
 8008b24:	4a04      	ldr	r2, [pc, #16]	; (8008b38 <_ZN8touchgfx4FontD1Ev+0x1c>)
 8008b26:	687b      	ldr	r3, [r7, #4]
 8008b28:	601a      	str	r2, [r3, #0]
 8008b2a:	687b      	ldr	r3, [r7, #4]
 8008b2c:	4618      	mov	r0, r3
 8008b2e:	370c      	adds	r7, #12
 8008b30:	46bd      	mov	sp, r7
 8008b32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b36:	4770      	bx	lr
 8008b38:	0801e0c4 	.word	0x0801e0c4

08008b3c <_ZN8touchgfx4FontD0Ev>:
 8008b3c:	b580      	push	{r7, lr}
 8008b3e:	b082      	sub	sp, #8
 8008b40:	af00      	add	r7, sp, #0
 8008b42:	6078      	str	r0, [r7, #4]
 8008b44:	6878      	ldr	r0, [r7, #4]
 8008b46:	f7ff ffe9 	bl	8008b1c <_ZN8touchgfx4FontD1Ev>
 8008b4a:	2110      	movs	r1, #16
 8008b4c:	6878      	ldr	r0, [r7, #4]
 8008b4e:	f012 fb63 	bl	801b218 <_ZdlPvj>
 8008b52:	687b      	ldr	r3, [r7, #4]
 8008b54:	4618      	mov	r0, r3
 8008b56:	3708      	adds	r7, #8
 8008b58:	46bd      	mov	sp, r7
 8008b5a:	bd80      	pop	{r7, pc}

08008b5c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getGlyph
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8008b5c:	b590      	push	{r4, r7, lr}
 8008b5e:	b087      	sub	sp, #28
 8008b60:	af00      	add	r7, sp, #0
 8008b62:	6078      	str	r0, [r7, #4]
 8008b64:	460b      	mov	r3, r1
 8008b66:	807b      	strh	r3, [r7, #2]
    {
        const uint8_t* dummyPixelDataPointer = 0;
 8008b68:	2300      	movs	r3, #0
 8008b6a:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 8008b6c:	2300      	movs	r3, #0
 8008b6e:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8008b70:	687b      	ldr	r3, [r7, #4]
 8008b72:	681b      	ldr	r3, [r3, #0]
 8008b74:	3308      	adds	r3, #8
 8008b76:	681c      	ldr	r4, [r3, #0]
 8008b78:	f107 030f 	add.w	r3, r7, #15
 8008b7c:	f107 0210 	add.w	r2, r7, #16
 8008b80:	8879      	ldrh	r1, [r7, #2]
 8008b82:	6878      	ldr	r0, [r7, #4]
 8008b84:	47a0      	blx	r4
 8008b86:	6178      	str	r0, [r7, #20]
        return glyph;
 8008b88:	697b      	ldr	r3, [r7, #20]
    }
 8008b8a:	4618      	mov	r0, r3
 8008b8c:	371c      	adds	r7, #28
 8008b8e:	46bd      	mov	sp, r7
 8008b90:	bd90      	pop	{r4, r7, pc}

08008b92 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     *        character, use the glyph for the character returned by this function. If 0 (zero)
     *        is returned, there is no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8008b92:	b480      	push	{r7}
 8008b94:	b083      	sub	sp, #12
 8008b96:	af00      	add	r7, sp, #0
 8008b98:	6078      	str	r0, [r7, #4]
    {
        return falllbackCharacter;
 8008b9a:	687b      	ldr	r3, [r7, #4]
 8008b9c:	895b      	ldrh	r3, [r3, #10]
    }
 8008b9e:	4618      	mov	r0, r3
 8008ba0:	370c      	adds	r7, #12
 8008ba2:	46bd      	mov	sp, r7
 8008ba4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ba8:	4770      	bx	lr

08008baa <_ZNK8touchgfx4Font15getEllipsisCharEv>:
    *        Gets ellipsis character for the given font. This is the character which is used
    *        when truncating long lines.
    *
    * @return The ellipsis character for the typography.
    */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8008baa:	b480      	push	{r7}
 8008bac:	b083      	sub	sp, #12
 8008bae:	af00      	add	r7, sp, #0
 8008bb0:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8008bb2:	687b      	ldr	r3, [r7, #4]
 8008bb4:	899b      	ldrh	r3, [r3, #12]
    }
 8008bb6:	4618      	mov	r0, r3
 8008bb8:	370c      	adds	r7, #12
 8008bba:	46bd      	mov	sp, r7
 8008bbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bc0:	4770      	bx	lr

08008bc2 <_ZNK8touchgfx4Font13getFontHeightEv>:
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getMinimumTextHeight for this.
     *
     * @return The height in pixels of this font.
     */
    virtual uint16_t getFontHeight() const
 8008bc2:	b480      	push	{r7}
 8008bc4:	b083      	sub	sp, #12
 8008bc6:	af00      	add	r7, sp, #0
 8008bc8:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 8008bca:	687b      	ldr	r3, [r7, #4]
 8008bcc:	889b      	ldrh	r3, [r3, #4]
    }
 8008bce:	4618      	mov	r0, r3
 8008bd0:	370c      	adds	r7, #12
 8008bd2:	46bd      	mov	sp, r7
 8008bd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bd8:	4770      	bx	lr

08008bda <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *        into account that certain characters (eg 'g') have pixels below the baseline,
     *        thus making the text height larger than the font height.
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    virtual uint16_t getMinimumTextHeight() const
 8008bda:	b480      	push	{r7}
 8008bdc:	b083      	sub	sp, #12
 8008bde:	af00      	add	r7, sp, #0
 8008be0:	6078      	str	r0, [r7, #4]
    {
        return fontHeight + pixelsBelowBaseline;
 8008be2:	687b      	ldr	r3, [r7, #4]
 8008be4:	889a      	ldrh	r2, [r3, #4]
 8008be6:	687b      	ldr	r3, [r7, #4]
 8008be8:	799b      	ldrb	r3, [r3, #6]
 8008bea:	b29b      	uxth	r3, r3
 8008bec:	4413      	add	r3, r2
 8008bee:	b29b      	uxth	r3, r3
    }
 8008bf0:	4618      	mov	r0, r3
 8008bf2:	370c      	adds	r7, #12
 8008bf4:	46bd      	mov	sp, r7
 8008bf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bfa:	4770      	bx	lr

08008bfc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     *        Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    virtual uint8_t getBitsPerPixel() const
 8008bfc:	b480      	push	{r7}
 8008bfe:	b083      	sub	sp, #12
 8008c00:	af00      	add	r7, sp, #0
 8008c02:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8008c04:	687b      	ldr	r3, [r7, #4]
 8008c06:	79db      	ldrb	r3, [r3, #7]
 8008c08:	f3c3 0306 	ubfx	r3, r3, #0, #7
 8008c0c:	b2db      	uxtb	r3, r3
    }
 8008c0e:	4618      	mov	r0, r3
 8008c10:	370c      	adds	r7, #12
 8008c12:	46bd      	mov	sp, r7
 8008c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c18:	4770      	bx	lr

08008c1a <_ZNK8touchgfx4Font15getDataFormatA4Ev>:
     *
     *        Are the glyphs saved using ST A4 format.
     *
     * @return True if the font is stored using A4 format, false otherwise.
     */
    virtual uint8_t getDataFormatA4() const
 8008c1a:	b480      	push	{r7}
 8008c1c:	b083      	sub	sp, #12
 8008c1e:	af00      	add	r7, sp, #0
 8008c20:	6078      	str	r0, [r7, #4]
    {
        return a4;
 8008c22:	687b      	ldr	r3, [r7, #4]
 8008c24:	79db      	ldrb	r3, [r3, #7]
 8008c26:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8008c2a:	b2db      	uxtb	r3, r3
    }
 8008c2c:	4618      	mov	r0, r3
 8008c2e:	370c      	adds	r7, #12
 8008c30:	46bd      	mov	sp, r7
 8008c32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c36:	4770      	bx	lr

08008c38 <_ZN8touchgfx9ConstFontD1Ev>:
 * @note Pure virtual class. Create an application-
 *          specific implementation of getPixelData.
 *
 * @see Font
 */
class ConstFont : public Font
 8008c38:	b580      	push	{r7, lr}
 8008c3a:	b082      	sub	sp, #8
 8008c3c:	af00      	add	r7, sp, #0
 8008c3e:	6078      	str	r0, [r7, #4]
 8008c40:	4a05      	ldr	r2, [pc, #20]	; (8008c58 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 8008c42:	687b      	ldr	r3, [r7, #4]
 8008c44:	601a      	str	r2, [r3, #0]
 8008c46:	687b      	ldr	r3, [r7, #4]
 8008c48:	4618      	mov	r0, r3
 8008c4a:	f7ff ff67 	bl	8008b1c <_ZN8touchgfx4FontD1Ev>
 8008c4e:	687b      	ldr	r3, [r7, #4]
 8008c50:	4618      	mov	r0, r3
 8008c52:	3708      	adds	r7, #8
 8008c54:	46bd      	mov	sp, r7
 8008c56:	bd80      	pop	{r7, pc}
 8008c58:	0801e17c 	.word	0x0801e17c

08008c5c <_ZN8touchgfx9ConstFontD0Ev>:
 8008c5c:	b580      	push	{r7, lr}
 8008c5e:	b082      	sub	sp, #8
 8008c60:	af00      	add	r7, sp, #0
 8008c62:	6078      	str	r0, [r7, #4]
 8008c64:	6878      	ldr	r0, [r7, #4]
 8008c66:	f7ff ffe7 	bl	8008c38 <_ZN8touchgfx9ConstFontD1Ev>
 8008c6a:	2118      	movs	r1, #24
 8008c6c:	6878      	ldr	r0, [r7, #4]
 8008c6e:	f012 fad3 	bl	801b218 <_ZdlPvj>
 8008c72:	687b      	ldr	r3, [r7, #4]
 8008c74:	4618      	mov	r0, r3
 8008c76:	3708      	adds	r7, #8
 8008c78:	46bd      	mov	sp, r7
 8008c7a:	bd80      	pop	{r7, pc}

08008c7c <_ZN8touchgfx13GeneratedFontD1Ev>:
 *        An GeneratedFont has both glyph table and glyph data placed in a flash which
 *        supports random access read (i.e. not a NAND flash)
 *
 * @see ConstFont
 */
class GeneratedFont : public ConstFont
 8008c7c:	b580      	push	{r7, lr}
 8008c7e:	b082      	sub	sp, #8
 8008c80:	af00      	add	r7, sp, #0
 8008c82:	6078      	str	r0, [r7, #4]
 8008c84:	4a05      	ldr	r2, [pc, #20]	; (8008c9c <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 8008c86:	687b      	ldr	r3, [r7, #4]
 8008c88:	601a      	str	r2, [r3, #0]
 8008c8a:	687b      	ldr	r3, [r7, #4]
 8008c8c:	4618      	mov	r0, r3
 8008c8e:	f7ff ffd3 	bl	8008c38 <_ZN8touchgfx9ConstFontD1Ev>
 8008c92:	687b      	ldr	r3, [r7, #4]
 8008c94:	4618      	mov	r0, r3
 8008c96:	3708      	adds	r7, #8
 8008c98:	46bd      	mov	sp, r7
 8008c9a:	bd80      	pop	{r7, pc}
 8008c9c:	0801cae0 	.word	0x0801cae0

08008ca0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8008ca0:	b580      	push	{r7, lr}
 8008ca2:	b082      	sub	sp, #8
 8008ca4:	af00      	add	r7, sp, #0
 8008ca6:	6078      	str	r0, [r7, #4]
 8008ca8:	6878      	ldr	r0, [r7, #4]
 8008caa:	f7ff ffe7 	bl	8008c7c <_ZN8touchgfx13GeneratedFontD1Ev>
 8008cae:	2124      	movs	r1, #36	; 0x24
 8008cb0:	6878      	ldr	r0, [r7, #4]
 8008cb2:	f012 fab1 	bl	801b218 <_ZdlPvj>
 8008cb6:	687b      	ldr	r3, [r7, #4]
 8008cb8:	4618      	mov	r0, r3
 8008cba:	3708      	adds	r7, #8
 8008cbc:	46bd      	mov	sp, r7
 8008cbe:	bd80      	pop	{r7, pc}

08008cc0 <_ZNK8touchgfx9GlyphNode15kerningTablePosEv>:
    uint16_t kerningTablePos() const
 8008cc0:	b480      	push	{r7}
 8008cc2:	b083      	sub	sp, #12
 8008cc4:	af00      	add	r7, sp, #0
 8008cc6:	6078      	str	r0, [r7, #4]
        return (((uint16_t)(flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10)) << 8) | (uint16_t)_kerningTablePos;
 8008cc8:	687b      	ldr	r3, [r7, #4]
 8008cca:	7b5b      	ldrb	r3, [r3, #13]
 8008ccc:	021b      	lsls	r3, r3, #8
 8008cce:	b21b      	sxth	r3, r3
 8008cd0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008cd4:	b21a      	sxth	r2, r3
 8008cd6:	687b      	ldr	r3, [r7, #4]
 8008cd8:	7adb      	ldrb	r3, [r3, #11]
 8008cda:	b21b      	sxth	r3, r3
 8008cdc:	4313      	orrs	r3, r2
 8008cde:	b21b      	sxth	r3, r3
 8008ce0:	b29b      	uxth	r3, r3
    }
 8008ce2:	4618      	mov	r0, r3
 8008ce4:	370c      	adds	r7, #12
 8008ce6:	46bd      	mov	sp, r7
 8008ce8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cec:	4770      	bx	lr

08008cee <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     *
     *        Gets GSUB table.
     *
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
 8008cee:	b480      	push	{r7}
 8008cf0:	b083      	sub	sp, #12
 8008cf2:	af00      	add	r7, sp, #0
 8008cf4:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 8008cf6:	687b      	ldr	r3, [r7, #4]
 8008cf8:	6a1b      	ldr	r3, [r3, #32]
    }
 8008cfa:	4618      	mov	r0, r3
 8008cfc:	370c      	adds	r7, #12
 8008cfe:	46bd      	mov	sp, r7
 8008d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d04:	4770      	bx	lr
	...

08008d08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t dataFormatA4, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8008d08:	b580      	push	{r7, lr}
 8008d0a:	b08c      	sub	sp, #48	; 0x30
 8008d0c:	af08      	add	r7, sp, #32
 8008d0e:	60f8      	str	r0, [r7, #12]
 8008d10:	60b9      	str	r1, [r7, #8]
 8008d12:	4611      	mov	r1, r2
 8008d14:	461a      	mov	r2, r3
 8008d16:	460b      	mov	r3, r1
 8008d18:	80fb      	strh	r3, [r7, #6]
 8008d1a:	4613      	mov	r3, r2
 8008d1c:	80bb      	strh	r3, [r7, #4]
    ConstFont(list, size, height, pixBelowBase, bitsPerPixel, dataFormatA4, maxLeft, maxRight, fallbackChar, ellipsisChar),
    glyphData(glyphDataInternalFlash),
    kerningData(kerningList),
    gsubTable(gsubData)
 8008d1e:	68f8      	ldr	r0, [r7, #12]
 8008d20:	88b9      	ldrh	r1, [r7, #4]
 8008d22:	88fa      	ldrh	r2, [r7, #6]
 8008d24:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 8008d26:	9306      	str	r3, [sp, #24]
 8008d28:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 8008d2a:	9305      	str	r3, [sp, #20]
 8008d2c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8008d30:	9304      	str	r3, [sp, #16]
 8008d32:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8008d36:	9303      	str	r3, [sp, #12]
 8008d38:	f897 3020 	ldrb.w	r3, [r7, #32]
 8008d3c:	9302      	str	r3, [sp, #8]
 8008d3e:	7f3b      	ldrb	r3, [r7, #28]
 8008d40:	9301      	str	r3, [sp, #4]
 8008d42:	7e3b      	ldrb	r3, [r7, #24]
 8008d44:	9300      	str	r3, [sp, #0]
 8008d46:	460b      	mov	r3, r1
 8008d48:	68b9      	ldr	r1, [r7, #8]
 8008d4a:	f005 fd31 	bl	800e7b0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8008d4e:	4a08      	ldr	r2, [pc, #32]	; (8008d70 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x68>)
 8008d50:	68fb      	ldr	r3, [r7, #12]
 8008d52:	601a      	str	r2, [r3, #0]
 8008d54:	68fb      	ldr	r3, [r7, #12]
 8008d56:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8008d58:	619a      	str	r2, [r3, #24]
 8008d5a:	68fb      	ldr	r3, [r7, #12]
 8008d5c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8008d5e:	61da      	str	r2, [r3, #28]
 8008d60:	68fb      	ldr	r3, [r7, #12]
 8008d62:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8008d64:	621a      	str	r2, [r3, #32]
{
}
 8008d66:	68fb      	ldr	r3, [r7, #12]
 8008d68:	4618      	mov	r0, r3
 8008d6a:	3710      	adds	r7, #16
 8008d6c:	46bd      	mov	sp, r7
 8008d6e:	bd80      	pop	{r7, pc}
 8008d70:	0801cae0 	.word	0x0801cae0

08008d74 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 8008d74:	b480      	push	{r7}
 8008d76:	b085      	sub	sp, #20
 8008d78:	af00      	add	r7, sp, #0
 8008d7a:	6078      	str	r0, [r7, #4]
 8008d7c:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 8008d7e:	687b      	ldr	r3, [r7, #4]
 8008d80:	699b      	ldr	r3, [r3, #24]
 8008d82:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8008d84:	683b      	ldr	r3, [r7, #0]
 8008d86:	889b      	ldrh	r3, [r3, #4]
 8008d88:	0adb      	lsrs	r3, r3, #11
 8008d8a:	b29b      	uxth	r3, r3
 8008d8c:	009b      	lsls	r3, r3, #2
 8008d8e:	68fa      	ldr	r2, [r7, #12]
 8008d90:	4413      	add	r3, r2
 8008d92:	681a      	ldr	r2, [r3, #0]
 8008d94:	683b      	ldr	r3, [r7, #0]
 8008d96:	681b      	ldr	r3, [r3, #0]
 8008d98:	4413      	add	r3, r2
}
 8008d9a:	4618      	mov	r0, r3
 8008d9c:	3714      	adds	r7, #20
 8008d9e:	46bd      	mov	sp, r7
 8008da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008da4:	4770      	bx	lr

08008da6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8008da6:	b580      	push	{r7, lr}
 8008da8:	b086      	sub	sp, #24
 8008daa:	af00      	add	r7, sp, #0
 8008dac:	60f8      	str	r0, [r7, #12]
 8008dae:	460b      	mov	r3, r1
 8008db0:	607a      	str	r2, [r7, #4]
 8008db2:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 8008db4:	687b      	ldr	r3, [r7, #4]
 8008db6:	2b00      	cmp	r3, #0
 8008db8:	d003      	beq.n	8008dc2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8008dba:	687b      	ldr	r3, [r7, #4]
 8008dbc:	7b1b      	ldrb	r3, [r3, #12]
 8008dbe:	2b00      	cmp	r3, #0
 8008dc0:	d101      	bne.n	8008dc6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 8008dc2:	2300      	movs	r3, #0
 8008dc4:	e023      	b.n	8008e0e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x68>
    }

    uint16_t kerningTablePos = glyph->kerningTablePos();
 8008dc6:	6878      	ldr	r0, [r7, #4]
 8008dc8:	f7ff ff7a 	bl	8008cc0 <_ZNK8touchgfx9GlyphNode15kerningTablePosEv>
 8008dcc:	4603      	mov	r3, r0
 8008dce:	82bb      	strh	r3, [r7, #20]
    for (uint16_t i = kerningTablePos; i < kerningTablePos + glyph->kerningTableSize; i++)
 8008dd0:	8abb      	ldrh	r3, [r7, #20]
 8008dd2:	82fb      	strh	r3, [r7, #22]
 8008dd4:	8afa      	ldrh	r2, [r7, #22]
 8008dd6:	8abb      	ldrh	r3, [r7, #20]
 8008dd8:	6879      	ldr	r1, [r7, #4]
 8008dda:	7b09      	ldrb	r1, [r1, #12]
 8008ddc:	440b      	add	r3, r1
 8008dde:	429a      	cmp	r2, r3
 8008de0:	da14      	bge.n	8008e0c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x66>
    {
        if (prevChar == kerningData[i].unicodePrevChar)
 8008de2:	68fb      	ldr	r3, [r7, #12]
 8008de4:	69da      	ldr	r2, [r3, #28]
 8008de6:	8afb      	ldrh	r3, [r7, #22]
 8008de8:	009b      	lsls	r3, r3, #2
 8008dea:	4413      	add	r3, r2
 8008dec:	881b      	ldrh	r3, [r3, #0]
 8008dee:	897a      	ldrh	r2, [r7, #10]
 8008df0:	429a      	cmp	r2, r3
 8008df2:	d107      	bne.n	8008e04 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x5e>
        {
            return kerningData[i].distance;
 8008df4:	68fb      	ldr	r3, [r7, #12]
 8008df6:	69da      	ldr	r2, [r3, #28]
 8008df8:	8afb      	ldrh	r3, [r7, #22]
 8008dfa:	009b      	lsls	r3, r3, #2
 8008dfc:	4413      	add	r3, r2
 8008dfe:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8008e02:	e004      	b.n	8008e0e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x68>
    for (uint16_t i = kerningTablePos; i < kerningTablePos + glyph->kerningTableSize; i++)
 8008e04:	8afb      	ldrh	r3, [r7, #22]
 8008e06:	3301      	adds	r3, #1
 8008e08:	82fb      	strh	r3, [r7, #22]
 8008e0a:	e7e3      	b.n	8008dd4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x2e>
        }
    }
    return 0;
 8008e0c:	2300      	movs	r3, #0
}
 8008e0e:	4618      	mov	r0, r3
 8008e10:	3718      	adds	r7, #24
 8008e12:	46bd      	mov	sp, r7
 8008e14:	bd80      	pop	{r7, pc}
	...

08008e18 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_10_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8008e18:	b580      	push	{r7, lr}
 8008e1a:	af00      	add	r7, sp, #0
 8008e1c:	4801      	ldr	r0, [pc, #4]	; (8008e24 <__tcf_0+0xc>)
 8008e1e:	f7ff ff2d 	bl	8008c7c <_ZN8touchgfx13GeneratedFontD1Ev>
 8008e22:	bd80      	pop	{r7, pc}
 8008e24:	20025918 	.word	0x20025918

08008e28 <_Z23getFont_verdana_10_4bppv>:
{
 8008e28:	b580      	push	{r7, lr}
 8008e2a:	b08a      	sub	sp, #40	; 0x28
 8008e2c:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8008e2e:	4b15      	ldr	r3, [pc, #84]	; (8008e84 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8008e30:	681b      	ldr	r3, [r3, #0]
 8008e32:	f003 0301 	and.w	r3, r3, #1
 8008e36:	2b00      	cmp	r3, #0
 8008e38:	d11f      	bne.n	8008e7a <_Z23getFont_verdana_10_4bppv+0x52>
 8008e3a:	2300      	movs	r3, #0
 8008e3c:	9309      	str	r3, [sp, #36]	; 0x24
 8008e3e:	2300      	movs	r3, #0
 8008e40:	9308      	str	r3, [sp, #32]
 8008e42:	233f      	movs	r3, #63	; 0x3f
 8008e44:	9307      	str	r3, [sp, #28]
 8008e46:	4b10      	ldr	r3, [pc, #64]	; (8008e88 <_Z23getFont_verdana_10_4bppv+0x60>)
 8008e48:	9306      	str	r3, [sp, #24]
 8008e4a:	4b10      	ldr	r3, [pc, #64]	; (8008e8c <_Z23getFont_verdana_10_4bppv+0x64>)
 8008e4c:	9305      	str	r3, [sp, #20]
 8008e4e:	2300      	movs	r3, #0
 8008e50:	9304      	str	r3, [sp, #16]
 8008e52:	2300      	movs	r3, #0
 8008e54:	9303      	str	r3, [sp, #12]
 8008e56:	2301      	movs	r3, #1
 8008e58:	9302      	str	r3, [sp, #8]
 8008e5a:	2304      	movs	r3, #4
 8008e5c:	9301      	str	r3, [sp, #4]
 8008e5e:	2300      	movs	r3, #0
 8008e60:	9300      	str	r3, [sp, #0]
 8008e62:	230a      	movs	r3, #10
 8008e64:	2201      	movs	r2, #1
 8008e66:	490a      	ldr	r1, [pc, #40]	; (8008e90 <_Z23getFont_verdana_10_4bppv+0x68>)
 8008e68:	480a      	ldr	r0, [pc, #40]	; (8008e94 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8008e6a:	f7ff ff4d 	bl	8008d08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8008e6e:	4b05      	ldr	r3, [pc, #20]	; (8008e84 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8008e70:	2201      	movs	r2, #1
 8008e72:	601a      	str	r2, [r3, #0]
 8008e74:	4808      	ldr	r0, [pc, #32]	; (8008e98 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008e76:	f012 fa19 	bl	801b2ac <atexit>
    return verdana_10_4bpp;
 8008e7a:	4b06      	ldr	r3, [pc, #24]	; (8008e94 <_Z23getFont_verdana_10_4bppv+0x6c>)
}
 8008e7c:	4618      	mov	r0, r3
 8008e7e:	46bd      	mov	sp, r7
 8008e80:	bd80      	pop	{r7, pc}
 8008e82:	bf00      	nop
 8008e84:	2002593c 	.word	0x2002593c
 8008e88:	0801f890 	.word	0x0801f890
 8008e8c:	0801cb2c 	.word	0x0801cb2c
 8008e90:	0801f89c 	.word	0x0801f89c
 8008e94:	20025918 	.word	0x20025918
 8008e98:	08008e19 	.word	0x08008e19

08008e9c <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_20_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8008e9c:	b580      	push	{r7, lr}
 8008e9e:	af00      	add	r7, sp, #0
 8008ea0:	4801      	ldr	r0, [pc, #4]	; (8008ea8 <__tcf_0+0xc>)
 8008ea2:	f7ff feeb 	bl	8008c7c <_ZN8touchgfx13GeneratedFontD1Ev>
 8008ea6:	bd80      	pop	{r7, pc}
 8008ea8:	20025940 	.word	0x20025940

08008eac <_Z23getFont_verdana_20_4bppv>:
{
 8008eac:	b580      	push	{r7, lr}
 8008eae:	b08a      	sub	sp, #40	; 0x28
 8008eb0:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8008eb2:	4b15      	ldr	r3, [pc, #84]	; (8008f08 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8008eb4:	681b      	ldr	r3, [r3, #0]
 8008eb6:	f003 0301 	and.w	r3, r3, #1
 8008eba:	2b00      	cmp	r3, #0
 8008ebc:	d11f      	bne.n	8008efe <_Z23getFont_verdana_20_4bppv+0x52>
 8008ebe:	2300      	movs	r3, #0
 8008ec0:	9309      	str	r3, [sp, #36]	; 0x24
 8008ec2:	2300      	movs	r3, #0
 8008ec4:	9308      	str	r3, [sp, #32]
 8008ec6:	233f      	movs	r3, #63	; 0x3f
 8008ec8:	9307      	str	r3, [sp, #28]
 8008eca:	4b10      	ldr	r3, [pc, #64]	; (8008f0c <_Z23getFont_verdana_20_4bppv+0x60>)
 8008ecc:	9306      	str	r3, [sp, #24]
 8008ece:	4b10      	ldr	r3, [pc, #64]	; (8008f10 <_Z23getFont_verdana_20_4bppv+0x64>)
 8008ed0:	9305      	str	r3, [sp, #20]
 8008ed2:	2300      	movs	r3, #0
 8008ed4:	9304      	str	r3, [sp, #16]
 8008ed6:	2300      	movs	r3, #0
 8008ed8:	9303      	str	r3, [sp, #12]
 8008eda:	2301      	movs	r3, #1
 8008edc:	9302      	str	r3, [sp, #8]
 8008ede:	2304      	movs	r3, #4
 8008ee0:	9301      	str	r3, [sp, #4]
 8008ee2:	2300      	movs	r3, #0
 8008ee4:	9300      	str	r3, [sp, #0]
 8008ee6:	2314      	movs	r3, #20
 8008ee8:	2201      	movs	r2, #1
 8008eea:	490a      	ldr	r1, [pc, #40]	; (8008f14 <_Z23getFont_verdana_20_4bppv+0x68>)
 8008eec:	480a      	ldr	r0, [pc, #40]	; (8008f18 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8008eee:	f7ff ff0b 	bl	8008d08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8008ef2:	4b05      	ldr	r3, [pc, #20]	; (8008f08 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8008ef4:	2201      	movs	r2, #1
 8008ef6:	601a      	str	r2, [r3, #0]
 8008ef8:	4808      	ldr	r0, [pc, #32]	; (8008f1c <_Z23getFont_verdana_20_4bppv+0x70>)
 8008efa:	f012 f9d7 	bl	801b2ac <atexit>
    return verdana_20_4bpp;
 8008efe:	4b06      	ldr	r3, [pc, #24]	; (8008f18 <_Z23getFont_verdana_20_4bppv+0x6c>)
}
 8008f00:	4618      	mov	r0, r3
 8008f02:	46bd      	mov	sp, r7
 8008f04:	bd80      	pop	{r7, pc}
 8008f06:	bf00      	nop
 8008f08:	20025964 	.word	0x20025964
 8008f0c:	0801f894 	.word	0x0801f894
 8008f10:	0801cb30 	.word	0x0801cb30
 8008f14:	0801f8ac 	.word	0x0801f8ac
 8008f18:	20025940 	.word	0x20025940
 8008f1c:	08008e9d 	.word	0x08008e9d

08008f20 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_40_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8008f20:	b580      	push	{r7, lr}
 8008f22:	af00      	add	r7, sp, #0
 8008f24:	4801      	ldr	r0, [pc, #4]	; (8008f2c <__tcf_0+0xc>)
 8008f26:	f7ff fea9 	bl	8008c7c <_ZN8touchgfx13GeneratedFontD1Ev>
 8008f2a:	bd80      	pop	{r7, pc}
 8008f2c:	20025968 	.word	0x20025968

08008f30 <_Z23getFont_verdana_40_4bppv>:
{
 8008f30:	b580      	push	{r7, lr}
 8008f32:	b08a      	sub	sp, #40	; 0x28
 8008f34:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8008f36:	4b15      	ldr	r3, [pc, #84]	; (8008f8c <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008f38:	681b      	ldr	r3, [r3, #0]
 8008f3a:	f003 0301 	and.w	r3, r3, #1
 8008f3e:	2b00      	cmp	r3, #0
 8008f40:	d11f      	bne.n	8008f82 <_Z23getFont_verdana_40_4bppv+0x52>
 8008f42:	2300      	movs	r3, #0
 8008f44:	9309      	str	r3, [sp, #36]	; 0x24
 8008f46:	2300      	movs	r3, #0
 8008f48:	9308      	str	r3, [sp, #32]
 8008f4a:	233f      	movs	r3, #63	; 0x3f
 8008f4c:	9307      	str	r3, [sp, #28]
 8008f4e:	4b10      	ldr	r3, [pc, #64]	; (8008f90 <_Z23getFont_verdana_40_4bppv+0x60>)
 8008f50:	9306      	str	r3, [sp, #24]
 8008f52:	4b10      	ldr	r3, [pc, #64]	; (8008f94 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008f54:	9305      	str	r3, [sp, #20]
 8008f56:	2300      	movs	r3, #0
 8008f58:	9304      	str	r3, [sp, #16]
 8008f5a:	2300      	movs	r3, #0
 8008f5c:	9303      	str	r3, [sp, #12]
 8008f5e:	2301      	movs	r3, #1
 8008f60:	9302      	str	r3, [sp, #8]
 8008f62:	2304      	movs	r3, #4
 8008f64:	9301      	str	r3, [sp, #4]
 8008f66:	2300      	movs	r3, #0
 8008f68:	9300      	str	r3, [sp, #0]
 8008f6a:	2328      	movs	r3, #40	; 0x28
 8008f6c:	2201      	movs	r2, #1
 8008f6e:	490a      	ldr	r1, [pc, #40]	; (8008f98 <_Z23getFont_verdana_40_4bppv+0x68>)
 8008f70:	480a      	ldr	r0, [pc, #40]	; (8008f9c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008f72:	f7ff fec9 	bl	8008d08 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8008f76:	4b05      	ldr	r3, [pc, #20]	; (8008f8c <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008f78:	2201      	movs	r2, #1
 8008f7a:	601a      	str	r2, [r3, #0]
 8008f7c:	4808      	ldr	r0, [pc, #32]	; (8008fa0 <_Z23getFont_verdana_40_4bppv+0x70>)
 8008f7e:	f012 f995 	bl	801b2ac <atexit>
    return verdana_40_4bpp;
 8008f82:	4b06      	ldr	r3, [pc, #24]	; (8008f9c <_Z23getFont_verdana_40_4bppv+0x6c>)
}
 8008f84:	4618      	mov	r0, r3
 8008f86:	46bd      	mov	sp, r7
 8008f88:	bd80      	pop	{r7, pc}
 8008f8a:	bf00      	nop
 8008f8c:	2002598c 	.word	0x2002598c
 8008f90:	0801f898 	.word	0x0801f898
 8008f94:	0801cb34 	.word	0x0801cb34
 8008f98:	0801f8bc 	.word	0x0801f8bc
 8008f9c:	20025968 	.word	0x20025968
 8008fa0:	08008f21 	.word	0x08008f21

08008fa4 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8008fa4:	b480      	push	{r7}
 8008fa6:	b083      	sub	sp, #12
 8008fa8:	af00      	add	r7, sp, #0
 8008faa:	6078      	str	r0, [r7, #4]
 8008fac:	6039      	str	r1, [r7, #0]
 8008fae:	683b      	ldr	r3, [r7, #0]
 8008fb0:	4618      	mov	r0, r3
 8008fb2:	370c      	adds	r7, #12
 8008fb4:	46bd      	mov	sp, r7
 8008fb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fba:	4770      	bx	lr

08008fbc <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     *        This handler is invoked when a mouse click or display touch event has been
     *        detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8008fbc:	b480      	push	{r7}
 8008fbe:	b083      	sub	sp, #12
 8008fc0:	af00      	add	r7, sp, #0
 8008fc2:	6078      	str	r0, [r7, #4]
 8008fc4:	6039      	str	r1, [r7, #0]
    {
    }
 8008fc6:	bf00      	nop
 8008fc8:	370c      	adds	r7, #12
 8008fca:	46bd      	mov	sp, r7
 8008fcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fd0:	4770      	bx	lr

08008fd2 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
     *
     *        This handler is invoked when a drag event has been detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8008fd2:	b480      	push	{r7}
 8008fd4:	b083      	sub	sp, #12
 8008fd6:	af00      	add	r7, sp, #0
 8008fd8:	6078      	str	r0, [r7, #4]
 8008fda:	6039      	str	r1, [r7, #0]
    {
    }
 8008fdc:	bf00      	nop
 8008fde:	370c      	adds	r7, #12
 8008fe0:	46bd      	mov	sp, r7
 8008fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fe6:	4770      	bx	lr

08008fe8 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
     *
     *        This handler is invoked when a gesture event has been detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8008fe8:	b480      	push	{r7}
 8008fea:	b083      	sub	sp, #12
 8008fec:	af00      	add	r7, sp, #0
 8008fee:	6078      	str	r0, [r7, #4]
 8008ff0:	6039      	str	r1, [r7, #0]
    {
    }
 8008ff2:	bf00      	nop
 8008ff4:	370c      	adds	r7, #12
 8008ff6:	46bd      	mov	sp, r7
 8008ff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ffc:	4770      	bx	lr

08008ffe <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
     *        This handler is invoked when a key (or button) event has been detected by the
     *        system.
     *
     * @param c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 8008ffe:	b480      	push	{r7}
 8009000:	b083      	sub	sp, #12
 8009002:	af00      	add	r7, sp, #0
 8009004:	6078      	str	r0, [r7, #4]
 8009006:	460b      	mov	r3, r1
 8009008:	70fb      	strb	r3, [r7, #3]
    {
    }
 800900a:	bf00      	nop
 800900c:	370c      	adds	r7, #12
 800900e:	46bd      	mov	sp, r7
 8009010:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009014:	4770      	bx	lr

08009016 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:
     * @brief This handler is invoked when a system tick event has been generated.
     *
     *        This handler is invoked when a system tick event has been generated. The system
     *        tick period is configured in the HAL.
     */
    virtual void handleTickEvent()
 8009016:	b480      	push	{r7}
 8009018:	b083      	sub	sp, #12
 800901a:	af00      	add	r7, sp, #0
 800901c:	6078      	str	r0, [r7, #4]
    {
    }
 800901e:	bf00      	nop
 8009020:	370c      	adds	r7, #12
 8009022:	46bd      	mov	sp, r7
 8009024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009028:	4770      	bx	lr

0800902a <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:
     *
     * @brief This handler is invoked when a change screen event is pending.
     *
     *        This handler is invoked when a change screen event is pending.
     */
    virtual void handlePendingScreenTransition()
 800902a:	b480      	push	{r7}
 800902c:	b083      	sub	sp, #12
 800902e:	af00      	add	r7, sp, #0
 8009030:	6078      	str	r0, [r7, #4]
    {
    }
 8009032:	bf00      	nop
 8009034:	370c      	adds	r7, #12
 8009036:	46bd      	mov	sp, r7
 8009038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800903c:	4770      	bx	lr
	...

08009040 <_ZN8touchgfx15UIEventListenerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~UIEventListener()
 8009040:	b480      	push	{r7}
 8009042:	b083      	sub	sp, #12
 8009044:	af00      	add	r7, sp, #0
 8009046:	6078      	str	r0, [r7, #4]
    {
 8009048:	4a04      	ldr	r2, [pc, #16]	; (800905c <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800904a:	687b      	ldr	r3, [r7, #4]
 800904c:	601a      	str	r2, [r3, #0]
    }
 800904e:	687b      	ldr	r3, [r7, #4]
 8009050:	4618      	mov	r0, r3
 8009052:	370c      	adds	r7, #12
 8009054:	46bd      	mov	sp, r7
 8009056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800905a:	4770      	bx	lr
 800905c:	0801cc28 	.word	0x0801cc28

08009060 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 8009060:	b580      	push	{r7, lr}
 8009062:	b082      	sub	sp, #8
 8009064:	af00      	add	r7, sp, #0
 8009066:	6078      	str	r0, [r7, #4]
    }
 8009068:	6878      	ldr	r0, [r7, #4]
 800906a:	f7ff ffe9 	bl	8009040 <_ZN8touchgfx15UIEventListenerD1Ev>
 800906e:	2104      	movs	r1, #4
 8009070:	6878      	ldr	r0, [r7, #4]
 8009072:	f012 f8d1 	bl	801b218 <_ZdlPvj>
 8009076:	687b      	ldr	r3, [r7, #4]
 8009078:	4618      	mov	r0, r3
 800907a:	3708      	adds	r7, #8
 800907c:	46bd      	mov	sp, r7
 800907e:	bd80      	pop	{r7, pc}

08009080 <_ZN8touchgfx10TransitionC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Constructs the Transition.
     */
    Transition() :
 8009080:	b480      	push	{r7}
 8009082:	b083      	sub	sp, #12
 8009084:	af00      	add	r7, sp, #0
 8009086:	6078      	str	r0, [r7, #4]
        screenContainer(0), done(false)
 8009088:	4a07      	ldr	r2, [pc, #28]	; (80090a8 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800908a:	687b      	ldr	r3, [r7, #4]
 800908c:	601a      	str	r2, [r3, #0]
 800908e:	687b      	ldr	r3, [r7, #4]
 8009090:	2200      	movs	r2, #0
 8009092:	605a      	str	r2, [r3, #4]
 8009094:	687b      	ldr	r3, [r7, #4]
 8009096:	2200      	movs	r2, #0
 8009098:	721a      	strb	r2, [r3, #8]
    {
    }
 800909a:	687b      	ldr	r3, [r7, #4]
 800909c:	4618      	mov	r0, r3
 800909e:	370c      	adds	r7, #12
 80090a0:	46bd      	mov	sp, r7
 80090a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090a6:	4770      	bx	lr
 80090a8:	0801cc08 	.word	0x0801cc08

080090ac <_ZN8touchgfx10TransitionD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Transition()
 80090ac:	b480      	push	{r7}
 80090ae:	b083      	sub	sp, #12
 80090b0:	af00      	add	r7, sp, #0
 80090b2:	6078      	str	r0, [r7, #4]
    {
 80090b4:	4a04      	ldr	r2, [pc, #16]	; (80090c8 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 80090b6:	687b      	ldr	r3, [r7, #4]
 80090b8:	601a      	str	r2, [r3, #0]
    }
 80090ba:	687b      	ldr	r3, [r7, #4]
 80090bc:	4618      	mov	r0, r3
 80090be:	370c      	adds	r7, #12
 80090c0:	46bd      	mov	sp, r7
 80090c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090c6:	4770      	bx	lr
 80090c8:	0801cc08 	.word	0x0801cc08

080090cc <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 80090cc:	b580      	push	{r7, lr}
 80090ce:	b082      	sub	sp, #8
 80090d0:	af00      	add	r7, sp, #0
 80090d2:	6078      	str	r0, [r7, #4]
    }
 80090d4:	6878      	ldr	r0, [r7, #4]
 80090d6:	f7ff ffe9 	bl	80090ac <_ZN8touchgfx10TransitionD1Ev>
 80090da:	210c      	movs	r1, #12
 80090dc:	6878      	ldr	r0, [r7, #4]
 80090de:	f012 f89b 	bl	801b218 <_ZdlPvj>
 80090e2:	687b      	ldr	r3, [r7, #4]
 80090e4:	4618      	mov	r0, r3
 80090e6:	3708      	adds	r7, #8
 80090e8:	46bd      	mov	sp, r7
 80090ea:	bd80      	pop	{r7, pc}

080090ec <_ZN8touchgfx10Transition15handleTickEventEv>:
     *
     * @brief Called for every tick when transitioning.
     *
     *        Called for every tick when transitioning. Base does nothing.
     */
    virtual void handleTickEvent() { }
 80090ec:	b480      	push	{r7}
 80090ee:	b083      	sub	sp, #12
 80090f0:	af00      	add	r7, sp, #0
 80090f2:	6078      	str	r0, [r7, #4]
 80090f4:	bf00      	nop
 80090f6:	370c      	adds	r7, #12
 80090f8:	46bd      	mov	sp, r7
 80090fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090fe:	4770      	bx	lr

08009100 <_ZN8touchgfx10Transition8tearDownEv>:
     * @brief Tears down the Animation.
     *
     *        Tears down the Animation. Called before the d.tor. when the application changes
     *        the transition. Base version does nothing.
     */
    virtual void tearDown() { }
 8009100:	b480      	push	{r7}
 8009102:	b083      	sub	sp, #12
 8009104:	af00      	add	r7, sp, #0
 8009106:	6078      	str	r0, [r7, #4]
 8009108:	bf00      	nop
 800910a:	370c      	adds	r7, #12
 800910c:	46bd      	mov	sp, r7
 800910e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009112:	4770      	bx	lr

08009114 <_ZN8touchgfx10Transition4initEv>:
     * @brief Initializes the transition.
     *
     *        Initializes the transition. Called after the c.tor. when the application changes
     *        the transition. Base version does nothing.
     */
    virtual void init() { }
 8009114:	b480      	push	{r7}
 8009116:	b083      	sub	sp, #12
 8009118:	af00      	add	r7, sp, #0
 800911a:	6078      	str	r0, [r7, #4]
 800911c:	bf00      	nop
 800911e:	370c      	adds	r7, #12
 8009120:	46bd      	mov	sp, r7
 8009122:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009126:	4770      	bx	lr

08009128 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *        Sets the screen container. Is used by Screen to enable the transition to access
     *        the container.
     *
     * @param [in] cont The container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 8009128:	b480      	push	{r7}
 800912a:	b083      	sub	sp, #12
 800912c:	af00      	add	r7, sp, #0
 800912e:	6078      	str	r0, [r7, #4]
 8009130:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 8009132:	687b      	ldr	r3, [r7, #4]
 8009134:	683a      	ldr	r2, [r7, #0]
 8009136:	605a      	str	r2, [r3, #4]
    }
 8009138:	bf00      	nop
 800913a:	370c      	adds	r7, #12
 800913c:	46bd      	mov	sp, r7
 800913e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009142:	4770      	bx	lr

08009144 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *        provide a means to switch screen from places that does not have access to a
     *        pointer to the new screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8009144:	b480      	push	{r7}
 8009146:	b083      	sub	sp, #12
 8009148:	af00      	add	r7, sp, #0
 800914a:	6078      	str	r0, [r7, #4]
 800914c:	460b      	mov	r3, r1
 800914e:	70fb      	strb	r3, [r7, #3]
    {
    }
 8009150:	bf00      	nop
 8009152:	370c      	adds	r7, #12
 8009154:	46bd      	mov	sp, r7
 8009156:	f85d 7b04 	ldr.w	r7, [sp], #4
 800915a:	4770      	bx	lr

0800915c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
     *
     * @brief Destructor.
     *
     *        Empty virtual destructor.
     */
    virtual ~GenericCallback()
 800915c:	b480      	push	{r7}
 800915e:	b083      	sub	sp, #12
 8009160:	af00      	add	r7, sp, #0
 8009162:	6078      	str	r0, [r7, #4]
    {
 8009164:	4a04      	ldr	r2, [pc, #16]	; (8009178 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 8009166:	687b      	ldr	r3, [r7, #4]
 8009168:	601a      	str	r2, [r3, #0]
    }
 800916a:	687b      	ldr	r3, [r7, #4]
 800916c:	4618      	mov	r0, r3
 800916e:	370c      	adds	r7, #12
 8009170:	46bd      	mov	sp, r7
 8009172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009176:	4770      	bx	lr
 8009178:	0801cbf0 	.word	0x0801cbf0

0800917c <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800917c:	b580      	push	{r7, lr}
 800917e:	b082      	sub	sp, #8
 8009180:	af00      	add	r7, sp, #0
 8009182:	6078      	str	r0, [r7, #4]
    }
 8009184:	6878      	ldr	r0, [r7, #4]
 8009186:	f7ff ffe9 	bl	800915c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800918a:	2104      	movs	r1, #4
 800918c:	6878      	ldr	r0, [r7, #4]
 800918e:	f012 f843 	bl	801b218 <_ZdlPvj>
 8009192:	687b      	ldr	r3, [r7, #4]
 8009194:	4618      	mov	r0, r3
 8009196:	3708      	adds	r7, #8
 8009198:	46bd      	mov	sp, r7
 800919a:	bd80      	pop	{r7, pc}

0800919c <_ZN8touchgfx3HAL11getInstanceEv>:
     *
     *        Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800919c:	b480      	push	{r7}
 800919e:	af00      	add	r7, sp, #0
    {
        return instance;
 80091a0:	4b03      	ldr	r3, [pc, #12]	; (80091b0 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 80091a2:	681b      	ldr	r3, [r3, #0]
    }
 80091a4:	4618      	mov	r0, r3
 80091a6:	46bd      	mov	sp, r7
 80091a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091ac:	4770      	bx	lr
 80091ae:	bf00      	nop
 80091b0:	20026900 	.word	0x20026900

080091b4 <_ZN8touchgfx3HAL3lcdEv>:
     *
     *        Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 80091b4:	b480      	push	{r7}
 80091b6:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80091b8:	4b0b      	ldr	r3, [pc, #44]	; (80091e8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80091ba:	681b      	ldr	r3, [r3, #0]
 80091bc:	f893 3076 	ldrb.w	r3, [r3, #118]	; 0x76
 80091c0:	2b00      	cmp	r3, #0
 80091c2:	d008      	beq.n	80091d6 <_ZN8touchgfx3HAL3lcdEv+0x22>
 80091c4:	4b08      	ldr	r3, [pc, #32]	; (80091e8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80091c6:	681b      	ldr	r3, [r3, #0]
 80091c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80091ca:	2b00      	cmp	r3, #0
 80091cc:	d003      	beq.n	80091d6 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 80091ce:	4b06      	ldr	r3, [pc, #24]	; (80091e8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80091d0:	681b      	ldr	r3, [r3, #0]
 80091d2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80091d4:	e002      	b.n	80091dc <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        else
        {
            return instance->lcdRef;
 80091d6:	4b04      	ldr	r3, [pc, #16]	; (80091e8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80091d8:	681b      	ldr	r3, [r3, #0]
 80091da:	689b      	ldr	r3, [r3, #8]
        }
    }
 80091dc:	4618      	mov	r0, r3
 80091de:	46bd      	mov	sp, r7
 80091e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091e4:	4770      	bx	lr
 80091e6:	bf00      	nop
 80091e8:	20026900 	.word	0x20026900

080091ec <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 80091ec:	b580      	push	{r7, lr}
 80091ee:	b082      	sub	sp, #8
 80091f0:	af00      	add	r7, sp, #0
 80091f2:	6078      	str	r0, [r7, #4]
 80091f4:	4a05      	ldr	r2, [pc, #20]	; (800920c <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 80091f6:	687b      	ldr	r3, [r7, #4]
 80091f8:	601a      	str	r2, [r3, #0]
 80091fa:	687b      	ldr	r3, [r7, #4]
 80091fc:	4618      	mov	r0, r3
 80091fe:	f7ff ff1f 	bl	8009040 <_ZN8touchgfx15UIEventListenerD1Ev>
 8009202:	687b      	ldr	r3, [r7, #4]
 8009204:	4618      	mov	r0, r3
 8009206:	3708      	adds	r7, #8
 8009208:	46bd      	mov	sp, r7
 800920a:	bd80      	pop	{r7, pc}
 800920c:	0801dfdc 	.word	0x0801dfdc

08009210 <_ZN8touchgfx11ApplicationD0Ev>:
 8009210:	b580      	push	{r7, lr}
 8009212:	b082      	sub	sp, #8
 8009214:	af00      	add	r7, sp, #0
 8009216:	6078      	str	r0, [r7, #4]
 8009218:	6878      	ldr	r0, [r7, #4]
 800921a:	f7ff ffe7 	bl	80091ec <_ZN8touchgfx11ApplicationD1Ev>
 800921e:	f44f 7198 	mov.w	r1, #304	; 0x130
 8009222:	6878      	ldr	r0, [r7, #4]
 8009224:	f011 fff8 	bl	801b218 <_ZdlPvj>
 8009228:	687b      	ldr	r3, [r7, #4]
 800922a:	4618      	mov	r0, r3
 800922c:	3708      	adds	r7, #8
 800922e:	46bd      	mov	sp, r7
 8009230:	bd80      	pop	{r7, pc}
	...

08009234 <_ZN8touchgfx14MVPApplicationC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    MVPApplication() :
 8009234:	b580      	push	{r7, lr}
 8009236:	b082      	sub	sp, #8
 8009238:	af00      	add	r7, sp, #0
 800923a:	6078      	str	r0, [r7, #4]
        currentPresenter(0),
        pendingScreenTransitionCallback(0)
 800923c:	687b      	ldr	r3, [r7, #4]
 800923e:	4618      	mov	r0, r3
 8009240:	f004 fdf2 	bl	800de28 <_ZN8touchgfx11ApplicationC1Ev>
 8009244:	4a09      	ldr	r2, [pc, #36]	; (800926c <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 8009246:	687b      	ldr	r3, [r7, #4]
 8009248:	601a      	str	r2, [r3, #0]
 800924a:	687b      	ldr	r3, [r7, #4]
 800924c:	2200      	movs	r2, #0
 800924e:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 8009252:	687b      	ldr	r3, [r7, #4]
 8009254:	2200      	movs	r2, #0
 8009256:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
    {
        instance = this;
 800925a:	687b      	ldr	r3, [r7, #4]
 800925c:	4a04      	ldr	r2, [pc, #16]	; (8009270 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800925e:	6013      	str	r3, [r2, #0]
    }
 8009260:	687b      	ldr	r3, [r7, #4]
 8009262:	4618      	mov	r0, r3
 8009264:	3708      	adds	r7, #8
 8009266:	46bd      	mov	sp, r7
 8009268:	bd80      	pop	{r7, pc}
 800926a:	bf00      	nop
 800926c:	0801cbb4 	.word	0x0801cbb4
 8009270:	2002696c 	.word	0x2002696c

08009274 <_ZN8touchgfx14MVPApplicationD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~MVPApplication() { }
 8009274:	b580      	push	{r7, lr}
 8009276:	b082      	sub	sp, #8
 8009278:	af00      	add	r7, sp, #0
 800927a:	6078      	str	r0, [r7, #4]
 800927c:	4a05      	ldr	r2, [pc, #20]	; (8009294 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800927e:	687b      	ldr	r3, [r7, #4]
 8009280:	601a      	str	r2, [r3, #0]
 8009282:	687b      	ldr	r3, [r7, #4]
 8009284:	4618      	mov	r0, r3
 8009286:	f7ff ffb1 	bl	80091ec <_ZN8touchgfx11ApplicationD1Ev>
 800928a:	687b      	ldr	r3, [r7, #4]
 800928c:	4618      	mov	r0, r3
 800928e:	3708      	adds	r7, #8
 8009290:	46bd      	mov	sp, r7
 8009292:	bd80      	pop	{r7, pc}
 8009294:	0801cbb4 	.word	0x0801cbb4

08009298 <_ZN8touchgfx14MVPApplicationD0Ev>:
 8009298:	b580      	push	{r7, lr}
 800929a:	b082      	sub	sp, #8
 800929c:	af00      	add	r7, sp, #0
 800929e:	6078      	str	r0, [r7, #4]
 80092a0:	6878      	ldr	r0, [r7, #4]
 80092a2:	f7ff ffe7 	bl	8009274 <_ZN8touchgfx14MVPApplicationD1Ev>
 80092a6:	f44f 719c 	mov.w	r1, #312	; 0x138
 80092aa:	6878      	ldr	r0, [r7, #4]
 80092ac:	f011 ffb4 	bl	801b218 <_ZdlPvj>
 80092b0:	687b      	ldr	r3, [r7, #4]
 80092b2:	4618      	mov	r0, r3
 80092b4:	3708      	adds	r7, #8
 80092b6:	46bd      	mov	sp, r7
 80092b8:	bd80      	pop	{r7, pc}

080092ba <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
     *
     * @brief Handles the pending screen transition.
     *
     *        Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80092ba:	b580      	push	{r7, lr}
 80092bc:	b082      	sub	sp, #8
 80092be:	af00      	add	r7, sp, #0
 80092c0:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 80092c2:	6878      	ldr	r0, [r7, #4]
 80092c4:	f000 f804 	bl	80092d0 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 80092c8:	bf00      	nop
 80092ca:	3708      	adds	r7, #8
 80092cc:	46bd      	mov	sp, r7
 80092ce:	bd80      	pop	{r7, pc}

080092d0 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:
     * @brief Evaluates the pending Callback instances.
     *
     *        Evaluates the pending Callback instances. If a callback is valid, it is executed
     *        and a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 80092d0:	b580      	push	{r7, lr}
 80092d2:	b082      	sub	sp, #8
 80092d4:	af00      	add	r7, sp, #0
 80092d6:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80092d8:	687b      	ldr	r3, [r7, #4]
 80092da:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 80092de:	2b00      	cmp	r3, #0
 80092e0:	d00f      	beq.n	8009302 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 80092e2:	687b      	ldr	r3, [r7, #4]
 80092e4:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 80092e8:	687b      	ldr	r3, [r7, #4]
 80092ea:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 80092ee:	681b      	ldr	r3, [r3, #0]
 80092f0:	330c      	adds	r3, #12
 80092f2:	681b      	ldr	r3, [r3, #0]
 80092f4:	4610      	mov	r0, r2
 80092f6:	4798      	blx	r3
 80092f8:	4603      	mov	r3, r0
 80092fa:	2b00      	cmp	r3, #0
 80092fc:	d001      	beq.n	8009302 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 80092fe:	2301      	movs	r3, #1
 8009300:	e000      	b.n	8009304 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 8009302:	2300      	movs	r3, #0
 8009304:	2b00      	cmp	r3, #0
 8009306:	d00e      	beq.n	8009326 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 8009308:	687b      	ldr	r3, [r7, #4]
 800930a:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 800930e:	687b      	ldr	r3, [r7, #4]
 8009310:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8009314:	681b      	ldr	r3, [r3, #0]
 8009316:	3308      	adds	r3, #8
 8009318:	681b      	ldr	r3, [r3, #0]
 800931a:	4610      	mov	r0, r2
 800931c:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800931e:	687b      	ldr	r3, [r7, #4]
 8009320:	2200      	movs	r2, #0
 8009322:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
        }
    }
 8009326:	bf00      	nop
 8009328:	3708      	adds	r7, #8
 800932a:	46bd      	mov	sp, r7
 800932c:	bd80      	pop	{r7, pc}

0800932e <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE>:
 * @param [in] currentScreen    If non-null, the current screen.
 * @param [in] currentPresenter If non-null, the current presenter.
 * @param [in] currentTrans     If non-null, the current transaction.
 */
static inline void prepareTransition(Screen** currentScreen, Presenter** currentPresenter, Transition** currentTrans)
{
 800932e:	b580      	push	{r7, lr}
 8009330:	b084      	sub	sp, #16
 8009332:	af00      	add	r7, sp, #0
 8009334:	60f8      	str	r0, [r7, #12]
 8009336:	60b9      	str	r1, [r7, #8]
 8009338:	607a      	str	r2, [r7, #4]
    Application::getInstance()->clearAllTimerWidgets();
 800933a:	f004 fd55 	bl	800dde8 <_ZN8touchgfx11Application11getInstanceEv>
 800933e:	4603      	mov	r3, r0
 8009340:	4618      	mov	r0, r3
 8009342:	f004 fd57 	bl	800ddf4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>

    if (*currentTrans)
 8009346:	687b      	ldr	r3, [r7, #4]
 8009348:	681b      	ldr	r3, [r3, #0]
 800934a:	2b00      	cmp	r3, #0
 800934c:	d008      	beq.n	8009360 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x32>
    {
        (*currentTrans)->tearDown();
 800934e:	687b      	ldr	r3, [r7, #4]
 8009350:	681a      	ldr	r2, [r3, #0]
 8009352:	687b      	ldr	r3, [r7, #4]
 8009354:	681b      	ldr	r3, [r3, #0]
 8009356:	681b      	ldr	r3, [r3, #0]
 8009358:	330c      	adds	r3, #12
 800935a:	681b      	ldr	r3, [r3, #0]
 800935c:	4610      	mov	r0, r2
 800935e:	4798      	blx	r3
    }
    if (*currentTrans)
 8009360:	687b      	ldr	r3, [r7, #4]
 8009362:	681b      	ldr	r3, [r3, #0]
 8009364:	2b00      	cmp	r3, #0
 8009366:	d007      	beq.n	8009378 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x4a>
    {
        (*currentTrans)->~Transition();
 8009368:	687b      	ldr	r3, [r7, #4]
 800936a:	681a      	ldr	r2, [r3, #0]
 800936c:	687b      	ldr	r3, [r7, #4]
 800936e:	681b      	ldr	r3, [r3, #0]
 8009370:	681b      	ldr	r3, [r3, #0]
 8009372:	681b      	ldr	r3, [r3, #0]
 8009374:	4610      	mov	r0, r2
 8009376:	4798      	blx	r3
    }
    if (*currentScreen)
 8009378:	68fb      	ldr	r3, [r7, #12]
 800937a:	681b      	ldr	r3, [r3, #0]
 800937c:	2b00      	cmp	r3, #0
 800937e:	d008      	beq.n	8009392 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x64>
    {
        (*currentScreen)->tearDownScreen();
 8009380:	68fb      	ldr	r3, [r7, #12]
 8009382:	681a      	ldr	r2, [r3, #0]
 8009384:	68fb      	ldr	r3, [r7, #12]
 8009386:	681b      	ldr	r3, [r3, #0]
 8009388:	681b      	ldr	r3, [r3, #0]
 800938a:	3314      	adds	r3, #20
 800938c:	681b      	ldr	r3, [r3, #0]
 800938e:	4610      	mov	r0, r2
 8009390:	4798      	blx	r3
    }
    if (*currentPresenter)
 8009392:	68bb      	ldr	r3, [r7, #8]
 8009394:	681b      	ldr	r3, [r3, #0]
 8009396:	2b00      	cmp	r3, #0
 8009398:	d008      	beq.n	80093ac <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x7e>
    {
        (*currentPresenter)->deactivate();
 800939a:	68bb      	ldr	r3, [r7, #8]
 800939c:	681a      	ldr	r2, [r3, #0]
 800939e:	68bb      	ldr	r3, [r7, #8]
 80093a0:	681b      	ldr	r3, [r3, #0]
 80093a2:	681b      	ldr	r3, [r3, #0]
 80093a4:	3304      	adds	r3, #4
 80093a6:	681b      	ldr	r3, [r3, #0]
 80093a8:	4610      	mov	r0, r2
 80093aa:	4798      	blx	r3
    }
    if (*currentScreen)
 80093ac:	68fb      	ldr	r3, [r7, #12]
 80093ae:	681b      	ldr	r3, [r3, #0]
 80093b0:	2b00      	cmp	r3, #0
 80093b2:	d007      	beq.n	80093c4 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x96>
    {
        (*currentScreen)->~Screen();
 80093b4:	68fb      	ldr	r3, [r7, #12]
 80093b6:	681a      	ldr	r2, [r3, #0]
 80093b8:	68fb      	ldr	r3, [r7, #12]
 80093ba:	681b      	ldr	r3, [r3, #0]
 80093bc:	681b      	ldr	r3, [r3, #0]
 80093be:	681b      	ldr	r3, [r3, #0]
 80093c0:	4610      	mov	r0, r2
 80093c2:	4798      	blx	r3
    }
    if (*currentPresenter)
 80093c4:	68bb      	ldr	r3, [r7, #8]
 80093c6:	681b      	ldr	r3, [r3, #0]
 80093c8:	2b00      	cmp	r3, #0
 80093ca:	d008      	beq.n	80093de <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0xb0>
    {
        (*currentPresenter)->~Presenter();
 80093cc:	68bb      	ldr	r3, [r7, #8]
 80093ce:	681a      	ldr	r2, [r3, #0]
 80093d0:	68bb      	ldr	r3, [r7, #8]
 80093d2:	681b      	ldr	r3, [r3, #0]
 80093d4:	681b      	ldr	r3, [r3, #0]
 80093d6:	3308      	adds	r3, #8
 80093d8:	681b      	ldr	r3, [r3, #0]
 80093da:	4610      	mov	r0, r2
 80093dc:	4798      	blx	r3
    }
}
 80093de:	bf00      	nop
 80093e0:	3710      	adds	r7, #16
 80093e2:	46bd      	mov	sp, r7
 80093e4:	bd80      	pop	{r7, pc}

080093e6 <_ZN8touchgfxL18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE>:
 * @param [in] newScreen     If non-null, the new screen.
 * @param [in] newPresenter  If non-null, the new presenter.
 * @param [in] newTransition If non-null, the new transition.
 */
static inline void finalizeTransition(Screen* newScreen, Presenter* newPresenter, Transition* newTransition)
{
 80093e6:	b580      	push	{r7, lr}
 80093e8:	b084      	sub	sp, #16
 80093ea:	af00      	add	r7, sp, #0
 80093ec:	60f8      	str	r0, [r7, #12]
 80093ee:	60b9      	str	r1, [r7, #8]
 80093f0:	607a      	str	r2, [r7, #4]
    newScreen->setupScreen();
 80093f2:	68fb      	ldr	r3, [r7, #12]
 80093f4:	681b      	ldr	r3, [r3, #0]
 80093f6:	330c      	adds	r3, #12
 80093f8:	681b      	ldr	r3, [r3, #0]
 80093fa:	68f8      	ldr	r0, [r7, #12]
 80093fc:	4798      	blx	r3
    newPresenter->activate();
 80093fe:	68bb      	ldr	r3, [r7, #8]
 8009400:	681b      	ldr	r3, [r3, #0]
 8009402:	681b      	ldr	r3, [r3, #0]
 8009404:	68b8      	ldr	r0, [r7, #8]
 8009406:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8009408:	6879      	ldr	r1, [r7, #4]
 800940a:	68f8      	ldr	r0, [r7, #12]
 800940c:	f005 fd96 	bl	800ef3c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8009410:	687b      	ldr	r3, [r7, #4]
 8009412:	681b      	ldr	r3, [r3, #0]
 8009414:	3310      	adds	r3, #16
 8009416:	681b      	ldr	r3, [r3, #0]
 8009418:	6878      	ldr	r0, [r7, #4]
 800941a:	4798      	blx	r3

    Application::getInstance()->draw();
 800941c:	f004 fce4 	bl	800dde8 <_ZN8touchgfx11Application11getInstanceEv>
 8009420:	4602      	mov	r2, r0
 8009422:	6813      	ldr	r3, [r2, #0]
 8009424:	3328      	adds	r3, #40	; 0x28
 8009426:	681b      	ldr	r3, [r3, #0]
 8009428:	4610      	mov	r0, r2
 800942a:	4798      	blx	r3
}
 800942c:	bf00      	nop
 800942e:	3710      	adds	r7, #16
 8009430:	46bd      	mov	sp, r7
 8009432:	bd80      	pop	{r7, pc}

08009434 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 8009434:	b480      	push	{r7}
 8009436:	b083      	sub	sp, #12
 8009438:	af00      	add	r7, sp, #0
 800943a:	6078      	str	r0, [r7, #4]
 800943c:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800943e:	687b      	ldr	r3, [r7, #4]
 8009440:	683a      	ldr	r2, [r7, #0]
 8009442:	601a      	str	r2, [r3, #0]
    }
 8009444:	bf00      	nop
 8009446:	370c      	adds	r7, #12
 8009448:	46bd      	mov	sp, r7
 800944a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800944e:	4770      	bx	lr

08009450 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8009450:	b580      	push	{r7, lr}
 8009452:	b082      	sub	sp, #8
 8009454:	af00      	add	r7, sp, #0
 8009456:	6078      	str	r0, [r7, #4]
 8009458:	4a08      	ldr	r2, [pc, #32]	; (800947c <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800945a:	687b      	ldr	r3, [r7, #4]
 800945c:	601a      	str	r2, [r3, #0]
 800945e:	687b      	ldr	r3, [r7, #4]
 8009460:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8009464:	4618      	mov	r0, r3
 8009466:	f000 fa59 	bl	800991c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800946a:	687b      	ldr	r3, [r7, #4]
 800946c:	4618      	mov	r0, r3
 800946e:	f7ff ff01 	bl	8009274 <_ZN8touchgfx14MVPApplicationD1Ev>
 8009472:	687b      	ldr	r3, [r7, #4]
 8009474:	4618      	mov	r0, r3
 8009476:	3708      	adds	r7, #8
 8009478:	46bd      	mov	sp, r7
 800947a:	bd80      	pop	{r7, pc}
 800947c:	0801cb60 	.word	0x0801cb60

08009480 <_ZN23FrontendApplicationBaseD0Ev>:
 8009480:	b580      	push	{r7, lr}
 8009482:	b082      	sub	sp, #8
 8009484:	af00      	add	r7, sp, #0
 8009486:	6078      	str	r0, [r7, #4]
 8009488:	6878      	ldr	r0, [r7, #4]
 800948a:	f7ff ffe1 	bl	8009450 <_ZN23FrontendApplicationBaseD1Ev>
 800948e:	f44f 71a8 	mov.w	r1, #336	; 0x150
 8009492:	6878      	ldr	r0, [r7, #4]
 8009494:	f011 fec0 	bl	801b218 <_ZdlPvj>
 8009498:	687b      	ldr	r3, [r7, #4]
 800949a:	4618      	mov	r0, r3
 800949c:	3708      	adds	r7, #8
 800949e:	46bd      	mov	sp, r7
 80094a0:	bd80      	pop	{r7, pc}
	...

080094a4 <_ZN8touchgfx12NoTransitionC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    NoTransition() : Transition() { }
 80094a4:	b580      	push	{r7, lr}
 80094a6:	b082      	sub	sp, #8
 80094a8:	af00      	add	r7, sp, #0
 80094aa:	6078      	str	r0, [r7, #4]
 80094ac:	687b      	ldr	r3, [r7, #4]
 80094ae:	4618      	mov	r0, r3
 80094b0:	f7ff fde6 	bl	8009080 <_ZN8touchgfx10TransitionC1Ev>
 80094b4:	4a03      	ldr	r2, [pc, #12]	; (80094c4 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 80094b6:	687b      	ldr	r3, [r7, #4]
 80094b8:	601a      	str	r2, [r3, #0]
 80094ba:	687b      	ldr	r3, [r7, #4]
 80094bc:	4618      	mov	r0, r3
 80094be:	3708      	adds	r7, #8
 80094c0:	46bd      	mov	sp, r7
 80094c2:	bd80      	pop	{r7, pc}
 80094c4:	0801cb40 	.word	0x0801cb40

080094c8 <_ZN8touchgfx12NoTransitionD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~NoTransition() { }
 80094c8:	b580      	push	{r7, lr}
 80094ca:	b082      	sub	sp, #8
 80094cc:	af00      	add	r7, sp, #0
 80094ce:	6078      	str	r0, [r7, #4]
 80094d0:	4a05      	ldr	r2, [pc, #20]	; (80094e8 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 80094d2:	687b      	ldr	r3, [r7, #4]
 80094d4:	601a      	str	r2, [r3, #0]
 80094d6:	687b      	ldr	r3, [r7, #4]
 80094d8:	4618      	mov	r0, r3
 80094da:	f7ff fde7 	bl	80090ac <_ZN8touchgfx10TransitionD1Ev>
 80094de:	687b      	ldr	r3, [r7, #4]
 80094e0:	4618      	mov	r0, r3
 80094e2:	3708      	adds	r7, #8
 80094e4:	46bd      	mov	sp, r7
 80094e6:	bd80      	pop	{r7, pc}
 80094e8:	0801cb40 	.word	0x0801cb40

080094ec <_ZN8touchgfx12NoTransitionD0Ev>:
 80094ec:	b580      	push	{r7, lr}
 80094ee:	b082      	sub	sp, #8
 80094f0:	af00      	add	r7, sp, #0
 80094f2:	6078      	str	r0, [r7, #4]
 80094f4:	6878      	ldr	r0, [r7, #4]
 80094f6:	f7ff ffe7 	bl	80094c8 <_ZN8touchgfx12NoTransitionD1Ev>
 80094fa:	210c      	movs	r1, #12
 80094fc:	6878      	ldr	r0, [r7, #4]
 80094fe:	f011 fe8b 	bl	801b218 <_ZdlPvj>
 8009502:	687b      	ldr	r3, [r7, #4]
 8009504:	4618      	mov	r0, r3
 8009506:	3708      	adds	r7, #8
 8009508:	46bd      	mov	sp, r7
 800950a:	bd80      	pop	{r7, pc}

0800950c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
     *
     * @brief Indicates that the transition is done after the first tick.
     *
     *        Indicates that the transition is done after the first tick.
     */
    virtual void handleTickEvent()
 800950c:	b480      	push	{r7}
 800950e:	b083      	sub	sp, #12
 8009510:	af00      	add	r7, sp, #0
 8009512:	6078      	str	r0, [r7, #4]
    {
        done = true;
 8009514:	687b      	ldr	r3, [r7, #4]
 8009516:	2201      	movs	r2, #1
 8009518:	721a      	strb	r2, [r3, #8]
    }
 800951a:	bf00      	nop
 800951c:	370c      	adds	r7, #12
 800951e:	46bd      	mov	sp, r7
 8009520:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009524:	4770      	bx	lr

08009526 <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 8009526:	b480      	push	{r7}
 8009528:	b083      	sub	sp, #12
 800952a:	af00      	add	r7, sp, #0
 800952c:	6078      	str	r0, [r7, #4]
 800952e:	6039      	str	r1, [r7, #0]
    {
        model = m;
 8009530:	687b      	ldr	r3, [r7, #4]
 8009532:	683a      	ldr	r2, [r7, #0]
 8009534:	605a      	str	r2, [r3, #4]
    }
 8009536:	bf00      	nop
 8009538:	370c      	adds	r7, #12
 800953a:	46bd      	mov	sp, r7
 800953c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009540:	4770      	bx	lr
	...

08009544 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8009544:	b580      	push	{r7, lr}
 8009546:	b084      	sub	sp, #16
 8009548:	af00      	add	r7, sp, #0
 800954a:	60f8      	str	r0, [r7, #12]
 800954c:	60b9      	str	r1, [r7, #8]
 800954e:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8009550:	68fb      	ldr	r3, [r7, #12]
 8009552:	4618      	mov	r0, r3
 8009554:	f7ff fe6e 	bl	8009234 <_ZN8touchgfx14MVPApplicationC1Ev>
 8009558:	4a12      	ldr	r2, [pc, #72]	; (80095a4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
 800955a:	68fb      	ldr	r3, [r7, #12]
 800955c:	601a      	str	r2, [r3, #0]
 800955e:	68fb      	ldr	r3, [r7, #12]
 8009560:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8009564:	4618      	mov	r0, r3
 8009566:	f000 f89d 	bl	80096a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
 800956a:	68fb      	ldr	r3, [r7, #12]
 800956c:	687a      	ldr	r2, [r7, #4]
 800956e:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
 8009572:	68fb      	ldr	r3, [r7, #12]
 8009574:	68ba      	ldr	r2, [r7, #8]
 8009576:	f8c3 214c 	str.w	r2, [r3, #332]	; 0x14c
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800957a:	f7ff fe0f 	bl	800919c <_ZN8touchgfx3HAL11getInstanceEv>
 800957e:	4602      	mov	r2, r0
 8009580:	6813      	ldr	r3, [r2, #0]
 8009582:	3308      	adds	r3, #8
 8009584:	681b      	ldr	r3, [r3, #0]
 8009586:	2101      	movs	r1, #1
 8009588:	4610      	mov	r0, r2
 800958a:	4798      	blx	r3
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800958c:	f7ff fe12 	bl	80091b4 <_ZN8touchgfx3HAL3lcdEv>
 8009590:	4603      	mov	r3, r0
 8009592:	4618      	mov	r0, r3
 8009594:	f00a fddb 	bl	801414e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8009598:	68fb      	ldr	r3, [r7, #12]
 800959a:	4618      	mov	r0, r3
 800959c:	3710      	adds	r7, #16
 800959e:	46bd      	mov	sp, r7
 80095a0:	bd80      	pop	{r7, pc}
 80095a2:	bf00      	nop
 80095a4:	0801cb60 	.word	0x0801cb60

080095a8 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 80095a8:	b480      	push	{r7}
 80095aa:	b083      	sub	sp, #12
 80095ac:	af00      	add	r7, sp, #0
 80095ae:	6078      	str	r0, [r7, #4]
 80095b0:	6039      	str	r1, [r7, #0]
 80095b2:	687b      	ldr	r3, [r7, #4]
 80095b4:	4618      	mov	r0, r3
 80095b6:	370c      	adds	r7, #12
 80095b8:	46bd      	mov	sp, r7
 80095ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095be:	4770      	bx	lr

080095c0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *       three arguments of any type.
 *
 * @tparam dest_type The type of the class in which the member function resides.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80095c0:	b580      	push	{r7, lr}
 80095c2:	b082      	sub	sp, #8
 80095c4:	af00      	add	r7, sp, #0
 80095c6:	6078      	str	r0, [r7, #4]
 80095c8:	6039      	str	r1, [r7, #0]
 80095ca:	687b      	ldr	r3, [r7, #4]
 80095cc:	683a      	ldr	r2, [r7, #0]
 80095ce:	4611      	mov	r1, r2
 80095d0:	4618      	mov	r0, r3
 80095d2:	f7ff ffe9 	bl	80095a8 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 80095d6:	683b      	ldr	r3, [r7, #0]
 80095d8:	685a      	ldr	r2, [r3, #4]
 80095da:	687b      	ldr	r3, [r7, #4]
 80095dc:	605a      	str	r2, [r3, #4]
 80095de:	687b      	ldr	r3, [r7, #4]
 80095e0:	683a      	ldr	r2, [r7, #0]
 80095e2:	3308      	adds	r3, #8
 80095e4:	3208      	adds	r2, #8
 80095e6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80095ea:	e883 0003 	stmia.w	r3, {r0, r1}
 80095ee:	687b      	ldr	r3, [r7, #4]
 80095f0:	4618      	mov	r0, r3
 80095f2:	3708      	adds	r7, #8
 80095f4:	46bd      	mov	sp, r7
 80095f6:	bd80      	pop	{r7, pc}

080095f8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 */

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
 80095f8:	b590      	push	{r4, r7, lr}
 80095fa:	b089      	sub	sp, #36	; 0x24
 80095fc:	af00      	add	r7, sp, #0
 80095fe:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
 8009600:	687b      	ldr	r3, [r7, #4]
 8009602:	f503 749c 	add.w	r4, r3, #312	; 0x138
 8009606:	4b10      	ldr	r3, [pc, #64]	; (8009648 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x50>)
 8009608:	61bb      	str	r3, [r7, #24]
 800960a:	2300      	movs	r3, #0
 800960c:	61fb      	str	r3, [r7, #28]
 800960e:	f107 0008 	add.w	r0, r7, #8
 8009612:	f107 0318 	add.w	r3, r7, #24
 8009616:	cb0c      	ldmia	r3, {r2, r3}
 8009618:	6879      	ldr	r1, [r7, #4]
 800961a:	f000 f85f 	bl	80096dc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800961e:	f107 0308 	add.w	r3, r7, #8
 8009622:	4619      	mov	r1, r3
 8009624:	4620      	mov	r0, r4
 8009626:	f7ff ffcb 	bl	80095c0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800962a:	f107 0308 	add.w	r3, r7, #8
 800962e:	4618      	mov	r0, r3
 8009630:	f000 f974 	bl	800991c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8009634:	687b      	ldr	r3, [r7, #4]
 8009636:	f503 729c 	add.w	r2, r3, #312	; 0x138
 800963a:	687b      	ldr	r3, [r7, #4]
 800963c:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
}
 8009640:	bf00      	nop
 8009642:	3724      	adds	r7, #36	; 0x24
 8009644:	46bd      	mov	sp, r7
 8009646:	bd90      	pop	{r4, r7, pc}
 8009648:	0800964d 	.word	0x0800964d

0800964c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 800964c:	b580      	push	{r7, lr}
 800964e:	b084      	sub	sp, #16
 8009650:	af02      	add	r7, sp, #8
 8009652:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8009654:	687b      	ldr	r3, [r7, #4]
 8009656:	f503 7198 	add.w	r1, r3, #304	; 0x130
 800965a:	687b      	ldr	r3, [r7, #4]
 800965c:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8009660:	461a      	mov	r2, r3
 8009662:	687b      	ldr	r3, [r7, #4]
 8009664:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
 8009668:	9300      	str	r3, [sp, #0]
 800966a:	4b04      	ldr	r3, [pc, #16]	; (800967c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x30>)
 800966c:	4804      	ldr	r0, [pc, #16]	; (8009680 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x34>)
 800966e:	f000 f855 	bl	800971c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8009672:	bf00      	nop
 8009674:	3708      	adds	r7, #8
 8009676:	46bd      	mov	sp, r7
 8009678:	bd80      	pop	{r7, pc}
 800967a:	bf00      	nop
 800967c:	20026960 	.word	0x20026960
 8009680:	2002695c 	.word	0x2002695c

08009684 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8009684:	b480      	push	{r7}
 8009686:	b083      	sub	sp, #12
 8009688:	af00      	add	r7, sp, #0
 800968a:	6078      	str	r0, [r7, #4]
 800968c:	4a04      	ldr	r2, [pc, #16]	; (80096a0 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800968e:	687b      	ldr	r3, [r7, #4]
 8009690:	601a      	str	r2, [r3, #0]
 8009692:	687b      	ldr	r3, [r7, #4]
 8009694:	4618      	mov	r0, r3
 8009696:	370c      	adds	r7, #12
 8009698:	46bd      	mov	sp, r7
 800969a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800969e:	4770      	bx	lr
 80096a0:	0801cbf0 	.word	0x0801cbf0

080096a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Initializes an empty callback.
     */
    Callback() : pobject(0), pmemfun_0(0) { }
 80096a4:	b580      	push	{r7, lr}
 80096a6:	b082      	sub	sp, #8
 80096a8:	af00      	add	r7, sp, #0
 80096aa:	6078      	str	r0, [r7, #4]
 80096ac:	687b      	ldr	r3, [r7, #4]
 80096ae:	4618      	mov	r0, r3
 80096b0:	f7ff ffe8 	bl	8009684 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 80096b4:	4a08      	ldr	r2, [pc, #32]	; (80096d8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 80096b6:	687b      	ldr	r3, [r7, #4]
 80096b8:	601a      	str	r2, [r3, #0]
 80096ba:	687b      	ldr	r3, [r7, #4]
 80096bc:	2200      	movs	r2, #0
 80096be:	605a      	str	r2, [r3, #4]
 80096c0:	687b      	ldr	r3, [r7, #4]
 80096c2:	2200      	movs	r2, #0
 80096c4:	609a      	str	r2, [r3, #8]
 80096c6:	687b      	ldr	r3, [r7, #4]
 80096c8:	2200      	movs	r2, #0
 80096ca:	60da      	str	r2, [r3, #12]
 80096cc:	687b      	ldr	r3, [r7, #4]
 80096ce:	4618      	mov	r0, r3
 80096d0:	3708      	adds	r7, #8
 80096d2:	46bd      	mov	sp, r7
 80096d4:	bd80      	pop	{r7, pc}
 80096d6:	bf00      	nop
 80096d8:	0801cb9c 	.word	0x0801cb9c

080096dc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pobject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function
     *                       takes zero arguments.
     */
    Callback(dest_type* pobject, void (dest_type::*pmemfun_0)())
 80096dc:	b580      	push	{r7, lr}
 80096de:	b084      	sub	sp, #16
 80096e0:	af00      	add	r7, sp, #0
 80096e2:	60f8      	str	r0, [r7, #12]
 80096e4:	60b9      	str	r1, [r7, #8]
 80096e6:	4639      	mov	r1, r7
 80096e8:	e881 000c 	stmia.w	r1, {r2, r3}
    {
 80096ec:	68fb      	ldr	r3, [r7, #12]
 80096ee:	4618      	mov	r0, r3
 80096f0:	f7ff ffc8 	bl	8009684 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 80096f4:	4a08      	ldr	r2, [pc, #32]	; (8009718 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 80096f6:	68fb      	ldr	r3, [r7, #12]
 80096f8:	601a      	str	r2, [r3, #0]
        this->pobject = pobject;
 80096fa:	68fb      	ldr	r3, [r7, #12]
 80096fc:	68ba      	ldr	r2, [r7, #8]
 80096fe:	605a      	str	r2, [r3, #4]
        this->pmemfun_0 = pmemfun_0;
 8009700:	68fb      	ldr	r3, [r7, #12]
 8009702:	3308      	adds	r3, #8
 8009704:	463a      	mov	r2, r7
 8009706:	e892 0003 	ldmia.w	r2, {r0, r1}
 800970a:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800970e:	68fb      	ldr	r3, [r7, #12]
 8009710:	4618      	mov	r0, r3
 8009712:	3710      	adds	r7, #16
 8009714:	46bd      	mov	sp, r7
 8009716:	bd80      	pop	{r7, pc}
 8009718:	0801cb9c 	.word	0x0801cb9c

0800971c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template< class ScreenType, class PresenterType, class TransType, class ModelType  >
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800971c:	b590      	push	{r4, r7, lr}
 800971e:	b089      	sub	sp, #36	; 0x24
 8009720:	af00      	add	r7, sp, #0
 8009722:	60f8      	str	r0, [r7, #12]
 8009724:	60b9      	str	r1, [r7, #8]
 8009726:	607a      	str	r2, [r7, #4]
 8009728:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800972a:	687b      	ldr	r3, [r7, #4]
 800972c:	689a      	ldr	r2, [r3, #8]
 800972e:	687b      	ldr	r3, [r7, #4]
 8009730:	689b      	ldr	r3, [r3, #8]
 8009732:	681b      	ldr	r3, [r3, #0]
 8009734:	3320      	adds	r3, #32
 8009736:	681b      	ldr	r3, [r3, #0]
 8009738:	4610      	mov	r0, r2
 800973a:	4798      	blx	r3
 800973c:	4603      	mov	r3, r0
 800973e:	2b73      	cmp	r3, #115	; 0x73
 8009740:	d805      	bhi.n	800974e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x32>
 8009742:	4b4d      	ldr	r3, [pc, #308]	; (8009878 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x15c>)
 8009744:	4a4d      	ldr	r2, [pc, #308]	; (800987c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>)
 8009746:	21c2      	movs	r1, #194	; 0xc2
 8009748:	484d      	ldr	r0, [pc, #308]	; (8009880 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 800974a:	f011 fd91 	bl	801b270 <__assert_func>
 800974e:	bf00      	nop
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8009750:	687b      	ldr	r3, [r7, #4]
 8009752:	685a      	ldr	r2, [r3, #4]
 8009754:	687b      	ldr	r3, [r7, #4]
 8009756:	685b      	ldr	r3, [r3, #4]
 8009758:	681b      	ldr	r3, [r3, #0]
 800975a:	3320      	adds	r3, #32
 800975c:	681b      	ldr	r3, [r3, #0]
 800975e:	4610      	mov	r0, r2
 8009760:	4798      	blx	r3
 8009762:	4603      	mov	r3, r0
 8009764:	2b0f      	cmp	r3, #15
 8009766:	d805      	bhi.n	8009774 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8009768:	4b46      	ldr	r3, [pc, #280]	; (8009884 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 800976a:	4a44      	ldr	r2, [pc, #272]	; (800987c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>)
 800976c:	21c3      	movs	r1, #195	; 0xc3
 800976e:	4844      	ldr	r0, [pc, #272]	; (8009880 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8009770:	f011 fd7e 	bl	801b270 <__assert_func>
 8009774:	bf00      	nop
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8009776:	687b      	ldr	r3, [r7, #4]
 8009778:	68da      	ldr	r2, [r3, #12]
 800977a:	687b      	ldr	r3, [r7, #4]
 800977c:	68db      	ldr	r3, [r3, #12]
 800977e:	681b      	ldr	r3, [r3, #0]
 8009780:	3320      	adds	r3, #32
 8009782:	681b      	ldr	r3, [r3, #0]
 8009784:	4610      	mov	r0, r2
 8009786:	4798      	blx	r3
 8009788:	4603      	mov	r3, r0
 800978a:	2b0b      	cmp	r3, #11
 800978c:	d805      	bhi.n	800979a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
 800978e:	4b3e      	ldr	r3, [pc, #248]	; (8009888 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x16c>)
 8009790:	4a3a      	ldr	r2, [pc, #232]	; (800987c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>)
 8009792:	21c4      	movs	r1, #196	; 0xc4
 8009794:	483a      	ldr	r0, [pc, #232]	; (8009880 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8009796:	f011 fd6b 	bl	801b270 <__assert_func>
 800979a:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);
 800979c:	683a      	ldr	r2, [r7, #0]
 800979e:	68b9      	ldr	r1, [r7, #8]
 80097a0:	68f8      	ldr	r0, [r7, #12]
 80097a2:	f7ff fdc4 	bl	800932e <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE>

    TransType* newTransition = new (&heap.transitionStorage.at< TransType >(0)) TransType;
 80097a6:	687b      	ldr	r3, [r7, #4]
 80097a8:	68db      	ldr	r3, [r3, #12]
 80097aa:	2100      	movs	r1, #0
 80097ac:	4618      	mov	r0, r3
 80097ae:	f000 f86d 	bl	800988c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80097b2:	4603      	mov	r3, r0
 80097b4:	4619      	mov	r1, r3
 80097b6:	200c      	movs	r0, #12
 80097b8:	f7ff fbf4 	bl	8008fa4 <_ZnwjPv>
 80097bc:	4604      	mov	r4, r0
 80097be:	2c00      	cmp	r4, #0
 80097c0:	d004      	beq.n	80097cc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb0>
 80097c2:	4620      	mov	r0, r4
 80097c4:	f7ff fe6e 	bl	80094a4 <_ZN8touchgfx12NoTransitionC1Ev>
 80097c8:	4623      	mov	r3, r4
 80097ca:	e000      	b.n	80097ce <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb2>
 80097cc:	4623      	mov	r3, r4
 80097ce:	61fb      	str	r3, [r7, #28]
    ScreenType* newScreen = new (&heap.screenStorage.at< ScreenType >(0)) ScreenType;
 80097d0:	687b      	ldr	r3, [r7, #4]
 80097d2:	689b      	ldr	r3, [r3, #8]
 80097d4:	2100      	movs	r1, #0
 80097d6:	4618      	mov	r0, r3
 80097d8:	f000 f86b 	bl	80098b2 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 80097dc:	4603      	mov	r3, r0
 80097de:	4619      	mov	r1, r3
 80097e0:	2074      	movs	r0, #116	; 0x74
 80097e2:	f7ff fbdf 	bl	8008fa4 <_ZnwjPv>
 80097e6:	4604      	mov	r4, r0
 80097e8:	2c00      	cmp	r4, #0
 80097ea:	d004      	beq.n	80097f6 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xda>
 80097ec:	4620      	mov	r0, r4
 80097ee:	f000 fef7 	bl	800a5e0 <_ZN11Screen1ViewC1Ev>
 80097f2:	4623      	mov	r3, r4
 80097f4:	e000      	b.n	80097f8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xdc>
 80097f6:	4623      	mov	r3, r4
 80097f8:	61bb      	str	r3, [r7, #24]
    PresenterType* newPresenter = new (&heap.presenterStorage.at< PresenterType >(0)) PresenterType(*newScreen);
 80097fa:	687b      	ldr	r3, [r7, #4]
 80097fc:	685b      	ldr	r3, [r3, #4]
 80097fe:	2100      	movs	r1, #0
 8009800:	4618      	mov	r0, r3
 8009802:	f000 f869 	bl	80098d8 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 8009806:	4603      	mov	r3, r0
 8009808:	4619      	mov	r1, r3
 800980a:	2010      	movs	r0, #16
 800980c:	f7ff fbca 	bl	8008fa4 <_ZnwjPv>
 8009810:	4604      	mov	r4, r0
 8009812:	2c00      	cmp	r4, #0
 8009814:	d005      	beq.n	8009822 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x106>
 8009816:	69b9      	ldr	r1, [r7, #24]
 8009818:	4620      	mov	r0, r4
 800981a:	f000 fe8b 	bl	800a534 <_ZN16Screen1PresenterC1ER11Screen1View>
 800981e:	4623      	mov	r3, r4
 8009820:	e000      	b.n	8009824 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x108>
 8009822:	4623      	mov	r3, r4
 8009824:	617b      	str	r3, [r7, #20]
    *currentTrans = newTransition;
 8009826:	683b      	ldr	r3, [r7, #0]
 8009828:	69fa      	ldr	r2, [r7, #28]
 800982a:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800982c:	68bb      	ldr	r3, [r7, #8]
 800982e:	697a      	ldr	r2, [r7, #20]
 8009830:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8009832:	68fb      	ldr	r3, [r7, #12]
 8009834:	69ba      	ldr	r2, [r7, #24]
 8009836:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8009838:	697b      	ldr	r3, [r7, #20]
 800983a:	2b00      	cmp	r3, #0
 800983c:	d002      	beq.n	8009844 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>
 800983e:	697b      	ldr	r3, [r7, #20]
 8009840:	3304      	adds	r3, #4
 8009842:	e000      	b.n	8009846 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12a>
 8009844:	2300      	movs	r3, #0
 8009846:	4619      	mov	r1, r3
 8009848:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800984a:	f7ff fdf3 	bl	8009434 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800984e:	697b      	ldr	r3, [r7, #20]
 8009850:	3304      	adds	r3, #4
 8009852:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8009854:	4618      	mov	r0, r3
 8009856:	f7ff fe66 	bl	8009526 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800985a:	69bb      	ldr	r3, [r7, #24]
 800985c:	6979      	ldr	r1, [r7, #20]
 800985e:	4618      	mov	r0, r3
 8009860:	f000 f84d 	bl	80098fe <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);
 8009864:	69fa      	ldr	r2, [r7, #28]
 8009866:	6979      	ldr	r1, [r7, #20]
 8009868:	69b8      	ldr	r0, [r7, #24]
 800986a:	f7ff fdbc 	bl	80093e6 <_ZN8touchgfxL18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE>

    return newPresenter;
 800986e:	697b      	ldr	r3, [r7, #20]
}
 8009870:	4618      	mov	r0, r3
 8009872:	3724      	adds	r7, #36	; 0x24
 8009874:	46bd      	mov	sp, r7
 8009876:	bd90      	pop	{r4, r7, pc}
 8009878:	0801c768 	.word	0x0801c768
 800987c:	0801cc48 	.word	0x0801cc48
 8009880:	0801c7f8 	.word	0x0801c7f8
 8009884:	0801c83c 	.word	0x0801c83c
 8009888:	0801c8e0 	.word	0x0801c8e0

0800988c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template< typename T >
    T& at(const uint16_t index)
 800988c:	b580      	push	{r7, lr}
 800988e:	b082      	sub	sp, #8
 8009890:	af00      	add	r7, sp, #0
 8009892:	6078      	str	r0, [r7, #4]
 8009894:	460b      	mov	r3, r1
 8009896:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 8009898:	687b      	ldr	r3, [r7, #4]
 800989a:	681b      	ldr	r3, [r3, #0]
 800989c:	3324      	adds	r3, #36	; 0x24
 800989e:	681b      	ldr	r3, [r3, #0]
 80098a0:	887a      	ldrh	r2, [r7, #2]
 80098a2:	4611      	mov	r1, r2
 80098a4:	6878      	ldr	r0, [r7, #4]
 80098a6:	4798      	blx	r3
 80098a8:	4603      	mov	r3, r0
    }
 80098aa:	4618      	mov	r0, r3
 80098ac:	3708      	adds	r7, #8
 80098ae:	46bd      	mov	sp, r7
 80098b0:	bd80      	pop	{r7, pc}

080098b2 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
    T& at(const uint16_t index)
 80098b2:	b580      	push	{r7, lr}
 80098b4:	b082      	sub	sp, #8
 80098b6:	af00      	add	r7, sp, #0
 80098b8:	6078      	str	r0, [r7, #4]
 80098ba:	460b      	mov	r3, r1
 80098bc:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80098be:	687b      	ldr	r3, [r7, #4]
 80098c0:	681b      	ldr	r3, [r3, #0]
 80098c2:	3324      	adds	r3, #36	; 0x24
 80098c4:	681b      	ldr	r3, [r3, #0]
 80098c6:	887a      	ldrh	r2, [r7, #2]
 80098c8:	4611      	mov	r1, r2
 80098ca:	6878      	ldr	r0, [r7, #4]
 80098cc:	4798      	blx	r3
 80098ce:	4603      	mov	r3, r0
    }
 80098d0:	4618      	mov	r0, r3
 80098d2:	3708      	adds	r7, #8
 80098d4:	46bd      	mov	sp, r7
 80098d6:	bd80      	pop	{r7, pc}

080098d8 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 80098d8:	b580      	push	{r7, lr}
 80098da:	b082      	sub	sp, #8
 80098dc:	af00      	add	r7, sp, #0
 80098de:	6078      	str	r0, [r7, #4]
 80098e0:	460b      	mov	r3, r1
 80098e2:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80098e4:	687b      	ldr	r3, [r7, #4]
 80098e6:	681b      	ldr	r3, [r3, #0]
 80098e8:	3324      	adds	r3, #36	; 0x24
 80098ea:	681b      	ldr	r3, [r3, #0]
 80098ec:	887a      	ldrh	r2, [r7, #2]
 80098ee:	4611      	mov	r1, r2
 80098f0:	6878      	ldr	r0, [r7, #4]
 80098f2:	4798      	blx	r3
 80098f4:	4603      	mov	r3, r0
    }
 80098f6:	4618      	mov	r0, r3
 80098f8:	3708      	adds	r7, #8
 80098fa:	46bd      	mov	sp, r7
 80098fc:	bd80      	pop	{r7, pc}

080098fe <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>:
     *        Binds an instance of a specific Presenter type (subclass) to the View instance.
     *        This function is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
 80098fe:	b480      	push	{r7}
 8009900:	b083      	sub	sp, #12
 8009902:	af00      	add	r7, sp, #0
 8009904:	6078      	str	r0, [r7, #4]
 8009906:	6039      	str	r1, [r7, #0]
    {
        this->presenter = &presenter;
 8009908:	687b      	ldr	r3, [r7, #4]
 800990a:	683a      	ldr	r2, [r7, #0]
 800990c:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800990e:	bf00      	nop
 8009910:	370c      	adds	r7, #12
 8009912:	46bd      	mov	sp, r7
 8009914:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009918:	4770      	bx	lr
	...

0800991c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800991c:	b580      	push	{r7, lr}
 800991e:	b082      	sub	sp, #8
 8009920:	af00      	add	r7, sp, #0
 8009922:	6078      	str	r0, [r7, #4]
 8009924:	4a05      	ldr	r2, [pc, #20]	; (800993c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 8009926:	687b      	ldr	r3, [r7, #4]
 8009928:	601a      	str	r2, [r3, #0]
 800992a:	687b      	ldr	r3, [r7, #4]
 800992c:	4618      	mov	r0, r3
 800992e:	f7ff fc15 	bl	800915c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8009932:	687b      	ldr	r3, [r7, #4]
 8009934:	4618      	mov	r0, r3
 8009936:	3708      	adds	r7, #8
 8009938:	46bd      	mov	sp, r7
 800993a:	bd80      	pop	{r7, pc}
 800993c:	0801cb9c 	.word	0x0801cb9c

08009940 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 8009940:	b580      	push	{r7, lr}
 8009942:	b082      	sub	sp, #8
 8009944:	af00      	add	r7, sp, #0
 8009946:	6078      	str	r0, [r7, #4]
 8009948:	6878      	ldr	r0, [r7, #4]
 800994a:	f7ff ffe7 	bl	800991c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800994e:	2110      	movs	r1, #16
 8009950:	6878      	ldr	r0, [r7, #4]
 8009952:	f011 fc61 	bl	801b218 <_ZdlPvj>
 8009956:	687b      	ldr	r3, [r7, #4]
 8009958:	4618      	mov	r0, r3
 800995a:	3708      	adds	r7, #8
 800995c:	46bd      	mov	sp, r7
 800995e:	bd80      	pop	{r7, pc}

08009960 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * @brief Calls the member function.
     *
     *        Calls the member function. Do not call execute unless isValid() returns true (ie.
     *        a pointer to the object and the function has been set).
     */
    virtual void execute()
 8009960:	b580      	push	{r7, lr}
 8009962:	b082      	sub	sp, #8
 8009964:	af00      	add	r7, sp, #0
 8009966:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun_0)();
 8009968:	687b      	ldr	r3, [r7, #4]
 800996a:	685b      	ldr	r3, [r3, #4]
 800996c:	687a      	ldr	r2, [r7, #4]
 800996e:	68d2      	ldr	r2, [r2, #12]
 8009970:	1052      	asrs	r2, r2, #1
 8009972:	1899      	adds	r1, r3, r2
 8009974:	687b      	ldr	r3, [r7, #4]
 8009976:	68db      	ldr	r3, [r3, #12]
 8009978:	f003 0301 	and.w	r3, r3, #1
 800997c:	2b00      	cmp	r3, #0
 800997e:	d102      	bne.n	8009986 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 8009980:	687b      	ldr	r3, [r7, #4]
 8009982:	689b      	ldr	r3, [r3, #8]
 8009984:	e00a      	b.n	800999c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 8009986:	687b      	ldr	r3, [r7, #4]
 8009988:	685b      	ldr	r3, [r3, #4]
 800998a:	687a      	ldr	r2, [r7, #4]
 800998c:	68d2      	ldr	r2, [r2, #12]
 800998e:	1052      	asrs	r2, r2, #1
 8009990:	4413      	add	r3, r2
 8009992:	681b      	ldr	r3, [r3, #0]
 8009994:	687a      	ldr	r2, [r7, #4]
 8009996:	6892      	ldr	r2, [r2, #8]
 8009998:	4413      	add	r3, r2
 800999a:	681b      	ldr	r3, [r3, #0]
 800999c:	4608      	mov	r0, r1
 800999e:	4798      	blx	r3
    }
 80099a0:	bf00      	nop
 80099a2:	3708      	adds	r7, #8
 80099a4:	46bd      	mov	sp, r7
 80099a6:	bd80      	pop	{r7, pc}

080099a8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     *        Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 80099a8:	b480      	push	{r7}
 80099aa:	b083      	sub	sp, #12
 80099ac:	af00      	add	r7, sp, #0
 80099ae:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 80099b0:	687b      	ldr	r3, [r7, #4]
 80099b2:	685b      	ldr	r3, [r3, #4]
 80099b4:	2b00      	cmp	r3, #0
 80099b6:	d010      	beq.n	80099da <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 80099b8:	687b      	ldr	r3, [r7, #4]
 80099ba:	689b      	ldr	r3, [r3, #8]
 80099bc:	2b00      	cmp	r3, #0
 80099be:	d107      	bne.n	80099d0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 80099c0:	687b      	ldr	r3, [r7, #4]
 80099c2:	68db      	ldr	r3, [r3, #12]
 80099c4:	f003 0301 	and.w	r3, r3, #1
 80099c8:	2b00      	cmp	r3, #0
 80099ca:	d101      	bne.n	80099d0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 80099cc:	2301      	movs	r3, #1
 80099ce:	e000      	b.n	80099d2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 80099d0:	2300      	movs	r3, #0
 80099d2:	2b01      	cmp	r3, #1
 80099d4:	d001      	beq.n	80099da <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 80099d6:	2301      	movs	r3, #1
 80099d8:	e000      	b.n	80099dc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 80099da:	2300      	movs	r3, #0
    }
 80099dc:	4618      	mov	r0, r3
 80099de:	370c      	adds	r7, #12
 80099e0:	46bd      	mov	sp, r7
 80099e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099e6:	4770      	bx	lr

080099e8 <_ZN8touchgfx4RectC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor. Resulting in an empty Rect with coordinates 0,0.
     */
    Rect()
 80099e8:	b480      	push	{r7}
 80099ea:	b083      	sub	sp, #12
 80099ec:	af00      	add	r7, sp, #0
 80099ee:	6078      	str	r0, [r7, #4]
    {
        this->x = 0;
 80099f0:	687b      	ldr	r3, [r7, #4]
 80099f2:	2200      	movs	r2, #0
 80099f4:	801a      	strh	r2, [r3, #0]
        this->y = 0;
 80099f6:	687b      	ldr	r3, [r7, #4]
 80099f8:	2200      	movs	r2, #0
 80099fa:	805a      	strh	r2, [r3, #2]
        this->width = 0;
 80099fc:	687b      	ldr	r3, [r7, #4]
 80099fe:	2200      	movs	r2, #0
 8009a00:	809a      	strh	r2, [r3, #4]
        this->height = 0;
 8009a02:	687b      	ldr	r3, [r7, #4]
 8009a04:	2200      	movs	r2, #0
 8009a06:	80da      	strh	r2, [r3, #6]
    }
 8009a08:	687b      	ldr	r3, [r7, #4]
 8009a0a:	4618      	mov	r0, r3
 8009a0c:	370c      	adds	r7, #12
 8009a0e:	46bd      	mov	sp, r7
 8009a10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a14:	4770      	bx	lr

08009a16 <_ZN8touchgfx4RectC1Essss>:
     * @param x      The x coordinate.
     * @param y      The y coordinate.
     * @param width  The width.
     * @param height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
 8009a16:	b480      	push	{r7}
 8009a18:	b085      	sub	sp, #20
 8009a1a:	af00      	add	r7, sp, #0
 8009a1c:	60f8      	str	r0, [r7, #12]
 8009a1e:	4608      	mov	r0, r1
 8009a20:	4611      	mov	r1, r2
 8009a22:	461a      	mov	r2, r3
 8009a24:	4603      	mov	r3, r0
 8009a26:	817b      	strh	r3, [r7, #10]
 8009a28:	460b      	mov	r3, r1
 8009a2a:	813b      	strh	r3, [r7, #8]
 8009a2c:	4613      	mov	r3, r2
 8009a2e:	80fb      	strh	r3, [r7, #6]
    {
        this->x = x;
 8009a30:	68fb      	ldr	r3, [r7, #12]
 8009a32:	897a      	ldrh	r2, [r7, #10]
 8009a34:	801a      	strh	r2, [r3, #0]
        this->y = y;
 8009a36:	68fb      	ldr	r3, [r7, #12]
 8009a38:	893a      	ldrh	r2, [r7, #8]
 8009a3a:	805a      	strh	r2, [r3, #2]
        this->width = width;
 8009a3c:	68fb      	ldr	r3, [r7, #12]
 8009a3e:	88fa      	ldrh	r2, [r7, #6]
 8009a40:	809a      	strh	r2, [r3, #4]
        this->height = height;
 8009a42:	68fb      	ldr	r3, [r7, #12]
 8009a44:	8b3a      	ldrh	r2, [r7, #24]
 8009a46:	80da      	strh	r2, [r3, #6]
    }
 8009a48:	68fb      	ldr	r3, [r7, #12]
 8009a4a:	4618      	mov	r0, r3
 8009a4c:	3714      	adds	r7, #20
 8009a4e:	46bd      	mov	sp, r7
 8009a50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a54:	4770      	bx	lr

08009a56 <_ZN8touchgfx6BitmapC1Et>:
     *        Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     *        array.
     *
     * @param id The unique bitmap identifier.
     */
    explicit Bitmap(const BitmapId id = BITMAP_INVALID)
 8009a56:	b480      	push	{r7}
 8009a58:	b083      	sub	sp, #12
 8009a5a:	af00      	add	r7, sp, #0
 8009a5c:	6078      	str	r0, [r7, #4]
 8009a5e:	460b      	mov	r3, r1
 8009a60:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 8009a62:	687b      	ldr	r3, [r7, #4]
 8009a64:	887a      	ldrh	r2, [r7, #2]
 8009a66:	801a      	strh	r2, [r3, #0]
    {
    }
 8009a68:	687b      	ldr	r3, [r7, #4]
 8009a6a:	4618      	mov	r0, r3
 8009a6c:	370c      	adds	r7, #12
 8009a6e:	46bd      	mov	sp, r7
 8009a70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a74:	4770      	bx	lr
	...

08009a78 <_ZN8touchgfx8DrawableC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Drawable() : rect(0, 0, 0, 0),
 8009a78:	b580      	push	{r7, lr}
 8009a7a:	b084      	sub	sp, #16
 8009a7c:	af02      	add	r7, sp, #8
 8009a7e:	6078      	str	r0, [r7, #4]
        parent(0),
        nextSibling(0),
        nextDrawChainElement(0),
        touchable(false),
        visible(true)
 8009a80:	4a13      	ldr	r2, [pc, #76]	; (8009ad0 <_ZN8touchgfx8DrawableC1Ev+0x58>)
 8009a82:	687b      	ldr	r3, [r7, #4]
 8009a84:	601a      	str	r2, [r3, #0]
 8009a86:	687b      	ldr	r3, [r7, #4]
 8009a88:	1d18      	adds	r0, r3, #4
 8009a8a:	2300      	movs	r3, #0
 8009a8c:	9300      	str	r3, [sp, #0]
 8009a8e:	2300      	movs	r3, #0
 8009a90:	2200      	movs	r2, #0
 8009a92:	2100      	movs	r1, #0
 8009a94:	f7ff ffbf 	bl	8009a16 <_ZN8touchgfx4RectC1Essss>
 8009a98:	687b      	ldr	r3, [r7, #4]
 8009a9a:	330c      	adds	r3, #12
 8009a9c:	4618      	mov	r0, r3
 8009a9e:	f7ff ffa3 	bl	80099e8 <_ZN8touchgfx4RectC1Ev>
 8009aa2:	687b      	ldr	r3, [r7, #4]
 8009aa4:	2200      	movs	r2, #0
 8009aa6:	615a      	str	r2, [r3, #20]
 8009aa8:	687b      	ldr	r3, [r7, #4]
 8009aaa:	2200      	movs	r2, #0
 8009aac:	619a      	str	r2, [r3, #24]
 8009aae:	687b      	ldr	r3, [r7, #4]
 8009ab0:	2200      	movs	r2, #0
 8009ab2:	61da      	str	r2, [r3, #28]
 8009ab4:	687b      	ldr	r3, [r7, #4]
 8009ab6:	2200      	movs	r2, #0
 8009ab8:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8009abc:	687b      	ldr	r3, [r7, #4]
 8009abe:	2201      	movs	r2, #1
 8009ac0:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 8009ac4:	687b      	ldr	r3, [r7, #4]
 8009ac6:	4618      	mov	r0, r3
 8009ac8:	3708      	adds	r7, #8
 8009aca:	46bd      	mov	sp, r7
 8009acc:	bd80      	pop	{r7, pc}
 8009ace:	bf00      	nop
 8009ad0:	0801e114 	.word	0x0801e114

08009ad4 <_ZN8touchgfx8DrawableD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Drawable() { }
 8009ad4:	b480      	push	{r7}
 8009ad6:	b083      	sub	sp, #12
 8009ad8:	af00      	add	r7, sp, #0
 8009ada:	6078      	str	r0, [r7, #4]
 8009adc:	4a04      	ldr	r2, [pc, #16]	; (8009af0 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8009ade:	687b      	ldr	r3, [r7, #4]
 8009ae0:	601a      	str	r2, [r3, #0]
 8009ae2:	687b      	ldr	r3, [r7, #4]
 8009ae4:	4618      	mov	r0, r3
 8009ae6:	370c      	adds	r7, #12
 8009ae8:	46bd      	mov	sp, r7
 8009aea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009aee:	4770      	bx	lr
 8009af0:	0801e114 	.word	0x0801e114

08009af4 <_ZN8touchgfx8DrawableD0Ev>:
 8009af4:	b580      	push	{r7, lr}
 8009af6:	b082      	sub	sp, #8
 8009af8:	af00      	add	r7, sp, #0
 8009afa:	6078      	str	r0, [r7, #4]
 8009afc:	6878      	ldr	r0, [r7, #4]
 8009afe:	f7ff ffe9 	bl	8009ad4 <_ZN8touchgfx8DrawableD1Ev>
 8009b02:	2128      	movs	r1, #40	; 0x28
 8009b04:	6878      	ldr	r0, [r7, #4]
 8009b06:	f011 fb87 	bl	801b218 <_ZdlPvj>
 8009b0a:	687b      	ldr	r3, [r7, #4]
 8009b0c:	4618      	mov	r0, r3
 8009b0e:	3708      	adds	r7, #8
 8009b10:	46bd      	mov	sp, r7
 8009b12:	bd80      	pop	{r7, pc}

08009b14 <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param x      The x coordinate of this Drawable.
     * @param y      The y coordinate of this Drawable.
     * @param width  The width of this Drawable.
     * @param height The height of this Drawable.
     */
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8009b14:	b580      	push	{r7, lr}
 8009b16:	b084      	sub	sp, #16
 8009b18:	af00      	add	r7, sp, #0
 8009b1a:	60f8      	str	r0, [r7, #12]
 8009b1c:	4608      	mov	r0, r1
 8009b1e:	4611      	mov	r1, r2
 8009b20:	461a      	mov	r2, r3
 8009b22:	4603      	mov	r3, r0
 8009b24:	817b      	strh	r3, [r7, #10]
 8009b26:	460b      	mov	r3, r1
 8009b28:	813b      	strh	r3, [r7, #8]
 8009b2a:	4613      	mov	r3, r2
 8009b2c:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 8009b2e:	68fb      	ldr	r3, [r7, #12]
 8009b30:	681b      	ldr	r3, [r3, #0]
 8009b32:	3334      	adds	r3, #52	; 0x34
 8009b34:	681b      	ldr	r3, [r3, #0]
 8009b36:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8009b3a:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8009b3e:	68f8      	ldr	r0, [r7, #12]
 8009b40:	4798      	blx	r3
        setWidth(width);
 8009b42:	68fb      	ldr	r3, [r7, #12]
 8009b44:	681b      	ldr	r3, [r3, #0]
 8009b46:	3338      	adds	r3, #56	; 0x38
 8009b48:	681b      	ldr	r3, [r3, #0]
 8009b4a:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8009b4e:	4611      	mov	r1, r2
 8009b50:	68f8      	ldr	r0, [r7, #12]
 8009b52:	4798      	blx	r3
        setHeight(height);
 8009b54:	68fb      	ldr	r3, [r7, #12]
 8009b56:	681b      	ldr	r3, [r3, #0]
 8009b58:	333c      	adds	r3, #60	; 0x3c
 8009b5a:	681b      	ldr	r3, [r3, #0]
 8009b5c:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 8009b60:	4611      	mov	r1, r2
 8009b62:	68f8      	ldr	r0, [r7, #12]
 8009b64:	4798      	blx	r3
    }
 8009b66:	bf00      	nop
 8009b68:	3710      	adds	r7, #16
 8009b6a:	46bd      	mov	sp, r7
 8009b6c:	bd80      	pop	{r7, pc}

08009b6e <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param x The new x value, relative to the parent. A negative value is allowed.
     */
    virtual void setX(int16_t x)
 8009b6e:	b480      	push	{r7}
 8009b70:	b083      	sub	sp, #12
 8009b72:	af00      	add	r7, sp, #0
 8009b74:	6078      	str	r0, [r7, #4]
 8009b76:	460b      	mov	r3, r1
 8009b78:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 8009b7a:	687b      	ldr	r3, [r7, #4]
 8009b7c:	887a      	ldrh	r2, [r7, #2]
 8009b7e:	809a      	strh	r2, [r3, #4]
    }
 8009b80:	bf00      	nop
 8009b82:	370c      	adds	r7, #12
 8009b84:	46bd      	mov	sp, r7
 8009b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b8a:	4770      	bx	lr

08009b8c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param y The new y value, relative to the parent. A negative value is allowed.
     */
    virtual void setY(int16_t y)
 8009b8c:	b480      	push	{r7}
 8009b8e:	b083      	sub	sp, #12
 8009b90:	af00      	add	r7, sp, #0
 8009b92:	6078      	str	r0, [r7, #4]
 8009b94:	460b      	mov	r3, r1
 8009b96:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 8009b98:	687b      	ldr	r3, [r7, #4]
 8009b9a:	887a      	ldrh	r2, [r7, #2]
 8009b9c:	80da      	strh	r2, [r3, #6]
    }
 8009b9e:	bf00      	nop
 8009ba0:	370c      	adds	r7, #12
 8009ba2:	46bd      	mov	sp, r7
 8009ba4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ba8:	4770      	bx	lr

08009baa <_ZN8touchgfx8Drawable5setXYEss>:
     * @note Changing this does not automatically yield a redraw.
     *
     * @param x The new x value, relative to the parent. A negative value is allowed.
     * @param y The new y value, relative to the parent. A negative value is allowed.
     */
    virtual void setXY(int16_t x, int16_t y)
 8009baa:	b580      	push	{r7, lr}
 8009bac:	b082      	sub	sp, #8
 8009bae:	af00      	add	r7, sp, #0
 8009bb0:	6078      	str	r0, [r7, #4]
 8009bb2:	460b      	mov	r3, r1
 8009bb4:	807b      	strh	r3, [r7, #2]
 8009bb6:	4613      	mov	r3, r2
 8009bb8:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8009bba:	687b      	ldr	r3, [r7, #4]
 8009bbc:	681b      	ldr	r3, [r3, #0]
 8009bbe:	332c      	adds	r3, #44	; 0x2c
 8009bc0:	681b      	ldr	r3, [r3, #0]
 8009bc2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8009bc6:	4611      	mov	r1, r2
 8009bc8:	6878      	ldr	r0, [r7, #4]
 8009bca:	4798      	blx	r3
        setY(y);
 8009bcc:	687b      	ldr	r3, [r7, #4]
 8009bce:	681b      	ldr	r3, [r3, #0]
 8009bd0:	3330      	adds	r3, #48	; 0x30
 8009bd2:	681b      	ldr	r3, [r3, #0]
 8009bd4:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009bd8:	4611      	mov	r1, r2
 8009bda:	6878      	ldr	r0, [r7, #4]
 8009bdc:	4798      	blx	r3
    }
 8009bde:	bf00      	nop
 8009be0:	3708      	adds	r7, #8
 8009be2:	46bd      	mov	sp, r7
 8009be4:	bd80      	pop	{r7, pc}

08009be6 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param width The new width.
     */
    virtual void setWidth(int16_t width)
 8009be6:	b480      	push	{r7}
 8009be8:	b083      	sub	sp, #12
 8009bea:	af00      	add	r7, sp, #0
 8009bec:	6078      	str	r0, [r7, #4]
 8009bee:	460b      	mov	r3, r1
 8009bf0:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 8009bf2:	687b      	ldr	r3, [r7, #4]
 8009bf4:	887a      	ldrh	r2, [r7, #2]
 8009bf6:	811a      	strh	r2, [r3, #8]
    }
 8009bf8:	bf00      	nop
 8009bfa:	370c      	adds	r7, #12
 8009bfc:	46bd      	mov	sp, r7
 8009bfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c02:	4770      	bx	lr

08009c04 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param height The new height.
     */
    virtual void setHeight(int16_t height)
 8009c04:	b480      	push	{r7}
 8009c06:	b083      	sub	sp, #12
 8009c08:	af00      	add	r7, sp, #0
 8009c0a:	6078      	str	r0, [r7, #4]
 8009c0c:	460b      	mov	r3, r1
 8009c0e:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8009c10:	687b      	ldr	r3, [r7, #4]
 8009c12:	887a      	ldrh	r2, [r7, #2]
 8009c14:	815a      	strh	r2, [r3, #10]
    }
 8009c16:	bf00      	nop
 8009c18:	370c      	adds	r7, #12
 8009c1a:	46bd      	mov	sp, r7
 8009c1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c20:	4770      	bx	lr

08009c22 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     *
     *        This function can be called on parent nodes to signal that the size of one or
     *        more of its children has changed. Currently only used in ScrollableContainer to
     *        redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged() { }
 8009c22:	b480      	push	{r7}
 8009c24:	b083      	sub	sp, #12
 8009c26:	af00      	add	r7, sp, #0
 8009c28:	6078      	str	r0, [r7, #4]
 8009c2a:	bf00      	nop
 8009c2c:	370c      	adds	r7, #12
 8009c2e:	46bd      	mov	sp, r7
 8009c30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c34:	4770      	bx	lr

08009c36 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *        Defines the event handler interface for ClickEvents. The default implementation
     *        ignores the event. The event is only received if the drawable is touchable.
     *
     * @param evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt) { }
 8009c36:	b480      	push	{r7}
 8009c38:	b083      	sub	sp, #12
 8009c3a:	af00      	add	r7, sp, #0
 8009c3c:	6078      	str	r0, [r7, #4]
 8009c3e:	6039      	str	r1, [r7, #0]
 8009c40:	bf00      	nop
 8009c42:	370c      	adds	r7, #12
 8009c44:	46bd      	mov	sp, r7
 8009c46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c4a:	4770      	bx	lr

08009c4c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *        Defines the event handler interface for GestureEvents. The default implementation
     *        ignores the event. The event is only received if the drawable is touchable.
     *
     * @param evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt) { }
 8009c4c:	b480      	push	{r7}
 8009c4e:	b083      	sub	sp, #12
 8009c50:	af00      	add	r7, sp, #0
 8009c52:	6078      	str	r0, [r7, #4]
 8009c54:	6039      	str	r1, [r7, #0]
 8009c56:	bf00      	nop
 8009c58:	370c      	adds	r7, #12
 8009c5a:	46bd      	mov	sp, r7
 8009c5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c60:	4770      	bx	lr

08009c62 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *        Defines the event handler interface for DragEvents. The event is only received if
     *        the drawable is touchable.
     *
     * @param evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt) { }
 8009c62:	b480      	push	{r7}
 8009c64:	b083      	sub	sp, #12
 8009c66:	af00      	add	r7, sp, #0
 8009c68:	6078      	str	r0, [r7, #4]
 8009c6a:	6039      	str	r1, [r7, #0]
 8009c6c:	bf00      	nop
 8009c6e:	370c      	adds	r7, #12
 8009c70:	46bd      	mov	sp, r7
 8009c72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c76:	4770      	bx	lr

08009c78 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *        Called periodically by the framework if the Drawable instance has subscribed to
     *        timer ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent() { }
 8009c78:	b480      	push	{r7}
 8009c7a:	b083      	sub	sp, #12
 8009c7c:	af00      	add	r7, sp, #0
 8009c7e:	6078      	str	r0, [r7, #4]
 8009c80:	bf00      	nop
 8009c82:	370c      	adds	r7, #12
 8009c84:	46bd      	mov	sp, r7
 8009c86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c8a:	4770      	bx	lr

08009c8c <_ZN8touchgfx8Drawable12setTouchableEb>:
     *
     *        Controls whether this Drawable receives touch events or not.
     *
     * @param touch If true  it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 8009c8c:	b480      	push	{r7}
 8009c8e:	b083      	sub	sp, #12
 8009c90:	af00      	add	r7, sp, #0
 8009c92:	6078      	str	r0, [r7, #4]
 8009c94:	460b      	mov	r3, r1
 8009c96:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 8009c98:	687b      	ldr	r3, [r7, #4]
 8009c9a:	78fa      	ldrb	r2, [r7, #3]
 8009c9c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    }
 8009ca0:	bf00      	nop
 8009ca2:	370c      	adds	r7, #12
 8009ca4:	46bd      	mov	sp, r7
 8009ca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009caa:	4770      	bx	lr

08009cac <_ZNK8touchgfx8Drawable9isVisibleEv>:
     * @return true if the Drawable is visible.
     * @return True if visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8009cac:	b480      	push	{r7}
 8009cae:	b083      	sub	sp, #12
 8009cb0:	af00      	add	r7, sp, #0
 8009cb2:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8009cb4:	687b      	ldr	r3, [r7, #4]
 8009cb6:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 8009cba:	4618      	mov	r0, r3
 8009cbc:	370c      	adds	r7, #12
 8009cbe:	46bd      	mov	sp, r7
 8009cc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cc4:	4770      	bx	lr

08009cc6 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 8009cc6:	b480      	push	{r7}
 8009cc8:	b083      	sub	sp, #12
 8009cca:	af00      	add	r7, sp, #0
 8009ccc:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 8009cce:	687b      	ldr	r3, [r7, #4]
 8009cd0:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 8009cd4:	4618      	mov	r0, r3
 8009cd6:	370c      	adds	r7, #12
 8009cd8:	46bd      	mov	sp, r7
 8009cda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cde:	4770      	bx	lr

08009ce0 <_ZN8touchgfx8Drawable6moveToEss>:
     * @note Will redraw the appropriate areas of the screen.
     *
     * @param x The absolute position to move to.
     * @param y The absolute position to move to.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8009ce0:	b580      	push	{r7, lr}
 8009ce2:	b082      	sub	sp, #8
 8009ce4:	af00      	add	r7, sp, #0
 8009ce6:	6078      	str	r0, [r7, #4]
 8009ce8:	460b      	mov	r3, r1
 8009cea:	807b      	strh	r3, [r7, #2]
 8009cec:	4613      	mov	r3, r2
 8009cee:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 8009cf0:	687b      	ldr	r3, [r7, #4]
 8009cf2:	681b      	ldr	r3, [r3, #0]
 8009cf4:	3354      	adds	r3, #84	; 0x54
 8009cf6:	681b      	ldr	r3, [r3, #0]
 8009cf8:	8879      	ldrh	r1, [r7, #2]
 8009cfa:	687a      	ldr	r2, [r7, #4]
 8009cfc:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8009d00:	b292      	uxth	r2, r2
 8009d02:	1a8a      	subs	r2, r1, r2
 8009d04:	b292      	uxth	r2, r2
 8009d06:	b210      	sxth	r0, r2
 8009d08:	8839      	ldrh	r1, [r7, #0]
 8009d0a:	687a      	ldr	r2, [r7, #4]
 8009d0c:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8009d10:	b292      	uxth	r2, r2
 8009d12:	1a8a      	subs	r2, r1, r2
 8009d14:	b292      	uxth	r2, r2
 8009d16:	b212      	sxth	r2, r2
 8009d18:	4601      	mov	r1, r0
 8009d1a:	6878      	ldr	r0, [r7, #4]
 8009d1c:	4798      	blx	r3
    }
 8009d1e:	bf00      	nop
 8009d20:	3708      	adds	r7, #8
 8009d22:	46bd      	mov	sp, r7
 8009d24:	bd80      	pop	{r7, pc}

08009d26 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     *        Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 8009d26:	b480      	push	{r7}
 8009d28:	b083      	sub	sp, #12
 8009d2a:	af00      	add	r7, sp, #0
 8009d2c:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8009d2e:	687b      	ldr	r3, [r7, #4]
 8009d30:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009d34:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8009d36:	687b      	ldr	r3, [r7, #4]
 8009d38:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009d3c:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 8009d3e:	687b      	ldr	r3, [r7, #4]
 8009d40:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009d44:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 8009d46:	bf00      	nop
 8009d48:	370c      	adds	r7, #12
 8009d4a:	46bd      	mov	sp, r7
 8009d4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d50:	4770      	bx	lr

08009d52 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     *
     * @param invalidatedArea              Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 8009d52:	b580      	push	{r7, lr}
 8009d54:	b084      	sub	sp, #16
 8009d56:	af00      	add	r7, sp, #0
 8009d58:	60f8      	str	r0, [r7, #12]
 8009d5a:	60b9      	str	r1, [r7, #8]
 8009d5c:	607a      	str	r2, [r7, #4]
    {
        resetDrawChainCache();
 8009d5e:	68f8      	ldr	r0, [r7, #12]
 8009d60:	f7ff ffe1 	bl	8009d26 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 8009d64:	687b      	ldr	r3, [r7, #4]
 8009d66:	681a      	ldr	r2, [r3, #0]
 8009d68:	68fb      	ldr	r3, [r7, #12]
 8009d6a:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 8009d6c:	687b      	ldr	r3, [r7, #4]
 8009d6e:	68fa      	ldr	r2, [r7, #12]
 8009d70:	601a      	str	r2, [r3, #0]
    }
 8009d72:	bf00      	nop
 8009d74:	3710      	adds	r7, #16
 8009d76:	46bd      	mov	sp, r7
 8009d78:	bd80      	pop	{r7, pc}
	...

08009d7c <_ZN8touchgfx9ContainerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Container() { }
 8009d7c:	b580      	push	{r7, lr}
 8009d7e:	b082      	sub	sp, #8
 8009d80:	af00      	add	r7, sp, #0
 8009d82:	6078      	str	r0, [r7, #4]
 8009d84:	4a05      	ldr	r2, [pc, #20]	; (8009d9c <_ZN8touchgfx9ContainerD1Ev+0x20>)
 8009d86:	687b      	ldr	r3, [r7, #4]
 8009d88:	601a      	str	r2, [r3, #0]
 8009d8a:	687b      	ldr	r3, [r7, #4]
 8009d8c:	4618      	mov	r0, r3
 8009d8e:	f7ff fea1 	bl	8009ad4 <_ZN8touchgfx8DrawableD1Ev>
 8009d92:	687b      	ldr	r3, [r7, #4]
 8009d94:	4618      	mov	r0, r3
 8009d96:	3708      	adds	r7, #8
 8009d98:	46bd      	mov	sp, r7
 8009d9a:	bd80      	pop	{r7, pc}
 8009d9c:	0801d57c 	.word	0x0801d57c

08009da0 <_ZN8touchgfx9ContainerD0Ev>:
 8009da0:	b580      	push	{r7, lr}
 8009da2:	b082      	sub	sp, #8
 8009da4:	af00      	add	r7, sp, #0
 8009da6:	6078      	str	r0, [r7, #4]
 8009da8:	6878      	ldr	r0, [r7, #4]
 8009daa:	f7ff ffe7 	bl	8009d7c <_ZN8touchgfx9ContainerD1Ev>
 8009dae:	212c      	movs	r1, #44	; 0x2c
 8009db0:	6878      	ldr	r0, [r7, #4]
 8009db2:	f011 fa31 	bl	801b218 <_ZdlPvj>
 8009db6:	687b      	ldr	r3, [r7, #4]
 8009db8:	4618      	mov	r0, r3
 8009dba:	3708      	adds	r7, #8
 8009dbc:	46bd      	mov	sp, r7
 8009dbe:	bd80      	pop	{r7, pc}

08009dc0 <_ZN8touchgfx6ScreenD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Screen() { }
 8009dc0:	b580      	push	{r7, lr}
 8009dc2:	b082      	sub	sp, #8
 8009dc4:	af00      	add	r7, sp, #0
 8009dc6:	6078      	str	r0, [r7, #4]
 8009dc8:	4a06      	ldr	r2, [pc, #24]	; (8009de4 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 8009dca:	687b      	ldr	r3, [r7, #4]
 8009dcc:	601a      	str	r2, [r3, #0]
 8009dce:	687b      	ldr	r3, [r7, #4]
 8009dd0:	3304      	adds	r3, #4
 8009dd2:	4618      	mov	r0, r3
 8009dd4:	f7ff ffd2 	bl	8009d7c <_ZN8touchgfx9ContainerD1Ev>
 8009dd8:	687b      	ldr	r3, [r7, #4]
 8009dda:	4618      	mov	r0, r3
 8009ddc:	3708      	adds	r7, #8
 8009dde:	46bd      	mov	sp, r7
 8009de0:	bd80      	pop	{r7, pc}
 8009de2:	bf00      	nop
 8009de4:	0801e20c 	.word	0x0801e20c

08009de8 <_ZN8touchgfx6ScreenD0Ev>:
 8009de8:	b580      	push	{r7, lr}
 8009dea:	b082      	sub	sp, #8
 8009dec:	af00      	add	r7, sp, #0
 8009dee:	6078      	str	r0, [r7, #4]
 8009df0:	6878      	ldr	r0, [r7, #4]
 8009df2:	f7ff ffe5 	bl	8009dc0 <_ZN8touchgfx6ScreenD1Ev>
 8009df6:	213c      	movs	r1, #60	; 0x3c
 8009df8:	6878      	ldr	r0, [r7, #4]
 8009dfa:	f011 fa0d 	bl	801b218 <_ZdlPvj>
 8009dfe:	687b      	ldr	r3, [r7, #4]
 8009e00:	4618      	mov	r0, r3
 8009e02:	3708      	adds	r7, #8
 8009e04:	46bd      	mov	sp, r7
 8009e06:	bd80      	pop	{r7, pc}

08009e08 <_ZN8touchgfx6Screen11setupScreenEv>:
     *        Base version does nothing, but place any screen specific initialization code in
     *        an overridden version.
     *
     * @see touchgfx::Application::switchScreen()
     */
    virtual void setupScreen() { }
 8009e08:	b480      	push	{r7}
 8009e0a:	b083      	sub	sp, #12
 8009e0c:	af00      	add	r7, sp, #0
 8009e0e:	6078      	str	r0, [r7, #4]
 8009e10:	bf00      	nop
 8009e12:	370c      	adds	r7, #12
 8009e14:	46bd      	mov	sp, r7
 8009e16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e1a:	4770      	bx	lr

08009e1c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *        Base version does nothing, but override to do screen specific initialization code
     *        that has to be done after the transition to the screen.
     *
     * @see touchgfx::Application::handleTick()
     */
    virtual void afterTransition() { }
 8009e1c:	b480      	push	{r7}
 8009e1e:	b083      	sub	sp, #12
 8009e20:	af00      	add	r7, sp, #0
 8009e22:	6078      	str	r0, [r7, #4]
 8009e24:	bf00      	nop
 8009e26:	370c      	adds	r7, #12
 8009e28:	46bd      	mov	sp, r7
 8009e2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e2e:	4770      	bx	lr

08009e30 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *        displayed. Base version does nothing, but place any screen specific cleanup code
     *        in an overridden version.
     *
     * @see touchgfx::Application::switchScreen()
     */
    virtual void tearDownScreen() { }
 8009e30:	b480      	push	{r7}
 8009e32:	b083      	sub	sp, #12
 8009e34:	af00      	add	r7, sp, #0
 8009e36:	6078      	str	r0, [r7, #4]
 8009e38:	bf00      	nop
 8009e3a:	370c      	adds	r7, #12
 8009e3c:	46bd      	mov	sp, r7
 8009e3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e42:	4770      	bx	lr

08009e44 <_ZN8touchgfx6Screen15handleTickEventEv>:
     *        Application::TICK_INTERVAL_MS.
     *
     *        Called by the Application on the current screen with a frequency of
     *        Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 8009e44:	b480      	push	{r7}
 8009e46:	b083      	sub	sp, #12
 8009e48:	af00      	add	r7, sp, #0
 8009e4a:	6078      	str	r0, [r7, #4]
    {
    }
 8009e4c:	bf00      	nop
 8009e4e:	370c      	adds	r7, #12
 8009e50:	46bd      	mov	sp, r7
 8009e52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e56:	4770      	bx	lr

08009e58 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *        Called by the Application on the reception of a "key", the meaning of which is
     *        platform/application specific. Default implementation does nothing.
     *
     * @param key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 8009e58:	b480      	push	{r7}
 8009e5a:	b083      	sub	sp, #12
 8009e5c:	af00      	add	r7, sp, #0
 8009e5e:	6078      	str	r0, [r7, #4]
 8009e60:	460b      	mov	r3, r1
 8009e62:	70fb      	strb	r3, [r7, #3]
    {
    }
 8009e64:	bf00      	nop
 8009e66:	370c      	adds	r7, #12
 8009e68:	46bd      	mov	sp, r7
 8009e6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e6e:	4770      	bx	lr

08009e70 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     *
     * @param [in] d The Drawable to add.
     */
    void add(Drawable& d)
 8009e70:	b580      	push	{r7, lr}
 8009e72:	b082      	sub	sp, #8
 8009e74:	af00      	add	r7, sp, #0
 8009e76:	6078      	str	r0, [r7, #4]
 8009e78:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 8009e7a:	687b      	ldr	r3, [r7, #4]
 8009e7c:	3304      	adds	r3, #4
 8009e7e:	6839      	ldr	r1, [r7, #0]
 8009e80:	4618      	mov	r0, r3
 8009e82:	f002 fb47 	bl	800c514 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8009e86:	bf00      	nop
 8009e88:	3708      	adds	r7, #8
 8009e8a:	46bd      	mov	sp, r7
 8009e8c:	bd80      	pop	{r7, pc}
	...

08009e90 <_ZN8touchgfx6WidgetC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Widget() : Drawable() { }
 8009e90:	b580      	push	{r7, lr}
 8009e92:	b082      	sub	sp, #8
 8009e94:	af00      	add	r7, sp, #0
 8009e96:	6078      	str	r0, [r7, #4]
 8009e98:	687b      	ldr	r3, [r7, #4]
 8009e9a:	4618      	mov	r0, r3
 8009e9c:	f7ff fdec 	bl	8009a78 <_ZN8touchgfx8DrawableC1Ev>
 8009ea0:	4a03      	ldr	r2, [pc, #12]	; (8009eb0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8009ea2:	687b      	ldr	r3, [r7, #4]
 8009ea4:	601a      	str	r2, [r3, #0]
 8009ea6:	687b      	ldr	r3, [r7, #4]
 8009ea8:	4618      	mov	r0, r3
 8009eaa:	3708      	adds	r7, #8
 8009eac:	46bd      	mov	sp, r7
 8009eae:	bd80      	pop	{r7, pc}
 8009eb0:	0801cdbc 	.word	0x0801cdbc

08009eb4 <_ZN8touchgfx6WidgetD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Widget() { }
 8009eb4:	b580      	push	{r7, lr}
 8009eb6:	b082      	sub	sp, #8
 8009eb8:	af00      	add	r7, sp, #0
 8009eba:	6078      	str	r0, [r7, #4]
 8009ebc:	4a05      	ldr	r2, [pc, #20]	; (8009ed4 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 8009ebe:	687b      	ldr	r3, [r7, #4]
 8009ec0:	601a      	str	r2, [r3, #0]
 8009ec2:	687b      	ldr	r3, [r7, #4]
 8009ec4:	4618      	mov	r0, r3
 8009ec6:	f7ff fe05 	bl	8009ad4 <_ZN8touchgfx8DrawableD1Ev>
 8009eca:	687b      	ldr	r3, [r7, #4]
 8009ecc:	4618      	mov	r0, r3
 8009ece:	3708      	adds	r7, #8
 8009ed0:	46bd      	mov	sp, r7
 8009ed2:	bd80      	pop	{r7, pc}
 8009ed4:	0801cdbc 	.word	0x0801cdbc

08009ed8 <_ZN8touchgfx6WidgetD0Ev>:
 8009ed8:	b580      	push	{r7, lr}
 8009eda:	b082      	sub	sp, #8
 8009edc:	af00      	add	r7, sp, #0
 8009ede:	6078      	str	r0, [r7, #4]
 8009ee0:	6878      	ldr	r0, [r7, #4]
 8009ee2:	f7ff ffe7 	bl	8009eb4 <_ZN8touchgfx6WidgetD1Ev>
 8009ee6:	2128      	movs	r1, #40	; 0x28
 8009ee8:	6878      	ldr	r0, [r7, #4]
 8009eea:	f011 f995 	bl	801b218 <_ZdlPvj>
 8009eee:	687b      	ldr	r3, [r7, #4]
 8009ef0:	4618      	mov	r0, r3
 8009ef2:	3708      	adds	r7, #8
 8009ef4:	46bd      	mov	sp, r7
 8009ef6:	bd80      	pop	{r7, pc}

08009ef8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param x          The point of intersection expressed in coordinates relative to the parent.
     * @param y          The y coordinate.
     * @param [out] last Result will be placed here.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
 8009ef8:	b580      	push	{r7, lr}
 8009efa:	b084      	sub	sp, #16
 8009efc:	af00      	add	r7, sp, #0
 8009efe:	60f8      	str	r0, [r7, #12]
 8009f00:	607b      	str	r3, [r7, #4]
 8009f02:	460b      	mov	r3, r1
 8009f04:	817b      	strh	r3, [r7, #10]
 8009f06:	4613      	mov	r3, r2
 8009f08:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 8009f0a:	68fb      	ldr	r3, [r7, #12]
 8009f0c:	4618      	mov	r0, r3
 8009f0e:	f7ff fecd 	bl	8009cac <_ZNK8touchgfx8Drawable9isVisibleEv>
 8009f12:	4603      	mov	r3, r0
 8009f14:	2b00      	cmp	r3, #0
 8009f16:	d008      	beq.n	8009f2a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8009f18:	68fb      	ldr	r3, [r7, #12]
 8009f1a:	4618      	mov	r0, r3
 8009f1c:	f7ff fed3 	bl	8009cc6 <_ZNK8touchgfx8Drawable11isTouchableEv>
 8009f20:	4603      	mov	r3, r0
 8009f22:	2b00      	cmp	r3, #0
 8009f24:	d001      	beq.n	8009f2a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8009f26:	2301      	movs	r3, #1
 8009f28:	e000      	b.n	8009f2c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 8009f2a:	2300      	movs	r3, #0
 8009f2c:	2b00      	cmp	r3, #0
 8009f2e:	d002      	beq.n	8009f36 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 8009f30:	68fa      	ldr	r2, [r7, #12]
 8009f32:	687b      	ldr	r3, [r7, #4]
 8009f34:	601a      	str	r2, [r3, #0]
        }
    }
 8009f36:	bf00      	nop
 8009f38:	3710      	adds	r7, #16
 8009f3a:	46bd      	mov	sp, r7
 8009f3c:	bd80      	pop	{r7, pc}
	...

08009f40 <_ZN8touchgfx14AbstractButtonC1Ev>:
     * @brief Constructor.
     *
     *        Constructs an AbstractButton instance in released state without an associated
     *        action.
     */
    AbstractButton() : Widget(), action(), pressed(false)
 8009f40:	b580      	push	{r7, lr}
 8009f42:	b082      	sub	sp, #8
 8009f44:	af00      	add	r7, sp, #0
 8009f46:	6078      	str	r0, [r7, #4]
 8009f48:	687b      	ldr	r3, [r7, #4]
 8009f4a:	4618      	mov	r0, r3
 8009f4c:	f7ff ffa0 	bl	8009e90 <_ZN8touchgfx6WidgetC1Ev>
 8009f50:	4a09      	ldr	r2, [pc, #36]	; (8009f78 <_ZN8touchgfx14AbstractButtonC1Ev+0x38>)
 8009f52:	687b      	ldr	r3, [r7, #4]
 8009f54:	601a      	str	r2, [r3, #0]
 8009f56:	687b      	ldr	r3, [r7, #4]
 8009f58:	2200      	movs	r2, #0
 8009f5a:	629a      	str	r2, [r3, #40]	; 0x28
 8009f5c:	687b      	ldr	r3, [r7, #4]
 8009f5e:	2200      	movs	r2, #0
 8009f60:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    {
        setTouchable(true);
 8009f64:	687b      	ldr	r3, [r7, #4]
 8009f66:	2101      	movs	r1, #1
 8009f68:	4618      	mov	r0, r3
 8009f6a:	f7ff fe8f 	bl	8009c8c <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 8009f6e:	687b      	ldr	r3, [r7, #4]
 8009f70:	4618      	mov	r0, r3
 8009f72:	3708      	adds	r7, #8
 8009f74:	46bd      	mov	sp, r7
 8009f76:	bd80      	pop	{r7, pc}
 8009f78:	0801dd8c 	.word	0x0801dd8c

08009f7c <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 8009f7c:	b580      	push	{r7, lr}
 8009f7e:	b082      	sub	sp, #8
 8009f80:	af00      	add	r7, sp, #0
 8009f82:	6078      	str	r0, [r7, #4]
 8009f84:	4a05      	ldr	r2, [pc, #20]	; (8009f9c <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 8009f86:	687b      	ldr	r3, [r7, #4]
 8009f88:	601a      	str	r2, [r3, #0]
 8009f8a:	687b      	ldr	r3, [r7, #4]
 8009f8c:	4618      	mov	r0, r3
 8009f8e:	f7ff ff91 	bl	8009eb4 <_ZN8touchgfx6WidgetD1Ev>
 8009f92:	687b      	ldr	r3, [r7, #4]
 8009f94:	4618      	mov	r0, r3
 8009f96:	3708      	adds	r7, #8
 8009f98:	46bd      	mov	sp, r7
 8009f9a:	bd80      	pop	{r7, pc}
 8009f9c:	0801dd8c 	.word	0x0801dd8c

08009fa0 <_ZN8touchgfx14AbstractButtonD0Ev>:
 8009fa0:	b580      	push	{r7, lr}
 8009fa2:	b082      	sub	sp, #8
 8009fa4:	af00      	add	r7, sp, #0
 8009fa6:	6078      	str	r0, [r7, #4]
 8009fa8:	6878      	ldr	r0, [r7, #4]
 8009faa:	f7ff ffe7 	bl	8009f7c <_ZN8touchgfx14AbstractButtonD1Ev>
 8009fae:	2130      	movs	r1, #48	; 0x30
 8009fb0:	6878      	ldr	r0, [r7, #4]
 8009fb2:	f011 f931 	bl	801b218 <_ZdlPvj>
 8009fb6:	687b      	ldr	r3, [r7, #4]
 8009fb8:	4618      	mov	r0, r3
 8009fba:	3708      	adds	r7, #8
 8009fbc:	46bd      	mov	sp, r7
 8009fbe:	bd80      	pop	{r7, pc}

08009fc0 <_ZN8touchgfx6ButtonC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Button() : AbstractButton(), up(), down(), alpha(255) { }
 8009fc0:	b580      	push	{r7, lr}
 8009fc2:	b082      	sub	sp, #8
 8009fc4:	af00      	add	r7, sp, #0
 8009fc6:	6078      	str	r0, [r7, #4]
 8009fc8:	687b      	ldr	r3, [r7, #4]
 8009fca:	4618      	mov	r0, r3
 8009fcc:	f7ff ffb8 	bl	8009f40 <_ZN8touchgfx14AbstractButtonC1Ev>
 8009fd0:	4a0c      	ldr	r2, [pc, #48]	; (800a004 <_ZN8touchgfx6ButtonC1Ev+0x44>)
 8009fd2:	687b      	ldr	r3, [r7, #4]
 8009fd4:	601a      	str	r2, [r3, #0]
 8009fd6:	687b      	ldr	r3, [r7, #4]
 8009fd8:	332e      	adds	r3, #46	; 0x2e
 8009fda:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009fde:	4618      	mov	r0, r3
 8009fe0:	f7ff fd39 	bl	8009a56 <_ZN8touchgfx6BitmapC1Et>
 8009fe4:	687b      	ldr	r3, [r7, #4]
 8009fe6:	3330      	adds	r3, #48	; 0x30
 8009fe8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009fec:	4618      	mov	r0, r3
 8009fee:	f7ff fd32 	bl	8009a56 <_ZN8touchgfx6BitmapC1Et>
 8009ff2:	687b      	ldr	r3, [r7, #4]
 8009ff4:	22ff      	movs	r2, #255	; 0xff
 8009ff6:	f883 2032 	strb.w	r2, [r3, #50]	; 0x32
 8009ffa:	687b      	ldr	r3, [r7, #4]
 8009ffc:	4618      	mov	r0, r3
 8009ffe:	3708      	adds	r7, #8
 800a000:	46bd      	mov	sp, r7
 800a002:	bd80      	pop	{r7, pc}
 800a004:	0801de5c 	.word	0x0801de5c

0800a008 <_ZN8touchgfx6ButtonD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Button() { }
 800a008:	b580      	push	{r7, lr}
 800a00a:	b082      	sub	sp, #8
 800a00c:	af00      	add	r7, sp, #0
 800a00e:	6078      	str	r0, [r7, #4]
 800a010:	4a05      	ldr	r2, [pc, #20]	; (800a028 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800a012:	687b      	ldr	r3, [r7, #4]
 800a014:	601a      	str	r2, [r3, #0]
 800a016:	687b      	ldr	r3, [r7, #4]
 800a018:	4618      	mov	r0, r3
 800a01a:	f7ff ffaf 	bl	8009f7c <_ZN8touchgfx14AbstractButtonD1Ev>
 800a01e:	687b      	ldr	r3, [r7, #4]
 800a020:	4618      	mov	r0, r3
 800a022:	3708      	adds	r7, #8
 800a024:	46bd      	mov	sp, r7
 800a026:	bd80      	pop	{r7, pc}
 800a028:	0801de5c 	.word	0x0801de5c

0800a02c <_ZN8touchgfx6ButtonD0Ev>:
 800a02c:	b580      	push	{r7, lr}
 800a02e:	b082      	sub	sp, #8
 800a030:	af00      	add	r7, sp, #0
 800a032:	6078      	str	r0, [r7, #4]
 800a034:	6878      	ldr	r0, [r7, #4]
 800a036:	f7ff ffe7 	bl	800a008 <_ZN8touchgfx6ButtonD1Ev>
 800a03a:	2134      	movs	r1, #52	; 0x34
 800a03c:	6878      	ldr	r0, [r7, #4]
 800a03e:	f011 f8eb 	bl	801b218 <_ZdlPvj>
 800a042:	687b      	ldr	r3, [r7, #4]
 800a044:	4618      	mov	r0, r3
 800a046:	3708      	adds	r7, #8
 800a048:	46bd      	mov	sp, r7
 800a04a:	bd80      	pop	{r7, pc}

0800a04c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 800a04c:	b580      	push	{r7, lr}
 800a04e:	b082      	sub	sp, #8
 800a050:	af00      	add	r7, sp, #0
 800a052:	6078      	str	r0, [r7, #4]
 800a054:	4a05      	ldr	r2, [pc, #20]	; (800a06c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 800a056:	687b      	ldr	r3, [r7, #4]
 800a058:	601a      	str	r2, [r3, #0]
 800a05a:	687b      	ldr	r3, [r7, #4]
 800a05c:	4618      	mov	r0, r3
 800a05e:	f7ff feaf 	bl	8009dc0 <_ZN8touchgfx6ScreenD1Ev>
 800a062:	687b      	ldr	r3, [r7, #4]
 800a064:	4618      	mov	r0, r3
 800a066:	3708      	adds	r7, #8
 800a068:	46bd      	mov	sp, r7
 800a06a:	bd80      	pop	{r7, pc}
 800a06c:	0801cd88 	.word	0x0801cd88

0800a070 <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 800a070:	b580      	push	{r7, lr}
 800a072:	b082      	sub	sp, #8
 800a074:	af00      	add	r7, sp, #0
 800a076:	6078      	str	r0, [r7, #4]
 800a078:	6878      	ldr	r0, [r7, #4]
 800a07a:	f7ff ffe7 	bl	800a04c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800a07e:	2140      	movs	r1, #64	; 0x40
 800a080:	6878      	ldr	r0, [r7, #4]
 800a082:	f011 f8c9 	bl	801b218 <_ZdlPvj>
 800a086:	687b      	ldr	r3, [r7, #4]
 800a088:	4618      	mov	r0, r3
 800a08a:	3708      	adds	r7, #8
 800a08c:	46bd      	mov	sp, r7
 800a08e:	bd80      	pop	{r7, pc}

0800a090 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 800a090:	b580      	push	{r7, lr}
 800a092:	b082      	sub	sp, #8
 800a094:	af00      	add	r7, sp, #0
 800a096:	6078      	str	r0, [r7, #4]
 800a098:	4a08      	ldr	r2, [pc, #32]	; (800a0bc <_ZN15Screen1ViewBaseD1Ev+0x2c>)
 800a09a:	687b      	ldr	r3, [r7, #4]
 800a09c:	601a      	str	r2, [r3, #0]
 800a09e:	687b      	ldr	r3, [r7, #4]
 800a0a0:	3340      	adds	r3, #64	; 0x40
 800a0a2:	4618      	mov	r0, r3
 800a0a4:	f7ff ffb0 	bl	800a008 <_ZN8touchgfx6ButtonD1Ev>
 800a0a8:	687b      	ldr	r3, [r7, #4]
 800a0aa:	4618      	mov	r0, r3
 800a0ac:	f7ff ffce 	bl	800a04c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800a0b0:	687b      	ldr	r3, [r7, #4]
 800a0b2:	4618      	mov	r0, r3
 800a0b4:	3708      	adds	r7, #8
 800a0b6:	46bd      	mov	sp, r7
 800a0b8:	bd80      	pop	{r7, pc}
 800a0ba:	bf00      	nop
 800a0bc:	0801cd54 	.word	0x0801cd54

0800a0c0 <_ZN15Screen1ViewBaseD0Ev>:
 800a0c0:	b580      	push	{r7, lr}
 800a0c2:	b082      	sub	sp, #8
 800a0c4:	af00      	add	r7, sp, #0
 800a0c6:	6078      	str	r0, [r7, #4]
 800a0c8:	6878      	ldr	r0, [r7, #4]
 800a0ca:	f7ff ffe1 	bl	800a090 <_ZN15Screen1ViewBaseD1Ev>
 800a0ce:	2174      	movs	r1, #116	; 0x74
 800a0d0:	6878      	ldr	r0, [r7, #4]
 800a0d2:	f011 f8a1 	bl	801b218 <_ZdlPvj>
 800a0d6:	687b      	ldr	r3, [r7, #4]
 800a0d8:	4618      	mov	r0, r3
 800a0da:	3708      	adds	r7, #8
 800a0dc:	46bd      	mov	sp, r7
 800a0de:	bd80      	pop	{r7, pc}

0800a0e0 <_ZN15Screen1ViewBaseC1Ev>:
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include "BitmapDatabase.hpp"

Screen1ViewBase::Screen1ViewBase()
 800a0e0:	b590      	push	{r4, r7, lr}
 800a0e2:	b085      	sub	sp, #20
 800a0e4:	af00      	add	r7, sp, #0
 800a0e6:	6078      	str	r0, [r7, #4]
 800a0e8:	687b      	ldr	r3, [r7, #4]
 800a0ea:	4618      	mov	r0, r3
 800a0ec:	f000 f83e 	bl	800a16c <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>
 800a0f0:	4a18      	ldr	r2, [pc, #96]	; (800a154 <_ZN15Screen1ViewBaseC1Ev+0x74>)
 800a0f2:	687b      	ldr	r3, [r7, #4]
 800a0f4:	601a      	str	r2, [r3, #0]
 800a0f6:	687b      	ldr	r3, [r7, #4]
 800a0f8:	3340      	adds	r3, #64	; 0x40
 800a0fa:	4618      	mov	r0, r3
 800a0fc:	f7ff ff60 	bl	8009fc0 <_ZN8touchgfx6ButtonC1Ev>
{

    button1.setXY(35, 106);
 800a100:	687b      	ldr	r3, [r7, #4]
 800a102:	3340      	adds	r3, #64	; 0x40
 800a104:	226a      	movs	r2, #106	; 0x6a
 800a106:	2123      	movs	r1, #35	; 0x23
 800a108:	4618      	mov	r0, r3
 800a10a:	f7ff fd4e 	bl	8009baa <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 800a10e:	687b      	ldr	r3, [r7, #4]
 800a110:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800a114:	f107 0308 	add.w	r3, r7, #8
 800a118:	2100      	movs	r1, #0
 800a11a:	4618      	mov	r0, r3
 800a11c:	f7ff fc9b 	bl	8009a56 <_ZN8touchgfx6BitmapC1Et>
 800a120:	f107 030c 	add.w	r3, r7, #12
 800a124:	2101      	movs	r1, #1
 800a126:	4618      	mov	r0, r3
 800a128:	f7ff fc95 	bl	8009a56 <_ZN8touchgfx6BitmapC1Et>
 800a12c:	f107 020c 	add.w	r2, r7, #12
 800a130:	f107 0308 	add.w	r3, r7, #8
 800a134:	4619      	mov	r1, r3
 800a136:	4620      	mov	r0, r4
 800a138:	f003 fa0b 	bl	800d552 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

    add(button1);
 800a13c:	687a      	ldr	r2, [r7, #4]
 800a13e:	687b      	ldr	r3, [r7, #4]
 800a140:	3340      	adds	r3, #64	; 0x40
 800a142:	4619      	mov	r1, r3
 800a144:	4610      	mov	r0, r2
 800a146:	f7ff fe93 	bl	8009e70 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800a14a:	687b      	ldr	r3, [r7, #4]
 800a14c:	4618      	mov	r0, r3
 800a14e:	3714      	adds	r7, #20
 800a150:	46bd      	mov	sp, r7
 800a152:	bd90      	pop	{r4, r7, pc}
 800a154:	0801cd54 	.word	0x0801cd54

0800a158 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{
 800a158:	b480      	push	{r7}
 800a15a:	b083      	sub	sp, #12
 800a15c:	af00      	add	r7, sp, #0
 800a15e:	6078      	str	r0, [r7, #4]

}
 800a160:	bf00      	nop
 800a162:	370c      	adds	r7, #12
 800a164:	46bd      	mov	sp, r7
 800a166:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a16a:	4770      	bx	lr

0800a16c <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>:
    View() : presenter(0)
 800a16c:	b580      	push	{r7, lr}
 800a16e:	b082      	sub	sp, #8
 800a170:	af00      	add	r7, sp, #0
 800a172:	6078      	str	r0, [r7, #4]
 800a174:	687b      	ldr	r3, [r7, #4]
 800a176:	4618      	mov	r0, r3
 800a178:	f004 fd66 	bl	800ec48 <_ZN8touchgfx6ScreenC1Ev>
 800a17c:	4a05      	ldr	r2, [pc, #20]	; (800a194 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev+0x28>)
 800a17e:	687b      	ldr	r3, [r7, #4]
 800a180:	601a      	str	r2, [r3, #0]
 800a182:	687b      	ldr	r3, [r7, #4]
 800a184:	2200      	movs	r2, #0
 800a186:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800a188:	687b      	ldr	r3, [r7, #4]
 800a18a:	4618      	mov	r0, r3
 800a18c:	3708      	adds	r7, #8
 800a18e:	46bd      	mov	sp, r7
 800a190:	bd80      	pop	{r7, pc}
 800a192:	bf00      	nop
 800a194:	0801cd88 	.word	0x0801cd88

0800a198 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800a198:	b480      	push	{r7}
 800a19a:	af00      	add	r7, sp, #0
    return bitmap_database;
 800a19c:	4b02      	ldr	r3, [pc, #8]	; (800a1a8 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800a19e:	4618      	mov	r0, r3
 800a1a0:	46bd      	mov	sp, r7
 800a1a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1a6:	4770      	bx	lr
 800a1a8:	0801ce1c 	.word	0x0801ce1c

0800a1ac <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800a1ac:	b480      	push	{r7}
 800a1ae:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800a1b0:	2302      	movs	r3, #2
}
 800a1b2:	4618      	mov	r0, r3
 800a1b4:	46bd      	mov	sp, r7
 800a1b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1ba:	4770      	bx	lr

0800a1bc <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param data A reference to the TypedTextData storage array.
     * @param f    The fonts associated with the array.
     * @param n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800a1bc:	b480      	push	{r7}
 800a1be:	b085      	sub	sp, #20
 800a1c0:	af00      	add	r7, sp, #0
 800a1c2:	60f8      	str	r0, [r7, #12]
 800a1c4:	60b9      	str	r1, [r7, #8]
 800a1c6:	4613      	mov	r3, r2
 800a1c8:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800a1ca:	4a07      	ldr	r2, [pc, #28]	; (800a1e8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800a1cc:	68fb      	ldr	r3, [r7, #12]
 800a1ce:	6013      	str	r3, [r2, #0]
        fonts = f;
 800a1d0:	4a06      	ldr	r2, [pc, #24]	; (800a1ec <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800a1d2:	68bb      	ldr	r3, [r7, #8]
 800a1d4:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800a1d6:	4a06      	ldr	r2, [pc, #24]	; (800a1f0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800a1d8:	88fb      	ldrh	r3, [r7, #6]
 800a1da:	8013      	strh	r3, [r2, #0]
    }
 800a1dc:	bf00      	nop
 800a1de:	3714      	adds	r7, #20
 800a1e0:	46bd      	mov	sp, r7
 800a1e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1e6:	4770      	bx	lr
 800a1e8:	20026970 	.word	0x20026970
 800a1ec:	20026978 	.word	0x20026978
 800a1f0:	20026974 	.word	0x20026974

0800a1f4 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800a1f4:	b590      	push	{r4, r7, lr}
 800a1f6:	b085      	sub	sp, #20
 800a1f8:	af00      	add	r7, sp, #0
 800a1fa:	4603      	mov	r3, r0
 800a1fc:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800a1fe:	2300      	movs	r3, #0
 800a200:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800a202:	88fb      	ldrh	r3, [r7, #6]
 800a204:	2b00      	cmp	r3, #0
 800a206:	d127      	bne.n	800a258 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800a208:	88fb      	ldrh	r3, [r7, #6]
 800a20a:	4a1e      	ldr	r2, [pc, #120]	; (800a284 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800a20c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a210:	2b00      	cmp	r3, #0
 800a212:	d016      	beq.n	800a242 <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800a214:	88fb      	ldrh	r3, [r7, #6]
 800a216:	4a1b      	ldr	r2, [pc, #108]	; (800a284 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800a218:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a21c:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800a21e:	68bb      	ldr	r3, [r7, #8]
 800a220:	681b      	ldr	r3, [r3, #0]
 800a222:	68ba      	ldr	r2, [r7, #8]
 800a224:	4413      	add	r3, r2
 800a226:	4a18      	ldr	r2, [pc, #96]	; (800a288 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800a228:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800a22a:	68bb      	ldr	r3, [r7, #8]
 800a22c:	685b      	ldr	r3, [r3, #4]
 800a22e:	68ba      	ldr	r2, [r7, #8]
 800a230:	4413      	add	r3, r2
 800a232:	4a16      	ldr	r2, [pc, #88]	; (800a28c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800a234:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800a236:	68bb      	ldr	r3, [r7, #8]
 800a238:	689b      	ldr	r3, [r3, #8]
 800a23a:	68ba      	ldr	r2, [r7, #8]
 800a23c:	4413      	add	r3, r2
 800a23e:	60fb      	str	r3, [r7, #12]
 800a240:	e00a      	b.n	800a258 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            //compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800a242:	4b11      	ldr	r3, [pc, #68]	; (800a288 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800a244:	4a12      	ldr	r2, [pc, #72]	; (800a290 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800a246:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800a248:	2200      	movs	r2, #0
 800a24a:	4b10      	ldr	r3, [pc, #64]	; (800a28c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800a24c:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800a24e:	88fb      	ldrh	r3, [r7, #6]
 800a250:	4a10      	ldr	r2, [pc, #64]	; (800a294 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800a252:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a256:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800a258:	68fb      	ldr	r3, [r7, #12]
 800a25a:	2b00      	cmp	r3, #0
 800a25c:	d00d      	beq.n	800a27a <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800a25e:	4a0e      	ldr	r2, [pc, #56]	; (800a298 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800a260:	88fb      	ldrh	r3, [r7, #6]
 800a262:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800a264:	f000 f822 	bl	800a2ac <_ZN17TypedTextDatabase8getFontsEv>
 800a268:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800a26a:	f000 f817 	bl	800a29c <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800a26e:	4603      	mov	r3, r0
 800a270:	461a      	mov	r2, r3
 800a272:	4621      	mov	r1, r4
 800a274:	68f8      	ldr	r0, [r7, #12]
 800a276:	f7ff ffa1 	bl	800a1bc <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800a27a:	bf00      	nop
 800a27c:	3714      	adds	r7, #20
 800a27e:	46bd      	mov	sp, r7
 800a280:	bd90      	pop	{r4, r7, pc}
 800a282:	bf00      	nop
 800a284:	200259a0 	.word	0x200259a0
 800a288:	200259a8 	.word	0x200259a8
 800a28c:	200259ac 	.word	0x200259ac
 800a290:	0803378c 	.word	0x0803378c
 800a294:	08033794 	.word	0x08033794
 800a298:	200259a4 	.word	0x200259a4

0800a29c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800a29c:	b480      	push	{r7}
 800a29e:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800a2a0:	2301      	movs	r3, #1
}
 800a2a2:	4618      	mov	r0, r3
 800a2a4:	46bd      	mov	sp, r7
 800a2a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2aa:	4770      	bx	lr

0800a2ac <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800a2ac:	b480      	push	{r7}
 800a2ae:	af00      	add	r7, sp, #0
    return _fonts;
 800a2b0:	4b02      	ldr	r3, [pc, #8]	; (800a2bc <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800a2b2:	4618      	mov	r0, r3
 800a2b4:	46bd      	mov	sp, r7
 800a2b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2ba:	4770      	bx	lr
 800a2bc:	200259b0 	.word	0x200259b0

0800a2c0 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        _fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 800a2c0:	b580      	push	{r7, lr}
 800a2c2:	b082      	sub	sp, #8
 800a2c4:	af00      	add	r7, sp, #0
 800a2c6:	6078      	str	r0, [r7, #4]
 800a2c8:	6039      	str	r1, [r7, #0]
 800a2ca:	687b      	ldr	r3, [r7, #4]
 800a2cc:	2b01      	cmp	r3, #1
 800a2ce:	d113      	bne.n	800a2f8 <_Z41__static_initialization_and_destruction_0ii+0x38>
 800a2d0:	683b      	ldr	r3, [r7, #0]
 800a2d2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a2d6:	4293      	cmp	r3, r2
 800a2d8:	d10e      	bne.n	800a2f8 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 800a2da:	f7fe fde7 	bl	8008eac <_Z23getFont_verdana_20_4bppv>
 800a2de:	4602      	mov	r2, r0
};
 800a2e0:	4b07      	ldr	r3, [pc, #28]	; (800a300 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800a2e2:	601a      	str	r2, [r3, #0]
    &(getFont_verdana_40_4bpp()),
 800a2e4:	f7fe fe24 	bl	8008f30 <_Z23getFont_verdana_40_4bppv>
 800a2e8:	4602      	mov	r2, r0
};
 800a2ea:	4b05      	ldr	r3, [pc, #20]	; (800a300 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800a2ec:	605a      	str	r2, [r3, #4]
    &(getFont_verdana_10_4bpp())
 800a2ee:	f7fe fd9b 	bl	8008e28 <_Z23getFont_verdana_10_4bppv>
 800a2f2:	4602      	mov	r2, r0
};
 800a2f4:	4b02      	ldr	r3, [pc, #8]	; (800a300 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800a2f6:	609a      	str	r2, [r3, #8]
}  // namespace TypedTextDatabase
 800a2f8:	bf00      	nop
 800a2fa:	3708      	adds	r7, #8
 800a2fc:	46bd      	mov	sp, r7
 800a2fe:	bd80      	pop	{r7, pc}
 800a300:	200259b0 	.word	0x200259b0

0800a304 <_GLOBAL__sub_I__fonts>:
 800a304:	b580      	push	{r7, lr}
 800a306:	af00      	add	r7, sp, #0
 800a308:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800a30c:	2001      	movs	r0, #1
 800a30e:	f7ff ffd7 	bl	800a2c0 <_Z41__static_initialization_and_destruction_0ii>
 800a312:	bd80      	pop	{r7, pc}

0800a314 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800a314:	b580      	push	{r7, lr}
 800a316:	b082      	sub	sp, #8
 800a318:	af00      	add	r7, sp, #0
 800a31a:	6078      	str	r0, [r7, #4]
 800a31c:	4a05      	ldr	r2, [pc, #20]	; (800a334 <_ZN19FrontendApplicationD1Ev+0x20>)
 800a31e:	687b      	ldr	r3, [r7, #4]
 800a320:	601a      	str	r2, [r3, #0]
 800a322:	687b      	ldr	r3, [r7, #4]
 800a324:	4618      	mov	r0, r3
 800a326:	f7ff f893 	bl	8009450 <_ZN23FrontendApplicationBaseD1Ev>
 800a32a:	687b      	ldr	r3, [r7, #4]
 800a32c:	4618      	mov	r0, r3
 800a32e:	3708      	adds	r7, #8
 800a330:	46bd      	mov	sp, r7
 800a332:	bd80      	pop	{r7, pc}
 800a334:	0801ce4c 	.word	0x0801ce4c

0800a338 <_ZN19FrontendApplicationD0Ev>:
 800a338:	b580      	push	{r7, lr}
 800a33a:	b082      	sub	sp, #8
 800a33c:	af00      	add	r7, sp, #0
 800a33e:	6078      	str	r0, [r7, #4]
 800a340:	6878      	ldr	r0, [r7, #4]
 800a342:	f7ff ffe7 	bl	800a314 <_ZN19FrontendApplicationD1Ev>
 800a346:	f44f 71a8 	mov.w	r1, #336	; 0x150
 800a34a:	6878      	ldr	r0, [r7, #4]
 800a34c:	f010 ff64 	bl	801b218 <_ZdlPvj>
 800a350:	687b      	ldr	r3, [r7, #4]
 800a352:	4618      	mov	r0, r3
 800a354:	3708      	adds	r7, #8
 800a356:	46bd      	mov	sp, r7
 800a358:	bd80      	pop	{r7, pc}

0800a35a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800a35a:	b580      	push	{r7, lr}
 800a35c:	b082      	sub	sp, #8
 800a35e:	af00      	add	r7, sp, #0
 800a360:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800a362:	687b      	ldr	r3, [r7, #4]
 800a364:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
 800a368:	4618      	mov	r0, r3
 800a36a:	f000 f82d 	bl	800a3c8 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800a36e:	687b      	ldr	r3, [r7, #4]
 800a370:	4618      	mov	r0, r3
 800a372:	f003 fc0d 	bl	800db90 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800a376:	bf00      	nop
 800a378:	3708      	adds	r7, #8
 800a37a:	46bd      	mov	sp, r7
 800a37c:	bd80      	pop	{r7, pc}
	...

0800a380 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800a380:	b580      	push	{r7, lr}
 800a382:	b084      	sub	sp, #16
 800a384:	af00      	add	r7, sp, #0
 800a386:	60f8      	str	r0, [r7, #12]
 800a388:	60b9      	str	r1, [r7, #8]
 800a38a:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800a38c:	68fb      	ldr	r3, [r7, #12]
 800a38e:	687a      	ldr	r2, [r7, #4]
 800a390:	68b9      	ldr	r1, [r7, #8]
 800a392:	4618      	mov	r0, r3
 800a394:	f7ff f8d6 	bl	8009544 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800a398:	4a03      	ldr	r2, [pc, #12]	; (800a3a8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800a39a:	68fb      	ldr	r3, [r7, #12]
 800a39c:	601a      	str	r2, [r3, #0]
{

}
 800a39e:	68fb      	ldr	r3, [r7, #12]
 800a3a0:	4618      	mov	r0, r3
 800a3a2:	3710      	adds	r7, #16
 800a3a4:	46bd      	mov	sp, r7
 800a3a6:	bd80      	pop	{r7, pc}
 800a3a8:	0801ce4c 	.word	0x0801ce4c

0800a3ac <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800a3ac:	b480      	push	{r7}
 800a3ae:	b083      	sub	sp, #12
 800a3b0:	af00      	add	r7, sp, #0
 800a3b2:	6078      	str	r0, [r7, #4]
 800a3b4:	687b      	ldr	r3, [r7, #4]
 800a3b6:	2200      	movs	r2, #0
 800a3b8:	601a      	str	r2, [r3, #0]
{

}
 800a3ba:	687b      	ldr	r3, [r7, #4]
 800a3bc:	4618      	mov	r0, r3
 800a3be:	370c      	adds	r7, #12
 800a3c0:	46bd      	mov	sp, r7
 800a3c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3c6:	4770      	bx	lr

0800a3c8 <_ZN5Model4tickEv>:

void Model::tick()
{
 800a3c8:	b480      	push	{r7}
 800a3ca:	b083      	sub	sp, #12
 800a3cc:	af00      	add	r7, sp, #0
 800a3ce:	6078      	str	r0, [r7, #4]

}
 800a3d0:	bf00      	nop
 800a3d2:	370c      	adds	r7, #12
 800a3d4:	46bd      	mov	sp, r7
 800a3d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3da:	4770      	bx	lr

0800a3dc <_ZN8touchgfx9Presenter8activateEv>:
     * @brief Place initialization code for the Presenter here.
     *
     *        The activate function is called automatically when a screen transition causes
     *        this Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800a3dc:	b480      	push	{r7}
 800a3de:	b083      	sub	sp, #12
 800a3e0:	af00      	add	r7, sp, #0
 800a3e2:	6078      	str	r0, [r7, #4]
    {
    }
 800a3e4:	bf00      	nop
 800a3e6:	370c      	adds	r7, #12
 800a3e8:	46bd      	mov	sp, r7
 800a3ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3ee:	4770      	bx	lr

0800a3f0 <_ZN8touchgfx9Presenter10deactivateEv>:
     * @brief Place cleanup code for the Presenter here.
     *
     *        The deactivate function is called automatically when a screen transition causes
     *        this Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800a3f0:	b480      	push	{r7}
 800a3f2:	b083      	sub	sp, #12
 800a3f4:	af00      	add	r7, sp, #0
 800a3f6:	6078      	str	r0, [r7, #4]
    {
    }
 800a3f8:	bf00      	nop
 800a3fa:	370c      	adds	r7, #12
 800a3fc:	46bd      	mov	sp, r7
 800a3fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a402:	4770      	bx	lr

0800a404 <_ZN8touchgfx9PresenterD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Presenter()
 800a404:	b480      	push	{r7}
 800a406:	b083      	sub	sp, #12
 800a408:	af00      	add	r7, sp, #0
 800a40a:	6078      	str	r0, [r7, #4]
    {
 800a40c:	4a04      	ldr	r2, [pc, #16]	; (800a420 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800a40e:	687b      	ldr	r3, [r7, #4]
 800a410:	601a      	str	r2, [r3, #0]
    }
 800a412:	687b      	ldr	r3, [r7, #4]
 800a414:	4618      	mov	r0, r3
 800a416:	370c      	adds	r7, #12
 800a418:	46bd      	mov	sp, r7
 800a41a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a41e:	4770      	bx	lr
 800a420:	0801cec0 	.word	0x0801cec0

0800a424 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800a424:	b580      	push	{r7, lr}
 800a426:	b082      	sub	sp, #8
 800a428:	af00      	add	r7, sp, #0
 800a42a:	6078      	str	r0, [r7, #4]
    }
 800a42c:	6878      	ldr	r0, [r7, #4]
 800a42e:	f7ff ffe9 	bl	800a404 <_ZN8touchgfx9PresenterD1Ev>
 800a432:	2104      	movs	r1, #4
 800a434:	6878      	ldr	r0, [r7, #4]
 800a436:	f010 feef 	bl	801b218 <_ZdlPvj>
 800a43a:	687b      	ldr	r3, [r7, #4]
 800a43c:	4618      	mov	r0, r3
 800a43e:	3708      	adds	r7, #8
 800a440:	46bd      	mov	sp, r7
 800a442:	bd80      	pop	{r7, pc}

0800a444 <_ZN8touchgfx9PresenterC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Presenter()
 800a444:	b480      	push	{r7}
 800a446:	b083      	sub	sp, #12
 800a448:	af00      	add	r7, sp, #0
 800a44a:	6078      	str	r0, [r7, #4]
    {
 800a44c:	4a04      	ldr	r2, [pc, #16]	; (800a460 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800a44e:	687b      	ldr	r3, [r7, #4]
 800a450:	601a      	str	r2, [r3, #0]
    }
 800a452:	687b      	ldr	r3, [r7, #4]
 800a454:	4618      	mov	r0, r3
 800a456:	370c      	adds	r7, #12
 800a458:	46bd      	mov	sp, r7
 800a45a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a45e:	4770      	bx	lr
 800a460:	0801cec0 	.word	0x0801cec0

0800a464 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800a464:	b480      	push	{r7}
 800a466:	b083      	sub	sp, #12
 800a468:	af00      	add	r7, sp, #0
 800a46a:	6078      	str	r0, [r7, #4]
 800a46c:	4a06      	ldr	r2, [pc, #24]	; (800a488 <_ZN13ModelListenerC1Ev+0x24>)
 800a46e:	687b      	ldr	r3, [r7, #4]
 800a470:	601a      	str	r2, [r3, #0]
 800a472:	687b      	ldr	r3, [r7, #4]
 800a474:	2200      	movs	r2, #0
 800a476:	605a      	str	r2, [r3, #4]
 800a478:	687b      	ldr	r3, [r7, #4]
 800a47a:	4618      	mov	r0, r3
 800a47c:	370c      	adds	r7, #12
 800a47e:	46bd      	mov	sp, r7
 800a480:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a484:	4770      	bx	lr
 800a486:	bf00      	nop
 800a488:	0801ceb0 	.word	0x0801ceb0

0800a48c <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800a48c:	b480      	push	{r7}
 800a48e:	b083      	sub	sp, #12
 800a490:	af00      	add	r7, sp, #0
 800a492:	6078      	str	r0, [r7, #4]
 800a494:	4a04      	ldr	r2, [pc, #16]	; (800a4a8 <_ZN13ModelListenerD1Ev+0x1c>)
 800a496:	687b      	ldr	r3, [r7, #4]
 800a498:	601a      	str	r2, [r3, #0]
 800a49a:	687b      	ldr	r3, [r7, #4]
 800a49c:	4618      	mov	r0, r3
 800a49e:	370c      	adds	r7, #12
 800a4a0:	46bd      	mov	sp, r7
 800a4a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4a6:	4770      	bx	lr
 800a4a8:	0801ceb0 	.word	0x0801ceb0

0800a4ac <_ZN13ModelListenerD0Ev>:
 800a4ac:	b580      	push	{r7, lr}
 800a4ae:	b082      	sub	sp, #8
 800a4b0:	af00      	add	r7, sp, #0
 800a4b2:	6078      	str	r0, [r7, #4]
 800a4b4:	6878      	ldr	r0, [r7, #4]
 800a4b6:	f7ff ffe9 	bl	800a48c <_ZN13ModelListenerD1Ev>
 800a4ba:	2108      	movs	r1, #8
 800a4bc:	6878      	ldr	r0, [r7, #4]
 800a4be:	f010 feab 	bl	801b218 <_ZdlPvj>
 800a4c2:	687b      	ldr	r3, [r7, #4]
 800a4c4:	4618      	mov	r0, r3
 800a4c6:	3708      	adds	r7, #8
 800a4c8:	46bd      	mov	sp, r7
 800a4ca:	bd80      	pop	{r7, pc}

0800a4cc <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 800a4cc:	b580      	push	{r7, lr}
 800a4ce:	b082      	sub	sp, #8
 800a4d0:	af00      	add	r7, sp, #0
 800a4d2:	6078      	str	r0, [r7, #4]
 800a4d4:	4a09      	ldr	r2, [pc, #36]	; (800a4fc <_ZN16Screen1PresenterD1Ev+0x30>)
 800a4d6:	687b      	ldr	r3, [r7, #4]
 800a4d8:	601a      	str	r2, [r3, #0]
 800a4da:	4a09      	ldr	r2, [pc, #36]	; (800a500 <_ZN16Screen1PresenterD1Ev+0x34>)
 800a4dc:	687b      	ldr	r3, [r7, #4]
 800a4de:	605a      	str	r2, [r3, #4]
 800a4e0:	687b      	ldr	r3, [r7, #4]
 800a4e2:	3304      	adds	r3, #4
 800a4e4:	4618      	mov	r0, r3
 800a4e6:	f7ff ffd1 	bl	800a48c <_ZN13ModelListenerD1Ev>
 800a4ea:	687b      	ldr	r3, [r7, #4]
 800a4ec:	4618      	mov	r0, r3
 800a4ee:	f7ff ff89 	bl	800a404 <_ZN8touchgfx9PresenterD1Ev>
 800a4f2:	687b      	ldr	r3, [r7, #4]
 800a4f4:	4618      	mov	r0, r3
 800a4f6:	3708      	adds	r7, #8
 800a4f8:	46bd      	mov	sp, r7
 800a4fa:	bd80      	pop	{r7, pc}
 800a4fc:	0801ce88 	.word	0x0801ce88
 800a500:	0801cea0 	.word	0x0801cea0

0800a504 <_ZThn4_N16Screen1PresenterD1Ev>:
 800a504:	f1a0 0004 	sub.w	r0, r0, #4
 800a508:	e7e0      	b.n	800a4cc <_ZN16Screen1PresenterD1Ev>
 800a50a:	bf00      	nop

0800a50c <_ZN16Screen1PresenterD0Ev>:
 800a50c:	b580      	push	{r7, lr}
 800a50e:	b082      	sub	sp, #8
 800a510:	af00      	add	r7, sp, #0
 800a512:	6078      	str	r0, [r7, #4]
 800a514:	6878      	ldr	r0, [r7, #4]
 800a516:	f7ff ffd9 	bl	800a4cc <_ZN16Screen1PresenterD1Ev>
 800a51a:	2110      	movs	r1, #16
 800a51c:	6878      	ldr	r0, [r7, #4]
 800a51e:	f010 fe7b 	bl	801b218 <_ZdlPvj>
 800a522:	687b      	ldr	r3, [r7, #4]
 800a524:	4618      	mov	r0, r3
 800a526:	3708      	adds	r7, #8
 800a528:	46bd      	mov	sp, r7
 800a52a:	bd80      	pop	{r7, pc}

0800a52c <_ZThn4_N16Screen1PresenterD0Ev>:
 800a52c:	f1a0 0004 	sub.w	r0, r0, #4
 800a530:	e7ec      	b.n	800a50c <_ZN16Screen1PresenterD0Ev>
	...

0800a534 <_ZN16Screen1PresenterC1ER11Screen1View>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

Screen1Presenter::Screen1Presenter(Screen1View& v)
 800a534:	b580      	push	{r7, lr}
 800a536:	b082      	sub	sp, #8
 800a538:	af00      	add	r7, sp, #0
 800a53a:	6078      	str	r0, [r7, #4]
 800a53c:	6039      	str	r1, [r7, #0]
    : view(v)
 800a53e:	687b      	ldr	r3, [r7, #4]
 800a540:	4618      	mov	r0, r3
 800a542:	f7ff ff7f 	bl	800a444 <_ZN8touchgfx9PresenterC1Ev>
 800a546:	687b      	ldr	r3, [r7, #4]
 800a548:	3304      	adds	r3, #4
 800a54a:	4618      	mov	r0, r3
 800a54c:	f7ff ff8a 	bl	800a464 <_ZN13ModelListenerC1Ev>
 800a550:	4a06      	ldr	r2, [pc, #24]	; (800a56c <_ZN16Screen1PresenterC1ER11Screen1View+0x38>)
 800a552:	687b      	ldr	r3, [r7, #4]
 800a554:	601a      	str	r2, [r3, #0]
 800a556:	4a06      	ldr	r2, [pc, #24]	; (800a570 <_ZN16Screen1PresenterC1ER11Screen1View+0x3c>)
 800a558:	687b      	ldr	r3, [r7, #4]
 800a55a:	605a      	str	r2, [r3, #4]
 800a55c:	687b      	ldr	r3, [r7, #4]
 800a55e:	683a      	ldr	r2, [r7, #0]
 800a560:	60da      	str	r2, [r3, #12]
{

}
 800a562:	687b      	ldr	r3, [r7, #4]
 800a564:	4618      	mov	r0, r3
 800a566:	3708      	adds	r7, #8
 800a568:	46bd      	mov	sp, r7
 800a56a:	bd80      	pop	{r7, pc}
 800a56c:	0801ce88 	.word	0x0801ce88
 800a570:	0801cea0 	.word	0x0801cea0

0800a574 <_ZN16Screen1Presenter8activateEv>:

void Screen1Presenter::activate()
{
 800a574:	b480      	push	{r7}
 800a576:	b083      	sub	sp, #12
 800a578:	af00      	add	r7, sp, #0
 800a57a:	6078      	str	r0, [r7, #4]

}
 800a57c:	bf00      	nop
 800a57e:	370c      	adds	r7, #12
 800a580:	46bd      	mov	sp, r7
 800a582:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a586:	4770      	bx	lr

0800a588 <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{
 800a588:	b480      	push	{r7}
 800a58a:	b083      	sub	sp, #12
 800a58c:	af00      	add	r7, sp, #0
 800a58e:	6078      	str	r0, [r7, #4]

}
 800a590:	bf00      	nop
 800a592:	370c      	adds	r7, #12
 800a594:	46bd      	mov	sp, r7
 800a596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a59a:	4770      	bx	lr

0800a59c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800a59c:	b580      	push	{r7, lr}
 800a59e:	b082      	sub	sp, #8
 800a5a0:	af00      	add	r7, sp, #0
 800a5a2:	6078      	str	r0, [r7, #4]
 800a5a4:	4a05      	ldr	r2, [pc, #20]	; (800a5bc <_ZN11Screen1ViewD1Ev+0x20>)
 800a5a6:	687b      	ldr	r3, [r7, #4]
 800a5a8:	601a      	str	r2, [r3, #0]
 800a5aa:	687b      	ldr	r3, [r7, #4]
 800a5ac:	4618      	mov	r0, r3
 800a5ae:	f7ff fd6f 	bl	800a090 <_ZN15Screen1ViewBaseD1Ev>
 800a5b2:	687b      	ldr	r3, [r7, #4]
 800a5b4:	4618      	mov	r0, r3
 800a5b6:	3708      	adds	r7, #8
 800a5b8:	46bd      	mov	sp, r7
 800a5ba:	bd80      	pop	{r7, pc}
 800a5bc:	0801ced8 	.word	0x0801ced8

0800a5c0 <_ZN11Screen1ViewD0Ev>:
 800a5c0:	b580      	push	{r7, lr}
 800a5c2:	b082      	sub	sp, #8
 800a5c4:	af00      	add	r7, sp, #0
 800a5c6:	6078      	str	r0, [r7, #4]
 800a5c8:	6878      	ldr	r0, [r7, #4]
 800a5ca:	f7ff ffe7 	bl	800a59c <_ZN11Screen1ViewD1Ev>
 800a5ce:	2174      	movs	r1, #116	; 0x74
 800a5d0:	6878      	ldr	r0, [r7, #4]
 800a5d2:	f010 fe21 	bl	801b218 <_ZdlPvj>
 800a5d6:	687b      	ldr	r3, [r7, #4]
 800a5d8:	4618      	mov	r0, r3
 800a5da:	3708      	adds	r7, #8
 800a5dc:	46bd      	mov	sp, r7
 800a5de:	bd80      	pop	{r7, pc}

0800a5e0 <_ZN11Screen1ViewC1Ev>:
#include <gui/screen1_screen/Screen1View.hpp>

Screen1View::Screen1View()
 800a5e0:	b580      	push	{r7, lr}
 800a5e2:	b082      	sub	sp, #8
 800a5e4:	af00      	add	r7, sp, #0
 800a5e6:	6078      	str	r0, [r7, #4]
 800a5e8:	687b      	ldr	r3, [r7, #4]
 800a5ea:	4618      	mov	r0, r3
 800a5ec:	f7ff fd78 	bl	800a0e0 <_ZN15Screen1ViewBaseC1Ev>
 800a5f0:	4a03      	ldr	r2, [pc, #12]	; (800a600 <_ZN11Screen1ViewC1Ev+0x20>)
 800a5f2:	687b      	ldr	r3, [r7, #4]
 800a5f4:	601a      	str	r2, [r3, #0]
{

}
 800a5f6:	687b      	ldr	r3, [r7, #4]
 800a5f8:	4618      	mov	r0, r3
 800a5fa:	3708      	adds	r7, #8
 800a5fc:	46bd      	mov	sp, r7
 800a5fe:	bd80      	pop	{r7, pc}
 800a600:	0801ced8 	.word	0x0801ced8

0800a604 <_ZN11Screen1View11setupScreenEv>:

void Screen1View::setupScreen()
{
 800a604:	b580      	push	{r7, lr}
 800a606:	b082      	sub	sp, #8
 800a608:	af00      	add	r7, sp, #0
 800a60a:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::setupScreen();
 800a60c:	687b      	ldr	r3, [r7, #4]
 800a60e:	4618      	mov	r0, r3
 800a610:	f7ff fda2 	bl	800a158 <_ZN15Screen1ViewBase11setupScreenEv>
}
 800a614:	bf00      	nop
 800a616:	3708      	adds	r7, #8
 800a618:	46bd      	mov	sp, r7
 800a61a:	bd80      	pop	{r7, pc}

0800a61c <_ZN11Screen1View14tearDownScreenEv>:

void Screen1View::tearDownScreen()
{
 800a61c:	b580      	push	{r7, lr}
 800a61e:	b082      	sub	sp, #8
 800a620:	af00      	add	r7, sp, #0
 800a622:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::tearDownScreen();
 800a624:	687b      	ldr	r3, [r7, #4]
 800a626:	4618      	mov	r0, r3
 800a628:	f7ff fc02 	bl	8009e30 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800a62c:	bf00      	nop
 800a62e:	3708      	adds	r7, #8
 800a630:	46bd      	mov	sp, r7
 800a632:	bd80      	pop	{r7, pc}

0800a634 <_ZN8touchgfx15TouchControllerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~TouchController()
 800a634:	b480      	push	{r7}
 800a636:	b083      	sub	sp, #12
 800a638:	af00      	add	r7, sp, #0
 800a63a:	6078      	str	r0, [r7, #4]
    {
 800a63c:	4a04      	ldr	r2, [pc, #16]	; (800a650 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800a63e:	687b      	ldr	r3, [r7, #4]
 800a640:	601a      	str	r2, [r3, #0]
    }
 800a642:	687b      	ldr	r3, [r7, #4]
 800a644:	4618      	mov	r0, r3
 800a646:	370c      	adds	r7, #12
 800a648:	46bd      	mov	sp, r7
 800a64a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a64e:	4770      	bx	lr
 800a650:	0801cf24 	.word	0x0801cf24

0800a654 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800a654:	b580      	push	{r7, lr}
 800a656:	b082      	sub	sp, #8
 800a658:	af00      	add	r7, sp, #0
 800a65a:	6078      	str	r0, [r7, #4]
    }
 800a65c:	6878      	ldr	r0, [r7, #4]
 800a65e:	f7ff ffe9 	bl	800a634 <_ZN8touchgfx15TouchControllerD1Ev>
 800a662:	2104      	movs	r1, #4
 800a664:	6878      	ldr	r0, [r7, #4]
 800a666:	f010 fdd7 	bl	801b218 <_ZdlPvj>
 800a66a:	687b      	ldr	r3, [r7, #4]
 800a66c:	4618      	mov	r0, r3
 800a66e:	3708      	adds	r7, #8
 800a670:	46bd      	mov	sp, r7
 800a672:	bd80      	pop	{r7, pc}

0800a674 <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>

void STM32TouchController::init()
{
 800a674:	b480      	push	{r7}
 800a676:	b083      	sub	sp, #12
 800a678:	af00      	add	r7, sp, #0
 800a67a:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800a67c:	bf00      	nop
 800a67e:	370c      	adds	r7, #12
 800a680:	46bd      	mov	sp, r7
 800a682:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a686:	4770      	bx	lr

0800a688 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800a688:	b480      	push	{r7}
 800a68a:	b085      	sub	sp, #20
 800a68c:	af00      	add	r7, sp, #0
 800a68e:	60f8      	str	r0, [r7, #12]
 800a690:	60b9      	str	r1, [r7, #8]
 800a692:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    return false;
 800a694:	2300      	movs	r3, #0
}
 800a696:	4618      	mov	r0, r3
 800a698:	3714      	adds	r7, #20
 800a69a:	46bd      	mov	sp, r7
 800a69c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6a0:	4770      	bx	lr
	...

0800a6a4 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800a6a4:	b580      	push	{r7, lr}
 800a6a6:	b082      	sub	sp, #8
 800a6a8:	af00      	add	r7, sp, #0
 800a6aa:	6078      	str	r0, [r7, #4]
 800a6ac:	4a05      	ldr	r2, [pc, #20]	; (800a6c4 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800a6ae:	687b      	ldr	r3, [r7, #4]
 800a6b0:	601a      	str	r2, [r3, #0]
 800a6b2:	687b      	ldr	r3, [r7, #4]
 800a6b4:	4618      	mov	r0, r3
 800a6b6:	f7ff ffbd 	bl	800a634 <_ZN8touchgfx15TouchControllerD1Ev>
 800a6ba:	687b      	ldr	r3, [r7, #4]
 800a6bc:	4618      	mov	r0, r3
 800a6be:	3708      	adds	r7, #8
 800a6c0:	46bd      	mov	sp, r7
 800a6c2:	bd80      	pop	{r7, pc}
 800a6c4:	0801cf0c 	.word	0x0801cf0c

0800a6c8 <_ZN20STM32TouchControllerD0Ev>:
 800a6c8:	b580      	push	{r7, lr}
 800a6ca:	b082      	sub	sp, #8
 800a6cc:	af00      	add	r7, sp, #0
 800a6ce:	6078      	str	r0, [r7, #4]
 800a6d0:	6878      	ldr	r0, [r7, #4]
 800a6d2:	f7ff ffe7 	bl	800a6a4 <_ZN20STM32TouchControllerD1Ev>
 800a6d6:	2104      	movs	r1, #4
 800a6d8:	6878      	ldr	r0, [r7, #4]
 800a6da:	f010 fd9d 	bl	801b218 <_ZdlPvj>
 800a6de:	687b      	ldr	r3, [r7, #4]
 800a6e0:	4618      	mov	r0, r3
 800a6e2:	3708      	adds	r7, #8
 800a6e4:	46bd      	mov	sp, r7
 800a6e6:	bd80      	pop	{r7, pc}

0800a6e8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800a6e8:	b480      	push	{r7}
 800a6ea:	b083      	sub	sp, #12
 800a6ec:	af00      	add	r7, sp, #0
 800a6ee:	4603      	mov	r3, r0
 800a6f0:	71fb      	strb	r3, [r7, #7]

}
 800a6f2:	bf00      	nop
 800a6f4:	370c      	adds	r7, #12
 800a6f6:	46bd      	mov	sp, r7
 800a6f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6fc:	4770      	bx	lr

0800a6fe <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800a6fe:	b480      	push	{r7}
 800a700:	b083      	sub	sp, #12
 800a702:	af00      	add	r7, sp, #0
 800a704:	4603      	mov	r3, r0
 800a706:	71fb      	strb	r3, [r7, #7]

}
 800a708:	bf00      	nop
 800a70a:	370c      	adds	r7, #12
 800a70c:	46bd      	mov	sp, r7
 800a70e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a712:	4770      	bx	lr

0800a714 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800a714:	b480      	push	{r7}
 800a716:	b083      	sub	sp, #12
 800a718:	af00      	add	r7, sp, #0
 800a71a:	4603      	mov	r3, r0
 800a71c:	71fb      	strb	r3, [r7, #7]

}
 800a71e:	bf00      	nop
 800a720:	370c      	adds	r7, #12
 800a722:	46bd      	mov	sp, r7
 800a724:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a728:	4770      	bx	lr
	...

0800a72c <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800a72c:	b480      	push	{r7}
 800a72e:	b083      	sub	sp, #12
 800a730:	af00      	add	r7, sp, #0
 800a732:	6078      	str	r0, [r7, #4]
    {
 800a734:	4a04      	ldr	r2, [pc, #16]	; (800a748 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800a736:	687b      	ldr	r3, [r7, #4]
 800a738:	601a      	str	r2, [r3, #0]
    }
 800a73a:	687b      	ldr	r3, [r7, #4]
 800a73c:	4618      	mov	r0, r3
 800a73e:	370c      	adds	r7, #12
 800a740:	46bd      	mov	sp, r7
 800a742:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a746:	4770      	bx	lr
 800a748:	0801d824 	.word	0x0801d824

0800a74c <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800a74c:	b580      	push	{r7, lr}
 800a74e:	b082      	sub	sp, #8
 800a750:	af00      	add	r7, sp, #0
 800a752:	6078      	str	r0, [r7, #4]
    }
 800a754:	6878      	ldr	r0, [r7, #4]
 800a756:	f7ff ffe9 	bl	800a72c <_ZN8touchgfx3HALD1Ev>
 800a75a:	2178      	movs	r1, #120	; 0x78
 800a75c:	6878      	ldr	r0, [r7, #4]
 800a75e:	f010 fd5b 	bl	801b218 <_ZdlPvj>
 800a762:	687b      	ldr	r3, [r7, #4]
 800a764:	4618      	mov	r0, r3
 800a766:	3708      	adds	r7, #8
 800a768:	46bd      	mov	sp, r7
 800a76a:	bd80      	pop	{r7, pc}

0800a76c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800a76c:	b480      	push	{r7}
 800a76e:	b083      	sub	sp, #12
 800a770:	af00      	add	r7, sp, #0
 800a772:	6078      	str	r0, [r7, #4]
 800a774:	460b      	mov	r3, r1
 800a776:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800a778:	687b      	ldr	r3, [r7, #4]
 800a77a:	78fa      	ldrb	r2, [r7, #3]
 800a77c:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800a780:	687b      	ldr	r3, [r7, #4]
 800a782:	2201      	movs	r2, #1
 800a784:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
    }
 800a788:	bf00      	nop
 800a78a:	370c      	adds	r7, #12
 800a78c:	46bd      	mov	sp, r7
 800a78e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a792:	4770      	bx	lr

0800a794 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *        As default, will return whatever blitcaps are reported by the associated DMA
     *        object.
     *
     * @return a bitmask of the supported blitcaps.
     */
    virtual BlitOperations getBlitCaps()
 800a794:	b580      	push	{r7, lr}
 800a796:	b082      	sub	sp, #8
 800a798:	af00      	add	r7, sp, #0
 800a79a:	6078      	str	r0, [r7, #4]
    {
        return dma.getBlitCaps();
 800a79c:	687b      	ldr	r3, [r7, #4]
 800a79e:	685a      	ldr	r2, [r3, #4]
 800a7a0:	687b      	ldr	r3, [r7, #4]
 800a7a2:	685b      	ldr	r3, [r3, #4]
 800a7a4:	681b      	ldr	r3, [r3, #0]
 800a7a6:	681b      	ldr	r3, [r3, #0]
 800a7a8:	4610      	mov	r0, r2
 800a7aa:	4798      	blx	r3
 800a7ac:	4603      	mov	r3, r0
    }
 800a7ae:	4618      	mov	r0, r3
 800a7b0:	3708      	adds	r7, #8
 800a7b2:	46bd      	mov	sp, r7
 800a7b4:	bd80      	pop	{r7, pc}

0800a7b6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
     * @brief Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     *        Has to be called from within the LCD IRQ rutine when the Back Porch Exit is
     *        reached.
     */
    virtual void backPorchExited()
 800a7b6:	b580      	push	{r7, lr}
 800a7b8:	b082      	sub	sp, #8
 800a7ba:	af00      	add	r7, sp, #0
 800a7bc:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 800a7be:	6878      	ldr	r0, [r7, #4]
 800a7c0:	f002 fd68 	bl	800d294 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800a7c4:	687b      	ldr	r3, [r7, #4]
 800a7c6:	681b      	ldr	r3, [r3, #0]
 800a7c8:	3390      	adds	r3, #144	; 0x90
 800a7ca:	681b      	ldr	r3, [r3, #0]
 800a7cc:	6878      	ldr	r0, [r7, #4]
 800a7ce:	4798      	blx	r3
    }
 800a7d0:	bf00      	nop
 800a7d2:	3708      	adds	r7, #8
 800a7d4:	46bd      	mov	sp, r7
 800a7d6:	bd80      	pop	{r7, pc}

0800a7d8 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 800a7d8:	b480      	push	{r7}
 800a7da:	b083      	sub	sp, #12
 800a7dc:	af00      	add	r7, sp, #0
 800a7de:	6078      	str	r0, [r7, #4]
 800a7e0:	6039      	str	r1, [r7, #0]
    {
        return false;
 800a7e2:	2300      	movs	r3, #0
    }
 800a7e4:	4618      	mov	r0, r3
 800a7e6:	370c      	adds	r7, #12
 800a7e8:	46bd      	mov	sp, r7
 800a7ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7ee:	4770      	bx	lr

0800a7f0 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb>:
     * @param      useDoubleBuffering  (Optional) If true, reserve memory for an extra frame buffer.
     * @param      useAnimationStorage (Optional) If true, reserve memory for animation storage.
     *
     * @deprecated Use the setFramaBufferStartAddress with 'format' parameter instead of 'depth'
     */
    virtual void setFrameBufferStartAddress(void* adr, uint16_t depth = 16, bool useDoubleBuffering = true, bool useAnimationStorage = true)
 800a7f0:	b590      	push	{r4, r7, lr}
 800a7f2:	b08b      	sub	sp, #44	; 0x2c
 800a7f4:	af00      	add	r7, sp, #0
 800a7f6:	60f8      	str	r0, [r7, #12]
 800a7f8:	60b9      	str	r1, [r7, #8]
 800a7fa:	4611      	mov	r1, r2
 800a7fc:	461a      	mov	r2, r3
 800a7fe:	460b      	mov	r3, r1
 800a800:	80fb      	strh	r3, [r7, #6]
 800a802:	4613      	mov	r3, r2
 800a804:	717b      	strb	r3, [r7, #5]
    {
        uint16_t stride = lcd().framebufferStride();
 800a806:	f7fe fcd5 	bl	80091b4 <_ZN8touchgfx3HAL3lcdEv>
 800a80a:	4602      	mov	r2, r0
 800a80c:	6813      	ldr	r3, [r2, #0]
 800a80e:	3328      	adds	r3, #40	; 0x28
 800a810:	681b      	ldr	r3, [r3, #0]
 800a812:	4610      	mov	r0, r2
 800a814:	4798      	blx	r3
 800a816:	4603      	mov	r3, r0
 800a818:	837b      	strh	r3, [r7, #26]
        uint32_t bufferSizeInBytes = stride * FRAME_BUFFER_HEIGHT;
 800a81a:	8b7b      	ldrh	r3, [r7, #26]
 800a81c:	4a3d      	ldr	r2, [pc, #244]	; (800a914 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x124>)
 800a81e:	8812      	ldrh	r2, [r2, #0]
 800a820:	fb02 f303 	mul.w	r3, r2, r3
 800a824:	617b      	str	r3, [r7, #20]
        uint8_t* ptr = (uint8_t*)adr;
 800a826:	68bb      	ldr	r3, [r7, #8]
 800a828:	627b      	str	r3, [r7, #36]	; 0x24
        void* double_buf = 0;
 800a82a:	2300      	movs	r3, #0
 800a82c:	623b      	str	r3, [r7, #32]
        void* anim_store = 0;
 800a82e:	2300      	movs	r3, #0
 800a830:	61fb      	str	r3, [r7, #28]
        if (useDoubleBuffering)
 800a832:	797b      	ldrb	r3, [r7, #5]
 800a834:	2b00      	cmp	r3, #0
 800a836:	d005      	beq.n	800a844 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x54>
        {
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer)
 800a838:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a83a:	697b      	ldr	r3, [r7, #20]
 800a83c:	4413      	add	r3, r2
 800a83e:	627b      	str	r3, [r7, #36]	; 0x24
            double_buf = (void*)ptr;
 800a840:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a842:	623b      	str	r3, [r7, #32]
        }
        if (useAnimationStorage)
 800a844:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 800a848:	2b00      	cmp	r3, #0
 800a84a:	d005      	beq.n	800a858 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x68>
        {
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer and possibly double buffer)
 800a84c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a84e:	697b      	ldr	r3, [r7, #20]
 800a850:	4413      	add	r3, r2
 800a852:	627b      	str	r3, [r7, #36]	; 0x24
            anim_store = (void*)ptr;
 800a854:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a856:	61fb      	str	r3, [r7, #28]
        }
        switch (depth)
 800a858:	88fb      	ldrh	r3, [r7, #6]
 800a85a:	3b01      	subs	r3, #1
 800a85c:	2b1f      	cmp	r3, #31
 800a85e:	d84d      	bhi.n	800a8fc <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x10c>
 800a860:	a201      	add	r2, pc, #4	; (adr r2, 800a868 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x78>)
 800a862:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a866:	bf00      	nop
 800a868:	0800a8e9 	.word	0x0800a8e9
 800a86c:	0800a8e9 	.word	0x0800a8e9
 800a870:	0800a8fd 	.word	0x0800a8fd
 800a874:	0800a8e9 	.word	0x0800a8e9
 800a878:	0800a8fd 	.word	0x0800a8fd
 800a87c:	0800a8fd 	.word	0x0800a8fd
 800a880:	0800a8fd 	.word	0x0800a8fd
 800a884:	0800a8e9 	.word	0x0800a8e9
 800a888:	0800a8fd 	.word	0x0800a8fd
 800a88c:	0800a8fd 	.word	0x0800a8fd
 800a890:	0800a8fd 	.word	0x0800a8fd
 800a894:	0800a8fd 	.word	0x0800a8fd
 800a898:	0800a8fd 	.word	0x0800a8fd
 800a89c:	0800a8fd 	.word	0x0800a8fd
 800a8a0:	0800a8fd 	.word	0x0800a8fd
 800a8a4:	0800a8e9 	.word	0x0800a8e9
 800a8a8:	0800a8fd 	.word	0x0800a8fd
 800a8ac:	0800a8fd 	.word	0x0800a8fd
 800a8b0:	0800a8fd 	.word	0x0800a8fd
 800a8b4:	0800a8fd 	.word	0x0800a8fd
 800a8b8:	0800a8fd 	.word	0x0800a8fd
 800a8bc:	0800a8fd 	.word	0x0800a8fd
 800a8c0:	0800a8fd 	.word	0x0800a8fd
 800a8c4:	0800a8e9 	.word	0x0800a8e9
 800a8c8:	0800a8fd 	.word	0x0800a8fd
 800a8cc:	0800a8fd 	.word	0x0800a8fd
 800a8d0:	0800a8fd 	.word	0x0800a8fd
 800a8d4:	0800a8fd 	.word	0x0800a8fd
 800a8d8:	0800a8fd 	.word	0x0800a8fd
 800a8dc:	0800a8fd 	.word	0x0800a8fd
 800a8e0:	0800a8fd 	.word	0x0800a8fd
 800a8e4:	0800a8e9 	.word	0x0800a8e9
        case 16:
        case 8:
        case 4:
        case 2:
        case 1:
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 800a8e8:	68fb      	ldr	r3, [r7, #12]
 800a8ea:	681b      	ldr	r3, [r3, #0]
 800a8ec:	3374      	adds	r3, #116	; 0x74
 800a8ee:	681c      	ldr	r4, [r3, #0]
 800a8f0:	69fb      	ldr	r3, [r7, #28]
 800a8f2:	6a3a      	ldr	r2, [r7, #32]
 800a8f4:	68b9      	ldr	r1, [r7, #8]
 800a8f6:	68f8      	ldr	r0, [r7, #12]
 800a8f8:	47a0      	blx	r4
            break;
 800a8fa:	e006      	b.n	800a90a <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x11a>
        default:
            assert(0 && "Unsupported bit depth");
 800a8fc:	4b06      	ldr	r3, [pc, #24]	; (800a918 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x128>)
 800a8fe:	4a07      	ldr	r2, [pc, #28]	; (800a91c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x12c>)
 800a900:	f240 3125 	movw	r1, #805	; 0x325
 800a904:	4806      	ldr	r0, [pc, #24]	; (800a920 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x130>)
 800a906:	f010 fcb3 	bl	801b270 <__assert_func>
            break;
        }
    }
 800a90a:	bf00      	nop
 800a90c:	372c      	adds	r7, #44	; 0x2c
 800a90e:	46bd      	mov	sp, r7
 800a910:	bd90      	pop	{r4, r7, pc}
 800a912:	bf00      	nop
 800a914:	200268fc 	.word	0x200268fc
 800a918:	0801c984 	.word	0x0801c984
 800a91c:	0801d038 	.word	0x0801d038
 800a920:	0801c9a4 	.word	0x0801c9a4

0800a924 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     *
     * @param [in] frameBuffer      Buffer for frame buffer data, must be non-null.
     * @param [in] doubleBuffer     If non-null, buffer for double buffer data. If null double buffering is disabled.
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage is disabled.
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800a924:	b580      	push	{r7, lr}
 800a926:	b084      	sub	sp, #16
 800a928:	af00      	add	r7, sp, #0
 800a92a:	60f8      	str	r0, [r7, #12]
 800a92c:	60b9      	str	r1, [r7, #8]
 800a92e:	607a      	str	r2, [r7, #4]
 800a930:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800a932:	68bb      	ldr	r3, [r7, #8]
 800a934:	2b00      	cmp	r3, #0
 800a936:	d106      	bne.n	800a946 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800a938:	4b11      	ldr	r3, [pc, #68]	; (800a980 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800a93a:	4a12      	ldr	r2, [pc, #72]	; (800a984 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800a93c:	f240 3137 	movw	r1, #823	; 0x337
 800a940:	4811      	ldr	r0, [pc, #68]	; (800a988 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x64>)
 800a942:	f010 fc95 	bl	801b270 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800a946:	68fb      	ldr	r3, [r7, #12]
 800a948:	68ba      	ldr	r2, [r7, #8]
 800a94a:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800a94c:	68fb      	ldr	r3, [r7, #12]
 800a94e:	687a      	ldr	r2, [r7, #4]
 800a950:	641a      	str	r2, [r3, #64]	; 0x40
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800a952:	68fb      	ldr	r3, [r7, #12]
 800a954:	683a      	ldr	r2, [r7, #0]
 800a956:	645a      	str	r2, [r3, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800a958:	687b      	ldr	r3, [r7, #4]
 800a95a:	2b00      	cmp	r3, #0
 800a95c:	bf14      	ite	ne
 800a95e:	2301      	movne	r3, #1
 800a960:	2300      	moveq	r3, #0
 800a962:	b2da      	uxtb	r2, r3
 800a964:	4b09      	ldr	r3, [pc, #36]	; (800a98c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x68>)
 800a966:	701a      	strb	r2, [r3, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800a968:	683b      	ldr	r3, [r7, #0]
 800a96a:	2b00      	cmp	r3, #0
 800a96c:	bf14      	ite	ne
 800a96e:	2301      	movne	r3, #1
 800a970:	2300      	moveq	r3, #0
 800a972:	b2da      	uxtb	r2, r3
 800a974:	4b06      	ldr	r3, [pc, #24]	; (800a990 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x6c>)
 800a976:	701a      	strb	r2, [r3, #0]
    }
 800a978:	bf00      	nop
 800a97a:	3710      	adds	r7, #16
 800a97c:	46bd      	mov	sp, r7
 800a97e:	bd80      	pop	{r7, pc}
 800a980:	0801c9e8 	.word	0x0801c9e8
 800a984:	0801cfe8 	.word	0x0801cfe8
 800a988:	0801c9a4 	.word	0x0801c9a4
 800a98c:	200268fe 	.word	0x200268fe
 800a990:	200268ff 	.word	0x200268ff

0800a994 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param ms Number of milliseconds to wait.
     *
     * @see void registerTaskDelayFunction(void (*delayF)(uint16_t))
     */
    virtual void taskDelay(uint16_t ms)
 800a994:	b580      	push	{r7, lr}
 800a996:	b082      	sub	sp, #8
 800a998:	af00      	add	r7, sp, #0
 800a99a:	6078      	str	r0, [r7, #4]
 800a99c:	460b      	mov	r3, r1
 800a99e:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800a9a0:	687b      	ldr	r3, [r7, #4]
 800a9a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a9a4:	2b00      	cmp	r3, #0
 800a9a6:	d004      	beq.n	800a9b2 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 800a9a8:	687b      	ldr	r3, [r7, #4]
 800a9aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a9ac:	887a      	ldrh	r2, [r7, #2]
 800a9ae:	4610      	mov	r0, r2
 800a9b0:	4798      	blx	r3
        }
    }
 800a9b2:	bf00      	nop
 800a9b4:	3708      	adds	r7, #8
 800a9b6:	46bd      	mov	sp, r7
 800a9b8:	bd80      	pop	{r7, pc}

0800a9ba <_ZN8touchgfx3HAL10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA implementation.
     *        As default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800a9ba:	b580      	push	{r7, lr}
 800a9bc:	b082      	sub	sp, #8
 800a9be:	af00      	add	r7, sp, #0
 800a9c0:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 800a9c2:	687b      	ldr	r3, [r7, #4]
 800a9c4:	685a      	ldr	r2, [r3, #4]
 800a9c6:	687b      	ldr	r3, [r7, #4]
 800a9c8:	685b      	ldr	r3, [r3, #4]
 800a9ca:	681b      	ldr	r3, [r3, #0]
 800a9cc:	3318      	adds	r3, #24
 800a9ce:	681b      	ldr	r3, [r3, #0]
 800a9d0:	4610      	mov	r0, r2
 800a9d2:	4798      	blx	r3
 800a9d4:	4603      	mov	r3, r0
    }
 800a9d6:	4618      	mov	r0, r3
 800a9d8:	3708      	adds	r7, #8
 800a9da:	46bd      	mov	sp, r7
 800a9dc:	bd80      	pop	{r7, pc}
	...

0800a9e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
     *
     * @brief Perform the actual display orientation change.
     *
     *        Perform the actual display orientation change.
     */
    virtual void performDisplayOrientationChange()
 800a9e0:	b480      	push	{r7}
 800a9e2:	b083      	sub	sp, #12
 800a9e4:	af00      	add	r7, sp, #0
 800a9e6:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800a9e8:	687b      	ldr	r3, [r7, #4]
 800a9ea:	f893 2074 	ldrb.w	r2, [r3, #116]	; 0x74
 800a9ee:	687b      	ldr	r3, [r7, #4]
 800a9f0:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800a9f4:	429a      	cmp	r2, r3
 800a9f6:	d017      	beq.n	800aa28 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>
        {
            if (DISPLAY_ROTATION == rotate0)
 800a9f8:	4b1a      	ldr	r3, [pc, #104]	; (800aa64 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800a9fa:	781b      	ldrb	r3, [r3, #0]
 800a9fc:	2b00      	cmp	r3, #0
 800a9fe:	d12a      	bne.n	800aa56 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800aa00:	4b19      	ldr	r3, [pc, #100]	; (800aa68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800aa02:	881a      	ldrh	r2, [r3, #0]
 800aa04:	4b19      	ldr	r3, [pc, #100]	; (800aa6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800aa06:	801a      	strh	r2, [r3, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800aa08:	4b19      	ldr	r3, [pc, #100]	; (800aa70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800aa0a:	881a      	ldrh	r2, [r3, #0]
 800aa0c:	4b19      	ldr	r3, [pc, #100]	; (800aa74 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800aa0e:	801a      	strh	r2, [r3, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 800aa10:	4b16      	ldr	r3, [pc, #88]	; (800aa6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800aa12:	881a      	ldrh	r2, [r3, #0]
 800aa14:	4b16      	ldr	r3, [pc, #88]	; (800aa70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800aa16:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 800aa18:	4b16      	ldr	r3, [pc, #88]	; (800aa74 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800aa1a:	881a      	ldrh	r2, [r3, #0]
 800aa1c:	4b12      	ldr	r3, [pc, #72]	; (800aa68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800aa1e:	801a      	strh	r2, [r3, #0]
                DISPLAY_ROTATION = rotate90;
 800aa20:	4b10      	ldr	r3, [pc, #64]	; (800aa64 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800aa22:	2201      	movs	r2, #1
 800aa24:	701a      	strb	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800aa26:	e016      	b.n	800aa56 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
        else if (DISPLAY_ROTATION != rotate0)
 800aa28:	4b0e      	ldr	r3, [pc, #56]	; (800aa64 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800aa2a:	781b      	ldrb	r3, [r3, #0]
 800aa2c:	2b00      	cmp	r3, #0
 800aa2e:	d012      	beq.n	800aa56 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 800aa30:	4b0f      	ldr	r3, [pc, #60]	; (800aa70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800aa32:	881a      	ldrh	r2, [r3, #0]
 800aa34:	4b0d      	ldr	r3, [pc, #52]	; (800aa6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800aa36:	801a      	strh	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 800aa38:	4b0b      	ldr	r3, [pc, #44]	; (800aa68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800aa3a:	881a      	ldrh	r2, [r3, #0]
 800aa3c:	4b0d      	ldr	r3, [pc, #52]	; (800aa74 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800aa3e:	801a      	strh	r2, [r3, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 800aa40:	4b0c      	ldr	r3, [pc, #48]	; (800aa74 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800aa42:	881a      	ldrh	r2, [r3, #0]
 800aa44:	4b0a      	ldr	r3, [pc, #40]	; (800aa70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800aa46:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 800aa48:	4b08      	ldr	r3, [pc, #32]	; (800aa6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800aa4a:	881a      	ldrh	r2, [r3, #0]
 800aa4c:	4b06      	ldr	r3, [pc, #24]	; (800aa68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800aa4e:	801a      	strh	r2, [r3, #0]
            DISPLAY_ROTATION = rotate0;
 800aa50:	4b04      	ldr	r3, [pc, #16]	; (800aa64 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800aa52:	2200      	movs	r2, #0
 800aa54:	701a      	strb	r2, [r3, #0]
    }
 800aa56:	bf00      	nop
 800aa58:	370c      	adds	r7, #12
 800aa5a:	46bd      	mov	sp, r7
 800aa5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa60:	4770      	bx	lr
 800aa62:	bf00      	nop
 800aa64:	200268f8 	.word	0x200268f8
 800aa68:	200268f4 	.word	0x200268f4
 800aa6c:	200268fa 	.word	0x200268fa
 800aa70:	200268f6 	.word	0x200268f6
 800aa74:	200268fc 	.word	0x200268fc

0800aa78 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800aa78:	b580      	push	{r7, lr}
 800aa7a:	b082      	sub	sp, #8
 800aa7c:	af00      	add	r7, sp, #0
 800aa7e:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800aa80:	687b      	ldr	r3, [r7, #4]
 800aa82:	4618      	mov	r0, r3
 800aa84:	f001 fe88 	bl	800c798 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800aa88:	bf00      	nop
 800aa8a:	3708      	adds	r7, #8
 800aa8c:	46bd      	mov	sp, r7
 800aa8e:	bd80      	pop	{r7, pc}

0800aa90 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800aa90:	b580      	push	{r7, lr}
 800aa92:	b082      	sub	sp, #8
 800aa94:	af00      	add	r7, sp, #0
 800aa96:	6078      	str	r0, [r7, #4]
 800aa98:	4a05      	ldr	r2, [pc, #20]	; (800aab0 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800aa9a:	687b      	ldr	r3, [r7, #4]
 800aa9c:	601a      	str	r2, [r3, #0]
 800aa9e:	687b      	ldr	r3, [r7, #4]
 800aaa0:	4618      	mov	r0, r3
 800aaa2:	f7ff fe43 	bl	800a72c <_ZN8touchgfx3HALD1Ev>
 800aaa6:	687b      	ldr	r3, [r7, #4]
 800aaa8:	4618      	mov	r0, r3
 800aaaa:	3708      	adds	r7, #8
 800aaac:	46bd      	mov	sp, r7
 800aaae:	bd80      	pop	{r7, pc}
 800aab0:	0801d210 	.word	0x0801d210

0800aab4 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800aab4:	b580      	push	{r7, lr}
 800aab6:	b082      	sub	sp, #8
 800aab8:	af00      	add	r7, sp, #0
 800aaba:	6078      	str	r0, [r7, #4]
 800aabc:	6878      	ldr	r0, [r7, #4]
 800aabe:	f7ff ffe7 	bl	800aa90 <_ZN20TouchGFXGeneratedHALD1Ev>
 800aac2:	2178      	movs	r1, #120	; 0x78
 800aac4:	6878      	ldr	r0, [r7, #4]
 800aac6:	f010 fba7 	bl	801b218 <_ZdlPvj>
 800aaca:	687b      	ldr	r3, [r7, #4]
 800aacc:	4618      	mov	r0, r3
 800aace:	3708      	adds	r7, #8
 800aad0:	46bd      	mov	sp, r7
 800aad2:	bd80      	pop	{r7, pc}

0800aad4 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800aad4:	b580      	push	{r7, lr}
 800aad6:	b082      	sub	sp, #8
 800aad8:	af00      	add	r7, sp, #0
 800aada:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800aadc:	687b      	ldr	r3, [r7, #4]
 800aade:	4618      	mov	r0, r3
 800aae0:	f7ff ffca 	bl	800aa78 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800aae4:	bf00      	nop
 800aae6:	3708      	adds	r7, #8
 800aae8:	46bd      	mov	sp, r7
 800aaea:	bd80      	pop	{r7, pc}

0800aaec <_ZN11TouchGFXHAL10initializeEv>:
#include "stm32f4xx.h"

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 800aaec:	b580      	push	{r7, lr}
 800aaee:	b082      	sub	sp, #8
 800aaf0:	af00      	add	r7, sp, #0
 800aaf2:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800aaf4:	687b      	ldr	r3, [r7, #4]
 800aaf6:	4618      	mov	r0, r3
 800aaf8:	f001 fac4 	bl	800c084 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800aafc:	bf00      	nop
 800aafe:	3708      	adds	r7, #8
 800ab00:	46bd      	mov	sp, r7
 800ab02:	bd80      	pop	{r7, pc}

0800ab04 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800ab04:	b580      	push	{r7, lr}
 800ab06:	b082      	sub	sp, #8
 800ab08:	af00      	add	r7, sp, #0
 800ab0a:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800ab0c:	687b      	ldr	r3, [r7, #4]
 800ab0e:	4618      	mov	r0, r3
 800ab10:	f001 fb46 	bl	800c1a0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800ab14:	4603      	mov	r3, r0
}
 800ab16:	4618      	mov	r0, r3
 800ab18:	3708      	adds	r7, #8
 800ab1a:	46bd      	mov	sp, r7
 800ab1c:	bd80      	pop	{r7, pc}

0800ab1e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800ab1e:	b580      	push	{r7, lr}
 800ab20:	b082      	sub	sp, #8
 800ab22:	af00      	add	r7, sp, #0
 800ab24:	6078      	str	r0, [r7, #4]
 800ab26:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800ab28:	687b      	ldr	r3, [r7, #4]
 800ab2a:	6839      	ldr	r1, [r7, #0]
 800ab2c:	4618      	mov	r0, r3
 800ab2e:	f001 fb45 	bl	800c1bc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800ab32:	bf00      	nop
 800ab34:	3708      	adds	r7, #8
 800ab36:	46bd      	mov	sp, r7
 800ab38:	bd80      	pop	{r7, pc}

0800ab3a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800ab3a:	b580      	push	{r7, lr}
 800ab3c:	b082      	sub	sp, #8
 800ab3e:	af00      	add	r7, sp, #0
 800ab40:	6078      	str	r0, [r7, #4]
 800ab42:	6039      	str	r1, [r7, #0]
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800ab44:	687b      	ldr	r3, [r7, #4]
 800ab46:	6839      	ldr	r1, [r7, #0]
 800ab48:	4618      	mov	r0, r3
 800ab4a:	f001 fb4d 	bl	800c1e8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800ab4e:	bf00      	nop
 800ab50:	3708      	adds	r7, #8
 800ab52:	46bd      	mov	sp, r7
 800ab54:	bd80      	pop	{r7, pc}

0800ab56 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800ab56:	b580      	push	{r7, lr}
 800ab58:	b082      	sub	sp, #8
 800ab5a:	af00      	add	r7, sp, #0
 800ab5c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800ab5e:	687b      	ldr	r3, [r7, #4]
 800ab60:	4618      	mov	r0, r3
 800ab62:	f001 fac3 	bl	800c0ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800ab66:	bf00      	nop
 800ab68:	3708      	adds	r7, #8
 800ab6a:	46bd      	mov	sp, r7
 800ab6c:	bd80      	pop	{r7, pc}

0800ab6e <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800ab6e:	b580      	push	{r7, lr}
 800ab70:	b082      	sub	sp, #8
 800ab72:	af00      	add	r7, sp, #0
 800ab74:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800ab76:	687b      	ldr	r3, [r7, #4]
 800ab78:	4618      	mov	r0, r3
 800ab7a:	f001 fac7 	bl	800c10c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800ab7e:	bf00      	nop
 800ab80:	3708      	adds	r7, #8
 800ab82:	46bd      	mov	sp, r7
 800ab84:	bd80      	pop	{r7, pc}

0800ab86 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800ab86:	b580      	push	{r7, lr}
 800ab88:	b082      	sub	sp, #8
 800ab8a:	af00      	add	r7, sp, #0
 800ab8c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800ab8e:	687b      	ldr	r3, [r7, #4]
 800ab90:	4618      	mov	r0, r3
 800ab92:	f001 fac9 	bl	800c128 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800ab96:	bf00      	nop
 800ab98:	3708      	adds	r7, #8
 800ab9a:	46bd      	mov	sp, r7
 800ab9c:	bd80      	pop	{r7, pc}

0800ab9e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800ab9e:	b580      	push	{r7, lr}
 800aba0:	b082      	sub	sp, #8
 800aba2:	af00      	add	r7, sp, #0
 800aba4:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800aba6:	687b      	ldr	r3, [r7, #4]
 800aba8:	4618      	mov	r0, r3
 800abaa:	f001 facb 	bl	800c144 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800abae:	bf00      	nop
 800abb0:	3708      	adds	r7, #8
 800abb2:	46bd      	mov	sp, r7
 800abb4:	bd80      	pop	{r7, pc}
	...

0800abb8 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800abb8:	b580      	push	{r7, lr}
 800abba:	b082      	sub	sp, #8
 800abbc:	af00      	add	r7, sp, #0
 800abbe:	6078      	str	r0, [r7, #4]
 800abc0:	4a05      	ldr	r2, [pc, #20]	; (800abd8 <_ZN11TouchGFXHALD1Ev+0x20>)
 800abc2:	687b      	ldr	r3, [r7, #4]
 800abc4:	601a      	str	r2, [r3, #0]
 800abc6:	687b      	ldr	r3, [r7, #4]
 800abc8:	4618      	mov	r0, r3
 800abca:	f7ff ff61 	bl	800aa90 <_ZN20TouchGFXGeneratedHALD1Ev>
 800abce:	687b      	ldr	r3, [r7, #4]
 800abd0:	4618      	mov	r0, r3
 800abd2:	3708      	adds	r7, #8
 800abd4:	46bd      	mov	sp, r7
 800abd6:	bd80      	pop	{r7, pc}
 800abd8:	0801cf3c 	.word	0x0801cf3c

0800abdc <_ZN11TouchGFXHALD0Ev>:
 800abdc:	b580      	push	{r7, lr}
 800abde:	b082      	sub	sp, #8
 800abe0:	af00      	add	r7, sp, #0
 800abe2:	6078      	str	r0, [r7, #4]
 800abe4:	6878      	ldr	r0, [r7, #4]
 800abe6:	f7ff ffe7 	bl	800abb8 <_ZN11TouchGFXHALD1Ev>
 800abea:	2178      	movs	r1, #120	; 0x78
 800abec:	6878      	ldr	r0, [r7, #4]
 800abee:	f010 fb13 	bl	801b218 <_ZdlPvj>
 800abf2:	687b      	ldr	r3, [r7, #4]
 800abf4:	4618      	mov	r0, r3
 800abf6:	3708      	adds	r7, #8
 800abf8:	46bd      	mov	sp, r7
 800abfa:	bd80      	pop	{r7, pc}

0800abfc <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800abfc:	b480      	push	{r7}
 800abfe:	af00      	add	r7, sp, #0
  fb_sem = 0;
 800ac00:	4b05      	ldr	r3, [pc, #20]	; (800ac18 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800ac02:	2200      	movs	r2, #0
 800ac04:	601a      	str	r2, [r3, #0]
  vsync_sem = 0;
 800ac06:	4b05      	ldr	r3, [pc, #20]	; (800ac1c <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800ac08:	2200      	movs	r2, #0
 800ac0a:	601a      	str	r2, [r3, #0]
}
 800ac0c:	bf00      	nop
 800ac0e:	46bd      	mov	sp, r7
 800ac10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac14:	4770      	bx	lr
 800ac16:	bf00      	nop
 800ac18:	200259bc 	.word	0x200259bc
 800ac1c:	200259c0 	.word	0x200259c0

0800ac20 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800ac20:	b480      	push	{r7}
 800ac22:	af00      	add	r7, sp, #0
  while(fb_sem);
 800ac24:	4b08      	ldr	r3, [pc, #32]	; (800ac48 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800ac26:	681b      	ldr	r3, [r3, #0]
 800ac28:	2b00      	cmp	r3, #0
 800ac2a:	bf14      	ite	ne
 800ac2c:	2301      	movne	r3, #1
 800ac2e:	2300      	moveq	r3, #0
 800ac30:	b2db      	uxtb	r3, r3
 800ac32:	2b00      	cmp	r3, #0
 800ac34:	d000      	beq.n	800ac38 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x18>
 800ac36:	e7f5      	b.n	800ac24 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x4>
  fb_sem = 1;
 800ac38:	4b03      	ldr	r3, [pc, #12]	; (800ac48 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800ac3a:	2201      	movs	r2, #1
 800ac3c:	601a      	str	r2, [r3, #0]
}
 800ac3e:	bf00      	nop
 800ac40:	46bd      	mov	sp, r7
 800ac42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac46:	4770      	bx	lr
 800ac48:	200259bc 	.word	0x200259bc

0800ac4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800ac4c:	b480      	push	{r7}
 800ac4e:	af00      	add	r7, sp, #0
  fb_sem = 0;
 800ac50:	4b03      	ldr	r3, [pc, #12]	; (800ac60 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800ac52:	2200      	movs	r2, #0
 800ac54:	601a      	str	r2, [r3, #0]
}
 800ac56:	bf00      	nop
 800ac58:	46bd      	mov	sp, r7
 800ac5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac5e:	4770      	bx	lr
 800ac60:	200259bc 	.word	0x200259bc

0800ac64 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800ac64:	b480      	push	{r7}
 800ac66:	af00      	add	r7, sp, #0
  fb_sem = 1;
 800ac68:	4b03      	ldr	r3, [pc, #12]	; (800ac78 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800ac6a:	2201      	movs	r2, #1
 800ac6c:	601a      	str	r2, [r3, #0]
}
 800ac6e:	bf00      	nop
 800ac70:	46bd      	mov	sp, r7
 800ac72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac76:	4770      	bx	lr
 800ac78:	200259bc 	.word	0x200259bc

0800ac7c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800ac7c:	b480      	push	{r7}
 800ac7e:	af00      	add	r7, sp, #0
  fb_sem = 0;
 800ac80:	4b03      	ldr	r3, [pc, #12]	; (800ac90 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800ac82:	2200      	movs	r2, #0
 800ac84:	601a      	str	r2, [r3, #0]
}
 800ac86:	bf00      	nop
 800ac88:	46bd      	mov	sp, r7
 800ac8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac8e:	4770      	bx	lr
 800ac90:	200259bc 	.word	0x200259bc

0800ac94 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800ac94:	b480      	push	{r7}
 800ac96:	af00      	add	r7, sp, #0
  vsync_sem = 1;
 800ac98:	4b03      	ldr	r3, [pc, #12]	; (800aca8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800ac9a:	2201      	movs	r2, #1
 800ac9c:	601a      	str	r2, [r3, #0]
}
 800ac9e:	bf00      	nop
 800aca0:	46bd      	mov	sp, r7
 800aca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aca6:	4770      	bx	lr
 800aca8:	200259c0 	.word	0x200259c0

0800acac <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800acac:	b580      	push	{r7, lr}
 800acae:	af00      	add	r7, sp, #0
  if(vsync_sem)
 800acb0:	4b0a      	ldr	r3, [pc, #40]	; (800acdc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800acb2:	681b      	ldr	r3, [r3, #0]
 800acb4:	2b00      	cmp	r3, #0
 800acb6:	bf14      	ite	ne
 800acb8:	2301      	movne	r3, #1
 800acba:	2300      	moveq	r3, #0
 800acbc:	b2db      	uxtb	r3, r3
 800acbe:	2b00      	cmp	r3, #0
 800acc0:	d00a      	beq.n	800acd8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
  {
    vsync_sem = 0;
 800acc2:	4b06      	ldr	r3, [pc, #24]	; (800acdc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800acc4:	2200      	movs	r2, #0
 800acc6:	601a      	str	r2, [r3, #0]
    HAL::getInstance()->backPorchExited();
 800acc8:	f7fe fa68 	bl	800919c <_ZN8touchgfx3HAL11getInstanceEv>
 800accc:	4602      	mov	r2, r0
 800acce:	6813      	ldr	r3, [r2, #0]
 800acd0:	3358      	adds	r3, #88	; 0x58
 800acd2:	681b      	ldr	r3, [r3, #0]
 800acd4:	4610      	mov	r0, r2
 800acd6:	4798      	blx	r3
  }
}
 800acd8:	bf00      	nop
 800acda:	bd80      	pop	{r7, pc}
 800acdc:	200259c0 	.word	0x200259c0

0800ace0 <_ZN8touchgfx10OSWrappers9taskDelayEt>:
 *
 * see HAL::setFrameRefreshStrategy(FrameRefreshStrategy s)
 * see HAL::registerTaskDelayFunction(void (*delayF)(uint16_t))
 */
void OSWrappers::taskDelay(uint16_t ms)
{
 800ace0:	b580      	push	{r7, lr}
 800ace2:	b082      	sub	sp, #8
 800ace4:	af00      	add	r7, sp, #0
 800ace6:	4603      	mov	r3, r0
 800ace8:	80fb      	strh	r3, [r7, #6]
    HAL_Delay(ms);
 800acea:	88fb      	ldrh	r3, [r7, #6]
 800acec:	4618      	mov	r0, r3
 800acee:	f7f8 fa95 	bl	800321c <HAL_Delay>
}
 800acf2:	bf00      	nop
 800acf4:	3708      	adds	r7, #8
 800acf6:	46bd      	mov	sp, r7
 800acf8:	bd80      	pop	{r7, pc}
	...

0800acfc <__NVIC_EnableIRQ>:
{
 800acfc:	b480      	push	{r7}
 800acfe:	b083      	sub	sp, #12
 800ad00:	af00      	add	r7, sp, #0
 800ad02:	4603      	mov	r3, r0
 800ad04:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800ad06:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ad0a:	2b00      	cmp	r3, #0
 800ad0c:	db0d      	blt.n	800ad2a <__NVIC_EnableIRQ+0x2e>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800ad0e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ad12:	b2db      	uxtb	r3, r3
 800ad14:	f003 021f 	and.w	r2, r3, #31
 800ad18:	4907      	ldr	r1, [pc, #28]	; (800ad38 <__NVIC_EnableIRQ+0x3c>)
 800ad1a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ad1e:	095b      	lsrs	r3, r3, #5
 800ad20:	2001      	movs	r0, #1
 800ad22:	fa00 f202 	lsl.w	r2, r0, r2
 800ad26:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800ad2a:	bf00      	nop
 800ad2c:	370c      	adds	r7, #12
 800ad2e:	46bd      	mov	sp, r7
 800ad30:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad34:	4770      	bx	lr
 800ad36:	bf00      	nop
 800ad38:	e000e100 	.word	0xe000e100

0800ad3c <__NVIC_DisableIRQ>:
{
 800ad3c:	b480      	push	{r7}
 800ad3e:	b083      	sub	sp, #12
 800ad40:	af00      	add	r7, sp, #0
 800ad42:	4603      	mov	r3, r0
 800ad44:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800ad46:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ad4a:	2b00      	cmp	r3, #0
 800ad4c:	db12      	blt.n	800ad74 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800ad4e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ad52:	b2db      	uxtb	r3, r3
 800ad54:	f003 021f 	and.w	r2, r3, #31
 800ad58:	4909      	ldr	r1, [pc, #36]	; (800ad80 <__NVIC_DisableIRQ+0x44>)
 800ad5a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ad5e:	095b      	lsrs	r3, r3, #5
 800ad60:	2001      	movs	r0, #1
 800ad62:	fa00 f202 	lsl.w	r2, r0, r2
 800ad66:	3320      	adds	r3, #32
 800ad68:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800ad6c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800ad70:	f3bf 8f6f 	isb	sy
}
 800ad74:	bf00      	nop
 800ad76:	370c      	adds	r7, #12
 800ad78:	46bd      	mov	sp, r7
 800ad7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad7e:	4770      	bx	lr
 800ad80:	e000e100 	.word	0xe000e100

0800ad84 <_ZN8touchgfx9colortypeC1Ev>:
    colortype() : color(0) {}
 800ad84:	b480      	push	{r7}
 800ad86:	b083      	sub	sp, #12
 800ad88:	af00      	add	r7, sp, #0
 800ad8a:	6078      	str	r0, [r7, #4]
 800ad8c:	687b      	ldr	r3, [r7, #4]
 800ad8e:	2200      	movs	r2, #0
 800ad90:	601a      	str	r2, [r3, #0]
 800ad92:	687b      	ldr	r3, [r7, #4]
 800ad94:	4618      	mov	r0, r3
 800ad96:	370c      	adds	r7, #12
 800ad98:	46bd      	mov	sp, r7
 800ad9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad9e:	4770      	bx	lr

0800ada0 <_ZNK8touchgfx9colortype10getColor32Ev>:
    inline uint32_t getColor32() const
 800ada0:	b480      	push	{r7}
 800ada2:	b083      	sub	sp, #12
 800ada4:	af00      	add	r7, sp, #0
 800ada6:	6078      	str	r0, [r7, #4]
        return color;
 800ada8:	687b      	ldr	r3, [r7, #4]
 800adaa:	681b      	ldr	r3, [r3, #0]
    }
 800adac:	4618      	mov	r0, r3
 800adae:	370c      	adds	r7, #12
 800adb0:	46bd      	mov	sp, r7
 800adb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adb6:	4770      	bx	lr

0800adb8 <_ZNK8touchgfx9colortypecvtEv>:
    operator uint16_t() const
 800adb8:	b480      	push	{r7}
 800adba:	b083      	sub	sp, #12
 800adbc:	af00      	add	r7, sp, #0
 800adbe:	6078      	str	r0, [r7, #4]
        return (uint16_t)color;
 800adc0:	687b      	ldr	r3, [r7, #4]
 800adc2:	681b      	ldr	r3, [r3, #0]
 800adc4:	b29b      	uxth	r3, r3
    }
 800adc6:	4618      	mov	r0, r3
 800adc8:	370c      	adds	r7, #12
 800adca:	46bd      	mov	sp, r7
 800adcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800add0:	4770      	bx	lr
	...

0800add4 <_ZN8touchgfx9DMA_QueueD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~DMA_Queue()
 800add4:	b480      	push	{r7}
 800add6:	b083      	sub	sp, #12
 800add8:	af00      	add	r7, sp, #0
 800adda:	6078      	str	r0, [r7, #4]
    {
 800addc:	4a04      	ldr	r2, [pc, #16]	; (800adf0 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800adde:	687b      	ldr	r3, [r7, #4]
 800ade0:	601a      	str	r2, [r3, #0]
    }
 800ade2:	687b      	ldr	r3, [r7, #4]
 800ade4:	4618      	mov	r0, r3
 800ade6:	370c      	adds	r7, #12
 800ade8:	46bd      	mov	sp, r7
 800adea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adee:	4770      	bx	lr
 800adf0:	0801d0e4 	.word	0x0801d0e4

0800adf4 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800adf4:	b580      	push	{r7, lr}
 800adf6:	b082      	sub	sp, #8
 800adf8:	af00      	add	r7, sp, #0
 800adfa:	6078      	str	r0, [r7, #4]
    }
 800adfc:	6878      	ldr	r0, [r7, #4]
 800adfe:	f7ff ffe9 	bl	800add4 <_ZN8touchgfx9DMA_QueueD1Ev>
 800ae02:	2104      	movs	r1, #4
 800ae04:	6878      	ldr	r0, [r7, #4]
 800ae06:	f010 fa07 	bl	801b218 <_ZdlPvj>
 800ae0a:	687b      	ldr	r3, [r7, #4]
 800ae0c:	4618      	mov	r0, r3
 800ae0e:	3708      	adds	r7, #8
 800ae10:	46bd      	mov	sp, r7
 800ae12:	bd80      	pop	{r7, pc}

0800ae14 <_ZN8touchgfx13DMA_Interface5flushEv>:
     *
     * @brief This function blocks until all DMA transfers in the queue have been completed.
     *
     *        This function blocks until all DMA transfers in the queue have been completed.
     */
    virtual void flush()
 800ae14:	b580      	push	{r7, lr}
 800ae16:	b082      	sub	sp, #8
 800ae18:	af00      	add	r7, sp, #0
 800ae1a:	6078      	str	r0, [r7, #4]
    {
        waitForFrameBufferSemaphore();
 800ae1c:	687b      	ldr	r3, [r7, #4]
 800ae1e:	681b      	ldr	r3, [r3, #0]
 800ae20:	3344      	adds	r3, #68	; 0x44
 800ae22:	681b      	ldr	r3, [r3, #0]
 800ae24:	6878      	ldr	r0, [r7, #4]
 800ae26:	4798      	blx	r3
    }
 800ae28:	bf00      	nop
 800ae2a:	3708      	adds	r7, #8
 800ae2c:	46bd      	mov	sp, r7
 800ae2e:	bd80      	pop	{r7, pc}

0800ae30 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA_Interface implementation.
     *        As default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
 800ae30:	b480      	push	{r7}
 800ae32:	b083      	sub	sp, #12
 800ae34:	af00      	add	r7, sp, #0
 800ae36:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 800ae38:	2300      	movs	r3, #0
    }
 800ae3a:	4618      	mov	r0, r3
 800ae3c:	370c      	adds	r7, #12
 800ae3e:	46bd      	mov	sp, r7
 800ae40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae44:	4770      	bx	lr
	...

0800ae48 <_ZN8touchgfx13DMA_InterfaceD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~DMA_Interface()
 800ae48:	b480      	push	{r7}
 800ae4a:	b083      	sub	sp, #12
 800ae4c:	af00      	add	r7, sp, #0
 800ae4e:	6078      	str	r0, [r7, #4]
    {
 800ae50:	4a04      	ldr	r2, [pc, #16]	; (800ae64 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800ae52:	687b      	ldr	r3, [r7, #4]
 800ae54:	601a      	str	r2, [r3, #0]
    }
 800ae56:	687b      	ldr	r3, [r7, #4]
 800ae58:	4618      	mov	r0, r3
 800ae5a:	370c      	adds	r7, #12
 800ae5c:	46bd      	mov	sp, r7
 800ae5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae62:	4770      	bx	lr
 800ae64:	0801dc68 	.word	0x0801dc68

0800ae68 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800ae68:	b580      	push	{r7, lr}
 800ae6a:	b082      	sub	sp, #8
 800ae6c:	af00      	add	r7, sp, #0
 800ae6e:	6078      	str	r0, [r7, #4]
    }
 800ae70:	6878      	ldr	r0, [r7, #4]
 800ae72:	f7ff ffe9 	bl	800ae48 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800ae76:	210c      	movs	r1, #12
 800ae78:	6878      	ldr	r0, [r7, #4]
 800ae7a:	f010 f9cd 	bl	801b218 <_ZdlPvj>
 800ae7e:	687b      	ldr	r3, [r7, #4]
 800ae80:	4618      	mov	r0, r3
 800ae82:	3708      	adds	r7, #8
 800ae84:	46bd      	mov	sp, r7
 800ae86:	bd80      	pop	{r7, pc}

0800ae88 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
     *
     *        Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800ae88:	b480      	push	{r7}
 800ae8a:	b083      	sub	sp, #12
 800ae8c:	af00      	add	r7, sp, #0
 800ae8e:	6078      	str	r0, [r7, #4]
 800ae90:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800ae92:	4a09      	ldr	r2, [pc, #36]	; (800aeb8 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800ae94:	687b      	ldr	r3, [r7, #4]
 800ae96:	601a      	str	r2, [r3, #0]
 800ae98:	687b      	ldr	r3, [r7, #4]
 800ae9a:	683a      	ldr	r2, [r7, #0]
 800ae9c:	605a      	str	r2, [r3, #4]
 800ae9e:	687b      	ldr	r3, [r7, #4]
 800aea0:	2200      	movs	r2, #0
 800aea2:	721a      	strb	r2, [r3, #8]
 800aea4:	687b      	ldr	r3, [r7, #4]
 800aea6:	2200      	movs	r2, #0
 800aea8:	725a      	strb	r2, [r3, #9]
    {
    }
 800aeaa:	687b      	ldr	r3, [r7, #4]
 800aeac:	4618      	mov	r0, r3
 800aeae:	370c      	adds	r7, #12
 800aeb0:	46bd      	mov	sp, r7
 800aeb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aeb6:	4770      	bx	lr
 800aeb8:	0801dc68 	.word	0x0801dc68

0800aebc <_ZN8touchgfx3HAL18signalDMAInterruptEv>:
    void signalDMAInterrupt()
 800aebc:	b580      	push	{r7, lr}
 800aebe:	b082      	sub	sp, #8
 800aec0:	af00      	add	r7, sp, #0
 800aec2:	6078      	str	r0, [r7, #4]
        dma.signalDMAInterrupt();
 800aec4:	687b      	ldr	r3, [r7, #4]
 800aec6:	685a      	ldr	r2, [r3, #4]
 800aec8:	687b      	ldr	r3, [r7, #4]
 800aeca:	685b      	ldr	r3, [r3, #4]
 800aecc:	681b      	ldr	r3, [r3, #0]
 800aece:	3314      	adds	r3, #20
 800aed0:	681b      	ldr	r3, [r3, #0]
 800aed2:	4610      	mov	r0, r2
 800aed4:	4798      	blx	r3
    }
 800aed6:	bf00      	nop
 800aed8:	3708      	adds	r7, #8
 800aeda:	46bd      	mov	sp, r7
 800aedc:	bd80      	pop	{r7, pc}

0800aede <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
 800aede:	b580      	push	{r7, lr}
 800aee0:	b082      	sub	sp, #8
 800aee2:	af00      	add	r7, sp, #0
 800aee4:	6078      	str	r0, [r7, #4]
    {
        executeCompleted();
 800aee6:	687a      	ldr	r2, [r7, #4]
 800aee8:	687b      	ldr	r3, [r7, #4]
 800aeea:	681b      	ldr	r3, [r3, #0]
 800aeec:	3328      	adds	r3, #40	; 0x28
 800aeee:	681b      	ldr	r3, [r3, #0]
 800aef0:	4610      	mov	r0, r2
 800aef2:	4798      	blx	r3
    }
 800aef4:	bf00      	nop
 800aef6:	3708      	adds	r7, #8
 800aef8:	46bd      	mov	sp, r7
 800aefa:	bd80      	pop	{r7, pc}

0800aefc <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>:
/* USER CODE END user includes */

extern DMA2D_HandleTypeDef hdma2d;

static HAL_StatusTypeDef HAL_DMA2D_SetMode(DMA2D_HandleTypeDef *hdma2d, uint32_t mode, uint32_t color, uint32_t offset)
{
 800aefc:	b480      	push	{r7}
 800aefe:	b085      	sub	sp, #20
 800af00:	af00      	add	r7, sp, #0
 800af02:	60f8      	str	r0, [r7, #12]
 800af04:	60b9      	str	r1, [r7, #8]
 800af06:	607a      	str	r2, [r7, #4]
 800af08:	603b      	str	r3, [r7, #0]
    assert_param(IS_DMA2D_ALL_INSTANCE(hdma2d->Instance));

    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800af0a:	68fb      	ldr	r3, [r7, #12]
 800af0c:	681b      	ldr	r3, [r3, #0]
 800af0e:	681b      	ldr	r3, [r3, #0]
 800af10:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 800af14:	68ba      	ldr	r2, [r7, #8]
 800af16:	68fb      	ldr	r3, [r7, #12]
 800af18:	681b      	ldr	r3, [r3, #0]
 800af1a:	430a      	orrs	r2, r1
 800af1c:	601a      	str	r2, [r3, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 800af1e:	68fb      	ldr	r3, [r7, #12]
 800af20:	681b      	ldr	r3, [r3, #0]
 800af22:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800af24:	f023 0107 	bic.w	r1, r3, #7
 800af28:	687a      	ldr	r2, [r7, #4]
 800af2a:	68fb      	ldr	r3, [r7, #12]
 800af2c:	681b      	ldr	r3, [r3, #0]
 800af2e:	430a      	orrs	r2, r1
 800af30:	635a      	str	r2, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 800af32:	68fb      	ldr	r3, [r7, #12]
 800af34:	681b      	ldr	r3, [r3, #0]
 800af36:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800af38:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800af3c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800af40:	6839      	ldr	r1, [r7, #0]
 800af42:	68fa      	ldr	r2, [r7, #12]
 800af44:	6812      	ldr	r2, [r2, #0]
 800af46:	430b      	orrs	r3, r1
 800af48:	6413      	str	r3, [r2, #64]	; 0x40

    return HAL_OK;
 800af4a:	2300      	movs	r3, #0
}
 800af4c:	4618      	mov	r0, r3
 800af4e:	3714      	adds	r7, #20
 800af50:	46bd      	mov	sp, r7
 800af52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af56:	4770      	bx	lr

0800af58 <DMA2D_XferCpltCallback>:

extern "C" {

static void DMA2D_XferCpltCallback(DMA2D_HandleTypeDef* handle)
{
 800af58:	b580      	push	{r7, lr}
 800af5a:	b082      	sub	sp, #8
 800af5c:	af00      	add	r7, sp, #0
 800af5e:	6078      	str	r0, [r7, #4]
    touchgfx::HAL::getInstance()->signalDMAInterrupt();
 800af60:	f7fe f91c 	bl	800919c <_ZN8touchgfx3HAL11getInstanceEv>
 800af64:	4603      	mov	r3, r0
 800af66:	4618      	mov	r0, r3
 800af68:	f7ff ffa8 	bl	800aebc <_ZN8touchgfx3HAL18signalDMAInterruptEv>
}
 800af6c:	bf00      	nop
 800af6e:	3708      	adds	r7, #8
 800af70:	46bd      	mov	sp, r7
 800af72:	bd80      	pop	{r7, pc}

0800af74 <DMA2D_XferErrorCallback>:

static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
{
 800af74:	b580      	push	{r7, lr}
 800af76:	b082      	sub	sp, #8
 800af78:	af00      	add	r7, sp, #0
 800af7a:	6078      	str	r0, [r7, #4]
    assert(0);
 800af7c:	4b02      	ldr	r3, [pc, #8]	; (800af88 <DMA2D_XferErrorCallback+0x14>)
 800af7e:	4a03      	ldr	r2, [pc, #12]	; (800af8c <DMA2D_XferErrorCallback+0x18>)
 800af80:	2136      	movs	r1, #54	; 0x36
 800af82:	4803      	ldr	r0, [pc, #12]	; (800af90 <DMA2D_XferErrorCallback+0x1c>)
 800af84:	f010 f974 	bl	801b270 <__assert_func>
 800af88:	0801ca20 	.word	0x0801ca20
 800af8c:	0801d100 	.word	0x0801d100
 800af90:	0801ca24 	.word	0x0801ca24

0800af94 <_ZN8touchgfx6BlitOpC1Ev>:
 *        (frame buffer) using DMA.
 *
 *        BlitOp instances carry the required information for performing operations on the LCD
 *        (frame buffer) using DMA.
 */
struct BlitOp
 800af94:	b580      	push	{r7, lr}
 800af96:	b082      	sub	sp, #8
 800af98:	af00      	add	r7, sp, #0
 800af9a:	6078      	str	r0, [r7, #4]
 800af9c:	687b      	ldr	r3, [r7, #4]
 800af9e:	3318      	adds	r3, #24
 800afa0:	4618      	mov	r0, r3
 800afa2:	f7ff feef 	bl	800ad84 <_ZN8touchgfx9colortypeC1Ev>
 800afa6:	687b      	ldr	r3, [r7, #4]
 800afa8:	4618      	mov	r0, r3
 800afaa:	3708      	adds	r7, #8
 800afac:	46bd      	mov	sp, r7
 800afae:	bd80      	pop	{r7, pc}

0800afb0 <_ZN10STM32F4DMAC1Ev>:
}

}

STM32F4DMA::STM32F4DMA()
 800afb0:	b5b0      	push	{r4, r5, r7, lr}
 800afb2:	b082      	sub	sp, #8
 800afb4:	af00      	add	r7, sp, #0
 800afb6:	6078      	str	r0, [r7, #4]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 800afb8:	687a      	ldr	r2, [r7, #4]
 800afba:	687b      	ldr	r3, [r7, #4]
 800afbc:	330c      	adds	r3, #12
 800afbe:	4619      	mov	r1, r3
 800afc0:	4610      	mov	r0, r2
 800afc2:	f7ff ff61 	bl	800ae88 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800afc6:	4a0e      	ldr	r2, [pc, #56]	; (800b000 <_ZN10STM32F4DMAC1Ev+0x50>)
 800afc8:	687b      	ldr	r3, [r7, #4]
 800afca:	601a      	str	r2, [r3, #0]
 800afcc:	687b      	ldr	r3, [r7, #4]
 800afce:	f103 000c 	add.w	r0, r3, #12
 800afd2:	687b      	ldr	r3, [r7, #4]
 800afd4:	3320      	adds	r3, #32
 800afd6:	2260      	movs	r2, #96	; 0x60
 800afd8:	4619      	mov	r1, r3
 800afda:	f002 fa81 	bl	800d4e0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800afde:	687b      	ldr	r3, [r7, #4]
 800afe0:	3320      	adds	r3, #32
 800afe2:	245f      	movs	r4, #95	; 0x5f
 800afe4:	461d      	mov	r5, r3
 800afe6:	2c00      	cmp	r4, #0
 800afe8:	db05      	blt.n	800aff6 <_ZN10STM32F4DMAC1Ev+0x46>
 800afea:	4628      	mov	r0, r5
 800afec:	f7ff ffd2 	bl	800af94 <_ZN8touchgfx6BlitOpC1Ev>
 800aff0:	3520      	adds	r5, #32
 800aff2:	3c01      	subs	r4, #1
 800aff4:	e7f7      	b.n	800afe6 <_ZN10STM32F4DMAC1Ev+0x36>
{}
 800aff6:	687b      	ldr	r3, [r7, #4]
 800aff8:	4618      	mov	r0, r3
 800affa:	3708      	adds	r7, #8
 800affc:	46bd      	mov	sp, r7
 800affe:	bdb0      	pop	{r4, r5, r7, pc}
 800b000:	0801d094 	.word	0x0801d094

0800b004 <_ZN10STM32F4DMAD1Ev>:

STM32F4DMA::~STM32F4DMA()
 800b004:	b580      	push	{r7, lr}
 800b006:	b082      	sub	sp, #8
 800b008:	af00      	add	r7, sp, #0
 800b00a:	6078      	str	r0, [r7, #4]
 800b00c:	4a0b      	ldr	r2, [pc, #44]	; (800b03c <_ZN10STM32F4DMAD1Ev+0x38>)
 800b00e:	687b      	ldr	r3, [r7, #4]
 800b010:	601a      	str	r2, [r3, #0]
{
    HAL_DMA2D_DeInit(&hdma2d);
 800b012:	480b      	ldr	r0, [pc, #44]	; (800b040 <_ZN10STM32F4DMAD1Ev+0x3c>)
 800b014:	f7f8 fb5c 	bl	80036d0 <HAL_DMA2D_DeInit>
    NVIC_DisableIRQ(DMA2D_IRQn);
 800b018:	205a      	movs	r0, #90	; 0x5a
 800b01a:	f7ff fe8f 	bl	800ad3c <__NVIC_DisableIRQ>
STM32F4DMA::~STM32F4DMA()
 800b01e:	687b      	ldr	r3, [r7, #4]
 800b020:	330c      	adds	r3, #12
 800b022:	4618      	mov	r0, r3
 800b024:	f000 faa0 	bl	800b568 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800b028:	687b      	ldr	r3, [r7, #4]
 800b02a:	4618      	mov	r0, r3
 800b02c:	f7ff ff0c 	bl	800ae48 <_ZN8touchgfx13DMA_InterfaceD1Ev>
}
 800b030:	687b      	ldr	r3, [r7, #4]
 800b032:	4618      	mov	r0, r3
 800b034:	3708      	adds	r7, #8
 800b036:	46bd      	mov	sp, r7
 800b038:	bd80      	pop	{r7, pc}
 800b03a:	bf00      	nop
 800b03c:	0801d094 	.word	0x0801d094
 800b040:	20026f88 	.word	0x20026f88

0800b044 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 800b044:	b580      	push	{r7, lr}
 800b046:	b082      	sub	sp, #8
 800b048:	af00      	add	r7, sp, #0
 800b04a:	6078      	str	r0, [r7, #4]
}
 800b04c:	6878      	ldr	r0, [r7, #4]
 800b04e:	f7ff ffd9 	bl	800b004 <_ZN10STM32F4DMAD1Ev>
 800b052:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 800b056:	6878      	ldr	r0, [r7, #4]
 800b058:	f010 f8de 	bl	801b218 <_ZdlPvj>
 800b05c:	687b      	ldr	r3, [r7, #4]
 800b05e:	4618      	mov	r0, r3
 800b060:	3708      	adds	r7, #8
 800b062:	46bd      	mov	sp, r7
 800b064:	bd80      	pop	{r7, pc}
	...

0800b068 <_ZN10STM32F4DMA10initializeEv>:

void STM32F4DMA::initialize()
{
 800b068:	b580      	push	{r7, lr}
 800b06a:	b082      	sub	sp, #8
 800b06c:	af00      	add	r7, sp, #0
 800b06e:	6078      	str	r0, [r7, #4]
    hdma2d.Instance = DMA2D;
 800b070:	4b09      	ldr	r3, [pc, #36]	; (800b098 <_ZN10STM32F4DMA10initializeEv+0x30>)
 800b072:	4a0a      	ldr	r2, [pc, #40]	; (800b09c <_ZN10STM32F4DMA10initializeEv+0x34>)
 800b074:	601a      	str	r2, [r3, #0]
    HAL_DMA2D_Init(&hdma2d);
 800b076:	4808      	ldr	r0, [pc, #32]	; (800b098 <_ZN10STM32F4DMA10initializeEv+0x30>)
 800b078:	f7f8 fae0 	bl	800363c <HAL_DMA2D_Init>

    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800b07c:	4b06      	ldr	r3, [pc, #24]	; (800b098 <_ZN10STM32F4DMA10initializeEv+0x30>)
 800b07e:	4a08      	ldr	r2, [pc, #32]	; (800b0a0 <_ZN10STM32F4DMA10initializeEv+0x38>)
 800b080:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 800b082:	4b05      	ldr	r3, [pc, #20]	; (800b098 <_ZN10STM32F4DMA10initializeEv+0x30>)
 800b084:	4a07      	ldr	r2, [pc, #28]	; (800b0a4 <_ZN10STM32F4DMA10initializeEv+0x3c>)
 800b086:	615a      	str	r2, [r3, #20]

    NVIC_EnableIRQ(DMA2D_IRQn);
 800b088:	205a      	movs	r0, #90	; 0x5a
 800b08a:	f7ff fe37 	bl	800acfc <__NVIC_EnableIRQ>
}
 800b08e:	bf00      	nop
 800b090:	3708      	adds	r7, #8
 800b092:	46bd      	mov	sp, r7
 800b094:	bd80      	pop	{r7, pc}
 800b096:	bf00      	nop
 800b098:	20026f88 	.word	0x20026f88
 800b09c:	4002b000 	.word	0x4002b000
 800b0a0:	0800af59 	.word	0x0800af59
 800b0a4:	0800af75 	.word	0x0800af75

0800b0a8 <_ZN10STM32F4DMA11getBlitCapsEv>:

BlitOperations STM32F4DMA::getBlitCaps()
{
 800b0a8:	b480      	push	{r7}
 800b0aa:	b083      	sub	sp, #12
 800b0ac:	af00      	add	r7, sp, #0
 800b0ae:	6078      	str	r0, [r7, #4]
                                        | BLIT_OP_COPY
                                        | BLIT_OP_COPY_WITH_ALPHA
                                        | BLIT_OP_COPY_ARGB8888
                                        | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                        | BLIT_OP_COPY_A4
                                        | BLIT_OP_COPY_A8);
 800b0b0:	f240 13ef 	movw	r3, #495	; 0x1ef
}
 800b0b4:	4618      	mov	r0, r3
 800b0b6:	370c      	adds	r7, #12
 800b0b8:	46bd      	mov	sp, r7
 800b0ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0be:	4770      	bx	lr

0800b0c0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 800b0c0:	b590      	push	{r4, r7, lr}
 800b0c2:	b08d      	sub	sp, #52	; 0x34
 800b0c4:	af02      	add	r7, sp, #8
 800b0c6:	6078      	str	r0, [r7, #4]
 800b0c8:	6039      	str	r1, [r7, #0]
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
 800b0ca:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800b0ce:	627b      	str	r3, [r7, #36]	; 0x24
    uint32_t dma2dColorMode = 0;
 800b0d0:	2300      	movs	r3, #0
 800b0d2:	623b      	str	r3, [r7, #32]

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 800b0d4:	683b      	ldr	r3, [r7, #0]
 800b0d6:	681b      	ldr	r3, [r3, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 800b0d8:	2b20      	cmp	r3, #32
 800b0da:	d007      	beq.n	800b0ec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 800b0dc:	683b      	ldr	r3, [r7, #0]
 800b0de:	681b      	ldr	r3, [r3, #0]
 800b0e0:	2b40      	cmp	r3, #64	; 0x40
 800b0e2:	d003      	beq.n	800b0ec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 800b0e4:	683b      	ldr	r3, [r7, #0]
 800b0e6:	681b      	ldr	r3, [r3, #0]
 800b0e8:	2b04      	cmp	r3, #4
 800b0ea:	d101      	bne.n	800b0f0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x30>
 800b0ec:	2301      	movs	r3, #1
 800b0ee:	e000      	b.n	800b0f2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x32>
 800b0f0:	2300      	movs	r3, #0
    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 800b0f2:	77fb      	strb	r3, [r7, #31]

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
 800b0f4:	683b      	ldr	r3, [r7, #0]
 800b0f6:	681b      	ldr	r3, [r3, #0]
                         || blitOp.operation == BLIT_OP_COPY_A8);
 800b0f8:	2b80      	cmp	r3, #128	; 0x80
 800b0fa:	d004      	beq.n	800b106 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x46>
 800b0fc:	683b      	ldr	r3, [r7, #0]
 800b0fe:	681b      	ldr	r3, [r3, #0]
 800b100:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b104:	d101      	bne.n	800b10a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4a>
 800b106:	2301      	movs	r3, #1
 800b108:	e000      	b.n	800b10c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4c>
 800b10a:	2300      	movs	r3, #0
    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
 800b10c:	77bb      	strb	r3, [r7, #30]

    uint8_t bitDepth = HAL::lcd().bitDepth();
 800b10e:	f7fe f851 	bl	80091b4 <_ZN8touchgfx3HAL3lcdEv>
 800b112:	4602      	mov	r2, r0
 800b114:	6813      	ldr	r3, [r2, #0]
 800b116:	3320      	adds	r3, #32
 800b118:	681b      	ldr	r3, [r3, #0]
 800b11a:	4610      	mov	r0, r2
 800b11c:	4798      	blx	r3
 800b11e:	4603      	mov	r3, r0
 800b120:	777b      	strb	r3, [r7, #29]

    switch (blitOp.operation)
 800b122:	683b      	ldr	r3, [r7, #0]
 800b124:	681b      	ldr	r3, [r3, #0]
 800b126:	2b40      	cmp	r3, #64	; 0x40
 800b128:	d01d      	beq.n	800b166 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 800b12a:	2b40      	cmp	r3, #64	; 0x40
 800b12c:	d804      	bhi.n	800b138 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 800b12e:	2b04      	cmp	r3, #4
 800b130:	d00e      	beq.n	800b150 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x90>
 800b132:	2b20      	cmp	r3, #32
 800b134:	d017      	beq.n	800b166 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 800b136:	e019      	b.n	800b16c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xac>
 800b138:	2b80      	cmp	r3, #128	; 0x80
 800b13a:	d003      	beq.n	800b144 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x84>
 800b13c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b140:	d003      	beq.n	800b14a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
 800b142:	e013      	b.n	800b16c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xac>
    {
    case BLIT_OP_COPY_A4:
        dma2dColorMode = CM_A4;
 800b144:	230a      	movs	r3, #10
 800b146:	623b      	str	r3, [r7, #32]
        break;
 800b148:	e01a      	b.n	800b180 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    case BLIT_OP_COPY_A8:
        dma2dColorMode = CM_A8;
 800b14a:	2309      	movs	r3, #9
 800b14c:	623b      	str	r3, [r7, #32]
        break;
 800b14e:	e017      	b.n	800b180 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    case BLIT_OP_COPY_WITH_ALPHA:
        dma2dTransferMode = DMA2D_M2M_BLEND;
 800b150:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800b154:	627b      	str	r3, [r7, #36]	; 0x24
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800b156:	7f7b      	ldrb	r3, [r7, #29]
 800b158:	2b10      	cmp	r3, #16
 800b15a:	d101      	bne.n	800b160 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa0>
 800b15c:	2302      	movs	r3, #2
 800b15e:	e000      	b.n	800b162 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
 800b160:	2301      	movs	r3, #1
 800b162:	623b      	str	r3, [r7, #32]
        break;
 800b164:	e00c      	b.n	800b180 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    case BLIT_OP_COPY_ARGB8888:
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
 800b166:	2300      	movs	r3, #0
 800b168:	623b      	str	r3, [r7, #32]
        break;
 800b16a:	e009      	b.n	800b180 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    default:
        dma2dTransferMode = DMA2D_M2M;
 800b16c:	2300      	movs	r3, #0
 800b16e:	627b      	str	r3, [r7, #36]	; 0x24
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800b170:	7f7b      	ldrb	r3, [r7, #29]
 800b172:	2b10      	cmp	r3, #16
 800b174:	d101      	bne.n	800b17a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xba>
 800b176:	2302      	movs	r3, #2
 800b178:	e000      	b.n	800b17c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 800b17a:	2301      	movs	r3, #1
 800b17c:	623b      	str	r3, [r7, #32]
        break;
 800b17e:	bf00      	nop
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 800b180:	4a76      	ldr	r2, [pc, #472]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b182:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b184:	6053      	str	r3, [r2, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800b186:	7f7b      	ldrb	r3, [r7, #29]
 800b188:	2b10      	cmp	r3, #16
 800b18a:	d101      	bne.n	800b190 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 800b18c:	2302      	movs	r3, #2
 800b18e:	e000      	b.n	800b192 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 800b190:	2301      	movs	r3, #1
 800b192:	4a72      	ldr	r2, [pc, #456]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b194:	6093      	str	r3, [r2, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800b196:	683b      	ldr	r3, [r7, #0]
 800b198:	8adb      	ldrh	r3, [r3, #22]
 800b19a:	461a      	mov	r2, r3
 800b19c:	683b      	ldr	r3, [r7, #0]
 800b19e:	8a1b      	ldrh	r3, [r3, #16]
 800b1a0:	1ad3      	subs	r3, r2, r3
 800b1a2:	461a      	mov	r2, r3
 800b1a4:	4b6d      	ldr	r3, [pc, #436]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b1a6:	60da      	str	r2, [r3, #12]

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800b1a8:	7f7b      	ldrb	r3, [r7, #29]
 800b1aa:	2b10      	cmp	r3, #16
 800b1ac:	d101      	bne.n	800b1b2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
 800b1ae:	2202      	movs	r2, #2
 800b1b0:	e000      	b.n	800b1b4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf4>
 800b1b2:	2201      	movs	r2, #1
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);
 800b1b4:	683b      	ldr	r3, [r7, #0]
 800b1b6:	8adb      	ldrh	r3, [r3, #22]
 800b1b8:	4619      	mov	r1, r3
 800b1ba:	683b      	ldr	r3, [r7, #0]
 800b1bc:	8a1b      	ldrh	r3, [r3, #16]
 800b1be:	1acb      	subs	r3, r1, r3
    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800b1c0:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800b1c2:	4866      	ldr	r0, [pc, #408]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b1c4:	f7ff fe9a 	bl	800aefc <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 800b1c8:	4a64      	ldr	r2, [pc, #400]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b1ca:	6a3b      	ldr	r3, [r7, #32]
 800b1cc:	62d3      	str	r3, [r2, #44]	; 0x2c
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 800b1ce:	683b      	ldr	r3, [r7, #0]
 800b1d0:	8a9b      	ldrh	r3, [r3, #20]
 800b1d2:	461a      	mov	r2, r3
 800b1d4:	683b      	ldr	r3, [r7, #0]
 800b1d6:	8a1b      	ldrh	r3, [r3, #16]
 800b1d8:	1ad3      	subs	r3, r2, r3
 800b1da:	461a      	mov	r2, r3
 800b1dc:	4b5f      	ldr	r3, [pc, #380]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b1de:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 800b1e0:	7ffb      	ldrb	r3, [r7, #31]
 800b1e2:	2b00      	cmp	r3, #0
 800b1e4:	d103      	bne.n	800b1ee <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12e>
 800b1e6:	7fbb      	ldrb	r3, [r7, #30]
 800b1e8:	2b00      	cmp	r3, #0
 800b1ea:	f000 8082 	beq.w	800b2f2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x232>
    {
        if (blitOp.alpha < 255)
 800b1ee:	683b      	ldr	r3, [r7, #0]
 800b1f0:	7f1b      	ldrb	r3, [r3, #28]
 800b1f2:	2bff      	cmp	r3, #255	; 0xff
 800b1f4:	d008      	beq.n	800b208 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 800b1f6:	4b59      	ldr	r3, [pc, #356]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b1f8:	2202      	movs	r2, #2
 800b1fa:	631a      	str	r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 800b1fc:	683b      	ldr	r3, [r7, #0]
 800b1fe:	7f1b      	ldrb	r3, [r3, #28]
 800b200:	461a      	mov	r2, r3
 800b202:	4b56      	ldr	r3, [pc, #344]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b204:	635a      	str	r2, [r3, #52]	; 0x34
 800b206:	e002      	b.n	800b20e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14e>
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 800b208:	4b54      	ldr	r3, [pc, #336]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b20a:	2200      	movs	r2, #0
 800b20c:	631a      	str	r2, [r3, #48]	; 0x30
        }

        if (blendingText)
 800b20e:	7fbb      	ldrb	r3, [r7, #30]
 800b210:	2b00      	cmp	r3, #0
 800b212:	d059      	beq.n	800b2c8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x208>
        {
            if (bitDepth == 16)
 800b214:	7f7b      	ldrb	r3, [r7, #29]
 800b216:	2b10      	cmp	r3, #16
 800b218:	d14a      	bne.n	800b2b0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1f0>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 800b21a:	683b      	ldr	r3, [r7, #0]
 800b21c:	3318      	adds	r3, #24
 800b21e:	4618      	mov	r0, r3
 800b220:	f7ff fdca 	bl	800adb8 <_ZNK8touchgfx9colortypecvtEv>
 800b224:	4603      	mov	r3, r0
 800b226:	12db      	asrs	r3, r3, #11
 800b228:	f003 021f 	and.w	r2, r3, #31
 800b22c:	4613      	mov	r3, r2
 800b22e:	021b      	lsls	r3, r3, #8
 800b230:	1a9b      	subs	r3, r3, r2
 800b232:	4a4b      	ldr	r2, [pc, #300]	; (800b360 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 800b234:	fb82 1203 	smull	r1, r2, r2, r3
 800b238:	441a      	add	r2, r3
 800b23a:	1112      	asrs	r2, r2, #4
 800b23c:	17db      	asrs	r3, r3, #31
 800b23e:	1ad3      	subs	r3, r2, r3
 800b240:	61bb      	str	r3, [r7, #24]
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 800b242:	683b      	ldr	r3, [r7, #0]
 800b244:	3318      	adds	r3, #24
 800b246:	4618      	mov	r0, r3
 800b248:	f7ff fdb6 	bl	800adb8 <_ZNK8touchgfx9colortypecvtEv>
 800b24c:	4603      	mov	r3, r0
 800b24e:	115b      	asrs	r3, r3, #5
 800b250:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800b254:	4613      	mov	r3, r2
 800b256:	021b      	lsls	r3, r3, #8
 800b258:	1a9b      	subs	r3, r3, r2
 800b25a:	4a42      	ldr	r2, [pc, #264]	; (800b364 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a4>)
 800b25c:	fb82 1203 	smull	r1, r2, r2, r3
 800b260:	441a      	add	r2, r3
 800b262:	1152      	asrs	r2, r2, #5
 800b264:	17db      	asrs	r3, r3, #31
 800b266:	1ad3      	subs	r3, r2, r3
 800b268:	617b      	str	r3, [r7, #20]
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 800b26a:	683b      	ldr	r3, [r7, #0]
 800b26c:	3318      	adds	r3, #24
 800b26e:	4618      	mov	r0, r3
 800b270:	f7ff fda2 	bl	800adb8 <_ZNK8touchgfx9colortypecvtEv>
 800b274:	4603      	mov	r3, r0
 800b276:	f003 021f 	and.w	r2, r3, #31
 800b27a:	4613      	mov	r3, r2
 800b27c:	021b      	lsls	r3, r3, #8
 800b27e:	1a9b      	subs	r3, r3, r2
 800b280:	4a37      	ldr	r2, [pc, #220]	; (800b360 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 800b282:	fb82 1203 	smull	r1, r2, r2, r3
 800b286:	441a      	add	r2, r3
 800b288:	1112      	asrs	r2, r2, #4
 800b28a:	17db      	asrs	r3, r3, #31
 800b28c:	1ad3      	subs	r3, r2, r3
 800b28e:	613b      	str	r3, [r7, #16]
                uint32_t alpha = blitOp.alpha;
 800b290:	683b      	ldr	r3, [r7, #0]
 800b292:	7f1b      	ldrb	r3, [r3, #28]
 800b294:	60fb      	str	r3, [r7, #12]
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 800b296:	68fb      	ldr	r3, [r7, #12]
 800b298:	061a      	lsls	r2, r3, #24
 800b29a:	69bb      	ldr	r3, [r7, #24]
 800b29c:	041b      	lsls	r3, r3, #16
 800b29e:	431a      	orrs	r2, r3
 800b2a0:	697b      	ldr	r3, [r7, #20]
 800b2a2:	021b      	lsls	r3, r3, #8
 800b2a4:	431a      	orrs	r2, r3
 800b2a6:	693b      	ldr	r3, [r7, #16]
 800b2a8:	4313      	orrs	r3, r2
 800b2aa:	4a2c      	ldr	r2, [pc, #176]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b2ac:	6353      	str	r3, [r2, #52]	; 0x34
 800b2ae:	e00b      	b.n	800b2c8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x208>
            }
            else
            {
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 800b2b0:	683b      	ldr	r3, [r7, #0]
 800b2b2:	3318      	adds	r3, #24
 800b2b4:	4618      	mov	r0, r3
 800b2b6:	f7ff fd73 	bl	800ada0 <_ZNK8touchgfx9colortype10getColor32Ev>
 800b2ba:	4602      	mov	r2, r0
 800b2bc:	683b      	ldr	r3, [r7, #0]
 800b2be:	7f1b      	ldrb	r3, [r3, #28]
 800b2c0:	061b      	lsls	r3, r3, #24
 800b2c2:	4313      	orrs	r3, r2
 800b2c4:	4a25      	ldr	r2, [pc, #148]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b2c6:	6353      	str	r3, [r2, #52]	; 0x34
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800b2c8:	683b      	ldr	r3, [r7, #0]
 800b2ca:	8adb      	ldrh	r3, [r3, #22]
 800b2cc:	461a      	mov	r2, r3
 800b2ce:	683b      	ldr	r3, [r7, #0]
 800b2d0:	8a1b      	ldrh	r3, [r3, #16]
 800b2d2:	1ad3      	subs	r3, r2, r3
 800b2d4:	461a      	mov	r2, r3
 800b2d6:	4b21      	ldr	r3, [pc, #132]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b2d8:	619a      	str	r2, [r3, #24]
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800b2da:	7f7b      	ldrb	r3, [r7, #29]
 800b2dc:	2b10      	cmp	r3, #16
 800b2de:	d101      	bne.n	800b2e4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x224>
 800b2e0:	2302      	movs	r3, #2
 800b2e2:	e000      	b.n	800b2e6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x226>
 800b2e4:	2301      	movs	r3, #1
 800b2e6:	4a1d      	ldr	r2, [pc, #116]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b2e8:	61d3      	str	r3, [r2, #28]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800b2ea:	2100      	movs	r1, #0
 800b2ec:	481b      	ldr	r0, [pc, #108]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b2ee:	f7f8 fb5f 	bl	80039b0 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 800b2f2:	2101      	movs	r1, #1
 800b2f4:	4819      	ldr	r0, [pc, #100]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b2f6:	f7f8 fb5b 	bl	80039b0 <HAL_DMA2D_ConfigLayer>

    if (blendingImage || blendingText)
 800b2fa:	7ffb      	ldrb	r3, [r7, #31]
 800b2fc:	2b00      	cmp	r3, #0
 800b2fe:	d102      	bne.n	800b306 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x246>
 800b300:	7fbb      	ldrb	r3, [r7, #30]
 800b302:	2b00      	cmp	r3, #0
 800b304:	d015      	beq.n	800b332 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x272>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
                                   (unsigned int)blitOp.pSrc,
 800b306:	683b      	ldr	r3, [r7, #0]
 800b308:	685b      	ldr	r3, [r3, #4]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800b30a:	4619      	mov	r1, r3
                                   (unsigned int)blitOp.pDst,
 800b30c:	683b      	ldr	r3, [r7, #0]
 800b30e:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800b310:	4618      	mov	r0, r3
                                   (unsigned int)blitOp.pDst,
 800b312:	683b      	ldr	r3, [r7, #0]
 800b314:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800b316:	461c      	mov	r4, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800b318:	683b      	ldr	r3, [r7, #0]
 800b31a:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800b31c:	461a      	mov	r2, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800b31e:	683b      	ldr	r3, [r7, #0]
 800b320:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800b322:	9301      	str	r3, [sp, #4]
 800b324:	9200      	str	r2, [sp, #0]
 800b326:	4623      	mov	r3, r4
 800b328:	4602      	mov	r2, r0
 800b32a:	480c      	ldr	r0, [pc, #48]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b32c:	f7f8 fa73 	bl	8003816 <HAL_DMA2D_BlendingStart_IT>
 800b330:	e00f      	b.n	800b352 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x292>
    }
    else
    {
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
 800b332:	683b      	ldr	r3, [r7, #0]
 800b334:	685b      	ldr	r3, [r3, #4]
        HAL_DMA2D_Start_IT(&hdma2d,
 800b336:	4619      	mov	r1, r3
                           (unsigned int)blitOp.pDst,
 800b338:	683b      	ldr	r3, [r7, #0]
 800b33a:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_Start_IT(&hdma2d,
 800b33c:	461a      	mov	r2, r3
                           blitOp.nSteps, blitOp.nLoops);
 800b33e:	683b      	ldr	r3, [r7, #0]
 800b340:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_Start_IT(&hdma2d,
 800b342:	4618      	mov	r0, r3
                           blitOp.nSteps, blitOp.nLoops);
 800b344:	683b      	ldr	r3, [r7, #0]
 800b346:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_Start_IT(&hdma2d,
 800b348:	9300      	str	r3, [sp, #0]
 800b34a:	4603      	mov	r3, r0
 800b34c:	4803      	ldr	r0, [pc, #12]	; (800b35c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800b34e:	f7f8 fa2f 	bl	80037b0 <HAL_DMA2D_Start_IT>
    }
}
 800b352:	bf00      	nop
 800b354:	372c      	adds	r7, #44	; 0x2c
 800b356:	46bd      	mov	sp, r7
 800b358:	bd90      	pop	{r4, r7, pc}
 800b35a:	bf00      	nop
 800b35c:	20026f88 	.word	0x20026f88
 800b360:	84210843 	.word	0x84210843
 800b364:	82082083 	.word	0x82082083

0800b368 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 800b368:	b590      	push	{r4, r7, lr}
 800b36a:	b08d      	sub	sp, #52	; 0x34
 800b36c:	af02      	add	r7, sp, #8
 800b36e:	6078      	str	r0, [r7, #4]
 800b370:	6039      	str	r1, [r7, #0]
    uint8_t bitDepth = HAL::lcd().bitDepth();
 800b372:	f7fd ff1f 	bl	80091b4 <_ZN8touchgfx3HAL3lcdEv>
 800b376:	4602      	mov	r2, r0
 800b378:	6813      	ldr	r3, [r2, #0]
 800b37a:	3320      	adds	r3, #32
 800b37c:	681b      	ldr	r3, [r3, #0]
 800b37e:	4610      	mov	r0, r2
 800b380:	4798      	blx	r3
 800b382:	4603      	mov	r3, r0
 800b384:	77fb      	strb	r3, [r7, #31]
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800b386:	7ffb      	ldrb	r3, [r7, #31]
 800b388:	2b10      	cmp	r3, #16
 800b38a:	d101      	bne.n	800b390 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x28>
 800b38c:	2302      	movs	r3, #2
 800b38e:	e000      	b.n	800b392 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x2a>
 800b390:	2301      	movs	r3, #1
 800b392:	61bb      	str	r3, [r7, #24]

    uint32_t color = 0;
 800b394:	2300      	movs	r3, #0
 800b396:	623b      	str	r3, [r7, #32]
    if (bitDepth == 16)
 800b398:	7ffb      	ldrb	r3, [r7, #31]
 800b39a:	2b10      	cmp	r3, #16
 800b39c:	d149      	bne.n	800b432 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 800b39e:	683b      	ldr	r3, [r7, #0]
 800b3a0:	3318      	adds	r3, #24
 800b3a2:	4618      	mov	r0, r3
 800b3a4:	f7ff fd08 	bl	800adb8 <_ZNK8touchgfx9colortypecvtEv>
 800b3a8:	4603      	mov	r3, r0
 800b3aa:	12db      	asrs	r3, r3, #11
 800b3ac:	f003 021f 	and.w	r2, r3, #31
 800b3b0:	4613      	mov	r3, r2
 800b3b2:	021b      	lsls	r3, r3, #8
 800b3b4:	1a9b      	subs	r3, r3, r2
 800b3b6:	4a69      	ldr	r2, [pc, #420]	; (800b55c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f4>)
 800b3b8:	fb82 1203 	smull	r1, r2, r2, r3
 800b3bc:	441a      	add	r2, r3
 800b3be:	1112      	asrs	r2, r2, #4
 800b3c0:	17db      	asrs	r3, r3, #31
 800b3c2:	1ad3      	subs	r3, r2, r3
 800b3c4:	617b      	str	r3, [r7, #20]
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 800b3c6:	683b      	ldr	r3, [r7, #0]
 800b3c8:	3318      	adds	r3, #24
 800b3ca:	4618      	mov	r0, r3
 800b3cc:	f7ff fcf4 	bl	800adb8 <_ZNK8touchgfx9colortypecvtEv>
 800b3d0:	4603      	mov	r3, r0
 800b3d2:	115b      	asrs	r3, r3, #5
 800b3d4:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800b3d8:	4613      	mov	r3, r2
 800b3da:	021b      	lsls	r3, r3, #8
 800b3dc:	1a9b      	subs	r3, r3, r2
 800b3de:	4a60      	ldr	r2, [pc, #384]	; (800b560 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f8>)
 800b3e0:	fb82 1203 	smull	r1, r2, r2, r3
 800b3e4:	441a      	add	r2, r3
 800b3e6:	1152      	asrs	r2, r2, #5
 800b3e8:	17db      	asrs	r3, r3, #31
 800b3ea:	1ad3      	subs	r3, r2, r3
 800b3ec:	613b      	str	r3, [r7, #16]
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 800b3ee:	683b      	ldr	r3, [r7, #0]
 800b3f0:	3318      	adds	r3, #24
 800b3f2:	4618      	mov	r0, r3
 800b3f4:	f7ff fce0 	bl	800adb8 <_ZNK8touchgfx9colortypecvtEv>
 800b3f8:	4603      	mov	r3, r0
 800b3fa:	f003 021f 	and.w	r2, r3, #31
 800b3fe:	4613      	mov	r3, r2
 800b400:	021b      	lsls	r3, r3, #8
 800b402:	1a9b      	subs	r3, r3, r2
 800b404:	4a55      	ldr	r2, [pc, #340]	; (800b55c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f4>)
 800b406:	fb82 1203 	smull	r1, r2, r2, r3
 800b40a:	441a      	add	r2, r3
 800b40c:	1112      	asrs	r2, r2, #4
 800b40e:	17db      	asrs	r3, r3, #31
 800b410:	1ad3      	subs	r3, r2, r3
 800b412:	60fb      	str	r3, [r7, #12]
        uint32_t alpha = blitOp.alpha;
 800b414:	683b      	ldr	r3, [r7, #0]
 800b416:	7f1b      	ldrb	r3, [r3, #28]
 800b418:	60bb      	str	r3, [r7, #8]
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 800b41a:	68bb      	ldr	r3, [r7, #8]
 800b41c:	061a      	lsls	r2, r3, #24
 800b41e:	697b      	ldr	r3, [r7, #20]
 800b420:	041b      	lsls	r3, r3, #16
 800b422:	431a      	orrs	r2, r3
 800b424:	693b      	ldr	r3, [r7, #16]
 800b426:	021b      	lsls	r3, r3, #8
 800b428:	4313      	orrs	r3, r2
 800b42a:	68fa      	ldr	r2, [r7, #12]
 800b42c:	4313      	orrs	r3, r2
 800b42e:	623b      	str	r3, [r7, #32]
 800b430:	e00b      	b.n	800b44a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe2>
    }
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 800b432:	683b      	ldr	r3, [r7, #0]
 800b434:	7f1b      	ldrb	r3, [r3, #28]
 800b436:	061b      	lsls	r3, r3, #24
 800b438:	461c      	mov	r4, r3
 800b43a:	683b      	ldr	r3, [r7, #0]
 800b43c:	3318      	adds	r3, #24
 800b43e:	4618      	mov	r0, r3
 800b440:	f7ff fcae 	bl	800ada0 <_ZNK8touchgfx9colortype10getColor32Ev>
 800b444:	4603      	mov	r3, r0
 800b446:	4323      	orrs	r3, r4
 800b448:	623b      	str	r3, [r7, #32]
    }

    switch (blitOp.operation)
 800b44a:	683b      	ldr	r3, [r7, #0]
 800b44c:	681b      	ldr	r3, [r3, #0]
 800b44e:	2b08      	cmp	r3, #8
 800b450:	d103      	bne.n	800b45a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf2>
    {
    case BLIT_OP_FILL_WITH_ALPHA:
        dma2dTransferMode = DMA2D_M2M_BLEND;
 800b452:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800b456:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800b458:	e003      	b.n	800b462 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xfa>
    default:
        dma2dTransferMode = DMA2D_R2M;
 800b45a:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 800b45e:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800b460:	bf00      	nop
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 800b462:	4a40      	ldr	r2, [pc, #256]	; (800b564 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800b464:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b466:	6053      	str	r3, [r2, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800b468:	7ffb      	ldrb	r3, [r7, #31]
 800b46a:	2b10      	cmp	r3, #16
 800b46c:	d101      	bne.n	800b472 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10a>
 800b46e:	2302      	movs	r3, #2
 800b470:	e000      	b.n	800b474 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10c>
 800b472:	2301      	movs	r3, #1
 800b474:	4a3b      	ldr	r2, [pc, #236]	; (800b564 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800b476:	6093      	str	r3, [r2, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800b478:	683b      	ldr	r3, [r7, #0]
 800b47a:	8adb      	ldrh	r3, [r3, #22]
 800b47c:	461a      	mov	r2, r3
 800b47e:	683b      	ldr	r3, [r7, #0]
 800b480:	8a1b      	ldrh	r3, [r3, #16]
 800b482:	1ad3      	subs	r3, r2, r3
 800b484:	461a      	mov	r2, r3
 800b486:	4b37      	ldr	r3, [pc, #220]	; (800b564 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800b488:	60da      	str	r2, [r3, #12]

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800b48a:	7ffb      	ldrb	r3, [r7, #31]
 800b48c:	2b10      	cmp	r3, #16
 800b48e:	d101      	bne.n	800b494 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x12c>
 800b490:	2202      	movs	r2, #2
 800b492:	e000      	b.n	800b496 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x12e>
 800b494:	2201      	movs	r2, #1
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);
 800b496:	683b      	ldr	r3, [r7, #0]
 800b498:	8adb      	ldrh	r3, [r3, #22]
 800b49a:	4619      	mov	r1, r3
 800b49c:	683b      	ldr	r3, [r7, #0]
 800b49e:	8a1b      	ldrh	r3, [r3, #16]
 800b4a0:	1acb      	subs	r3, r1, r3
    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800b4a2:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800b4a4:	482f      	ldr	r0, [pc, #188]	; (800b564 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800b4a6:	f7ff fd29 	bl	800aefc <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>

    if (dma2dTransferMode == DMA2D_M2M_BLEND) {
 800b4aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b4ac:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800b4b0:	d11e      	bne.n	800b4f0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x188>
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 800b4b2:	4b2c      	ldr	r3, [pc, #176]	; (800b564 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800b4b4:	2201      	movs	r2, #1
 800b4b6:	631a      	str	r2, [r3, #48]	; 0x30
        hdma2d.LayerCfg[1].InputAlpha = color;
 800b4b8:	4a2a      	ldr	r2, [pc, #168]	; (800b564 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800b4ba:	6a3b      	ldr	r3, [r7, #32]
 800b4bc:	6353      	str	r3, [r2, #52]	; 0x34
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 800b4be:	4b29      	ldr	r3, [pc, #164]	; (800b564 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800b4c0:	2209      	movs	r2, #9
 800b4c2:	62da      	str	r2, [r3, #44]	; 0x2c
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800b4c4:	683b      	ldr	r3, [r7, #0]
 800b4c6:	8adb      	ldrh	r3, [r3, #22]
 800b4c8:	461a      	mov	r2, r3
 800b4ca:	683b      	ldr	r3, [r7, #0]
 800b4cc:	8a1b      	ldrh	r3, [r3, #16]
 800b4ce:	1ad3      	subs	r3, r2, r3
 800b4d0:	461a      	mov	r2, r3
 800b4d2:	4b24      	ldr	r3, [pc, #144]	; (800b564 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800b4d4:	619a      	str	r2, [r3, #24]
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800b4d6:	7ffb      	ldrb	r3, [r7, #31]
 800b4d8:	2b10      	cmp	r3, #16
 800b4da:	d101      	bne.n	800b4e0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x178>
 800b4dc:	2302      	movs	r3, #2
 800b4de:	e000      	b.n	800b4e2 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x17a>
 800b4e0:	2301      	movs	r3, #1
 800b4e2:	4a20      	ldr	r2, [pc, #128]	; (800b564 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800b4e4:	61d3      	str	r3, [r2, #28]
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800b4e6:	2100      	movs	r1, #0
 800b4e8:	481e      	ldr	r0, [pc, #120]	; (800b564 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800b4ea:	f7f8 fa61 	bl	80039b0 <HAL_DMA2D_ConfigLayer>
 800b4ee:	e005      	b.n	800b4fc <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x194>
    } else {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 800b4f0:	4a1c      	ldr	r2, [pc, #112]	; (800b564 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800b4f2:	69bb      	ldr	r3, [r7, #24]
 800b4f4:	62d3      	str	r3, [r2, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 800b4f6:	4b1b      	ldr	r3, [pc, #108]	; (800b564 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800b4f8:	2200      	movs	r2, #0
 800b4fa:	629a      	str	r2, [r3, #40]	; 0x28
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 800b4fc:	2101      	movs	r1, #1
 800b4fe:	4819      	ldr	r0, [pc, #100]	; (800b564 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800b500:	f7f8 fa56 	bl	80039b0 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800b504:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b506:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800b50a:	d115      	bne.n	800b538 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1d0>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
                                   (unsigned int)blitOp.pDst,
 800b50c:	683b      	ldr	r3, [r7, #0]
 800b50e:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800b510:	4619      	mov	r1, r3
                                   (unsigned int)blitOp.pDst,
 800b512:	683b      	ldr	r3, [r7, #0]
 800b514:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800b516:	4618      	mov	r0, r3
                                   (unsigned int)blitOp.pDst,
 800b518:	683b      	ldr	r3, [r7, #0]
 800b51a:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800b51c:	461c      	mov	r4, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800b51e:	683b      	ldr	r3, [r7, #0]
 800b520:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800b522:	461a      	mov	r2, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800b524:	683b      	ldr	r3, [r7, #0]
 800b526:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800b528:	9301      	str	r3, [sp, #4]
 800b52a:	9200      	str	r2, [sp, #0]
 800b52c:	4623      	mov	r3, r4
 800b52e:	4602      	mov	r2, r0
 800b530:	480c      	ldr	r0, [pc, #48]	; (800b564 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800b532:	f7f8 f970 	bl	8003816 <HAL_DMA2D_BlendingStart_IT>
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 800b536:	e00d      	b.n	800b554 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1ec>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 800b538:	683b      	ldr	r3, [r7, #0]
 800b53a:	68db      	ldr	r3, [r3, #12]
 800b53c:	461a      	mov	r2, r3
                           blitOp.nSteps, blitOp.nLoops);
 800b53e:	683b      	ldr	r3, [r7, #0]
 800b540:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 800b542:	4619      	mov	r1, r3
                           blitOp.nSteps, blitOp.nLoops);
 800b544:	683b      	ldr	r3, [r7, #0]
 800b546:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 800b548:	9300      	str	r3, [sp, #0]
 800b54a:	460b      	mov	r3, r1
 800b54c:	6a39      	ldr	r1, [r7, #32]
 800b54e:	4805      	ldr	r0, [pc, #20]	; (800b564 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800b550:	f7f8 f92e 	bl	80037b0 <HAL_DMA2D_Start_IT>
}
 800b554:	bf00      	nop
 800b556:	372c      	adds	r7, #44	; 0x2c
 800b558:	46bd      	mov	sp, r7
 800b55a:	bd90      	pop	{r4, r7, pc}
 800b55c:	84210843 	.word	0x84210843
 800b560:	82082083 	.word	0x82082083
 800b564:	20026f88 	.word	0x20026f88

0800b568 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800b568:	b580      	push	{r7, lr}
 800b56a:	b082      	sub	sp, #8
 800b56c:	af00      	add	r7, sp, #0
 800b56e:	6078      	str	r0, [r7, #4]
 800b570:	4a05      	ldr	r2, [pc, #20]	; (800b588 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800b572:	687b      	ldr	r3, [r7, #4]
 800b574:	601a      	str	r2, [r3, #0]
 800b576:	687b      	ldr	r3, [r7, #4]
 800b578:	4618      	mov	r0, r3
 800b57a:	f7ff fc2b 	bl	800add4 <_ZN8touchgfx9DMA_QueueD1Ev>
 800b57e:	687b      	ldr	r3, [r7, #4]
 800b580:	4618      	mov	r0, r3
 800b582:	3708      	adds	r7, #8
 800b584:	46bd      	mov	sp, r7
 800b586:	bd80      	pop	{r7, pc}
 800b588:	0801dcb8 	.word	0x0801dcb8

0800b58c <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b58c:	b580      	push	{r7, lr}
 800b58e:	b082      	sub	sp, #8
 800b590:	af00      	add	r7, sp, #0
 800b592:	6078      	str	r0, [r7, #4]
 800b594:	6878      	ldr	r0, [r7, #4]
 800b596:	f7ff ffe7 	bl	800b568 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800b59a:	2114      	movs	r1, #20
 800b59c:	6878      	ldr	r0, [r7, #4]
 800b59e:	f00f fe3b 	bl	801b218 <_ZdlPvj>
 800b5a2:	687b      	ldr	r3, [r7, #4]
 800b5a4:	4618      	mov	r0, r3
 800b5a6:	3708      	adds	r7, #8
 800b5a8:	46bd      	mov	sp, r7
 800b5aa:	bd80      	pop	{r7, pc}

0800b5ac <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     *
     *        Registers an array of texts.
     *
     * @param t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800b5ac:	b480      	push	{r7}
 800b5ae:	b083      	sub	sp, #12
 800b5b0:	af00      	add	r7, sp, #0
 800b5b2:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800b5b4:	4a04      	ldr	r2, [pc, #16]	; (800b5c8 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800b5b6:	687b      	ldr	r3, [r7, #4]
 800b5b8:	6013      	str	r3, [r2, #0]
    }
 800b5ba:	bf00      	nop
 800b5bc:	370c      	adds	r7, #12
 800b5be:	46bd      	mov	sp, r7
 800b5c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5c4:	4770      	bx	lr
 800b5c6:	bf00      	nop
 800b5c8:	2002697c 	.word	0x2002697c

0800b5cc <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800b5cc:	b480      	push	{r7}
 800b5ce:	b085      	sub	sp, #20
 800b5d0:	af00      	add	r7, sp, #0
 800b5d2:	60f8      	str	r0, [r7, #12]
 800b5d4:	60b9      	str	r1, [r7, #8]
 800b5d6:	607a      	str	r2, [r7, #4]
 800b5d8:	603b      	str	r3, [r7, #0]
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app) : presenterStorage(pres),
        screenStorage(scr),
        transitionStorage(tra),
        frontendApplication(app)
 800b5da:	4a0b      	ldr	r2, [pc, #44]	; (800b608 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800b5dc:	68fb      	ldr	r3, [r7, #12]
 800b5de:	601a      	str	r2, [r3, #0]
 800b5e0:	68fb      	ldr	r3, [r7, #12]
 800b5e2:	68ba      	ldr	r2, [r7, #8]
 800b5e4:	605a      	str	r2, [r3, #4]
 800b5e6:	68fb      	ldr	r3, [r7, #12]
 800b5e8:	687a      	ldr	r2, [r7, #4]
 800b5ea:	609a      	str	r2, [r3, #8]
 800b5ec:	68fb      	ldr	r3, [r7, #12]
 800b5ee:	683a      	ldr	r2, [r7, #0]
 800b5f0:	60da      	str	r2, [r3, #12]
 800b5f2:	68fb      	ldr	r3, [r7, #12]
 800b5f4:	69ba      	ldr	r2, [r7, #24]
 800b5f6:	611a      	str	r2, [r3, #16]
    {
    }
 800b5f8:	68fb      	ldr	r3, [r7, #12]
 800b5fa:	4618      	mov	r0, r3
 800b5fc:	3714      	adds	r7, #20
 800b5fe:	46bd      	mov	sp, r7
 800b600:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b604:	4770      	bx	lr
 800b606:	bf00      	nop
 800b608:	0801d200 	.word	0x0801d200

0800b60c <_ZN8touchgfx7MVPHeapD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~MVPHeap()
 800b60c:	b480      	push	{r7}
 800b60e:	b083      	sub	sp, #12
 800b610:	af00      	add	r7, sp, #0
 800b612:	6078      	str	r0, [r7, #4]
    {
 800b614:	4a04      	ldr	r2, [pc, #16]	; (800b628 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800b616:	687b      	ldr	r3, [r7, #4]
 800b618:	601a      	str	r2, [r3, #0]
    }
 800b61a:	687b      	ldr	r3, [r7, #4]
 800b61c:	4618      	mov	r0, r3
 800b61e:	370c      	adds	r7, #12
 800b620:	46bd      	mov	sp, r7
 800b622:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b626:	4770      	bx	lr
 800b628:	0801d200 	.word	0x0801d200

0800b62c <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800b62c:	b580      	push	{r7, lr}
 800b62e:	b082      	sub	sp, #8
 800b630:	af00      	add	r7, sp, #0
 800b632:	6078      	str	r0, [r7, #4]
    }
 800b634:	6878      	ldr	r0, [r7, #4]
 800b636:	f7ff ffe9 	bl	800b60c <_ZN8touchgfx7MVPHeapD1Ev>
 800b63a:	2114      	movs	r1, #20
 800b63c:	6878      	ldr	r0, [r7, #4]
 800b63e:	f00f fdeb 	bl	801b218 <_ZdlPvj>
 800b642:	687b      	ldr	r3, [r7, #4]
 800b644:	4618      	mov	r0, r3
 800b646:	3708      	adds	r7, #8
 800b648:	46bd      	mov	sp, r7
 800b64a:	bd80      	pop	{r7, pc}

0800b64c <_ZN8touchgfx3LCDD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~LCD()
 800b64c:	b480      	push	{r7}
 800b64e:	b083      	sub	sp, #12
 800b650:	af00      	add	r7, sp, #0
 800b652:	6078      	str	r0, [r7, #4]
    {
 800b654:	4a04      	ldr	r2, [pc, #16]	; (800b668 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800b656:	687b      	ldr	r3, [r7, #4]
 800b658:	601a      	str	r2, [r3, #0]
    }
 800b65a:	687b      	ldr	r3, [r7, #4]
 800b65c:	4618      	mov	r0, r3
 800b65e:	370c      	adds	r7, #12
 800b660:	46bd      	mov	sp, r7
 800b662:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b666:	4770      	bx	lr
 800b668:	0801df00 	.word	0x0801df00

0800b66c <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800b66c:	b580      	push	{r7, lr}
 800b66e:	b082      	sub	sp, #8
 800b670:	af00      	add	r7, sp, #0
 800b672:	6078      	str	r0, [r7, #4]
    }
 800b674:	6878      	ldr	r0, [r7, #4]
 800b676:	f7ff ffe9 	bl	800b64c <_ZN8touchgfx3LCDD1Ev>
 800b67a:	2108      	movs	r1, #8
 800b67c:	6878      	ldr	r0, [r7, #4]
 800b67e:	f00f fdcb 	bl	801b218 <_ZdlPvj>
 800b682:	687b      	ldr	r3, [r7, #4]
 800b684:	4618      	mov	r0, r3
 800b686:	3708      	adds	r7, #8
 800b688:	46bd      	mov	sp, r7
 800b68a:	bd80      	pop	{r7, pc}

0800b68c <_ZN8touchgfx8Gestures9DragStateC1Ev>:
     *
     *        Defines the state of a drag.
     */
    struct DragState
    {
        DragState() : startX(0),
 800b68c:	b480      	push	{r7}
 800b68e:	b083      	sub	sp, #12
 800b690:	af00      	add	r7, sp, #0
 800b692:	6078      	str	r0, [r7, #4]
            downX(0),
            downY(0),
            tickCount(0),
            velocityX(0),
            velocityY(0),
            inProgress(false)
 800b694:	687b      	ldr	r3, [r7, #4]
 800b696:	2200      	movs	r2, #0
 800b698:	801a      	strh	r2, [r3, #0]
 800b69a:	687b      	ldr	r3, [r7, #4]
 800b69c:	2200      	movs	r2, #0
 800b69e:	805a      	strh	r2, [r3, #2]
 800b6a0:	687b      	ldr	r3, [r7, #4]
 800b6a2:	2200      	movs	r2, #0
 800b6a4:	809a      	strh	r2, [r3, #4]
 800b6a6:	687b      	ldr	r3, [r7, #4]
 800b6a8:	2200      	movs	r2, #0
 800b6aa:	80da      	strh	r2, [r3, #6]
 800b6ac:	687b      	ldr	r3, [r7, #4]
 800b6ae:	2200      	movs	r2, #0
 800b6b0:	811a      	strh	r2, [r3, #8]
 800b6b2:	687b      	ldr	r3, [r7, #4]
 800b6b4:	2200      	movs	r2, #0
 800b6b6:	815a      	strh	r2, [r3, #10]
 800b6b8:	687b      	ldr	r3, [r7, #4]
 800b6ba:	2200      	movs	r2, #0
 800b6bc:	819a      	strh	r2, [r3, #12]
 800b6be:	687b      	ldr	r3, [r7, #4]
 800b6c0:	2200      	movs	r2, #0
 800b6c2:	739a      	strb	r2, [r3, #14]
        {
        }
 800b6c4:	687b      	ldr	r3, [r7, #4]
 800b6c6:	4618      	mov	r0, r3
 800b6c8:	370c      	adds	r7, #12
 800b6ca:	46bd      	mov	sp, r7
 800b6cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6d0:	4770      	bx	lr

0800b6d2 <_ZN8touchgfx8GesturesC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor. Does nothing.
     */
    Gestures() : listener(0), dragThresholdValue(0) { }
 800b6d2:	b580      	push	{r7, lr}
 800b6d4:	b082      	sub	sp, #8
 800b6d6:	af00      	add	r7, sp, #0
 800b6d8:	6078      	str	r0, [r7, #4]
 800b6da:	687b      	ldr	r3, [r7, #4]
 800b6dc:	4618      	mov	r0, r3
 800b6de:	f7ff ffd5 	bl	800b68c <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800b6e2:	687b      	ldr	r3, [r7, #4]
 800b6e4:	2200      	movs	r2, #0
 800b6e6:	611a      	str	r2, [r3, #16]
 800b6e8:	687b      	ldr	r3, [r7, #4]
 800b6ea:	2200      	movs	r2, #0
 800b6ec:	829a      	strh	r2, [r3, #20]
 800b6ee:	687b      	ldr	r3, [r7, #4]
 800b6f0:	4618      	mov	r0, r3
 800b6f2:	3708      	adds	r7, #8
 800b6f4:	46bd      	mov	sp, r7
 800b6f6:	bd80      	pop	{r7, pc}

0800b6f8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height) :
 800b6f8:	b580      	push	{r7, lr}
 800b6fa:	b084      	sub	sp, #16
 800b6fc:	af00      	add	r7, sp, #0
 800b6fe:	60f8      	str	r0, [r7, #12]
 800b700:	60b9      	str	r1, [r7, #8]
 800b702:	607a      	str	r2, [r7, #4]
 800b704:	603b      	str	r3, [r7, #0]
        displayOrientationChangeRequested(false)
 800b706:	4a44      	ldr	r2, [pc, #272]	; (800b818 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x120>)
 800b708:	68fb      	ldr	r3, [r7, #12]
 800b70a:	601a      	str	r2, [r3, #0]
 800b70c:	68fb      	ldr	r3, [r7, #12]
 800b70e:	68ba      	ldr	r2, [r7, #8]
 800b710:	605a      	str	r2, [r3, #4]
 800b712:	68fb      	ldr	r3, [r7, #12]
 800b714:	687a      	ldr	r2, [r7, #4]
 800b716:	609a      	str	r2, [r3, #8]
 800b718:	68fb      	ldr	r3, [r7, #12]
 800b71a:	683a      	ldr	r2, [r7, #0]
 800b71c:	60da      	str	r2, [r3, #12]
 800b71e:	68fb      	ldr	r3, [r7, #12]
 800b720:	2200      	movs	r2, #0
 800b722:	611a      	str	r2, [r3, #16]
 800b724:	68fb      	ldr	r3, [r7, #12]
 800b726:	2200      	movs	r2, #0
 800b728:	615a      	str	r2, [r3, #20]
 800b72a:	68fb      	ldr	r3, [r7, #12]
 800b72c:	2200      	movs	r2, #0
 800b72e:	619a      	str	r2, [r3, #24]
 800b730:	68fb      	ldr	r3, [r7, #12]
 800b732:	331c      	adds	r3, #28
 800b734:	4618      	mov	r0, r3
 800b736:	f7ff ffcc 	bl	800b6d2 <_ZN8touchgfx8GesturesC1Ev>
 800b73a:	68fb      	ldr	r3, [r7, #12]
 800b73c:	2200      	movs	r2, #0
 800b73e:	639a      	str	r2, [r3, #56]	; 0x38
 800b740:	68fb      	ldr	r3, [r7, #12]
 800b742:	2200      	movs	r2, #0
 800b744:	63da      	str	r2, [r3, #60]	; 0x3c
 800b746:	68fb      	ldr	r3, [r7, #12]
 800b748:	2200      	movs	r2, #0
 800b74a:	641a      	str	r2, [r3, #64]	; 0x40
 800b74c:	68fb      	ldr	r3, [r7, #12]
 800b74e:	2200      	movs	r2, #0
 800b750:	645a      	str	r2, [r3, #68]	; 0x44
 800b752:	68fb      	ldr	r3, [r7, #12]
 800b754:	2200      	movs	r2, #0
 800b756:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800b75a:	68fb      	ldr	r3, [r7, #12]
 800b75c:	2201      	movs	r2, #1
 800b75e:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
 800b762:	68fb      	ldr	r3, [r7, #12]
 800b764:	2201      	movs	r2, #1
 800b766:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
 800b76a:	68fb      	ldr	r3, [r7, #12]
 800b76c:	2200      	movs	r2, #0
 800b76e:	64da      	str	r2, [r3, #76]	; 0x4c
 800b770:	68fb      	ldr	r3, [r7, #12]
 800b772:	3350      	adds	r3, #80	; 0x50
 800b774:	4618      	mov	r0, r3
 800b776:	f7fe f937 	bl	80099e8 <_ZN8touchgfx4RectC1Ev>
 800b77a:	68fb      	ldr	r3, [r7, #12]
 800b77c:	2201      	movs	r2, #1
 800b77e:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 800b782:	68fb      	ldr	r3, [r7, #12]
 800b784:	2200      	movs	r2, #0
 800b786:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 800b78a:	68fb      	ldr	r3, [r7, #12]
 800b78c:	2200      	movs	r2, #0
 800b78e:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 800b792:	68fb      	ldr	r3, [r7, #12]
 800b794:	2201      	movs	r2, #1
 800b796:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
 800b79a:	68fb      	ldr	r3, [r7, #12]
 800b79c:	2200      	movs	r2, #0
 800b79e:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 800b7a2:	68fb      	ldr	r3, [r7, #12]
 800b7a4:	2200      	movs	r2, #0
 800b7a6:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 800b7aa:	68fb      	ldr	r3, [r7, #12]
 800b7ac:	2200      	movs	r2, #0
 800b7ae:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 800b7b2:	68fb      	ldr	r3, [r7, #12]
 800b7b4:	2200      	movs	r2, #0
 800b7b6:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 800b7ba:	68fb      	ldr	r3, [r7, #12]
 800b7bc:	2200      	movs	r2, #0
 800b7be:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800b7c2:	68fb      	ldr	r3, [r7, #12]
 800b7c4:	2200      	movs	r2, #0
 800b7c6:	671a      	str	r2, [r3, #112]	; 0x70
 800b7c8:	68fb      	ldr	r3, [r7, #12]
 800b7ca:	2200      	movs	r2, #0
 800b7cc:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
        instance = this;
 800b7d0:	4a12      	ldr	r2, [pc, #72]	; (800b81c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x124>)
 800b7d2:	68fb      	ldr	r3, [r7, #12]
 800b7d4:	6013      	str	r3, [r2, #0]
        DISPLAY_WIDTH = width;
 800b7d6:	4a12      	ldr	r2, [pc, #72]	; (800b820 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x128>)
 800b7d8:	8b3b      	ldrh	r3, [r7, #24]
 800b7da:	8013      	strh	r3, [r2, #0]
        DISPLAY_HEIGHT = height;
 800b7dc:	4a11      	ldr	r2, [pc, #68]	; (800b824 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x12c>)
 800b7de:	8bbb      	ldrh	r3, [r7, #28]
 800b7e0:	8013      	strh	r3, [r2, #0]
        DISPLAY_ROTATION = rotate0;
 800b7e2:	4b11      	ldr	r3, [pc, #68]	; (800b828 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x130>)
 800b7e4:	2200      	movs	r2, #0
 800b7e6:	701a      	strb	r2, [r3, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800b7e8:	4b0d      	ldr	r3, [pc, #52]	; (800b820 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x128>)
 800b7ea:	881a      	ldrh	r2, [r3, #0]
 800b7ec:	4b0f      	ldr	r3, [pc, #60]	; (800b82c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x134>)
 800b7ee:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800b7f0:	4b0c      	ldr	r3, [pc, #48]	; (800b824 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x12c>)
 800b7f2:	881a      	ldrh	r2, [r3, #0]
 800b7f4:	4b0e      	ldr	r3, [pc, #56]	; (800b830 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x138>)
 800b7f6:	801a      	strh	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800b7f8:	8b3a      	ldrh	r2, [r7, #24]
 800b7fa:	8bbb      	ldrh	r3, [r7, #28]
 800b7fc:	429a      	cmp	r2, r3
 800b7fe:	d301      	bcc.n	800b804 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x10c>
 800b800:	2200      	movs	r2, #0
 800b802:	e000      	b.n	800b806 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x10e>
 800b804:	2201      	movs	r2, #1
 800b806:	68fb      	ldr	r3, [r7, #12]
 800b808:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 800b80c:	68fb      	ldr	r3, [r7, #12]
 800b80e:	4618      	mov	r0, r3
 800b810:	3710      	adds	r7, #16
 800b812:	46bd      	mov	sp, r7
 800b814:	bd80      	pop	{r7, pc}
 800b816:	bf00      	nop
 800b818:	0801d824 	.word	0x0801d824
 800b81c:	20026900 	.word	0x20026900
 800b820:	200268f4 	.word	0x200268f4
 800b824:	200268f6 	.word	0x200268f6
 800b828:	200268f8 	.word	0x200268f8
 800b82c:	200268fa 	.word	0x200268fa
 800b830:	200268fc 	.word	0x200268fc

0800b834 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800b834:	b580      	push	{r7, lr}
 800b836:	b082      	sub	sp, #8
 800b838:	af00      	add	r7, sp, #0
 800b83a:	6078      	str	r0, [r7, #4]
 800b83c:	6039      	str	r1, [r7, #0]
    {
        app.gotoScreen1ScreenNoTransition();
 800b83e:	683b      	ldr	r3, [r7, #0]
 800b840:	4618      	mov	r0, r3
 800b842:	f7fd fed9 	bl	80095f8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 800b846:	bf00      	nop
 800b848:	3708      	adds	r7, #8
 800b84a:	46bd      	mov	sp, r7
 800b84c:	bd80      	pop	{r7, pc}
	...

0800b850 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800b850:	b580      	push	{r7, lr}
 800b852:	b086      	sub	sp, #24
 800b854:	af02      	add	r7, sp, #8
 800b856:	60f8      	str	r0, [r7, #12]
 800b858:	60b9      	str	r1, [r7, #8]
 800b85a:	607a      	str	r2, [r7, #4]
 800b85c:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800b85e:	68f8      	ldr	r0, [r7, #12]
 800b860:	69bb      	ldr	r3, [r7, #24]
 800b862:	9300      	str	r3, [sp, #0]
 800b864:	683b      	ldr	r3, [r7, #0]
 800b866:	687a      	ldr	r2, [r7, #4]
 800b868:	68b9      	ldr	r1, [r7, #8]
 800b86a:	f7ff feaf 	bl	800b5cc <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800b86e:	4a04      	ldr	r2, [pc, #16]	; (800b880 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800b870:	68fb      	ldr	r3, [r7, #12]
 800b872:	601a      	str	r2, [r3, #0]
    {

    }
 800b874:	68fb      	ldr	r3, [r7, #12]
 800b876:	4618      	mov	r0, r3
 800b878:	3710      	adds	r7, #16
 800b87a:	46bd      	mov	sp, r7
 800b87c:	bd80      	pop	{r7, pc}
 800b87e:	bf00      	nop
 800b880:	0801d1ec 	.word	0x0801d1ec

0800b884 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800b884:	b580      	push	{r7, lr}
 800b886:	af00      	add	r7, sp, #0
 800b888:	4801      	ldr	r0, [pc, #4]	; (800b890 <__tcf_0+0xc>)
 800b88a:	f000 f9cb 	bl	800bc24 <_ZN12FrontendHeapD1Ev>
 800b88e:	bd80      	pop	{r7, pc}
 800b890:	200259c4 	.word	0x200259c4

0800b894 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800b894:	b580      	push	{r7, lr}
 800b896:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800b898:	4b08      	ldr	r3, [pc, #32]	; (800b8bc <_ZN12FrontendHeap11getInstanceEv+0x28>)
 800b89a:	681b      	ldr	r3, [r3, #0]
 800b89c:	f003 0301 	and.w	r3, r3, #1
 800b8a0:	2b00      	cmp	r3, #0
 800b8a2:	d108      	bne.n	800b8b6 <_ZN12FrontendHeap11getInstanceEv+0x22>
 800b8a4:	4806      	ldr	r0, [pc, #24]	; (800b8c0 <_ZN12FrontendHeap11getInstanceEv+0x2c>)
 800b8a6:	f000 f831 	bl	800b90c <_ZN12FrontendHeapC1Ev>
 800b8aa:	4b04      	ldr	r3, [pc, #16]	; (800b8bc <_ZN12FrontendHeap11getInstanceEv+0x28>)
 800b8ac:	2201      	movs	r2, #1
 800b8ae:	601a      	str	r2, [r3, #0]
 800b8b0:	4804      	ldr	r0, [pc, #16]	; (800b8c4 <_ZN12FrontendHeap11getInstanceEv+0x30>)
 800b8b2:	f00f fcfb 	bl	801b2ac <atexit>
        return instance;
 800b8b6:	4b02      	ldr	r3, [pc, #8]	; (800b8c0 <_ZN12FrontendHeap11getInstanceEv+0x2c>)
    }
 800b8b8:	4618      	mov	r0, r3
 800b8ba:	bd80      	pop	{r7, pc}
 800b8bc:	20025bd4 	.word	0x20025bd4
 800b8c0:	200259c4 	.word	0x200259c4
 800b8c4:	0800b885 	.word	0x0800b885

0800b8c8 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800b8c8:	b580      	push	{r7, lr}
 800b8ca:	b082      	sub	sp, #8
 800b8cc:	af00      	add	r7, sp, #0
 800b8ce:	6078      	str	r0, [r7, #4]
 800b8d0:	4a05      	ldr	r2, [pc, #20]	; (800b8e8 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800b8d2:	687b      	ldr	r3, [r7, #4]
 800b8d4:	601a      	str	r2, [r3, #0]
 800b8d6:	687b      	ldr	r3, [r7, #4]
 800b8d8:	4618      	mov	r0, r3
 800b8da:	f7ff fe97 	bl	800b60c <_ZN8touchgfx7MVPHeapD1Ev>
 800b8de:	687b      	ldr	r3, [r7, #4]
 800b8e0:	4618      	mov	r0, r3
 800b8e2:	3708      	adds	r7, #8
 800b8e4:	46bd      	mov	sp, r7
 800b8e6:	bd80      	pop	{r7, pc}
 800b8e8:	0801d1ec 	.word	0x0801d1ec

0800b8ec <_ZN16FrontendHeapBaseD0Ev>:
 800b8ec:	b580      	push	{r7, lr}
 800b8ee:	b082      	sub	sp, #8
 800b8f0:	af00      	add	r7, sp, #0
 800b8f2:	6078      	str	r0, [r7, #4]
 800b8f4:	6878      	ldr	r0, [r7, #4]
 800b8f6:	f7ff ffe7 	bl	800b8c8 <_ZN16FrontendHeapBaseD1Ev>
 800b8fa:	2114      	movs	r1, #20
 800b8fc:	6878      	ldr	r0, [r7, #4]
 800b8fe:	f00f fc8b 	bl	801b218 <_ZdlPvj>
 800b902:	687b      	ldr	r3, [r7, #4]
 800b904:	4618      	mov	r0, r3
 800b906:	3708      	adds	r7, #8
 800b908:	46bd      	mov	sp, r7
 800b90a:	bd80      	pop	{r7, pc}

0800b90c <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800b90c:	b590      	push	{r4, r7, lr}
 800b90e:	b085      	sub	sp, #20
 800b910:	af02      	add	r7, sp, #8
 800b912:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800b914:	6878      	ldr	r0, [r7, #4]
 800b916:	687b      	ldr	r3, [r7, #4]
 800b918:	f103 0114 	add.w	r1, r3, #20
 800b91c:	687b      	ldr	r3, [r7, #4]
 800b91e:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 800b922:	687b      	ldr	r3, [r7, #4]
 800b924:	f103 04a8 	add.w	r4, r3, #168	; 0xa8
 800b928:	687b      	ldr	r3, [r7, #4]
 800b92a:	33bc      	adds	r3, #188	; 0xbc
 800b92c:	9300      	str	r3, [sp, #0]
 800b92e:	4623      	mov	r3, r4
 800b930:	f7ff ff8e 	bl	800b850 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800b934:	4a16      	ldr	r2, [pc, #88]	; (800b990 <_ZN12FrontendHeapC1Ev+0x84>)
 800b936:	687b      	ldr	r3, [r7, #4]
 800b938:	601a      	str	r2, [r3, #0]
 800b93a:	687b      	ldr	r3, [r7, #4]
 800b93c:	3314      	adds	r3, #20
 800b93e:	4618      	mov	r0, r3
 800b940:	f000 f8d4 	bl	800baec <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800b944:	687b      	ldr	r3, [r7, #4]
 800b946:	332c      	adds	r3, #44	; 0x2c
 800b948:	4618      	mov	r0, r3
 800b94a:	f000 f903 	bl	800bb54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800b94e:	687b      	ldr	r3, [r7, #4]
 800b950:	33a8      	adds	r3, #168	; 0xa8
 800b952:	4618      	mov	r0, r3
 800b954:	f000 f932 	bl	800bbbc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800b958:	687b      	ldr	r3, [r7, #4]
 800b95a:	f103 00bc 	add.w	r0, r3, #188	; 0xbc
 800b95e:	687b      	ldr	r3, [r7, #4]
 800b960:	f503 7303 	add.w	r3, r3, #524	; 0x20c
 800b964:	687a      	ldr	r2, [r7, #4]
 800b966:	4619      	mov	r1, r3
 800b968:	f7fe fd0a 	bl	800a380 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800b96c:	687b      	ldr	r3, [r7, #4]
 800b96e:	f503 7303 	add.w	r3, r3, #524	; 0x20c
 800b972:	4618      	mov	r0, r3
 800b974:	f7fe fd1a 	bl	800a3ac <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
 800b978:	687a      	ldr	r2, [r7, #4]
 800b97a:	687b      	ldr	r3, [r7, #4]
 800b97c:	33bc      	adds	r3, #188	; 0xbc
 800b97e:	4619      	mov	r1, r3
 800b980:	4610      	mov	r0, r2
 800b982:	f7ff ff57 	bl	800b834 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800b986:	687b      	ldr	r3, [r7, #4]
 800b988:	4618      	mov	r0, r3
 800b98a:	370c      	adds	r7, #12
 800b98c:	46bd      	mov	sp, r7
 800b98e:	bd90      	pop	{r4, r7, pc}
 800b990:	0801d13c 	.word	0x0801d13c

0800b994 <_ZN8touchgfx8LCD16bppD1Ev>:
class LCD16bpp : public LCD
{
public:
    LCD16bpp();

    virtual ~LCD16bpp()
 800b994:	b580      	push	{r7, lr}
 800b996:	b082      	sub	sp, #8
 800b998:	af00      	add	r7, sp, #0
 800b99a:	6078      	str	r0, [r7, #4]
    {
 800b99c:	4a05      	ldr	r2, [pc, #20]	; (800b9b4 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800b99e:	687b      	ldr	r3, [r7, #4]
 800b9a0:	601a      	str	r2, [r3, #0]
 800b9a2:	687b      	ldr	r3, [r7, #4]
 800b9a4:	4618      	mov	r0, r3
 800b9a6:	f7ff fe51 	bl	800b64c <_ZN8touchgfx3LCDD1Ev>
    }
 800b9aa:	687b      	ldr	r3, [r7, #4]
 800b9ac:	4618      	mov	r0, r3
 800b9ae:	3708      	adds	r7, #8
 800b9b0:	46bd      	mov	sp, r7
 800b9b2:	bd80      	pop	{r7, pc}
 800b9b4:	0801f19c 	.word	0x0801f19c

0800b9b8 <_ZN8touchgfx8LCD16bppD0Ev>:
    virtual ~LCD16bpp()
 800b9b8:	b580      	push	{r7, lr}
 800b9ba:	b082      	sub	sp, #8
 800b9bc:	af00      	add	r7, sp, #0
 800b9be:	6078      	str	r0, [r7, #4]
    }
 800b9c0:	6878      	ldr	r0, [r7, #4]
 800b9c2:	f7ff ffe7 	bl	800b994 <_ZN8touchgfx8LCD16bppD1Ev>
 800b9c6:	2178      	movs	r1, #120	; 0x78
 800b9c8:	6878      	ldr	r0, [r7, #4]
 800b9ca:	f00f fc25 	bl	801b218 <_ZdlPvj>
 800b9ce:	687b      	ldr	r3, [r7, #4]
 800b9d0:	4618      	mov	r0, r3
 800b9d2:	3708      	adds	r7, #8
 800b9d4:	46bd      	mov	sp, r7
 800b9d6:	bd80      	pop	{r7, pc}

0800b9d8 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : touchgfx::HAL(dma, display, tc, width, height)
 800b9d8:	b580      	push	{r7, lr}
 800b9da:	b086      	sub	sp, #24
 800b9dc:	af02      	add	r7, sp, #8
 800b9de:	60f8      	str	r0, [r7, #12]
 800b9e0:	60b9      	str	r1, [r7, #8]
 800b9e2:	607a      	str	r2, [r7, #4]
 800b9e4:	603b      	str	r3, [r7, #0]
 800b9e6:	68f8      	ldr	r0, [r7, #12]
 800b9e8:	8bbb      	ldrh	r3, [r7, #28]
 800b9ea:	9301      	str	r3, [sp, #4]
 800b9ec:	8b3b      	ldrh	r3, [r7, #24]
 800b9ee:	9300      	str	r3, [sp, #0]
 800b9f0:	683b      	ldr	r3, [r7, #0]
 800b9f2:	687a      	ldr	r2, [r7, #4]
 800b9f4:	68b9      	ldr	r1, [r7, #8]
 800b9f6:	f7ff fe7f 	bl	800b6f8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800b9fa:	4a04      	ldr	r2, [pc, #16]	; (800ba0c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800b9fc:	68fb      	ldr	r3, [r7, #12]
 800b9fe:	601a      	str	r2, [r3, #0]
    }
 800ba00:	68fb      	ldr	r3, [r7, #12]
 800ba02:	4618      	mov	r0, r3
 800ba04:	3710      	adds	r7, #16
 800ba06:	46bd      	mov	sp, r7
 800ba08:	bd80      	pop	{r7, pc}
 800ba0a:	bf00      	nop
 800ba0c:	0801d210 	.word	0x0801d210

0800ba10 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800ba10:	b580      	push	{r7, lr}
 800ba12:	b086      	sub	sp, #24
 800ba14:	af02      	add	r7, sp, #8
 800ba16:	60f8      	str	r0, [r7, #12]
 800ba18:	60b9      	str	r1, [r7, #8]
 800ba1a:	607a      	str	r2, [r7, #4]
 800ba1c:	603b      	str	r3, [r7, #0]
 800ba1e:	68f8      	ldr	r0, [r7, #12]
 800ba20:	8bbb      	ldrh	r3, [r7, #28]
 800ba22:	9301      	str	r3, [sp, #4]
 800ba24:	8b3b      	ldrh	r3, [r7, #24]
 800ba26:	9300      	str	r3, [sp, #0]
 800ba28:	683b      	ldr	r3, [r7, #0]
 800ba2a:	687a      	ldr	r2, [r7, #4]
 800ba2c:	68b9      	ldr	r1, [r7, #8]
 800ba2e:	f7ff ffd3 	bl	800b9d8 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800ba32:	4a04      	ldr	r2, [pc, #16]	; (800ba44 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800ba34:	68fb      	ldr	r3, [r7, #12]
 800ba36:	601a      	str	r2, [r3, #0]
    }
 800ba38:	68fb      	ldr	r3, [r7, #12]
 800ba3a:	4618      	mov	r0, r3
 800ba3c:	3710      	adds	r7, #16
 800ba3e:	46bd      	mov	sp, r7
 800ba40:	bd80      	pop	{r7, pc}
 800ba42:	bf00      	nop
 800ba44:	0801cf3c 	.word	0x0801cf3c

0800ba48 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800ba48:	b480      	push	{r7}
 800ba4a:	b083      	sub	sp, #12
 800ba4c:	af00      	add	r7, sp, #0
 800ba4e:	6078      	str	r0, [r7, #4]
 800ba50:	4a04      	ldr	r2, [pc, #16]	; (800ba64 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800ba52:	687b      	ldr	r3, [r7, #4]
 800ba54:	601a      	str	r2, [r3, #0]
 800ba56:	687b      	ldr	r3, [r7, #4]
 800ba58:	4618      	mov	r0, r3
 800ba5a:	370c      	adds	r7, #12
 800ba5c:	46bd      	mov	sp, r7
 800ba5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba62:	4770      	bx	lr
 800ba64:	0801cf24 	.word	0x0801cf24

0800ba68 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800ba68:	b580      	push	{r7, lr}
 800ba6a:	b082      	sub	sp, #8
 800ba6c:	af00      	add	r7, sp, #0
 800ba6e:	6078      	str	r0, [r7, #4]
 800ba70:	687b      	ldr	r3, [r7, #4]
 800ba72:	4618      	mov	r0, r3
 800ba74:	f7ff ffe8 	bl	800ba48 <_ZN8touchgfx15TouchControllerC1Ev>
 800ba78:	4a03      	ldr	r2, [pc, #12]	; (800ba88 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800ba7a:	687b      	ldr	r3, [r7, #4]
 800ba7c:	601a      	str	r2, [r3, #0]
 800ba7e:	687b      	ldr	r3, [r7, #4]
 800ba80:	4618      	mov	r0, r3
 800ba82:	3708      	adds	r7, #8
 800ba84:	46bd      	mov	sp, r7
 800ba86:	bd80      	pop	{r7, pc}
 800ba88:	0801cf0c 	.word	0x0801cf0c

0800ba8c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800ba8c:	b590      	push	{r4, r7, lr}
 800ba8e:	b085      	sub	sp, #20
 800ba90:	af02      	add	r7, sp, #8
  Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800ba92:	f7fe fb81 	bl	800a198 <_ZN14BitmapDatabase11getInstanceEv>
 800ba96:	4604      	mov	r4, r0
 800ba98:	f7fe fb88 	bl	800a1ac <_ZN14BitmapDatabase15getInstanceSizeEv>
 800ba9c:	4603      	mov	r3, r0
 800ba9e:	4619      	mov	r1, r3
 800baa0:	2300      	movs	r3, #0
 800baa2:	9300      	str	r3, [sp, #0]
 800baa4:	2300      	movs	r3, #0
 800baa6:	2200      	movs	r2, #0
 800baa8:	4620      	mov	r0, r4
 800baaa:	f003 ff15 	bl	800f8d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
  TypedText::registerTexts(&texts);
 800baae:	480c      	ldr	r0, [pc, #48]	; (800bae0 <touchgfx_init+0x54>)
 800bab0:	f7ff fd7c 	bl	800b5ac <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
  Texts::setLanguage(0);
 800bab4:	2000      	movs	r0, #0
 800bab6:	f7fe fb9d 	bl	800a1f4 <_ZN8touchgfx5Texts11setLanguageEt>

  FontManager::setFontProvider(&fontProvider);
 800baba:	480a      	ldr	r0, [pc, #40]	; (800bae4 <touchgfx_init+0x58>)
 800babc:	f003 fe5a 	bl	800f774 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

  FrontendHeap& heap = FrontendHeap::getInstance();
 800bac0:	f7ff fee8 	bl	800b894 <_ZN12FrontendHeap11getInstanceEv>
 800bac4:	6078      	str	r0, [r7, #4]
  (void)heap; // we need to obtain the reference above to initialize the frontend heap.

  hal.initialize();
 800bac6:	4808      	ldr	r0, [pc, #32]	; (800bae8 <touchgfx_init+0x5c>)
 800bac8:	f7ff f810 	bl	800aaec <_ZN11TouchGFXHAL10initializeEv>
  hal.enableLCDControllerInterrupt();
 800bacc:	4806      	ldr	r0, [pc, #24]	; (800bae8 <touchgfx_init+0x5c>)
 800bace:	f7ff f866 	bl	800ab9e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>
  hal.enableInterrupts();
 800bad2:	4805      	ldr	r0, [pc, #20]	; (800bae8 <touchgfx_init+0x5c>)
 800bad4:	f7ff f84b 	bl	800ab6e <_ZN11TouchGFXHAL16enableInterruptsEv>
}
 800bad8:	bf00      	nop
 800bada:	370c      	adds	r7, #12
 800badc:	46bd      	mov	sp, r7
 800bade:	bd90      	pop	{r4, r7, pc}
 800bae0:	20026874 	.word	0x20026874
 800bae4:	20000018 	.word	0x20000018
 800bae8:	20026878 	.word	0x20026878

0800baec <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Constructs an empty Partition.
     */
    Partition() : AbstractPartition()
 800baec:	b580      	push	{r7, lr}
 800baee:	b082      	sub	sp, #8
 800baf0:	af00      	add	r7, sp, #0
 800baf2:	6078      	str	r0, [r7, #4]
 800baf4:	687b      	ldr	r3, [r7, #4]
 800baf6:	4618      	mov	r0, r3
 800baf8:	f000 fc6c 	bl	800c3d4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800bafc:	4a03      	ldr	r2, [pc, #12]	; (800bb0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800bafe:	687b      	ldr	r3, [r7, #4]
 800bb00:	601a      	str	r2, [r3, #0]
    {
    }
 800bb02:	687b      	ldr	r3, [r7, #4]
 800bb04:	4618      	mov	r0, r3
 800bb06:	3708      	adds	r7, #8
 800bb08:	46bd      	mov	sp, r7
 800bb0a:	bd80      	pop	{r7, pc}
 800bb0c:	0801d1b8 	.word	0x0801d1b8

0800bb10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
    /**
     * @fn virtual Partition::~Partition()
     *
     * @brief Destructor.
     */
    virtual ~Partition()
 800bb10:	b580      	push	{r7, lr}
 800bb12:	b082      	sub	sp, #8
 800bb14:	af00      	add	r7, sp, #0
 800bb16:	6078      	str	r0, [r7, #4]
    {
    }
 800bb18:	4a05      	ldr	r2, [pc, #20]	; (800bb30 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800bb1a:	687b      	ldr	r3, [r7, #4]
 800bb1c:	601a      	str	r2, [r3, #0]
 800bb1e:	687b      	ldr	r3, [r7, #4]
 800bb20:	4618      	mov	r0, r3
 800bb22:	f000 fc55 	bl	800c3d0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800bb26:	687b      	ldr	r3, [r7, #4]
 800bb28:	4618      	mov	r0, r3
 800bb2a:	3708      	adds	r7, #8
 800bb2c:	46bd      	mov	sp, r7
 800bb2e:	bd80      	pop	{r7, pc}
 800bb30:	0801d1b8 	.word	0x0801d1b8

0800bb34 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800bb34:	b580      	push	{r7, lr}
 800bb36:	b082      	sub	sp, #8
 800bb38:	af00      	add	r7, sp, #0
 800bb3a:	6078      	str	r0, [r7, #4]
    }
 800bb3c:	6878      	ldr	r0, [r7, #4]
 800bb3e:	f7ff ffe7 	bl	800bb10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bb42:	2118      	movs	r1, #24
 800bb44:	6878      	ldr	r0, [r7, #4]
 800bb46:	f00f fb67 	bl	801b218 <_ZdlPvj>
 800bb4a:	687b      	ldr	r3, [r7, #4]
 800bb4c:	4618      	mov	r0, r3
 800bb4e:	3708      	adds	r7, #8
 800bb50:	46bd      	mov	sp, r7
 800bb52:	bd80      	pop	{r7, pc}

0800bb54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
    Partition() : AbstractPartition()
 800bb54:	b580      	push	{r7, lr}
 800bb56:	b082      	sub	sp, #8
 800bb58:	af00      	add	r7, sp, #0
 800bb5a:	6078      	str	r0, [r7, #4]
 800bb5c:	687b      	ldr	r3, [r7, #4]
 800bb5e:	4618      	mov	r0, r3
 800bb60:	f000 fc38 	bl	800c3d4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800bb64:	4a03      	ldr	r2, [pc, #12]	; (800bb74 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800bb66:	687b      	ldr	r3, [r7, #4]
 800bb68:	601a      	str	r2, [r3, #0]
    }
 800bb6a:	687b      	ldr	r3, [r7, #4]
 800bb6c:	4618      	mov	r0, r3
 800bb6e:	3708      	adds	r7, #8
 800bb70:	46bd      	mov	sp, r7
 800bb72:	bd80      	pop	{r7, pc}
 800bb74:	0801d184 	.word	0x0801d184

0800bb78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
    virtual ~Partition()
 800bb78:	b580      	push	{r7, lr}
 800bb7a:	b082      	sub	sp, #8
 800bb7c:	af00      	add	r7, sp, #0
 800bb7e:	6078      	str	r0, [r7, #4]
    }
 800bb80:	4a05      	ldr	r2, [pc, #20]	; (800bb98 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800bb82:	687b      	ldr	r3, [r7, #4]
 800bb84:	601a      	str	r2, [r3, #0]
 800bb86:	687b      	ldr	r3, [r7, #4]
 800bb88:	4618      	mov	r0, r3
 800bb8a:	f000 fc21 	bl	800c3d0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800bb8e:	687b      	ldr	r3, [r7, #4]
 800bb90:	4618      	mov	r0, r3
 800bb92:	3708      	adds	r7, #8
 800bb94:	46bd      	mov	sp, r7
 800bb96:	bd80      	pop	{r7, pc}
 800bb98:	0801d184 	.word	0x0801d184

0800bb9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800bb9c:	b580      	push	{r7, lr}
 800bb9e:	b082      	sub	sp, #8
 800bba0:	af00      	add	r7, sp, #0
 800bba2:	6078      	str	r0, [r7, #4]
    }
 800bba4:	6878      	ldr	r0, [r7, #4]
 800bba6:	f7ff ffe7 	bl	800bb78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bbaa:	217c      	movs	r1, #124	; 0x7c
 800bbac:	6878      	ldr	r0, [r7, #4]
 800bbae:	f00f fb33 	bl	801b218 <_ZdlPvj>
 800bbb2:	687b      	ldr	r3, [r7, #4]
 800bbb4:	4618      	mov	r0, r3
 800bbb6:	3708      	adds	r7, #8
 800bbb8:	46bd      	mov	sp, r7
 800bbba:	bd80      	pop	{r7, pc}

0800bbbc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
    Partition() : AbstractPartition()
 800bbbc:	b580      	push	{r7, lr}
 800bbbe:	b082      	sub	sp, #8
 800bbc0:	af00      	add	r7, sp, #0
 800bbc2:	6078      	str	r0, [r7, #4]
 800bbc4:	687b      	ldr	r3, [r7, #4]
 800bbc6:	4618      	mov	r0, r3
 800bbc8:	f000 fc04 	bl	800c3d4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800bbcc:	4a03      	ldr	r2, [pc, #12]	; (800bbdc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800bbce:	687b      	ldr	r3, [r7, #4]
 800bbd0:	601a      	str	r2, [r3, #0]
    }
 800bbd2:	687b      	ldr	r3, [r7, #4]
 800bbd4:	4618      	mov	r0, r3
 800bbd6:	3708      	adds	r7, #8
 800bbd8:	46bd      	mov	sp, r7
 800bbda:	bd80      	pop	{r7, pc}
 800bbdc:	0801d150 	.word	0x0801d150

0800bbe0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
    virtual ~Partition()
 800bbe0:	b580      	push	{r7, lr}
 800bbe2:	b082      	sub	sp, #8
 800bbe4:	af00      	add	r7, sp, #0
 800bbe6:	6078      	str	r0, [r7, #4]
    }
 800bbe8:	4a05      	ldr	r2, [pc, #20]	; (800bc00 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800bbea:	687b      	ldr	r3, [r7, #4]
 800bbec:	601a      	str	r2, [r3, #0]
 800bbee:	687b      	ldr	r3, [r7, #4]
 800bbf0:	4618      	mov	r0, r3
 800bbf2:	f000 fbed 	bl	800c3d0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800bbf6:	687b      	ldr	r3, [r7, #4]
 800bbf8:	4618      	mov	r0, r3
 800bbfa:	3708      	adds	r7, #8
 800bbfc:	46bd      	mov	sp, r7
 800bbfe:	bd80      	pop	{r7, pc}
 800bc00:	0801d150 	.word	0x0801d150

0800bc04 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800bc04:	b580      	push	{r7, lr}
 800bc06:	b082      	sub	sp, #8
 800bc08:	af00      	add	r7, sp, #0
 800bc0a:	6078      	str	r0, [r7, #4]
    }
 800bc0c:	6878      	ldr	r0, [r7, #4]
 800bc0e:	f7ff ffe7 	bl	800bbe0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bc12:	2114      	movs	r1, #20
 800bc14:	6878      	ldr	r0, [r7, #4]
 800bc16:	f00f faff 	bl	801b218 <_ZdlPvj>
 800bc1a:	687b      	ldr	r3, [r7, #4]
 800bc1c:	4618      	mov	r0, r3
 800bc1e:	3708      	adds	r7, #8
 800bc20:	46bd      	mov	sp, r7
 800bc22:	bd80      	pop	{r7, pc}

0800bc24 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800bc24:	b580      	push	{r7, lr}
 800bc26:	b082      	sub	sp, #8
 800bc28:	af00      	add	r7, sp, #0
 800bc2a:	6078      	str	r0, [r7, #4]
 800bc2c:	4a0f      	ldr	r2, [pc, #60]	; (800bc6c <_ZN12FrontendHeapD1Ev+0x48>)
 800bc2e:	687b      	ldr	r3, [r7, #4]
 800bc30:	601a      	str	r2, [r3, #0]
 800bc32:	687b      	ldr	r3, [r7, #4]
 800bc34:	33bc      	adds	r3, #188	; 0xbc
 800bc36:	4618      	mov	r0, r3
 800bc38:	f7fe fb6c 	bl	800a314 <_ZN19FrontendApplicationD1Ev>
 800bc3c:	687b      	ldr	r3, [r7, #4]
 800bc3e:	33a8      	adds	r3, #168	; 0xa8
 800bc40:	4618      	mov	r0, r3
 800bc42:	f7ff ffcd 	bl	800bbe0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bc46:	687b      	ldr	r3, [r7, #4]
 800bc48:	332c      	adds	r3, #44	; 0x2c
 800bc4a:	4618      	mov	r0, r3
 800bc4c:	f7ff ff94 	bl	800bb78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bc50:	687b      	ldr	r3, [r7, #4]
 800bc52:	3314      	adds	r3, #20
 800bc54:	4618      	mov	r0, r3
 800bc56:	f7ff ff5b 	bl	800bb10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bc5a:	687b      	ldr	r3, [r7, #4]
 800bc5c:	4618      	mov	r0, r3
 800bc5e:	f7ff fe33 	bl	800b8c8 <_ZN16FrontendHeapBaseD1Ev>
 800bc62:	687b      	ldr	r3, [r7, #4]
 800bc64:	4618      	mov	r0, r3
 800bc66:	3708      	adds	r7, #8
 800bc68:	46bd      	mov	sp, r7
 800bc6a:	bd80      	pop	{r7, pc}
 800bc6c:	0801d13c 	.word	0x0801d13c

0800bc70 <_ZN12FrontendHeapD0Ev>:
 800bc70:	b580      	push	{r7, lr}
 800bc72:	b082      	sub	sp, #8
 800bc74:	af00      	add	r7, sp, #0
 800bc76:	6078      	str	r0, [r7, #4]
 800bc78:	6878      	ldr	r0, [r7, #4]
 800bc7a:	f7ff ffd3 	bl	800bc24 <_ZN12FrontendHeapD1Ev>
 800bc7e:	f44f 7104 	mov.w	r1, #528	; 0x210
 800bc82:	6878      	ldr	r0, [r7, #4]
 800bc84:	f00f fac8 	bl	801b218 <_ZdlPvj>
 800bc88:	687b      	ldr	r3, [r7, #4]
 800bc8a:	4618      	mov	r0, r3
 800bc8c:	3708      	adds	r7, #8
 800bc8e:	46bd      	mov	sp, r7
 800bc90:	bd80      	pop	{r7, pc}
	...

0800bc94 <_Z41__static_initialization_and_destruction_0ii>:
 /*
  * This function check if a VSYNC has occured.
  * If VSYNC has occured, signal TouchGFX to start a rendering
  */
  OSWrappers::waitForVSync();
}
 800bc94:	b580      	push	{r7, lr}
 800bc96:	b084      	sub	sp, #16
 800bc98:	af02      	add	r7, sp, #8
 800bc9a:	6078      	str	r0, [r7, #4]
 800bc9c:	6039      	str	r1, [r7, #0]
 800bc9e:	687b      	ldr	r3, [r7, #4]
 800bca0:	2b01      	cmp	r3, #1
 800bca2:	d118      	bne.n	800bcd6 <_Z41__static_initialization_and_destruction_0ii+0x42>
 800bca4:	683b      	ldr	r3, [r7, #0]
 800bca6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800bcaa:	4293      	cmp	r3, r2
 800bcac:	d113      	bne.n	800bcd6 <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 800bcae:	4817      	ldr	r0, [pc, #92]	; (800bd0c <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800bcb0:	f7ff feda 	bl	800ba68 <_ZN20STM32TouchControllerC1Ev>
static STM32F4DMA dma;
 800bcb4:	4816      	ldr	r0, [pc, #88]	; (800bd10 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800bcb6:	f7ff f97b 	bl	800afb0 <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 800bcba:	4816      	ldr	r0, [pc, #88]	; (800bd14 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800bcbc:	f006 fe10 	bl	80128e0 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 240, 320);
 800bcc0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800bcc4:	9301      	str	r3, [sp, #4]
 800bcc6:	23f0      	movs	r3, #240	; 0xf0
 800bcc8:	9300      	str	r3, [sp, #0]
 800bcca:	4b10      	ldr	r3, [pc, #64]	; (800bd0c <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800bccc:	4a11      	ldr	r2, [pc, #68]	; (800bd14 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800bcce:	4910      	ldr	r1, [pc, #64]	; (800bd10 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800bcd0:	4811      	ldr	r0, [pc, #68]	; (800bd18 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800bcd2:	f7ff fe9d 	bl	800ba10 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800bcd6:	687b      	ldr	r3, [r7, #4]
 800bcd8:	2b00      	cmp	r3, #0
 800bcda:	d113      	bne.n	800bd04 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800bcdc:	683b      	ldr	r3, [r7, #0]
 800bcde:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800bce2:	4293      	cmp	r3, r2
 800bce4:	d10e      	bne.n	800bd04 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800bce6:	480c      	ldr	r0, [pc, #48]	; (800bd18 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800bce8:	f7fe ff66 	bl	800abb8 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800bcec:	480b      	ldr	r0, [pc, #44]	; (800bd1c <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800bcee:	f7fc fef3 	bl	8008ad8 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800bcf2:	4808      	ldr	r0, [pc, #32]	; (800bd14 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800bcf4:	f7ff fe4e 	bl	800b994 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32F4DMA dma;
 800bcf8:	4805      	ldr	r0, [pc, #20]	; (800bd10 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800bcfa:	f7ff f983 	bl	800b004 <_ZN10STM32F4DMAD1Ev>
static STM32TouchController tc;
 800bcfe:	4803      	ldr	r0, [pc, #12]	; (800bd0c <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800bd00:	f7fe fcd0 	bl	800a6a4 <_ZN20STM32TouchControllerD1Ev>
}
 800bd04:	bf00      	nop
 800bd06:	3708      	adds	r7, #8
 800bd08:	46bd      	mov	sp, r7
 800bd0a:	bd80      	pop	{r7, pc}
 800bd0c:	20025bd8 	.word	0x20025bd8
 800bd10:	20025bdc 	.word	0x20025bdc
 800bd14:	200267fc 	.word	0x200267fc
 800bd18:	20026878 	.word	0x20026878
 800bd1c:	20000018 	.word	0x20000018

0800bd20 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
     *
     * @return An uint16_t.
     *
     * @see touchgfx::AbstractPartition::capacity()
     */
    virtual uint16_t capacity() const
 800bd20:	b480      	push	{r7}
 800bd22:	b083      	sub	sp, #12
 800bd24:	af00      	add	r7, sp, #0
 800bd26:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800bd28:	2301      	movs	r3, #1
    }
 800bd2a:	4618      	mov	r0, r3
 800bd2c:	370c      	adds	r7, #12
 800bd2e:	46bd      	mov	sp, r7
 800bd30:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd34:	4770      	bx	lr

0800bd36 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
     *
     * @return An uint32_t.
     *
     * @see touchgfx::AbstractPartition::element_size()
     */
    virtual uint32_t element_size()
 800bd36:	b480      	push	{r7}
 800bd38:	b083      	sub	sp, #12
 800bd3a:	af00      	add	r7, sp, #0
 800bd3c:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800bd3e:	230c      	movs	r3, #12
    }
 800bd40:	4618      	mov	r0, r3
 800bd42:	370c      	adds	r7, #12
 800bd44:	46bd      	mov	sp, r7
 800bd46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd4a:	4770      	bx	lr

0800bd4c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @return null if it fails, else a void*.
     *
     * @see touchgfx::AbstractPartition::element()
     */
    virtual void* element(uint16_t index)
 800bd4c:	b480      	push	{r7}
 800bd4e:	b083      	sub	sp, #12
 800bd50:	af00      	add	r7, sp, #0
 800bd52:	6078      	str	r0, [r7, #4]
 800bd54:	460b      	mov	r3, r1
 800bd56:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800bd58:	887a      	ldrh	r2, [r7, #2]
 800bd5a:	4613      	mov	r3, r2
 800bd5c:	005b      	lsls	r3, r3, #1
 800bd5e:	4413      	add	r3, r2
 800bd60:	009b      	lsls	r3, r3, #2
 800bd62:	3308      	adds	r3, #8
 800bd64:	687a      	ldr	r2, [r7, #4]
 800bd66:	4413      	add	r3, r2
    }
 800bd68:	4618      	mov	r0, r3
 800bd6a:	370c      	adds	r7, #12
 800bd6c:	46bd      	mov	sp, r7
 800bd6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd72:	4770      	bx	lr

0800bd74 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @return null if it fails, else a void*.
     *
     * @see touchgfx::AbstractPartition::element()
     */
    virtual const void* element(uint16_t index) const
 800bd74:	b480      	push	{r7}
 800bd76:	b083      	sub	sp, #12
 800bd78:	af00      	add	r7, sp, #0
 800bd7a:	6078      	str	r0, [r7, #4]
 800bd7c:	460b      	mov	r3, r1
 800bd7e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800bd80:	887a      	ldrh	r2, [r7, #2]
 800bd82:	4613      	mov	r3, r2
 800bd84:	005b      	lsls	r3, r3, #1
 800bd86:	4413      	add	r3, r2
 800bd88:	009b      	lsls	r3, r3, #2
 800bd8a:	3308      	adds	r3, #8
 800bd8c:	687a      	ldr	r2, [r7, #4]
 800bd8e:	4413      	add	r3, r2
    }
 800bd90:	4618      	mov	r0, r3
 800bd92:	370c      	adds	r7, #12
 800bd94:	46bd      	mov	sp, r7
 800bd96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd9a:	4770      	bx	lr

0800bd9c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800bd9c:	b480      	push	{r7}
 800bd9e:	b083      	sub	sp, #12
 800bda0:	af00      	add	r7, sp, #0
 800bda2:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800bda4:	2301      	movs	r3, #1
    }
 800bda6:	4618      	mov	r0, r3
 800bda8:	370c      	adds	r7, #12
 800bdaa:	46bd      	mov	sp, r7
 800bdac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdb0:	4770      	bx	lr

0800bdb2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800bdb2:	b480      	push	{r7}
 800bdb4:	b083      	sub	sp, #12
 800bdb6:	af00      	add	r7, sp, #0
 800bdb8:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800bdba:	2374      	movs	r3, #116	; 0x74
    }
 800bdbc:	4618      	mov	r0, r3
 800bdbe:	370c      	adds	r7, #12
 800bdc0:	46bd      	mov	sp, r7
 800bdc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdc6:	4770      	bx	lr

0800bdc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800bdc8:	b480      	push	{r7}
 800bdca:	b083      	sub	sp, #12
 800bdcc:	af00      	add	r7, sp, #0
 800bdce:	6078      	str	r0, [r7, #4]
 800bdd0:	460b      	mov	r3, r1
 800bdd2:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800bdd4:	887b      	ldrh	r3, [r7, #2]
 800bdd6:	2274      	movs	r2, #116	; 0x74
 800bdd8:	fb02 f303 	mul.w	r3, r2, r3
 800bddc:	3308      	adds	r3, #8
 800bdde:	687a      	ldr	r2, [r7, #4]
 800bde0:	4413      	add	r3, r2
    }
 800bde2:	4618      	mov	r0, r3
 800bde4:	370c      	adds	r7, #12
 800bde6:	46bd      	mov	sp, r7
 800bde8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdec:	4770      	bx	lr

0800bdee <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800bdee:	b480      	push	{r7}
 800bdf0:	b083      	sub	sp, #12
 800bdf2:	af00      	add	r7, sp, #0
 800bdf4:	6078      	str	r0, [r7, #4]
 800bdf6:	460b      	mov	r3, r1
 800bdf8:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800bdfa:	887b      	ldrh	r3, [r7, #2]
 800bdfc:	2274      	movs	r2, #116	; 0x74
 800bdfe:	fb02 f303 	mul.w	r3, r2, r3
 800be02:	3308      	adds	r3, #8
 800be04:	687a      	ldr	r2, [r7, #4]
 800be06:	4413      	add	r3, r2
    }
 800be08:	4618      	mov	r0, r3
 800be0a:	370c      	adds	r7, #12
 800be0c:	46bd      	mov	sp, r7
 800be0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be12:	4770      	bx	lr

0800be14 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800be14:	b480      	push	{r7}
 800be16:	b083      	sub	sp, #12
 800be18:	af00      	add	r7, sp, #0
 800be1a:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800be1c:	2301      	movs	r3, #1
    }
 800be1e:	4618      	mov	r0, r3
 800be20:	370c      	adds	r7, #12
 800be22:	46bd      	mov	sp, r7
 800be24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be28:	4770      	bx	lr

0800be2a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800be2a:	b480      	push	{r7}
 800be2c:	b083      	sub	sp, #12
 800be2e:	af00      	add	r7, sp, #0
 800be30:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800be32:	2310      	movs	r3, #16
    }
 800be34:	4618      	mov	r0, r3
 800be36:	370c      	adds	r7, #12
 800be38:	46bd      	mov	sp, r7
 800be3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be3e:	4770      	bx	lr

0800be40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800be40:	b480      	push	{r7}
 800be42:	b083      	sub	sp, #12
 800be44:	af00      	add	r7, sp, #0
 800be46:	6078      	str	r0, [r7, #4]
 800be48:	460b      	mov	r3, r1
 800be4a:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800be4c:	887b      	ldrh	r3, [r7, #2]
 800be4e:	011b      	lsls	r3, r3, #4
 800be50:	3308      	adds	r3, #8
 800be52:	687a      	ldr	r2, [r7, #4]
 800be54:	4413      	add	r3, r2
    }
 800be56:	4618      	mov	r0, r3
 800be58:	370c      	adds	r7, #12
 800be5a:	46bd      	mov	sp, r7
 800be5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be60:	4770      	bx	lr

0800be62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800be62:	b480      	push	{r7}
 800be64:	b083      	sub	sp, #12
 800be66:	af00      	add	r7, sp, #0
 800be68:	6078      	str	r0, [r7, #4]
 800be6a:	460b      	mov	r3, r1
 800be6c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800be6e:	887b      	ldrh	r3, [r7, #2]
 800be70:	011b      	lsls	r3, r3, #4
 800be72:	3308      	adds	r3, #8
 800be74:	687a      	ldr	r2, [r7, #4]
 800be76:	4413      	add	r3, r2
    }
 800be78:	4618      	mov	r0, r3
 800be7a:	370c      	adds	r7, #12
 800be7c:	46bd      	mov	sp, r7
 800be7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be82:	4770      	bx	lr

0800be84 <_GLOBAL__sub_I_touchgfx_init>:
 800be84:	b580      	push	{r7, lr}
 800be86:	af00      	add	r7, sp, #0
 800be88:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800be8c:	2001      	movs	r0, #1
 800be8e:	f7ff ff01 	bl	800bc94 <_Z41__static_initialization_and_destruction_0ii>
 800be92:	bd80      	pop	{r7, pc}

0800be94 <_GLOBAL__sub_D_touchgfx_init>:
 800be94:	b580      	push	{r7, lr}
 800be96:	af00      	add	r7, sp, #0
 800be98:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800be9c:	2000      	movs	r0, #0
 800be9e:	f7ff fef9 	bl	800bc94 <_Z41__static_initialization_and_destruction_0ii>
 800bea2:	bd80      	pop	{r7, pc}

0800bea4 <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
 800bea4:	b580      	push	{r7, lr}
 800bea6:	b082      	sub	sp, #8
 800bea8:	af00      	add	r7, sp, #0
 800beaa:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
 800beac:	687b      	ldr	r3, [r7, #4]
 800beae:	681b      	ldr	r3, [r3, #0]
 800beb0:	3318      	adds	r3, #24
 800beb2:	681b      	ldr	r3, [r3, #0]
 800beb4:	6878      	ldr	r0, [r7, #4]
 800beb6:	4798      	blx	r3
    }
 800beb8:	bf00      	nop
 800beba:	3708      	adds	r7, #8
 800bebc:	46bd      	mov	sp, r7
 800bebe:	bd80      	pop	{r7, pc}

0800bec0 <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>:
    void lockDMAToFrontPorch(bool enableLock)
 800bec0:	b480      	push	{r7}
 800bec2:	b083      	sub	sp, #12
 800bec4:	af00      	add	r7, sp, #0
 800bec6:	6078      	str	r0, [r7, #4]
 800bec8:	460b      	mov	r3, r1
 800beca:	70fb      	strb	r3, [r7, #3]
        lockDMAToPorch = enableLock;
 800becc:	687b      	ldr	r3, [r7, #4]
 800bece:	78fa      	ldrb	r2, [r7, #3]
 800bed0:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
    }
 800bed4:	bf00      	nop
 800bed6:	370c      	adds	r7, #12
 800bed8:	46bd      	mov	sp, r7
 800beda:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bede:	4770      	bx	lr

0800bee0 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800bee0:	b480      	push	{r7}
 800bee2:	b083      	sub	sp, #12
 800bee4:	af00      	add	r7, sp, #0
 800bee6:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800bee8:	687b      	ldr	r3, [r7, #4]
 800beea:	f893 3066 	ldrb.w	r3, [r3, #102]	; 0x66
 800beee:	3301      	adds	r3, #1
 800bef0:	b2da      	uxtb	r2, r3
 800bef2:	687b      	ldr	r3, [r7, #4]
 800bef4:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
    }
 800bef8:	bf00      	nop
 800befa:	370c      	adds	r7, #12
 800befc:	46bd      	mov	sp, r7
 800befe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf02:	4770      	bx	lr

0800bf04 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800bf04:	b580      	push	{r7, lr}
 800bf06:	b082      	sub	sp, #8
 800bf08:	af00      	add	r7, sp, #0
 800bf0a:	6078      	str	r0, [r7, #4]
 800bf0c:	460b      	mov	r3, r1
 800bf0e:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800bf10:	78fb      	ldrb	r3, [r7, #3]
 800bf12:	2b00      	cmp	r3, #0
 800bf14:	d002      	beq.n	800bf1c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800bf16:	78fb      	ldrb	r3, [r7, #3]
 800bf18:	2b02      	cmp	r3, #2
 800bf1a:	d105      	bne.n	800bf28 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800bf1c:	687b      	ldr	r3, [r7, #4]
 800bf1e:	78fa      	ldrb	r2, [r7, #3]
 800bf20:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 800bf24:	2301      	movs	r3, #1
 800bf26:	e027      	b.n	800bf78 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        else if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800bf28:	78fb      	ldrb	r3, [r7, #3]
 800bf2a:	2b01      	cmp	r3, #1
 800bf2c:	d123      	bne.n	800bf76 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800bf2e:	687b      	ldr	r3, [r7, #4]
 800bf30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bf32:	2b00      	cmp	r3, #0
 800bf34:	d014      	beq.n	800bf60 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800bf36:	687b      	ldr	r3, [r7, #4]
 800bf38:	681b      	ldr	r3, [r3, #0]
 800bf3a:	3380      	adds	r3, #128	; 0x80
 800bf3c:	681b      	ldr	r3, [r3, #0]
 800bf3e:	6878      	ldr	r0, [r7, #4]
 800bf40:	4798      	blx	r3
 800bf42:	4603      	mov	r3, r0
 800bf44:	461a      	mov	r2, r3
 800bf46:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bf4a:	429a      	cmp	r2, r3
 800bf4c:	d008      	beq.n	800bf60 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800bf4e:	4b0c      	ldr	r3, [pc, #48]	; (800bf80 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800bf50:	781b      	ldrb	r3, [r3, #0]
 800bf52:	f083 0301 	eor.w	r3, r3, #1
 800bf56:	b2db      	uxtb	r3, r3
 800bf58:	2b00      	cmp	r3, #0
 800bf5a:	d001      	beq.n	800bf60 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800bf5c:	2301      	movs	r3, #1
 800bf5e:	e000      	b.n	800bf62 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800bf60:	2300      	movs	r3, #0
 800bf62:	2b00      	cmp	r3, #0
 800bf64:	d005      	beq.n	800bf72 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800bf66:	687b      	ldr	r3, [r7, #4]
 800bf68:	78fa      	ldrb	r2, [r7, #3]
 800bf6a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 800bf6e:	2301      	movs	r3, #1
 800bf70:	e002      	b.n	800bf78 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 800bf72:	2300      	movs	r3, #0
 800bf74:	e000      	b.n	800bf78 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 800bf76:	2300      	movs	r3, #0
    }
 800bf78:	4618      	mov	r0, r3
 800bf7a:	3708      	adds	r7, #8
 800bf7c:	46bd      	mov	sp, r7
 800bf7e:	bd80      	pop	{r7, pc}
 800bf80:	200268fe 	.word	0x200268fe

0800bf84 <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>:
    void registerTaskDelayFunction(void(*delayF)(uint16_t))
 800bf84:	b480      	push	{r7}
 800bf86:	b083      	sub	sp, #12
 800bf88:	af00      	add	r7, sp, #0
 800bf8a:	6078      	str	r0, [r7, #4]
 800bf8c:	6039      	str	r1, [r7, #0]
        taskDelayFunc = delayF;
 800bf8e:	687b      	ldr	r3, [r7, #4]
 800bf90:	683a      	ldr	r2, [r7, #0]
 800bf92:	639a      	str	r2, [r3, #56]	; 0x38
    }
 800bf94:	bf00      	nop
 800bf96:	370c      	adds	r7, #12
 800bf98:	46bd      	mov	sp, r7
 800bf9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf9e:	4770      	bx	lr

0800bfa0 <__NVIC_EnableIRQ>:
{
 800bfa0:	b480      	push	{r7}
 800bfa2:	b083      	sub	sp, #12
 800bfa4:	af00      	add	r7, sp, #0
 800bfa6:	4603      	mov	r3, r0
 800bfa8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800bfaa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800bfae:	2b00      	cmp	r3, #0
 800bfb0:	db0d      	blt.n	800bfce <__NVIC_EnableIRQ+0x2e>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800bfb2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800bfb6:	b2db      	uxtb	r3, r3
 800bfb8:	f003 021f 	and.w	r2, r3, #31
 800bfbc:	4907      	ldr	r1, [pc, #28]	; (800bfdc <__NVIC_EnableIRQ+0x3c>)
 800bfbe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800bfc2:	095b      	lsrs	r3, r3, #5
 800bfc4:	2001      	movs	r0, #1
 800bfc6:	fa00 f202 	lsl.w	r2, r0, r2
 800bfca:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800bfce:	bf00      	nop
 800bfd0:	370c      	adds	r7, #12
 800bfd2:	46bd      	mov	sp, r7
 800bfd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfd8:	4770      	bx	lr
 800bfda:	bf00      	nop
 800bfdc:	e000e100 	.word	0xe000e100

0800bfe0 <__NVIC_DisableIRQ>:
{
 800bfe0:	b480      	push	{r7}
 800bfe2:	b083      	sub	sp, #12
 800bfe4:	af00      	add	r7, sp, #0
 800bfe6:	4603      	mov	r3, r0
 800bfe8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800bfea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800bfee:	2b00      	cmp	r3, #0
 800bff0:	db12      	blt.n	800c018 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800bff2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800bff6:	b2db      	uxtb	r3, r3
 800bff8:	f003 021f 	and.w	r2, r3, #31
 800bffc:	4909      	ldr	r1, [pc, #36]	; (800c024 <__NVIC_DisableIRQ+0x44>)
 800bffe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c002:	095b      	lsrs	r3, r3, #5
 800c004:	2001      	movs	r0, #1
 800c006:	fa00 f202 	lsl.w	r2, r0, r2
 800c00a:	3320      	adds	r3, #32
 800c00c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800c010:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800c014:	f3bf 8f6f 	isb	sy
}
 800c018:	bf00      	nop
 800c01a:	370c      	adds	r7, #12
 800c01c:	46bd      	mov	sp, r7
 800c01e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c022:	4770      	bx	lr
 800c024:	e000e100 	.word	0xe000e100

0800c028 <__NVIC_SetPriority>:
{
 800c028:	b480      	push	{r7}
 800c02a:	b083      	sub	sp, #12
 800c02c:	af00      	add	r7, sp, #0
 800c02e:	4603      	mov	r3, r0
 800c030:	6039      	str	r1, [r7, #0]
 800c032:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800c034:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c038:	2b00      	cmp	r3, #0
 800c03a:	db0c      	blt.n	800c056 <__NVIC_SetPriority+0x2e>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c03c:	683b      	ldr	r3, [r7, #0]
 800c03e:	b2db      	uxtb	r3, r3
 800c040:	4a0e      	ldr	r2, [pc, #56]	; (800c07c <__NVIC_SetPriority+0x54>)
 800c042:	f997 1007 	ldrsb.w	r1, [r7, #7]
 800c046:	4608      	mov	r0, r1
 800c048:	011b      	lsls	r3, r3, #4
 800c04a:	b2d9      	uxtb	r1, r3
 800c04c:	1813      	adds	r3, r2, r0
 800c04e:	460a      	mov	r2, r1
 800c050:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 800c054:	e00c      	b.n	800c070 <__NVIC_SetPriority+0x48>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c056:	683b      	ldr	r3, [r7, #0]
 800c058:	b2da      	uxtb	r2, r3
 800c05a:	4909      	ldr	r1, [pc, #36]	; (800c080 <__NVIC_SetPriority+0x58>)
 800c05c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c060:	b2db      	uxtb	r3, r3
 800c062:	f003 030f 	and.w	r3, r3, #15
 800c066:	3b04      	subs	r3, #4
 800c068:	0112      	lsls	r2, r2, #4
 800c06a:	b2d2      	uxtb	r2, r2
 800c06c:	440b      	add	r3, r1
 800c06e:	761a      	strb	r2, [r3, #24]
}
 800c070:	bf00      	nop
 800c072:	370c      	adds	r7, #12
 800c074:	46bd      	mov	sp, r7
 800c076:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c07a:	4770      	bx	lr
 800c07c:	e000e100 	.word	0xe000e100
 800c080:	e000ed00 	.word	0xe000ed00

0800c084 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
    static uint16_t lcd_int_active_line;
    static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
 800c084:	b5b0      	push	{r4, r5, r7, lr}
 800c086:	b082      	sub	sp, #8
 800c088:	af00      	add	r7, sp, #0
 800c08a:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800c08c:	687b      	ldr	r3, [r7, #4]
 800c08e:	4618      	mov	r0, r3
 800c090:	f000 fe78 	bl	800cd84 <_ZN8touchgfx3HAL10initializeEv>

    registerEventListener(*(touchgfx::Application::getInstance()));
 800c094:	687d      	ldr	r5, [r7, #4]
 800c096:	687b      	ldr	r3, [r7, #4]
 800c098:	681b      	ldr	r3, [r3, #0]
 800c09a:	334c      	adds	r3, #76	; 0x4c
 800c09c:	681c      	ldr	r4, [r3, #0]
 800c09e:	f001 fea3 	bl	800dde8 <_ZN8touchgfx11Application11getInstanceEv>
 800c0a2:	4603      	mov	r3, r0
 800c0a4:	4619      	mov	r1, r3
 800c0a6:	4628      	mov	r0, r5
 800c0a8:	47a0      	blx	r4
    registerTaskDelayFunction(&OSWrappers::taskDelay);
 800c0aa:	687b      	ldr	r3, [r7, #4]
 800c0ac:	490d      	ldr	r1, [pc, #52]	; (800c0e4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x60>)
 800c0ae:	4618      	mov	r0, r3
 800c0b0:	f7ff ff68 	bl	800bf84 <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL);
 800c0b4:	687b      	ldr	r3, [r7, #4]
 800c0b6:	2101      	movs	r1, #1
 800c0b8:	4618      	mov	r0, r3
 800c0ba:	f7ff ff23 	bl	800bf04 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>

    setFrameBufferStartAddresses((void*)frameBuf, (void*)0, (void*)0);
 800c0be:	6878      	ldr	r0, [r7, #4]
 800c0c0:	687b      	ldr	r3, [r7, #4]
 800c0c2:	681b      	ldr	r3, [r3, #0]
 800c0c4:	3374      	adds	r3, #116	; 0x74
 800c0c6:	681c      	ldr	r4, [r3, #0]
 800c0c8:	2300      	movs	r3, #0
 800c0ca:	2200      	movs	r2, #0
 800c0cc:	4906      	ldr	r1, [pc, #24]	; (800c0e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x64>)
 800c0ce:	47a0      	blx	r4
     * Set whether the DMA transfers are locked to the TFT update cycle. If
     * locked, DMA transfer will not begin until the TFT controller has finished
     * updating the display. If not locked, DMA transfers will begin as soon as
     * possible. Default is true (DMA is locked with TFT).
     */
    lockDMAToFrontPorch(true);
 800c0d0:	687b      	ldr	r3, [r7, #4]
 800c0d2:	2101      	movs	r1, #1
 800c0d4:	4618      	mov	r0, r3
 800c0d6:	f7ff fef3 	bl	800bec0 <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>
}
 800c0da:	bf00      	nop
 800c0dc:	3708      	adds	r7, #8
 800c0de:	46bd      	mov	sp, r7
 800c0e0:	bdb0      	pop	{r4, r5, r7, pc}
 800c0e2:	bf00      	nop
 800c0e4:	0800ace1 	.word	0x0800ace1
 800c0e8:	200000f8 	.word	0x200000f8

0800c0ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800c0ec:	b580      	push	{r7, lr}
 800c0ee:	b082      	sub	sp, #8
 800c0f0:	af00      	add	r7, sp, #0
 800c0f2:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(DMA2D_IRQn, 9);
 800c0f4:	2109      	movs	r1, #9
 800c0f6:	205a      	movs	r0, #90	; 0x5a
 800c0f8:	f7ff ff96 	bl	800c028 <__NVIC_SetPriority>
    NVIC_SetPriority(LTDC_IRQn, 9);
 800c0fc:	2109      	movs	r1, #9
 800c0fe:	2058      	movs	r0, #88	; 0x58
 800c100:	f7ff ff92 	bl	800c028 <__NVIC_SetPriority>
}
 800c104:	bf00      	nop
 800c106:	3708      	adds	r7, #8
 800c108:	46bd      	mov	sp, r7
 800c10a:	bd80      	pop	{r7, pc}

0800c10c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800c10c:	b580      	push	{r7, lr}
 800c10e:	b082      	sub	sp, #8
 800c110:	af00      	add	r7, sp, #0
 800c112:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(DMA2D_IRQn);
 800c114:	205a      	movs	r0, #90	; 0x5a
 800c116:	f7ff ff43 	bl	800bfa0 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(LTDC_IRQn);
 800c11a:	2058      	movs	r0, #88	; 0x58
 800c11c:	f7ff ff40 	bl	800bfa0 <__NVIC_EnableIRQ>
}
 800c120:	bf00      	nop
 800c122:	3708      	adds	r7, #8
 800c124:	46bd      	mov	sp, r7
 800c126:	bd80      	pop	{r7, pc}

0800c128 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800c128:	b580      	push	{r7, lr}
 800c12a:	b082      	sub	sp, #8
 800c12c:	af00      	add	r7, sp, #0
 800c12e:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(DMA2D_IRQn);
 800c130:	205a      	movs	r0, #90	; 0x5a
 800c132:	f7ff ff55 	bl	800bfe0 <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(LTDC_IRQn);
 800c136:	2058      	movs	r0, #88	; 0x58
 800c138:	f7ff ff52 	bl	800bfe0 <__NVIC_DisableIRQ>
}
 800c13c:	bf00      	nop
 800c13e:	3708      	adds	r7, #8
 800c140:	46bd      	mov	sp, r7
 800c142:	bd80      	pop	{r7, pc}

0800c144 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800c144:	b480      	push	{r7}
 800c146:	b083      	sub	sp, #12
 800c148:	af00      	add	r7, sp, #0
 800c14a:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800c14c:	4b11      	ldr	r3, [pc, #68]	; (800c194 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800c14e:	68db      	ldr	r3, [r3, #12]
 800c150:	b29b      	uxth	r3, r3
 800c152:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800c156:	b29b      	uxth	r3, r3
 800c158:	3b01      	subs	r3, #1
 800c15a:	b29a      	uxth	r2, r3
 800c15c:	4b0e      	ldr	r3, [pc, #56]	; (800c198 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800c15e:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800c160:	4b0c      	ldr	r3, [pc, #48]	; (800c194 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800c162:	691b      	ldr	r3, [r3, #16]
 800c164:	b29b      	uxth	r3, r3
 800c166:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800c16a:	b29b      	uxth	r3, r3
 800c16c:	3b01      	subs	r3, #1
 800c16e:	b29a      	uxth	r2, r3
 800c170:	4b0a      	ldr	r3, [pc, #40]	; (800c19c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
 800c172:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800c174:	4b08      	ldr	r3, [pc, #32]	; (800c198 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800c176:	881a      	ldrh	r2, [r3, #0]
 800c178:	4b06      	ldr	r3, [pc, #24]	; (800c194 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800c17a:	641a      	str	r2, [r3, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800c17c:	4b05      	ldr	r3, [pc, #20]	; (800c194 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800c17e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c180:	4a04      	ldr	r2, [pc, #16]	; (800c194 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800c182:	f043 0301 	orr.w	r3, r3, #1
 800c186:	6353      	str	r3, [r2, #52]	; 0x34
}
 800c188:	bf00      	nop
 800c18a:	370c      	adds	r7, #12
 800c18c:	46bd      	mov	sp, r7
 800c18e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c192:	4770      	bx	lr
 800c194:	40016800 	.word	0x40016800
 800c198:	200268f0 	.word	0x200268f0
 800c19c:	200268f2 	.word	0x200268f2

0800c1a0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800c1a0:	b480      	push	{r7}
 800c1a2:	b083      	sub	sp, #12
 800c1a4:	af00      	add	r7, sp, #0
 800c1a6:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800c1a8:	4b03      	ldr	r3, [pc, #12]	; (800c1b8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
 800c1aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 800c1ac:	4618      	mov	r0, r3
 800c1ae:	370c      	adds	r7, #12
 800c1b0:	46bd      	mov	sp, r7
 800c1b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1b6:	4770      	bx	lr
 800c1b8:	40016884 	.word	0x40016884

0800c1bc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800c1bc:	b480      	push	{r7}
 800c1be:	b083      	sub	sp, #12
 800c1c0:	af00      	add	r7, sp, #0
 800c1c2:	6078      	str	r0, [r7, #4]
 800c1c4:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800c1c6:	4a06      	ldr	r2, [pc, #24]	; (800c1e0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
 800c1c8:	683b      	ldr	r3, [r7, #0]
 800c1ca:	6293      	str	r3, [r2, #40]	; 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800c1cc:	4b05      	ldr	r3, [pc, #20]	; (800c1e4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
 800c1ce:	2201      	movs	r2, #1
 800c1d0:	625a      	str	r2, [r3, #36]	; 0x24
}
 800c1d2:	bf00      	nop
 800c1d4:	370c      	adds	r7, #12
 800c1d6:	46bd      	mov	sp, r7
 800c1d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1dc:	4770      	bx	lr
 800c1de:	bf00      	nop
 800c1e0:	40016884 	.word	0x40016884
 800c1e4:	40016800 	.word	0x40016800

0800c1e8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800c1e8:	b580      	push	{r7, lr}
 800c1ea:	b082      	sub	sp, #8
 800c1ec:	af00      	add	r7, sp, #0
 800c1ee:	6078      	str	r0, [r7, #4]
 800c1f0:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800c1f2:	687b      	ldr	r3, [r7, #4]
 800c1f4:	6839      	ldr	r1, [r7, #0]
 800c1f6:	4618      	mov	r0, r3
 800c1f8:	f000 fad4 	bl	800c7a4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 800c1fc:	bf00      	nop
 800c1fe:	3708      	adds	r7, #8
 800c200:	46bd      	mov	sp, r7
 800c202:	bd80      	pop	{r7, pc}

0800c204 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv>:

uint16_t TouchGFXGeneratedHAL::getTFTCurrentLine()
{
 800c204:	b480      	push	{r7}
 800c206:	b085      	sub	sp, #20
 800c208:	af00      	add	r7, sp, #0
 800c20a:	6078      	str	r0, [r7, #4]
    // This function only requires an implementation if single buffering
    // on LTDC display is being used (REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL).

    // The CPSR register (bits 15:0) specify current line of TFT controller.
    uint16_t curr = (uint16_t)(LTDC->CPSR & 0xffff);
 800c20c:	4b0d      	ldr	r3, [pc, #52]	; (800c244 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800c20e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c210:	81fb      	strh	r3, [r7, #14]
    uint16_t backPorchY = (uint16_t)(LTDC->BPCR & 0x7FF) + 1;
 800c212:	4b0c      	ldr	r3, [pc, #48]	; (800c244 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800c214:	68db      	ldr	r3, [r3, #12]
 800c216:	b29b      	uxth	r3, r3
 800c218:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800c21c:	b29b      	uxth	r3, r3
 800c21e:	3301      	adds	r3, #1
 800c220:	81bb      	strh	r3, [r7, #12]

    // The semantics of the getTFTCurrentLine() function is to return a value
    // in the range of 0-totalheight. If we are still in back porch area, return 0.
    if (curr < backPorchY)
 800c222:	89fa      	ldrh	r2, [r7, #14]
 800c224:	89bb      	ldrh	r3, [r7, #12]
 800c226:	429a      	cmp	r2, r3
 800c228:	d201      	bcs.n	800c22e <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x2a>
    {
        return 0;
 800c22a:	2300      	movs	r3, #0
 800c22c:	e003      	b.n	800c236 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x32>
    }
    else
    {
        return curr - backPorchY;
 800c22e:	89fa      	ldrh	r2, [r7, #14]
 800c230:	89bb      	ldrh	r3, [r7, #12]
 800c232:	1ad3      	subs	r3, r2, r3
 800c234:	b29b      	uxth	r3, r3
    }
}
 800c236:	4618      	mov	r0, r3
 800c238:	3714      	adds	r7, #20
 800c23a:	46bd      	mov	sp, r7
 800c23c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c240:	4770      	bx	lr
 800c242:	bf00      	nop
 800c244:	40016800 	.word	0x40016800

0800c248 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef *hltdc)
    {
 800c248:	b580      	push	{r7, lr}
 800c24a:	b082      	sub	sp, #8
 800c24c:	af00      	add	r7, sp, #0
 800c24e:	6078      	str	r0, [r7, #4]
        if (LTDC->LIPCR == lcd_int_active_line)
 800c250:	4b1a      	ldr	r3, [pc, #104]	; (800c2bc <HAL_LTDC_LineEventCallback+0x74>)
 800c252:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c254:	4a1a      	ldr	r2, [pc, #104]	; (800c2c0 <HAL_LTDC_LineEventCallback+0x78>)
 800c256:	8812      	ldrh	r2, [r2, #0]
 800c258:	4293      	cmp	r3, r2
 800c25a:	bf0c      	ite	eq
 800c25c:	2301      	moveq	r3, #1
 800c25e:	2300      	movne	r3, #0
 800c260:	b2db      	uxtb	r3, r3
 800c262:	2b00      	cmp	r3, #0
 800c264:	d017      	beq.n	800c296 <HAL_LTDC_LineEventCallback+0x4e>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800c266:	4b17      	ldr	r3, [pc, #92]	; (800c2c4 <HAL_LTDC_LineEventCallback+0x7c>)
 800c268:	881b      	ldrh	r3, [r3, #0]
 800c26a:	4619      	mov	r1, r3
 800c26c:	6878      	ldr	r0, [r7, #4]
 800c26e:	f7f9 f9ab 	bl	80055c8 <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
 800c272:	f7fc ff93 	bl	800919c <_ZN8touchgfx3HAL11getInstanceEv>
 800c276:	4603      	mov	r3, r0
 800c278:	4618      	mov	r0, r3
 800c27a:	f7ff fe31 	bl	800bee0 <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
 800c27e:	f7fe fd09 	bl	800ac94 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800c282:	f7fc ff8b 	bl	800919c <_ZN8touchgfx3HAL11getInstanceEv>
 800c286:	4603      	mov	r3, r0
 800c288:	4618      	mov	r0, r3
 800c28a:	f001 f803 	bl	800d294 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 800c28e:	2000      	movs	r0, #0
 800c290:	f7fe fa2a 	bl	800a6e8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 800c294:	e00e      	b.n	800c2b4 <HAL_LTDC_LineEventCallback+0x6c>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800c296:	4b0a      	ldr	r3, [pc, #40]	; (800c2c0 <HAL_LTDC_LineEventCallback+0x78>)
 800c298:	881b      	ldrh	r3, [r3, #0]
 800c29a:	4619      	mov	r1, r3
 800c29c:	6878      	ldr	r0, [r7, #4]
 800c29e:	f7f9 f993 	bl	80055c8 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 800c2a2:	2000      	movs	r0, #0
 800c2a4:	f7fe fa2b 	bl	800a6fe <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL::getInstance()->frontPorchEntered();
 800c2a8:	f7fc ff78 	bl	800919c <_ZN8touchgfx3HAL11getInstanceEv>
 800c2ac:	4603      	mov	r3, r0
 800c2ae:	4618      	mov	r0, r3
 800c2b0:	f7ff fdf8 	bl	800bea4 <_ZN8touchgfx3HAL17frontPorchEnteredEv>
    }
 800c2b4:	bf00      	nop
 800c2b6:	3708      	adds	r7, #8
 800c2b8:	46bd      	mov	sp, r7
 800c2ba:	bd80      	pop	{r7, pc}
 800c2bc:	40016800 	.word	0x40016800
 800c2c0:	200268f0 	.word	0x200268f0
 800c2c4:	200268f2 	.word	0x200268f2

0800c2c8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800c2c8:	8880      	ldrh	r0, [r0, #4]
 800c2ca:	4770      	bx	lr

0800c2cc <_ZN8touchgfx17AbstractPartition5clearEv>:
 800c2cc:	2300      	movs	r3, #0
 800c2ce:	8083      	strh	r3, [r0, #4]
 800c2d0:	4770      	bx	lr
	...

0800c2d4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800c2d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c2d6:	6803      	ldr	r3, [r0, #0]
 800c2d8:	4605      	mov	r5, r0
 800c2da:	460e      	mov	r6, r1
 800c2dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c2de:	2100      	movs	r1, #0
 800c2e0:	4798      	blx	r3
 800c2e2:	682b      	ldr	r3, [r5, #0]
 800c2e4:	4604      	mov	r4, r0
 800c2e6:	6a1b      	ldr	r3, [r3, #32]
 800c2e8:	4628      	mov	r0, r5
 800c2ea:	4798      	blx	r3
 800c2ec:	88ab      	ldrh	r3, [r5, #4]
 800c2ee:	1b34      	subs	r4, r6, r4
 800c2f0:	b2a4      	uxth	r4, r4
 800c2f2:	fbb4 f4f0 	udiv	r4, r4, r0
 800c2f6:	42a3      	cmp	r3, r4
 800c2f8:	d805      	bhi.n	800c306 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800c2fa:	4b0e      	ldr	r3, [pc, #56]	; (800c334 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800c2fc:	4a0e      	ldr	r2, [pc, #56]	; (800c338 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800c2fe:	211e      	movs	r1, #30
 800c300:	480e      	ldr	r0, [pc, #56]	; (800c33c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800c302:	f00e ffb5 	bl	801b270 <__assert_func>
 800c306:	682b      	ldr	r3, [r5, #0]
 800c308:	2100      	movs	r1, #0
 800c30a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c30c:	4628      	mov	r0, r5
 800c30e:	4798      	blx	r3
 800c310:	682b      	ldr	r3, [r5, #0]
 800c312:	4607      	mov	r7, r0
 800c314:	6a1b      	ldr	r3, [r3, #32]
 800c316:	4628      	mov	r0, r5
 800c318:	4798      	blx	r3
 800c31a:	1bf3      	subs	r3, r6, r7
 800c31c:	b29b      	uxth	r3, r3
 800c31e:	fbb3 f2f0 	udiv	r2, r3, r0
 800c322:	fb02 3010 	mls	r0, r2, r0, r3
 800c326:	b118      	cbz	r0, 800c330 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800c328:	4b05      	ldr	r3, [pc, #20]	; (800c340 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800c32a:	4a03      	ldr	r2, [pc, #12]	; (800c338 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800c32c:	211f      	movs	r1, #31
 800c32e:	e7e7      	b.n	800c300 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800c330:	4620      	mov	r0, r4
 800c332:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c334:	0801d2bc 	.word	0x0801d2bc
 800c338:	0801d42a 	.word	0x0801d42a
 800c33c:	0801d2d1 	.word	0x0801d2d1
 800c340:	0801d2ff 	.word	0x0801d2ff

0800c344 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800c344:	b538      	push	{r3, r4, r5, lr}
 800c346:	6803      	ldr	r3, [r0, #0]
 800c348:	6a1b      	ldr	r3, [r3, #32]
 800c34a:	460d      	mov	r5, r1
 800c34c:	4604      	mov	r4, r0
 800c34e:	4798      	blx	r3
 800c350:	4285      	cmp	r5, r0
 800c352:	d905      	bls.n	800c360 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800c354:	4b0c      	ldr	r3, [pc, #48]	; (800c388 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800c356:	4a0d      	ldr	r2, [pc, #52]	; (800c38c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800c358:	212f      	movs	r1, #47	; 0x2f
 800c35a:	480d      	ldr	r0, [pc, #52]	; (800c390 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800c35c:	f00e ff88 	bl	801b270 <__assert_func>
 800c360:	6823      	ldr	r3, [r4, #0]
 800c362:	88a5      	ldrh	r5, [r4, #4]
 800c364:	69db      	ldr	r3, [r3, #28]
 800c366:	4620      	mov	r0, r4
 800c368:	4798      	blx	r3
 800c36a:	4285      	cmp	r5, r0
 800c36c:	d303      	bcc.n	800c376 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800c36e:	4b09      	ldr	r3, [pc, #36]	; (800c394 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800c370:	4a06      	ldr	r2, [pc, #24]	; (800c38c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800c372:	2130      	movs	r1, #48	; 0x30
 800c374:	e7f1      	b.n	800c35a <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800c376:	6823      	ldr	r3, [r4, #0]
 800c378:	88a1      	ldrh	r1, [r4, #4]
 800c37a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c37c:	4620      	mov	r0, r4
 800c37e:	4798      	blx	r3
 800c380:	88a3      	ldrh	r3, [r4, #4]
 800c382:	3301      	adds	r3, #1
 800c384:	80a3      	strh	r3, [r4, #4]
 800c386:	bd38      	pop	{r3, r4, r5, pc}
 800c388:	0801d379 	.word	0x0801d379
 800c38c:	0801d46d 	.word	0x0801d46d
 800c390:	0801d2d1 	.word	0x0801d2d1
 800c394:	0801d390 	.word	0x0801d390

0800c398 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800c398:	b570      	push	{r4, r5, r6, lr}
 800c39a:	6803      	ldr	r3, [r0, #0]
 800c39c:	6a1b      	ldr	r3, [r3, #32]
 800c39e:	4616      	mov	r6, r2
 800c3a0:	4604      	mov	r4, r0
 800c3a2:	460d      	mov	r5, r1
 800c3a4:	4798      	blx	r3
 800c3a6:	4286      	cmp	r6, r0
 800c3a8:	d905      	bls.n	800c3b6 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800c3aa:	4b06      	ldr	r3, [pc, #24]	; (800c3c4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800c3ac:	4a06      	ldr	r2, [pc, #24]	; (800c3c8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800c3ae:	4807      	ldr	r0, [pc, #28]	; (800c3cc <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800c3b0:	2139      	movs	r1, #57	; 0x39
 800c3b2:	f00e ff5d 	bl	801b270 <__assert_func>
 800c3b6:	6823      	ldr	r3, [r4, #0]
 800c3b8:	4629      	mov	r1, r5
 800c3ba:	4620      	mov	r0, r4
 800c3bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c3be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c3c2:	4718      	bx	r3
 800c3c4:	0801d379 	.word	0x0801d379
 800c3c8:	0801d3e0 	.word	0x0801d3e0
 800c3cc:	0801d2d1 	.word	0x0801d2d1

0800c3d0 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800c3d0:	4770      	bx	lr
	...

0800c3d4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800c3d4:	4a02      	ldr	r2, [pc, #8]	; (800c3e0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800c3d6:	6002      	str	r2, [r0, #0]
 800c3d8:	2200      	movs	r2, #0
 800c3da:	8082      	strh	r2, [r0, #4]
 800c3dc:	4770      	bx	lr
 800c3de:	bf00      	nop
 800c3e0:	0801d3b4 	.word	0x0801d3b4

0800c3e4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800c3e4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c3e6:	2000      	movs	r0, #0
 800c3e8:	b12b      	cbz	r3, 800c3f6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800c3ea:	b920      	cbnz	r0, 800c3f6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800c3ec:	1a5a      	subs	r2, r3, r1
 800c3ee:	4250      	negs	r0, r2
 800c3f0:	4150      	adcs	r0, r2
 800c3f2:	699b      	ldr	r3, [r3, #24]
 800c3f4:	e7f8      	b.n	800c3e8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800c3f6:	4770      	bx	lr

0800c3f8 <_ZN8touchgfx9Container9removeAllEv>:
 800c3f8:	2200      	movs	r2, #0
 800c3fa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c3fc:	b123      	cbz	r3, 800c408 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800c3fe:	6999      	ldr	r1, [r3, #24]
 800c400:	6281      	str	r1, [r0, #40]	; 0x28
 800c402:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800c406:	e7f8      	b.n	800c3fa <_ZN8touchgfx9Container9removeAllEv+0x2>
 800c408:	4770      	bx	lr

0800c40a <_ZN8touchgfx9Container6unlinkEv>:
 800c40a:	2300      	movs	r3, #0
 800c40c:	6283      	str	r3, [r0, #40]	; 0x28
 800c40e:	4770      	bx	lr

0800c410 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800c410:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c414:	461f      	mov	r7, r3
 800c416:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800c41a:	460d      	mov	r5, r1
 800c41c:	4616      	mov	r6, r2
 800c41e:	b103      	cbz	r3, 800c422 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800c420:	6038      	str	r0, [r7, #0]
 800c422:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c424:	b314      	cbz	r4, 800c46c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800c426:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c42a:	b1eb      	cbz	r3, 800c468 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c42c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800c430:	428d      	cmp	r5, r1
 800c432:	db19      	blt.n	800c468 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c434:	8923      	ldrh	r3, [r4, #8]
 800c436:	b289      	uxth	r1, r1
 800c438:	440b      	add	r3, r1
 800c43a:	b21b      	sxth	r3, r3
 800c43c:	429d      	cmp	r5, r3
 800c43e:	da13      	bge.n	800c468 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c440:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800c444:	4296      	cmp	r6, r2
 800c446:	db0f      	blt.n	800c468 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c448:	8963      	ldrh	r3, [r4, #10]
 800c44a:	b292      	uxth	r2, r2
 800c44c:	4413      	add	r3, r2
 800c44e:	b21b      	sxth	r3, r3
 800c450:	429e      	cmp	r6, r3
 800c452:	da09      	bge.n	800c468 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c454:	6823      	ldr	r3, [r4, #0]
 800c456:	1ab2      	subs	r2, r6, r2
 800c458:	1a69      	subs	r1, r5, r1
 800c45a:	f8d3 801c 	ldr.w	r8, [r3, #28]
 800c45e:	b212      	sxth	r2, r2
 800c460:	463b      	mov	r3, r7
 800c462:	b209      	sxth	r1, r1
 800c464:	4620      	mov	r0, r4
 800c466:	47c0      	blx	r8
 800c468:	69a4      	ldr	r4, [r4, #24]
 800c46a:	e7db      	b.n	800c424 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800c46c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c470 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800c470:	2200      	movs	r2, #0
 800c472:	8002      	strh	r2, [r0, #0]
 800c474:	8042      	strh	r2, [r0, #2]
 800c476:	8082      	strh	r2, [r0, #4]
 800c478:	80c2      	strh	r2, [r0, #6]
 800c47a:	4770      	bx	lr

0800c47c <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800c47c:	b570      	push	{r4, r5, r6, lr}
 800c47e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c480:	460d      	mov	r5, r1
 800c482:	4616      	mov	r6, r2
 800c484:	b13c      	cbz	r4, 800c496 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800c486:	6823      	ldr	r3, [r4, #0]
 800c488:	4620      	mov	r0, r4
 800c48a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c48c:	4632      	mov	r2, r6
 800c48e:	4629      	mov	r1, r5
 800c490:	4798      	blx	r3
 800c492:	69a4      	ldr	r4, [r4, #24]
 800c494:	e7f6      	b.n	800c484 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800c496:	bd70      	pop	{r4, r5, r6, pc}

0800c498 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800c498:	b538      	push	{r3, r4, r5, lr}
 800c49a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c49c:	460d      	mov	r5, r1
 800c49e:	b134      	cbz	r4, 800c4ae <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800c4a0:	682b      	ldr	r3, [r5, #0]
 800c4a2:	4621      	mov	r1, r4
 800c4a4:	689b      	ldr	r3, [r3, #8]
 800c4a6:	4628      	mov	r0, r5
 800c4a8:	4798      	blx	r3
 800c4aa:	69a4      	ldr	r4, [r4, #24]
 800c4ac:	e7f7      	b.n	800c49e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800c4ae:	bd38      	pop	{r3, r4, r5, pc}

0800c4b0 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800c4b0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c4b2:	b19b      	cbz	r3, 800c4dc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800c4b4:	428b      	cmp	r3, r1
 800c4b6:	d109      	bne.n	800c4cc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800c4b8:	699a      	ldr	r2, [r3, #24]
 800c4ba:	2100      	movs	r1, #0
 800c4bc:	6159      	str	r1, [r3, #20]
 800c4be:	6282      	str	r2, [r0, #40]	; 0x28
 800c4c0:	b902      	cbnz	r2, 800c4c4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800c4c2:	4770      	bx	lr
 800c4c4:	6199      	str	r1, [r3, #24]
 800c4c6:	4770      	bx	lr
 800c4c8:	4613      	mov	r3, r2
 800c4ca:	b13a      	cbz	r2, 800c4dc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800c4cc:	699a      	ldr	r2, [r3, #24]
 800c4ce:	428a      	cmp	r2, r1
 800c4d0:	d1fa      	bne.n	800c4c8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800c4d2:	698a      	ldr	r2, [r1, #24]
 800c4d4:	619a      	str	r2, [r3, #24]
 800c4d6:	2300      	movs	r3, #0
 800c4d8:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800c4dc:	4770      	bx	lr

0800c4de <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800c4de:	b410      	push	{r4}
 800c4e0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c4e2:	4604      	mov	r4, r0
 800c4e4:	b92b      	cbnz	r3, 800c4f2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800c4e6:	6803      	ldr	r3, [r0, #0]
 800c4e8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c4ec:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c4ee:	4611      	mov	r1, r2
 800c4f0:	4718      	bx	r3
 800c4f2:	b941      	cbnz	r1, 800c506 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800c4f4:	6193      	str	r3, [r2, #24]
 800c4f6:	6282      	str	r2, [r0, #40]	; 0x28
 800c4f8:	6154      	str	r4, [r2, #20]
 800c4fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c4fe:	4770      	bx	lr
 800c500:	4603      	mov	r3, r0
 800c502:	2800      	cmp	r0, #0
 800c504:	d0f9      	beq.n	800c4fa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800c506:	4299      	cmp	r1, r3
 800c508:	6998      	ldr	r0, [r3, #24]
 800c50a:	d1f9      	bne.n	800c500 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800c50c:	6190      	str	r0, [r2, #24]
 800c50e:	618a      	str	r2, [r1, #24]
 800c510:	e7f2      	b.n	800c4f8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800c514 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800c514:	4288      	cmp	r0, r1
 800c516:	b508      	push	{r3, lr}
 800c518:	d105      	bne.n	800c526 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800c51a:	4b11      	ldr	r3, [pc, #68]	; (800c560 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800c51c:	4a11      	ldr	r2, [pc, #68]	; (800c564 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c51e:	2123      	movs	r1, #35	; 0x23
 800c520:	4811      	ldr	r0, [pc, #68]	; (800c568 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800c522:	f00e fea5 	bl	801b270 <__assert_func>
 800c526:	694b      	ldr	r3, [r1, #20]
 800c528:	b11b      	cbz	r3, 800c532 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800c52a:	4b10      	ldr	r3, [pc, #64]	; (800c56c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800c52c:	4a0d      	ldr	r2, [pc, #52]	; (800c564 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c52e:	2124      	movs	r1, #36	; 0x24
 800c530:	e7f6      	b.n	800c520 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800c532:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800c536:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c538:	b913      	cbnz	r3, 800c540 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800c53a:	6281      	str	r1, [r0, #40]	; 0x28
 800c53c:	bd08      	pop	{r3, pc}
 800c53e:	4613      	mov	r3, r2
 800c540:	699a      	ldr	r2, [r3, #24]
 800c542:	b12a      	cbz	r2, 800c550 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800c544:	428b      	cmp	r3, r1
 800c546:	d1fa      	bne.n	800c53e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800c548:	4b09      	ldr	r3, [pc, #36]	; (800c570 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800c54a:	4a06      	ldr	r2, [pc, #24]	; (800c564 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c54c:	2135      	movs	r1, #53	; 0x35
 800c54e:	e7e7      	b.n	800c520 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800c550:	428b      	cmp	r3, r1
 800c552:	d103      	bne.n	800c55c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800c554:	4b06      	ldr	r3, [pc, #24]	; (800c570 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800c556:	4a03      	ldr	r2, [pc, #12]	; (800c564 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c558:	2138      	movs	r1, #56	; 0x38
 800c55a:	e7e1      	b.n	800c520 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800c55c:	6199      	str	r1, [r3, #24]
 800c55e:	e7ed      	b.n	800c53c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800c560:	0801d4ab 	.word	0x0801d4ab
 800c564:	0801d600 	.word	0x0801d600
 800c568:	0801d4d7 	.word	0x0801d4d7
 800c56c:	0801d50a 	.word	0x0801d50a
 800c570:	0801d540 	.word	0x0801d540

0800c574 <_ZN8touchgfx4RectaNERKS0_>:
 800c574:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c578:	888b      	ldrh	r3, [r1, #4]
 800c57a:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c57e:	f9b0 a000 	ldrsh.w	sl, [r0]
 800c582:	444b      	add	r3, r9
 800c584:	b29b      	uxth	r3, r3
 800c586:	fa0f f883 	sxth.w	r8, r3
 800c58a:	45c2      	cmp	sl, r8
 800c58c:	da30      	bge.n	800c5f0 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800c58e:	8882      	ldrh	r2, [r0, #4]
 800c590:	4452      	add	r2, sl
 800c592:	b292      	uxth	r2, r2
 800c594:	fa0f fe82 	sxth.w	lr, r2
 800c598:	45f1      	cmp	r9, lr
 800c59a:	da29      	bge.n	800c5f0 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800c59c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800c5a0:	88cc      	ldrh	r4, [r1, #6]
 800c5a2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800c5a6:	442c      	add	r4, r5
 800c5a8:	b224      	sxth	r4, r4
 800c5aa:	42a6      	cmp	r6, r4
 800c5ac:	da20      	bge.n	800c5f0 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800c5ae:	88c7      	ldrh	r7, [r0, #6]
 800c5b0:	4437      	add	r7, r6
 800c5b2:	b2bf      	uxth	r7, r7
 800c5b4:	fa0f fc87 	sxth.w	ip, r7
 800c5b8:	4565      	cmp	r5, ip
 800c5ba:	da19      	bge.n	800c5f0 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800c5bc:	45ca      	cmp	sl, r9
 800c5be:	4654      	mov	r4, sl
 800c5c0:	bfb8      	it	lt
 800c5c2:	464c      	movlt	r4, r9
 800c5c4:	42b5      	cmp	r5, r6
 800c5c6:	bfb8      	it	lt
 800c5c8:	4635      	movlt	r5, r6
 800c5ca:	45f0      	cmp	r8, lr
 800c5cc:	bfc8      	it	gt
 800c5ce:	4613      	movgt	r3, r2
 800c5d0:	1b1b      	subs	r3, r3, r4
 800c5d2:	8083      	strh	r3, [r0, #4]
 800c5d4:	88ca      	ldrh	r2, [r1, #6]
 800c5d6:	884b      	ldrh	r3, [r1, #2]
 800c5d8:	8004      	strh	r4, [r0, #0]
 800c5da:	4413      	add	r3, r2
 800c5dc:	b29b      	uxth	r3, r3
 800c5de:	b21a      	sxth	r2, r3
 800c5e0:	4594      	cmp	ip, r2
 800c5e2:	bfb8      	it	lt
 800c5e4:	463b      	movlt	r3, r7
 800c5e6:	1b5b      	subs	r3, r3, r5
 800c5e8:	80c3      	strh	r3, [r0, #6]
 800c5ea:	8045      	strh	r5, [r0, #2]
 800c5ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c5f0:	2300      	movs	r3, #0
 800c5f2:	8003      	strh	r3, [r0, #0]
 800c5f4:	8043      	strh	r3, [r0, #2]
 800c5f6:	8083      	strh	r3, [r0, #4]
 800c5f8:	80c3      	strh	r3, [r0, #6]
 800c5fa:	e7f7      	b.n	800c5ec <_ZN8touchgfx4RectaNERKS0_+0x78>

0800c5fc <_ZNK8touchgfx4Rect7isEmptyEv>:
 800c5fc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c600:	b12b      	cbz	r3, 800c60e <_ZNK8touchgfx4Rect7isEmptyEv+0x12>
 800c602:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800c606:	fab0 f080 	clz	r0, r0
 800c60a:	0940      	lsrs	r0, r0, #5
 800c60c:	4770      	bx	lr
 800c60e:	2001      	movs	r0, #1
 800c610:	4770      	bx	lr

0800c612 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800c612:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c616:	2300      	movs	r3, #0
 800c618:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800c61a:	8003      	strh	r3, [r0, #0]
 800c61c:	4604      	mov	r4, r0
 800c61e:	8043      	strh	r3, [r0, #2]
 800c620:	8083      	strh	r3, [r0, #4]
 800c622:	80c3      	strh	r3, [r0, #6]
 800c624:	2d00      	cmp	r5, #0
 800c626:	d040      	beq.n	800c6aa <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800c628:	1d28      	adds	r0, r5, #4
 800c62a:	f7ff ffe7 	bl	800c5fc <_ZNK8touchgfx4Rect7isEmptyEv>
 800c62e:	b988      	cbnz	r0, 800c654 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c630:	4620      	mov	r0, r4
 800c632:	f7ff ffe3 	bl	800c5fc <_ZNK8touchgfx4Rect7isEmptyEv>
 800c636:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800c63a:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c63e:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800c642:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800c646:	b138      	cbz	r0, 800c658 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800c648:	8022      	strh	r2, [r4, #0]
 800c64a:	8063      	strh	r3, [r4, #2]
 800c64c:	f8a4 e004 	strh.w	lr, [r4, #4]
 800c650:	f8a4 c006 	strh.w	ip, [r4, #6]
 800c654:	69ad      	ldr	r5, [r5, #24]
 800c656:	e7e5      	b.n	800c624 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800c658:	f9b4 0000 	ldrsh.w	r0, [r4]
 800c65c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800c660:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800c664:	4290      	cmp	r0, r2
 800c666:	4607      	mov	r7, r0
 800c668:	bfa8      	it	ge
 800c66a:	4617      	movge	r7, r2
 800c66c:	4472      	add	r2, lr
 800c66e:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800c672:	8027      	strh	r7, [r4, #0]
 800c674:	4299      	cmp	r1, r3
 800c676:	460e      	mov	r6, r1
 800c678:	4440      	add	r0, r8
 800c67a:	bfa8      	it	ge
 800c67c:	461e      	movge	r6, r3
 800c67e:	4471      	add	r1, lr
 800c680:	4463      	add	r3, ip
 800c682:	b200      	sxth	r0, r0
 800c684:	b212      	sxth	r2, r2
 800c686:	b209      	sxth	r1, r1
 800c688:	b21b      	sxth	r3, r3
 800c68a:	4290      	cmp	r0, r2
 800c68c:	bfac      	ite	ge
 800c68e:	ebc7 0200 	rsbge	r2, r7, r0
 800c692:	ebc7 0202 	rsblt	r2, r7, r2
 800c696:	4299      	cmp	r1, r3
 800c698:	bfac      	ite	ge
 800c69a:	ebc6 0301 	rsbge	r3, r6, r1
 800c69e:	ebc6 0303 	rsblt	r3, r6, r3
 800c6a2:	8066      	strh	r6, [r4, #2]
 800c6a4:	80a2      	strh	r2, [r4, #4]
 800c6a6:	80e3      	strh	r3, [r4, #6]
 800c6a8:	e7d4      	b.n	800c654 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c6aa:	4620      	mov	r0, r4
 800c6ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c6b0 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800c6b0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c6b4:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c6b8:	b383      	cbz	r3, 800c71c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c6ba:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c6bc:	b374      	cbz	r4, 800c71c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c6be:	f9b1 5000 	ldrsh.w	r5, [r1]
 800c6c2:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800c6c6:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800c6ca:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800c6ce:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c6d2:	b303      	cbz	r3, 800c716 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c6d4:	4668      	mov	r0, sp
 800c6d6:	1d21      	adds	r1, r4, #4
 800c6d8:	f8ad 5000 	strh.w	r5, [sp]
 800c6dc:	f8ad 6002 	strh.w	r6, [sp, #2]
 800c6e0:	f8ad 7004 	strh.w	r7, [sp, #4]
 800c6e4:	f8ad 8006 	strh.w	r8, [sp, #6]
 800c6e8:	f7ff ff44 	bl	800c574 <_ZN8touchgfx4RectaNERKS0_>
 800c6ec:	4668      	mov	r0, sp
 800c6ee:	f7ff ff85 	bl	800c5fc <_ZNK8touchgfx4Rect7isEmptyEv>
 800c6f2:	b980      	cbnz	r0, 800c716 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c6f4:	f8bd 3000 	ldrh.w	r3, [sp]
 800c6f8:	88a2      	ldrh	r2, [r4, #4]
 800c6fa:	1a9b      	subs	r3, r3, r2
 800c6fc:	f8ad 3000 	strh.w	r3, [sp]
 800c700:	88e2      	ldrh	r2, [r4, #6]
 800c702:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c706:	1a9b      	subs	r3, r3, r2
 800c708:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c70c:	6823      	ldr	r3, [r4, #0]
 800c70e:	4669      	mov	r1, sp
 800c710:	689b      	ldr	r3, [r3, #8]
 800c712:	4620      	mov	r0, r4
 800c714:	4798      	blx	r3
 800c716:	69a4      	ldr	r4, [r4, #24]
 800c718:	2c00      	cmp	r4, #0
 800c71a:	d1d8      	bne.n	800c6ce <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800c71c:	b002      	add	sp, #8
 800c71e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c722 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800c722:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c724:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c728:	460d      	mov	r5, r1
 800c72a:	4616      	mov	r6, r2
 800c72c:	b323      	cbz	r3, 800c778 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c72e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c730:	b314      	cbz	r4, 800c778 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c732:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c736:	b1eb      	cbz	r3, 800c774 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c738:	6828      	ldr	r0, [r5, #0]
 800c73a:	6869      	ldr	r1, [r5, #4]
 800c73c:	466b      	mov	r3, sp
 800c73e:	c303      	stmia	r3!, {r0, r1}
 800c740:	4668      	mov	r0, sp
 800c742:	1d21      	adds	r1, r4, #4
 800c744:	f7ff ff16 	bl	800c574 <_ZN8touchgfx4RectaNERKS0_>
 800c748:	4668      	mov	r0, sp
 800c74a:	f7ff ff57 	bl	800c5fc <_ZNK8touchgfx4Rect7isEmptyEv>
 800c74e:	b988      	cbnz	r0, 800c774 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c750:	f8bd 3000 	ldrh.w	r3, [sp]
 800c754:	88a2      	ldrh	r2, [r4, #4]
 800c756:	1a9b      	subs	r3, r3, r2
 800c758:	f8ad 3000 	strh.w	r3, [sp]
 800c75c:	88e2      	ldrh	r2, [r4, #6]
 800c75e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c762:	1a9b      	subs	r3, r3, r2
 800c764:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c768:	6823      	ldr	r3, [r4, #0]
 800c76a:	4632      	mov	r2, r6
 800c76c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800c76e:	4669      	mov	r1, sp
 800c770:	4620      	mov	r0, r4
 800c772:	4798      	blx	r3
 800c774:	69a4      	ldr	r4, [r4, #24]
 800c776:	e7db      	b.n	800c730 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800c778:	b002      	add	sp, #8
 800c77a:	bd70      	pop	{r4, r5, r6, pc}

0800c77c <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 800c77c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800c780:	4770      	bx	lr

0800c782 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800c782:	b513      	push	{r0, r1, r4, lr}
 800c784:	6803      	ldr	r3, [r0, #0]
 800c786:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800c78a:	2300      	movs	r3, #0
 800c78c:	e9cd 3300 	strd	r3, r3, [sp]
 800c790:	466b      	mov	r3, sp
 800c792:	47a0      	blx	r4
 800c794:	b002      	add	sp, #8
 800c796:	bd10      	pop	{r4, pc}

0800c798 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800c798:	2301      	movs	r3, #1
 800c79a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c79e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c7a2:	4770      	bx	lr

0800c7a4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800c7a4:	2301      	movs	r3, #1
 800c7a6:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c7aa:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c7ae:	4770      	bx	lr

0800c7b0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800c7b0:	6843      	ldr	r3, [r0, #4]
 800c7b2:	2201      	movs	r2, #1
 800c7b4:	725a      	strb	r2, [r3, #9]
 800c7b6:	6840      	ldr	r0, [r0, #4]
 800c7b8:	6803      	ldr	r3, [r0, #0]
 800c7ba:	691b      	ldr	r3, [r3, #16]
 800c7bc:	4718      	bx	r3

0800c7be <_ZN8touchgfx3HAL8flushDMAEv>:
 800c7be:	6840      	ldr	r0, [r0, #4]
 800c7c0:	6803      	ldr	r3, [r0, #0]
 800c7c2:	689b      	ldr	r3, [r3, #8]
 800c7c4:	4718      	bx	r3
	...

0800c7c8 <_ZN8touchgfx3HAL10beginFrameEv>:
 800c7c8:	4b04      	ldr	r3, [pc, #16]	; (800c7dc <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800c7ca:	781b      	ldrb	r3, [r3, #0]
 800c7cc:	b123      	cbz	r3, 800c7d8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800c7ce:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800c7d2:	f080 0001 	eor.w	r0, r0, #1
 800c7d6:	4770      	bx	lr
 800c7d8:	2001      	movs	r0, #1
 800c7da:	4770      	bx	lr
 800c7dc:	200268fe 	.word	0x200268fe

0800c7e0 <_ZN8touchgfx3HAL8endFrameEv>:
 800c7e0:	b510      	push	{r4, lr}
 800c7e2:	4604      	mov	r4, r0
 800c7e4:	6840      	ldr	r0, [r0, #4]
 800c7e6:	6803      	ldr	r3, [r0, #0]
 800c7e8:	689b      	ldr	r3, [r3, #8]
 800c7ea:	4798      	blx	r3
 800c7ec:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800c7f0:	b113      	cbz	r3, 800c7f8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800c7f2:	2301      	movs	r3, #1
 800c7f4:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800c7f8:	bd10      	pop	{r4, pc}

0800c7fa <_ZN8touchgfx3HAL9taskEntryEv>:
 800c7fa:	b508      	push	{r3, lr}
 800c7fc:	6803      	ldr	r3, [r0, #0]
 800c7fe:	4604      	mov	r4, r0
 800c800:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c802:	4798      	blx	r3
 800c804:	6823      	ldr	r3, [r4, #0]
 800c806:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c808:	4620      	mov	r0, r4
 800c80a:	4798      	blx	r3
 800c80c:	f7fe fa4e 	bl	800acac <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800c810:	6823      	ldr	r3, [r4, #0]
 800c812:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800c814:	e7f8      	b.n	800c808 <_ZN8touchgfx3HAL9taskEntryEv+0xe>
	...

0800c818 <_ZN8touchgfx3HAL4tickEv>:
 800c818:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c81a:	6803      	ldr	r3, [r0, #0]
 800c81c:	4d5c      	ldr	r5, [pc, #368]	; (800c990 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800c81e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c822:	4604      	mov	r4, r0
 800c824:	4798      	blx	r3
 800c826:	2800      	cmp	r0, #0
 800c828:	f000 8097 	beq.w	800c95a <_ZN8touchgfx3HAL4tickEv+0x142>
 800c82c:	2001      	movs	r0, #1
 800c82e:	f7fd ff5b 	bl	800a6e8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800c832:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800c836:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c83a:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800c83e:	2600      	movs	r6, #0
 800c840:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800c844:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800c848:	b133      	cbz	r3, 800c858 <_ZN8touchgfx3HAL4tickEv+0x40>
 800c84a:	6823      	ldr	r3, [r4, #0]
 800c84c:	4620      	mov	r0, r4
 800c84e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800c852:	4798      	blx	r3
 800c854:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800c858:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800c85c:	6862      	ldr	r2, [r4, #4]
 800c85e:	f083 0301 	eor.w	r3, r3, #1
 800c862:	7253      	strb	r3, [r2, #9]
 800c864:	2601      	movs	r6, #1
 800c866:	702e      	strb	r6, [r5, #0]
 800c868:	f001 fabe 	bl	800dde8 <_ZN8touchgfx11Application11getInstanceEv>
 800c86c:	6803      	ldr	r3, [r0, #0]
 800c86e:	4631      	mov	r1, r6
 800c870:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c872:	4798      	blx	r3
 800c874:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c878:	b90b      	cbnz	r3, 800c87e <_ZN8touchgfx3HAL4tickEv+0x66>
 800c87a:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800c87e:	f001 fab3 	bl	800dde8 <_ZN8touchgfx11Application11getInstanceEv>
 800c882:	6803      	ldr	r3, [r0, #0]
 800c884:	695b      	ldr	r3, [r3, #20]
 800c886:	4798      	blx	r3
 800c888:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c88a:	6803      	ldr	r3, [r0, #0]
 800c88c:	691b      	ldr	r3, [r3, #16]
 800c88e:	4798      	blx	r3
 800c890:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c894:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800c898:	3b01      	subs	r3, #1
 800c89a:	b2db      	uxtb	r3, r3
 800c89c:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c8a0:	b10a      	cbz	r2, 800c8a6 <_ZN8touchgfx3HAL4tickEv+0x8e>
 800c8a2:	2b00      	cmp	r3, #0
 800c8a4:	d1eb      	bne.n	800c87e <_ZN8touchgfx3HAL4tickEv+0x66>
 800c8a6:	4a3b      	ldr	r2, [pc, #236]	; (800c994 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800c8a8:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800c8ac:	7813      	ldrb	r3, [r2, #0]
 800c8ae:	3301      	adds	r3, #1
 800c8b0:	b25b      	sxtb	r3, r3
 800c8b2:	4299      	cmp	r1, r3
 800c8b4:	7013      	strb	r3, [r2, #0]
 800c8b6:	dc10      	bgt.n	800c8da <_ZN8touchgfx3HAL4tickEv+0xc2>
 800c8b8:	68e0      	ldr	r0, [r4, #12]
 800c8ba:	2300      	movs	r3, #0
 800c8bc:	7013      	strb	r3, [r2, #0]
 800c8be:	6803      	ldr	r3, [r0, #0]
 800c8c0:	aa03      	add	r2, sp, #12
 800c8c2:	68db      	ldr	r3, [r3, #12]
 800c8c4:	a902      	add	r1, sp, #8
 800c8c6:	4798      	blx	r3
 800c8c8:	6823      	ldr	r3, [r4, #0]
 800c8ca:	2800      	cmp	r0, #0
 800c8cc:	d051      	beq.n	800c972 <_ZN8touchgfx3HAL4tickEv+0x15a>
 800c8ce:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800c8d2:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c8d6:	4620      	mov	r0, r4
 800c8d8:	4798      	blx	r3
 800c8da:	6960      	ldr	r0, [r4, #20]
 800c8dc:	2300      	movs	r3, #0
 800c8de:	f88d 3007 	strb.w	r3, [sp, #7]
 800c8e2:	b158      	cbz	r0, 800c8fc <_ZN8touchgfx3HAL4tickEv+0xe4>
 800c8e4:	6803      	ldr	r3, [r0, #0]
 800c8e6:	f10d 0107 	add.w	r1, sp, #7
 800c8ea:	68db      	ldr	r3, [r3, #12]
 800c8ec:	4798      	blx	r3
 800c8ee:	b128      	cbz	r0, 800c8fc <_ZN8touchgfx3HAL4tickEv+0xe4>
 800c8f0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c8f2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c8f6:	6803      	ldr	r3, [r0, #0]
 800c8f8:	68db      	ldr	r3, [r3, #12]
 800c8fa:	4798      	blx	r3
 800c8fc:	f104 001c 	add.w	r0, r4, #28
 800c900:	f00e fbd2 	bl	801b0a8 <_ZN8touchgfx8Gestures4tickEv>
 800c904:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800c908:	b30b      	cbz	r3, 800c94e <_ZN8touchgfx3HAL4tickEv+0x136>
 800c90a:	6920      	ldr	r0, [r4, #16]
 800c90c:	6803      	ldr	r3, [r0, #0]
 800c90e:	691b      	ldr	r3, [r3, #16]
 800c910:	4798      	blx	r3
 800c912:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c914:	4606      	mov	r6, r0
 800c916:	b903      	cbnz	r3, 800c91a <_ZN8touchgfx3HAL4tickEv+0x102>
 800c918:	6720      	str	r0, [r4, #112]	; 0x70
 800c91a:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c91c:	4a1e      	ldr	r2, [pc, #120]	; (800c998 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800c91e:	1af3      	subs	r3, r6, r3
 800c920:	4293      	cmp	r3, r2
 800c922:	d914      	bls.n	800c94e <_ZN8touchgfx3HAL4tickEv+0x136>
 800c924:	6920      	ldr	r0, [r4, #16]
 800c926:	6803      	ldr	r3, [r0, #0]
 800c928:	699b      	ldr	r3, [r3, #24]
 800c92a:	4798      	blx	r3
 800c92c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c92e:	2264      	movs	r2, #100	; 0x64
 800c930:	1af3      	subs	r3, r6, r3
 800c932:	fbb3 f3f2 	udiv	r3, r3, r2
 800c936:	fbb0 f0f3 	udiv	r0, r0, r3
 800c93a:	2800      	cmp	r0, #0
 800c93c:	dc1e      	bgt.n	800c97c <_ZN8touchgfx3HAL4tickEv+0x164>
 800c93e:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800c942:	6920      	ldr	r0, [r4, #16]
 800c944:	6803      	ldr	r3, [r0, #0]
 800c946:	2100      	movs	r1, #0
 800c948:	69db      	ldr	r3, [r3, #28]
 800c94a:	4798      	blx	r3
 800c94c:	6726      	str	r6, [r4, #112]	; 0x70
 800c94e:	f001 fa4b 	bl	800dde8 <_ZN8touchgfx11Application11getInstanceEv>
 800c952:	6803      	ldr	r3, [r0, #0]
 800c954:	2100      	movs	r1, #0
 800c956:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c958:	4798      	blx	r3
 800c95a:	6823      	ldr	r3, [r4, #0]
 800c95c:	4620      	mov	r0, r4
 800c95e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800c962:	4798      	blx	r3
 800c964:	2001      	movs	r0, #1
 800c966:	f7fd feca 	bl	800a6fe <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800c96a:	2300      	movs	r3, #0
 800c96c:	702b      	strb	r3, [r5, #0]
 800c96e:	b004      	add	sp, #16
 800c970:	bd70      	pop	{r4, r5, r6, pc}
 800c972:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c976:	4620      	mov	r0, r4
 800c978:	4798      	blx	r3
 800c97a:	e7ae      	b.n	800c8da <_ZN8touchgfx3HAL4tickEv+0xc2>
 800c97c:	2863      	cmp	r0, #99	; 0x63
 800c97e:	bfcb      	itete	gt
 800c980:	2300      	movgt	r3, #0
 800c982:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800c986:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800c98a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800c98e:	e7d8      	b.n	800c942 <_ZN8touchgfx3HAL4tickEv+0x12a>
 800c990:	20026904 	.word	0x20026904
 800c994:	20026905 	.word	0x20026905
 800c998:	05f5e100 	.word	0x05f5e100

0800c99c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800c99c:	f7fe b956 	b.w	800ac4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c9a0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800c9a0:	6581      	str	r1, [r0, #88]	; 0x58
 800c9a2:	301c      	adds	r0, #28
 800c9a4:	f00e bb7e 	b.w	801b0a4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800c9a8 <_ZN8touchgfx3HAL5touchEll>:
 800c9a8:	b530      	push	{r4, r5, lr}
 800c9aa:	b087      	sub	sp, #28
 800c9ac:	4604      	mov	r4, r0
 800c9ae:	a804      	add	r0, sp, #16
 800c9b0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800c9b4:	f000 ffd6 	bl	800d964 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800c9b8:	9b04      	ldr	r3, [sp, #16]
 800c9ba:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c9be:	a906      	add	r1, sp, #24
 800c9c0:	9b05      	ldr	r3, [sp, #20]
 800c9c2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800c9c6:	a803      	add	r0, sp, #12
 800c9c8:	f001 f81a 	bl	800da00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800c9cc:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800c9d0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c9d4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c9d8:	f104 001c 	add.w	r0, r4, #28
 800c9dc:	b189      	cbz	r1, 800ca02 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800c9de:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800c9e2:	9300      	str	r3, [sp, #0]
 800c9e4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800c9e8:	4613      	mov	r3, r2
 800c9ea:	462a      	mov	r2, r5
 800c9ec:	f00e fb6a 	bl	801b0c4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800c9f0:	b128      	cbz	r0, 800c9fe <_ZN8touchgfx3HAL5touchEll+0x56>
 800c9f2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c9f6:	65e3      	str	r3, [r4, #92]	; 0x5c
 800c9f8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c9fc:	6623      	str	r3, [r4, #96]	; 0x60
 800c9fe:	b007      	add	sp, #28
 800ca00:	bd30      	pop	{r4, r5, pc}
 800ca02:	f00e fba3 	bl	801b14c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ca06:	2301      	movs	r3, #1
 800ca08:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800ca0c:	e7f1      	b.n	800c9f2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800ca0e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800ca0e:	b570      	push	{r4, r5, r6, lr}
 800ca10:	2b00      	cmp	r3, #0
 800ca12:	d050      	beq.n	800cab6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800ca14:	ea81 0002 	eor.w	r0, r1, r2
 800ca18:	07c6      	lsls	r6, r0, #31
 800ca1a:	d508      	bpl.n	800ca2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800ca1c:	3a01      	subs	r2, #1
 800ca1e:	18cc      	adds	r4, r1, r3
 800ca20:	42a1      	cmp	r1, r4
 800ca22:	d048      	beq.n	800cab6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800ca24:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ca28:	f801 0b01 	strb.w	r0, [r1], #1
 800ca2c:	e7f8      	b.n	800ca20 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800ca2e:	07d5      	lsls	r5, r2, #31
 800ca30:	bf42      	ittt	mi
 800ca32:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800ca36:	f801 0b01 	strbmi.w	r0, [r1], #1
 800ca3a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800ca3e:	2b01      	cmp	r3, #1
 800ca40:	d915      	bls.n	800ca6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800ca42:	ea82 0001 	eor.w	r0, r2, r1
 800ca46:	0784      	lsls	r4, r0, #30
 800ca48:	d02d      	beq.n	800caa6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800ca4a:	1e94      	subs	r4, r2, #2
 800ca4c:	4608      	mov	r0, r1
 800ca4e:	18ce      	adds	r6, r1, r3
 800ca50:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800ca54:	f820 5b02 	strh.w	r5, [r0], #2
 800ca58:	1a35      	subs	r5, r6, r0
 800ca5a:	2d01      	cmp	r5, #1
 800ca5c:	d8f8      	bhi.n	800ca50 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800ca5e:	1e98      	subs	r0, r3, #2
 800ca60:	f020 0001 	bic.w	r0, r0, #1
 800ca64:	3002      	adds	r0, #2
 800ca66:	4401      	add	r1, r0
 800ca68:	4402      	add	r2, r0
 800ca6a:	f003 0301 	and.w	r3, r3, #1
 800ca6e:	1f14      	subs	r4, r2, #4
 800ca70:	4608      	mov	r0, r1
 800ca72:	18ce      	adds	r6, r1, r3
 800ca74:	1a35      	subs	r5, r6, r0
 800ca76:	2d03      	cmp	r5, #3
 800ca78:	d810      	bhi.n	800ca9c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800ca7a:	089c      	lsrs	r4, r3, #2
 800ca7c:	00a0      	lsls	r0, r4, #2
 800ca7e:	4401      	add	r1, r0
 800ca80:	3801      	subs	r0, #1
 800ca82:	4402      	add	r2, r0
 800ca84:	f06f 0003 	mvn.w	r0, #3
 800ca88:	fb00 3404 	mla	r4, r0, r4, r3
 800ca8c:	440c      	add	r4, r1
 800ca8e:	42a1      	cmp	r1, r4
 800ca90:	d011      	beq.n	800cab6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800ca92:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800ca96:	f801 3b01 	strb.w	r3, [r1], #1
 800ca9a:	e7f8      	b.n	800ca8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800ca9c:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800caa0:	f840 5b04 	str.w	r5, [r0], #4
 800caa4:	e7e6      	b.n	800ca74 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800caa6:	0790      	lsls	r0, r2, #30
 800caa8:	d0e1      	beq.n	800ca6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800caaa:	f832 0b02 	ldrh.w	r0, [r2], #2
 800caae:	f821 0b02 	strh.w	r0, [r1], #2
 800cab2:	3b02      	subs	r3, #2
 800cab4:	e7db      	b.n	800ca6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800cab6:	2001      	movs	r0, #1
 800cab8:	bd70      	pop	{r4, r5, r6, pc}

0800caba <_ZN8touchgfx3HAL7noTouchEv>:
 800caba:	b510      	push	{r4, lr}
 800cabc:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800cac0:	4604      	mov	r4, r0
 800cac2:	b153      	cbz	r3, 800cada <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800cac4:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800cac8:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800cacc:	2101      	movs	r1, #1
 800cace:	301c      	adds	r0, #28
 800cad0:	f00e fb3c 	bl	801b14c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800cad4:	2300      	movs	r3, #0
 800cad6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800cada:	bd10      	pop	{r4, pc}

0800cadc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800cadc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cae0:	4605      	mov	r5, r0
 800cae2:	6980      	ldr	r0, [r0, #24]
 800cae4:	b085      	sub	sp, #20
 800cae6:	460f      	mov	r7, r1
 800cae8:	4690      	mov	r8, r2
 800caea:	4699      	mov	r9, r3
 800caec:	b930      	cbnz	r0, 800cafc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800caee:	4b1f      	ldr	r3, [pc, #124]	; (800cb6c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800caf0:	4a1f      	ldr	r2, [pc, #124]	; (800cb70 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800caf2:	f44f 7198 	mov.w	r1, #304	; 0x130
 800caf6:	481f      	ldr	r0, [pc, #124]	; (800cb74 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x98>)
 800caf8:	f00e fbba 	bl	801b270 <__assert_func>
 800cafc:	ac04      	add	r4, sp, #16
 800cafe:	2600      	movs	r6, #0
 800cb00:	f844 6d04 	str.w	r6, [r4, #-4]!
 800cb04:	6806      	ldr	r6, [r0, #0]
 800cb06:	9401      	str	r4, [sp, #4]
 800cb08:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800cb0c:	9400      	str	r4, [sp, #0]
 800cb0e:	6834      	ldr	r4, [r6, #0]
 800cb10:	47a0      	blx	r4
 800cb12:	4c19      	ldr	r4, [pc, #100]	; (800cb78 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x9c>)
 800cb14:	4606      	mov	r6, r0
 800cb16:	f8a4 9000 	strh.w	r9, [r4]
 800cb1a:	f7fc fb4b 	bl	80091b4 <_ZN8touchgfx3HAL3lcdEv>
 800cb1e:	6803      	ldr	r3, [r0, #0]
 800cb20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb22:	4798      	blx	r3
 800cb24:	280c      	cmp	r0, #12
 800cb26:	d80f      	bhi.n	800cb48 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800cb28:	e8df f000 	tbb	[pc, r0]
 800cb2c:	1b1b1207 	.word	0x1b1b1207
 800cb30:	1b1b1b1b 	.word	0x1b1b1b1b
 800cb34:	1b1b1b1b 	.word	0x1b1b1b1b
 800cb38:	1b          	.byte	0x1b
 800cb39:	00          	.byte	0x00
 800cb3a:	8823      	ldrh	r3, [r4, #0]
 800cb3c:	fb08 7203 	mla	r2, r8, r3, r7
 800cb40:	9b03      	ldr	r3, [sp, #12]
 800cb42:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800cb46:	63eb      	str	r3, [r5, #60]	; 0x3c
 800cb48:	4630      	mov	r0, r6
 800cb4a:	b005      	add	sp, #20
 800cb4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cb50:	8822      	ldrh	r2, [r4, #0]
 800cb52:	9b03      	ldr	r3, [sp, #12]
 800cb54:	fb08 7202 	mla	r2, r8, r2, r7
 800cb58:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800cb5c:	1a9a      	subs	r2, r3, r2
 800cb5e:	63ea      	str	r2, [r5, #60]	; 0x3c
 800cb60:	e7f2      	b.n	800cb48 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800cb62:	4b06      	ldr	r3, [pc, #24]	; (800cb7c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0xa0>)
 800cb64:	4a02      	ldr	r2, [pc, #8]	; (800cb70 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800cb66:	f240 114d 	movw	r1, #333	; 0x14d
 800cb6a:	e7c4      	b.n	800caf6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800cb6c:	0801d6a9 	.word	0x0801d6a9
 800cb70:	0801d9ba 	.word	0x0801d9ba
 800cb74:	0801d6ee 	.word	0x0801d6ee
 800cb78:	200268fa 	.word	0x200268fa
 800cb7c:	0801d714 	.word	0x0801d714

0800cb80 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800cb80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cb84:	4698      	mov	r8, r3
 800cb86:	6803      	ldr	r3, [r0, #0]
 800cb88:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 800cb8a:	4b0f      	ldr	r3, [pc, #60]	; (800cbc8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800cb8c:	b087      	sub	sp, #28
 800cb8e:	f8b3 9000 	ldrh.w	r9, [r3]
 800cb92:	460e      	mov	r6, r1
 800cb94:	4617      	mov	r7, r2
 800cb96:	4604      	mov	r4, r0
 800cb98:	f7fc fb0c 	bl	80091b4 <_ZN8touchgfx3HAL3lcdEv>
 800cb9c:	6803      	ldr	r3, [r0, #0]
 800cb9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cba0:	4798      	blx	r3
 800cba2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800cba6:	9302      	str	r3, [sp, #8]
 800cba8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800cbac:	9301      	str	r3, [sp, #4]
 800cbae:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800cbb2:	9300      	str	r3, [sp, #0]
 800cbb4:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800cbb8:	4643      	mov	r3, r8
 800cbba:	463a      	mov	r2, r7
 800cbbc:	4631      	mov	r1, r6
 800cbbe:	4620      	mov	r0, r4
 800cbc0:	47a8      	blx	r5
 800cbc2:	b007      	add	sp, #28
 800cbc4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cbc8:	200268fa 	.word	0x200268fa

0800cbcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800cbcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cbd0:	4606      	mov	r6, r0
 800cbd2:	b089      	sub	sp, #36	; 0x24
 800cbd4:	4610      	mov	r0, r2
 800cbd6:	460c      	mov	r4, r1
 800cbd8:	4691      	mov	r9, r2
 800cbda:	4698      	mov	r8, r3
 800cbdc:	f002 fdd0 	bl	800f780 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800cbe0:	2800      	cmp	r0, #0
 800cbe2:	f000 8092 	beq.w	800cd0a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x13e>
 800cbe6:	f8df a13c 	ldr.w	sl, [pc, #316]	; 800cd24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800cbea:	f8df b13c 	ldr.w	fp, [pc, #316]	; 800cd28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>
 800cbee:	f8da 0000 	ldr.w	r0, [sl]
 800cbf2:	4f4b      	ldr	r7, [pc, #300]	; (800cd20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800cbf4:	6802      	ldr	r2, [r0, #0]
 800cbf6:	6a12      	ldr	r2, [r2, #32]
 800cbf8:	4790      	blx	r2
 800cbfa:	f8da 0000 	ldr.w	r0, [sl]
 800cbfe:	6802      	ldr	r2, [r0, #0]
 800cc00:	ad08      	add	r5, sp, #32
 800cc02:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800cc04:	4790      	blx	r2
 800cc06:	f825 9d0c 	strh.w	r9, [r5, #-12]!
 800cc0a:	f8bb 3000 	ldrh.w	r3, [fp]
 800cc0e:	9300      	str	r3, [sp, #0]
 800cc10:	4628      	mov	r0, r5
 800cc12:	883b      	ldrh	r3, [r7, #0]
 800cc14:	9301      	str	r3, [sp, #4]
 800cc16:	f002 fe73 	bl	800f900 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800cc1a:	f8ab 0000 	strh.w	r0, [fp]
 800cc1e:	4628      	mov	r0, r5
 800cc20:	f002 fea8 	bl	800f974 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800cc24:	f8da b000 	ldr.w	fp, [sl]
 800cc28:	8038      	strh	r0, [r7, #0]
 800cc2a:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
 800cc2e:	9302      	str	r3, [sp, #8]
 800cc30:	4648      	mov	r0, r9
 800cc32:	f8db 7040 	ldr.w	r7, [fp, #64]	; 0x40
 800cc36:	f002 fda3 	bl	800f780 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800cc3a:	f8da 2000 	ldr.w	r2, [sl]
 800cc3e:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 800cc42:	63d0      	str	r0, [r2, #60]	; 0x3c
 800cc44:	6822      	ldr	r2, [r4, #0]
 800cc46:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 800cc4a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800cc4c:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 800cc50:	2200      	movs	r2, #0
 800cc52:	4611      	mov	r1, r2
 800cc54:	4620      	mov	r0, r4
 800cc56:	4798      	blx	r3
 800cc58:	2201      	movs	r2, #1
 800cc5a:	f894 b025 	ldrb.w	fp, [r4, #37]	; 0x25
 800cc5e:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800cc62:	f9b8 1004 	ldrsh.w	r1, [r8, #4]
 800cc66:	1d22      	adds	r2, r4, #4
 800cc68:	2900      	cmp	r1, #0
 800cc6a:	d051      	beq.n	800cd10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x144>
 800cc6c:	f9b8 1006 	ldrsh.w	r1, [r8, #6]
 800cc70:	2900      	cmp	r1, #0
 800cc72:	d04d      	beq.n	800cd10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x144>
 800cc74:	6810      	ldr	r0, [r2, #0]
 800cc76:	6851      	ldr	r1, [r2, #4]
 800cc78:	f10d 0c18 	add.w	ip, sp, #24
 800cc7c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800cc80:	4641      	mov	r1, r8
 800cc82:	a806      	add	r0, sp, #24
 800cc84:	f7ff fc76 	bl	800c574 <_ZN8touchgfx4RectaNERKS0_>
 800cc88:	4628      	mov	r0, r5
 800cc8a:	f002 ffc5 	bl	800fc18 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cc8e:	4680      	mov	r8, r0
 800cc90:	f7fc fa90 	bl	80091b4 <_ZN8touchgfx3HAL3lcdEv>
 800cc94:	6802      	ldr	r2, [r0, #0]
 800cc96:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800cc98:	4790      	blx	r2
 800cc9a:	4580      	cmp	r8, r0
 800cc9c:	d03d      	beq.n	800cd1a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x14e>
 800cc9e:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800cca0:	b150      	cbz	r0, 800ccb8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xec>
 800cca2:	4628      	mov	r0, r5
 800cca4:	f002 ffb8 	bl	800fc18 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cca8:	4605      	mov	r5, r0
 800ccaa:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800ccac:	6803      	ldr	r3, [r0, #0]
 800ccae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ccb0:	4798      	blx	r3
 800ccb2:	1a2b      	subs	r3, r5, r0
 800ccb4:	4258      	negs	r0, r3
 800ccb6:	4158      	adcs	r0, r3
 800ccb8:	f886 0076 	strb.w	r0, [r6, #118]	; 0x76
 800ccbc:	6822      	ldr	r2, [r4, #0]
 800ccbe:	6963      	ldr	r3, [r4, #20]
 800ccc0:	9303      	str	r3, [sp, #12]
 800ccc2:	2500      	movs	r5, #0
 800ccc4:	6165      	str	r5, [r4, #20]
 800ccc6:	4620      	mov	r0, r4
 800ccc8:	6892      	ldr	r2, [r2, #8]
 800ccca:	a906      	add	r1, sp, #24
 800cccc:	4790      	blx	r2
 800ccce:	9b03      	ldr	r3, [sp, #12]
 800ccd0:	6163      	str	r3, [r4, #20]
 800ccd2:	f886 5076 	strb.w	r5, [r6, #118]	; 0x76
 800ccd6:	6823      	ldr	r3, [r4, #0]
 800ccd8:	f884 b025 	strb.w	fp, [r4, #37]	; 0x25
 800ccdc:	4620      	mov	r0, r4
 800ccde:	4c11      	ldr	r4, [pc, #68]	; (800cd24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>)
 800cce0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cce2:	4652      	mov	r2, sl
 800cce4:	4649      	mov	r1, r9
 800cce6:	4798      	blx	r3
 800cce8:	6820      	ldr	r0, [r4, #0]
 800ccea:	9b02      	ldr	r3, [sp, #8]
 800ccec:	9a00      	ldr	r2, [sp, #0]
 800ccee:	e9c0 370f 	strd	r3, r7, [r0, #60]	; 0x3c
 800ccf2:	4b0d      	ldr	r3, [pc, #52]	; (800cd28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>)
 800ccf4:	801a      	strh	r2, [r3, #0]
 800ccf6:	4b0a      	ldr	r3, [pc, #40]	; (800cd20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800ccf8:	9a01      	ldr	r2, [sp, #4]
 800ccfa:	801a      	strh	r2, [r3, #0]
 800ccfc:	6803      	ldr	r3, [r0, #0]
 800ccfe:	6a1b      	ldr	r3, [r3, #32]
 800cd00:	4798      	blx	r3
 800cd02:	6820      	ldr	r0, [r4, #0]
 800cd04:	6803      	ldr	r3, [r0, #0]
 800cd06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd08:	4798      	blx	r3
 800cd0a:	b009      	add	sp, #36	; 0x24
 800cd0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cd10:	6810      	ldr	r0, [r2, #0]
 800cd12:	6851      	ldr	r1, [r2, #4]
 800cd14:	ab06      	add	r3, sp, #24
 800cd16:	c303      	stmia	r3!, {r0, r1}
 800cd18:	e7b6      	b.n	800cc88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xbc>
 800cd1a:	2000      	movs	r0, #0
 800cd1c:	e7cc      	b.n	800ccb8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xec>
 800cd1e:	bf00      	nop
 800cd20:	200268fc 	.word	0x200268fc
 800cd24:	20026900 	.word	0x20026900
 800cd28:	200268fa 	.word	0x200268fa

0800cd2c <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800cd2c:	b510      	push	{r4, lr}
 800cd2e:	4b07      	ldr	r3, [pc, #28]	; (800cd4c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800cd30:	781b      	ldrb	r3, [r3, #0]
 800cd32:	4604      	mov	r4, r0
 800cd34:	b13b      	cbz	r3, 800cd46 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800cd36:	6803      	ldr	r3, [r0, #0]
 800cd38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cd3a:	4798      	blx	r3
 800cd3c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800cd3e:	4283      	cmp	r3, r0
 800cd40:	d101      	bne.n	800cd46 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800cd42:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800cd44:	bd10      	pop	{r4, pc}
 800cd46:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800cd48:	e7fc      	b.n	800cd44 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800cd4a:	bf00      	nop
 800cd4c:	200268fe 	.word	0x200268fe

0800cd50 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800cd50:	b510      	push	{r4, lr}
 800cd52:	4b0b      	ldr	r3, [pc, #44]	; (800cd80 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800cd54:	781b      	ldrb	r3, [r3, #0]
 800cd56:	4604      	mov	r4, r0
 800cd58:	b95b      	cbnz	r3, 800cd72 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cd5a:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800cd5e:	2b02      	cmp	r3, #2
 800cd60:	d007      	beq.n	800cd72 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cd62:	6840      	ldr	r0, [r0, #4]
 800cd64:	f000 fbc8 	bl	800d4f8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800cd68:	b118      	cbz	r0, 800cd72 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cd6a:	6862      	ldr	r2, [r4, #4]
 800cd6c:	7a53      	ldrb	r3, [r2, #9]
 800cd6e:	2b00      	cmp	r3, #0
 800cd70:	d0fc      	beq.n	800cd6c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800cd72:	f7fd ff55 	bl	800ac20 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800cd76:	4620      	mov	r0, r4
 800cd78:	f7ff ffd8 	bl	800cd2c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cd7c:	bd10      	pop	{r4, pc}
 800cd7e:	bf00      	nop
 800cd80:	200268fe 	.word	0x200268fe

0800cd84 <_ZN8touchgfx3HAL10initializeEv>:
 800cd84:	b510      	push	{r4, lr}
 800cd86:	4604      	mov	r4, r0
 800cd88:	f7fd ff38 	bl	800abfc <_ZN8touchgfx10OSWrappers10initializeEv>
 800cd8c:	6860      	ldr	r0, [r4, #4]
 800cd8e:	6803      	ldr	r3, [r0, #0]
 800cd90:	68db      	ldr	r3, [r3, #12]
 800cd92:	4798      	blx	r3
 800cd94:	68e0      	ldr	r0, [r4, #12]
 800cd96:	6803      	ldr	r3, [r0, #0]
 800cd98:	689b      	ldr	r3, [r3, #8]
 800cd9a:	4798      	blx	r3
 800cd9c:	6823      	ldr	r3, [r4, #0]
 800cd9e:	4620      	mov	r0, r4
 800cda0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800cda2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cda6:	4718      	bx	r3

0800cda8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800cda8:	b508      	push	{r3, lr}
 800cdaa:	290c      	cmp	r1, #12
 800cdac:	d817      	bhi.n	800cdde <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800cdae:	e8df f001 	tbb	[pc, r1]
 800cdb2:	090b      	.short	0x090b
 800cdb4:	0d0d0d07 	.word	0x0d0d0d07
 800cdb8:	1414140d 	.word	0x1414140d
 800cdbc:	1414      	.short	0x1414
 800cdbe:	0d          	.byte	0x0d
 800cdbf:	00          	.byte	0x00
 800cdc0:	2020      	movs	r0, #32
 800cdc2:	bd08      	pop	{r3, pc}
 800cdc4:	2018      	movs	r0, #24
 800cdc6:	e7fc      	b.n	800cdc2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800cdc8:	2010      	movs	r0, #16
 800cdca:	e7fa      	b.n	800cdc2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800cdcc:	4b05      	ldr	r3, [pc, #20]	; (800cde4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800cdce:	4a06      	ldr	r2, [pc, #24]	; (800cde8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800cdd0:	4806      	ldr	r0, [pc, #24]	; (800cdec <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800cdd2:	f44f 710c 	mov.w	r1, #560	; 0x230
 800cdd6:	f00e fa4b 	bl	801b270 <__assert_func>
 800cdda:	2008      	movs	r0, #8
 800cddc:	e7f1      	b.n	800cdc2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800cdde:	2000      	movs	r0, #0
 800cde0:	e7ef      	b.n	800cdc2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800cde2:	bf00      	nop
 800cde4:	0801d7e7 	.word	0x0801d7e7
 800cde8:	0801db7c 	.word	0x0801db7c
 800cdec:	0801d6ee 	.word	0x0801d6ee

0800cdf0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800cdf0:	b570      	push	{r4, r5, r6, lr}
 800cdf2:	460d      	mov	r5, r1
 800cdf4:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800cdf8:	4616      	mov	r6, r2
 800cdfa:	461c      	mov	r4, r3
 800cdfc:	f7ff ffd4 	bl	800cda8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800ce00:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800ce04:	10c0      	asrs	r0, r0, #3
 800ce06:	fb06 5101 	mla	r1, r6, r1, r5
 800ce0a:	fb00 4001 	mla	r0, r0, r1, r4
 800ce0e:	bd70      	pop	{r4, r5, r6, pc}

0800ce10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800ce10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ce14:	b08a      	sub	sp, #40	; 0x28
 800ce16:	f04f 0c00 	mov.w	ip, #0
 800ce1a:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800ce1e:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800ce22:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800ce26:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800ce2a:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800ce2e:	f8cd c020 	str.w	ip, [sp, #32]
 800ce32:	f1b8 0f02 	cmp.w	r8, #2
 800ce36:	4604      	mov	r4, r0
 800ce38:	469a      	mov	sl, r3
 800ce3a:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800ce3e:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800ce42:	d030      	beq.n	800cea6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800ce44:	2bff      	cmp	r3, #255	; 0xff
 800ce46:	d12c      	bne.n	800cea2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 800ce48:	4560      	cmp	r0, ip
 800ce4a:	bf14      	ite	ne
 800ce4c:	2004      	movne	r0, #4
 800ce4e:	2001      	moveq	r0, #1
 800ce50:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ce54:	9204      	str	r2, [sp, #16]
 800ce56:	4620      	mov	r0, r4
 800ce58:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800ce5c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ce60:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800ce64:	f8ad 6018 	strh.w	r6, [sp, #24]
 800ce68:	f8ad 501a 	strh.w	r5, [sp, #26]
 800ce6c:	f7ff ff5e 	bl	800cd2c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ce70:	e9cd 9700 	strd	r9, r7, [sp]
 800ce74:	4603      	mov	r3, r0
 800ce76:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800ce7a:	4651      	mov	r1, sl
 800ce7c:	4620      	mov	r0, r4
 800ce7e:	f7ff ffb7 	bl	800cdf0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800ce82:	f8ad 901e 	strh.w	r9, [sp, #30]
 800ce86:	9005      	str	r0, [sp, #20]
 800ce88:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 800ce8c:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800ce90:	b106      	cbz	r6, 800ce94 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800ce92:	b98d      	cbnz	r5, 800ceb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 800ce94:	4b12      	ldr	r3, [pc, #72]	; (800cee0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 800ce96:	4a13      	ldr	r2, [pc, #76]	; (800cee4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800ce98:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 800ce9c:	4812      	ldr	r0, [pc, #72]	; (800cee8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800ce9e:	f00e f9e7 	bl	801b270 <__assert_func>
 800cea2:	2004      	movs	r0, #4
 800cea4:	e7d4      	b.n	800ce50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800cea6:	2bff      	cmp	r3, #255	; 0xff
 800cea8:	d104      	bne.n	800ceb4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 800ceaa:	2800      	cmp	r0, #0
 800ceac:	bf14      	ite	ne
 800ceae:	2040      	movne	r0, #64	; 0x40
 800ceb0:	2020      	moveq	r0, #32
 800ceb2:	e7cd      	b.n	800ce50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800ceb4:	2040      	movs	r0, #64	; 0x40
 800ceb6:	e7cb      	b.n	800ce50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800ceb8:	6823      	ldr	r3, [r4, #0]
 800ceba:	9d02      	ldr	r5, [sp, #8]
 800cebc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cebe:	4620      	mov	r0, r4
 800cec0:	4798      	blx	r3
 800cec2:	4228      	tst	r0, r5
 800cec4:	d104      	bne.n	800ced0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800cec6:	4b09      	ldr	r3, [pc, #36]	; (800ceec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800cec8:	4a06      	ldr	r2, [pc, #24]	; (800cee4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800ceca:	f240 11b1 	movw	r1, #433	; 0x1b1
 800cece:	e7e5      	b.n	800ce9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800ced0:	6860      	ldr	r0, [r4, #4]
 800ced2:	6803      	ldr	r3, [r0, #0]
 800ced4:	a902      	add	r1, sp, #8
 800ced6:	685b      	ldr	r3, [r3, #4]
 800ced8:	4798      	blx	r3
 800ceda:	b00a      	add	sp, #40	; 0x28
 800cedc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cee0:	0801d76a 	.word	0x0801d76a
 800cee4:	0801da1e 	.word	0x0801da1e
 800cee8:	0801d6ee 	.word	0x0801d6ee
 800ceec:	0801d7a2 	.word	0x0801d7a2

0800cef0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800cef0:	b510      	push	{r4, lr}
 800cef2:	b08a      	sub	sp, #40	; 0x28
 800cef4:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 800cef8:	9408      	str	r4, [sp, #32]
 800cefa:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800cefe:	9407      	str	r4, [sp, #28]
 800cf00:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800cf04:	9406      	str	r4, [sp, #24]
 800cf06:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 800cf0a:	9405      	str	r4, [sp, #20]
 800cf0c:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800cf10:	9404      	str	r4, [sp, #16]
 800cf12:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800cf16:	9403      	str	r4, [sp, #12]
 800cf18:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 800cf1c:	9402      	str	r4, [sp, #8]
 800cf1e:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800cf22:	e9cd 3400 	strd	r3, r4, [sp]
 800cf26:	4613      	mov	r3, r2
 800cf28:	2200      	movs	r2, #0
 800cf2a:	f7ff ff71 	bl	800ce10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800cf2e:	b00a      	add	sp, #40	; 0x28
 800cf30:	bd10      	pop	{r4, pc}
	...

0800cf34 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800cf34:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf36:	b08b      	sub	sp, #44	; 0x2c
 800cf38:	4616      	mov	r6, r2
 800cf3a:	460d      	mov	r5, r1
 800cf3c:	461f      	mov	r7, r3
 800cf3e:	4604      	mov	r4, r0
 800cf40:	f7fc f938 	bl	80091b4 <_ZN8touchgfx3HAL3lcdEv>
 800cf44:	6803      	ldr	r3, [r0, #0]
 800cf46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf48:	4798      	blx	r3
 800cf4a:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800cf4e:	4b0d      	ldr	r3, [pc, #52]	; (800cf84 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800cf50:	881b      	ldrh	r3, [r3, #0]
 800cf52:	9306      	str	r3, [sp, #24]
 800cf54:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800cf58:	9305      	str	r3, [sp, #20]
 800cf5a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800cf5e:	9304      	str	r3, [sp, #16]
 800cf60:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800cf64:	9303      	str	r3, [sp, #12]
 800cf66:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800cf6a:	9302      	str	r3, [sp, #8]
 800cf6c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800cf70:	2200      	movs	r2, #0
 800cf72:	e9cd 7300 	strd	r7, r3, [sp]
 800cf76:	4629      	mov	r1, r5
 800cf78:	4633      	mov	r3, r6
 800cf7a:	4620      	mov	r0, r4
 800cf7c:	f7ff ff48 	bl	800ce10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800cf80:	b00b      	add	sp, #44	; 0x2c
 800cf82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cf84:	200268fa 	.word	0x200268fa

0800cf88 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800cf88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cf8c:	461f      	mov	r7, r3
 800cf8e:	4b14      	ldr	r3, [pc, #80]	; (800cfe0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800cf90:	b08a      	sub	sp, #40	; 0x28
 800cf92:	4616      	mov	r6, r2
 800cf94:	f8b3 8000 	ldrh.w	r8, [r3]
 800cf98:	460d      	mov	r5, r1
 800cf9a:	4604      	mov	r4, r0
 800cf9c:	f7fc f90a 	bl	80091b4 <_ZN8touchgfx3HAL3lcdEv>
 800cfa0:	6803      	ldr	r3, [r0, #0]
 800cfa2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cfa4:	4798      	blx	r3
 800cfa6:	2302      	movs	r3, #2
 800cfa8:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800cfac:	2301      	movs	r3, #1
 800cfae:	9305      	str	r3, [sp, #20]
 800cfb0:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800cfb4:	9304      	str	r3, [sp, #16]
 800cfb6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800cfba:	9303      	str	r3, [sp, #12]
 800cfbc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800cfc0:	9302      	str	r3, [sp, #8]
 800cfc2:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800cfc6:	9008      	str	r0, [sp, #32]
 800cfc8:	e9cd 7300 	strd	r7, r3, [sp]
 800cfcc:	2200      	movs	r2, #0
 800cfce:	4633      	mov	r3, r6
 800cfd0:	4629      	mov	r1, r5
 800cfd2:	4620      	mov	r0, r4
 800cfd4:	f7ff ff1c 	bl	800ce10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800cfd8:	b00a      	add	sp, #40	; 0x28
 800cfda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cfde:	bf00      	nop
 800cfe0:	200268fa 	.word	0x200268fa

0800cfe4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800cfe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cfe8:	b08b      	sub	sp, #44	; 0x2c
 800cfea:	469b      	mov	fp, r3
 800cfec:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800cff0:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800cff4:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800cff8:	2fff      	cmp	r7, #255	; 0xff
 800cffa:	bf14      	ite	ne
 800cffc:	2308      	movne	r3, #8
 800cffe:	2302      	moveq	r3, #2
 800d000:	2600      	movs	r6, #0
 800d002:	4604      	mov	r4, r0
 800d004:	4689      	mov	r9, r1
 800d006:	4692      	mov	sl, r2
 800d008:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800d00c:	9608      	str	r6, [sp, #32]
 800d00e:	f7ff fe8d 	bl	800cd2c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d012:	e9cd 8500 	strd	r8, r5, [sp]
 800d016:	4603      	mov	r3, r0
 800d018:	465a      	mov	r2, fp
 800d01a:	4651      	mov	r1, sl
 800d01c:	4620      	mov	r0, r4
 800d01e:	f7ff fee7 	bl	800cdf0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800d022:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800d026:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d02a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800d02e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d032:	6823      	ldr	r3, [r4, #0]
 800d034:	9005      	str	r0, [sp, #20]
 800d036:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800d03a:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800d03e:	f8ad 601c 	strh.w	r6, [sp, #28]
 800d042:	f8ad 801e 	strh.w	r8, [sp, #30]
 800d046:	f8cd 9020 	str.w	r9, [sp, #32]
 800d04a:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800d04e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d050:	9d02      	ldr	r5, [sp, #8]
 800d052:	4620      	mov	r0, r4
 800d054:	4798      	blx	r3
 800d056:	4228      	tst	r0, r5
 800d058:	d106      	bne.n	800d068 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800d05a:	4b07      	ldr	r3, [pc, #28]	; (800d078 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800d05c:	4a07      	ldr	r2, [pc, #28]	; (800d07c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800d05e:	4808      	ldr	r0, [pc, #32]	; (800d080 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800d060:	f44f 71f4 	mov.w	r1, #488	; 0x1e8
 800d064:	f00e f904 	bl	801b270 <__assert_func>
 800d068:	6860      	ldr	r0, [r4, #4]
 800d06a:	6803      	ldr	r3, [r0, #0]
 800d06c:	a902      	add	r1, sp, #8
 800d06e:	685b      	ldr	r3, [r3, #4]
 800d070:	4798      	blx	r3
 800d072:	b00b      	add	sp, #44	; 0x2c
 800d074:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d078:	0801d7a2 	.word	0x0801d7a2
 800d07c:	0801dae7 	.word	0x0801dae7
 800d080:	0801d6ee 	.word	0x0801d6ee

0800d084 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800d084:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800d088:	461f      	mov	r7, r3
 800d08a:	4b0b      	ldr	r3, [pc, #44]	; (800d0b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800d08c:	460d      	mov	r5, r1
 800d08e:	f8b3 8000 	ldrh.w	r8, [r3]
 800d092:	4616      	mov	r6, r2
 800d094:	4604      	mov	r4, r0
 800d096:	f7fc f88d 	bl	80091b4 <_ZN8touchgfx3HAL3lcdEv>
 800d09a:	6803      	ldr	r3, [r0, #0]
 800d09c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d09e:	4798      	blx	r3
 800d0a0:	463b      	mov	r3, r7
 800d0a2:	e9cd 8000 	strd	r8, r0, [sp]
 800d0a6:	4632      	mov	r2, r6
 800d0a8:	4629      	mov	r1, r5
 800d0aa:	4620      	mov	r0, r4
 800d0ac:	f7ff fea0 	bl	800cdf0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800d0b0:	b002      	add	sp, #8
 800d0b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d0b6:	bf00      	nop
 800d0b8:	200268fa 	.word	0x200268fa

0800d0bc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800d0bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d0c0:	b088      	sub	sp, #32
 800d0c2:	4698      	mov	r8, r3
 800d0c4:	2300      	movs	r3, #0
 800d0c6:	9306      	str	r3, [sp, #24]
 800d0c8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800d0cc:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800d0d0:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800d0d4:	f8ad 6010 	strh.w	r6, [sp, #16]
 800d0d8:	e9cd 3100 	strd	r3, r1, [sp]
 800d0dc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800d0e0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d0e4:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800d0e8:	f88d 301c 	strb.w	r3, [sp, #28]
 800d0ec:	4617      	mov	r7, r2
 800d0ee:	4604      	mov	r4, r0
 800d0f0:	f8ad 5012 	strh.w	r5, [sp, #18]
 800d0f4:	f7ff fe1a 	bl	800cd2c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d0f8:	4642      	mov	r2, r8
 800d0fa:	4603      	mov	r3, r0
 800d0fc:	4639      	mov	r1, r7
 800d0fe:	4620      	mov	r0, r4
 800d100:	f7ff ffc0 	bl	800d084 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d104:	4b16      	ldr	r3, [pc, #88]	; (800d160 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800d106:	9003      	str	r0, [sp, #12]
 800d108:	881b      	ldrh	r3, [r3, #0]
 800d10a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d10e:	f7fc f851 	bl	80091b4 <_ZN8touchgfx3HAL3lcdEv>
 800d112:	6803      	ldr	r3, [r0, #0]
 800d114:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d116:	4798      	blx	r3
 800d118:	f88d 001e 	strb.w	r0, [sp, #30]
 800d11c:	f88d 001d 	strb.w	r0, [sp, #29]
 800d120:	b106      	cbz	r6, 800d124 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800d122:	b935      	cbnz	r5, 800d132 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800d124:	4b0f      	ldr	r3, [pc, #60]	; (800d164 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800d126:	4a10      	ldr	r2, [pc, #64]	; (800d168 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800d128:	f240 11cd 	movw	r1, #461	; 0x1cd
 800d12c:	480f      	ldr	r0, [pc, #60]	; (800d16c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800d12e:	f00e f89f 	bl	801b270 <__assert_func>
 800d132:	6823      	ldr	r3, [r4, #0]
 800d134:	9d00      	ldr	r5, [sp, #0]
 800d136:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d138:	4620      	mov	r0, r4
 800d13a:	4798      	blx	r3
 800d13c:	4228      	tst	r0, r5
 800d13e:	d104      	bne.n	800d14a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800d140:	4b0b      	ldr	r3, [pc, #44]	; (800d170 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800d142:	4a09      	ldr	r2, [pc, #36]	; (800d168 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800d144:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 800d148:	e7f0      	b.n	800d12c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800d14a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d14c:	6860      	ldr	r0, [r4, #4]
 800d14e:	9306      	str	r3, [sp, #24]
 800d150:	6803      	ldr	r3, [r0, #0]
 800d152:	4669      	mov	r1, sp
 800d154:	685b      	ldr	r3, [r3, #4]
 800d156:	4798      	blx	r3
 800d158:	b008      	add	sp, #32
 800d15a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d15e:	bf00      	nop
 800d160:	200268fa 	.word	0x200268fa
 800d164:	0801d76a 	.word	0x0801d76a
 800d168:	0801d8d0 	.word	0x0801d8d0
 800d16c:	0801d6ee 	.word	0x0801d6ee
 800d170:	0801d7a2 	.word	0x0801d7a2

0800d174 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800d174:	b570      	push	{r4, r5, r6, lr}
 800d176:	b08a      	sub	sp, #40	; 0x28
 800d178:	466b      	mov	r3, sp
 800d17a:	e883 0006 	stmia.w	r3, {r1, r2}
 800d17e:	4b20      	ldr	r3, [pc, #128]	; (800d200 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800d180:	781b      	ldrb	r3, [r3, #0]
 800d182:	4604      	mov	r4, r0
 800d184:	b933      	cbnz	r3, 800d194 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800d186:	4b1f      	ldr	r3, [pc, #124]	; (800d204 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800d188:	4a1f      	ldr	r2, [pc, #124]	; (800d208 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800d18a:	4820      	ldr	r0, [pc, #128]	; (800d20c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800d18c:	f240 11f9 	movw	r1, #505	; 0x1f9
 800d190:	f00e f86e 	bl	801b270 <__assert_func>
 800d194:	2300      	movs	r3, #0
 800d196:	9308      	str	r3, [sp, #32]
 800d198:	2301      	movs	r3, #1
 800d19a:	9302      	str	r3, [sp, #8]
 800d19c:	6803      	ldr	r3, [r0, #0]
 800d19e:	f8bd 5000 	ldrh.w	r5, [sp]
 800d1a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d1a4:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800d1a8:	4798      	blx	r3
 800d1aa:	4632      	mov	r2, r6
 800d1ac:	4629      	mov	r1, r5
 800d1ae:	4603      	mov	r3, r0
 800d1b0:	4620      	mov	r0, r4
 800d1b2:	f7ff ff67 	bl	800d084 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d1b6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d1b8:	9305      	str	r3, [sp, #20]
 800d1ba:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d1be:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d1c2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800d1c6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d1ca:	4b11      	ldr	r3, [pc, #68]	; (800d210 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800d1cc:	9003      	str	r0, [sp, #12]
 800d1ce:	881b      	ldrh	r3, [r3, #0]
 800d1d0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d1d4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d1d8:	f7fb ffec 	bl	80091b4 <_ZN8touchgfx3HAL3lcdEv>
 800d1dc:	6803      	ldr	r3, [r0, #0]
 800d1de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d1e0:	4798      	blx	r3
 800d1e2:	23ff      	movs	r3, #255	; 0xff
 800d1e4:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800d1e8:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800d1ec:	6860      	ldr	r0, [r4, #4]
 800d1ee:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800d1f2:	6803      	ldr	r3, [r0, #0]
 800d1f4:	a902      	add	r1, sp, #8
 800d1f6:	685b      	ldr	r3, [r3, #4]
 800d1f8:	4798      	blx	r3
 800d1fa:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800d1fc:	b00a      	add	sp, #40	; 0x28
 800d1fe:	bd70      	pop	{r4, r5, r6, pc}
 800d200:	200268ff 	.word	0x200268ff
 800d204:	0801d63b 	.word	0x0801d63b
 800d208:	0801d974 	.word	0x0801d974
 800d20c:	0801d6ee 	.word	0x0801d6ee
 800d210:	200268fa 	.word	0x200268fa

0800d214 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800d214:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d216:	b08b      	sub	sp, #44	; 0x2c
 800d218:	466d      	mov	r5, sp
 800d21a:	e885 0006 	stmia.w	r5, {r1, r2}
 800d21e:	461d      	mov	r5, r3
 800d220:	2300      	movs	r3, #0
 800d222:	9308      	str	r3, [sp, #32]
 800d224:	2301      	movs	r3, #1
 800d226:	9302      	str	r3, [sp, #8]
 800d228:	6803      	ldr	r3, [r0, #0]
 800d22a:	f8bd 6000 	ldrh.w	r6, [sp]
 800d22e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d230:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800d234:	4604      	mov	r4, r0
 800d236:	4798      	blx	r3
 800d238:	463a      	mov	r2, r7
 800d23a:	4631      	mov	r1, r6
 800d23c:	4603      	mov	r3, r0
 800d23e:	4620      	mov	r0, r4
 800d240:	f7ff ff20 	bl	800d084 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d244:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d248:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d24c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800d250:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d254:	4b0e      	ldr	r3, [pc, #56]	; (800d290 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800d256:	9003      	str	r0, [sp, #12]
 800d258:	881b      	ldrh	r3, [r3, #0]
 800d25a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d25e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d260:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d264:	9505      	str	r5, [sp, #20]
 800d266:	f7fb ffa5 	bl	80091b4 <_ZN8touchgfx3HAL3lcdEv>
 800d26a:	6803      	ldr	r3, [r0, #0]
 800d26c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d26e:	4798      	blx	r3
 800d270:	23ff      	movs	r3, #255	; 0xff
 800d272:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800d276:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800d27a:	6860      	ldr	r0, [r4, #4]
 800d27c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800d280:	6803      	ldr	r3, [r0, #0]
 800d282:	a902      	add	r1, sp, #8
 800d284:	685b      	ldr	r3, [r3, #4]
 800d286:	4798      	blx	r3
 800d288:	4628      	mov	r0, r5
 800d28a:	b00b      	add	sp, #44	; 0x2c
 800d28c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d28e:	bf00      	nop
 800d290:	200268fa 	.word	0x200268fa

0800d294 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800d294:	b570      	push	{r4, r5, r6, lr}
 800d296:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800d29a:	4604      	mov	r4, r0
 800d29c:	b19b      	cbz	r3, 800d2c6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800d29e:	2002      	movs	r0, #2
 800d2a0:	f7fd fa38 	bl	800a714 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800d2a4:	2300      	movs	r3, #0
 800d2a6:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800d2aa:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800d2ae:	6823      	ldr	r3, [r4, #0]
 800d2b0:	4620      	mov	r0, r4
 800d2b2:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
 800d2b6:	f7ff fd39 	bl	800cd2c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d2ba:	462b      	mov	r3, r5
 800d2bc:	4601      	mov	r1, r0
 800d2be:	4620      	mov	r0, r4
 800d2c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d2c4:	4718      	bx	r3
 800d2c6:	bd70      	pop	{r4, r5, r6, pc}

0800d2c8 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800d2c8:	4770      	bx	lr

0800d2ca <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800d2ca:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800d2ce:	1a13      	subs	r3, r2, r0
 800d2d0:	4258      	negs	r0, r3
 800d2d2:	4158      	adcs	r0, r3
 800d2d4:	4770      	bx	lr

0800d2d6 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800d2d6:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800d2da:	1a9b      	subs	r3, r3, r2
 800d2dc:	2b00      	cmp	r3, #0
 800d2de:	bfdc      	itt	le
 800d2e0:	6882      	ldrle	r2, [r0, #8]
 800d2e2:	189b      	addle	r3, r3, r2
 800d2e4:	2b01      	cmp	r3, #1
 800d2e6:	bfcc      	ite	gt
 800d2e8:	2000      	movgt	r0, #0
 800d2ea:	2001      	movle	r0, #1
 800d2ec:	4770      	bx	lr

0800d2ee <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800d2ee:	6902      	ldr	r2, [r0, #16]
 800d2f0:	6840      	ldr	r0, [r0, #4]
 800d2f2:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800d2f6:	4770      	bx	lr

0800d2f8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800d2f8:	6803      	ldr	r3, [r0, #0]
 800d2fa:	691b      	ldr	r3, [r3, #16]
 800d2fc:	4718      	bx	r3

0800d2fe <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800d2fe:	4770      	bx	lr

0800d300 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800d300:	4770      	bx	lr
	...

0800d304 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800d304:	b570      	push	{r4, r5, r6, lr}
 800d306:	2301      	movs	r3, #1
 800d308:	7203      	strb	r3, [r0, #8]
 800d30a:	4604      	mov	r4, r0
 800d30c:	6840      	ldr	r0, [r0, #4]
 800d30e:	6803      	ldr	r3, [r0, #0]
 800d310:	699b      	ldr	r3, [r3, #24]
 800d312:	4798      	blx	r3
 800d314:	6803      	ldr	r3, [r0, #0]
 800d316:	2b08      	cmp	r3, #8
 800d318:	4605      	mov	r5, r0
 800d31a:	d01e      	beq.n	800d35a <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800d31c:	d80b      	bhi.n	800d336 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d31e:	2b02      	cmp	r3, #2
 800d320:	d027      	beq.n	800d372 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800d322:	2b04      	cmp	r3, #4
 800d324:	d011      	beq.n	800d34a <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800d326:	2b01      	cmp	r3, #1
 800d328:	d028      	beq.n	800d37c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800d32a:	4b17      	ldr	r3, [pc, #92]	; (800d388 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800d32c:	4a17      	ldr	r2, [pc, #92]	; (800d38c <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800d32e:	4818      	ldr	r0, [pc, #96]	; (800d390 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800d330:	218b      	movs	r1, #139	; 0x8b
 800d332:	f00d ff9d 	bl	801b270 <__assert_func>
 800d336:	2b40      	cmp	r3, #64	; 0x40
 800d338:	d020      	beq.n	800d37c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800d33a:	d801      	bhi.n	800d340 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800d33c:	2b20      	cmp	r3, #32
 800d33e:	e7f3      	b.n	800d328 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800d340:	2b80      	cmp	r3, #128	; 0x80
 800d342:	d01b      	beq.n	800d37c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800d344:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800d348:	e7ee      	b.n	800d328 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800d34a:	6823      	ldr	r3, [r4, #0]
 800d34c:	7f01      	ldrb	r1, [r0, #28]
 800d34e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d350:	4620      	mov	r0, r4
 800d352:	4798      	blx	r3
 800d354:	6823      	ldr	r3, [r4, #0]
 800d356:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d358:	e006      	b.n	800d368 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800d35a:	6823      	ldr	r3, [r4, #0]
 800d35c:	7f01      	ldrb	r1, [r0, #28]
 800d35e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d360:	4620      	mov	r0, r4
 800d362:	4798      	blx	r3
 800d364:	6823      	ldr	r3, [r4, #0]
 800d366:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d368:	4629      	mov	r1, r5
 800d36a:	4620      	mov	r0, r4
 800d36c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d370:	4718      	bx	r3
 800d372:	6823      	ldr	r3, [r4, #0]
 800d374:	4620      	mov	r0, r4
 800d376:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d378:	4798      	blx	r3
 800d37a:	e7f3      	b.n	800d364 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800d37c:	6823      	ldr	r3, [r4, #0]
 800d37e:	4620      	mov	r0, r4
 800d380:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d382:	4798      	blx	r3
 800d384:	e7e6      	b.n	800d354 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800d386:	bf00      	nop
 800d388:	0801dbc5 	.word	0x0801dbc5
 800d38c:	0801dcd4 	.word	0x0801dcd4
 800d390:	0801dbea 	.word	0x0801dbea

0800d394 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800d394:	b570      	push	{r4, r5, r6, lr}
 800d396:	4604      	mov	r4, r0
 800d398:	460e      	mov	r6, r1
 800d39a:	6860      	ldr	r0, [r4, #4]
 800d39c:	6803      	ldr	r3, [r0, #0]
 800d39e:	685b      	ldr	r3, [r3, #4]
 800d3a0:	4798      	blx	r3
 800d3a2:	2800      	cmp	r0, #0
 800d3a4:	d1f9      	bne.n	800d39a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800d3a6:	4d0b      	ldr	r5, [pc, #44]	; (800d3d4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x40>)
 800d3a8:	6828      	ldr	r0, [r5, #0]
 800d3aa:	6803      	ldr	r3, [r0, #0]
 800d3ac:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d3ae:	4798      	blx	r3
 800d3b0:	f7fd fc58 	bl	800ac64 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800d3b4:	6860      	ldr	r0, [r4, #4]
 800d3b6:	6803      	ldr	r3, [r0, #0]
 800d3b8:	4631      	mov	r1, r6
 800d3ba:	689b      	ldr	r3, [r3, #8]
 800d3bc:	4798      	blx	r3
 800d3be:	6823      	ldr	r3, [r4, #0]
 800d3c0:	4620      	mov	r0, r4
 800d3c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d3c4:	4798      	blx	r3
 800d3c6:	6828      	ldr	r0, [r5, #0]
 800d3c8:	6803      	ldr	r3, [r0, #0]
 800d3ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d3ce:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800d3d0:	4718      	bx	r3
 800d3d2:	bf00      	nop
 800d3d4:	20026900 	.word	0x20026900

0800d3d8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800d3d8:	b508      	push	{r3, lr}
 800d3da:	f7fd fc21 	bl	800ac20 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800d3de:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d3e2:	f7fd bc33 	b.w	800ac4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800d3e6 <_ZN8touchgfx13DMA_Interface5startEv>:
 800d3e6:	b510      	push	{r4, lr}
 800d3e8:	4604      	mov	r4, r0
 800d3ea:	6840      	ldr	r0, [r0, #4]
 800d3ec:	6803      	ldr	r3, [r0, #0]
 800d3ee:	681b      	ldr	r3, [r3, #0]
 800d3f0:	4798      	blx	r3
 800d3f2:	b948      	cbnz	r0, 800d408 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d3f4:	7a63      	ldrb	r3, [r4, #9]
 800d3f6:	b13b      	cbz	r3, 800d408 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d3f8:	7a23      	ldrb	r3, [r4, #8]
 800d3fa:	b92b      	cbnz	r3, 800d408 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d3fc:	6823      	ldr	r3, [r4, #0]
 800d3fe:	4620      	mov	r0, r4
 800d400:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d402:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d406:	4718      	bx	r3
 800d408:	bd10      	pop	{r4, pc}
	...

0800d40c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800d40c:	b510      	push	{r4, lr}
 800d40e:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800d412:	1b12      	subs	r2, r2, r4
 800d414:	2a00      	cmp	r2, #0
 800d416:	bfdc      	itt	le
 800d418:	6883      	ldrle	r3, [r0, #8]
 800d41a:	18d2      	addle	r2, r2, r3
 800d41c:	2a01      	cmp	r2, #1
 800d41e:	dd18      	ble.n	800d452 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800d420:	6843      	ldr	r3, [r0, #4]
 800d422:	f101 021c 	add.w	r2, r1, #28
 800d426:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800d42a:	f851 4b04 	ldr.w	r4, [r1], #4
 800d42e:	f843 4b04 	str.w	r4, [r3], #4
 800d432:	4291      	cmp	r1, r2
 800d434:	d1f9      	bne.n	800d42a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800d436:	880a      	ldrh	r2, [r1, #0]
 800d438:	801a      	strh	r2, [r3, #0]
 800d43a:	788a      	ldrb	r2, [r1, #2]
 800d43c:	709a      	strb	r2, [r3, #2]
 800d43e:	68c3      	ldr	r3, [r0, #12]
 800d440:	6882      	ldr	r2, [r0, #8]
 800d442:	f3bf 8f5b 	dmb	ish
 800d446:	3301      	adds	r3, #1
 800d448:	429a      	cmp	r2, r3
 800d44a:	bfd8      	it	le
 800d44c:	1a9b      	suble	r3, r3, r2
 800d44e:	60c3      	str	r3, [r0, #12]
 800d450:	bd10      	pop	{r4, pc}
 800d452:	4b03      	ldr	r3, [pc, #12]	; (800d460 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800d454:	4a03      	ldr	r2, [pc, #12]	; (800d464 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800d456:	4804      	ldr	r0, [pc, #16]	; (800d468 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800d458:	2139      	movs	r1, #57	; 0x39
 800d45a:	f00d ff09 	bl	801b270 <__assert_func>
 800d45e:	bf00      	nop
 800d460:	0801dc10 	.word	0x0801dc10
 800d464:	0801dd04 	.word	0x0801dd04
 800d468:	0801dbea 	.word	0x0801dbea

0800d46c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800d46c:	b510      	push	{r4, lr}
 800d46e:	6803      	ldr	r3, [r0, #0]
 800d470:	681b      	ldr	r3, [r3, #0]
 800d472:	4604      	mov	r4, r0
 800d474:	4798      	blx	r3
 800d476:	b128      	cbz	r0, 800d484 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800d478:	4b07      	ldr	r3, [pc, #28]	; (800d498 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800d47a:	4a08      	ldr	r2, [pc, #32]	; (800d49c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800d47c:	4808      	ldr	r0, [pc, #32]	; (800d4a0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800d47e:	213f      	movs	r1, #63	; 0x3f
 800d480:	f00d fef6 	bl	801b270 <__assert_func>
 800d484:	6923      	ldr	r3, [r4, #16]
 800d486:	68a2      	ldr	r2, [r4, #8]
 800d488:	f3bf 8f5b 	dmb	ish
 800d48c:	3301      	adds	r3, #1
 800d48e:	429a      	cmp	r2, r3
 800d490:	bfd8      	it	le
 800d492:	1a9b      	suble	r3, r3, r2
 800d494:	6123      	str	r3, [r4, #16]
 800d496:	bd10      	pop	{r4, pc}
 800d498:	0801dc33 	.word	0x0801dc33
 800d49c:	0801dd52 	.word	0x0801dd52
 800d4a0:	0801dbea 	.word	0x0801dbea

0800d4a4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800d4a4:	b570      	push	{r4, r5, r6, lr}
 800d4a6:	4604      	mov	r4, r0
 800d4a8:	6840      	ldr	r0, [r0, #4]
 800d4aa:	6803      	ldr	r3, [r0, #0]
 800d4ac:	681b      	ldr	r3, [r3, #0]
 800d4ae:	4798      	blx	r3
 800d4b0:	4605      	mov	r5, r0
 800d4b2:	b930      	cbnz	r0, 800d4c2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d4b4:	7a23      	ldrb	r3, [r4, #8]
 800d4b6:	b123      	cbz	r3, 800d4c2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d4b8:	6860      	ldr	r0, [r4, #4]
 800d4ba:	6803      	ldr	r3, [r0, #0]
 800d4bc:	695b      	ldr	r3, [r3, #20]
 800d4be:	4798      	blx	r3
 800d4c0:	7225      	strb	r5, [r4, #8]
 800d4c2:	6860      	ldr	r0, [r4, #4]
 800d4c4:	6803      	ldr	r3, [r0, #0]
 800d4c6:	681b      	ldr	r3, [r3, #0]
 800d4c8:	4798      	blx	r3
 800d4ca:	b928      	cbnz	r0, 800d4d8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800d4cc:	6823      	ldr	r3, [r4, #0]
 800d4ce:	4620      	mov	r0, r4
 800d4d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d4d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d4d6:	4718      	bx	r3
 800d4d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d4dc:	f7fd bbce 	b.w	800ac7c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800d4e0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800d4e0:	b510      	push	{r4, lr}
 800d4e2:	4c04      	ldr	r4, [pc, #16]	; (800d4f4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800d4e4:	6082      	str	r2, [r0, #8]
 800d4e6:	2200      	movs	r2, #0
 800d4e8:	e9c0 4100 	strd	r4, r1, [r0]
 800d4ec:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800d4f0:	bd10      	pop	{r4, pc}
 800d4f2:	bf00      	nop
 800d4f4:	0801dcb8 	.word	0x0801dcb8

0800d4f8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800d4f8:	6840      	ldr	r0, [r0, #4]
 800d4fa:	6803      	ldr	r3, [r0, #0]
 800d4fc:	681b      	ldr	r3, [r3, #0]
 800d4fe:	4718      	bx	r3

0800d500 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800d500:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800d504:	4770      	bx	lr

0800d506 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800d506:	b570      	push	{r4, r5, r6, lr}
 800d508:	790b      	ldrb	r3, [r1, #4]
 800d50a:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800d50e:	2b00      	cmp	r3, #0
 800d510:	bf0c      	ite	eq
 800d512:	2301      	moveq	r3, #1
 800d514:	2300      	movne	r3, #0
 800d516:	4604      	mov	r4, r0
 800d518:	460e      	mov	r6, r1
 800d51a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800d51e:	d110      	bne.n	800d542 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800d520:	b185      	cbz	r5, 800d544 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3e>
 800d522:	7933      	ldrb	r3, [r6, #4]
 800d524:	2b01      	cmp	r3, #1
 800d526:	d113      	bne.n	800d550 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800d528:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d52a:	b188      	cbz	r0, 800d550 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800d52c:	6803      	ldr	r3, [r0, #0]
 800d52e:	68db      	ldr	r3, [r3, #12]
 800d530:	4798      	blx	r3
 800d532:	b168      	cbz	r0, 800d550 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800d534:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d536:	6803      	ldr	r3, [r0, #0]
 800d538:	4621      	mov	r1, r4
 800d53a:	689b      	ldr	r3, [r3, #8]
 800d53c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d540:	4718      	bx	r3
 800d542:	b12d      	cbz	r5, 800d550 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800d544:	6823      	ldr	r3, [r4, #0]
 800d546:	4620      	mov	r0, r4
 800d548:	695b      	ldr	r3, [r3, #20]
 800d54a:	4798      	blx	r3
 800d54c:	2d00      	cmp	r5, #0
 800d54e:	d1e8      	bne.n	800d522 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800d550:	bd70      	pop	{r4, r5, r6, pc}

0800d552 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800d552:	b538      	push	{r3, r4, r5, lr}
 800d554:	880b      	ldrh	r3, [r1, #0]
 800d556:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800d558:	4605      	mov	r5, r0
 800d55a:	8813      	ldrh	r3, [r2, #0]
 800d55c:	f825 3f30 	strh.w	r3, [r5, #48]!
 800d560:	4604      	mov	r4, r0
 800d562:	4628      	mov	r0, r5
 800d564:	f002 f9cc 	bl	800f900 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d568:	8120      	strh	r0, [r4, #8]
 800d56a:	4628      	mov	r0, r5
 800d56c:	f002 fa02 	bl	800f974 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d570:	8160      	strh	r0, [r4, #10]
 800d572:	bd38      	pop	{r3, r4, r5, pc}

0800d574 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800d574:	b510      	push	{r4, lr}
 800d576:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800d57a:	2bff      	cmp	r3, #255	; 0xff
 800d57c:	4604      	mov	r4, r0
 800d57e:	d006      	beq.n	800d58e <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800d580:	2300      	movs	r3, #0
 800d582:	8003      	strh	r3, [r0, #0]
 800d584:	8043      	strh	r3, [r0, #2]
 800d586:	8083      	strh	r3, [r0, #4]
 800d588:	80c3      	strh	r3, [r0, #6]
 800d58a:	4620      	mov	r0, r4
 800d58c:	bd10      	pop	{r4, pc}
 800d58e:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800d592:	b11b      	cbz	r3, 800d59c <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800d594:	3130      	adds	r1, #48	; 0x30
 800d596:	f002 fa27 	bl	800f9e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d59a:	e7f6      	b.n	800d58a <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800d59c:	312e      	adds	r1, #46	; 0x2e
 800d59e:	e7fa      	b.n	800d596 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800d5a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800d5a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d5a4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d5a8:	b08b      	sub	sp, #44	; 0x2c
 800d5aa:	4604      	mov	r4, r0
 800d5ac:	4689      	mov	r9, r1
 800d5ae:	2b00      	cmp	r3, #0
 800d5b0:	d043      	beq.n	800d63a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9a>
 800d5b2:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d5b4:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d5b8:	a805      	add	r0, sp, #20
 800d5ba:	f002 f9a1 	bl	800f900 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d5be:	4607      	mov	r7, r0
 800d5c0:	fa0f f880 	sxth.w	r8, r0
 800d5c4:	a805      	add	r0, sp, #20
 800d5c6:	f002 f9d5 	bl	800f974 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d5ca:	f9b9 6000 	ldrsh.w	r6, [r9]
 800d5ce:	f8b9 2004 	ldrh.w	r2, [r9, #4]
 800d5d2:	4432      	add	r2, r6
 800d5d4:	b292      	uxth	r2, r2
 800d5d6:	2300      	movs	r3, #0
 800d5d8:	fa0f fe82 	sxth.w	lr, r2
 800d5dc:	459e      	cmp	lr, r3
 800d5de:	fa0f fc80 	sxth.w	ip, r0
 800d5e2:	9306      	str	r3, [sp, #24]
 800d5e4:	dd2b      	ble.n	800d63e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800d5e6:	45b0      	cmp	r8, r6
 800d5e8:	dd29      	ble.n	800d63e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800d5ea:	f9b9 5002 	ldrsh.w	r5, [r9, #2]
 800d5ee:	f8b9 3006 	ldrh.w	r3, [r9, #6]
 800d5f2:	442b      	add	r3, r5
 800d5f4:	b29b      	uxth	r3, r3
 800d5f6:	b219      	sxth	r1, r3
 800d5f8:	2900      	cmp	r1, #0
 800d5fa:	dd20      	ble.n	800d63e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800d5fc:	45ac      	cmp	ip, r5
 800d5fe:	dd1e      	ble.n	800d63e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800d600:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800d604:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800d608:	45f0      	cmp	r8, lr
 800d60a:	bfb8      	it	lt
 800d60c:	463a      	movlt	r2, r7
 800d60e:	458c      	cmp	ip, r1
 800d610:	bfb8      	it	lt
 800d612:	4603      	movlt	r3, r0
 800d614:	1b92      	subs	r2, r2, r6
 800d616:	1b5b      	subs	r3, r3, r5
 800d618:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d61c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d620:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d624:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d628:	4b1d      	ldr	r3, [pc, #116]	; (800d6a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>)
 800d62a:	681b      	ldr	r3, [r3, #0]
 800d62c:	b953      	cbnz	r3, 800d644 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa4>
 800d62e:	4b1d      	ldr	r3, [pc, #116]	; (800d6a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x104>)
 800d630:	4a1d      	ldr	r2, [pc, #116]	; (800d6a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800d632:	481e      	ldr	r0, [pc, #120]	; (800d6ac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800d634:	21b8      	movs	r1, #184	; 0xb8
 800d636:	f00d fe1b 	bl	801b270 <__assert_func>
 800d63a:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d63c:	e7ba      	b.n	800d5b4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800d63e:	2300      	movs	r3, #0
 800d640:	9307      	str	r3, [sp, #28]
 800d642:	e7f1      	b.n	800d628 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x88>
 800d644:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d648:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d64c:	429a      	cmp	r2, r3
 800d64e:	d024      	beq.n	800d69a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xfa>
 800d650:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d654:	b30b      	cbz	r3, 800d69a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xfa>
 800d656:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d65a:	b1f3      	cbz	r3, 800d69a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xfa>
 800d65c:	2300      	movs	r3, #0
 800d65e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800d662:	6823      	ldr	r3, [r4, #0]
 800d664:	a908      	add	r1, sp, #32
 800d666:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d668:	4620      	mov	r0, r4
 800d66a:	4798      	blx	r3
 800d66c:	4b10      	ldr	r3, [pc, #64]	; (800d6b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800d66e:	681b      	ldr	r3, [r3, #0]
 800d670:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d674:	b10a      	cbz	r2, 800d67a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d676:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d678:	b900      	cbnz	r0, 800d67c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xdc>
 800d67a:	6898      	ldr	r0, [r3, #8]
 800d67c:	6801      	ldr	r1, [r0, #0]
 800d67e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d682:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800d686:	2501      	movs	r5, #1
 800d688:	9502      	str	r5, [sp, #8]
 800d68a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800d68e:	9401      	str	r4, [sp, #4]
 800d690:	ac06      	add	r4, sp, #24
 800d692:	9400      	str	r4, [sp, #0]
 800d694:	68cc      	ldr	r4, [r1, #12]
 800d696:	a905      	add	r1, sp, #20
 800d698:	47a0      	blx	r4
 800d69a:	b00b      	add	sp, #44	; 0x2c
 800d69c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d6a0:	200269a8 	.word	0x200269a8
 800d6a4:	0801ddf0 	.word	0x0801ddf0
 800d6a8:	0801dec4 	.word	0x0801dec4
 800d6ac:	0801de2c 	.word	0x0801de2c
 800d6b0:	20026900 	.word	0x20026900

0800d6b4 <_ZN8touchgfx3LCD4initEv>:
 800d6b4:	4770      	bx	lr

0800d6b6 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800d6b6:	2000      	movs	r0, #0
 800d6b8:	4770      	bx	lr

0800d6ba <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800d6ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6be:	b091      	sub	sp, #68	; 0x44
 800d6c0:	4699      	mov	r9, r3
 800d6c2:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800d6c6:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800d6c8:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800d6cc:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d6d0:	4680      	mov	r8, r0
 800d6d2:	4617      	mov	r7, r2
 800d6d4:	a80e      	add	r0, sp, #56	; 0x38
 800d6d6:	f9ba 2008 	ldrsh.w	r2, [sl, #8]
 800d6da:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800d6de:	2500      	movs	r5, #0
 800d6e0:	910d      	str	r1, [sp, #52]	; 0x34
 800d6e2:	950e      	str	r5, [sp, #56]	; 0x38
 800d6e4:	f000 f9fa 	bl	800dadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d6e8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800d6ea:	f8d9 6000 	ldr.w	r6, [r9]
 800d6ee:	6818      	ldr	r0, [r3, #0]
 800d6f0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800d6f2:	f9b4 b000 	ldrsh.w	fp, [r4]
 800d6f6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d6fa:	eb02 0c06 	add.w	ip, r2, r6
 800d6fe:	1b80      	subs	r0, r0, r6
 800d700:	ebab 0e0c 	sub.w	lr, fp, ip
 800d704:	4570      	cmp	r0, lr
 800d706:	f340 80bd 	ble.w	800d884 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800d70a:	88a1      	ldrh	r1, [r4, #4]
 800d70c:	4459      	add	r1, fp
 800d70e:	b209      	sxth	r1, r1
 800d710:	458c      	cmp	ip, r1
 800d712:	f300 80b7 	bgt.w	800d884 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800d716:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 800d71a:	ed97 4a09 	vldr	s8, [r7, #36]	; 0x24
 800d71e:	edd7 4a0b 	vldr	s9, [r7, #44]	; 0x2c
 800d722:	edd9 6a07 	vldr	s13, [r9, #28]
 800d726:	edd9 1a0a 	vldr	s3, [r9, #40]	; 0x28
 800d72a:	ed99 2a0d 	vldr	s4, [r9, #52]	; 0x34
 800d72e:	4283      	cmp	r3, r0
 800d730:	bfa8      	it	ge
 800d732:	4603      	movge	r3, r0
 800d734:	ee07 3a90 	vmov	s15, r3
 800d738:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800d73c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800d740:	ee25 4a04 	vmul.f32	s8, s10, s8
 800d744:	ee65 4a24 	vmul.f32	s9, s10, s9
 800d748:	ee25 5a27 	vmul.f32	s10, s10, s15
 800d74c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800d750:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800d754:	45e3      	cmp	fp, ip
 800d756:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800d75a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800d75e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800d762:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d766:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d76a:	f340 808e 	ble.w	800d88a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1d0>
 800d76e:	fb9e f5f3 	sdiv	r5, lr, r3
 800d772:	ee07 5a10 	vmov	s14, r5
 800d776:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d77a:	2d00      	cmp	r5, #0
 800d77c:	fb03 e415 	mls	r4, r3, r5, lr
 800d780:	eea7 0a04 	vfma.f32	s0, s14, s8
 800d784:	eee7 0a24 	vfma.f32	s1, s14, s9
 800d788:	eea7 1a05 	vfma.f32	s2, s14, s10
 800d78c:	dd13      	ble.n	800d7b6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800d78e:	ee70 6a44 	vsub.f32	s13, s0, s8
 800d792:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800d796:	eef5 6a40 	vcmp.f32	s13, #0.0
 800d79a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d79e:	bf18      	it	ne
 800d7a0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800d7a4:	ee31 2a45 	vsub.f32	s4, s2, s10
 800d7a8:	bf08      	it	eq
 800d7aa:	eeb0 7a67 	vmoveq.f32	s14, s15
 800d7ae:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d7b2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d7b6:	fb05 f703 	mul.w	r7, r5, r3
 800d7ba:	1bc0      	subs	r0, r0, r7
 800d7bc:	443e      	add	r6, r7
 800d7be:	1997      	adds	r7, r2, r6
 800d7c0:	4407      	add	r7, r0
 800d7c2:	42b9      	cmp	r1, r7
 800d7c4:	bfbc      	itt	lt
 800d7c6:	1a88      	sublt	r0, r1, r2
 800d7c8:	1b80      	sublt	r0, r0, r6
 800d7ca:	2800      	cmp	r0, #0
 800d7cc:	dd5a      	ble.n	800d884 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800d7ce:	fb90 f1f3 	sdiv	r1, r0, r3
 800d7d2:	fb03 0211 	mls	r2, r3, r1, r0
 800d7d6:	b90a      	cbnz	r2, 800d7dc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x122>
 800d7d8:	3901      	subs	r1, #1
 800d7da:	461a      	mov	r2, r3
 800d7dc:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800d7e0:	f89d b07c 	ldrb.w	fp, [sp, #124]	; 0x7c
 800d7e4:	44a4      	add	ip, r4
 800d7e6:	fb03 c505 	mla	r5, r3, r5, ip
 800d7ea:	2900      	cmp	r1, #0
 800d7ec:	bfcc      	ite	gt
 800d7ee:	469e      	movgt	lr, r3
 800d7f0:	4696      	movle	lr, r2
 800d7f2:	eef0 6a42 	vmov.f32	s13, s4
 800d7f6:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800d7fa:	ee21 3a23 	vmul.f32	s6, s2, s7
 800d7fe:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800d802:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800d806:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d80a:	eeb0 7a61 	vmov.f32	s14, s3
 800d80e:	ee17 0a90 	vmov	r0, s15
 800d812:	ee73 7a42 	vsub.f32	s15, s6, s4
 800d816:	fb90 f6f3 	sdiv	r6, r0, r3
 800d81a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d81e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800d822:	ee17 0a90 	vmov	r0, s15
 800d826:	fb90 f7f3 	sdiv	r7, r0, r3
 800d82a:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800d82e:	900c      	str	r0, [sp, #48]	; 0x30
 800d830:	f8d0 8000 	ldr.w	r8, [r0]
 800d834:	981c      	ldr	r0, [sp, #112]	; 0x70
 800d836:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 800d83a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 800d83e:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800d842:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 800d846:	f8cd a020 	str.w	sl, [sp, #32]
 800d84a:	f9b0 a002 	ldrsh.w	sl, [r0, #2]
 800d84e:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d850:	f8d9 9014 	ldr.w	r9, [r9, #20]
 800d854:	9603      	str	r6, [sp, #12]
 800d856:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800d85a:	ee16 0a90 	vmov	r0, s13
 800d85e:	fb07 0704 	mla	r7, r7, r4, r0
 800d862:	ee17 0a10 	vmov	r0, s14
 800d866:	fb06 0604 	mla	r6, r6, r4, r0
 800d86a:	e9cd 3600 	strd	r3, r6, [sp]
 800d86e:	44ca      	add	sl, r9
 800d870:	f8cd a01c 	str.w	sl, [sp, #28]
 800d874:	9506      	str	r5, [sp, #24]
 800d876:	9702      	str	r7, [sp, #8]
 800d878:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800d87c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d87e:	ebae 0304 	sub.w	r3, lr, r4
 800d882:	47a8      	blx	r5
 800d884:	b011      	add	sp, #68	; 0x44
 800d886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d88a:	462c      	mov	r4, r5
 800d88c:	e797      	b.n	800d7be <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x104>

0800d88e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800d88e:	b510      	push	{r4, lr}
 800d890:	2b02      	cmp	r3, #2
 800d892:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d896:	d00b      	beq.n	800d8b0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800d898:	2b03      	cmp	r3, #3
 800d89a:	d00e      	beq.n	800d8ba <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800d89c:	2b01      	cmp	r3, #1
 800d89e:	d001      	beq.n	800d8a4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800d8a0:	1860      	adds	r0, r4, r1
 800d8a2:	bd10      	pop	{r4, pc}
 800d8a4:	8880      	ldrh	r0, [r0, #4]
 800d8a6:	4420      	add	r0, r4
 800d8a8:	b200      	sxth	r0, r0
 800d8aa:	1a80      	subs	r0, r0, r2
 800d8ac:	3801      	subs	r0, #1
 800d8ae:	e7f8      	b.n	800d8a2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800d8b0:	8880      	ldrh	r0, [r0, #4]
 800d8b2:	4420      	add	r0, r4
 800d8b4:	b200      	sxth	r0, r0
 800d8b6:	1a40      	subs	r0, r0, r1
 800d8b8:	e7f8      	b.n	800d8ac <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800d8ba:	18a0      	adds	r0, r4, r2
 800d8bc:	e7f1      	b.n	800d8a2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800d8be <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800d8be:	b510      	push	{r4, lr}
 800d8c0:	2b02      	cmp	r3, #2
 800d8c2:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800d8c6:	d006      	beq.n	800d8d6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800d8c8:	2b03      	cmp	r3, #3
 800d8ca:	d00a      	beq.n	800d8e2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800d8cc:	2b01      	cmp	r3, #1
 800d8ce:	bf14      	ite	ne
 800d8d0:	18a0      	addne	r0, r4, r2
 800d8d2:	1860      	addeq	r0, r4, r1
 800d8d4:	bd10      	pop	{r4, pc}
 800d8d6:	88c0      	ldrh	r0, [r0, #6]
 800d8d8:	4420      	add	r0, r4
 800d8da:	b200      	sxth	r0, r0
 800d8dc:	1a80      	subs	r0, r0, r2
 800d8de:	3801      	subs	r0, #1
 800d8e0:	e7f8      	b.n	800d8d4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800d8e2:	88c0      	ldrh	r0, [r0, #6]
 800d8e4:	4420      	add	r0, r4
 800d8e6:	b200      	sxth	r0, r0
 800d8e8:	1a40      	subs	r0, r0, r1
 800d8ea:	e7f8      	b.n	800d8de <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

0800d8ec <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800d8ec:	4b01      	ldr	r3, [pc, #4]	; (800d8f4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800d8ee:	2200      	movs	r2, #0
 800d8f0:	601a      	str	r2, [r3, #0]
 800d8f2:	4770      	bx	lr
 800d8f4:	20026908 	.word	0x20026908

0800d8f8 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>:
 800d8f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d8fa:	e9dd e405 	ldrd	lr, r4, [sp, #20]
 800d8fe:	1e05      	subs	r5, r0, #0
 800d900:	bfba      	itte	lt
 800d902:	f04f 37ff 	movlt.w	r7, #4294967295
 800d906:	426d      	neglt	r5, r5
 800d908:	2701      	movge	r7, #1
 800d90a:	f1be 0f00 	cmp.w	lr, #0
 800d90e:	bfb8      	it	lt
 800d910:	f1ce 0e00 	rsblt	lr, lr, #0
 800d914:	f04f 0601 	mov.w	r6, #1
 800d918:	fa4e f001 	asr.w	r0, lr, r1
 800d91c:	fa06 f101 	lsl.w	r1, r6, r1
 800d920:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800d924:	f101 31ff 	add.w	r1, r1, #4294967295
 800d928:	ea01 010e 	and.w	r1, r1, lr
 800d92c:	bfb8      	it	lt
 800d92e:	427f      	neglt	r7, r7
 800d930:	434d      	muls	r5, r1
 800d932:	2c00      	cmp	r4, #0
 800d934:	f8dc 1000 	ldr.w	r1, [ip]
 800d938:	bfb8      	it	lt
 800d93a:	4264      	neglt	r4, r4
 800d93c:	fb03 1300 	mla	r3, r3, r0, r1
 800d940:	fb95 f1f4 	sdiv	r1, r5, r4
 800d944:	fb04 5511 	mls	r5, r4, r1, r5
 800d948:	441d      	add	r5, r3
 800d94a:	fb95 f3f4 	sdiv	r3, r5, r4
 800d94e:	fb04 5413 	mls	r4, r4, r3, r5
 800d952:	4419      	add	r1, r3
 800d954:	bfb8      	it	lt
 800d956:	427f      	neglt	r7, r7
 800d958:	fb02 1000 	mla	r0, r2, r0, r1
 800d95c:	f8cc 4000 	str.w	r4, [ip]
 800d960:	4378      	muls	r0, r7
 800d962:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d964 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800d964:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d968:	4c24      	ldr	r4, [pc, #144]	; (800d9fc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x98>)
 800d96a:	6807      	ldr	r7, [r0, #0]
 800d96c:	69a3      	ldr	r3, [r4, #24]
 800d96e:	b086      	sub	sp, #24
 800d970:	4605      	mov	r5, r0
 800d972:	b92b      	cbnz	r3, 800d980 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1c>
 800d974:	6840      	ldr	r0, [r0, #4]
 800d976:	e9c5 7000 	strd	r7, r0, [r5]
 800d97a:	b006      	add	sp, #24
 800d97c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d980:	68a2      	ldr	r2, [r4, #8]
 800d982:	6820      	ldr	r0, [r4, #0]
 800d984:	ae06      	add	r6, sp, #24
 800d986:	f04f 0802 	mov.w	r8, #2
 800d98a:	fb93 f1f8 	sdiv	r1, r3, r8
 800d98e:	440a      	add	r2, r1
 800d990:	f846 2d04 	str.w	r2, [r6, #-4]!
 800d994:	69e1      	ldr	r1, [r4, #28]
 800d996:	9700      	str	r7, [sp, #0]
 800d998:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800d99c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d99e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d9a0:	f7ff ffaa 	bl	800d8f8 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800d9a4:	69a3      	ldr	r3, [r4, #24]
 800d9a6:	9301      	str	r3, [sp, #4]
 800d9a8:	686b      	ldr	r3, [r5, #4]
 800d9aa:	9300      	str	r3, [sp, #0]
 800d9ac:	4607      	mov	r7, r0
 800d9ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800d9b0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800d9b2:	6a21      	ldr	r1, [r4, #32]
 800d9b4:	9602      	str	r6, [sp, #8]
 800d9b6:	6860      	ldr	r0, [r4, #4]
 800d9b8:	f7ff ff9e 	bl	800d8f8 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800d9bc:	6963      	ldr	r3, [r4, #20]
 800d9be:	69a2      	ldr	r2, [r4, #24]
 800d9c0:	fb92 f8f8 	sdiv	r8, r2, r8
 800d9c4:	4443      	add	r3, r8
 800d9c6:	9305      	str	r3, [sp, #20]
 800d9c8:	682b      	ldr	r3, [r5, #0]
 800d9ca:	9300      	str	r3, [sp, #0]
 800d9cc:	e9cd 2601 	strd	r2, r6, [sp, #4]
 800d9d0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d9d2:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800d9d4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800d9d6:	4407      	add	r7, r0
 800d9d8:	68e0      	ldr	r0, [r4, #12]
 800d9da:	f7ff ff8d 	bl	800d8f8 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800d9de:	69a3      	ldr	r3, [r4, #24]
 800d9e0:	9301      	str	r3, [sp, #4]
 800d9e2:	686b      	ldr	r3, [r5, #4]
 800d9e4:	9300      	str	r3, [sp, #0]
 800d9e6:	4680      	mov	r8, r0
 800d9e8:	9602      	str	r6, [sp, #8]
 800d9ea:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800d9ec:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d9ee:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800d9f0:	6920      	ldr	r0, [r4, #16]
 800d9f2:	f7ff ff81 	bl	800d8f8 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800d9f6:	4440      	add	r0, r8
 800d9f8:	e7bd      	b.n	800d976 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800d9fa:	bf00      	nop
 800d9fc:	2002690c 	.word	0x2002690c

0800da00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800da00:	b510      	push	{r4, lr}
 800da02:	4b07      	ldr	r3, [pc, #28]	; (800da20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800da04:	781b      	ldrb	r3, [r3, #0]
 800da06:	2b01      	cmp	r3, #1
 800da08:	d108      	bne.n	800da1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800da0a:	4b06      	ldr	r3, [pc, #24]	; (800da24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800da0c:	880c      	ldrh	r4, [r1, #0]
 800da0e:	881b      	ldrh	r3, [r3, #0]
 800da10:	f9b0 2000 	ldrsh.w	r2, [r0]
 800da14:	3b01      	subs	r3, #1
 800da16:	1b1b      	subs	r3, r3, r4
 800da18:	8003      	strh	r3, [r0, #0]
 800da1a:	800a      	strh	r2, [r1, #0]
 800da1c:	bd10      	pop	{r4, pc}
 800da1e:	bf00      	nop
 800da20:	200268f8 	.word	0x200268f8
 800da24:	200268fc 	.word	0x200268fc

0800da28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800da28:	b510      	push	{r4, lr}
 800da2a:	4b0a      	ldr	r3, [pc, #40]	; (800da54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800da2c:	781b      	ldrb	r3, [r3, #0]
 800da2e:	2b01      	cmp	r3, #1
 800da30:	d10e      	bne.n	800da50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800da32:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800da36:	8843      	ldrh	r3, [r0, #2]
 800da38:	f9b0 4000 	ldrsh.w	r4, [r0]
 800da3c:	8044      	strh	r4, [r0, #2]
 800da3e:	18ca      	adds	r2, r1, r3
 800da40:	4b05      	ldr	r3, [pc, #20]	; (800da58 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800da42:	881b      	ldrh	r3, [r3, #0]
 800da44:	1a9b      	subs	r3, r3, r2
 800da46:	8003      	strh	r3, [r0, #0]
 800da48:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800da4c:	80c3      	strh	r3, [r0, #6]
 800da4e:	8081      	strh	r1, [r0, #4]
 800da50:	bd10      	pop	{r4, pc}
 800da52:	bf00      	nop
 800da54:	200268f8 	.word	0x200268f8
 800da58:	200268f4 	.word	0x200268f4

0800da5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800da5c:	b510      	push	{r4, lr}
 800da5e:	4b07      	ldr	r3, [pc, #28]	; (800da7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800da60:	781b      	ldrb	r3, [r3, #0]
 800da62:	2b01      	cmp	r3, #1
 800da64:	d108      	bne.n	800da78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800da66:	f9b1 3000 	ldrsh.w	r3, [r1]
 800da6a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800da6e:	8003      	strh	r3, [r0, #0]
 800da70:	8893      	ldrh	r3, [r2, #4]
 800da72:	3b01      	subs	r3, #1
 800da74:	1b1b      	subs	r3, r3, r4
 800da76:	800b      	strh	r3, [r1, #0]
 800da78:	bd10      	pop	{r4, pc}
 800da7a:	bf00      	nop
 800da7c:	200268f8 	.word	0x200268f8

0800da80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800da80:	b513      	push	{r0, r1, r4, lr}
 800da82:	4b08      	ldr	r3, [pc, #32]	; (800daa4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800da84:	f9b3 2000 	ldrsh.w	r2, [r3]
 800da88:	4b07      	ldr	r3, [pc, #28]	; (800daa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800da8a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800da8e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800da92:	f8ad 3006 	strh.w	r3, [sp, #6]
 800da96:	2400      	movs	r4, #0
 800da98:	466a      	mov	r2, sp
 800da9a:	9400      	str	r4, [sp, #0]
 800da9c:	f7ff ffde 	bl	800da5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800daa0:	b002      	add	sp, #8
 800daa2:	bd10      	pop	{r4, pc}
 800daa4:	200268f4 	.word	0x200268f4
 800daa8:	200268f6 	.word	0x200268f6

0800daac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800daac:	b510      	push	{r4, lr}
 800daae:	4b0a      	ldr	r3, [pc, #40]	; (800dad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800dab0:	781b      	ldrb	r3, [r3, #0]
 800dab2:	2b01      	cmp	r3, #1
 800dab4:	460a      	mov	r2, r1
 800dab6:	d10d      	bne.n	800dad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800dab8:	8881      	ldrh	r1, [r0, #4]
 800daba:	8803      	ldrh	r3, [r0, #0]
 800dabc:	440b      	add	r3, r1
 800dabe:	4601      	mov	r1, r0
 800dac0:	3b01      	subs	r3, #1
 800dac2:	f821 3b02 	strh.w	r3, [r1], #2
 800dac6:	f7ff ffc9 	bl	800da5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800daca:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dace:	88c2      	ldrh	r2, [r0, #6]
 800dad0:	8082      	strh	r2, [r0, #4]
 800dad2:	80c3      	strh	r3, [r0, #6]
 800dad4:	bd10      	pop	{r4, pc}
 800dad6:	bf00      	nop
 800dad8:	200268f8 	.word	0x200268f8

0800dadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800dadc:	b507      	push	{r0, r1, r2, lr}
 800dade:	4b09      	ldr	r3, [pc, #36]	; (800db04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800dae0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dae4:	4b08      	ldr	r3, [pc, #32]	; (800db08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800dae6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800daea:	2100      	movs	r1, #0
 800daec:	f9b3 3000 	ldrsh.w	r3, [r3]
 800daf0:	9100      	str	r1, [sp, #0]
 800daf2:	4669      	mov	r1, sp
 800daf4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800daf8:	f7ff ffd8 	bl	800daac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800dafc:	b003      	add	sp, #12
 800dafe:	f85d fb04 	ldr.w	pc, [sp], #4
 800db02:	bf00      	nop
 800db04:	200268f4 	.word	0x200268f4
 800db08:	200268f6 	.word	0x200268f6

0800db0c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800db0c:	4b03      	ldr	r3, [pc, #12]	; (800db1c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800db0e:	6818      	ldr	r0, [r3, #0]
 800db10:	b110      	cbz	r0, 800db18 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800db12:	6803      	ldr	r3, [r0, #0]
 800db14:	699b      	ldr	r3, [r3, #24]
 800db16:	4718      	bx	r3
 800db18:	4770      	bx	lr
 800db1a:	bf00      	nop
 800db1c:	2002695c 	.word	0x2002695c

0800db20 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800db20:	4770      	bx	lr
	...

0800db24 <_ZN8touchgfx11Application4drawEv>:
 800db24:	b507      	push	{r0, r1, r2, lr}
 800db26:	4b09      	ldr	r3, [pc, #36]	; (800db4c <_ZN8touchgfx11Application4drawEv+0x28>)
 800db28:	f9b3 2000 	ldrsh.w	r2, [r3]
 800db2c:	4b08      	ldr	r3, [pc, #32]	; (800db50 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800db2e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800db32:	f9b3 3000 	ldrsh.w	r3, [r3]
 800db36:	f8ad 3006 	strh.w	r3, [sp, #6]
 800db3a:	6803      	ldr	r3, [r0, #0]
 800db3c:	2100      	movs	r1, #0
 800db3e:	9100      	str	r1, [sp, #0]
 800db40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800db42:	4669      	mov	r1, sp
 800db44:	4798      	blx	r3
 800db46:	b003      	add	sp, #12
 800db48:	f85d fb04 	ldr.w	pc, [sp], #4
 800db4c:	200268f4 	.word	0x200268f4
 800db50:	200268f6 	.word	0x200268f6

0800db54 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800db54:	4b03      	ldr	r3, [pc, #12]	; (800db64 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800db56:	6818      	ldr	r0, [r3, #0]
 800db58:	b110      	cbz	r0, 800db60 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800db5a:	6803      	ldr	r3, [r0, #0]
 800db5c:	69db      	ldr	r3, [r3, #28]
 800db5e:	4718      	bx	r3
 800db60:	4770      	bx	lr
 800db62:	bf00      	nop
 800db64:	2002695c 	.word	0x2002695c

0800db68 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800db68:	4b03      	ldr	r3, [pc, #12]	; (800db78 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800db6a:	6818      	ldr	r0, [r3, #0]
 800db6c:	b110      	cbz	r0, 800db74 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800db6e:	6803      	ldr	r3, [r0, #0]
 800db70:	6a1b      	ldr	r3, [r3, #32]
 800db72:	4718      	bx	r3
 800db74:	4770      	bx	lr
 800db76:	bf00      	nop
 800db78:	2002695c 	.word	0x2002695c

0800db7c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800db7c:	4b03      	ldr	r3, [pc, #12]	; (800db8c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800db7e:	6818      	ldr	r0, [r3, #0]
 800db80:	b110      	cbz	r0, 800db88 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800db82:	6803      	ldr	r3, [r0, #0]
 800db84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800db86:	4718      	bx	r3
 800db88:	4770      	bx	lr
 800db8a:	bf00      	nop
 800db8c:	2002695c 	.word	0x2002695c

0800db90 <_ZN8touchgfx11Application15handleTickEventEv>:
 800db90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800db94:	4d3a      	ldr	r5, [pc, #232]	; (800dc80 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800db96:	4604      	mov	r4, r0
 800db98:	6828      	ldr	r0, [r5, #0]
 800db9a:	b140      	cbz	r0, 800dbae <_ZN8touchgfx11Application15handleTickEventEv+0x1e>
 800db9c:	7a03      	ldrb	r3, [r0, #8]
 800db9e:	b933      	cbnz	r3, 800dbae <_ZN8touchgfx11Application15handleTickEventEv+0x1e>
 800dba0:	f884 312d 	strb.w	r3, [r4, #301]	; 0x12d
 800dba4:	6803      	ldr	r3, [r0, #0]
 800dba6:	689b      	ldr	r3, [r3, #8]
 800dba8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dbac:	4718      	bx	r3
 800dbae:	f894 312d 	ldrb.w	r3, [r4, #301]	; 0x12d
 800dbb2:	b97b      	cbnz	r3, 800dbd4 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800dbb4:	b170      	cbz	r0, 800dbd4 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800dbb6:	7a03      	ldrb	r3, [r0, #8]
 800dbb8:	b163      	cbz	r3, 800dbd4 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800dbba:	4b32      	ldr	r3, [pc, #200]	; (800dc84 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800dbbc:	6818      	ldr	r0, [r3, #0]
 800dbbe:	b110      	cbz	r0, 800dbc6 <_ZN8touchgfx11Application15handleTickEventEv+0x36>
 800dbc0:	6803      	ldr	r3, [r0, #0]
 800dbc2:	691b      	ldr	r3, [r3, #16]
 800dbc4:	4798      	blx	r3
 800dbc6:	6828      	ldr	r0, [r5, #0]
 800dbc8:	6803      	ldr	r3, [r0, #0]
 800dbca:	68db      	ldr	r3, [r3, #12]
 800dbcc:	4798      	blx	r3
 800dbce:	2301      	movs	r3, #1
 800dbd0:	f884 312d 	strb.w	r3, [r4, #301]	; 0x12d
 800dbd4:	2500      	movs	r5, #0
 800dbd6:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800dbda:	42a8      	cmp	r0, r5
 800dbdc:	dd0c      	ble.n	800dbf8 <_ZN8touchgfx11Application15handleTickEventEv+0x68>
 800dbde:	1963      	adds	r3, r4, r5
 800dbe0:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800dbe4:	b132      	cbz	r2, 800dbf4 <_ZN8touchgfx11Application15handleTickEventEv+0x64>
 800dbe6:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800dbea:	4413      	add	r3, r2
 800dbec:	6858      	ldr	r0, [r3, #4]
 800dbee:	6803      	ldr	r3, [r0, #0]
 800dbf0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800dbf2:	4798      	blx	r3
 800dbf4:	3501      	adds	r5, #1
 800dbf6:	e7ee      	b.n	800dbd6 <_ZN8touchgfx11Application15handleTickEventEv+0x46>
 800dbf8:	f5c4 467f 	rsb	r6, r4, #65280	; 0xff00
 800dbfc:	3801      	subs	r0, #1
 800dbfe:	3678      	adds	r6, #120	; 0x78
 800dc00:	f04f 0c00 	mov.w	ip, #0
 800dc04:	1c43      	adds	r3, r0, #1
 800dc06:	d033      	beq.n	800dc70 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800dc08:	1823      	adds	r3, r4, r0
 800dc0a:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800dc0e:	bb6a      	cbnz	r2, 800dc6c <_ZN8touchgfx11Application15handleTickEventEv+0xdc>
 800dc10:	b281      	uxth	r1, r0
 800dc12:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800dc16:	1d25      	adds	r5, r4, #4
 800dc18:	f8d3 9004 	ldr.w	r9, [r3, #4]
 800dc1c:	f8b4 3084 	ldrh.w	r3, [r4, #132]	; 0x84
 800dc20:	4293      	cmp	r3, r2
 800dc22:	dc0a      	bgt.n	800dc3a <_ZN8touchgfx11Application15handleTickEventEv+0xaa>
 800dc24:	f101 0288 	add.w	r2, r1, #136	; 0x88
 800dc28:	4422      	add	r2, r4
 800dc2a:	18b1      	adds	r1, r6, r2
 800dc2c:	b289      	uxth	r1, r1
 800dc2e:	428b      	cmp	r3, r1
 800dc30:	d919      	bls.n	800dc66 <_ZN8touchgfx11Application15handleTickEventEv+0xd6>
 800dc32:	7851      	ldrb	r1, [r2, #1]
 800dc34:	f802 1b01 	strb.w	r1, [r2], #1
 800dc38:	e7f7      	b.n	800dc2a <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 800dc3a:	682f      	ldr	r7, [r5, #0]
 800dc3c:	45b9      	cmp	r9, r7
 800dc3e:	f105 0804 	add.w	r8, r5, #4
 800dc42:	d10d      	bne.n	800dc60 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>
 800dc44:	4696      	mov	lr, r2
 800dc46:	f1be 0f1e 	cmp.w	lr, #30
 800dc4a:	dc06      	bgt.n	800dc5a <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 800dc4c:	f10e 0e01 	add.w	lr, lr, #1
 800dc50:	686f      	ldr	r7, [r5, #4]
 800dc52:	f845 7b04 	str.w	r7, [r5], #4
 800dc56:	4573      	cmp	r3, lr
 800dc58:	dcf5      	bgt.n	800dc46 <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800dc5a:	3b01      	subs	r3, #1
 800dc5c:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 800dc60:	3201      	adds	r2, #1
 800dc62:	4645      	mov	r5, r8
 800dc64:	e7da      	b.n	800dc1c <_ZN8touchgfx11Application15handleTickEventEv+0x8c>
 800dc66:	4423      	add	r3, r4
 800dc68:	f883 c088 	strb.w	ip, [r3, #136]	; 0x88
 800dc6c:	3801      	subs	r0, #1
 800dc6e:	e7c9      	b.n	800dc04 <_ZN8touchgfx11Application15handleTickEventEv+0x74>
 800dc70:	4b04      	ldr	r3, [pc, #16]	; (800dc84 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800dc72:	6818      	ldr	r0, [r3, #0]
 800dc74:	b110      	cbz	r0, 800dc7c <_ZN8touchgfx11Application15handleTickEventEv+0xec>
 800dc76:	6803      	ldr	r3, [r0, #0]
 800dc78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dc7a:	e795      	b.n	800dba8 <_ZN8touchgfx11Application15handleTickEventEv+0x18>
 800dc7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dc80:	20026960 	.word	0x20026960
 800dc84:	2002695c 	.word	0x2002695c

0800dc88 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800dc88:	b570      	push	{r4, r5, r6, lr}
 800dc8a:	4606      	mov	r6, r0
 800dc8c:	460c      	mov	r4, r1
 800dc8e:	b929      	cbnz	r1, 800dc9c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800dc90:	4b0c      	ldr	r3, [pc, #48]	; (800dcc4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800dc92:	4a0d      	ldr	r2, [pc, #52]	; (800dcc8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800dc94:	480d      	ldr	r0, [pc, #52]	; (800dccc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800dc96:	2164      	movs	r1, #100	; 0x64
 800dc98:	f00d faea 	bl	801b270 <__assert_func>
 800dc9c:	4d0c      	ldr	r5, [pc, #48]	; (800dcd0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800dc9e:	2300      	movs	r3, #0
 800dca0:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800dca4:	6828      	ldr	r0, [r5, #0]
 800dca6:	b110      	cbz	r0, 800dcae <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800dca8:	6803      	ldr	r3, [r0, #0]
 800dcaa:	695b      	ldr	r3, [r3, #20]
 800dcac:	4798      	blx	r3
 800dcae:	602c      	str	r4, [r5, #0]
 800dcb0:	6823      	ldr	r3, [r4, #0]
 800dcb2:	4620      	mov	r0, r4
 800dcb4:	68db      	ldr	r3, [r3, #12]
 800dcb6:	4798      	blx	r3
 800dcb8:	6833      	ldr	r3, [r6, #0]
 800dcba:	4630      	mov	r0, r6
 800dcbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dcbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dcc2:	4718      	bx	r3
 800dcc4:	0801df48 	.word	0x0801df48
 800dcc8:	0801e010 	.word	0x0801e010
 800dccc:	0801df52 	.word	0x0801df52
 800dcd0:	2002695c 	.word	0x2002695c

0800dcd4 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800dcd4:	b510      	push	{r4, lr}
 800dcd6:	f9b1 4000 	ldrsh.w	r4, [r1]
 800dcda:	888a      	ldrh	r2, [r1, #4]
 800dcdc:	f9b0 3000 	ldrsh.w	r3, [r0]
 800dce0:	4422      	add	r2, r4
 800dce2:	b212      	sxth	r2, r2
 800dce4:	4293      	cmp	r3, r2
 800dce6:	da15      	bge.n	800dd14 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800dce8:	8882      	ldrh	r2, [r0, #4]
 800dcea:	4413      	add	r3, r2
 800dcec:	b21b      	sxth	r3, r3
 800dcee:	429c      	cmp	r4, r3
 800dcf0:	da10      	bge.n	800dd14 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800dcf2:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800dcf6:	88c9      	ldrh	r1, [r1, #6]
 800dcf8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800dcfc:	4419      	add	r1, r3
 800dcfe:	b209      	sxth	r1, r1
 800dd00:	428a      	cmp	r2, r1
 800dd02:	da07      	bge.n	800dd14 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800dd04:	88c0      	ldrh	r0, [r0, #6]
 800dd06:	4410      	add	r0, r2
 800dd08:	b200      	sxth	r0, r0
 800dd0a:	4283      	cmp	r3, r0
 800dd0c:	bfac      	ite	ge
 800dd0e:	2000      	movge	r0, #0
 800dd10:	2001      	movlt	r0, #1
 800dd12:	bd10      	pop	{r4, pc}
 800dd14:	2000      	movs	r0, #0
 800dd16:	e7fc      	b.n	800dd12 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800dd18 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800dd18:	b570      	push	{r4, r5, r6, lr}
 800dd1a:	f9b1 4000 	ldrsh.w	r4, [r1]
 800dd1e:	f9b0 5000 	ldrsh.w	r5, [r0]
 800dd22:	42ac      	cmp	r4, r5
 800dd24:	db18      	blt.n	800dd58 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800dd26:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800dd2a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800dd2e:	429a      	cmp	r2, r3
 800dd30:	db12      	blt.n	800dd58 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800dd32:	8886      	ldrh	r6, [r0, #4]
 800dd34:	4435      	add	r5, r6
 800dd36:	888e      	ldrh	r6, [r1, #4]
 800dd38:	4434      	add	r4, r6
 800dd3a:	b22d      	sxth	r5, r5
 800dd3c:	b224      	sxth	r4, r4
 800dd3e:	42a5      	cmp	r5, r4
 800dd40:	db0a      	blt.n	800dd58 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800dd42:	88c0      	ldrh	r0, [r0, #6]
 800dd44:	4418      	add	r0, r3
 800dd46:	88cb      	ldrh	r3, [r1, #6]
 800dd48:	441a      	add	r2, r3
 800dd4a:	b200      	sxth	r0, r0
 800dd4c:	b212      	sxth	r2, r2
 800dd4e:	4290      	cmp	r0, r2
 800dd50:	bfb4      	ite	lt
 800dd52:	2000      	movlt	r0, #0
 800dd54:	2001      	movge	r0, #1
 800dd56:	bd70      	pop	{r4, r5, r6, pc}
 800dd58:	2000      	movs	r0, #0
 800dd5a:	e7fc      	b.n	800dd56 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800dd5c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800dd5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dd5e:	4604      	mov	r4, r0
 800dd60:	4608      	mov	r0, r1
 800dd62:	460d      	mov	r5, r1
 800dd64:	f7fe fc4a 	bl	800c5fc <_ZNK8touchgfx4Rect7isEmptyEv>
 800dd68:	b978      	cbnz	r0, 800dd8a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800dd6a:	4620      	mov	r0, r4
 800dd6c:	f7fe fc46 	bl	800c5fc <_ZNK8touchgfx4Rect7isEmptyEv>
 800dd70:	f9b5 6000 	ldrsh.w	r6, [r5]
 800dd74:	b150      	cbz	r0, 800dd8c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800dd76:	8026      	strh	r6, [r4, #0]
 800dd78:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800dd7c:	8063      	strh	r3, [r4, #2]
 800dd7e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800dd82:	80a3      	strh	r3, [r4, #4]
 800dd84:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800dd88:	80e3      	strh	r3, [r4, #6]
 800dd8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dd8c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800dd90:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800dd94:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800dd98:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800dd9c:	88ed      	ldrh	r5, [r5, #6]
 800dd9e:	42b1      	cmp	r1, r6
 800dda0:	460f      	mov	r7, r1
 800dda2:	bfa8      	it	ge
 800dda4:	4637      	movge	r7, r6
 800dda6:	4293      	cmp	r3, r2
 800dda8:	4618      	mov	r0, r3
 800ddaa:	4466      	add	r6, ip
 800ddac:	bfa8      	it	ge
 800ddae:	4610      	movge	r0, r2
 800ddb0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800ddb4:	8027      	strh	r7, [r4, #0]
 800ddb6:	442a      	add	r2, r5
 800ddb8:	88e5      	ldrh	r5, [r4, #6]
 800ddba:	8060      	strh	r0, [r4, #2]
 800ddbc:	4461      	add	r1, ip
 800ddbe:	442b      	add	r3, r5
 800ddc0:	b236      	sxth	r6, r6
 800ddc2:	b209      	sxth	r1, r1
 800ddc4:	b212      	sxth	r2, r2
 800ddc6:	b21b      	sxth	r3, r3
 800ddc8:	428e      	cmp	r6, r1
 800ddca:	bfac      	ite	ge
 800ddcc:	ebc7 0106 	rsbge	r1, r7, r6
 800ddd0:	ebc7 0101 	rsblt	r1, r7, r1
 800ddd4:	429a      	cmp	r2, r3
 800ddd6:	bfac      	ite	ge
 800ddd8:	ebc0 0202 	rsbge	r2, r0, r2
 800dddc:	ebc0 0203 	rsblt	r2, r0, r3
 800dde0:	80a1      	strh	r1, [r4, #4]
 800dde2:	80e2      	strh	r2, [r4, #6]
 800dde4:	e7d1      	b.n	800dd8a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800dde8 <_ZN8touchgfx11Application11getInstanceEv>:
 800dde8:	4b01      	ldr	r3, [pc, #4]	; (800ddf0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800ddea:	6818      	ldr	r0, [r3, #0]
 800ddec:	4770      	bx	lr
 800ddee:	bf00      	nop
 800ddf0:	2002696c 	.word	0x2002696c

0800ddf4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800ddf4:	2300      	movs	r3, #0
 800ddf6:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800ddfa:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800ddfe:	30a8      	adds	r0, #168	; 0xa8
 800de00:	f802 3b01 	strb.w	r3, [r2], #1
 800de04:	4282      	cmp	r2, r0
 800de06:	d1fb      	bne.n	800de00 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800de08:	4770      	bx	lr

0800de0a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800de0a:	4603      	mov	r3, r0
 800de0c:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800de10:	2200      	movs	r2, #0
 800de12:	801a      	strh	r2, [r3, #0]
 800de14:	805a      	strh	r2, [r3, #2]
 800de16:	809a      	strh	r2, [r3, #4]
 800de18:	80da      	strh	r2, [r3, #6]
 800de1a:	3308      	adds	r3, #8
 800de1c:	428b      	cmp	r3, r1
 800de1e:	d1f8      	bne.n	800de12 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800de20:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800de24:	4770      	bx	lr
	...

0800de28 <_ZN8touchgfx11ApplicationC1Ev>:
 800de28:	b570      	push	{r4, r5, r6, lr}
 800de2a:	4b16      	ldr	r3, [pc, #88]	; (800de84 <_ZN8touchgfx11ApplicationC1Ev+0x5c>)
 800de2c:	6003      	str	r3, [r0, #0]
 800de2e:	2500      	movs	r5, #0
 800de30:	4604      	mov	r4, r0
 800de32:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800de36:	30a8      	adds	r0, #168	; 0xa8
 800de38:	f7ff ffe7 	bl	800de0a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800de3c:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800de40:	f7ff ffe3 	bl	800de0a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800de44:	f884 512c 	strb.w	r5, [r4, #300]	; 0x12c
 800de48:	f884 512d 	strb.w	r5, [r4, #301]	; 0x12d
 800de4c:	490e      	ldr	r1, [pc, #56]	; (800de88 <_ZN8touchgfx11ApplicationC1Ev+0x60>)
 800de4e:	480f      	ldr	r0, [pc, #60]	; (800de8c <_ZN8touchgfx11ApplicationC1Ev+0x64>)
 800de50:	4e0f      	ldr	r6, [pc, #60]	; (800de90 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800de52:	f00d f8db 	bl	801b00c <CRC_Lock>
 800de56:	4b0f      	ldr	r3, [pc, #60]	; (800de94 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800de58:	b158      	cbz	r0, 800de72 <_ZN8touchgfx11ApplicationC1Ev+0x4a>
 800de5a:	801d      	strh	r5, [r3, #0]
 800de5c:	4a0e      	ldr	r2, [pc, #56]	; (800de98 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800de5e:	2300      	movs	r3, #0
 800de60:	6013      	str	r3, [r2, #0]
 800de62:	4a0e      	ldr	r2, [pc, #56]	; (800de9c <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800de64:	6033      	str	r3, [r6, #0]
 800de66:	4620      	mov	r0, r4
 800de68:	6013      	str	r3, [r2, #0]
 800de6a:	f7ff ffc3 	bl	800ddf4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800de6e:	4620      	mov	r0, r4
 800de70:	bd70      	pop	{r4, r5, r6, pc}
 800de72:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800de76:	2002      	movs	r0, #2
 800de78:	801a      	strh	r2, [r3, #0]
 800de7a:	6030      	str	r0, [r6, #0]
 800de7c:	f000 ff1e 	bl	800ecbc <_ZN8touchgfx6Screen4drawEv>
 800de80:	e7ec      	b.n	800de5c <_ZN8touchgfx11ApplicationC1Ev+0x34>
 800de82:	bf00      	nop
 800de84:	0801dfdc 	.word	0x0801dfdc
 800de88:	b5e8b5cd 	.word	0xb5e8b5cd
 800de8c:	f407a5c2 	.word	0xf407a5c2
 800de90:	2002695c 	.word	0x2002695c
 800de94:	2000001c 	.word	0x2000001c
 800de98:	2002696c 	.word	0x2002696c
 800de9c:	20026960 	.word	0x20026960

0800dea0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800dea0:	2300      	movs	r3, #0
 800dea2:	8003      	strh	r3, [r0, #0]
 800dea4:	8043      	strh	r3, [r0, #2]
 800dea6:	8083      	strh	r3, [r0, #4]
 800dea8:	80c3      	strh	r3, [r0, #6]
 800deaa:	f8b1 3040 	ldrh.w	r3, [r1, #64]	; 0x40
 800deae:	4293      	cmp	r3, r2
 800deb0:	b530      	push	{r4, r5, lr}
 800deb2:	d912      	bls.n	800deda <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800deb4:	eb01 04c2 	add.w	r4, r1, r2, lsl #3
 800deb8:	3b01      	subs	r3, #1
 800deba:	6825      	ldr	r5, [r4, #0]
 800debc:	6005      	str	r5, [r0, #0]
 800debe:	b29b      	uxth	r3, r3
 800dec0:	6865      	ldr	r5, [r4, #4]
 800dec2:	6045      	str	r5, [r0, #4]
 800dec4:	4293      	cmp	r3, r2
 800dec6:	f8a1 3040 	strh.w	r3, [r1, #64]	; 0x40
 800deca:	d906      	bls.n	800deda <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800decc:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800ded0:	681d      	ldr	r5, [r3, #0]
 800ded2:	f841 5032 	str.w	r5, [r1, r2, lsl #3]
 800ded6:	685d      	ldr	r5, [r3, #4]
 800ded8:	6065      	str	r5, [r4, #4]
 800deda:	bd30      	pop	{r4, r5, pc}

0800dedc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800dedc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dede:	466b      	mov	r3, sp
 800dee0:	e883 0006 	stmia.w	r3, {r1, r2}
 800dee4:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800dee8:	2a07      	cmp	r2, #7
 800deea:	4604      	mov	r4, r0
 800deec:	d906      	bls.n	800defc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800deee:	4b09      	ldr	r3, [pc, #36]	; (800df14 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800def0:	4a09      	ldr	r2, [pc, #36]	; (800df18 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800def2:	480a      	ldr	r0, [pc, #40]	; (800df1c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800def4:	f44f 7102 	mov.w	r1, #520	; 0x208
 800def8:	f00d f9ba 	bl	801b270 <__assert_func>
 800defc:	1c51      	adds	r1, r2, #1
 800defe:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800df02:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800df06:	cb03      	ldmia	r3!, {r0, r1}
 800df08:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800df0c:	6069      	str	r1, [r5, #4]
 800df0e:	b003      	add	sp, #12
 800df10:	bd30      	pop	{r4, r5, pc}
 800df12:	bf00      	nop
 800df14:	0801df7c 	.word	0x0801df7c
 800df18:	0801e054 	.word	0x0801e054
 800df1c:	0801dfab 	.word	0x0801dfab

0800df20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800df20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800df24:	b089      	sub	sp, #36	; 0x24
 800df26:	466c      	mov	r4, sp
 800df28:	4606      	mov	r6, r0
 800df2a:	4620      	mov	r0, r4
 800df2c:	e884 0006 	stmia.w	r4, {r1, r2}
 800df30:	f7fe fb64 	bl	800c5fc <_ZNK8touchgfx4Rect7isEmptyEv>
 800df34:	bbb0      	cbnz	r0, 800dfa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800df36:	f8b6 50e8 	ldrh.w	r5, [r6, #232]	; 0xe8
 800df3a:	b1fd      	cbz	r5, 800df7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c>
 800df3c:	3d01      	subs	r5, #1
 800df3e:	af04      	add	r7, sp, #16
 800df40:	f04f 090a 	mov.w	r9, #10
 800df44:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 800df48:	ab02      	add	r3, sp, #8
 800df4a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800df4e:	6851      	ldr	r1, [r2, #4]
 800df50:	c303      	stmia	r3!, {r0, r1}
 800df52:	4621      	mov	r1, r4
 800df54:	a802      	add	r0, sp, #8
 800df56:	fa1f f885 	uxth.w	r8, r5
 800df5a:	f7ff fedd 	bl	800dd18 <_ZNK8touchgfx4Rect8includesERKS0_>
 800df5e:	bb08      	cbnz	r0, 800dfa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800df60:	a902      	add	r1, sp, #8
 800df62:	4620      	mov	r0, r4
 800df64:	f7ff fed8 	bl	800dd18 <_ZNK8touchgfx4Rect8includesERKS0_>
 800df68:	b1f8      	cbz	r0, 800dfaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x8a>
 800df6a:	4642      	mov	r2, r8
 800df6c:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800df70:	a806      	add	r0, sp, #24
 800df72:	f7ff ff95 	bl	800dea0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800df76:	f115 35ff 	adds.w	r5, r5, #4294967295
 800df7a:	d2e3      	bcs.n	800df44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24>
 800df7c:	f8b6 30e8 	ldrh.w	r3, [r6, #232]	; 0xe8
 800df80:	2b08      	cmp	r3, #8
 800df82:	f106 05a8 	add.w	r5, r6, #168	; 0xa8
 800df86:	d108      	bne.n	800df9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800df88:	4629      	mov	r1, r5
 800df8a:	a806      	add	r0, sp, #24
 800df8c:	2207      	movs	r2, #7
 800df8e:	f7ff ff87 	bl	800dea0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800df92:	a906      	add	r1, sp, #24
 800df94:	4620      	mov	r0, r4
 800df96:	f7ff fee1 	bl	800dd5c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800df9a:	e894 0006 	ldmia.w	r4, {r1, r2}
 800df9e:	4628      	mov	r0, r5
 800dfa0:	f7ff ff9c 	bl	800dedc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800dfa4:	b009      	add	sp, #36	; 0x24
 800dfa6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dfaa:	4621      	mov	r1, r4
 800dfac:	a802      	add	r0, sp, #8
 800dfae:	f7ff fe91 	bl	800dcd4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800dfb2:	b150      	cbz	r0, 800dfca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xaa>
 800dfb4:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800dfb8:	a806      	add	r0, sp, #24
 800dfba:	4642      	mov	r2, r8
 800dfbc:	f7ff ff70 	bl	800dea0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dfc0:	a902      	add	r1, sp, #8
 800dfc2:	4620      	mov	r0, r4
 800dfc4:	f7ff feca 	bl	800dd5c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800dfc8:	e7d5      	b.n	800df76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800dfca:	e894 0003 	ldmia.w	r4, {r0, r1}
 800dfce:	e887 0003 	stmia.w	r7, {r0, r1}
 800dfd2:	a902      	add	r1, sp, #8
 800dfd4:	4638      	mov	r0, r7
 800dfd6:	f7ff fec1 	bl	800dd5c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800dfda:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800dfde:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800dfe2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 800dfe6:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800dfea:	fb13 f302 	smulbb	r3, r3, r2
 800dfee:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800dff2:	fb11 f102 	smulbb	r1, r1, r2
 800dff6:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800dffa:	fb12 1100 	smlabb	r1, r2, r0, r1
 800dffe:	220b      	movs	r2, #11
 800e000:	fb09 f303 	mul.w	r3, r9, r3
 800e004:	434a      	muls	r2, r1
 800e006:	4293      	cmp	r3, r2
 800e008:	dab5      	bge.n	800df76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800e00a:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800e00e:	a806      	add	r0, sp, #24
 800e010:	4642      	mov	r2, r8
 800e012:	f7ff ff45 	bl	800dea0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e016:	e897 0003 	ldmia.w	r7, {r0, r1}
 800e01a:	e884 0003 	stmia.w	r4, {r0, r1}
 800e01e:	e7aa      	b.n	800df76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>

0800e020 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800e020:	b530      	push	{r4, r5, lr}
 800e022:	4b1d      	ldr	r3, [pc, #116]	; (800e098 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800e024:	b085      	sub	sp, #20
 800e026:	460c      	mov	r4, r1
 800e028:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e02c:	4b1b      	ldr	r3, [pc, #108]	; (800e09c <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800e02e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e032:	2100      	movs	r1, #0
 800e034:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e038:	9100      	str	r1, [sp, #0]
 800e03a:	4605      	mov	r5, r0
 800e03c:	6861      	ldr	r1, [r4, #4]
 800e03e:	6820      	ldr	r0, [r4, #0]
 800e040:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e044:	ab02      	add	r3, sp, #8
 800e046:	c303      	stmia	r3!, {r0, r1}
 800e048:	4669      	mov	r1, sp
 800e04a:	a802      	add	r0, sp, #8
 800e04c:	f7fe fa92 	bl	800c574 <_ZN8touchgfx4RectaNERKS0_>
 800e050:	ab02      	add	r3, sp, #8
 800e052:	cb03      	ldmia	r3!, {r0, r1}
 800e054:	4b12      	ldr	r3, [pc, #72]	; (800e0a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800e056:	6020      	str	r0, [r4, #0]
 800e058:	6818      	ldr	r0, [r3, #0]
 800e05a:	6061      	str	r1, [r4, #4]
 800e05c:	b138      	cbz	r0, 800e06e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800e05e:	f895 312c 	ldrb.w	r3, [r5, #300]	; 0x12c
 800e062:	b133      	cbz	r3, 800e072 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800e064:	6821      	ldr	r1, [r4, #0]
 800e066:	6862      	ldr	r2, [r4, #4]
 800e068:	4628      	mov	r0, r5
 800e06a:	f7ff ff59 	bl	800df20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e06e:	b005      	add	sp, #20
 800e070:	bd30      	pop	{r4, r5, pc}
 800e072:	6803      	ldr	r3, [r0, #0]
 800e074:	4621      	mov	r1, r4
 800e076:	689b      	ldr	r3, [r3, #8]
 800e078:	4798      	blx	r3
 800e07a:	4b0a      	ldr	r3, [pc, #40]	; (800e0a4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800e07c:	6818      	ldr	r0, [r3, #0]
 800e07e:	b118      	cbz	r0, 800e088 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800e080:	6803      	ldr	r3, [r0, #0]
 800e082:	4621      	mov	r1, r4
 800e084:	689b      	ldr	r3, [r3, #8]
 800e086:	4798      	blx	r3
 800e088:	4b07      	ldr	r3, [pc, #28]	; (800e0a8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800e08a:	6818      	ldr	r0, [r3, #0]
 800e08c:	6803      	ldr	r3, [r0, #0]
 800e08e:	4621      	mov	r1, r4
 800e090:	695b      	ldr	r3, [r3, #20]
 800e092:	4798      	blx	r3
 800e094:	e7eb      	b.n	800e06e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800e096:	bf00      	nop
 800e098:	200268f4 	.word	0x200268f4
 800e09c:	200268f6 	.word	0x200268f6
 800e0a0:	2002695c 	.word	0x2002695c
 800e0a4:	20026958 	.word	0x20026958
 800e0a8:	20026900 	.word	0x20026900

0800e0ac <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800e0ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0b0:	4604      	mov	r4, r0
 800e0b2:	b09b      	sub	sp, #108	; 0x6c
 800e0b4:	f880 112c 	strb.w	r1, [r0, #300]	; 0x12c
 800e0b8:	b129      	cbz	r1, 800e0c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800e0ba:	2300      	movs	r3, #0
 800e0bc:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800e0c0:	b01b      	add	sp, #108	; 0x6c
 800e0c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e0c6:	4baf      	ldr	r3, [pc, #700]	; (800e384 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800e0c8:	681b      	ldr	r3, [r3, #0]
 800e0ca:	b33b      	cbz	r3, 800e11c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800e0cc:	4dae      	ldr	r5, [pc, #696]	; (800e388 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800e0ce:	4628      	mov	r0, r5
 800e0d0:	f7fe fa94 	bl	800c5fc <_ZNK8touchgfx4Rect7isEmptyEv>
 800e0d4:	4606      	mov	r6, r0
 800e0d6:	bb08      	cbnz	r0, 800e11c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800e0d8:	4628      	mov	r0, r5
 800e0da:	f7ff fca5 	bl	800da28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e0de:	6829      	ldr	r1, [r5, #0]
 800e0e0:	686a      	ldr	r2, [r5, #4]
 800e0e2:	4620      	mov	r0, r4
 800e0e4:	f7ff ff1c 	bl	800df20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e0e8:	802e      	strh	r6, [r5, #0]
 800e0ea:	806e      	strh	r6, [r5, #2]
 800e0ec:	80ae      	strh	r6, [r5, #4]
 800e0ee:	80ee      	strh	r6, [r5, #6]
 800e0f0:	4fa6      	ldr	r7, [pc, #664]	; (800e38c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800e0f2:	a809      	add	r0, sp, #36	; 0x24
 800e0f4:	f7ff fe89 	bl	800de0a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e0f8:	883d      	ldrh	r5, [r7, #0]
 800e0fa:	462e      	mov	r6, r5
 800e0fc:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e100:	42b3      	cmp	r3, r6
 800e102:	d910      	bls.n	800e126 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x7a>
 800e104:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e108:	a809      	add	r0, sp, #36	; 0x24
 800e10a:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800e10e:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800e112:	3601      	adds	r6, #1
 800e114:	f7ff fee2 	bl	800dedc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e118:	b2b6      	uxth	r6, r6
 800e11a:	e7ef      	b.n	800e0fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x50>
 800e11c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e120:	2b00      	cmp	r3, #0
 800e122:	d1e5      	bne.n	800e0f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x44>
 800e124:	e7cc      	b.n	800e0c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e126:	462e      	mov	r6, r5
 800e128:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800e12c:	42b3      	cmp	r3, r6
 800e12e:	d90b      	bls.n	800e148 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800e130:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e134:	4620      	mov	r0, r4
 800e136:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800e13a:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800e13e:	3601      	adds	r6, #1
 800e140:	f7ff feee 	bl	800df20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e144:	b2b6      	uxth	r6, r6
 800e146:	e7ef      	b.n	800e128 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x7c>
 800e148:	4e91      	ldr	r6, [pc, #580]	; (800e390 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800e14a:	6833      	ldr	r3, [r6, #0]
 800e14c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800e150:	2b01      	cmp	r3, #1
 800e152:	f040 8092 	bne.w	800e27a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ce>
 800e156:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800e15a:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800e15e:	33aa      	adds	r3, #170	; 0xaa
 800e160:	f04f 0900 	mov.w	r9, #0
 800e164:	42a8      	cmp	r0, r5
 800e166:	f103 0308 	add.w	r3, r3, #8
 800e16a:	dd0a      	ble.n	800e182 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xd6>
 800e16c:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800e170:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800e174:	440a      	add	r2, r1
 800e176:	b212      	sxth	r2, r2
 800e178:	4591      	cmp	r9, r2
 800e17a:	bfb8      	it	lt
 800e17c:	4691      	movlt	r9, r2
 800e17e:	3501      	adds	r5, #1
 800e180:	e7f0      	b.n	800e164 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xb8>
 800e182:	4b84      	ldr	r3, [pc, #528]	; (800e394 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800e184:	f8df 8214 	ldr.w	r8, [pc, #532]	; 800e39c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>
 800e188:	881d      	ldrh	r5, [r3, #0]
 800e18a:	2300      	movs	r3, #0
 800e18c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800e190:	2d0f      	cmp	r5, #15
 800e192:	bf8c      	ite	hi
 800e194:	08ed      	lsrhi	r5, r5, #3
 800e196:	2501      	movls	r5, #1
 800e198:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e19c:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800e1a0:	6830      	ldr	r0, [r6, #0]
 800e1a2:	440b      	add	r3, r1
 800e1a4:	b21b      	sxth	r3, r3
 800e1a6:	4599      	cmp	r9, r3
 800e1a8:	6802      	ldr	r2, [r0, #0]
 800e1aa:	dd49      	ble.n	800e240 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x194>
 800e1ac:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 800e1b0:	4798      	blx	r3
 800e1b2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800e1b6:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e1ba:	4413      	add	r3, r2
 800e1bc:	b21b      	sxth	r3, r3
 800e1be:	195a      	adds	r2, r3, r5
 800e1c0:	4290      	cmp	r0, r2
 800e1c2:	da07      	bge.n	800e1d4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x128>
 800e1c4:	4581      	cmp	r9, r0
 800e1c6:	dd05      	ble.n	800e1d4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x128>
 800e1c8:	4298      	cmp	r0, r3
 800e1ca:	da33      	bge.n	800e234 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x188>
 800e1cc:	2b00      	cmp	r3, #0
 800e1ce:	dd31      	ble.n	800e234 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x188>
 800e1d0:	4648      	mov	r0, r9
 800e1d2:	e004      	b.n	800e1de <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x132>
 800e1d4:	4298      	cmp	r0, r3
 800e1d6:	dbfb      	blt.n	800e1d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x124>
 800e1d8:	4548      	cmp	r0, r9
 800e1da:	bfa8      	it	ge
 800e1dc:	4648      	movge	r0, r9
 800e1de:	f9b8 2000 	ldrsh.w	r2, [r8]
 800e1e2:	f8b7 a000 	ldrh.w	sl, [r7]
 800e1e6:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e1ea:	2100      	movs	r1, #0
 800e1ec:	1ac0      	subs	r0, r0, r3
 800e1ee:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e1f2:	f8ad 2018 	strh.w	r2, [sp, #24]
 800e1f6:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e1fa:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e1fe:	4553      	cmp	r3, sl
 800e200:	d9ca      	bls.n	800e198 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xec>
 800e202:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800e206:	ab07      	add	r3, sp, #28
 800e208:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e20c:	6851      	ldr	r1, [r2, #4]
 800e20e:	c303      	stmia	r3!, {r0, r1}
 800e210:	a807      	add	r0, sp, #28
 800e212:	a905      	add	r1, sp, #20
 800e214:	f7fe f9ae 	bl	800c574 <_ZN8touchgfx4RectaNERKS0_>
 800e218:	a807      	add	r0, sp, #28
 800e21a:	f7fe f9ef 	bl	800c5fc <_ZNK8touchgfx4Rect7isEmptyEv>
 800e21e:	b920      	cbnz	r0, 800e22a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x17e>
 800e220:	6823      	ldr	r3, [r4, #0]
 800e222:	a907      	add	r1, sp, #28
 800e224:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e226:	4620      	mov	r0, r4
 800e228:	4798      	blx	r3
 800e22a:	f10a 0a01 	add.w	sl, sl, #1
 800e22e:	fa1f fa8a 	uxth.w	sl, sl
 800e232:	e7e2      	b.n	800e1fa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14e>
 800e234:	6830      	ldr	r0, [r6, #0]
 800e236:	6803      	ldr	r3, [r0, #0]
 800e238:	2101      	movs	r1, #1
 800e23a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e23c:	4798      	blx	r3
 800e23e:	e7ab      	b.n	800e198 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xec>
 800e240:	69d3      	ldr	r3, [r2, #28]
 800e242:	4798      	blx	r3
 800e244:	4b54      	ldr	r3, [pc, #336]	; (800e398 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800e246:	781b      	ldrb	r3, [r3, #0]
 800e248:	2b00      	cmp	r3, #0
 800e24a:	f43f af39 	beq.w	800e0c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e24e:	2300      	movs	r3, #0
 800e250:	883d      	ldrh	r5, [r7, #0]
 800e252:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800e256:	34ea      	adds	r4, #234	; 0xea
 800e258:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800e25c:	42ab      	cmp	r3, r5
 800e25e:	f67f af2f 	bls.w	800e0c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e262:	ab1a      	add	r3, sp, #104	; 0x68
 800e264:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e268:	3b44      	subs	r3, #68	; 0x44
 800e26a:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e26e:	4620      	mov	r0, r4
 800e270:	3501      	adds	r5, #1
 800e272:	f7ff fe33 	bl	800dedc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e276:	b2ad      	uxth	r5, r5
 800e278:	e7ee      	b.n	800e258 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ac>
 800e27a:	2b02      	cmp	r3, #2
 800e27c:	d16a      	bne.n	800e354 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 800e27e:	f8df a120 	ldr.w	sl, [pc, #288]	; 800e3a0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
 800e282:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e286:	42ab      	cmp	r3, r5
 800e288:	d9dc      	bls.n	800e244 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x198>
 800e28a:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800e28e:	ab03      	add	r3, sp, #12
 800e290:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e294:	6851      	ldr	r1, [r2, #4]
 800e296:	c303      	stmia	r3!, {r0, r1}
 800e298:	f89a 3000 	ldrb.w	r3, [sl]
 800e29c:	2b01      	cmp	r3, #1
 800e29e:	d102      	bne.n	800e2a6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1fa>
 800e2a0:	a803      	add	r0, sp, #12
 800e2a2:	f7ff fc1b 	bl	800dadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800e2a6:	a803      	add	r0, sp, #12
 800e2a8:	f7fe f9a8 	bl	800c5fc <_ZNK8touchgfx4Rect7isEmptyEv>
 800e2ac:	2800      	cmp	r0, #0
 800e2ae:	d14a      	bne.n	800e346 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x29a>
 800e2b0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800e2b4:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e2b8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800e2bc:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e2c0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e2c4:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e2c8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e2cc:	f10d 0914 	add.w	r9, sp, #20
 800e2d0:	f10d 081c 	add.w	r8, sp, #28
 800e2d4:	f8bd b012 	ldrh.w	fp, [sp, #18]
 800e2d8:	f8bd c00e 	ldrh.w	ip, [sp, #14]
 800e2dc:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800e2e0:	6830      	ldr	r0, [r6, #0]
 800e2e2:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800e2e6:	f8d0 e000 	ldr.w	lr, [r0]
 800e2ea:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800e2ee:	44dc      	add	ip, fp
 800e2f0:	ebac 0c02 	sub.w	ip, ip, r2
 800e2f4:	fa1f fc8c 	uxth.w	ip, ip
 800e2f8:	f8cd c000 	str.w	ip, [sp]
 800e2fc:	f8de b078 	ldr.w	fp, [lr, #120]	; 0x78
 800e300:	47d8      	blx	fp
 800e302:	f89a 3000 	ldrb.w	r3, [sl]
 800e306:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e30a:	2b01      	cmp	r3, #1
 800e30c:	d11e      	bne.n	800e34c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a0>
 800e30e:	e899 0003 	ldmia.w	r9, {r0, r1}
 800e312:	e888 0003 	stmia.w	r8, {r0, r1}
 800e316:	4640      	mov	r0, r8
 800e318:	f7ff fb86 	bl	800da28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e31c:	6823      	ldr	r3, [r4, #0]
 800e31e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e320:	4641      	mov	r1, r8
 800e322:	4620      	mov	r0, r4
 800e324:	4798      	blx	r3
 800e326:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e32a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800e32e:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800e332:	4413      	add	r3, r2
 800e334:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e338:	440a      	add	r2, r1
 800e33a:	b21b      	sxth	r3, r3
 800e33c:	b212      	sxth	r2, r2
 800e33e:	4293      	cmp	r3, r2
 800e340:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e344:	dbc6      	blt.n	800e2d4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x228>
 800e346:	3501      	adds	r5, #1
 800e348:	b2ad      	uxth	r5, r5
 800e34a:	e79a      	b.n	800e282 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d6>
 800e34c:	6823      	ldr	r3, [r4, #0]
 800e34e:	4649      	mov	r1, r9
 800e350:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e352:	e7e6      	b.n	800e322 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 800e354:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e358:	42ab      	cmp	r3, r5
 800e35a:	f67f af73 	bls.w	800e244 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x198>
 800e35e:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800e362:	ab07      	add	r3, sp, #28
 800e364:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e368:	6851      	ldr	r1, [r2, #4]
 800e36a:	c303      	stmia	r3!, {r0, r1}
 800e36c:	a807      	add	r0, sp, #28
 800e36e:	f7fe f945 	bl	800c5fc <_ZNK8touchgfx4Rect7isEmptyEv>
 800e372:	b920      	cbnz	r0, 800e37e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d2>
 800e374:	6823      	ldr	r3, [r4, #0]
 800e376:	a907      	add	r1, sp, #28
 800e378:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e37a:	4620      	mov	r0, r4
 800e37c:	4798      	blx	r3
 800e37e:	3501      	adds	r5, #1
 800e380:	b2ad      	uxth	r5, r5
 800e382:	e7e7      	b.n	800e354 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 800e384:	20026958 	.word	0x20026958
 800e388:	20026964 	.word	0x20026964
 800e38c:	2000001c 	.word	0x2000001c
 800e390:	20026900 	.word	0x20026900
 800e394:	200268f6 	.word	0x200268f6
 800e398:	200268fe 	.word	0x200268fe
 800e39c:	200268f4 	.word	0x200268f4
 800e3a0:	200268f8 	.word	0x200268f8

0800e3a4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800e3a4:	4b03      	ldr	r3, [pc, #12]	; (800e3b4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800e3a6:	2200      	movs	r2, #0
 800e3a8:	801a      	strh	r2, [r3, #0]
 800e3aa:	805a      	strh	r2, [r3, #2]
 800e3ac:	809a      	strh	r2, [r3, #4]
 800e3ae:	80da      	strh	r2, [r3, #6]
 800e3b0:	4770      	bx	lr
 800e3b2:	bf00      	nop
 800e3b4:	20026964 	.word	0x20026964

0800e3b8 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
 800e3b8:	2000      	movs	r0, #0
 800e3ba:	4770      	bx	lr

0800e3bc <_ZNK8touchgfx4Font12getGSUBTableEv>:
 800e3bc:	2000      	movs	r0, #0
 800e3be:	4770      	bx	lr

0800e3c0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800e3c0:	b508      	push	{r3, lr}
 800e3c2:	6803      	ldr	r3, [r0, #0]
 800e3c4:	68db      	ldr	r3, [r3, #12]
 800e3c6:	4798      	blx	r3
 800e3c8:	b128      	cbz	r0, 800e3d6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800e3ca:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800e3ce:	7a80      	ldrb	r0, [r0, #10]
 800e3d0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e3d4:	4318      	orrs	r0, r3
 800e3d6:	bd08      	pop	{r3, pc}

0800e3d8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
 800e3d8:	b40e      	push	{r1, r2, r3}
 800e3da:	b533      	push	{r0, r1, r4, r5, lr}
 800e3dc:	ab05      	add	r3, sp, #20
 800e3de:	f853 2b04 	ldr.w	r2, [r3], #4
 800e3e2:	9301      	str	r3, [sp, #4]
 800e3e4:	4b09      	ldr	r3, [pc, #36]	; (800e40c <_ZNK8touchgfx4Font14getStringWidthEPKtz+0x34>)
 800e3e6:	685c      	ldr	r4, [r3, #4]
 800e3e8:	1061      	asrs	r1, r4, #1
 800e3ea:	07e4      	lsls	r4, r4, #31
 800e3ec:	eb00 0501 	add.w	r5, r0, r1
 800e3f0:	bf45      	ittet	mi
 800e3f2:	681b      	ldrmi	r3, [r3, #0]
 800e3f4:	5841      	ldrmi	r1, [r0, r1]
 800e3f6:	681c      	ldrpl	r4, [r3, #0]
 800e3f8:	58cc      	ldrmi	r4, [r1, r3]
 800e3fa:	9b01      	ldr	r3, [sp, #4]
 800e3fc:	2100      	movs	r1, #0
 800e3fe:	4628      	mov	r0, r5
 800e400:	47a0      	blx	r4
 800e402:	b002      	add	sp, #8
 800e404:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e408:	b003      	add	sp, #12
 800e40a:	4770      	bx	lr
 800e40c:	20000010 	.word	0x20000010

0800e410 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:
 800e410:	b40c      	push	{r2, r3}
 800e412:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e414:	ab06      	add	r3, sp, #24
 800e416:	f853 2b04 	ldr.w	r2, [r3], #4
 800e41a:	9301      	str	r3, [sp, #4]
 800e41c:	4b09      	ldr	r3, [pc, #36]	; (800e444 <_ZNK8touchgfx4Font14getStringWidthEhPKtz+0x34>)
 800e41e:	685d      	ldr	r5, [r3, #4]
 800e420:	106c      	asrs	r4, r5, #1
 800e422:	07ed      	lsls	r5, r5, #31
 800e424:	eb00 0604 	add.w	r6, r0, r4
 800e428:	bf45      	ittet	mi
 800e42a:	681b      	ldrmi	r3, [r3, #0]
 800e42c:	5900      	ldrmi	r0, [r0, r4]
 800e42e:	681c      	ldrpl	r4, [r3, #0]
 800e430:	58c4      	ldrmi	r4, [r0, r3]
 800e432:	9b01      	ldr	r3, [sp, #4]
 800e434:	4630      	mov	r0, r6
 800e436:	47a0      	blx	r4
 800e438:	b002      	add	sp, #8
 800e43a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e43e:	b002      	add	sp, #8
 800e440:	4770      	bx	lr
 800e442:	bf00      	nop
 800e444:	20000010 	.word	0x20000010

0800e448 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800e448:	b40e      	push	{r1, r2, r3}
 800e44a:	b530      	push	{r4, r5, lr}
 800e44c:	b098      	sub	sp, #96	; 0x60
 800e44e:	ab1b      	add	r3, sp, #108	; 0x6c
 800e450:	4604      	mov	r4, r0
 800e452:	f853 5b04 	ldr.w	r5, [r3], #4
 800e456:	9301      	str	r3, [sp, #4]
 800e458:	a802      	add	r0, sp, #8
 800e45a:	f000 ffd5 	bl	800f408 <_ZN8touchgfx12TextProviderC1Ev>
 800e45e:	6823      	ldr	r3, [r4, #0]
 800e460:	4620      	mov	r0, r4
 800e462:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e464:	4798      	blx	r3
 800e466:	9a01      	ldr	r2, [sp, #4]
 800e468:	4603      	mov	r3, r0
 800e46a:	4629      	mov	r1, r5
 800e46c:	a802      	add	r0, sp, #8
 800e46e:	f000 ffe8 	bl	800f442 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800e472:	a802      	add	r0, sp, #8
 800e474:	f001 f81e 	bl	800f4b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e478:	2401      	movs	r4, #1
 800e47a:	b2a3      	uxth	r3, r4
 800e47c:	b140      	cbz	r0, 800e490 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800e47e:	280a      	cmp	r0, #10
 800e480:	bf08      	it	eq
 800e482:	3301      	addeq	r3, #1
 800e484:	a802      	add	r0, sp, #8
 800e486:	bf08      	it	eq
 800e488:	b21c      	sxtheq	r4, r3
 800e48a:	f001 f813 	bl	800f4b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e48e:	e7f4      	b.n	800e47a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800e490:	4618      	mov	r0, r3
 800e492:	b018      	add	sp, #96	; 0x60
 800e494:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e498:	b003      	add	sp, #12
 800e49a:	4770      	bx	lr

0800e49c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800e49c:	b40e      	push	{r1, r2, r3}
 800e49e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e4a0:	b098      	sub	sp, #96	; 0x60
 800e4a2:	ab1d      	add	r3, sp, #116	; 0x74
 800e4a4:	4605      	mov	r5, r0
 800e4a6:	f853 4b04 	ldr.w	r4, [r3], #4
 800e4aa:	9300      	str	r3, [sp, #0]
 800e4ac:	a802      	add	r0, sp, #8
 800e4ae:	f000 ffab 	bl	800f408 <_ZN8touchgfx12TextProviderC1Ev>
 800e4b2:	682b      	ldr	r3, [r5, #0]
 800e4b4:	4f21      	ldr	r7, [pc, #132]	; (800e53c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0xa0>)
 800e4b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e4b8:	4628      	mov	r0, r5
 800e4ba:	4798      	blx	r3
 800e4bc:	ae18      	add	r6, sp, #96	; 0x60
 800e4be:	4603      	mov	r3, r0
 800e4c0:	4621      	mov	r1, r4
 800e4c2:	9a00      	ldr	r2, [sp, #0]
 800e4c4:	a802      	add	r0, sp, #8
 800e4c6:	2400      	movs	r4, #0
 800e4c8:	f000 ffbb 	bl	800f442 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800e4cc:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800e4d0:	462a      	mov	r2, r5
 800e4d2:	4633      	mov	r3, r6
 800e4d4:	4621      	mov	r1, r4
 800e4d6:	a802      	add	r0, sp, #8
 800e4d8:	f001 f918 	bl	800f70c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e4dc:	b338      	cbz	r0, 800e52e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x92>
 800e4de:	280a      	cmp	r0, #10
 800e4e0:	d01e      	beq.n	800e520 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x84>
 800e4e2:	9901      	ldr	r1, [sp, #4]
 800e4e4:	b1e1      	cbz	r1, 800e520 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x84>
 800e4e6:	7b4b      	ldrb	r3, [r1, #13]
 800e4e8:	f891 c008 	ldrb.w	ip, [r1, #8]
 800e4ec:	79c9      	ldrb	r1, [r1, #7]
 800e4ee:	88aa      	ldrh	r2, [r5, #4]
 800e4f0:	f013 0f40 	tst.w	r3, #64	; 0x40
 800e4f4:	ea4f 1e03 	mov.w	lr, r3, lsl #4
 800e4f8:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800e4fc:	f40e 7e80 	and.w	lr, lr, #256	; 0x100
 800e500:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e504:	bf14      	ite	ne
 800e506:	4638      	movne	r0, r7
 800e508:	2000      	moveq	r0, #0
 800e50a:	ea41 010e 	orr.w	r1, r1, lr
 800e50e:	ea43 030c 	orr.w	r3, r3, ip
 800e512:	440a      	add	r2, r1
 800e514:	4303      	orrs	r3, r0
 800e516:	1ad3      	subs	r3, r2, r3
 800e518:	b29b      	uxth	r3, r3
 800e51a:	42a3      	cmp	r3, r4
 800e51c:	bfc8      	it	gt
 800e51e:	b21c      	sxthgt	r4, r3
 800e520:	4633      	mov	r3, r6
 800e522:	462a      	mov	r2, r5
 800e524:	2100      	movs	r1, #0
 800e526:	a802      	add	r0, sp, #8
 800e528:	f001 f8f0 	bl	800f70c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e52c:	e7d6      	b.n	800e4dc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x40>
 800e52e:	b2a0      	uxth	r0, r4
 800e530:	b018      	add	sp, #96	; 0x60
 800e532:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e536:	b003      	add	sp, #12
 800e538:	4770      	bx	lr
 800e53a:	bf00      	nop
 800e53c:	fffffe00 	.word	0xfffffe00

0800e540 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800e540:	b40e      	push	{r1, r2, r3}
 800e542:	b570      	push	{r4, r5, r6, lr}
 800e544:	b099      	sub	sp, #100	; 0x64
 800e546:	ab1d      	add	r3, sp, #116	; 0x74
 800e548:	4604      	mov	r4, r0
 800e54a:	f853 5b04 	ldr.w	r5, [r3], #4
 800e54e:	9300      	str	r3, [sp, #0]
 800e550:	a802      	add	r0, sp, #8
 800e552:	f000 ff59 	bl	800f408 <_ZN8touchgfx12TextProviderC1Ev>
 800e556:	6823      	ldr	r3, [r4, #0]
 800e558:	4620      	mov	r0, r4
 800e55a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e55c:	4798      	blx	r3
 800e55e:	4629      	mov	r1, r5
 800e560:	4603      	mov	r3, r0
 800e562:	9a00      	ldr	r2, [sp, #0]
 800e564:	a802      	add	r0, sp, #8
 800e566:	ad18      	add	r5, sp, #96	; 0x60
 800e568:	f000 ff6b 	bl	800f442 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800e56c:	2100      	movs	r1, #0
 800e56e:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800e572:	4622      	mov	r2, r4
 800e574:	462b      	mov	r3, r5
 800e576:	a802      	add	r0, sp, #8
 800e578:	f001 f8c8 	bl	800f70c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e57c:	26ff      	movs	r6, #255	; 0xff
 800e57e:	b190      	cbz	r0, 800e5a6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x66>
 800e580:	280a      	cmp	r0, #10
 800e582:	d009      	beq.n	800e598 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x58>
 800e584:	9a01      	ldr	r2, [sp, #4]
 800e586:	b13a      	cbz	r2, 800e598 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x58>
 800e588:	7923      	ldrb	r3, [r4, #4]
 800e58a:	7a12      	ldrb	r2, [r2, #8]
 800e58c:	1a9b      	subs	r3, r3, r2
 800e58e:	f003 03ff 	and.w	r3, r3, #255	; 0xff
 800e592:	429e      	cmp	r6, r3
 800e594:	bf28      	it	cs
 800e596:	461e      	movcs	r6, r3
 800e598:	462b      	mov	r3, r5
 800e59a:	4622      	mov	r2, r4
 800e59c:	2100      	movs	r1, #0
 800e59e:	a802      	add	r0, sp, #8
 800e5a0:	f001 f8b4 	bl	800f70c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e5a4:	e7eb      	b.n	800e57e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800e5a6:	4630      	mov	r0, r6
 800e5a8:	b019      	add	sp, #100	; 0x64
 800e5aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e5ae:	b003      	add	sp, #12
 800e5b0:	4770      	bx	lr

0800e5b2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800e5b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e5b6:	4606      	mov	r6, r0
 800e5b8:	b099      	sub	sp, #100	; 0x64
 800e5ba:	a802      	add	r0, sp, #8
 800e5bc:	4614      	mov	r4, r2
 800e5be:	4688      	mov	r8, r1
 800e5c0:	461d      	mov	r5, r3
 800e5c2:	f000 ff21 	bl	800f408 <_ZN8touchgfx12TextProviderC1Ev>
 800e5c6:	6833      	ldr	r3, [r6, #0]
 800e5c8:	4630      	mov	r0, r6
 800e5ca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e5cc:	4798      	blx	r3
 800e5ce:	462a      	mov	r2, r5
 800e5d0:	4603      	mov	r3, r0
 800e5d2:	4621      	mov	r1, r4
 800e5d4:	a802      	add	r0, sp, #8
 800e5d6:	f000 ff34 	bl	800f442 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800e5da:	f04f 0b00 	mov.w	fp, #0
 800e5de:	465f      	mov	r7, fp
 800e5e0:	46da      	mov	sl, fp
 800e5e2:	46d9      	mov	r9, fp
 800e5e4:	ab01      	add	r3, sp, #4
 800e5e6:	4632      	mov	r2, r6
 800e5e8:	4641      	mov	r1, r8
 800e5ea:	a802      	add	r0, sp, #8
 800e5ec:	f8cd 9004 	str.w	r9, [sp, #4]
 800e5f0:	f001 f88c 	bl	800f70c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e5f4:	4605      	mov	r5, r0
 800e5f6:	b108      	cbz	r0, 800e5fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x4a>
 800e5f8:	280a      	cmp	r0, #10
 800e5fa:	d10b      	bne.n	800e614 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x62>
 800e5fc:	4557      	cmp	r7, sl
 800e5fe:	bf38      	it	cc
 800e600:	4657      	movcc	r7, sl
 800e602:	f04f 0a00 	mov.w	sl, #0
 800e606:	b91d      	cbnz	r5, 800e610 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5e>
 800e608:	4638      	mov	r0, r7
 800e60a:	b019      	add	sp, #100	; 0x64
 800e60c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e610:	46ab      	mov	fp, r5
 800e612:	e7e7      	b.n	800e5e4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x32>
 800e614:	9a01      	ldr	r2, [sp, #4]
 800e616:	2a00      	cmp	r2, #0
 800e618:	d0fa      	beq.n	800e610 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5e>
 800e61a:	f992 400d 	ldrsb.w	r4, [r2, #13]
 800e61e:	6833      	ldr	r3, [r6, #0]
 800e620:	8895      	ldrh	r5, [r2, #4]
 800e622:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e624:	f404 7080 	and.w	r0, r4, #256	; 0x100
 800e628:	7a94      	ldrb	r4, [r2, #10]
 800e62a:	4659      	mov	r1, fp
 800e62c:	4304      	orrs	r4, r0
 800e62e:	4630      	mov	r0, r6
 800e630:	4798      	blx	r3
 800e632:	4420      	add	r0, r4
 800e634:	4450      	add	r0, sl
 800e636:	fa1f fa80 	uxth.w	sl, r0
 800e63a:	e7e4      	b.n	800e606 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x54>

0800e63c <_ZNK8touchgfx8Drawable10invalidateEv>:
 800e63c:	b513      	push	{r0, r1, r4, lr}
 800e63e:	1d01      	adds	r1, r0, #4
 800e640:	4603      	mov	r3, r0
 800e642:	c903      	ldmia	r1, {r0, r1}
 800e644:	466a      	mov	r2, sp
 800e646:	e882 0003 	stmia.w	r2, {r0, r1}
 800e64a:	2100      	movs	r1, #0
 800e64c:	9100      	str	r1, [sp, #0]
 800e64e:	6819      	ldr	r1, [r3, #0]
 800e650:	4618      	mov	r0, r3
 800e652:	690c      	ldr	r4, [r1, #16]
 800e654:	4611      	mov	r1, r2
 800e656:	47a0      	blx	r4
 800e658:	b002      	add	sp, #8
 800e65a:	bd10      	pop	{r4, pc}

0800e65c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800e65c:	b538      	push	{r3, r4, r5, lr}
 800e65e:	680b      	ldr	r3, [r1, #0]
 800e660:	460c      	mov	r4, r1
 800e662:	68db      	ldr	r3, [r3, #12]
 800e664:	4605      	mov	r5, r0
 800e666:	4798      	blx	r3
 800e668:	6823      	ldr	r3, [r4, #0]
 800e66a:	4620      	mov	r0, r4
 800e66c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e66e:	4629      	mov	r1, r5
 800e670:	4798      	blx	r3
 800e672:	4628      	mov	r0, r5
 800e674:	bd38      	pop	{r3, r4, r5, pc}

0800e676 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800e676:	b410      	push	{r4}
 800e678:	880a      	ldrh	r2, [r1, #0]
 800e67a:	8884      	ldrh	r4, [r0, #4]
 800e67c:	4422      	add	r2, r4
 800e67e:	800a      	strh	r2, [r1, #0]
 800e680:	88c4      	ldrh	r4, [r0, #6]
 800e682:	884a      	ldrh	r2, [r1, #2]
 800e684:	4422      	add	r2, r4
 800e686:	804a      	strh	r2, [r1, #2]
 800e688:	6940      	ldr	r0, [r0, #20]
 800e68a:	b120      	cbz	r0, 800e696 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800e68c:	6803      	ldr	r3, [r0, #0]
 800e68e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e692:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e694:	4718      	bx	r3
 800e696:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e69a:	4770      	bx	lr

0800e69c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800e69c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e69e:	460b      	mov	r3, r1
 800e6a0:	b085      	sub	sp, #20
 800e6a2:	4604      	mov	r4, r0
 800e6a4:	b901      	cbnz	r1, 800e6a8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800e6a6:	b1fa      	cbz	r2, 800e6e8 <_ZN8touchgfx8Drawable12moveRelativeEss+0x4c>
 800e6a8:	1d27      	adds	r7, r4, #4
 800e6aa:	e897 0003 	ldmia.w	r7, {r0, r1}
 800e6ae:	466e      	mov	r6, sp
 800e6b0:	e886 0003 	stmia.w	r6, {r0, r1}
 800e6b4:	88e1      	ldrh	r1, [r4, #6]
 800e6b6:	440a      	add	r2, r1
 800e6b8:	88a1      	ldrh	r1, [r4, #4]
 800e6ba:	4419      	add	r1, r3
 800e6bc:	6823      	ldr	r3, [r4, #0]
 800e6be:	b209      	sxth	r1, r1
 800e6c0:	4620      	mov	r0, r4
 800e6c2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e6c4:	b212      	sxth	r2, r2
 800e6c6:	4798      	blx	r3
 800e6c8:	e897 0003 	ldmia.w	r7, {r0, r1}
 800e6cc:	ad02      	add	r5, sp, #8
 800e6ce:	e885 0003 	stmia.w	r5, {r0, r1}
 800e6d2:	6960      	ldr	r0, [r4, #20]
 800e6d4:	b150      	cbz	r0, 800e6ec <_ZN8touchgfx8Drawable12moveRelativeEss+0x50>
 800e6d6:	6803      	ldr	r3, [r0, #0]
 800e6d8:	4631      	mov	r1, r6
 800e6da:	691b      	ldr	r3, [r3, #16]
 800e6dc:	4798      	blx	r3
 800e6de:	6960      	ldr	r0, [r4, #20]
 800e6e0:	6803      	ldr	r3, [r0, #0]
 800e6e2:	691b      	ldr	r3, [r3, #16]
 800e6e4:	4629      	mov	r1, r5
 800e6e6:	4798      	blx	r3
 800e6e8:	b005      	add	sp, #20
 800e6ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e6ec:	f7ff fb7c 	bl	800dde8 <_ZN8touchgfx11Application11getInstanceEv>
 800e6f0:	6803      	ldr	r3, [r0, #0]
 800e6f2:	4631      	mov	r1, r6
 800e6f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e6f6:	4798      	blx	r3
 800e6f8:	f7ff fb76 	bl	800dde8 <_ZN8touchgfx11Application11getInstanceEv>
 800e6fc:	6803      	ldr	r3, [r0, #0]
 800e6fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e700:	e7f0      	b.n	800e6e4 <_ZN8touchgfx8Drawable12moveRelativeEss+0x48>

0800e702 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800e702:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e704:	8882      	ldrh	r2, [r0, #4]
 800e706:	880b      	ldrh	r3, [r1, #0]
 800e708:	4413      	add	r3, r2
 800e70a:	800b      	strh	r3, [r1, #0]
 800e70c:	88c2      	ldrh	r2, [r0, #6]
 800e70e:	884b      	ldrh	r3, [r1, #2]
 800e710:	4413      	add	r3, r2
 800e712:	4602      	mov	r2, r0
 800e714:	804b      	strh	r3, [r1, #2]
 800e716:	4605      	mov	r5, r0
 800e718:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800e71c:	460c      	mov	r4, r1
 800e71e:	6851      	ldr	r1, [r2, #4]
 800e720:	466b      	mov	r3, sp
 800e722:	c303      	stmia	r3!, {r0, r1}
 800e724:	4621      	mov	r1, r4
 800e726:	4668      	mov	r0, sp
 800e728:	f7fd ff24 	bl	800c574 <_ZN8touchgfx4RectaNERKS0_>
 800e72c:	466b      	mov	r3, sp
 800e72e:	cb03      	ldmia	r3!, {r0, r1}
 800e730:	6020      	str	r0, [r4, #0]
 800e732:	6061      	str	r1, [r4, #4]
 800e734:	6968      	ldr	r0, [r5, #20]
 800e736:	b128      	cbz	r0, 800e744 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800e738:	6803      	ldr	r3, [r0, #0]
 800e73a:	691b      	ldr	r3, [r3, #16]
 800e73c:	4621      	mov	r1, r4
 800e73e:	4798      	blx	r3
 800e740:	b003      	add	sp, #12
 800e742:	bd30      	pop	{r4, r5, pc}
 800e744:	f7ff fb50 	bl	800dde8 <_ZN8touchgfx11Application11getInstanceEv>
 800e748:	6803      	ldr	r3, [r0, #0]
 800e74a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e74c:	e7f6      	b.n	800e73c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800e74e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800e74e:	b570      	push	{r4, r5, r6, lr}
 800e750:	8882      	ldrh	r2, [r0, #4]
 800e752:	880b      	ldrh	r3, [r1, #0]
 800e754:	4413      	add	r3, r2
 800e756:	800b      	strh	r3, [r1, #0]
 800e758:	88c2      	ldrh	r2, [r0, #6]
 800e75a:	884b      	ldrh	r3, [r1, #2]
 800e75c:	460c      	mov	r4, r1
 800e75e:	4413      	add	r3, r2
 800e760:	804b      	strh	r3, [r1, #2]
 800e762:	4605      	mov	r5, r0
 800e764:	1d01      	adds	r1, r0, #4
 800e766:	4620      	mov	r0, r4
 800e768:	f7fd ff04 	bl	800c574 <_ZN8touchgfx4RectaNERKS0_>
 800e76c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e770:	b153      	cbz	r3, 800e788 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800e772:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e776:	b13b      	cbz	r3, 800e788 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800e778:	6968      	ldr	r0, [r5, #20]
 800e77a:	b128      	cbz	r0, 800e788 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800e77c:	6803      	ldr	r3, [r0, #0]
 800e77e:	4621      	mov	r1, r4
 800e780:	6a1b      	ldr	r3, [r3, #32]
 800e782:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e786:	4718      	bx	r3
 800e788:	bd70      	pop	{r4, r5, r6, pc}

0800e78a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800e78a:	b510      	push	{r4, lr}
 800e78c:	4604      	mov	r4, r0
 800e78e:	4608      	mov	r0, r1
 800e790:	2300      	movs	r3, #0
 800e792:	8023      	strh	r3, [r4, #0]
 800e794:	8063      	strh	r3, [r4, #2]
 800e796:	6803      	ldr	r3, [r0, #0]
 800e798:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e79c:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800e7a0:	80a1      	strh	r1, [r4, #4]
 800e7a2:	80e2      	strh	r2, [r4, #6]
 800e7a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e7a6:	4621      	mov	r1, r4
 800e7a8:	4798      	blx	r3
 800e7aa:	4620      	mov	r0, r4
 800e7ac:	bd10      	pop	{r4, pc}
	...

0800e7b0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800e7b0:	b530      	push	{r4, r5, lr}
 800e7b2:	8083      	strh	r3, [r0, #4]
 800e7b4:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800e7b8:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800e7bc:	7183      	strb	r3, [r0, #6]
 800e7be:	79c3      	ldrb	r3, [r0, #7]
 800e7c0:	6101      	str	r1, [r0, #16]
 800e7c2:	f365 0306 	bfi	r3, r5, #0, #7
 800e7c6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800e7ca:	8282      	strh	r2, [r0, #20]
 800e7cc:	f365 13c7 	bfi	r3, r5, #7, #1
 800e7d0:	71c3      	strb	r3, [r0, #7]
 800e7d2:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800e7d6:	7203      	strb	r3, [r0, #8]
 800e7d8:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800e7dc:	7243      	strb	r3, [r0, #9]
 800e7de:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800e7e2:	8143      	strh	r3, [r0, #10]
 800e7e4:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800e7e8:	8183      	strh	r3, [r0, #12]
 800e7ea:	4b01      	ldr	r3, [pc, #4]	; (800e7f0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800e7ec:	6003      	str	r3, [r0, #0]
 800e7ee:	bd30      	pop	{r4, r5, pc}
 800e7f0:	0801e17c 	.word	0x0801e17c

0800e7f4 <_ZNK8touchgfx9ConstFont4findEt>:
 800e7f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e7f6:	8a84      	ldrh	r4, [r0, #20]
 800e7f8:	2500      	movs	r5, #0
 800e7fa:	3c01      	subs	r4, #1
 800e7fc:	260e      	movs	r6, #14
 800e7fe:	42a5      	cmp	r5, r4
 800e800:	dc0c      	bgt.n	800e81c <_ZNK8touchgfx9ConstFont4findEt+0x28>
 800e802:	192a      	adds	r2, r5, r4
 800e804:	6903      	ldr	r3, [r0, #16]
 800e806:	1052      	asrs	r2, r2, #1
 800e808:	fb06 3302 	mla	r3, r6, r2, r3
 800e80c:	889f      	ldrh	r7, [r3, #4]
 800e80e:	428f      	cmp	r7, r1
 800e810:	d901      	bls.n	800e816 <_ZNK8touchgfx9ConstFont4findEt+0x22>
 800e812:	1e54      	subs	r4, r2, #1
 800e814:	e7f3      	b.n	800e7fe <_ZNK8touchgfx9ConstFont4findEt+0xa>
 800e816:	d202      	bcs.n	800e81e <_ZNK8touchgfx9ConstFont4findEt+0x2a>
 800e818:	1c55      	adds	r5, r2, #1
 800e81a:	e7f0      	b.n	800e7fe <_ZNK8touchgfx9ConstFont4findEt+0xa>
 800e81c:	2300      	movs	r3, #0
 800e81e:	4618      	mov	r0, r3
 800e820:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e822 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800e822:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e824:	4605      	mov	r5, r0
 800e826:	4617      	mov	r7, r2
 800e828:	461e      	mov	r6, r3
 800e82a:	f7ff ffe3 	bl	800e7f4 <_ZNK8touchgfx9ConstFont4findEt>
 800e82e:	b9e0      	cbnz	r0, 800e86a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x48>
 800e830:	b911      	cbnz	r1, 800e838 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x16>
 800e832:	2400      	movs	r4, #0
 800e834:	4620      	mov	r0, r4
 800e836:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e838:	290a      	cmp	r1, #10
 800e83a:	d0fa      	beq.n	800e832 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800e83c:	682b      	ldr	r3, [r5, #0]
 800e83e:	4628      	mov	r0, r5
 800e840:	691b      	ldr	r3, [r3, #16]
 800e842:	4798      	blx	r3
 800e844:	4601      	mov	r1, r0
 800e846:	4628      	mov	r0, r5
 800e848:	f7ff ffd4 	bl	800e7f4 <_ZNK8touchgfx9ConstFont4findEt>
 800e84c:	4604      	mov	r4, r0
 800e84e:	2800      	cmp	r0, #0
 800e850:	d0ef      	beq.n	800e832 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800e852:	682b      	ldr	r3, [r5, #0]
 800e854:	4621      	mov	r1, r4
 800e856:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e858:	4628      	mov	r0, r5
 800e85a:	4798      	blx	r3
 800e85c:	6038      	str	r0, [r7, #0]
 800e85e:	682b      	ldr	r3, [r5, #0]
 800e860:	4628      	mov	r0, r5
 800e862:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e864:	4798      	blx	r3
 800e866:	7030      	strb	r0, [r6, #0]
 800e868:	e7e4      	b.n	800e834 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x12>
 800e86a:	4604      	mov	r4, r0
 800e86c:	e7f1      	b.n	800e852 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x30>

0800e86e <_ZN8touchgfx10ClickEventD1Ev>:
 800e86e:	4770      	bx	lr

0800e870 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800e870:	2000      	movs	r0, #0
 800e872:	4770      	bx	lr

0800e874 <_ZN8touchgfx9DragEventD1Ev>:
 800e874:	4770      	bx	lr

0800e876 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800e876:	2001      	movs	r0, #1
 800e878:	4770      	bx	lr

0800e87a <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800e87a:	2002      	movs	r0, #2
 800e87c:	4770      	bx	lr

0800e87e <_ZN8touchgfx12GestureEventD1Ev>:
 800e87e:	4770      	bx	lr

0800e880 <_ZN8touchgfx10ClickEventD0Ev>:
 800e880:	b510      	push	{r4, lr}
 800e882:	210c      	movs	r1, #12
 800e884:	4604      	mov	r4, r0
 800e886:	f00c fcc7 	bl	801b218 <_ZdlPvj>
 800e88a:	4620      	mov	r0, r4
 800e88c:	bd10      	pop	{r4, pc}

0800e88e <_ZN8touchgfx9DragEventD0Ev>:
 800e88e:	b510      	push	{r4, lr}
 800e890:	2110      	movs	r1, #16
 800e892:	4604      	mov	r4, r0
 800e894:	f00c fcc0 	bl	801b218 <_ZdlPvj>
 800e898:	4620      	mov	r0, r4
 800e89a:	bd10      	pop	{r4, pc}

0800e89c <_ZN8touchgfx12GestureEventD0Ev>:
 800e89c:	b510      	push	{r4, lr}
 800e89e:	210c      	movs	r1, #12
 800e8a0:	4604      	mov	r4, r0
 800e8a2:	f00c fcb9 	bl	801b218 <_ZdlPvj>
 800e8a6:	4620      	mov	r0, r4
 800e8a8:	bd10      	pop	{r4, pc}
	...

0800e8ac <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800e8ac:	b530      	push	{r4, r5, lr}
 800e8ae:	460d      	mov	r5, r1
 800e8b0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800e8b2:	b087      	sub	sp, #28
 800e8b4:	4604      	mov	r4, r0
 800e8b6:	b301      	cbz	r1, 800e8fa <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800e8b8:	a801      	add	r0, sp, #4
 800e8ba:	f7ff ff66 	bl	800e78a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e8be:	892a      	ldrh	r2, [r5, #8]
 800e8c0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e8c4:	7928      	ldrb	r0, [r5, #4]
 800e8c6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e8ca:	f88d 0010 	strb.w	r0, [sp, #16]
 800e8ce:	1ad2      	subs	r2, r2, r3
 800e8d0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e8d2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e8d4:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e8d8:	441a      	add	r2, r3
 800e8da:	896b      	ldrh	r3, [r5, #10]
 800e8dc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800e8e0:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e8e4:	1b5b      	subs	r3, r3, r5
 800e8e6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800e8e8:	442b      	add	r3, r5
 800e8ea:	4d05      	ldr	r5, [pc, #20]	; (800e900 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800e8ec:	9503      	str	r5, [sp, #12]
 800e8ee:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e8f2:	6803      	ldr	r3, [r0, #0]
 800e8f4:	a903      	add	r1, sp, #12
 800e8f6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e8f8:	4798      	blx	r3
 800e8fa:	b007      	add	sp, #28
 800e8fc:	bd30      	pop	{r4, r5, pc}
 800e8fe:	bf00      	nop
 800e900:	0801e1f8 	.word	0x0801e1f8

0800e904 <_ZNK8touchgfx4Rect9intersectEss>:
 800e904:	b510      	push	{r4, lr}
 800e906:	f9b0 3000 	ldrsh.w	r3, [r0]
 800e90a:	428b      	cmp	r3, r1
 800e90c:	dc10      	bgt.n	800e930 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800e90e:	8884      	ldrh	r4, [r0, #4]
 800e910:	4423      	add	r3, r4
 800e912:	b21b      	sxth	r3, r3
 800e914:	4299      	cmp	r1, r3
 800e916:	da0b      	bge.n	800e930 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800e918:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e91c:	4293      	cmp	r3, r2
 800e91e:	dc07      	bgt.n	800e930 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800e920:	88c0      	ldrh	r0, [r0, #6]
 800e922:	4418      	add	r0, r3
 800e924:	b200      	sxth	r0, r0
 800e926:	4282      	cmp	r2, r0
 800e928:	bfac      	ite	ge
 800e92a:	2000      	movge	r0, #0
 800e92c:	2001      	movlt	r0, #1
 800e92e:	bd10      	pop	{r4, pc}
 800e930:	2000      	movs	r0, #0
 800e932:	e7fc      	b.n	800e92e <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800e934 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800e934:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e936:	460c      	mov	r4, r1
 800e938:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800e93a:	b089      	sub	sp, #36	; 0x24
 800e93c:	4605      	mov	r5, r0
 800e93e:	2900      	cmp	r1, #0
 800e940:	d054      	beq.n	800e9ec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800e942:	4668      	mov	r0, sp
 800e944:	f7ff ff21 	bl	800e78a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e948:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800e94a:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800e94c:	8922      	ldrh	r2, [r4, #8]
 800e94e:	88e1      	ldrh	r1, [r4, #6]
 800e950:	443a      	add	r2, r7
 800e952:	4431      	add	r1, r6
 800e954:	b212      	sxth	r2, r2
 800e956:	b209      	sxth	r1, r1
 800e958:	4668      	mov	r0, sp
 800e95a:	f7ff ffd3 	bl	800e904 <_ZNK8touchgfx4Rect9intersectEss>
 800e95e:	b1d0      	cbz	r0, 800e996 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800e960:	89a2      	ldrh	r2, [r4, #12]
 800e962:	8961      	ldrh	r1, [r4, #10]
 800e964:	443a      	add	r2, r7
 800e966:	4431      	add	r1, r6
 800e968:	b212      	sxth	r2, r2
 800e96a:	b209      	sxth	r1, r1
 800e96c:	4668      	mov	r0, sp
 800e96e:	f7ff ffc9 	bl	800e904 <_ZNK8touchgfx4Rect9intersectEss>
 800e972:	4603      	mov	r3, r0
 800e974:	b978      	cbnz	r0, 800e996 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800e976:	4a1e      	ldr	r2, [pc, #120]	; (800e9f0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800e978:	9204      	str	r2, [sp, #16]
 800e97a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e97c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e980:	2202      	movs	r2, #2
 800e982:	f88d 2014 	strb.w	r2, [sp, #20]
 800e986:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e98a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e98e:	6803      	ldr	r3, [r0, #0]
 800e990:	a904      	add	r1, sp, #16
 800e992:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e994:	4798      	blx	r3
 800e996:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800e998:	a802      	add	r0, sp, #8
 800e99a:	f7ff fef6 	bl	800e78a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e99e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800e9a2:	88e0      	ldrh	r0, [r4, #6]
 800e9a4:	8961      	ldrh	r1, [r4, #10]
 800e9a6:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800e9aa:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800e9ae:	8923      	ldrh	r3, [r4, #8]
 800e9b0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800e9b2:	7927      	ldrb	r7, [r4, #4]
 800e9b4:	f88d 7014 	strb.w	r7, [sp, #20]
 800e9b8:	1a80      	subs	r0, r0, r2
 800e9ba:	1a89      	subs	r1, r1, r2
 800e9bc:	89a2      	ldrh	r2, [r4, #12]
 800e9be:	4c0d      	ldr	r4, [pc, #52]	; (800e9f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800e9c0:	9404      	str	r4, [sp, #16]
 800e9c2:	4460      	add	r0, ip
 800e9c4:	eba3 030e 	sub.w	r3, r3, lr
 800e9c8:	eba2 020e 	sub.w	r2, r2, lr
 800e9cc:	f8ad 0016 	strh.w	r0, [sp, #22]
 800e9d0:	4433      	add	r3, r6
 800e9d2:	4461      	add	r1, ip
 800e9d4:	4432      	add	r2, r6
 800e9d6:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e9d8:	f8ad 101a 	strh.w	r1, [sp, #26]
 800e9dc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e9e0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e9e4:	6803      	ldr	r3, [r0, #0]
 800e9e6:	a904      	add	r1, sp, #16
 800e9e8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e9ea:	4798      	blx	r3
 800e9ec:	b009      	add	sp, #36	; 0x24
 800e9ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e9f0:	0801e1d0 	.word	0x0801e1d0
 800e9f4:	0801e1e4 	.word	0x0801e1e4

0800e9f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800e9f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e9fc:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800ea00:	790b      	ldrb	r3, [r1, #4]
 800ea02:	b0a1      	sub	sp, #132	; 0x84
 800ea04:	4604      	mov	r4, r0
 800ea06:	460d      	mov	r5, r1
 800ea08:	f1b9 0f00 	cmp.w	r9, #0
 800ea0c:	d00f      	beq.n	800ea2e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800ea0e:	2b00      	cmp	r3, #0
 800ea10:	f040 80a0 	bne.w	800eb54 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800ea14:	b021      	add	sp, #132	; 0x84
 800ea16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea1a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800ea1e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800ea22:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800ea26:	1d20      	adds	r0, r4, #4
 800ea28:	f7fd fcf2 	bl	800c410 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ea2c:	e092      	b.n	800eb54 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800ea2e:	2b00      	cmp	r3, #0
 800ea30:	d1f0      	bne.n	800ea14 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800ea32:	4b5e      	ldr	r3, [pc, #376]	; (800ebac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800ea34:	681b      	ldr	r3, [r3, #0]
 800ea36:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800ea3a:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800ea3e:	f1ba 0f03 	cmp.w	sl, #3
 800ea42:	ddea      	ble.n	800ea1a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800ea44:	f1ba 0f0c 	cmp.w	sl, #12
 800ea48:	f04f 0303 	mov.w	r3, #3
 800ea4c:	bfdc      	itt	le
 800ea4e:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800ea52:	fb92 f3f3 	sdivle	r3, r2, r3
 800ea56:	9301      	str	r3, [sp, #4]
 800ea58:	4b55      	ldr	r3, [pc, #340]	; (800ebb0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800ea5a:	4956      	ldr	r1, [pc, #344]	; (800ebb4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800ea5c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ea60:	4b55      	ldr	r3, [pc, #340]	; (800ebb8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800ea62:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800ea66:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ea6a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800ea6e:	ab0e      	add	r3, sp, #56	; 0x38
 800ea70:	2248      	movs	r2, #72	; 0x48
 800ea72:	2600      	movs	r6, #0
 800ea74:	4618      	mov	r0, r3
 800ea76:	960a      	str	r6, [sp, #40]	; 0x28
 800ea78:	f00c fc78 	bl	801b36c <memcpy>
 800ea7c:	f04f 32ff 	mov.w	r2, #4294967295
 800ea80:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800ea84:	f8cd a008 	str.w	sl, [sp, #8]
 800ea88:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800ea8c:	fb93 f3f2 	sdiv	r3, r3, r2
 800ea90:	b29b      	uxth	r3, r3
 800ea92:	46b3      	mov	fp, r6
 800ea94:	9303      	str	r3, [sp, #12]
 800ea96:	2300      	movs	r3, #0
 800ea98:	9309      	str	r3, [sp, #36]	; 0x24
 800ea9a:	9b07      	ldr	r3, [sp, #28]
 800ea9c:	9a03      	ldr	r2, [sp, #12]
 800ea9e:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800eaa2:	88ef      	ldrh	r7, [r5, #6]
 800eaa4:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800eaa8:	fb13 f302 	smulbb	r3, r3, r2
 800eaac:	b29b      	uxth	r3, r3
 800eaae:	9304      	str	r3, [sp, #16]
 800eab0:	9b07      	ldr	r3, [sp, #28]
 800eab2:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800eab6:	a80a      	add	r0, sp, #40	; 0x28
 800eab8:	685b      	ldr	r3, [r3, #4]
 800eaba:	fb13 f302 	smulbb	r3, r3, r2
 800eabe:	b29b      	uxth	r3, r3
 800eac0:	9305      	str	r3, [sp, #20]
 800eac2:	9b04      	ldr	r3, [sp, #16]
 800eac4:	441f      	add	r7, r3
 800eac6:	9b05      	ldr	r3, [sp, #20]
 800eac8:	4498      	add	r8, r3
 800eaca:	b23f      	sxth	r7, r7
 800eacc:	fa0f f888 	sxth.w	r8, r8
 800ead0:	4642      	mov	r2, r8
 800ead2:	4639      	mov	r1, r7
 800ead4:	f7ff ff16 	bl	800e904 <_ZNK8touchgfx4Rect9intersectEss>
 800ead8:	b380      	cbz	r0, 800eb3c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800eada:	4639      	mov	r1, r7
 800eadc:	ab09      	add	r3, sp, #36	; 0x24
 800eade:	4642      	mov	r2, r8
 800eae0:	1d20      	adds	r0, r4, #4
 800eae2:	f7fd fc95 	bl	800c410 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800eae6:	9909      	ldr	r1, [sp, #36]	; 0x24
 800eae8:	b341      	cbz	r1, 800eb3c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800eaea:	4549      	cmp	r1, r9
 800eaec:	d026      	beq.n	800eb3c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800eaee:	a80c      	add	r0, sp, #48	; 0x30
 800eaf0:	f7ff fe4b 	bl	800e78a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eaf4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800eaf8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800eafc:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800eb00:	2002      	movs	r0, #2
 800eb02:	fb92 f2f0 	sdiv	r2, r2, r0
 800eb06:	440a      	add	r2, r1
 800eb08:	1a99      	subs	r1, r3, r2
 800eb0a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800eb0e:	fb93 f3f0 	sdiv	r3, r3, r0
 800eb12:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800eb16:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800eb1a:	4403      	add	r3, r0
 800eb1c:	1ad3      	subs	r3, r2, r3
 800eb1e:	435b      	muls	r3, r3
 800eb20:	9a06      	ldr	r2, [sp, #24]
 800eb22:	fb01 3301 	mla	r3, r1, r1, r3
 800eb26:	4293      	cmp	r3, r2
 800eb28:	d208      	bcs.n	800eb3c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800eb2a:	9a04      	ldr	r2, [sp, #16]
 800eb2c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800eb30:	86a2      	strh	r2, [r4, #52]	; 0x34
 800eb32:	9a05      	ldr	r2, [sp, #20]
 800eb34:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800eb38:	86e2      	strh	r2, [r4, #54]	; 0x36
 800eb3a:	9306      	str	r3, [sp, #24]
 800eb3c:	f10b 0b02 	add.w	fp, fp, #2
 800eb40:	f1bb 0f08 	cmp.w	fp, #8
 800eb44:	dda7      	ble.n	800ea96 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800eb46:	9b02      	ldr	r3, [sp, #8]
 800eb48:	4453      	add	r3, sl
 800eb4a:	9302      	str	r3, [sp, #8]
 800eb4c:	9b01      	ldr	r3, [sp, #4]
 800eb4e:	3601      	adds	r6, #1
 800eb50:	42b3      	cmp	r3, r6
 800eb52:	d199      	bne.n	800ea88 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800eb54:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800eb56:	2900      	cmp	r1, #0
 800eb58:	f43f af5c 	beq.w	800ea14 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800eb5c:	a80c      	add	r0, sp, #48	; 0x30
 800eb5e:	f7ff fe14 	bl	800e78a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eb62:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800eb66:	88ea      	ldrh	r2, [r5, #6]
 800eb68:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800eb6c:	7929      	ldrb	r1, [r5, #4]
 800eb6e:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800eb72:	1ad2      	subs	r2, r2, r3
 800eb74:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800eb76:	441a      	add	r2, r3
 800eb78:	892b      	ldrh	r3, [r5, #8]
 800eb7a:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800eb7e:	1a1b      	subs	r3, r3, r0
 800eb80:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800eb82:	4403      	add	r3, r0
 800eb84:	480d      	ldr	r0, [pc, #52]	; (800ebbc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800eb86:	900e      	str	r0, [sp, #56]	; 0x38
 800eb88:	2600      	movs	r6, #0
 800eb8a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800eb8c:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800eb90:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800eb94:	6803      	ldr	r3, [r0, #0]
 800eb96:	a90e      	add	r1, sp, #56	; 0x38
 800eb98:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eb9a:	4798      	blx	r3
 800eb9c:	792b      	ldrb	r3, [r5, #4]
 800eb9e:	2b00      	cmp	r3, #0
 800eba0:	f43f af38 	beq.w	800ea14 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800eba4:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800eba8:	e734      	b.n	800ea14 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800ebaa:	bf00      	nop
 800ebac:	20026900 	.word	0x20026900
 800ebb0:	200268f4 	.word	0x200268f4
 800ebb4:	0801ca50 	.word	0x0801ca50
 800ebb8:	200268f6 	.word	0x200268f6
 800ebbc:	0801e1d0 	.word	0x0801e1d0

0800ebc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800ebc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ebc2:	4604      	mov	r4, r0
 800ebc4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800ebc8:	3201      	adds	r2, #1
 800ebca:	d112      	bne.n	800ebf2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800ebcc:	6803      	ldr	r3, [r0, #0]
 800ebce:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800ebd2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ebd6:	f8ad 1004 	strh.w	r1, [sp, #4]
 800ebda:	2500      	movs	r5, #0
 800ebdc:	9500      	str	r5, [sp, #0]
 800ebde:	466d      	mov	r5, sp
 800ebe0:	4629      	mov	r1, r5
 800ebe2:	f8ad 2006 	strh.w	r2, [sp, #6]
 800ebe6:	6a1b      	ldr	r3, [r3, #32]
 800ebe8:	4798      	blx	r3
 800ebea:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ebee:	e884 0003 	stmia.w	r4, {r0, r1}
 800ebf2:	4620      	mov	r0, r4
 800ebf4:	b003      	add	sp, #12
 800ebf6:	bd30      	pop	{r4, r5, pc}

0800ebf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800ebf8:	b513      	push	{r0, r1, r4, lr}
 800ebfa:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800ebfe:	3301      	adds	r3, #1
 800ec00:	4604      	mov	r4, r0
 800ec02:	d109      	bne.n	800ec18 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800ec04:	4601      	mov	r1, r0
 800ec06:	4668      	mov	r0, sp
 800ec08:	f7ff fdbf 	bl	800e78a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ec0c:	f8bd 3000 	ldrh.w	r3, [sp]
 800ec10:	8423      	strh	r3, [r4, #32]
 800ec12:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ec16:	8463      	strh	r3, [r4, #34]	; 0x22
 800ec18:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800ec1c:	b002      	add	sp, #8
 800ec1e:	bd10      	pop	{r4, pc}

0800ec20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800ec20:	b513      	push	{r0, r1, r4, lr}
 800ec22:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800ec26:	3301      	adds	r3, #1
 800ec28:	4604      	mov	r4, r0
 800ec2a:	d109      	bne.n	800ec40 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800ec2c:	4601      	mov	r1, r0
 800ec2e:	4668      	mov	r0, sp
 800ec30:	f7ff fdab 	bl	800e78a <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ec34:	f8bd 3000 	ldrh.w	r3, [sp]
 800ec38:	8423      	strh	r3, [r4, #32]
 800ec3a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ec3e:	8463      	strh	r3, [r4, #34]	; 0x22
 800ec40:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800ec44:	b002      	add	sp, #8
 800ec46:	bd10      	pop	{r4, pc}

0800ec48 <_ZN8touchgfx6ScreenC1Ev>:
 800ec48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ec4a:	4605      	mov	r5, r0
 800ec4c:	4b17      	ldr	r3, [pc, #92]	; (800ecac <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800ec4e:	f845 3b04 	str.w	r3, [r5], #4
 800ec52:	2301      	movs	r3, #1
 800ec54:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
 800ec58:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 800ec5c:	4b14      	ldr	r3, [pc, #80]	; (800ecb0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800ec5e:	4915      	ldr	r1, [pc, #84]	; (800ecb4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800ec60:	f9b3 7000 	ldrsh.w	r7, [r3]
 800ec64:	4b14      	ldr	r3, [pc, #80]	; (800ecb8 <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800ec66:	6041      	str	r1, [r0, #4]
 800ec68:	2200      	movs	r2, #0
 800ec6a:	8102      	strh	r2, [r0, #8]
 800ec6c:	8142      	strh	r2, [r0, #10]
 800ec6e:	8182      	strh	r2, [r0, #12]
 800ec70:	81c2      	strh	r2, [r0, #14]
 800ec72:	8202      	strh	r2, [r0, #16]
 800ec74:	8242      	strh	r2, [r0, #18]
 800ec76:	8282      	strh	r2, [r0, #20]
 800ec78:	82c2      	strh	r2, [r0, #22]
 800ec7a:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800ec7e:	6202      	str	r2, [r0, #32]
 800ec80:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800ec84:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 800ec88:	6342      	str	r2, [r0, #52]	; 0x34
 800ec8a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800ec8e:	4611      	mov	r1, r2
 800ec90:	4604      	mov	r4, r0
 800ec92:	4628      	mov	r0, r5
 800ec94:	f7fa ff89 	bl	8009baa <_ZN8touchgfx8Drawable5setXYEss>
 800ec98:	4639      	mov	r1, r7
 800ec9a:	4628      	mov	r0, r5
 800ec9c:	f7fa ffa3 	bl	8009be6 <_ZN8touchgfx8Drawable8setWidthEs>
 800eca0:	4628      	mov	r0, r5
 800eca2:	4631      	mov	r1, r6
 800eca4:	f7fa ffae 	bl	8009c04 <_ZN8touchgfx8Drawable9setHeightEs>
 800eca8:	4620      	mov	r0, r4
 800ecaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ecac:	0801e20c 	.word	0x0801e20c
 800ecb0:	200268f4 	.word	0x200268f4
 800ecb4:	0801d57c 	.word	0x0801d57c
 800ecb8:	200268f6 	.word	0x200268f6

0800ecbc <_ZN8touchgfx6Screen4drawEv>:
 800ecbc:	b507      	push	{r0, r1, r2, lr}
 800ecbe:	4b09      	ldr	r3, [pc, #36]	; (800ece4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800ecc0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ecc4:	4b08      	ldr	r3, [pc, #32]	; (800ece8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800ecc6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ecca:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ecce:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ecd2:	6803      	ldr	r3, [r0, #0]
 800ecd4:	2100      	movs	r1, #0
 800ecd6:	9100      	str	r1, [sp, #0]
 800ecd8:	689b      	ldr	r3, [r3, #8]
 800ecda:	4669      	mov	r1, sp
 800ecdc:	4798      	blx	r3
 800ecde:	b003      	add	sp, #12
 800ece0:	f85d fb04 	ldr.w	pc, [sp], #4
 800ece4:	200268f4 	.word	0x200268f4
 800ece8:	200268f6 	.word	0x200268f6

0800ecec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800ecec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ecf0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800ecf4:	b089      	sub	sp, #36	; 0x24
 800ecf6:	4680      	mov	r8, r0
 800ecf8:	460c      	mov	r4, r1
 800ecfa:	4615      	mov	r5, r2
 800ecfc:	b16b      	cbz	r3, 800ed1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800ecfe:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800ed02:	b153      	cbz	r3, 800ed1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800ed04:	4628      	mov	r0, r5
 800ed06:	f7ff ff5b 	bl	800ebc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800ed0a:	4621      	mov	r1, r4
 800ed0c:	f7fe ffe2 	bl	800dcd4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800ed10:	69eb      	ldr	r3, [r5, #28]
 800ed12:	b928      	cbnz	r0, 800ed20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x34>
 800ed14:	461d      	mov	r5, r3
 800ed16:	2b00      	cmp	r3, #0
 800ed18:	d1f4      	bne.n	800ed04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x18>
 800ed1a:	b009      	add	sp, #36	; 0x24
 800ed1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed20:	ae04      	add	r6, sp, #16
 800ed22:	2b00      	cmp	r3, #0
 800ed24:	d051      	beq.n	800edca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800ed26:	682b      	ldr	r3, [r5, #0]
 800ed28:	4629      	mov	r1, r5
 800ed2a:	68db      	ldr	r3, [r3, #12]
 800ed2c:	a802      	add	r0, sp, #8
 800ed2e:	4798      	blx	r3
 800ed30:	4628      	mov	r0, r5
 800ed32:	f7ff ff61 	bl	800ebf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800ed36:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800ed3a:	4407      	add	r7, r0
 800ed3c:	4628      	mov	r0, r5
 800ed3e:	f7ff ff6f 	bl	800ec20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800ed42:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800ed46:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800ed4a:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ed4e:	4418      	add	r0, r3
 800ed50:	4621      	mov	r1, r4
 800ed52:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ed56:	f8ad 0012 	strh.w	r0, [sp, #18]
 800ed5a:	b23f      	sxth	r7, r7
 800ed5c:	4630      	mov	r0, r6
 800ed5e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ed62:	f8ad 7010 	strh.w	r7, [sp, #16]
 800ed66:	f7fd fc05 	bl	800c574 <_ZN8touchgfx4RectaNERKS0_>
 800ed6a:	4628      	mov	r0, r5
 800ed6c:	f7ff ff28 	bl	800ebc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800ed70:	4602      	mov	r2, r0
 800ed72:	e896 0003 	ldmia.w	r6, {r0, r1}
 800ed76:	ab06      	add	r3, sp, #24
 800ed78:	e883 0003 	stmia.w	r3, {r0, r1}
 800ed7c:	4611      	mov	r1, r2
 800ed7e:	4618      	mov	r0, r3
 800ed80:	f7fd fbf8 	bl	800c574 <_ZN8touchgfx4RectaNERKS0_>
 800ed84:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800ed88:	f9b4 1000 	ldrsh.w	r1, [r4]
 800ed8c:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800ed90:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800ed94:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800ed98:	4299      	cmp	r1, r3
 800ed9a:	d10b      	bne.n	800edb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800ed9c:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800eda0:	4552      	cmp	r2, sl
 800eda2:	d107      	bne.n	800edb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800eda4:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800eda8:	455a      	cmp	r2, fp
 800edaa:	d103      	bne.n	800edb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800edac:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800edb0:	454a      	cmp	r2, r9
 800edb2:	d00a      	beq.n	800edca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800edb4:	f1bb 0f00 	cmp.w	fp, #0
 800edb8:	d002      	beq.n	800edc0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd4>
 800edba:	f1b9 0f00 	cmp.w	r9, #0
 800edbe:	d12e      	bne.n	800ee1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x132>
 800edc0:	69ea      	ldr	r2, [r5, #28]
 800edc2:	4621      	mov	r1, r4
 800edc4:	4640      	mov	r0, r8
 800edc6:	f7ff ff91 	bl	800ecec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800edca:	4628      	mov	r0, r5
 800edcc:	f7ff fef8 	bl	800ebc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800edd0:	6861      	ldr	r1, [r4, #4]
 800edd2:	4602      	mov	r2, r0
 800edd4:	6820      	ldr	r0, [r4, #0]
 800edd6:	4633      	mov	r3, r6
 800edd8:	c303      	stmia	r3!, {r0, r1}
 800edda:	4611      	mov	r1, r2
 800eddc:	4630      	mov	r0, r6
 800edde:	f7fd fbc9 	bl	800c574 <_ZN8touchgfx4RectaNERKS0_>
 800ede2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800ede6:	2b00      	cmp	r3, #0
 800ede8:	d097      	beq.n	800ed1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800edea:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800edee:	2b00      	cmp	r3, #0
 800edf0:	d093      	beq.n	800ed1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800edf2:	4628      	mov	r0, r5
 800edf4:	f7ff ff00 	bl	800ebf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800edf8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800edfc:	1a18      	subs	r0, r3, r0
 800edfe:	f8ad 0010 	strh.w	r0, [sp, #16]
 800ee02:	4628      	mov	r0, r5
 800ee04:	f7ff ff0c 	bl	800ec20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800ee08:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ee0c:	1a18      	subs	r0, r3, r0
 800ee0e:	f8ad 0012 	strh.w	r0, [sp, #18]
 800ee12:	682b      	ldr	r3, [r5, #0]
 800ee14:	4631      	mov	r1, r6
 800ee16:	689b      	ldr	r3, [r3, #8]
 800ee18:	4628      	mov	r0, r5
 800ee1a:	4798      	blx	r3
 800ee1c:	e77d      	b.n	800ed1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800ee1e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800ee22:	fa1f f08a 	uxth.w	r0, sl
 800ee26:	4552      	cmp	r2, sl
 800ee28:	9000      	str	r0, [sp, #0]
 800ee2a:	da12      	bge.n	800ee52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x166>
 800ee2c:	9301      	str	r3, [sp, #4]
 800ee2e:	9b00      	ldr	r3, [sp, #0]
 800ee30:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800ee34:	f8ad 2012 	strh.w	r2, [sp, #18]
 800ee38:	1a9a      	subs	r2, r3, r2
 800ee3a:	f8ad 1010 	strh.w	r1, [sp, #16]
 800ee3e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ee42:	f8ad 2016 	strh.w	r2, [sp, #22]
 800ee46:	69ea      	ldr	r2, [r5, #28]
 800ee48:	4631      	mov	r1, r6
 800ee4a:	4640      	mov	r0, r8
 800ee4c:	f7ff ff4e 	bl	800ecec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ee50:	9b01      	ldr	r3, [sp, #4]
 800ee52:	f9b4 2000 	ldrsh.w	r2, [r4]
 800ee56:	429a      	cmp	r2, r3
 800ee58:	b29f      	uxth	r7, r3
 800ee5a:	da0d      	bge.n	800ee78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x18c>
 800ee5c:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ee60:	1aba      	subs	r2, r7, r2
 800ee62:	f8ad a012 	strh.w	sl, [sp, #18]
 800ee66:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ee6a:	f8ad 9016 	strh.w	r9, [sp, #22]
 800ee6e:	69ea      	ldr	r2, [r5, #28]
 800ee70:	4631      	mov	r1, r6
 800ee72:	4640      	mov	r0, r8
 800ee74:	f7ff ff3a 	bl	800ecec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ee78:	8822      	ldrh	r2, [r4, #0]
 800ee7a:	88a3      	ldrh	r3, [r4, #4]
 800ee7c:	445f      	add	r7, fp
 800ee7e:	4413      	add	r3, r2
 800ee80:	b29b      	uxth	r3, r3
 800ee82:	b2bf      	uxth	r7, r7
 800ee84:	b23a      	sxth	r2, r7
 800ee86:	b219      	sxth	r1, r3
 800ee88:	4291      	cmp	r1, r2
 800ee8a:	dd0d      	ble.n	800eea8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1bc>
 800ee8c:	1bdb      	subs	r3, r3, r7
 800ee8e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ee92:	f8ad a012 	strh.w	sl, [sp, #18]
 800ee96:	f8ad 3014 	strh.w	r3, [sp, #20]
 800ee9a:	f8ad 9016 	strh.w	r9, [sp, #22]
 800ee9e:	69ea      	ldr	r2, [r5, #28]
 800eea0:	4631      	mov	r1, r6
 800eea2:	4640      	mov	r0, r8
 800eea4:	f7ff ff22 	bl	800ecec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800eea8:	88e2      	ldrh	r2, [r4, #6]
 800eeaa:	8863      	ldrh	r3, [r4, #2]
 800eeac:	4413      	add	r3, r2
 800eeae:	9a00      	ldr	r2, [sp, #0]
 800eeb0:	444a      	add	r2, r9
 800eeb2:	b29b      	uxth	r3, r3
 800eeb4:	fa1f f982 	uxth.w	r9, r2
 800eeb8:	fa0f f289 	sxth.w	r2, r9
 800eebc:	b219      	sxth	r1, r3
 800eebe:	428a      	cmp	r2, r1
 800eec0:	da83      	bge.n	800edca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800eec2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800eec6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800eeca:	f8ad 1014 	strh.w	r1, [sp, #20]
 800eece:	eba3 0309 	sub.w	r3, r3, r9
 800eed2:	f8ad 0010 	strh.w	r0, [sp, #16]
 800eed6:	f8ad 2012 	strh.w	r2, [sp, #18]
 800eeda:	f8ad 3016 	strh.w	r3, [sp, #22]
 800eede:	69ea      	ldr	r2, [r5, #28]
 800eee0:	4631      	mov	r1, r6
 800eee2:	e76f      	b.n	800edc4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd8>

0800eee4 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800eee4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800eee6:	aa02      	add	r2, sp, #8
 800eee8:	2300      	movs	r3, #0
 800eeea:	f842 3d04 	str.w	r3, [r2, #-4]!
 800eeee:	4604      	mov	r4, r0
 800eef0:	3004      	adds	r0, #4
 800eef2:	460d      	mov	r5, r1
 800eef4:	f7fd fc15 	bl	800c722 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800eef8:	9a01      	ldr	r2, [sp, #4]
 800eefa:	b11a      	cbz	r2, 800ef04 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800eefc:	4629      	mov	r1, r5
 800eefe:	4620      	mov	r0, r4
 800ef00:	f7ff fef4 	bl	800ecec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ef04:	b003      	add	sp, #12
 800ef06:	bd30      	pop	{r4, r5, pc}

0800ef08 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800ef08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ef0a:	4602      	mov	r2, r0
 800ef0c:	4604      	mov	r4, r0
 800ef0e:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800ef12:	460d      	mov	r5, r1
 800ef14:	6851      	ldr	r1, [r2, #4]
 800ef16:	466b      	mov	r3, sp
 800ef18:	c303      	stmia	r3!, {r0, r1}
 800ef1a:	4629      	mov	r1, r5
 800ef1c:	4668      	mov	r0, sp
 800ef1e:	f7fd fb29 	bl	800c574 <_ZN8touchgfx4RectaNERKS0_>
 800ef22:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ef26:	4669      	mov	r1, sp
 800ef28:	b123      	cbz	r3, 800ef34 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800ef2a:	4620      	mov	r0, r4
 800ef2c:	f7ff ffda 	bl	800eee4 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800ef30:	b003      	add	sp, #12
 800ef32:	bd30      	pop	{r4, r5, pc}
 800ef34:	1d20      	adds	r0, r4, #4
 800ef36:	f7fd fbbb 	bl	800c6b0 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800ef3a:	e7f9      	b.n	800ef30 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800ef3c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800ef3c:	680a      	ldr	r2, [r1, #0]
 800ef3e:	460b      	mov	r3, r1
 800ef40:	6952      	ldr	r2, [r2, #20]
 800ef42:	1d01      	adds	r1, r0, #4
 800ef44:	4618      	mov	r0, r3
 800ef46:	4710      	bx	r2

0800ef48 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>:
 800ef48:	f011 0f40 	tst.w	r1, #64	; 0x40
 800ef4c:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 800ef50:	4b03      	ldr	r3, [pc, #12]	; (800ef60 <_ZNK8touchgfx9GlyphNode3topEv.isra.2+0x18>)
 800ef52:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ef56:	bf08      	it	eq
 800ef58:	2300      	moveq	r3, #0
 800ef5a:	4308      	orrs	r0, r1
 800ef5c:	4318      	orrs	r0, r3
 800ef5e:	4770      	bx	lr
 800ef60:	fffffe00 	.word	0xfffffe00

0800ef64 <_ZN8touchgfx9GlyphNode6setTopEs>:
 800ef64:	7b43      	ldrb	r3, [r0, #13]
 800ef66:	7201      	strb	r1, [r0, #8]
 800ef68:	b289      	uxth	r1, r1
 800ef6a:	f003 039f 	and.w	r3, r3, #159	; 0x9f
 800ef6e:	05ca      	lsls	r2, r1, #23
 800ef70:	bf48      	it	mi
 800ef72:	f043 0320 	orrmi.w	r3, r3, #32
 800ef76:	7343      	strb	r3, [r0, #13]
 800ef78:	058b      	lsls	r3, r1, #22
 800ef7a:	bf42      	ittt	mi
 800ef7c:	7b43      	ldrbmi	r3, [r0, #13]
 800ef7e:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 800ef82:	7343      	strbmi	r3, [r0, #13]
 800ef84:	4770      	bx	lr

0800ef86 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800ef86:	b530      	push	{r4, r5, lr}
 800ef88:	2500      	movs	r5, #0
 800ef8a:	2401      	movs	r4, #1
 800ef8c:	6843      	ldr	r3, [r0, #4]
 800ef8e:	b913      	cbnz	r3, 800ef96 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800ef90:	6803      	ldr	r3, [r0, #0]
 800ef92:	b1f3      	cbz	r3, 800efd2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800ef94:	6043      	str	r3, [r0, #4]
 800ef96:	7c03      	ldrb	r3, [r0, #16]
 800ef98:	b143      	cbz	r3, 800efac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800ef9a:	68c3      	ldr	r3, [r0, #12]
 800ef9c:	b12b      	cbz	r3, 800efaa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800ef9e:	881a      	ldrh	r2, [r3, #0]
 800efa0:	b11a      	cbz	r2, 800efaa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800efa2:	1c9a      	adds	r2, r3, #2
 800efa4:	60c2      	str	r2, [r0, #12]
 800efa6:	8818      	ldrh	r0, [r3, #0]
 800efa8:	bd30      	pop	{r4, r5, pc}
 800efaa:	7405      	strb	r5, [r0, #16]
 800efac:	6843      	ldr	r3, [r0, #4]
 800efae:	8819      	ldrh	r1, [r3, #0]
 800efb0:	b179      	cbz	r1, 800efd2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800efb2:	1c9a      	adds	r2, r3, #2
 800efb4:	2902      	cmp	r1, #2
 800efb6:	6042      	str	r2, [r0, #4]
 800efb8:	d1f5      	bne.n	800efa6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800efba:	6883      	ldr	r3, [r0, #8]
 800efbc:	1d1a      	adds	r2, r3, #4
 800efbe:	6082      	str	r2, [r0, #8]
 800efc0:	681b      	ldr	r3, [r3, #0]
 800efc2:	60c3      	str	r3, [r0, #12]
 800efc4:	2b00      	cmp	r3, #0
 800efc6:	d0e1      	beq.n	800ef8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800efc8:	881b      	ldrh	r3, [r3, #0]
 800efca:	2b00      	cmp	r3, #0
 800efcc:	d0de      	beq.n	800ef8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800efce:	7404      	strb	r4, [r0, #16]
 800efd0:	e7dc      	b.n	800ef8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800efd2:	2000      	movs	r0, #0
 800efd4:	e7e8      	b.n	800efa8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800efd6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800efd6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800efd8:	4605      	mov	r5, r0
 800efda:	4608      	mov	r0, r1
 800efdc:	b1e9      	cbz	r1, 800f01a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800efde:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800efe2:	460b      	mov	r3, r1
 800efe4:	f101 0708 	add.w	r7, r1, #8
 800efe8:	4622      	mov	r2, r4
 800efea:	6818      	ldr	r0, [r3, #0]
 800efec:	6859      	ldr	r1, [r3, #4]
 800efee:	4626      	mov	r6, r4
 800eff0:	c603      	stmia	r6!, {r0, r1}
 800eff2:	3308      	adds	r3, #8
 800eff4:	42bb      	cmp	r3, r7
 800eff6:	4634      	mov	r4, r6
 800eff8:	d1f7      	bne.n	800efea <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800effa:	6818      	ldr	r0, [r3, #0]
 800effc:	6030      	str	r0, [r6, #0]
 800effe:	889b      	ldrh	r3, [r3, #4]
 800f000:	80b3      	strh	r3, [r6, #4]
 800f002:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800f006:	015b      	lsls	r3, r3, #5
 800f008:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800f00c:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800f010:	430b      	orrs	r3, r1
 800f012:	425b      	negs	r3, r3
 800f014:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800f018:	4610      	mov	r0, r2
 800f01a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f01c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800f01c:	b538      	push	{r3, r4, r5, lr}
 800f01e:	460c      	mov	r4, r1
 800f020:	6811      	ldr	r1, [r2, #0]
 800f022:	4610      	mov	r0, r2
 800f024:	68cd      	ldr	r5, [r1, #12]
 800f026:	4619      	mov	r1, r3
 800f028:	47a8      	blx	r5
 800f02a:	2800      	cmp	r0, #0
 800f02c:	bf08      	it	eq
 800f02e:	4620      	moveq	r0, r4
 800f030:	bd38      	pop	{r3, r4, r5, pc}

0800f032 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800f032:	b570      	push	{r4, r5, r6, lr}
 800f034:	8810      	ldrh	r0, [r2, #0]
 800f036:	4298      	cmp	r0, r3
 800f038:	d817      	bhi.n	800f06a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f03a:	1e48      	subs	r0, r1, #1
 800f03c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800f040:	4298      	cmp	r0, r3
 800f042:	d312      	bcc.n	800f06a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f044:	2400      	movs	r4, #0
 800f046:	428c      	cmp	r4, r1
 800f048:	d20f      	bcs.n	800f06a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f04a:	1860      	adds	r0, r4, r1
 800f04c:	1040      	asrs	r0, r0, #1
 800f04e:	0085      	lsls	r5, r0, #2
 800f050:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800f054:	42b3      	cmp	r3, r6
 800f056:	d902      	bls.n	800f05e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800f058:	3001      	adds	r0, #1
 800f05a:	b284      	uxth	r4, r0
 800f05c:	e7f3      	b.n	800f046 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f05e:	d102      	bne.n	800f066 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x34>
 800f060:	442a      	add	r2, r5
 800f062:	8850      	ldrh	r0, [r2, #2]
 800f064:	bd70      	pop	{r4, r5, r6, pc}
 800f066:	b281      	uxth	r1, r0
 800f068:	e7ed      	b.n	800f046 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f06a:	2000      	movs	r0, #0
 800f06c:	e7fa      	b.n	800f064 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
	...

0800f070 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>:
 800f070:	b510      	push	{r4, lr}
 800f072:	8ac3      	ldrh	r3, [r0, #22]
 800f074:	428b      	cmp	r3, r1
 800f076:	d805      	bhi.n	800f084 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x14>
 800f078:	4b07      	ldr	r3, [pc, #28]	; (800f098 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x28>)
 800f07a:	4a08      	ldr	r2, [pc, #32]	; (800f09c <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x2c>)
 800f07c:	4808      	ldr	r0, [pc, #32]	; (800f0a0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x30>)
 800f07e:	21fd      	movs	r1, #253	; 0xfd
 800f080:	f00c f8f6 	bl	801b270 <__assert_func>
 800f084:	8a83      	ldrh	r3, [r0, #20]
 800f086:	240a      	movs	r4, #10
 800f088:	4419      	add	r1, r3
 800f08a:	fbb1 f3f4 	udiv	r3, r1, r4
 800f08e:	fb04 1113 	mls	r1, r4, r3, r1
 800f092:	f820 2011 	strh.w	r2, [r0, r1, lsl #1]
 800f096:	bd10      	pop	{r4, pc}
 800f098:	0801e259 	.word	0x0801e259
 800f09c:	0801e688 	.word	0x0801e688
 800f0a0:	0801e267 	.word	0x0801e267

0800f0a4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>:
 800f0a4:	b508      	push	{r3, lr}
 800f0a6:	8ac3      	ldrh	r3, [r0, #22]
 800f0a8:	428b      	cmp	r3, r1
 800f0aa:	d805      	bhi.n	800f0b8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x14>
 800f0ac:	4b07      	ldr	r3, [pc, #28]	; (800f0cc <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x28>)
 800f0ae:	4a08      	ldr	r2, [pc, #32]	; (800f0d0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x2c>)
 800f0b0:	4808      	ldr	r0, [pc, #32]	; (800f0d4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x30>)
 800f0b2:	21d3      	movs	r1, #211	; 0xd3
 800f0b4:	f00c f8dc 	bl	801b270 <__assert_func>
 800f0b8:	8a83      	ldrh	r3, [r0, #20]
 800f0ba:	220a      	movs	r2, #10
 800f0bc:	4419      	add	r1, r3
 800f0be:	fbb1 f3f2 	udiv	r3, r1, r2
 800f0c2:	fb02 1113 	mls	r1, r2, r3, r1
 800f0c6:	f830 0011 	ldrh.w	r0, [r0, r1, lsl #1]
 800f0ca:	bd08      	pop	{r3, pc}
 800f0cc:	0801e259 	.word	0x0801e259
 800f0d0:	0801e3d8 	.word	0x0801e3d8
 800f0d4:	0801e267 	.word	0x0801e267

0800f0d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800f0d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f0dc:	4604      	mov	r4, r0
 800f0de:	4688      	mov	r8, r1
 800f0e0:	4615      	mov	r5, r2
 800f0e2:	b94a      	cbnz	r2, 800f0f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20>
 800f0e4:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800f0e8:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800f0ec:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800f0f0:	4691      	mov	r9, r2
 800f0f2:	4648      	mov	r0, r9
 800f0f4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f0f8:	f100 0640 	add.w	r6, r0, #64	; 0x40
 800f0fc:	8892      	ldrh	r2, [r2, #4]
 800f0fe:	462b      	mov	r3, r5
 800f100:	f105 0c08 	add.w	ip, r5, #8
 800f104:	46b3      	mov	fp, r6
 800f106:	6818      	ldr	r0, [r3, #0]
 800f108:	6859      	ldr	r1, [r3, #4]
 800f10a:	4637      	mov	r7, r6
 800f10c:	c703      	stmia	r7!, {r0, r1}
 800f10e:	3308      	adds	r3, #8
 800f110:	4563      	cmp	r3, ip
 800f112:	463e      	mov	r6, r7
 800f114:	d1f7      	bne.n	800f106 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x2e>
 800f116:	6818      	ldr	r0, [r3, #0]
 800f118:	6038      	str	r0, [r7, #0]
 800f11a:	889b      	ldrh	r3, [r3, #4]
 800f11c:	80bb      	strh	r3, [r7, #4]
 800f11e:	f894 704d 	ldrb.w	r7, [r4, #77]	; 0x4d
 800f122:	f46f 6363 	mvn.w	r3, #3632	; 0xe30
 800f126:	ea4f 1a07 	mov.w	sl, r7, lsl #4
 800f12a:	f40a 7180 	and.w	r1, sl, #256	; 0x100
 800f12e:	18d3      	adds	r3, r2, r3
 800f130:	f894 a047 	ldrb.w	sl, [r4, #71]	; 0x47
 800f134:	b298      	uxth	r0, r3
 800f136:	ea4a 0a01 	orr.w	sl, sl, r1
 800f13a:	281d      	cmp	r0, #29
 800f13c:	fa1f f68a 	uxth.w	r6, sl
 800f140:	46d9      	mov	r9, fp
 800f142:	d842      	bhi.n	800f1ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf2>
 800f144:	2301      	movs	r3, #1
 800f146:	4950      	ldr	r1, [pc, #320]	; (800f288 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b0>)
 800f148:	4083      	lsls	r3, r0
 800f14a:	420b      	tst	r3, r1
 800f14c:	ea4f 0aea 	mov.w	sl, sl, asr #3
 800f150:	d114      	bne.n	800f17c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800f152:	f413 7f60 	tst.w	r3, #896	; 0x380
 800f156:	d03c      	beq.n	800f1d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xfa>
 800f158:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800f15c:	fa1f fa8a 	uxth.w	sl, sl
 800f160:	eba1 010a 	sub.w	r1, r1, sl
 800f164:	4658      	mov	r0, fp
 800f166:	b209      	sxth	r1, r1
 800f168:	f7ff fefc 	bl	800ef64 <_ZN8touchgfx9GlyphNode6setTopEs>
 800f16c:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 800f170:	1b86      	subs	r6, r0, r6
 800f172:	eba6 0a0a 	sub.w	sl, r6, sl
 800f176:	f8a4 a050 	strh.w	sl, [r4, #80]	; 0x50
 800f17a:	e7ba      	b.n	800f0f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f17c:	2100      	movs	r1, #0
 800f17e:	f104 001a 	add.w	r0, r4, #26
 800f182:	f7ff ff8f 	bl	800f0a4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800f186:	f640 6333 	movw	r3, #3635	; 0xe33
 800f18a:	4298      	cmp	r0, r3
 800f18c:	4601      	mov	r1, r0
 800f18e:	d10a      	bne.n	800f1a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xce>
 800f190:	f8d8 3000 	ldr.w	r3, [r8]
 800f194:	4640      	mov	r0, r8
 800f196:	68db      	ldr	r3, [r3, #12]
 800f198:	4798      	blx	r3
 800f19a:	7b41      	ldrb	r1, [r0, #13]
 800f19c:	7a00      	ldrb	r0, [r0, #8]
 800f19e:	f7ff fed3 	bl	800ef48 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800f1a2:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800f1a6:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800f1aa:	4431      	add	r1, r6
 800f1ac:	4451      	add	r1, sl
 800f1ae:	b209      	sxth	r1, r1
 800f1b0:	f8a4 104e 	strh.w	r1, [r4, #78]	; 0x4e
 800f1b4:	4658      	mov	r0, fp
 800f1b6:	f7ff fed5 	bl	800ef64 <_ZN8touchgfx9GlyphNode6setTopEs>
 800f1ba:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800f1be:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800f1c2:	1a9b      	subs	r3, r3, r2
 800f1c4:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800f1c8:	e793      	b.n	800f0f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f1ca:	f640 631b 	movw	r3, #3611	; 0xe1b
 800f1ce:	429a      	cmp	r2, r3
 800f1d0:	d005      	beq.n	800f1de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x106>
 800f1d2:	f022 0302 	bic.w	r3, r2, #2
 800f1d6:	f640 611d 	movw	r1, #3613	; 0xe1d
 800f1da:	428b      	cmp	r3, r1
 800f1dc:	d119      	bne.n	800f212 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
 800f1de:	1e53      	subs	r3, r2, #1
 800f1e0:	b29b      	uxth	r3, r3
 800f1e2:	4642      	mov	r2, r8
 800f1e4:	4629      	mov	r1, r5
 800f1e6:	4620      	mov	r0, r4
 800f1e8:	f7ff ff18 	bl	800f01c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f1ec:	7b41      	ldrb	r1, [r0, #13]
 800f1ee:	7a00      	ldrb	r0, [r0, #8]
 800f1f0:	f7ff feaa 	bl	800ef48 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800f1f4:	f994 304d 	ldrsb.w	r3, [r4, #77]	; 0x4d
 800f1f8:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800f1fc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f200:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800f204:	4313      	orrs	r3, r2
 800f206:	115a      	asrs	r2, r3, #5
 800f208:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800f20c:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f210:	e02d      	b.n	800f26e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x196>
 800f212:	4639      	mov	r1, r7
 800f214:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800f218:	f7ff fe96 	bl	800ef48 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800f21c:	f640 6109 	movw	r1, #3593	; 0xe09
 800f220:	f022 0310 	bic.w	r3, r2, #16
 800f224:	428b      	cmp	r3, r1
 800f226:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800f22a:	d003      	beq.n	800f234 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15c>
 800f22c:	f640 6313 	movw	r3, #3603	; 0xe13
 800f230:	429a      	cmp	r2, r3
 800f232:	d126      	bne.n	800f282 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1aa>
 800f234:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800f238:	b27f      	sxtb	r7, r7
 800f23a:	f407 7780 	and.w	r7, r7, #256	; 0x100
 800f23e:	431f      	orrs	r7, r3
 800f240:	f640 6313 	movw	r3, #3603	; 0xe13
 800f244:	429a      	cmp	r2, r3
 800f246:	bf1a      	itte	ne
 800f248:	f102 33ff 	addne.w	r3, r2, #4294967295
 800f24c:	b29b      	uxthne	r3, r3
 800f24e:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800f252:	4642      	mov	r2, r8
 800f254:	4629      	mov	r1, r5
 800f256:	4620      	mov	r0, r4
 800f258:	f7ff fee0 	bl	800f01c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f25c:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800f260:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f264:	7a83      	ldrb	r3, [r0, #10]
 800f266:	4313      	orrs	r3, r2
 800f268:	1aff      	subs	r7, r7, r3
 800f26a:	f8a4 7052 	strh.w	r7, [r4, #82]	; 0x52
 800f26e:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800f272:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800f276:	f7ff fe67 	bl	800ef48 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800f27a:	1b80      	subs	r0, r0, r6
 800f27c:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 800f280:	e737      	b.n	800f0f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f282:	2300      	movs	r3, #0
 800f284:	e7c2      	b.n	800f20c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x134>
 800f286:	bf00      	nop
 800f288:	3fc00079 	.word	0x3fc00079

0800f28c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800f28c:	3a01      	subs	r2, #1
 800f28e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f292:	b292      	uxth	r2, r2
 800f294:	460c      	mov	r4, r1
 800f296:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800f29a:	42b2      	cmp	r2, r6
 800f29c:	d018      	beq.n	800f2d0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x44>
 800f29e:	8b01      	ldrh	r1, [r0, #24]
 800f2a0:	f834 5b02 	ldrh.w	r5, [r4], #2
 800f2a4:	4291      	cmp	r1, r2
 800f2a6:	d805      	bhi.n	800f2b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x28>
 800f2a8:	4b14      	ldr	r3, [pc, #80]	; (800f2fc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x70>)
 800f2aa:	4a15      	ldr	r2, [pc, #84]	; (800f300 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x74>)
 800f2ac:	4815      	ldr	r0, [pc, #84]	; (800f304 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x78>)
 800f2ae:	21d3      	movs	r1, #211	; 0xd3
 800f2b0:	f00b ffde 	bl	801b270 <__assert_func>
 800f2b4:	8ac1      	ldrh	r1, [r0, #22]
 800f2b6:	4411      	add	r1, r2
 800f2b8:	f001 0101 	and.w	r1, r1, #1
 800f2bc:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800f2c0:	3a01      	subs	r2, #1
 800f2c2:	8a49      	ldrh	r1, [r1, #18]
 800f2c4:	428d      	cmp	r5, r1
 800f2c6:	b292      	uxth	r2, r2
 800f2c8:	d0e7      	beq.n	800f29a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xe>
 800f2ca:	2000      	movs	r0, #0
 800f2cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f2d0:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 800f2d4:	2600      	movs	r6, #0
 800f2d6:	441f      	add	r7, r3
 800f2d8:	f100 051a 	add.w	r5, r0, #26
 800f2dc:	b2b1      	uxth	r1, r6
 800f2de:	42b9      	cmp	r1, r7
 800f2e0:	da09      	bge.n	800f2f6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x6a>
 800f2e2:	4628      	mov	r0, r5
 800f2e4:	f7ff fede 	bl	800f0a4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800f2e8:	f834 8016 	ldrh.w	r8, [r4, r6, lsl #1]
 800f2ec:	4540      	cmp	r0, r8
 800f2ee:	f106 0601 	add.w	r6, r6, #1
 800f2f2:	d0f3      	beq.n	800f2dc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x50>
 800f2f4:	e7e9      	b.n	800f2ca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800f2f6:	2001      	movs	r0, #1
 800f2f8:	e7e8      	b.n	800f2cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800f2fa:	bf00      	nop
 800f2fc:	0801e259 	.word	0x0801e259
 800f300:	0801e7e8 	.word	0x0801e7e8
 800f304:	0801e267 	.word	0x0801e267

0800f308 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt>:
 800f308:	b538      	push	{r3, r4, r5, lr}
 800f30a:	8ac3      	ldrh	r3, [r0, #22]
 800f30c:	428b      	cmp	r3, r1
 800f30e:	d205      	bcs.n	800f31c <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x14>
 800f310:	4b08      	ldr	r3, [pc, #32]	; (800f334 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x2c>)
 800f312:	4a09      	ldr	r2, [pc, #36]	; (800f338 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x30>)
 800f314:	4809      	ldr	r0, [pc, #36]	; (800f33c <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x34>)
 800f316:	21d8      	movs	r1, #216	; 0xd8
 800f318:	f00b ffaa 	bl	801b270 <__assert_func>
 800f31c:	8a82      	ldrh	r2, [r0, #20]
 800f31e:	250a      	movs	r5, #10
 800f320:	440a      	add	r2, r1
 800f322:	1a5b      	subs	r3, r3, r1
 800f324:	fbb2 f4f5 	udiv	r4, r2, r5
 800f328:	fb05 2214 	mls	r2, r5, r4, r2
 800f32c:	8282      	strh	r2, [r0, #20]
 800f32e:	82c3      	strh	r3, [r0, #22]
 800f330:	bd38      	pop	{r3, r4, r5, pc}
 800f332:	bf00      	nop
 800f334:	0801e24d 	.word	0x0801e24d
 800f338:	0801e604 	.word	0x0801e604
 800f33c:	0801e267 	.word	0x0801e267

0800f340 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>:
 800f340:	b538      	push	{r3, r4, r5, lr}
 800f342:	8ac3      	ldrh	r3, [r0, #22]
 800f344:	2b09      	cmp	r3, #9
 800f346:	d905      	bls.n	800f354 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x14>
 800f348:	4b08      	ldr	r3, [pc, #32]	; (800f36c <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x2c>)
 800f34a:	4a09      	ldr	r2, [pc, #36]	; (800f370 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x30>)
 800f34c:	4809      	ldr	r0, [pc, #36]	; (800f374 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x34>)
 800f34e:	21f7      	movs	r1, #247	; 0xf7
 800f350:	f00b ff8e 	bl	801b270 <__assert_func>
 800f354:	8a82      	ldrh	r2, [r0, #20]
 800f356:	250a      	movs	r5, #10
 800f358:	441a      	add	r2, r3
 800f35a:	fbb2 f4f5 	udiv	r4, r2, r5
 800f35e:	fb05 2214 	mls	r2, r5, r4, r2
 800f362:	3301      	adds	r3, #1
 800f364:	f820 1012 	strh.w	r1, [r0, r2, lsl #1]
 800f368:	82c3      	strh	r3, [r0, #22]
 800f36a:	bd38      	pop	{r3, r4, r5, pc}
 800f36c:	0801e241 	.word	0x0801e241
 800f370:	0801e555 	.word	0x0801e555
 800f374:	0801e267 	.word	0x0801e267

0800f378 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800f378:	b538      	push	{r3, r4, r5, lr}
 800f37a:	4604      	mov	r4, r0
 800f37c:	f100 051a 	add.w	r5, r0, #26
 800f380:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f382:	2b0a      	cmp	r3, #10
 800f384:	d01c      	beq.n	800f3c0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800f386:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800f388:	b962      	cbnz	r2, 800f3a4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800f38a:	f104 051a 	add.w	r5, r4, #26
 800f38e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f390:	2b0a      	cmp	r3, #10
 800f392:	d015      	beq.n	800f3c0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800f394:	4620      	mov	r0, r4
 800f396:	f7ff fdf6 	bl	800ef86 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800f39a:	4601      	mov	r1, r0
 800f39c:	4628      	mov	r0, r5
 800f39e:	f7ff ffcf 	bl	800f340 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>
 800f3a2:	e7f4      	b.n	800f38e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x16>
 800f3a4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800f3a6:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 800f3aa:	3301      	adds	r3, #1
 800f3ac:	f003 0301 	and.w	r3, r3, #1
 800f3b0:	3a01      	subs	r2, #1
 800f3b2:	8e49      	ldrh	r1, [r1, #50]	; 0x32
 800f3b4:	86e3      	strh	r3, [r4, #54]	; 0x36
 800f3b6:	8722      	strh	r2, [r4, #56]	; 0x38
 800f3b8:	4628      	mov	r0, r5
 800f3ba:	f7ff ffc1 	bl	800f340 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>
 800f3be:	e7df      	b.n	800f380 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8>
 800f3c0:	bd38      	pop	{r3, r4, r5, pc}
	...

0800f3c4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:
 800f3c4:	2300      	movs	r3, #0
 800f3c6:	b510      	push	{r4, lr}
 800f3c8:	6043      	str	r3, [r0, #4]
 800f3ca:	60c3      	str	r3, [r0, #12]
 800f3cc:	7403      	strb	r3, [r0, #16]
 800f3ce:	8603      	strh	r3, [r0, #48]	; 0x30
 800f3d0:	8303      	strh	r3, [r0, #24]
 800f3d2:	8703      	strh	r3, [r0, #56]	; 0x38
 800f3d4:	4604      	mov	r4, r0
 800f3d6:	f7ff ffcf 	bl	800f378 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800f3da:	4a0a      	ldr	r2, [pc, #40]	; (800f404 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x40>)
 800f3dc:	6813      	ldr	r3, [r2, #0]
 800f3de:	4611      	mov	r1, r2
 800f3e0:	b913      	cbnz	r3, 800f3e8 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x24>
 800f3e2:	6852      	ldr	r2, [r2, #4]
 800f3e4:	07d0      	lsls	r0, r2, #31
 800f3e6:	d50b      	bpl.n	800f400 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x3c>
 800f3e8:	6849      	ldr	r1, [r1, #4]
 800f3ea:	104a      	asrs	r2, r1, #1
 800f3ec:	07c9      	lsls	r1, r1, #31
 800f3ee:	eb04 0002 	add.w	r0, r4, r2
 800f3f2:	bf48      	it	mi
 800f3f4:	58a2      	ldrmi	r2, [r4, r2]
 800f3f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f3fa:	bf48      	it	mi
 800f3fc:	58d3      	ldrmi	r3, [r2, r3]
 800f3fe:	4718      	bx	r3
 800f400:	bd10      	pop	{r4, pc}
 800f402:	bf00      	nop
 800f404:	20025990 	.word	0x20025990

0800f408 <_ZN8touchgfx12TextProviderC1Ev>:
 800f408:	b510      	push	{r4, lr}
 800f40a:	2300      	movs	r3, #0
 800f40c:	2201      	movs	r2, #1
 800f40e:	4604      	mov	r4, r0
 800f410:	e9c0 3300 	strd	r3, r3, [r0]
 800f414:	60c3      	str	r3, [r0, #12]
 800f416:	7403      	strb	r3, [r0, #16]
 800f418:	82c3      	strh	r3, [r0, #22]
 800f41a:	8303      	strh	r3, [r0, #24]
 800f41c:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800f41e:	8603      	strh	r3, [r0, #48]	; 0x30
 800f420:	86c3      	strh	r3, [r0, #54]	; 0x36
 800f422:	8703      	strh	r3, [r0, #56]	; 0x38
 800f424:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f426:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800f42a:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800f42e:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800f432:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800f436:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800f43a:	f7ff ffc3 	bl	800f3c4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800f43e:	4620      	mov	r0, r4
 800f440:	bd10      	pop	{r4, pc}

0800f442 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800f442:	b410      	push	{r4}
 800f444:	6082      	str	r2, [r0, #8]
 800f446:	6001      	str	r1, [r0, #0]
 800f448:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f44a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f44e:	f7ff bfb9 	b.w	800f3c4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
	...

0800f454 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>:
 800f454:	b508      	push	{r3, lr}
 800f456:	88c2      	ldrh	r2, [r0, #6]
 800f458:	440a      	add	r2, r1
 800f45a:	2a02      	cmp	r2, #2
 800f45c:	dd05      	ble.n	800f46a <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x16>
 800f45e:	4b06      	ldr	r3, [pc, #24]	; (800f478 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x24>)
 800f460:	4a06      	ldr	r2, [pc, #24]	; (800f47c <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x28>)
 800f462:	4807      	ldr	r0, [pc, #28]	; (800f480 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x2c>)
 800f464:	21ec      	movs	r1, #236	; 0xec
 800f466:	f00b ff03 	bl	801b270 <__assert_func>
 800f46a:	8883      	ldrh	r3, [r0, #4]
 800f46c:	80c2      	strh	r2, [r0, #6]
 800f46e:	1a59      	subs	r1, r3, r1
 800f470:	f001 0101 	and.w	r1, r1, #1
 800f474:	8081      	strh	r1, [r0, #4]
 800f476:	bd08      	pop	{r3, pc}
 800f478:	0801e293 	.word	0x0801e293
 800f47c:	0801e761 	.word	0x0801e761
 800f480:	0801e267 	.word	0x0801e267

0800f484 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>:
 800f484:	b508      	push	{r3, lr}
 800f486:	88c3      	ldrh	r3, [r0, #6]
 800f488:	428b      	cmp	r3, r1
 800f48a:	d805      	bhi.n	800f498 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x14>
 800f48c:	4b06      	ldr	r3, [pc, #24]	; (800f4a8 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x24>)
 800f48e:	4a07      	ldr	r2, [pc, #28]	; (800f4ac <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x28>)
 800f490:	4807      	ldr	r0, [pc, #28]	; (800f4b0 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x2c>)
 800f492:	21fd      	movs	r1, #253	; 0xfd
 800f494:	f00b feec 	bl	801b270 <__assert_func>
 800f498:	8883      	ldrh	r3, [r0, #4]
 800f49a:	4419      	add	r1, r3
 800f49c:	f001 0101 	and.w	r1, r1, #1
 800f4a0:	f820 2011 	strh.w	r2, [r0, r1, lsl #1]
 800f4a4:	bd08      	pop	{r3, pc}
 800f4a6:	bf00      	nop
 800f4a8:	0801e259 	.word	0x0801e259
 800f4ac:	0801e8b9 	.word	0x0801e8b9
 800f4b0:	0801e267 	.word	0x0801e267

0800f4b4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800f4b4:	b570      	push	{r4, r5, r6, lr}
 800f4b6:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800f4b8:	4604      	mov	r4, r0
 800f4ba:	b92a      	cbnz	r2, 800f4c8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800f4bc:	4b12      	ldr	r3, [pc, #72]	; (800f508 <_ZN8touchgfx12TextProvider11getNextCharEv+0x54>)
 800f4be:	4a13      	ldr	r2, [pc, #76]	; (800f50c <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800f4c0:	4813      	ldr	r0, [pc, #76]	; (800f510 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800f4c2:	21de      	movs	r1, #222	; 0xde
 800f4c4:	f00b fed4 	bl	801b270 <__assert_func>
 800f4c8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800f4ca:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800f4ce:	260a      	movs	r6, #10
 800f4d0:	3301      	adds	r3, #1
 800f4d2:	8b4d      	ldrh	r5, [r1, #26]
 800f4d4:	fbb3 f1f6 	udiv	r1, r3, r6
 800f4d8:	3a01      	subs	r2, #1
 800f4da:	fb06 3311 	mls	r3, r6, r1, r3
 800f4de:	8602      	strh	r2, [r0, #48]	; 0x30
 800f4e0:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800f4e2:	f7ff ff49 	bl	800f378 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800f4e6:	8b23      	ldrh	r3, [r4, #24]
 800f4e8:	2b02      	cmp	r3, #2
 800f4ea:	bf04      	itt	eq
 800f4ec:	2301      	moveq	r3, #1
 800f4ee:	8323      	strheq	r3, [r4, #24]
 800f4f0:	3412      	adds	r4, #18
 800f4f2:	4620      	mov	r0, r4
 800f4f4:	2101      	movs	r1, #1
 800f4f6:	f7ff ffad 	bl	800f454 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>
 800f4fa:	4620      	mov	r0, r4
 800f4fc:	462a      	mov	r2, r5
 800f4fe:	2100      	movs	r1, #0
 800f500:	f7ff ffc0 	bl	800f484 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>
 800f504:	4628      	mov	r0, r5
 800f506:	bd70      	pop	{r4, r5, r6, pc}
 800f508:	0801e238 	.word	0x0801e238
 800f50c:	0801e4aa 	.word	0x0801e4aa
 800f510:	0801e267 	.word	0x0801e267

0800f514 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800f514:	428a      	cmp	r2, r1
 800f516:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f51a:	4604      	mov	r4, r0
 800f51c:	460e      	mov	r6, r1
 800f51e:	4615      	mov	r5, r2
 800f520:	469a      	mov	sl, r3
 800f522:	d92b      	bls.n	800f57c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x68>
 800f524:	1a57      	subs	r7, r2, r1
 800f526:	b2bf      	uxth	r7, r7
 800f528:	f04f 0800 	mov.w	r8, #0
 800f52c:	f100 0932 	add.w	r9, r0, #50	; 0x32
 800f530:	f04f 0b0a 	mov.w	fp, #10
 800f534:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f536:	b92b      	cbnz	r3, 800f544 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x30>
 800f538:	4b24      	ldr	r3, [pc, #144]	; (800f5cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xb8>)
 800f53a:	4a25      	ldr	r2, [pc, #148]	; (800f5d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xbc>)
 800f53c:	21e6      	movs	r1, #230	; 0xe6
 800f53e:	4825      	ldr	r0, [pc, #148]	; (800f5d4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc0>)
 800f540:	f00b fe96 	bl	801b270 <__assert_func>
 800f544:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800f546:	3b01      	subs	r3, #1
 800f548:	b29b      	uxth	r3, r3
 800f54a:	441a      	add	r2, r3
 800f54c:	8623      	strh	r3, [r4, #48]	; 0x30
 800f54e:	fbb2 f3fb 	udiv	r3, r2, fp
 800f552:	fb0b 2313 	mls	r3, fp, r3, r2
 800f556:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f55a:	2101      	movs	r1, #1
 800f55c:	8b5a      	ldrh	r2, [r3, #26]
 800f55e:	9201      	str	r2, [sp, #4]
 800f560:	4648      	mov	r0, r9
 800f562:	f7ff ff77 	bl	800f454 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>
 800f566:	f108 0801 	add.w	r8, r8, #1
 800f56a:	9a01      	ldr	r2, [sp, #4]
 800f56c:	2100      	movs	r1, #0
 800f56e:	4648      	mov	r0, r9
 800f570:	f7ff ff88 	bl	800f484 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>
 800f574:	fa1f f388 	uxth.w	r3, r8
 800f578:	429f      	cmp	r7, r3
 800f57a:	d8db      	bhi.n	800f534 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x20>
 800f57c:	f104 071a 	add.w	r7, r4, #26
 800f580:	4631      	mov	r1, r6
 800f582:	4638      	mov	r0, r7
 800f584:	f7ff fec0 	bl	800f308 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt>
 800f588:	260a      	movs	r6, #10
 800f58a:	b1c5      	cbz	r5, 800f5be <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 800f58c:	3d01      	subs	r5, #1
 800f58e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f590:	b2ad      	uxth	r5, r5
 800f592:	2b09      	cmp	r3, #9
 800f594:	f83a 2015 	ldrh.w	r2, [sl, r5, lsl #1]
 800f598:	d903      	bls.n	800f5a2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8e>
 800f59a:	4b0f      	ldr	r3, [pc, #60]	; (800f5d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc4>)
 800f59c:	4a0f      	ldr	r2, [pc, #60]	; (800f5dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc8>)
 800f59e:	21ec      	movs	r1, #236	; 0xec
 800f5a0:	e7cd      	b.n	800f53e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2a>
 800f5a2:	8de1      	ldrh	r1, [r4, #46]	; 0x2e
 800f5a4:	3109      	adds	r1, #9
 800f5a6:	3301      	adds	r3, #1
 800f5a8:	fbb1 f0f6 	udiv	r0, r1, r6
 800f5ac:	fb06 1110 	mls	r1, r6, r0, r1
 800f5b0:	85e1      	strh	r1, [r4, #46]	; 0x2e
 800f5b2:	8623      	strh	r3, [r4, #48]	; 0x30
 800f5b4:	2100      	movs	r1, #0
 800f5b6:	4638      	mov	r0, r7
 800f5b8:	f7ff fd5a 	bl	800f070 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800f5bc:	e7e5      	b.n	800f58a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x76>
 800f5be:	4620      	mov	r0, r4
 800f5c0:	b003      	add	sp, #12
 800f5c2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5c6:	f7ff bed7 	b.w	800f378 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800f5ca:	bf00      	nop
 800f5cc:	0801e238 	.word	0x0801e238
 800f5d0:	0801e32e 	.word	0x0801e32e
 800f5d4:	0801e267 	.word	0x0801e267
 800f5d8:	0801e293 	.word	0x0801e293
 800f5dc:	0801e2a6 	.word	0x0801e2a6

0800f5e0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800f5e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5e4:	4605      	mov	r5, r0
 800f5e6:	4616      	mov	r6, r2
 800f5e8:	1c8c      	adds	r4, r1, #2
 800f5ea:	8809      	ldrh	r1, [r1, #0]
 800f5ec:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800f5f0:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800f5f4:	42b3      	cmp	r3, r6
 800f5f6:	d124      	bne.n	800f642 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800f5f8:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800f5fc:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800f600:	f001 070f 	and.w	r7, r1, #15
 800f604:	f8cd 8000 	str.w	r8, [sp]
 800f608:	464b      	mov	r3, r9
 800f60a:	4652      	mov	r2, sl
 800f60c:	4621      	mov	r1, r4
 800f60e:	4628      	mov	r0, r5
 800f610:	f7ff fe3c 	bl	800f28c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800f614:	4683      	mov	fp, r0
 800f616:	b168      	cbz	r0, 800f634 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800f618:	eb0a 0109 	add.w	r1, sl, r9
 800f61c:	4441      	add	r1, r8
 800f61e:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800f622:	463a      	mov	r2, r7
 800f624:	4649      	mov	r1, r9
 800f626:	4628      	mov	r0, r5
 800f628:	f7ff ff74 	bl	800f514 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800f62c:	4658      	mov	r0, fp
 800f62e:	b003      	add	sp, #12
 800f630:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f634:	eb07 010a 	add.w	r1, r7, sl
 800f638:	4449      	add	r1, r9
 800f63a:	4441      	add	r1, r8
 800f63c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800f640:	e7d2      	b.n	800f5e8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800f642:	f04f 0b00 	mov.w	fp, #0
 800f646:	e7f1      	b.n	800f62c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800f648 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800f648:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f64c:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800f64e:	886f      	ldrh	r7, [r5, #2]
 800f650:	4604      	mov	r4, r0
 800f652:	087f      	lsrs	r7, r7, #1
 800f654:	260b      	movs	r6, #11
 800f656:	f100 091a 	add.w	r9, r0, #26
 800f65a:	3e01      	subs	r6, #1
 800f65c:	d013      	beq.n	800f686 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800f65e:	2100      	movs	r1, #0
 800f660:	4648      	mov	r0, r9
 800f662:	f7ff fd1f 	bl	800f0a4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800f666:	462a      	mov	r2, r5
 800f668:	4680      	mov	r8, r0
 800f66a:	4603      	mov	r3, r0
 800f66c:	4639      	mov	r1, r7
 800f66e:	4620      	mov	r0, r4
 800f670:	f7ff fcdf 	bl	800f032 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800f674:	b138      	cbz	r0, 800f686 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800f676:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800f67a:	4642      	mov	r2, r8
 800f67c:	4620      	mov	r0, r4
 800f67e:	f7ff ffaf 	bl	800f5e0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800f682:	2800      	cmp	r0, #0
 800f684:	d1e9      	bne.n	800f65a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x12>
 800f686:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0800f68c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:
 800f68c:	b570      	push	{r4, r5, r6, lr}
 800f68e:	4b1e      	ldr	r3, [pc, #120]	; (800f708 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800f690:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f694:	4604      	mov	r4, r0
 800f696:	f003 0501 	and.w	r5, r3, #1
 800f69a:	b902      	cbnz	r2, 800f69e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
 800f69c:	b165      	cbz	r5, 800f6b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2c>
 800f69e:	105b      	asrs	r3, r3, #1
 800f6a0:	f104 061a 	add.w	r6, r4, #26
 800f6a4:	18e0      	adds	r0, r4, r3
 800f6a6:	b10d      	cbz	r5, 800f6ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
 800f6a8:	58e3      	ldr	r3, [r4, r3]
 800f6aa:	589a      	ldr	r2, [r3, r2]
 800f6ac:	4790      	blx	r2
 800f6ae:	2100      	movs	r1, #0
 800f6b0:	4602      	mov	r2, r0
 800f6b2:	4630      	mov	r0, r6
 800f6b4:	f7ff fcdc 	bl	800f070 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800f6b8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800f6ba:	b303      	cbz	r3, 800f6fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800f6bc:	f104 051a 	add.w	r5, r4, #26
 800f6c0:	2100      	movs	r1, #0
 800f6c2:	4628      	mov	r0, r5
 800f6c4:	f7ff fcee 	bl	800f0a4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800f6c8:	b1c8      	cbz	r0, 800f6fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800f6ca:	4620      	mov	r0, r4
 800f6cc:	f7ff ffbc 	bl	800f648 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
 800f6d0:	2101      	movs	r1, #1
 800f6d2:	4628      	mov	r0, r5
 800f6d4:	f7ff fce6 	bl	800f0a4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800f6d8:	f640 133f 	movw	r3, #2367	; 0x93f
 800f6dc:	4298      	cmp	r0, r3
 800f6de:	4606      	mov	r6, r0
 800f6e0:	d10d      	bne.n	800f6fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800f6e2:	2100      	movs	r1, #0
 800f6e4:	4628      	mov	r0, r5
 800f6e6:	f7ff fcdd 	bl	800f0a4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800f6ea:	2101      	movs	r1, #1
 800f6ec:	4602      	mov	r2, r0
 800f6ee:	4628      	mov	r0, r5
 800f6f0:	f7ff fcbe 	bl	800f070 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800f6f4:	4632      	mov	r2, r6
 800f6f6:	2100      	movs	r1, #0
 800f6f8:	4628      	mov	r0, r5
 800f6fa:	f7ff fcb9 	bl	800f070 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800f6fe:	4620      	mov	r0, r4
 800f700:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f704:	f7ff bed6 	b.w	800f4b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f708:	20025998 	.word	0x20025998

0800f70c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800f70c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f70e:	4617      	mov	r7, r2
 800f710:	461e      	mov	r6, r3
 800f712:	4605      	mov	r5, r0
 800f714:	f7ff ffba 	bl	800f68c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f718:	683b      	ldr	r3, [r7, #0]
 800f71a:	4604      	mov	r4, r0
 800f71c:	68db      	ldr	r3, [r3, #12]
 800f71e:	4601      	mov	r1, r0
 800f720:	4638      	mov	r0, r7
 800f722:	4798      	blx	r3
 800f724:	f5a4 6360 	sub.w	r3, r4, #3584	; 0xe00
 800f728:	b29b      	uxth	r3, r3
 800f72a:	2b7f      	cmp	r3, #127	; 0x7f
 800f72c:	4602      	mov	r2, r0
 800f72e:	6030      	str	r0, [r6, #0]
 800f730:	d813      	bhi.n	800f75a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x4e>
 800f732:	4639      	mov	r1, r7
 800f734:	4628      	mov	r0, r5
 800f736:	f7ff fccf 	bl	800f0d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800f73a:	6030      	str	r0, [r6, #0]
 800f73c:	6833      	ldr	r3, [r6, #0]
 800f73e:	b143      	cbz	r3, 800f752 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800f740:	f993 200d 	ldrsb.w	r2, [r3, #13]
 800f744:	7a9b      	ldrb	r3, [r3, #10]
 800f746:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800f74a:	4313      	orrs	r3, r2
 800f74c:	bf0c      	ite	eq
 800f74e:	2301      	moveq	r3, #1
 800f750:	2300      	movne	r3, #0
 800f752:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800f756:	4620      	mov	r0, r4
 800f758:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f75a:	f895 3055 	ldrb.w	r3, [r5, #85]	; 0x55
 800f75e:	2b00      	cmp	r3, #0
 800f760:	d0ec      	beq.n	800f73c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x30>
 800f762:	f640 1302 	movw	r3, #2306	; 0x902
 800f766:	429c      	cmp	r4, r3
 800f768:	d1e8      	bne.n	800f73c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x30>
 800f76a:	4601      	mov	r1, r0
 800f76c:	4628      	mov	r0, r5
 800f76e:	f7ff fc32 	bl	800efd6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800f772:	e7e2      	b.n	800f73a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>

0800f774 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800f774:	4b01      	ldr	r3, [pc, #4]	; (800f77c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800f776:	6018      	str	r0, [r3, #0]
 800f778:	4770      	bx	lr
 800f77a:	bf00      	nop
 800f77c:	20026980 	.word	0x20026980

0800f780 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800f780:	4b07      	ldr	r3, [pc, #28]	; (800f7a0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x20>)
 800f782:	881a      	ldrh	r2, [r3, #0]
 800f784:	4282      	cmp	r2, r0
 800f786:	d809      	bhi.n	800f79c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800f788:	4b06      	ldr	r3, [pc, #24]	; (800f7a4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x24>)
 800f78a:	881b      	ldrh	r3, [r3, #0]
 800f78c:	4413      	add	r3, r2
 800f78e:	4298      	cmp	r0, r3
 800f790:	da04      	bge.n	800f79c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800f792:	4b05      	ldr	r3, [pc, #20]	; (800f7a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x28>)
 800f794:	681b      	ldr	r3, [r3, #0]
 800f796:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800f79a:	4770      	bx	lr
 800f79c:	2000      	movs	r0, #0
 800f79e:	4770      	bx	lr
 800f7a0:	200269a0 	.word	0x200269a0
 800f7a4:	200269a4 	.word	0x200269a4
 800f7a8:	20026984 	.word	0x20026984

0800f7ac <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800f7ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f7b0:	4d26      	ldr	r5, [pc, #152]	; (800f84c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800f7b2:	682b      	ldr	r3, [r5, #0]
 800f7b4:	2b00      	cmp	r3, #0
 800f7b6:	d046      	beq.n	800f846 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9a>
 800f7b8:	4a25      	ldr	r2, [pc, #148]	; (800f850 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800f7ba:	4f26      	ldr	r7, [pc, #152]	; (800f854 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800f7bc:	8810      	ldrh	r0, [r2, #0]
 800f7be:	883c      	ldrh	r4, [r7, #0]
 800f7c0:	4e25      	ldr	r6, [pc, #148]	; (800f858 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800f7c2:	4420      	add	r0, r4
 800f7c4:	1c42      	adds	r2, r0, #1
 800f7c6:	f022 0201 	bic.w	r2, r2, #1
 800f7ca:	0412      	lsls	r2, r2, #16
 800f7cc:	0c12      	lsrs	r2, r2, #16
 800f7ce:	0051      	lsls	r1, r2, #1
 800f7d0:	220e      	movs	r2, #14
 800f7d2:	fb02 fc04 	mul.w	ip, r2, r4
 800f7d6:	ea4f 0880 	mov.w	r8, r0, lsl #2
 800f7da:	4c20      	ldr	r4, [pc, #128]	; (800f85c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800f7dc:	eb03 0208 	add.w	r2, r3, r8
 800f7e0:	eb08 0e01 	add.w	lr, r8, r1
 800f7e4:	6022      	str	r2, [r4, #0]
 800f7e6:	eb03 020e 	add.w	r2, r3, lr
 800f7ea:	6032      	str	r2, [r6, #0]
 800f7ec:	44e6      	add	lr, ip
 800f7ee:	4a1c      	ldr	r2, [pc, #112]	; (800f860 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800f7f0:	4473      	add	r3, lr
 800f7f2:	6013      	str	r3, [r2, #0]
 800f7f4:	4a1b      	ldr	r2, [pc, #108]	; (800f864 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800f7f6:	2300      	movs	r3, #0
 800f7f8:	8013      	strh	r3, [r2, #0]
 800f7fa:	4a1b      	ldr	r2, [pc, #108]	; (800f868 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800f7fc:	6812      	ldr	r2, [r2, #0]
 800f7fe:	eba2 0208 	sub.w	r2, r2, r8
 800f802:	1a52      	subs	r2, r2, r1
 800f804:	4919      	ldr	r1, [pc, #100]	; (800f86c <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800f806:	eba2 020c 	sub.w	r2, r2, ip
 800f80a:	600a      	str	r2, [r1, #0]
 800f80c:	4a18      	ldr	r2, [pc, #96]	; (800f870 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800f80e:	469c      	mov	ip, r3
 800f810:	8013      	strh	r3, [r2, #0]
 800f812:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f816:	4283      	cmp	r3, r0
 800f818:	d10d      	bne.n	800f836 <_ZN8touchgfx6Bitmap10clearCacheEv+0x8a>
 800f81a:	883d      	ldrh	r5, [r7, #0]
 800f81c:	6830      	ldr	r0, [r6, #0]
 800f81e:	2300      	movs	r3, #0
 800f820:	240e      	movs	r4, #14
 800f822:	429d      	cmp	r5, r3
 800f824:	d90f      	bls.n	800f846 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9a>
 800f826:	fb04 0203 	mla	r2, r4, r3, r0
 800f82a:	3301      	adds	r3, #1
 800f82c:	7b11      	ldrb	r1, [r2, #12]
 800f82e:	f36f 1145 	bfc	r1, #5, #1
 800f832:	7311      	strb	r1, [r2, #12]
 800f834:	e7f5      	b.n	800f822 <_ZN8touchgfx6Bitmap10clearCacheEv+0x76>
 800f836:	682a      	ldr	r2, [r5, #0]
 800f838:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800f83c:	6822      	ldr	r2, [r4, #0]
 800f83e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800f842:	3301      	adds	r3, #1
 800f844:	e7e7      	b.n	800f816 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6a>
 800f846:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f84a:	bf00      	nop
 800f84c:	20026984 	.word	0x20026984
 800f850:	200269a0 	.word	0x200269a0
 800f854:	200269a4 	.word	0x200269a4
 800f858:	20026988 	.word	0x20026988
 800f85c:	20026998 	.word	0x20026998
 800f860:	20026990 	.word	0x20026990
 800f864:	200269a2 	.word	0x200269a2
 800f868:	2002698c 	.word	0x2002698c
 800f86c:	2002699c 	.word	0x2002699c
 800f870:	20026994 	.word	0x20026994

0800f874 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800f874:	b510      	push	{r4, lr}
 800f876:	4b10      	ldr	r3, [pc, #64]	; (800f8b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800f878:	681b      	ldr	r3, [r3, #0]
 800f87a:	b9db      	cbnz	r3, 800f8b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f87c:	b1d1      	cbz	r1, 800f8b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f87e:	4b0f      	ldr	r3, [pc, #60]	; (800f8bc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800f880:	801a      	strh	r2, [r3, #0]
 800f882:	4b0f      	ldr	r3, [pc, #60]	; (800f8c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800f884:	881b      	ldrh	r3, [r3, #0]
 800f886:	b292      	uxth	r2, r2
 800f888:	240e      	movs	r4, #14
 800f88a:	4413      	add	r3, r2
 800f88c:	4362      	muls	r2, r4
 800f88e:	2406      	movs	r4, #6
 800f890:	fb04 2203 	mla	r2, r4, r3, r2
 800f894:	428a      	cmp	r2, r1
 800f896:	d305      	bcc.n	800f8a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800f898:	4b0a      	ldr	r3, [pc, #40]	; (800f8c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800f89a:	4a0b      	ldr	r2, [pc, #44]	; (800f8c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800f89c:	480b      	ldr	r0, [pc, #44]	; (800f8cc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800f89e:	2137      	movs	r1, #55	; 0x37
 800f8a0:	f00b fce6 	bl	801b270 <__assert_func>
 800f8a4:	4b0a      	ldr	r3, [pc, #40]	; (800f8d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800f8a6:	6019      	str	r1, [r3, #0]
 800f8a8:	4b0a      	ldr	r3, [pc, #40]	; (800f8d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800f8aa:	6018      	str	r0, [r3, #0]
 800f8ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f8b0:	f7ff bf7c 	b.w	800f7ac <_ZN8touchgfx6Bitmap10clearCacheEv>
 800f8b4:	bd10      	pop	{r4, pc}
 800f8b6:	bf00      	nop
 800f8b8:	20026990 	.word	0x20026990
 800f8bc:	200269a4 	.word	0x200269a4
 800f8c0:	200269a0 	.word	0x200269a0
 800f8c4:	0801e9ee 	.word	0x0801e9ee
 800f8c8:	0801ea47 	.word	0x0801ea47
 800f8cc:	0801e9c9 	.word	0x0801e9c9
 800f8d0:	2002698c 	.word	0x2002698c
 800f8d4:	20026984 	.word	0x20026984

0800f8d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800f8d8:	b470      	push	{r4, r5, r6}
 800f8da:	4c07      	ldr	r4, [pc, #28]	; (800f8f8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800f8dc:	6826      	ldr	r6, [r4, #0]
 800f8de:	4605      	mov	r5, r0
 800f8e0:	4610      	mov	r0, r2
 800f8e2:	9a03      	ldr	r2, [sp, #12]
 800f8e4:	b936      	cbnz	r6, 800f8f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800f8e6:	6025      	str	r5, [r4, #0]
 800f8e8:	4c04      	ldr	r4, [pc, #16]	; (800f8fc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800f8ea:	8021      	strh	r1, [r4, #0]
 800f8ec:	bc70      	pop	{r4, r5, r6}
 800f8ee:	4619      	mov	r1, r3
 800f8f0:	f7ff bfc0 	b.w	800f874 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800f8f4:	bc70      	pop	{r4, r5, r6}
 800f8f6:	4770      	bx	lr
 800f8f8:	200269a8 	.word	0x200269a8
 800f8fc:	200269a0 	.word	0x200269a0

0800f900 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800f900:	b508      	push	{r3, lr}
 800f902:	4b14      	ldr	r3, [pc, #80]	; (800f954 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800f904:	6819      	ldr	r1, [r3, #0]
 800f906:	b931      	cbnz	r1, 800f916 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800f908:	4b13      	ldr	r3, [pc, #76]	; (800f958 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800f90a:	4a14      	ldr	r2, [pc, #80]	; (800f95c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800f90c:	4814      	ldr	r0, [pc, #80]	; (800f960 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800f90e:	f240 21e6 	movw	r1, #742	; 0x2e6
 800f912:	f00b fcad 	bl	801b270 <__assert_func>
 800f916:	4a13      	ldr	r2, [pc, #76]	; (800f964 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800f918:	8803      	ldrh	r3, [r0, #0]
 800f91a:	8812      	ldrh	r2, [r2, #0]
 800f91c:	4293      	cmp	r3, r2
 800f91e:	d204      	bcs.n	800f92a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800f920:	2214      	movs	r2, #20
 800f922:	fb02 1303 	mla	r3, r2, r3, r1
 800f926:	8918      	ldrh	r0, [r3, #8]
 800f928:	bd08      	pop	{r3, pc}
 800f92a:	490f      	ldr	r1, [pc, #60]	; (800f968 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800f92c:	8809      	ldrh	r1, [r1, #0]
 800f92e:	4411      	add	r1, r2
 800f930:	428b      	cmp	r3, r1
 800f932:	da06      	bge.n	800f942 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800f934:	1a9b      	subs	r3, r3, r2
 800f936:	4a0d      	ldr	r2, [pc, #52]	; (800f96c <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800f938:	6812      	ldr	r2, [r2, #0]
 800f93a:	210e      	movs	r1, #14
 800f93c:	fb01 2303 	mla	r3, r1, r3, r2
 800f940:	e7f1      	b.n	800f926 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800f942:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f946:	4293      	cmp	r3, r2
 800f948:	bf0a      	itet	eq
 800f94a:	4b09      	ldreq	r3, [pc, #36]	; (800f970 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800f94c:	2000      	movne	r0, #0
 800f94e:	8818      	ldrheq	r0, [r3, #0]
 800f950:	e7ea      	b.n	800f928 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800f952:	bf00      	nop
 800f954:	200269a8 	.word	0x200269a8
 800f958:	0801ddf0 	.word	0x0801ddf0
 800f95c:	0801eaf4 	.word	0x0801eaf4
 800f960:	0801e9c9 	.word	0x0801e9c9
 800f964:	200269a0 	.word	0x200269a0
 800f968:	200269a4 	.word	0x200269a4
 800f96c:	20026988 	.word	0x20026988
 800f970:	200268f4 	.word	0x200268f4

0800f974 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800f974:	b508      	push	{r3, lr}
 800f976:	4b14      	ldr	r3, [pc, #80]	; (800f9c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800f978:	6819      	ldr	r1, [r3, #0]
 800f97a:	b931      	cbnz	r1, 800f98a <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800f97c:	4b13      	ldr	r3, [pc, #76]	; (800f9cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800f97e:	4a14      	ldr	r2, [pc, #80]	; (800f9d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800f980:	4814      	ldr	r0, [pc, #80]	; (800f9d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800f982:	f240 21fa 	movw	r1, #762	; 0x2fa
 800f986:	f00b fc73 	bl	801b270 <__assert_func>
 800f98a:	4a13      	ldr	r2, [pc, #76]	; (800f9d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800f98c:	8803      	ldrh	r3, [r0, #0]
 800f98e:	8812      	ldrh	r2, [r2, #0]
 800f990:	4293      	cmp	r3, r2
 800f992:	d204      	bcs.n	800f99e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800f994:	2214      	movs	r2, #20
 800f996:	fb02 1303 	mla	r3, r2, r3, r1
 800f99a:	8958      	ldrh	r0, [r3, #10]
 800f99c:	bd08      	pop	{r3, pc}
 800f99e:	490f      	ldr	r1, [pc, #60]	; (800f9dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800f9a0:	8809      	ldrh	r1, [r1, #0]
 800f9a2:	4411      	add	r1, r2
 800f9a4:	428b      	cmp	r3, r1
 800f9a6:	da06      	bge.n	800f9b6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800f9a8:	1a9b      	subs	r3, r3, r2
 800f9aa:	4a0d      	ldr	r2, [pc, #52]	; (800f9e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800f9ac:	6812      	ldr	r2, [r2, #0]
 800f9ae:	210e      	movs	r1, #14
 800f9b0:	fb01 2303 	mla	r3, r1, r3, r2
 800f9b4:	e7f1      	b.n	800f99a <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800f9b6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f9ba:	4293      	cmp	r3, r2
 800f9bc:	bf0a      	itet	eq
 800f9be:	4b09      	ldreq	r3, [pc, #36]	; (800f9e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800f9c0:	2000      	movne	r0, #0
 800f9c2:	8818      	ldrheq	r0, [r3, #0]
 800f9c4:	e7ea      	b.n	800f99c <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800f9c6:	bf00      	nop
 800f9c8:	200269a8 	.word	0x200269a8
 800f9cc:	0801ddf0 	.word	0x0801ddf0
 800f9d0:	0801eb20 	.word	0x0801eb20
 800f9d4:	0801e9c9 	.word	0x0801e9c9
 800f9d8:	200269a0 	.word	0x200269a0
 800f9dc:	200269a4 	.word	0x200269a4
 800f9e0:	20026988 	.word	0x20026988
 800f9e4:	200268f6 	.word	0x200268f6

0800f9e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800f9e8:	b510      	push	{r4, lr}
 800f9ea:	4b23      	ldr	r3, [pc, #140]	; (800fa78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800f9ec:	681c      	ldr	r4, [r3, #0]
 800f9ee:	b934      	cbnz	r4, 800f9fe <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800f9f0:	4b22      	ldr	r3, [pc, #136]	; (800fa7c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800f9f2:	4a23      	ldr	r2, [pc, #140]	; (800fa80 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800f9f4:	4823      	ldr	r0, [pc, #140]	; (800fa84 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800f9f6:	f240 310e 	movw	r1, #782	; 0x30e
 800f9fa:	f00b fc39 	bl	801b270 <__assert_func>
 800f9fe:	4a22      	ldr	r2, [pc, #136]	; (800fa88 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800fa00:	880b      	ldrh	r3, [r1, #0]
 800fa02:	8812      	ldrh	r2, [r2, #0]
 800fa04:	4293      	cmp	r3, r2
 800fa06:	d211      	bcs.n	800fa2c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800fa08:	2214      	movs	r2, #20
 800fa0a:	fb02 4303 	mla	r3, r2, r3, r4
 800fa0e:	8a1a      	ldrh	r2, [r3, #16]
 800fa10:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800fa14:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800fa18:	8a5b      	ldrh	r3, [r3, #18]
 800fa1a:	8004      	strh	r4, [r0, #0]
 800fa1c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fa20:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800fa24:	8041      	strh	r1, [r0, #2]
 800fa26:	8082      	strh	r2, [r0, #4]
 800fa28:	80c3      	strh	r3, [r0, #6]
 800fa2a:	e00e      	b.n	800fa4a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800fa2c:	4917      	ldr	r1, [pc, #92]	; (800fa8c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800fa2e:	8809      	ldrh	r1, [r1, #0]
 800fa30:	4411      	add	r1, r2
 800fa32:	428b      	cmp	r3, r1
 800fa34:	da0a      	bge.n	800fa4c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800fa36:	1a9b      	subs	r3, r3, r2
 800fa38:	4a15      	ldr	r2, [pc, #84]	; (800fa90 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800fa3a:	6812      	ldr	r2, [r2, #0]
 800fa3c:	210e      	movs	r1, #14
 800fa3e:	fb01 2303 	mla	r3, r1, r3, r2
 800fa42:	681a      	ldr	r2, [r3, #0]
 800fa44:	6002      	str	r2, [r0, #0]
 800fa46:	685a      	ldr	r2, [r3, #4]
 800fa48:	6042      	str	r2, [r0, #4]
 800fa4a:	bd10      	pop	{r4, pc}
 800fa4c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fa50:	4293      	cmp	r3, r2
 800fa52:	d10b      	bne.n	800fa6c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800fa54:	4b0f      	ldr	r3, [pc, #60]	; (800fa94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800fa56:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fa5a:	4b0f      	ldr	r3, [pc, #60]	; (800fa98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800fa5c:	8081      	strh	r1, [r0, #4]
 800fa5e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fa62:	80c2      	strh	r2, [r0, #6]
 800fa64:	2300      	movs	r3, #0
 800fa66:	8003      	strh	r3, [r0, #0]
 800fa68:	8043      	strh	r3, [r0, #2]
 800fa6a:	e7ee      	b.n	800fa4a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800fa6c:	2300      	movs	r3, #0
 800fa6e:	8003      	strh	r3, [r0, #0]
 800fa70:	8043      	strh	r3, [r0, #2]
 800fa72:	8083      	strh	r3, [r0, #4]
 800fa74:	e7d8      	b.n	800fa28 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800fa76:	bf00      	nop
 800fa78:	200269a8 	.word	0x200269a8
 800fa7c:	0801ddf0 	.word	0x0801ddf0
 800fa80:	0801ea8d 	.word	0x0801ea8d
 800fa84:	0801e9c9 	.word	0x0801e9c9
 800fa88:	200269a0 	.word	0x200269a0
 800fa8c:	200269a4 	.word	0x200269a4
 800fa90:	20026988 	.word	0x20026988
 800fa94:	200268f4 	.word	0x200268f4
 800fa98:	200268f6 	.word	0x200268f6

0800fa9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800fa9c:	4b18      	ldr	r3, [pc, #96]	; (800fb00 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800fa9e:	681b      	ldr	r3, [r3, #0]
 800faa0:	b34b      	cbz	r3, 800faf6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800faa2:	4a18      	ldr	r2, [pc, #96]	; (800fb04 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800faa4:	8800      	ldrh	r0, [r0, #0]
 800faa6:	8812      	ldrh	r2, [r2, #0]
 800faa8:	4290      	cmp	r0, r2
 800faaa:	d211      	bcs.n	800fad0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800faac:	2214      	movs	r2, #20
 800faae:	fb02 3300 	mla	r3, r2, r0, r3
 800fab2:	8a1a      	ldrh	r2, [r3, #16]
 800fab4:	8919      	ldrh	r1, [r3, #8]
 800fab6:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800faba:	428a      	cmp	r2, r1
 800fabc:	db1d      	blt.n	800fafa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800fabe:	8a58      	ldrh	r0, [r3, #18]
 800fac0:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800fac4:	895b      	ldrh	r3, [r3, #10]
 800fac6:	4298      	cmp	r0, r3
 800fac8:	bfac      	ite	ge
 800faca:	2000      	movge	r0, #0
 800facc:	2001      	movlt	r0, #1
 800face:	4770      	bx	lr
 800fad0:	4b0d      	ldr	r3, [pc, #52]	; (800fb08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800fad2:	881b      	ldrh	r3, [r3, #0]
 800fad4:	4413      	add	r3, r2
 800fad6:	4298      	cmp	r0, r3
 800fad8:	da0d      	bge.n	800faf6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800fada:	4b0c      	ldr	r3, [pc, #48]	; (800fb0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800fadc:	681b      	ldr	r3, [r3, #0]
 800fade:	1a80      	subs	r0, r0, r2
 800fae0:	220e      	movs	r2, #14
 800fae2:	fb02 3300 	mla	r3, r2, r0, r3
 800fae6:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800faea:	891a      	ldrh	r2, [r3, #8]
 800faec:	4291      	cmp	r1, r2
 800faee:	db04      	blt.n	800fafa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800faf0:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800faf4:	e7e6      	b.n	800fac4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800faf6:	2000      	movs	r0, #0
 800faf8:	4770      	bx	lr
 800fafa:	2001      	movs	r0, #1
 800fafc:	4770      	bx	lr
 800fafe:	bf00      	nop
 800fb00:	200269a8 	.word	0x200269a8
 800fb04:	200269a0 	.word	0x200269a0
 800fb08:	200269a4 	.word	0x200269a4
 800fb0c:	20026988 	.word	0x20026988

0800fb10 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800fb10:	b508      	push	{r3, lr}
 800fb12:	4b12      	ldr	r3, [pc, #72]	; (800fb5c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800fb14:	6819      	ldr	r1, [r3, #0]
 800fb16:	b931      	cbnz	r1, 800fb26 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800fb18:	4b11      	ldr	r3, [pc, #68]	; (800fb60 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800fb1a:	4a12      	ldr	r2, [pc, #72]	; (800fb64 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800fb1c:	4812      	ldr	r0, [pc, #72]	; (800fb68 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800fb1e:	f240 3132 	movw	r1, #818	; 0x332
 800fb22:	f00b fba5 	bl	801b270 <__assert_func>
 800fb26:	8803      	ldrh	r3, [r0, #0]
 800fb28:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fb2c:	4293      	cmp	r3, r2
 800fb2e:	d012      	beq.n	800fb56 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800fb30:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fb34:	4293      	cmp	r3, r2
 800fb36:	d103      	bne.n	800fb40 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800fb38:	4b0c      	ldr	r3, [pc, #48]	; (800fb6c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800fb3a:	681b      	ldr	r3, [r3, #0]
 800fb3c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800fb3e:	bd08      	pop	{r3, pc}
 800fb40:	4a0b      	ldr	r2, [pc, #44]	; (800fb70 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800fb42:	6812      	ldr	r2, [r2, #0]
 800fb44:	b11a      	cbz	r2, 800fb4e <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800fb46:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800fb4a:	2800      	cmp	r0, #0
 800fb4c:	d1f7      	bne.n	800fb3e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fb4e:	2214      	movs	r2, #20
 800fb50:	4353      	muls	r3, r2
 800fb52:	58c8      	ldr	r0, [r1, r3]
 800fb54:	e7f3      	b.n	800fb3e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fb56:	2000      	movs	r0, #0
 800fb58:	e7f1      	b.n	800fb3e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fb5a:	bf00      	nop
 800fb5c:	200269a8 	.word	0x200269a8
 800fb60:	0801ddf0 	.word	0x0801ddf0
 800fb64:	0801eac3 	.word	0x0801eac3
 800fb68:	0801e9c9 	.word	0x0801e9c9
 800fb6c:	20026900 	.word	0x20026900
 800fb70:	20026984 	.word	0x20026984

0800fb74 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800fb74:	8802      	ldrh	r2, [r0, #0]
 800fb76:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800fb7a:	429a      	cmp	r2, r3
 800fb7c:	d840      	bhi.n	800fc00 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800fb7e:	4b21      	ldr	r3, [pc, #132]	; (800fc04 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>)
 800fb80:	881b      	ldrh	r3, [r3, #0]
 800fb82:	429a      	cmp	r2, r3
 800fb84:	d220      	bcs.n	800fbc8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x54>
 800fb86:	4b20      	ldr	r3, [pc, #128]	; (800fc08 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 800fb88:	6819      	ldr	r1, [r3, #0]
 800fb8a:	2314      	movs	r3, #20
 800fb8c:	fb03 1302 	mla	r3, r3, r2, r1
 800fb90:	6858      	ldr	r0, [r3, #4]
 800fb92:	2800      	cmp	r0, #0
 800fb94:	d035      	beq.n	800fc02 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800fb96:	491d      	ldr	r1, [pc, #116]	; (800fc0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800fb98:	6809      	ldr	r1, [r1, #0]
 800fb9a:	2900      	cmp	r1, #0
 800fb9c:	d031      	beq.n	800fc02 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800fb9e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800fba2:	b371      	cbz	r1, 800fc02 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800fba4:	895a      	ldrh	r2, [r3, #10]
 800fba6:	8918      	ldrh	r0, [r3, #8]
 800fba8:	4350      	muls	r0, r2
 800fbaa:	7c5a      	ldrb	r2, [r3, #17]
 800fbac:	7cdb      	ldrb	r3, [r3, #19]
 800fbae:	0952      	lsrs	r2, r2, #5
 800fbb0:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800fbb4:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800fbb8:	2b0b      	cmp	r3, #11
 800fbba:	bf18      	it	ne
 800fbbc:	0040      	lslne	r0, r0, #1
 800fbbe:	3003      	adds	r0, #3
 800fbc0:	f020 0003 	bic.w	r0, r0, #3
 800fbc4:	4408      	add	r0, r1
 800fbc6:	4770      	bx	lr
 800fbc8:	4911      	ldr	r1, [pc, #68]	; (800fc10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800fbca:	8809      	ldrh	r1, [r1, #0]
 800fbcc:	4419      	add	r1, r3
 800fbce:	428a      	cmp	r2, r1
 800fbd0:	da16      	bge.n	800fc00 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800fbd2:	4910      	ldr	r1, [pc, #64]	; (800fc14 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800fbd4:	6809      	ldr	r1, [r1, #0]
 800fbd6:	1ad3      	subs	r3, r2, r3
 800fbd8:	200e      	movs	r0, #14
 800fbda:	fb00 1303 	mla	r3, r0, r3, r1
 800fbde:	7b19      	ldrb	r1, [r3, #12]
 800fbe0:	f001 011f 	and.w	r1, r1, #31
 800fbe4:	290b      	cmp	r1, #11
 800fbe6:	d10b      	bne.n	800fc00 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800fbe8:	8919      	ldrh	r1, [r3, #8]
 800fbea:	8958      	ldrh	r0, [r3, #10]
 800fbec:	4b07      	ldr	r3, [pc, #28]	; (800fc0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800fbee:	4348      	muls	r0, r1
 800fbf0:	6819      	ldr	r1, [r3, #0]
 800fbf2:	3003      	adds	r0, #3
 800fbf4:	f020 0303 	bic.w	r3, r0, #3
 800fbf8:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800fbfc:	4418      	add	r0, r3
 800fbfe:	4770      	bx	lr
 800fc00:	2000      	movs	r0, #0
 800fc02:	4770      	bx	lr
 800fc04:	200269a0 	.word	0x200269a0
 800fc08:	200269a8 	.word	0x200269a8
 800fc0c:	20026984 	.word	0x20026984
 800fc10:	200269a4 	.word	0x200269a4
 800fc14:	20026988 	.word	0x20026988

0800fc18 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800fc18:	4b19      	ldr	r3, [pc, #100]	; (800fc80 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800fc1a:	6819      	ldr	r1, [r3, #0]
 800fc1c:	8803      	ldrh	r3, [r0, #0]
 800fc1e:	b1e9      	cbz	r1, 800fc5c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800fc20:	4a18      	ldr	r2, [pc, #96]	; (800fc84 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800fc22:	8812      	ldrh	r2, [r2, #0]
 800fc24:	429a      	cmp	r2, r3
 800fc26:	d90a      	bls.n	800fc3e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fc28:	2214      	movs	r2, #20
 800fc2a:	fb02 1303 	mla	r3, r2, r3, r1
 800fc2e:	7c58      	ldrb	r0, [r3, #17]
 800fc30:	0942      	lsrs	r2, r0, #5
 800fc32:	7cd8      	ldrb	r0, [r3, #19]
 800fc34:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800fc38:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800fc3c:	4770      	bx	lr
 800fc3e:	4912      	ldr	r1, [pc, #72]	; (800fc88 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 800fc40:	8809      	ldrh	r1, [r1, #0]
 800fc42:	4411      	add	r1, r2
 800fc44:	428b      	cmp	r3, r1
 800fc46:	da09      	bge.n	800fc5c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800fc48:	1a9b      	subs	r3, r3, r2
 800fc4a:	4a10      	ldr	r2, [pc, #64]	; (800fc8c <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 800fc4c:	6812      	ldr	r2, [r2, #0]
 800fc4e:	210e      	movs	r1, #14
 800fc50:	fb01 2303 	mla	r3, r1, r3, r2
 800fc54:	7b18      	ldrb	r0, [r3, #12]
 800fc56:	f000 001f 	and.w	r0, r0, #31
 800fc5a:	4770      	bx	lr
 800fc5c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fc60:	4293      	cmp	r3, r2
 800fc62:	d10a      	bne.n	800fc7a <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800fc64:	4b0a      	ldr	r3, [pc, #40]	; (800fc90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 800fc66:	681b      	ldr	r3, [r3, #0]
 800fc68:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800fc6c:	b10a      	cbz	r2, 800fc72 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800fc6e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800fc70:	b900      	cbnz	r0, 800fc74 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800fc72:	6898      	ldr	r0, [r3, #8]
 800fc74:	6803      	ldr	r3, [r0, #0]
 800fc76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fc78:	4718      	bx	r3
 800fc7a:	2000      	movs	r0, #0
 800fc7c:	4770      	bx	lr
 800fc7e:	bf00      	nop
 800fc80:	200269a8 	.word	0x200269a8
 800fc84:	200269a0 	.word	0x200269a0
 800fc88:	200269a4 	.word	0x200269a4
 800fc8c:	20026988 	.word	0x20026988
 800fc90:	20026900 	.word	0x20026900

0800fc94 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800fc94:	2010      	movs	r0, #16
 800fc96:	4770      	bx	lr

0800fc98 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800fc98:	2000      	movs	r0, #0
 800fc9a:	4770      	bx	lr

0800fc9c <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 800fc9c:	00d2      	lsls	r2, r2, #3
 800fc9e:	0209      	lsls	r1, r1, #8
 800fca0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800fca4:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 800fca8:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 800fcac:	4310      	orrs	r0, r2
 800fcae:	4770      	bx	lr

0800fcb0 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 800fcb0:	1209      	asrs	r1, r1, #8
 800fcb2:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800fcb6:	4770      	bx	lr

0800fcb8 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 800fcb8:	f3c1 01cc 	ubfx	r1, r1, #3, #13
 800fcbc:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 800fcc0:	4770      	bx	lr

0800fcc2 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 800fcc2:	00c9      	lsls	r1, r1, #3
 800fcc4:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800fcc8:	4770      	bx	lr

0800fcca <_ZN8touchgfx8LCD16bpp4initEv>:
 800fcca:	4770      	bx	lr

0800fccc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800fccc:	2bff      	cmp	r3, #255	; 0xff
 800fcce:	d050      	beq.n	800fd72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800fcd0:	2a0b      	cmp	r2, #11
 800fcd2:	d04a      	beq.n	800fd6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fcd4:	d80e      	bhi.n	800fcf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800fcd6:	2a03      	cmp	r2, #3
 800fcd8:	d03f      	beq.n	800fd5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800fcda:	d804      	bhi.n	800fce6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800fcdc:	2a01      	cmp	r2, #1
 800fcde:	d03e      	beq.n	800fd5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800fce0:	d93f      	bls.n	800fd62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800fce2:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800fce4:	4770      	bx	lr
 800fce6:	2a09      	cmp	r2, #9
 800fce8:	d03f      	beq.n	800fd6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fcea:	d83c      	bhi.n	800fd66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fcec:	2a08      	cmp	r2, #8
 800fcee:	d03a      	beq.n	800fd66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fcf0:	2000      	movs	r0, #0
 800fcf2:	4770      	bx	lr
 800fcf4:	2a2f      	cmp	r2, #47	; 0x2f
 800fcf6:	d024      	beq.n	800fd42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800fcf8:	d80d      	bhi.n	800fd16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800fcfa:	2a2d      	cmp	r2, #45	; 0x2d
 800fcfc:	d014      	beq.n	800fd28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800fcfe:	d826      	bhi.n	800fd4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800fd00:	2a2c      	cmp	r2, #44	; 0x2c
 800fd02:	d1f5      	bne.n	800fcf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd04:	684b      	ldr	r3, [r1, #4]
 800fd06:	781b      	ldrb	r3, [r3, #0]
 800fd08:	2b01      	cmp	r3, #1
 800fd0a:	d018      	beq.n	800fd3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800fd0c:	d323      	bcc.n	800fd56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800fd0e:	2b02      	cmp	r3, #2
 800fd10:	d1ee      	bne.n	800fcf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd12:	6880      	ldr	r0, [r0, #8]
 800fd14:	4770      	bx	lr
 800fd16:	2a31      	cmp	r2, #49	; 0x31
 800fd18:	d004      	beq.n	800fd24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800fd1a:	d328      	bcc.n	800fd6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fd1c:	2a32      	cmp	r2, #50	; 0x32
 800fd1e:	d026      	beq.n	800fd6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fd20:	2a33      	cmp	r2, #51	; 0x33
 800fd22:	d1e5      	bne.n	800fcf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd24:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800fd26:	4770      	bx	lr
 800fd28:	684b      	ldr	r3, [r1, #4]
 800fd2a:	781b      	ldrb	r3, [r3, #0]
 800fd2c:	2b01      	cmp	r3, #1
 800fd2e:	d004      	beq.n	800fd3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800fd30:	d30b      	bcc.n	800fd4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800fd32:	2b02      	cmp	r3, #2
 800fd34:	d1dc      	bne.n	800fcf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd36:	6900      	ldr	r0, [r0, #16]
 800fd38:	4770      	bx	lr
 800fd3a:	6a00      	ldr	r0, [r0, #32]
 800fd3c:	4770      	bx	lr
 800fd3e:	6980      	ldr	r0, [r0, #24]
 800fd40:	4770      	bx	lr
 800fd42:	684b      	ldr	r3, [r1, #4]
 800fd44:	781b      	ldrb	r3, [r3, #0]
 800fd46:	2b00      	cmp	r3, #0
 800fd48:	d1d2      	bne.n	800fcf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd4a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800fd4c:	4770      	bx	lr
 800fd4e:	684b      	ldr	r3, [r1, #4]
 800fd50:	781b      	ldrb	r3, [r3, #0]
 800fd52:	2b00      	cmp	r3, #0
 800fd54:	d1cc      	bne.n	800fcf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd56:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800fd58:	4770      	bx	lr
 800fd5a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800fd5c:	4770      	bx	lr
 800fd5e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800fd60:	4770      	bx	lr
 800fd62:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800fd64:	4770      	bx	lr
 800fd66:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800fd68:	4770      	bx	lr
 800fd6a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800fd6c:	4770      	bx	lr
 800fd6e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800fd70:	4770      	bx	lr
 800fd72:	2a0b      	cmp	r2, #11
 800fd74:	d049      	beq.n	800fe0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fd76:	d80e      	bhi.n	800fd96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800fd78:	2a03      	cmp	r2, #3
 800fd7a:	d040      	beq.n	800fdfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800fd7c:	d804      	bhi.n	800fd88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800fd7e:	2a01      	cmp	r2, #1
 800fd80:	d03f      	beq.n	800fe02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800fd82:	d940      	bls.n	800fe06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800fd84:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800fd86:	4770      	bx	lr
 800fd88:	2a09      	cmp	r2, #9
 800fd8a:	d03e      	beq.n	800fe0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fd8c:	d801      	bhi.n	800fd92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800fd8e:	2a08      	cmp	r2, #8
 800fd90:	d1ae      	bne.n	800fcf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd92:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800fd94:	4770      	bx	lr
 800fd96:	2a2f      	cmp	r2, #47	; 0x2f
 800fd98:	d024      	beq.n	800fde4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800fd9a:	d80d      	bhi.n	800fdb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800fd9c:	2a2d      	cmp	r2, #45	; 0x2d
 800fd9e:	d014      	beq.n	800fdca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800fda0:	d826      	bhi.n	800fdf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800fda2:	2a2c      	cmp	r2, #44	; 0x2c
 800fda4:	d1a4      	bne.n	800fcf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fda6:	684b      	ldr	r3, [r1, #4]
 800fda8:	781b      	ldrb	r3, [r3, #0]
 800fdaa:	2b01      	cmp	r3, #1
 800fdac:	d018      	beq.n	800fde0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800fdae:	d324      	bcc.n	800fdfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800fdb0:	2b02      	cmp	r3, #2
 800fdb2:	d19d      	bne.n	800fcf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdb4:	68c0      	ldr	r0, [r0, #12]
 800fdb6:	4770      	bx	lr
 800fdb8:	2a31      	cmp	r2, #49	; 0x31
 800fdba:	d004      	beq.n	800fdc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800fdbc:	d327      	bcc.n	800fe0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fdbe:	2a32      	cmp	r2, #50	; 0x32
 800fdc0:	d025      	beq.n	800fe0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fdc2:	2a33      	cmp	r2, #51	; 0x33
 800fdc4:	d194      	bne.n	800fcf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdc6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800fdc8:	4770      	bx	lr
 800fdca:	684b      	ldr	r3, [r1, #4]
 800fdcc:	781b      	ldrb	r3, [r3, #0]
 800fdce:	2b01      	cmp	r3, #1
 800fdd0:	d004      	beq.n	800fddc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800fdd2:	d30b      	bcc.n	800fdec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800fdd4:	2b02      	cmp	r3, #2
 800fdd6:	d18b      	bne.n	800fcf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdd8:	6940      	ldr	r0, [r0, #20]
 800fdda:	4770      	bx	lr
 800fddc:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800fdde:	4770      	bx	lr
 800fde0:	69c0      	ldr	r0, [r0, #28]
 800fde2:	4770      	bx	lr
 800fde4:	684b      	ldr	r3, [r1, #4]
 800fde6:	781b      	ldrb	r3, [r3, #0]
 800fde8:	2b00      	cmp	r3, #0
 800fdea:	d181      	bne.n	800fcf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdec:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800fdee:	4770      	bx	lr
 800fdf0:	684b      	ldr	r3, [r1, #4]
 800fdf2:	781b      	ldrb	r3, [r3, #0]
 800fdf4:	2b00      	cmp	r3, #0
 800fdf6:	f47f af7b 	bne.w	800fcf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdfa:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800fdfc:	4770      	bx	lr
 800fdfe:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fe00:	4770      	bx	lr
 800fe02:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800fe04:	4770      	bx	lr
 800fe06:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800fe08:	4770      	bx	lr
 800fe0a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800fe0c:	4770      	bx	lr
 800fe0e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800fe10:	4770      	bx	lr

0800fe12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fe12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe16:	b087      	sub	sp, #28
 800fe18:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800fe1a:	9205      	str	r2, [sp, #20]
 800fe1c:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800fe20:	9202      	str	r2, [sp, #8]
 800fe22:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800fe26:	9101      	str	r1, [sp, #4]
 800fe28:	6871      	ldr	r1, [r6, #4]
 800fe2a:	981a      	ldr	r0, [sp, #104]	; 0x68
 800fe2c:	f89d 406c 	ldrb.w	r4, [sp, #108]	; 0x6c
 800fe30:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800fe34:	fb01 2505 	mla	r5, r1, r5, r2
 800fe38:	6832      	ldr	r2, [r6, #0]
 800fe3a:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800fe3e:	6802      	ldr	r2, [r0, #0]
 800fe40:	9203      	str	r2, [sp, #12]
 800fe42:	6842      	ldr	r2, [r0, #4]
 800fe44:	fa1f fe84 	uxth.w	lr, r4
 800fe48:	3204      	adds	r2, #4
 800fe4a:	43e4      	mvns	r4, r4
 800fe4c:	9204      	str	r2, [sp, #16]
 800fe4e:	b2e4      	uxtb	r4, r4
 800fe50:	9a01      	ldr	r2, [sp, #4]
 800fe52:	2a00      	cmp	r2, #0
 800fe54:	dc03      	bgt.n	800fe5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800fe56:	9a05      	ldr	r2, [sp, #20]
 800fe58:	2a00      	cmp	r2, #0
 800fe5a:	f340 8119 	ble.w	8010090 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800fe5e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fe60:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fe64:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fe66:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fe6a:	2b00      	cmp	r3, #0
 800fe6c:	dd0f      	ble.n	800fe8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800fe6e:	1408      	asrs	r0, r1, #16
 800fe70:	d406      	bmi.n	800fe80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800fe72:	4540      	cmp	r0, r8
 800fe74:	da04      	bge.n	800fe80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800fe76:	1410      	asrs	r0, r2, #16
 800fe78:	d402      	bmi.n	800fe80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800fe7a:	9e02      	ldr	r6, [sp, #8]
 800fe7c:	42b0      	cmp	r0, r6
 800fe7e:	db07      	blt.n	800fe90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fe80:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fe82:	4401      	add	r1, r0
 800fe84:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fe86:	3b01      	subs	r3, #1
 800fe88:	4402      	add	r2, r0
 800fe8a:	3502      	adds	r5, #2
 800fe8c:	e7ed      	b.n	800fe6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800fe8e:	d00f      	beq.n	800feb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800fe90:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800fe92:	1e58      	subs	r0, r3, #1
 800fe94:	fb06 1600 	mla	r6, r6, r0, r1
 800fe98:	1436      	asrs	r6, r6, #16
 800fe9a:	d547      	bpl.n	800ff2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800fe9c:	469b      	mov	fp, r3
 800fe9e:	46aa      	mov	sl, r5
 800fea0:	f1bb 0f00 	cmp.w	fp, #0
 800fea4:	f300 809e 	bgt.w	800ffe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 800fea8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800feac:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800feb0:	9b01      	ldr	r3, [sp, #4]
 800feb2:	2b00      	cmp	r3, #0
 800feb4:	f340 80ec 	ble.w	8010090 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800feb8:	ee30 0a04 	vadd.f32	s0, s0, s8
 800febc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800fec0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800fec4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fec6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800feca:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fece:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fed2:	eef0 6a62 	vmov.f32	s13, s5
 800fed6:	ee61 7a27 	vmul.f32	s15, s2, s15
 800feda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fede:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fee2:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800fee6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800feea:	eef0 6a43 	vmov.f32	s13, s6
 800feee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fef2:	ee12 2a90 	vmov	r2, s5
 800fef6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fefa:	fb92 f3f3 	sdiv	r3, r2, r3
 800fefe:	ee13 2a10 	vmov	r2, s6
 800ff02:	9313      	str	r3, [sp, #76]	; 0x4c
 800ff04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ff06:	fb92 f3f3 	sdiv	r3, r2, r3
 800ff0a:	9314      	str	r3, [sp, #80]	; 0x50
 800ff0c:	9b01      	ldr	r3, [sp, #4]
 800ff0e:	9a05      	ldr	r2, [sp, #20]
 800ff10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800ff14:	3b01      	subs	r3, #1
 800ff16:	9301      	str	r3, [sp, #4]
 800ff18:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800ff1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ff1e:	eeb0 3a67 	vmov.f32	s6, s15
 800ff22:	bf08      	it	eq
 800ff24:	4613      	moveq	r3, r2
 800ff26:	eef0 2a47 	vmov.f32	s5, s14
 800ff2a:	e791      	b.n	800fe50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800ff2c:	4546      	cmp	r6, r8
 800ff2e:	dab5      	bge.n	800fe9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800ff30:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800ff32:	fb06 2000 	mla	r0, r6, r0, r2
 800ff36:	1400      	asrs	r0, r0, #16
 800ff38:	d4b0      	bmi.n	800fe9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800ff3a:	9e02      	ldr	r6, [sp, #8]
 800ff3c:	42b0      	cmp	r0, r6
 800ff3e:	daad      	bge.n	800fe9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800ff40:	469a      	mov	sl, r3
 800ff42:	46ab      	mov	fp, r5
 800ff44:	f1ba 0f00 	cmp.w	sl, #0
 800ff48:	ddae      	ble.n	800fea8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800ff4a:	9f03      	ldr	r7, [sp, #12]
 800ff4c:	1410      	asrs	r0, r2, #16
 800ff4e:	140e      	asrs	r6, r1, #16
 800ff50:	fb08 7000 	mla	r0, r8, r0, r7
 800ff54:	f10a 3aff 	add.w	sl, sl, #4294967295
 800ff58:	5d80      	ldrb	r0, [r0, r6]
 800ff5a:	9e04      	ldr	r6, [sp, #16]
 800ff5c:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800ff60:	f8bb 6000 	ldrh.w	r6, [fp]
 800ff64:	1237      	asrs	r7, r6, #8
 800ff66:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800ff6a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ff6e:	fb17 f704 	smulbb	r7, r7, r4
 800ff72:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800ff76:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ff7a:	00f6      	lsls	r6, r6, #3
 800ff7c:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800ff80:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800ff84:	10c7      	asrs	r7, r0, #3
 800ff86:	b2f6      	uxtb	r6, r6
 800ff88:	00c0      	lsls	r0, r0, #3
 800ff8a:	fb19 f904 	smulbb	r9, r9, r4
 800ff8e:	fb16 f604 	smulbb	r6, r6, r4
 800ff92:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ff96:	b2c0      	uxtb	r0, r0
 800ff98:	fa1f fc8c 	uxth.w	ip, ip
 800ff9c:	fb07 970e 	mla	r7, r7, lr, r9
 800ffa0:	fb00 600e 	mla	r0, r0, lr, r6
 800ffa4:	b280      	uxth	r0, r0
 800ffa6:	b2bf      	uxth	r7, r7
 800ffa8:	f10c 0601 	add.w	r6, ip, #1
 800ffac:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800ffb0:	f107 0901 	add.w	r9, r7, #1
 800ffb4:	1c46      	adds	r6, r0, #1
 800ffb6:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800ffba:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800ffbe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ffc0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ffc4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800ffc8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800ffcc:	ea4c 0c06 	orr.w	ip, ip, r6
 800ffd0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800ffd4:	4401      	add	r1, r0
 800ffd6:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ffd8:	ea4c 0c09 	orr.w	ip, ip, r9
 800ffdc:	f82b cb02 	strh.w	ip, [fp], #2
 800ffe0:	4402      	add	r2, r0
 800ffe2:	e7af      	b.n	800ff44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800ffe4:	140e      	asrs	r6, r1, #16
 800ffe6:	d44a      	bmi.n	801007e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800ffe8:	4546      	cmp	r6, r8
 800ffea:	da48      	bge.n	801007e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800ffec:	1410      	asrs	r0, r2, #16
 800ffee:	d446      	bmi.n	801007e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800fff0:	9f02      	ldr	r7, [sp, #8]
 800fff2:	42b8      	cmp	r0, r7
 800fff4:	da43      	bge.n	801007e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800fff6:	9f03      	ldr	r7, [sp, #12]
 800fff8:	fb08 7000 	mla	r0, r8, r0, r7
 800fffc:	5d80      	ldrb	r0, [r0, r6]
 800fffe:	9e04      	ldr	r6, [sp, #16]
 8010000:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8010004:	f8ba 6000 	ldrh.w	r6, [sl]
 8010008:	1237      	asrs	r7, r6, #8
 801000a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801000e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010012:	fb17 f704 	smulbb	r7, r7, r4
 8010016:	ea4f 09e6 	mov.w	r9, r6, asr #3
 801001a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801001e:	00f6      	lsls	r6, r6, #3
 8010020:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8010024:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010028:	10c7      	asrs	r7, r0, #3
 801002a:	b2f6      	uxtb	r6, r6
 801002c:	00c0      	lsls	r0, r0, #3
 801002e:	fb19 f904 	smulbb	r9, r9, r4
 8010032:	fb16 f604 	smulbb	r6, r6, r4
 8010036:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801003a:	b2c0      	uxtb	r0, r0
 801003c:	fa1f fc8c 	uxth.w	ip, ip
 8010040:	fb07 970e 	mla	r7, r7, lr, r9
 8010044:	fb00 600e 	mla	r0, r0, lr, r6
 8010048:	b2bf      	uxth	r7, r7
 801004a:	b280      	uxth	r0, r0
 801004c:	f10c 0601 	add.w	r6, ip, #1
 8010050:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8010054:	f107 0901 	add.w	r9, r7, #1
 8010058:	1c46      	adds	r6, r0, #1
 801005a:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801005e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8010062:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010066:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801006a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801006e:	ea4c 0c06 	orr.w	ip, ip, r6
 8010072:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8010076:	ea4c 0c09 	orr.w	ip, ip, r9
 801007a:	f8aa c000 	strh.w	ip, [sl]
 801007e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010080:	4401      	add	r1, r0
 8010082:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010084:	f10a 0a02 	add.w	sl, sl, #2
 8010088:	4402      	add	r2, r0
 801008a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801008e:	e707      	b.n	800fea0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8010090:	b007      	add	sp, #28
 8010092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010096 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010096:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801009a:	b085      	sub	sp, #20
 801009c:	e9dd 7611 	ldrd	r7, r6, [sp, #68]	; 0x44
 80100a0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80100a2:	9203      	str	r2, [sp, #12]
 80100a4:	6842      	ldr	r2, [r0, #4]
 80100a6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80100a8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80100aa:	6800      	ldr	r0, [r0, #0]
 80100ac:	f9bd c058 	ldrsh.w	ip, [sp, #88]	; 0x58
 80100b0:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 80100b4:	4696      	mov	lr, r2
 80100b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80100b8:	fb0e 2505 	mla	r5, lr, r5, r2
 80100bc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80100c0:	6860      	ldr	r0, [r4, #4]
 80100c2:	6822      	ldr	r2, [r4, #0]
 80100c4:	9201      	str	r2, [sp, #4]
 80100c6:	1d02      	adds	r2, r0, #4
 80100c8:	9202      	str	r2, [sp, #8]
 80100ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80100ce:	2900      	cmp	r1, #0
 80100d0:	dc03      	bgt.n	80100da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 80100d2:	9a03      	ldr	r2, [sp, #12]
 80100d4:	2a00      	cmp	r2, #0
 80100d6:	f340 809b 	ble.w	8010210 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 80100da:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80100dc:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 80100e0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80100e2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80100e6:	2b00      	cmp	r3, #0
 80100e8:	dd0e      	ble.n	8010108 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 80100ea:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80100ee:	d406      	bmi.n	80100fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80100f0:	45e6      	cmp	lr, ip
 80100f2:	da04      	bge.n	80100fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80100f4:	ea5f 4e20 	movs.w	lr, r0, asr #16
 80100f8:	d401      	bmi.n	80100fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80100fa:	45c6      	cmp	lr, r8
 80100fc:	db05      	blt.n	801010a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80100fe:	443c      	add	r4, r7
 8010100:	4430      	add	r0, r6
 8010102:	3b01      	subs	r3, #1
 8010104:	3502      	adds	r5, #2
 8010106:	e7ee      	b.n	80100e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8010108:	d010      	beq.n	801012c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 801010a:	f103 3eff 	add.w	lr, r3, #4294967295
 801010e:	fb07 490e 	mla	r9, r7, lr, r4
 8010112:	ea5f 4929 	movs.w	r9, r9, asr #16
 8010116:	d53d      	bpl.n	8010194 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8010118:	469e      	mov	lr, r3
 801011a:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 801011e:	f1be 0f00 	cmp.w	lr, #0
 8010122:	dc58      	bgt.n	80101d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x140>
 8010124:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010128:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801012c:	2900      	cmp	r1, #0
 801012e:	dd6f      	ble.n	8010210 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 8010130:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010134:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010138:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801013c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801013e:	3901      	subs	r1, #1
 8010140:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010144:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010148:	eeb0 6a62 	vmov.f32	s12, s5
 801014c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010150:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010154:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010158:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801015c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010160:	eeb0 6a43 	vmov.f32	s12, s6
 8010164:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010168:	ee12 2a90 	vmov	r2, s5
 801016c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010170:	fb92 f7f3 	sdiv	r7, r2, r3
 8010174:	ee13 2a10 	vmov	r2, s6
 8010178:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801017c:	fb92 f6f3 	sdiv	r6, r2, r3
 8010180:	9a03      	ldr	r2, [sp, #12]
 8010182:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010186:	bf08      	it	eq
 8010188:	4613      	moveq	r3, r2
 801018a:	eeb0 3a67 	vmov.f32	s6, s15
 801018e:	eef0 2a47 	vmov.f32	s5, s14
 8010192:	e79c      	b.n	80100ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 8010194:	45e1      	cmp	r9, ip
 8010196:	dabf      	bge.n	8010118 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 8010198:	fb06 0e0e 	mla	lr, r6, lr, r0
 801019c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80101a0:	d4ba      	bmi.n	8010118 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 80101a2:	45c6      	cmp	lr, r8
 80101a4:	dab8      	bge.n	8010118 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 80101a6:	469e      	mov	lr, r3
 80101a8:	46aa      	mov	sl, r5
 80101aa:	f1be 0f00 	cmp.w	lr, #0
 80101ae:	ddb9      	ble.n	8010124 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 80101b0:	9a01      	ldr	r2, [sp, #4]
 80101b2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80101b6:	ea4f 4b24 	mov.w	fp, r4, asr #16
 80101ba:	fb0c 2909 	mla	r9, ip, r9, r2
 80101be:	9a02      	ldr	r2, [sp, #8]
 80101c0:	f819 900b 	ldrb.w	r9, [r9, fp]
 80101c4:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 80101c8:	f82a 9b02 	strh.w	r9, [sl], #2
 80101cc:	443c      	add	r4, r7
 80101ce:	4430      	add	r0, r6
 80101d0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80101d4:	e7e9      	b.n	80101aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 80101d6:	ea5f 4a24 	movs.w	sl, r4, asr #16
 80101da:	d414      	bmi.n	8010206 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 80101dc:	45e2      	cmp	sl, ip
 80101de:	da12      	bge.n	8010206 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 80101e0:	ea5f 4920 	movs.w	r9, r0, asr #16
 80101e4:	d40f      	bmi.n	8010206 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 80101e6:	45c1      	cmp	r9, r8
 80101e8:	da0d      	bge.n	8010206 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 80101ea:	9a01      	ldr	r2, [sp, #4]
 80101ec:	fb0c 2909 	mla	r9, ip, r9, r2
 80101f0:	9a02      	ldr	r2, [sp, #8]
 80101f2:	f819 900a 	ldrb.w	r9, [r9, sl]
 80101f6:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 80101fa:	f06f 0201 	mvn.w	r2, #1
 80101fe:	fb02 f90e 	mul.w	r9, r2, lr
 8010202:	f82b a009 	strh.w	sl, [fp, r9]
 8010206:	443c      	add	r4, r7
 8010208:	4430      	add	r0, r6
 801020a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801020e:	e786      	b.n	801011e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 8010210:	b005      	add	sp, #20
 8010212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010216 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010216:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801021a:	b087      	sub	sp, #28
 801021c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801021e:	9205      	str	r2, [sp, #20]
 8010220:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010224:	9202      	str	r2, [sp, #8]
 8010226:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801022a:	9101      	str	r1, [sp, #4]
 801022c:	6871      	ldr	r1, [r6, #4]
 801022e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8010230:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
 8010234:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 8010238:	fb01 2404 	mla	r4, r1, r4, r2
 801023c:	6832      	ldr	r2, [r6, #0]
 801023e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010242:	682a      	ldr	r2, [r5, #0]
 8010244:	9203      	str	r2, [sp, #12]
 8010246:	686a      	ldr	r2, [r5, #4]
 8010248:	fa1f fc80 	uxth.w	ip, r0
 801024c:	3204      	adds	r2, #4
 801024e:	43c0      	mvns	r0, r0
 8010250:	9200      	str	r2, [sp, #0]
 8010252:	b2c0      	uxtb	r0, r0
 8010254:	9a01      	ldr	r2, [sp, #4]
 8010256:	2a00      	cmp	r2, #0
 8010258:	dc03      	bgt.n	8010262 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 801025a:	9a05      	ldr	r2, [sp, #20]
 801025c:	2a00      	cmp	r2, #0
 801025e:	f340 811b 	ble.w	8010498 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 8010262:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010264:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010268:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801026a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801026e:	2b00      	cmp	r3, #0
 8010270:	dd0f      	ble.n	8010292 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 8010272:	140d      	asrs	r5, r1, #16
 8010274:	d406      	bmi.n	8010284 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010276:	4575      	cmp	r5, lr
 8010278:	da04      	bge.n	8010284 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801027a:	1415      	asrs	r5, r2, #16
 801027c:	d402      	bmi.n	8010284 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801027e:	9e02      	ldr	r6, [sp, #8]
 8010280:	42b5      	cmp	r5, r6
 8010282:	db07      	blt.n	8010294 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010284:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010286:	4429      	add	r1, r5
 8010288:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801028a:	3b01      	subs	r3, #1
 801028c:	442a      	add	r2, r5
 801028e:	3402      	adds	r4, #2
 8010290:	e7ed      	b.n	801026e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 8010292:	d00f      	beq.n	80102b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8010294:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010296:	1e5d      	subs	r5, r3, #1
 8010298:	fb06 1605 	mla	r6, r6, r5, r1
 801029c:	1436      	asrs	r6, r6, #16
 801029e:	d547      	bpl.n	8010330 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 80102a0:	469a      	mov	sl, r3
 80102a2:	46a1      	mov	r9, r4
 80102a4:	f1ba 0f00 	cmp.w	sl, #0
 80102a8:	f300 809f 	bgt.w	80103ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 80102ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80102b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80102b4:	9b01      	ldr	r3, [sp, #4]
 80102b6:	2b00      	cmp	r3, #0
 80102b8:	f340 80ee 	ble.w	8010498 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 80102bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80102c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80102c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80102c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80102ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80102ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80102d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80102d6:	eef0 6a62 	vmov.f32	s13, s5
 80102da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80102de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80102e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80102e6:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80102ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80102ee:	eef0 6a43 	vmov.f32	s13, s6
 80102f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80102f6:	ee12 2a90 	vmov	r2, s5
 80102fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80102fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8010302:	ee13 2a10 	vmov	r2, s6
 8010306:	9313      	str	r3, [sp, #76]	; 0x4c
 8010308:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801030a:	fb92 f3f3 	sdiv	r3, r2, r3
 801030e:	9314      	str	r3, [sp, #80]	; 0x50
 8010310:	9b01      	ldr	r3, [sp, #4]
 8010312:	9a05      	ldr	r2, [sp, #20]
 8010314:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010318:	3b01      	subs	r3, #1
 801031a:	9301      	str	r3, [sp, #4]
 801031c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8010320:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010322:	eeb0 3a67 	vmov.f32	s6, s15
 8010326:	bf08      	it	eq
 8010328:	4613      	moveq	r3, r2
 801032a:	eef0 2a47 	vmov.f32	s5, s14
 801032e:	e791      	b.n	8010254 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 8010330:	4576      	cmp	r6, lr
 8010332:	dab5      	bge.n	80102a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010334:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8010336:	fb06 2505 	mla	r5, r6, r5, r2
 801033a:	142d      	asrs	r5, r5, #16
 801033c:	d4b0      	bmi.n	80102a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 801033e:	9e02      	ldr	r6, [sp, #8]
 8010340:	42b5      	cmp	r5, r6
 8010342:	daad      	bge.n	80102a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010344:	4699      	mov	r9, r3
 8010346:	46a2      	mov	sl, r4
 8010348:	f1b9 0f00 	cmp.w	r9, #0
 801034c:	ddae      	ble.n	80102ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 801034e:	9f03      	ldr	r7, [sp, #12]
 8010350:	1415      	asrs	r5, r2, #16
 8010352:	140e      	asrs	r6, r1, #16
 8010354:	fb0e 7505 	mla	r5, lr, r5, r7
 8010358:	f109 39ff 	add.w	r9, r9, #4294967295
 801035c:	f815 8006 	ldrb.w	r8, [r5, r6]
 8010360:	9d00      	ldr	r5, [sp, #0]
 8010362:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8010366:	eb05 0b08 	add.w	fp, r5, r8
 801036a:	f8ba 5000 	ldrh.w	r5, [sl]
 801036e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010372:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010376:	122f      	asrs	r7, r5, #8
 8010378:	fb16 f60c 	smulbb	r6, r6, ip
 801037c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010380:	fb07 6700 	mla	r7, r7, r0, r6
 8010384:	10ee      	asrs	r6, r5, #3
 8010386:	fb1b fb0c 	smulbb	fp, fp, ip
 801038a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801038e:	fb06 b600 	mla	r6, r6, r0, fp
 8010392:	b2b6      	uxth	r6, r6
 8010394:	9604      	str	r6, [sp, #16]
 8010396:	9e00      	ldr	r6, [sp, #0]
 8010398:	00ed      	lsls	r5, r5, #3
 801039a:	f816 8008 	ldrb.w	r8, [r6, r8]
 801039e:	b2ed      	uxtb	r5, r5
 80103a0:	fb15 f500 	smulbb	r5, r5, r0
 80103a4:	b2bf      	uxth	r7, r7
 80103a6:	fb08 580c 	mla	r8, r8, ip, r5
 80103aa:	fa1f f888 	uxth.w	r8, r8
 80103ae:	1c7d      	adds	r5, r7, #1
 80103b0:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80103b4:	f108 0501 	add.w	r5, r8, #1
 80103b8:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 80103bc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80103c0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80103c4:	432f      	orrs	r7, r5
 80103c6:	9d04      	ldr	r5, [sp, #16]
 80103c8:	f105 0b01 	add.w	fp, r5, #1
 80103cc:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 80103d0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80103d2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80103d6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80103da:	4429      	add	r1, r5
 80103dc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80103de:	ea47 070b 	orr.w	r7, r7, fp
 80103e2:	f82a 7b02 	strh.w	r7, [sl], #2
 80103e6:	442a      	add	r2, r5
 80103e8:	e7ae      	b.n	8010348 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 80103ea:	140e      	asrs	r6, r1, #16
 80103ec:	d44b      	bmi.n	8010486 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80103ee:	4576      	cmp	r6, lr
 80103f0:	da49      	bge.n	8010486 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80103f2:	1415      	asrs	r5, r2, #16
 80103f4:	d447      	bmi.n	8010486 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80103f6:	9f02      	ldr	r7, [sp, #8]
 80103f8:	42bd      	cmp	r5, r7
 80103fa:	da44      	bge.n	8010486 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80103fc:	9f03      	ldr	r7, [sp, #12]
 80103fe:	fb0e 7505 	mla	r5, lr, r5, r7
 8010402:	f815 8006 	ldrb.w	r8, [r5, r6]
 8010406:	9d00      	ldr	r5, [sp, #0]
 8010408:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801040c:	eb05 0b08 	add.w	fp, r5, r8
 8010410:	f8b9 5000 	ldrh.w	r5, [r9]
 8010414:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010418:	f89b b001 	ldrb.w	fp, [fp, #1]
 801041c:	122f      	asrs	r7, r5, #8
 801041e:	fb16 f60c 	smulbb	r6, r6, ip
 8010422:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010426:	fb07 6700 	mla	r7, r7, r0, r6
 801042a:	10ee      	asrs	r6, r5, #3
 801042c:	fb1b fb0c 	smulbb	fp, fp, ip
 8010430:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010434:	fb06 b600 	mla	r6, r6, r0, fp
 8010438:	b2b6      	uxth	r6, r6
 801043a:	9604      	str	r6, [sp, #16]
 801043c:	9e00      	ldr	r6, [sp, #0]
 801043e:	00ed      	lsls	r5, r5, #3
 8010440:	f816 8008 	ldrb.w	r8, [r6, r8]
 8010444:	b2ed      	uxtb	r5, r5
 8010446:	fb15 f500 	smulbb	r5, r5, r0
 801044a:	b2bf      	uxth	r7, r7
 801044c:	fb08 580c 	mla	r8, r8, ip, r5
 8010450:	fa1f f888 	uxth.w	r8, r8
 8010454:	1c7d      	adds	r5, r7, #1
 8010456:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 801045a:	f108 0501 	add.w	r5, r8, #1
 801045e:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 8010462:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010466:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801046a:	432f      	orrs	r7, r5
 801046c:	9d04      	ldr	r5, [sp, #16]
 801046e:	f105 0b01 	add.w	fp, r5, #1
 8010472:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 8010476:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801047a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801047e:	ea47 070b 	orr.w	r7, r7, fp
 8010482:	f8a9 7000 	strh.w	r7, [r9]
 8010486:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010488:	4429      	add	r1, r5
 801048a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801048c:	f109 0902 	add.w	r9, r9, #2
 8010490:	442a      	add	r2, r5
 8010492:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010496:	e705      	b.n	80102a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8010498:	b007      	add	sp, #28
 801049a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080104a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80104a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104a4:	b085      	sub	sp, #20
 80104a6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80104aa:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80104ac:	9203      	str	r2, [sp, #12]
 80104ae:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80104b2:	6870      	ldr	r0, [r6, #4]
 80104b4:	9d18      	ldr	r5, [sp, #96]	; 0x60
 80104b6:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 80104ba:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 80104be:	9101      	str	r1, [sp, #4]
 80104c0:	fb00 2404 	mla	r4, r0, r4, r2
 80104c4:	6832      	ldr	r2, [r6, #0]
 80104c6:	686e      	ldr	r6, [r5, #4]
 80104c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80104cc:	682a      	ldr	r2, [r5, #0]
 80104ce:	9202      	str	r2, [sp, #8]
 80104d0:	3604      	adds	r6, #4
 80104d2:	9a01      	ldr	r2, [sp, #4]
 80104d4:	2a00      	cmp	r2, #0
 80104d6:	dc03      	bgt.n	80104e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 80104d8:	9a03      	ldr	r2, [sp, #12]
 80104da:	2a00      	cmp	r2, #0
 80104dc:	f340 80c7 	ble.w	801066e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 80104e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80104e2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80104e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80104e8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80104ec:	2b00      	cmp	r3, #0
 80104ee:	dd0e      	ble.n	801050e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80104f0:	1405      	asrs	r5, r0, #16
 80104f2:	d405      	bmi.n	8010500 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 80104f4:	42bd      	cmp	r5, r7
 80104f6:	da03      	bge.n	8010500 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 80104f8:	1415      	asrs	r5, r2, #16
 80104fa:	d401      	bmi.n	8010500 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 80104fc:	4545      	cmp	r5, r8
 80104fe:	db07      	blt.n	8010510 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8010500:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010502:	4428      	add	r0, r5
 8010504:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010506:	3b01      	subs	r3, #1
 8010508:	442a      	add	r2, r5
 801050a:	3402      	adds	r4, #2
 801050c:	e7ee      	b.n	80104ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 801050e:	d010      	beq.n	8010532 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010510:	9911      	ldr	r1, [sp, #68]	; 0x44
 8010512:	1e5d      	subs	r5, r3, #1
 8010514:	fb01 0c05 	mla	ip, r1, r5, r0
 8010518:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 801051c:	d545      	bpl.n	80105aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 801051e:	469e      	mov	lr, r3
 8010520:	eb04 0b43 	add.w	fp, r4, r3, lsl #1
 8010524:	f1be 0f00 	cmp.w	lr, #0
 8010528:	dc72      	bgt.n	8010610 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 801052a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801052e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010532:	9b01      	ldr	r3, [sp, #4]
 8010534:	2b00      	cmp	r3, #0
 8010536:	f340 809a 	ble.w	801066e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 801053a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801053e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010542:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010546:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010548:	ee31 1a05 	vadd.f32	s2, s2, s10
 801054c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010550:	eeb0 6a62 	vmov.f32	s12, s5
 8010554:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010558:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801055c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010560:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010564:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010568:	eeb0 6a43 	vmov.f32	s12, s6
 801056c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010570:	ee12 2a90 	vmov	r2, s5
 8010574:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010578:	fb92 f3f3 	sdiv	r3, r2, r3
 801057c:	ee13 2a10 	vmov	r2, s6
 8010580:	9311      	str	r3, [sp, #68]	; 0x44
 8010582:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010584:	fb92 f3f3 	sdiv	r3, r2, r3
 8010588:	9312      	str	r3, [sp, #72]	; 0x48
 801058a:	9b01      	ldr	r3, [sp, #4]
 801058c:	9a03      	ldr	r2, [sp, #12]
 801058e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010592:	3b01      	subs	r3, #1
 8010594:	9301      	str	r3, [sp, #4]
 8010596:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801059a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801059c:	eeb0 3a67 	vmov.f32	s6, s15
 80105a0:	bf08      	it	eq
 80105a2:	4613      	moveq	r3, r2
 80105a4:	eef0 2a47 	vmov.f32	s5, s14
 80105a8:	e793      	b.n	80104d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32>
 80105aa:	45bc      	cmp	ip, r7
 80105ac:	dab7      	bge.n	801051e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 80105ae:	9912      	ldr	r1, [sp, #72]	; 0x48
 80105b0:	fb01 2505 	mla	r5, r1, r5, r2
 80105b4:	142d      	asrs	r5, r5, #16
 80105b6:	d4b2      	bmi.n	801051e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 80105b8:	4545      	cmp	r5, r8
 80105ba:	dab0      	bge.n	801051e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 80105bc:	469e      	mov	lr, r3
 80105be:	46a2      	mov	sl, r4
 80105c0:	f1be 0f00 	cmp.w	lr, #0
 80105c4:	ddb1      	ble.n	801052a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 80105c6:	9902      	ldr	r1, [sp, #8]
 80105c8:	1415      	asrs	r5, r2, #16
 80105ca:	fb07 1505 	mla	r5, r7, r5, r1
 80105ce:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80105d2:	4928      	ldr	r1, [pc, #160]	; (8010674 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>)
 80105d4:	f815 c00c 	ldrb.w	ip, [r5, ip]
 80105d8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80105dc:	eb06 0b0c 	add.w	fp, r6, ip
 80105e0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80105e4:	f89b 5001 	ldrb.w	r5, [fp, #1]
 80105e8:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80105ec:	00ed      	lsls	r5, r5, #3
 80105ee:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80105f2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80105f6:	9911      	ldr	r1, [sp, #68]	; 0x44
 80105f8:	ea49 0505 	orr.w	r5, r9, r5
 80105fc:	f816 900c 	ldrb.w	r9, [r6, ip]
 8010600:	4408      	add	r0, r1
 8010602:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010604:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 8010608:	f82a 5b02 	strh.w	r5, [sl], #2
 801060c:	440a      	add	r2, r1
 801060e:	e7d7      	b.n	80105c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x120>
 8010610:	ea5f 4c20 	movs.w	ip, r0, asr #16
 8010614:	d424      	bmi.n	8010660 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8010616:	45bc      	cmp	ip, r7
 8010618:	da22      	bge.n	8010660 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801061a:	1415      	asrs	r5, r2, #16
 801061c:	d420      	bmi.n	8010660 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801061e:	4545      	cmp	r5, r8
 8010620:	da1e      	bge.n	8010660 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8010622:	9902      	ldr	r1, [sp, #8]
 8010624:	fb07 1505 	mla	r5, r7, r5, r1
 8010628:	f06f 0101 	mvn.w	r1, #1
 801062c:	f815 c00c 	ldrb.w	ip, [r5, ip]
 8010630:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8010634:	eb06 050c 	add.w	r5, r6, ip
 8010638:	fb01 f90e 	mul.w	r9, r1, lr
 801063c:	f895 a002 	ldrb.w	sl, [r5, #2]
 8010640:	786d      	ldrb	r5, [r5, #1]
 8010642:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8010646:	00ed      	lsls	r5, r5, #3
 8010648:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 801064c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010650:	ea4a 0505 	orr.w	r5, sl, r5
 8010654:	f816 a00c 	ldrb.w	sl, [r6, ip]
 8010658:	ea45 05da 	orr.w	r5, r5, sl, lsr #3
 801065c:	f82b 5009 	strh.w	r5, [fp, r9]
 8010660:	9911      	ldr	r1, [sp, #68]	; 0x44
 8010662:	4408      	add	r0, r1
 8010664:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010666:	f10e 3eff 	add.w	lr, lr, #4294967295
 801066a:	440a      	add	r2, r1
 801066c:	e75a      	b.n	8010524 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 801066e:	b005      	add	sp, #20
 8010670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010674:	fffff800 	.word	0xfffff800

08010678 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801067c:	b087      	sub	sp, #28
 801067e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010682:	9204      	str	r2, [sp, #16]
 8010684:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010688:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801068a:	9201      	str	r2, [sp, #4]
 801068c:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8010690:	9205      	str	r2, [sp, #20]
 8010692:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010696:	9100      	str	r1, [sp, #0]
 8010698:	6869      	ldr	r1, [r5, #4]
 801069a:	981a      	ldr	r0, [sp, #104]	; 0x68
 801069c:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 80106a0:	fb01 2404 	mla	r4, r1, r4, r2
 80106a4:	682a      	ldr	r2, [r5, #0]
 80106a6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80106aa:	6802      	ldr	r2, [r0, #0]
 80106ac:	9202      	str	r2, [sp, #8]
 80106ae:	6842      	ldr	r2, [r0, #4]
 80106b0:	3204      	adds	r2, #4
 80106b2:	9203      	str	r2, [sp, #12]
 80106b4:	9a00      	ldr	r2, [sp, #0]
 80106b6:	2a00      	cmp	r2, #0
 80106b8:	dc03      	bgt.n	80106c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 80106ba:	9a04      	ldr	r2, [sp, #16]
 80106bc:	2a00      	cmp	r2, #0
 80106be:	f340 812c 	ble.w	801091a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 80106c2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80106c4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80106c8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80106ca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80106ce:	2b00      	cmp	r3, #0
 80106d0:	dd0f      	ble.n	80106f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 80106d2:	1402      	asrs	r2, r0, #16
 80106d4:	d406      	bmi.n	80106e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 80106d6:	4572      	cmp	r2, lr
 80106d8:	da04      	bge.n	80106e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 80106da:	140a      	asrs	r2, r1, #16
 80106dc:	d402      	bmi.n	80106e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 80106de:	9d01      	ldr	r5, [sp, #4]
 80106e0:	42aa      	cmp	r2, r5
 80106e2:	db07      	blt.n	80106f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 80106e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80106e6:	4410      	add	r0, r2
 80106e8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80106ea:	3b01      	subs	r3, #1
 80106ec:	4411      	add	r1, r2
 80106ee:	3402      	adds	r4, #2
 80106f0:	e7ed      	b.n	80106ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56>
 80106f2:	d00f      	beq.n	8010714 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80106f4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80106f6:	1e5a      	subs	r2, r3, #1
 80106f8:	fb05 0502 	mla	r5, r5, r2, r0
 80106fc:	142d      	asrs	r5, r5, #16
 80106fe:	d545      	bpl.n	801078c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 8010700:	4699      	mov	r9, r3
 8010702:	46a0      	mov	r8, r4
 8010704:	f1b9 0f00 	cmp.w	r9, #0
 8010708:	f300 80a7 	bgt.w	801085a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 801070c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010710:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010714:	9b00      	ldr	r3, [sp, #0]
 8010716:	2b00      	cmp	r3, #0
 8010718:	f340 80ff 	ble.w	801091a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 801071c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010720:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010724:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010728:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801072a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801072e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010732:	eeb0 6a62 	vmov.f32	s12, s5
 8010736:	ee61 7a27 	vmul.f32	s15, s2, s15
 801073a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801073e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010742:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010746:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801074a:	eeb0 6a43 	vmov.f32	s12, s6
 801074e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010752:	ee12 2a90 	vmov	r2, s5
 8010756:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801075a:	fb92 f3f3 	sdiv	r3, r2, r3
 801075e:	ee13 2a10 	vmov	r2, s6
 8010762:	9313      	str	r3, [sp, #76]	; 0x4c
 8010764:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010766:	fb92 f3f3 	sdiv	r3, r2, r3
 801076a:	9314      	str	r3, [sp, #80]	; 0x50
 801076c:	9b00      	ldr	r3, [sp, #0]
 801076e:	9a04      	ldr	r2, [sp, #16]
 8010770:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010774:	3b01      	subs	r3, #1
 8010776:	9300      	str	r3, [sp, #0]
 8010778:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801077c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801077e:	eeb0 3a67 	vmov.f32	s6, s15
 8010782:	bf08      	it	eq
 8010784:	4613      	moveq	r3, r2
 8010786:	eef0 2a47 	vmov.f32	s5, s14
 801078a:	e793      	b.n	80106b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3c>
 801078c:	4575      	cmp	r5, lr
 801078e:	dab7      	bge.n	8010700 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 8010790:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010792:	fb05 1202 	mla	r2, r5, r2, r1
 8010796:	1412      	asrs	r2, r2, #16
 8010798:	d4b2      	bmi.n	8010700 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 801079a:	9d01      	ldr	r5, [sp, #4]
 801079c:	42aa      	cmp	r2, r5
 801079e:	daaf      	bge.n	8010700 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 80107a0:	f04f 0800 	mov.w	r8, #0
 80107a4:	eba3 0208 	sub.w	r2, r3, r8
 80107a8:	2a00      	cmp	r2, #0
 80107aa:	ddaf      	ble.n	801070c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 80107ac:	9e02      	ldr	r6, [sp, #8]
 80107ae:	140a      	asrs	r2, r1, #16
 80107b0:	1405      	asrs	r5, r0, #16
 80107b2:	fb0e 6202 	mla	r2, lr, r2, r6
 80107b6:	5d52      	ldrb	r2, [r2, r5]
 80107b8:	9d03      	ldr	r5, [sp, #12]
 80107ba:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80107be:	0e2e      	lsrs	r6, r5, #24
 80107c0:	d044      	beq.n	801084c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 80107c2:	9a05      	ldr	r2, [sp, #20]
 80107c4:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80107c8:	4356      	muls	r6, r2
 80107ca:	1c72      	adds	r2, r6, #1
 80107cc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80107d0:	1212      	asrs	r2, r2, #8
 80107d2:	fa1f f982 	uxth.w	r9, r2
 80107d6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80107da:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80107de:	43d2      	mvns	r2, r2
 80107e0:	b2d2      	uxtb	r2, r2
 80107e2:	fb16 f609 	smulbb	r6, r6, r9
 80107e6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80107ea:	fb07 6702 	mla	r7, r7, r2, r6
 80107ee:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80107f2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80107f6:	b2ed      	uxtb	r5, r5
 80107f8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80107fc:	fa5f fc8c 	uxtb.w	ip, ip
 8010800:	fb15 f509 	smulbb	r5, r5, r9
 8010804:	fb0c 5502 	mla	r5, ip, r2, r5
 8010808:	b2bf      	uxth	r7, r7
 801080a:	fb1a fa09 	smulbb	sl, sl, r9
 801080e:	b2ad      	uxth	r5, r5
 8010810:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010814:	fb06 a602 	mla	r6, r6, r2, sl
 8010818:	1c7a      	adds	r2, r7, #1
 801081a:	f105 0a01 	add.w	sl, r5, #1
 801081e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010822:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010826:	b2b6      	uxth	r6, r6
 8010828:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801082c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010830:	ea47 070a 	orr.w	r7, r7, sl
 8010834:	f106 0a01 	add.w	sl, r6, #1
 8010838:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801083c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010840:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010844:	ea47 070a 	orr.w	r7, r7, sl
 8010848:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801084c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801084e:	4410      	add	r0, r2
 8010850:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010852:	f108 0801 	add.w	r8, r8, #1
 8010856:	4411      	add	r1, r2
 8010858:	e7a4      	b.n	80107a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 801085a:	1405      	asrs	r5, r0, #16
 801085c:	d454      	bmi.n	8010908 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 801085e:	4575      	cmp	r5, lr
 8010860:	da52      	bge.n	8010908 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010862:	140a      	asrs	r2, r1, #16
 8010864:	d450      	bmi.n	8010908 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010866:	9e01      	ldr	r6, [sp, #4]
 8010868:	42b2      	cmp	r2, r6
 801086a:	da4d      	bge.n	8010908 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 801086c:	9e02      	ldr	r6, [sp, #8]
 801086e:	fb0e 6202 	mla	r2, lr, r2, r6
 8010872:	5d52      	ldrb	r2, [r2, r5]
 8010874:	9d03      	ldr	r5, [sp, #12]
 8010876:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801087a:	0e2e      	lsrs	r6, r5, #24
 801087c:	d044      	beq.n	8010908 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 801087e:	9a05      	ldr	r2, [sp, #20]
 8010880:	f8b8 c000 	ldrh.w	ip, [r8]
 8010884:	4356      	muls	r6, r2
 8010886:	1c72      	adds	r2, r6, #1
 8010888:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801088c:	1212      	asrs	r2, r2, #8
 801088e:	fa1f fa82 	uxth.w	sl, r2
 8010892:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010896:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801089a:	43d2      	mvns	r2, r2
 801089c:	b2d2      	uxtb	r2, r2
 801089e:	fb16 f60a 	smulbb	r6, r6, sl
 80108a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80108a6:	fb07 6702 	mla	r7, r7, r2, r6
 80108aa:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 80108ae:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80108b2:	b2ed      	uxtb	r5, r5
 80108b4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80108b8:	fa5f fc8c 	uxtb.w	ip, ip
 80108bc:	fb15 f50a 	smulbb	r5, r5, sl
 80108c0:	fb0c 5502 	mla	r5, ip, r2, r5
 80108c4:	b2bf      	uxth	r7, r7
 80108c6:	fb1b fb0a 	smulbb	fp, fp, sl
 80108ca:	b2ad      	uxth	r5, r5
 80108cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80108d0:	fb06 b602 	mla	r6, r6, r2, fp
 80108d4:	1c7a      	adds	r2, r7, #1
 80108d6:	f105 0b01 	add.w	fp, r5, #1
 80108da:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80108de:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 80108e2:	b2b6      	uxth	r6, r6
 80108e4:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80108e8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80108ec:	ea47 070b 	orr.w	r7, r7, fp
 80108f0:	f106 0b01 	add.w	fp, r6, #1
 80108f4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80108f8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80108fc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010900:	ea47 070b 	orr.w	r7, r7, fp
 8010904:	f8a8 7000 	strh.w	r7, [r8]
 8010908:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801090a:	4410      	add	r0, r2
 801090c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801090e:	f108 0802 	add.w	r8, r8, #2
 8010912:	4411      	add	r1, r2
 8010914:	f109 39ff 	add.w	r9, r9, #4294967295
 8010918:	e6f4      	b.n	8010704 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 801091a:	b007      	add	sp, #28
 801091c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010920 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010920:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010924:	b087      	sub	sp, #28
 8010926:	468b      	mov	fp, r1
 8010928:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801092a:	9205      	str	r2, [sp, #20]
 801092c:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010930:	9201      	str	r2, [sp, #4]
 8010932:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010936:	6869      	ldr	r1, [r5, #4]
 8010938:	981a      	ldr	r0, [sp, #104]	; 0x68
 801093a:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 801093e:	fb01 2404 	mla	r4, r1, r4, r2
 8010942:	682a      	ldr	r2, [r5, #0]
 8010944:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010948:	6802      	ldr	r2, [r0, #0]
 801094a:	9203      	str	r2, [sp, #12]
 801094c:	6842      	ldr	r2, [r0, #4]
 801094e:	3204      	adds	r2, #4
 8010950:	9204      	str	r2, [sp, #16]
 8010952:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010956:	f1bb 0f00 	cmp.w	fp, #0
 801095a:	dc03      	bgt.n	8010964 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 801095c:	9a05      	ldr	r2, [sp, #20]
 801095e:	2a00      	cmp	r2, #0
 8010960:	f340 814a 	ble.w	8010bf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 8010964:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010966:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801096a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801096c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010970:	2b00      	cmp	r3, #0
 8010972:	dd0f      	ble.n	8010994 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8010974:	1408      	asrs	r0, r1, #16
 8010976:	d406      	bmi.n	8010986 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010978:	4540      	cmp	r0, r8
 801097a:	da04      	bge.n	8010986 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 801097c:	1410      	asrs	r0, r2, #16
 801097e:	d402      	bmi.n	8010986 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010980:	9d01      	ldr	r5, [sp, #4]
 8010982:	42a8      	cmp	r0, r5
 8010984:	db07      	blt.n	8010996 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8010986:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010988:	4401      	add	r1, r0
 801098a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801098c:	3b01      	subs	r3, #1
 801098e:	4402      	add	r2, r0
 8010990:	3402      	adds	r4, #2
 8010992:	e7ed      	b.n	8010970 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8010994:	d018      	beq.n	80109c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa8>
 8010996:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010998:	1e58      	subs	r0, r3, #1
 801099a:	fb05 1500 	mla	r5, r5, r0, r1
 801099e:	142d      	asrs	r5, r5, #16
 80109a0:	d40a      	bmi.n	80109b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80109a2:	4545      	cmp	r5, r8
 80109a4:	da08      	bge.n	80109b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80109a6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80109a8:	fb05 2000 	mla	r0, r5, r0, r2
 80109ac:	1400      	asrs	r0, r0, #16
 80109ae:	d403      	bmi.n	80109b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80109b0:	9d01      	ldr	r5, [sp, #4]
 80109b2:	42a8      	cmp	r0, r5
 80109b4:	f2c0 80b7 	blt.w	8010b26 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x206>
 80109b8:	2600      	movs	r6, #0
 80109ba:	1998      	adds	r0, r3, r6
 80109bc:	2800      	cmp	r0, #0
 80109be:	dc3e      	bgt.n	8010a3e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11e>
 80109c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80109c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80109c8:	f1bb 0f00 	cmp.w	fp, #0
 80109cc:	f340 8114 	ble.w	8010bf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 80109d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80109d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80109d8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80109dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80109de:	f1bb 0b01 	subs.w	fp, fp, #1
 80109e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80109e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80109ea:	eeb0 6a62 	vmov.f32	s12, s5
 80109ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80109f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80109f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80109fa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80109fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010a02:	eeb0 6a43 	vmov.f32	s12, s6
 8010a06:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010a0a:	ee12 2a90 	vmov	r2, s5
 8010a0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010a12:	fb92 f3f3 	sdiv	r3, r2, r3
 8010a16:	ee13 2a10 	vmov	r2, s6
 8010a1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010a1e:	9313      	str	r3, [sp, #76]	; 0x4c
 8010a20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010a22:	fb92 f3f3 	sdiv	r3, r2, r3
 8010a26:	9a05      	ldr	r2, [sp, #20]
 8010a28:	9314      	str	r3, [sp, #80]	; 0x50
 8010a2a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010a2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010a30:	eeb0 3a67 	vmov.f32	s6, s15
 8010a34:	bf08      	it	eq
 8010a36:	4613      	moveq	r3, r2
 8010a38:	eef0 2a47 	vmov.f32	s5, s14
 8010a3c:	e78b      	b.n	8010956 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 8010a3e:	140d      	asrs	r5, r1, #16
 8010a40:	d459      	bmi.n	8010af6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010a42:	4545      	cmp	r5, r8
 8010a44:	da57      	bge.n	8010af6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010a46:	1410      	asrs	r0, r2, #16
 8010a48:	d455      	bmi.n	8010af6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010a4a:	9f01      	ldr	r7, [sp, #4]
 8010a4c:	42b8      	cmp	r0, r7
 8010a4e:	da52      	bge.n	8010af6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010a50:	9f03      	ldr	r7, [sp, #12]
 8010a52:	fb08 7000 	mla	r0, r8, r0, r7
 8010a56:	5d40      	ldrb	r0, [r0, r5]
 8010a58:	9d04      	ldr	r5, [sp, #16]
 8010a5a:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010a5e:	0e07      	lsrs	r7, r0, #24
 8010a60:	2fff      	cmp	r7, #255	; 0xff
 8010a62:	d04e      	beq.n	8010b02 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8010a64:	b2fd      	uxtb	r5, r7
 8010a66:	2f00      	cmp	r7, #0
 8010a68:	d045      	beq.n	8010af6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010a6a:	f06f 0701 	mvn.w	r7, #1
 8010a6e:	4377      	muls	r7, r6
 8010a70:	fa1f f985 	uxth.w	r9, r5
 8010a74:	f834 e007 	ldrh.w	lr, [r4, r7]
 8010a78:	9702      	str	r7, [sp, #8]
 8010a7a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010a7e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8010a82:	43ed      	mvns	r5, r5
 8010a84:	b2ed      	uxtb	r5, r5
 8010a86:	fb17 f709 	smulbb	r7, r7, r9
 8010a8a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010a8e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8010a92:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010a96:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8010a9a:	b2c0      	uxtb	r0, r0
 8010a9c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010aa0:	fa5f fe8e 	uxtb.w	lr, lr
 8010aa4:	fb10 f009 	smulbb	r0, r0, r9
 8010aa8:	fb0e 0005 	mla	r0, lr, r5, r0
 8010aac:	b280      	uxth	r0, r0
 8010aae:	fa1f fc8c 	uxth.w	ip, ip
 8010ab2:	fb1a fa09 	smulbb	sl, sl, r9
 8010ab6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010aba:	fb07 a705 	mla	r7, r7, r5, sl
 8010abe:	f100 0a01 	add.w	sl, r0, #1
 8010ac2:	f10c 0501 	add.w	r5, ip, #1
 8010ac6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010aca:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010ace:	b2bf      	uxth	r7, r7
 8010ad0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010ad4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010ad8:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010adc:	f107 0a01 	add.w	sl, r7, #1
 8010ae0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010ae4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010ae8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010aec:	9802      	ldr	r0, [sp, #8]
 8010aee:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010af2:	f824 c000 	strh.w	ip, [r4, r0]
 8010af6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010af8:	4401      	add	r1, r0
 8010afa:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010afc:	3e01      	subs	r6, #1
 8010afe:	4402      	add	r2, r0
 8010b00:	e75b      	b.n	80109ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8010b02:	f06f 0501 	mvn.w	r5, #1
 8010b06:	fb05 f706 	mul.w	r7, r5, r6
 8010b0a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010b0e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010b12:	0945      	lsrs	r5, r0, #5
 8010b14:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010b18:	ea4c 0505 	orr.w	r5, ip, r5
 8010b1c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010b20:	4305      	orrs	r5, r0
 8010b22:	53e5      	strh	r5, [r4, r7]
 8010b24:	e7e7      	b.n	8010af6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010b26:	f04f 0e00 	mov.w	lr, #0
 8010b2a:	eba3 000e 	sub.w	r0, r3, lr
 8010b2e:	2800      	cmp	r0, #0
 8010b30:	f77f af46 	ble.w	80109c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 8010b34:	9e03      	ldr	r6, [sp, #12]
 8010b36:	1410      	asrs	r0, r2, #16
 8010b38:	140d      	asrs	r5, r1, #16
 8010b3a:	fb08 6000 	mla	r0, r8, r0, r6
 8010b3e:	5d40      	ldrb	r0, [r0, r5]
 8010b40:	9d04      	ldr	r5, [sp, #16]
 8010b42:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010b46:	0e06      	lsrs	r6, r0, #24
 8010b48:	2eff      	cmp	r6, #255	; 0xff
 8010b4a:	d048      	beq.n	8010bde <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8010b4c:	b2f5      	uxtb	r5, r6
 8010b4e:	2e00      	cmp	r6, #0
 8010b50:	d03e      	beq.n	8010bd0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8010b52:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8010b56:	fa1f f985 	uxth.w	r9, r5
 8010b5a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010b5e:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8010b62:	43ed      	mvns	r5, r5
 8010b64:	b2ed      	uxtb	r5, r5
 8010b66:	fb16 f609 	smulbb	r6, r6, r9
 8010b6a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010b6e:	fb07 6705 	mla	r7, r7, r5, r6
 8010b72:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010b76:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010b7a:	b2c0      	uxtb	r0, r0
 8010b7c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010b80:	fa5f fc8c 	uxtb.w	ip, ip
 8010b84:	fb10 f009 	smulbb	r0, r0, r9
 8010b88:	fb0c 0005 	mla	r0, ip, r5, r0
 8010b8c:	b2bf      	uxth	r7, r7
 8010b8e:	fb1a fa09 	smulbb	sl, sl, r9
 8010b92:	b280      	uxth	r0, r0
 8010b94:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010b98:	fb06 a605 	mla	r6, r6, r5, sl
 8010b9c:	1c7d      	adds	r5, r7, #1
 8010b9e:	f100 0a01 	add.w	sl, r0, #1
 8010ba2:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010ba6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010baa:	b2b6      	uxth	r6, r6
 8010bac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010bb0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010bb4:	ea47 070a 	orr.w	r7, r7, sl
 8010bb8:	f106 0a01 	add.w	sl, r6, #1
 8010bbc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010bc0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010bc4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010bc8:	ea47 070a 	orr.w	r7, r7, sl
 8010bcc:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8010bd0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010bd2:	4401      	add	r1, r0
 8010bd4:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010bd6:	f10e 0e01 	add.w	lr, lr, #1
 8010bda:	4402      	add	r2, r0
 8010bdc:	e7a5      	b.n	8010b2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20a>
 8010bde:	4d08      	ldr	r5, [pc, #32]	; (8010c00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e0>)
 8010be0:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 8010be4:	0945      	lsrs	r5, r0, #5
 8010be6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010bea:	4335      	orrs	r5, r6
 8010bec:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010bf0:	4305      	orrs	r5, r0
 8010bf2:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 8010bf6:	e7eb      	b.n	8010bd0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8010bf8:	b007      	add	sp, #28
 8010bfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010bfe:	bf00      	nop
 8010c00:	fffff800 	.word	0xfffff800

08010c04 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c08:	b087      	sub	sp, #28
 8010c0a:	468b      	mov	fp, r1
 8010c0c:	9204      	str	r2, [sp, #16]
 8010c0e:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010c12:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8010c14:	9201      	str	r2, [sp, #4]
 8010c16:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8010c1a:	9205      	str	r2, [sp, #20]
 8010c1c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010c20:	6869      	ldr	r1, [r5, #4]
 8010c22:	981a      	ldr	r0, [sp, #104]	; 0x68
 8010c24:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8010c28:	fb01 2404 	mla	r4, r1, r4, r2
 8010c2c:	682a      	ldr	r2, [r5, #0]
 8010c2e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010c32:	6802      	ldr	r2, [r0, #0]
 8010c34:	9202      	str	r2, [sp, #8]
 8010c36:	6842      	ldr	r2, [r0, #4]
 8010c38:	9203      	str	r2, [sp, #12]
 8010c3a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010c3e:	f1bb 0f00 	cmp.w	fp, #0
 8010c42:	dc03      	bgt.n	8010c4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 8010c44:	9a04      	ldr	r2, [sp, #16]
 8010c46:	2a00      	cmp	r2, #0
 8010c48:	f340 8136 	ble.w	8010eb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8010c4c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010c4e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010c52:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010c54:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010c58:	2b00      	cmp	r3, #0
 8010c5a:	dd0f      	ble.n	8010c7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010c5c:	1408      	asrs	r0, r1, #16
 8010c5e:	d406      	bmi.n	8010c6e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010c60:	4540      	cmp	r0, r8
 8010c62:	da04      	bge.n	8010c6e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010c64:	1410      	asrs	r0, r2, #16
 8010c66:	d402      	bmi.n	8010c6e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010c68:	9d01      	ldr	r5, [sp, #4]
 8010c6a:	42a8      	cmp	r0, r5
 8010c6c:	db07      	blt.n	8010c7e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 8010c6e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010c70:	4401      	add	r1, r0
 8010c72:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010c74:	3b01      	subs	r3, #1
 8010c76:	4402      	add	r2, r0
 8010c78:	3402      	adds	r4, #2
 8010c7a:	e7ed      	b.n	8010c58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8010c7c:	d00f      	beq.n	8010c9e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8010c7e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010c80:	1e58      	subs	r0, r3, #1
 8010c82:	fb05 1500 	mla	r5, r5, r0, r1
 8010c86:	142d      	asrs	r5, r5, #16
 8010c88:	d544      	bpl.n	8010d14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8010c8a:	9300      	str	r3, [sp, #0]
 8010c8c:	46a2      	mov	sl, r4
 8010c8e:	9800      	ldr	r0, [sp, #0]
 8010c90:	2800      	cmp	r0, #0
 8010c92:	f300 80ab 	bgt.w	8010dec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8010c96:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010c9a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010c9e:	f1bb 0f00 	cmp.w	fp, #0
 8010ca2:	f340 8109 	ble.w	8010eb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8010ca6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010caa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010cae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010cb2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010cb4:	f1bb 0b01 	subs.w	fp, fp, #1
 8010cb8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010cbc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010cc0:	eeb0 6a62 	vmov.f32	s12, s5
 8010cc4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010cc8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010ccc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010cd0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010cd4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010cd8:	eeb0 6a43 	vmov.f32	s12, s6
 8010cdc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010ce0:	ee12 2a90 	vmov	r2, s5
 8010ce4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010ce8:	fb92 f3f3 	sdiv	r3, r2, r3
 8010cec:	ee13 2a10 	vmov	r2, s6
 8010cf0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010cf4:	9313      	str	r3, [sp, #76]	; 0x4c
 8010cf6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010cf8:	fb92 f3f3 	sdiv	r3, r2, r3
 8010cfc:	9a04      	ldr	r2, [sp, #16]
 8010cfe:	9314      	str	r3, [sp, #80]	; 0x50
 8010d00:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010d04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010d06:	eeb0 3a67 	vmov.f32	s6, s15
 8010d0a:	bf08      	it	eq
 8010d0c:	4613      	moveq	r3, r2
 8010d0e:	eef0 2a47 	vmov.f32	s5, s14
 8010d12:	e794      	b.n	8010c3e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8010d14:	4545      	cmp	r5, r8
 8010d16:	dab8      	bge.n	8010c8a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 8010d18:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010d1a:	fb05 2000 	mla	r0, r5, r0, r2
 8010d1e:	1400      	asrs	r0, r0, #16
 8010d20:	d4b3      	bmi.n	8010c8a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 8010d22:	9d01      	ldr	r5, [sp, #4]
 8010d24:	42a8      	cmp	r0, r5
 8010d26:	dab0      	bge.n	8010c8a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 8010d28:	f04f 0900 	mov.w	r9, #0
 8010d2c:	eba3 0009 	sub.w	r0, r3, r9
 8010d30:	2800      	cmp	r0, #0
 8010d32:	ddb0      	ble.n	8010c96 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010d34:	140d      	asrs	r5, r1, #16
 8010d36:	1410      	asrs	r0, r2, #16
 8010d38:	fb08 5000 	mla	r0, r8, r0, r5
 8010d3c:	9d03      	ldr	r5, [sp, #12]
 8010d3e:	5c2e      	ldrb	r6, [r5, r0]
 8010d40:	2e00      	cmp	r6, #0
 8010d42:	d04c      	beq.n	8010dde <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1da>
 8010d44:	9d02      	ldr	r5, [sp, #8]
 8010d46:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 8010d4a:	9805      	ldr	r0, [sp, #20]
 8010d4c:	f834 5019 	ldrh.w	r5, [r4, r9, lsl #1]
 8010d50:	4346      	muls	r6, r0
 8010d52:	1c70      	adds	r0, r6, #1
 8010d54:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 8010d58:	1200      	asrs	r0, r0, #8
 8010d5a:	b287      	uxth	r7, r0
 8010d5c:	122e      	asrs	r6, r5, #8
 8010d5e:	43c0      	mvns	r0, r0
 8010d60:	b2c0      	uxtb	r0, r0
 8010d62:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010d66:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010d6a:	fb16 f600 	smulbb	r6, r6, r0
 8010d6e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010d72:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010d76:	00ed      	lsls	r5, r5, #3
 8010d78:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010d7c:	b2ed      	uxtb	r5, r5
 8010d7e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010d82:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010d86:	fb15 f500 	smulbb	r5, r5, r0
 8010d8a:	fa5f fe8e 	uxtb.w	lr, lr
 8010d8e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010d92:	fb0e 5507 	mla	r5, lr, r7, r5
 8010d96:	fb1a fa00 	smulbb	sl, sl, r0
 8010d9a:	fa1f fc8c 	uxth.w	ip, ip
 8010d9e:	b2ad      	uxth	r5, r5
 8010da0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010da4:	fb06 a607 	mla	r6, r6, r7, sl
 8010da8:	f10c 0001 	add.w	r0, ip, #1
 8010dac:	f105 0a01 	add.w	sl, r5, #1
 8010db0:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8010db4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010db8:	b2b6      	uxth	r6, r6
 8010dba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010dbe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010dc2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010dc6:	f106 0a01 	add.w	sl, r6, #1
 8010dca:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010dce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010dd2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010dd6:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010dda:	f824 c019 	strh.w	ip, [r4, r9, lsl #1]
 8010dde:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010de0:	4401      	add	r1, r0
 8010de2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010de4:	f109 0901 	add.w	r9, r9, #1
 8010de8:	4402      	add	r2, r0
 8010dea:	e79f      	b.n	8010d2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x128>
 8010dec:	1408      	asrs	r0, r1, #16
 8010dee:	d459      	bmi.n	8010ea4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010df0:	4540      	cmp	r0, r8
 8010df2:	da57      	bge.n	8010ea4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010df4:	1415      	asrs	r5, r2, #16
 8010df6:	d455      	bmi.n	8010ea4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010df8:	9e01      	ldr	r6, [sp, #4]
 8010dfa:	42b5      	cmp	r5, r6
 8010dfc:	da52      	bge.n	8010ea4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010dfe:	fb08 0005 	mla	r0, r8, r5, r0
 8010e02:	9d03      	ldr	r5, [sp, #12]
 8010e04:	5c2e      	ldrb	r6, [r5, r0]
 8010e06:	2e00      	cmp	r6, #0
 8010e08:	d04c      	beq.n	8010ea4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010e0a:	9d02      	ldr	r5, [sp, #8]
 8010e0c:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 8010e10:	9805      	ldr	r0, [sp, #20]
 8010e12:	f8ba 5000 	ldrh.w	r5, [sl]
 8010e16:	4346      	muls	r6, r0
 8010e18:	1c70      	adds	r0, r6, #1
 8010e1a:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 8010e1e:	1200      	asrs	r0, r0, #8
 8010e20:	b287      	uxth	r7, r0
 8010e22:	122e      	asrs	r6, r5, #8
 8010e24:	43c0      	mvns	r0, r0
 8010e26:	b2c0      	uxtb	r0, r0
 8010e28:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010e2c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010e30:	fb16 f600 	smulbb	r6, r6, r0
 8010e34:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8010e38:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010e3c:	00ed      	lsls	r5, r5, #3
 8010e3e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010e42:	b2ed      	uxtb	r5, r5
 8010e44:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010e48:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010e4c:	fb15 f500 	smulbb	r5, r5, r0
 8010e50:	fa5f fe8e 	uxtb.w	lr, lr
 8010e54:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010e58:	fb0e 5507 	mla	r5, lr, r7, r5
 8010e5c:	fb19 f900 	smulbb	r9, r9, r0
 8010e60:	fa1f fc8c 	uxth.w	ip, ip
 8010e64:	b2ad      	uxth	r5, r5
 8010e66:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010e6a:	fb06 9607 	mla	r6, r6, r7, r9
 8010e6e:	f10c 0001 	add.w	r0, ip, #1
 8010e72:	f105 0901 	add.w	r9, r5, #1
 8010e76:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8010e7a:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 8010e7e:	b2b6      	uxth	r6, r6
 8010e80:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8010e84:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010e88:	ea4c 0c09 	orr.w	ip, ip, r9
 8010e8c:	f106 0901 	add.w	r9, r6, #1
 8010e90:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 8010e94:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8010e98:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8010e9c:	ea4c 0c09 	orr.w	ip, ip, r9
 8010ea0:	f8aa c000 	strh.w	ip, [sl]
 8010ea4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010ea6:	4401      	add	r1, r0
 8010ea8:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010eaa:	4402      	add	r2, r0
 8010eac:	9800      	ldr	r0, [sp, #0]
 8010eae:	3801      	subs	r0, #1
 8010eb0:	f10a 0a02 	add.w	sl, sl, #2
 8010eb4:	9000      	str	r0, [sp, #0]
 8010eb6:	e6ea      	b.n	8010c8e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010eb8:	b007      	add	sp, #28
 8010eba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010ebe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010ebe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ec2:	b087      	sub	sp, #28
 8010ec4:	468b      	mov	fp, r1
 8010ec6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8010ec8:	9205      	str	r2, [sp, #20]
 8010eca:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010ece:	9202      	str	r2, [sp, #8]
 8010ed0:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010ed4:	6869      	ldr	r1, [r5, #4]
 8010ed6:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8010ed8:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 8010edc:	fb01 2000 	mla	r0, r1, r0, r2
 8010ee0:	682a      	ldr	r2, [r5, #0]
 8010ee2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010ee6:	6822      	ldr	r2, [r4, #0]
 8010ee8:	9201      	str	r2, [sp, #4]
 8010eea:	6862      	ldr	r2, [r4, #4]
 8010eec:	9204      	str	r2, [sp, #16]
 8010eee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010ef2:	f1bb 0f00 	cmp.w	fp, #0
 8010ef6:	dc03      	bgt.n	8010f00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 8010ef8:	9a05      	ldr	r2, [sp, #20]
 8010efa:	2a00      	cmp	r2, #0
 8010efc:	f340 813d 	ble.w	801117a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8010f00:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010f02:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010f06:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010f08:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010f0c:	2b00      	cmp	r3, #0
 8010f0e:	dd0f      	ble.n	8010f30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8010f10:	140c      	asrs	r4, r1, #16
 8010f12:	d406      	bmi.n	8010f22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8010f14:	454c      	cmp	r4, r9
 8010f16:	da04      	bge.n	8010f22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8010f18:	1414      	asrs	r4, r2, #16
 8010f1a:	d402      	bmi.n	8010f22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8010f1c:	9d02      	ldr	r5, [sp, #8]
 8010f1e:	42ac      	cmp	r4, r5
 8010f20:	db07      	blt.n	8010f32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8010f22:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010f24:	4421      	add	r1, r4
 8010f26:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010f28:	3b01      	subs	r3, #1
 8010f2a:	4422      	add	r2, r4
 8010f2c:	3002      	adds	r0, #2
 8010f2e:	e7ed      	b.n	8010f0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e>
 8010f30:	d018      	beq.n	8010f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa6>
 8010f32:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010f34:	1e5c      	subs	r4, r3, #1
 8010f36:	fb05 1504 	mla	r5, r5, r4, r1
 8010f3a:	142d      	asrs	r5, r5, #16
 8010f3c:	d40a      	bmi.n	8010f54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010f3e:	454d      	cmp	r5, r9
 8010f40:	da08      	bge.n	8010f54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010f42:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010f44:	fb05 2404 	mla	r4, r5, r4, r2
 8010f48:	1424      	asrs	r4, r4, #16
 8010f4a:	d403      	bmi.n	8010f54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010f4c:	9d02      	ldr	r5, [sp, #8]
 8010f4e:	42ac      	cmp	r4, r5
 8010f50:	f2c0 80ae 	blt.w	80110b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f2>
 8010f54:	2600      	movs	r6, #0
 8010f56:	199c      	adds	r4, r3, r6
 8010f58:	2c00      	cmp	r4, #0
 8010f5a:	dc3e      	bgt.n	8010fda <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 8010f5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010f60:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010f64:	f1bb 0f00 	cmp.w	fp, #0
 8010f68:	f340 8107 	ble.w	801117a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8010f6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010f70:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010f74:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010f78:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010f7a:	f1bb 0b01 	subs.w	fp, fp, #1
 8010f7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010f82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010f86:	eeb0 6a62 	vmov.f32	s12, s5
 8010f8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010f8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010f92:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010f96:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010f9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010f9e:	eeb0 6a43 	vmov.f32	s12, s6
 8010fa2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010fa6:	ee12 2a90 	vmov	r2, s5
 8010faa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010fae:	fb92 f3f3 	sdiv	r3, r2, r3
 8010fb2:	ee13 2a10 	vmov	r2, s6
 8010fb6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010fba:	9313      	str	r3, [sp, #76]	; 0x4c
 8010fbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010fbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8010fc2:	9a05      	ldr	r2, [sp, #20]
 8010fc4:	9314      	str	r3, [sp, #80]	; 0x50
 8010fc6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010fca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010fcc:	eeb0 3a67 	vmov.f32	s6, s15
 8010fd0:	bf08      	it	eq
 8010fd2:	4613      	moveq	r3, r2
 8010fd4:	eef0 2a47 	vmov.f32	s5, s14
 8010fd8:	e78b      	b.n	8010ef2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34>
 8010fda:	140c      	asrs	r4, r1, #16
 8010fdc:	d45a      	bmi.n	8011094 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010fde:	454c      	cmp	r4, r9
 8010fe0:	da58      	bge.n	8011094 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010fe2:	1415      	asrs	r5, r2, #16
 8010fe4:	d456      	bmi.n	8011094 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010fe6:	9f02      	ldr	r7, [sp, #8]
 8010fe8:	42bd      	cmp	r5, r7
 8010fea:	da53      	bge.n	8011094 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010fec:	fb09 4505 	mla	r5, r9, r5, r4
 8010ff0:	9c04      	ldr	r4, [sp, #16]
 8010ff2:	5d64      	ldrb	r4, [r4, r5]
 8010ff4:	2cff      	cmp	r4, #255	; 0xff
 8010ff6:	d053      	beq.n	80110a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8010ff8:	2c00      	cmp	r4, #0
 8010ffa:	d04b      	beq.n	8011094 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010ffc:	9f01      	ldr	r7, [sp, #4]
 8010ffe:	f837 8015 	ldrh.w	r8, [r7, r5, lsl #1]
 8011002:	f06f 0501 	mvn.w	r5, #1
 8011006:	4375      	muls	r5, r6
 8011008:	9503      	str	r5, [sp, #12]
 801100a:	5b45      	ldrh	r5, [r0, r5]
 801100c:	fa1f fc84 	uxth.w	ip, r4
 8011010:	122f      	asrs	r7, r5, #8
 8011012:	43e4      	mvns	r4, r4
 8011014:	b2e4      	uxtb	r4, r4
 8011016:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801101a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801101e:	fb17 f704 	smulbb	r7, r7, r4
 8011022:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011026:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801102a:	00ed      	lsls	r5, r5, #3
 801102c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8011030:	b2ed      	uxtb	r5, r5
 8011032:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8011036:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801103a:	fb15 f504 	smulbb	r5, r5, r4
 801103e:	fa5f f888 	uxtb.w	r8, r8
 8011042:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011046:	fb08 550c 	mla	r5, r8, ip, r5
 801104a:	fb1a fa04 	smulbb	sl, sl, r4
 801104e:	fa1f fe8e 	uxth.w	lr, lr
 8011052:	b2ad      	uxth	r5, r5
 8011054:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011058:	fb07 a70c 	mla	r7, r7, ip, sl
 801105c:	f10e 0401 	add.w	r4, lr, #1
 8011060:	f105 0a01 	add.w	sl, r5, #1
 8011064:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8011068:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801106c:	b2bf      	uxth	r7, r7
 801106e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011072:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011076:	ea4e 0e0a 	orr.w	lr, lr, sl
 801107a:	f107 0a01 	add.w	sl, r7, #1
 801107e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011082:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011086:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801108a:	9c03      	ldr	r4, [sp, #12]
 801108c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8011090:	f820 e004 	strh.w	lr, [r0, r4]
 8011094:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011096:	4421      	add	r1, r4
 8011098:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801109a:	3e01      	subs	r6, #1
 801109c:	4422      	add	r2, r4
 801109e:	e75a      	b.n	8010f56 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80110a0:	9c01      	ldr	r4, [sp, #4]
 80110a2:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80110a6:	f06f 0401 	mvn.w	r4, #1
 80110aa:	4374      	muls	r4, r6
 80110ac:	5305      	strh	r5, [r0, r4]
 80110ae:	e7f1      	b.n	8011094 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80110b0:	f04f 0800 	mov.w	r8, #0
 80110b4:	eba3 0408 	sub.w	r4, r3, r8
 80110b8:	2c00      	cmp	r4, #0
 80110ba:	f77f af4f 	ble.w	8010f5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80110be:	140c      	asrs	r4, r1, #16
 80110c0:	1415      	asrs	r5, r2, #16
 80110c2:	fb09 4505 	mla	r5, r9, r5, r4
 80110c6:	9c04      	ldr	r4, [sp, #16]
 80110c8:	5d64      	ldrb	r4, [r4, r5]
 80110ca:	2cff      	cmp	r4, #255	; 0xff
 80110cc:	d04f      	beq.n	801116e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80110ce:	2c00      	cmp	r4, #0
 80110d0:	d046      	beq.n	8011160 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 80110d2:	9e01      	ldr	r6, [sp, #4]
 80110d4:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80110d8:	f830 5018 	ldrh.w	r5, [r0, r8, lsl #1]
 80110dc:	b2a7      	uxth	r7, r4
 80110de:	122e      	asrs	r6, r5, #8
 80110e0:	43e4      	mvns	r4, r4
 80110e2:	b2e4      	uxtb	r4, r4
 80110e4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80110e8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80110ec:	fb16 f604 	smulbb	r6, r6, r4
 80110f0:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80110f4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80110f8:	00ed      	lsls	r5, r5, #3
 80110fa:	fb0c 6c07 	mla	ip, ip, r7, r6
 80110fe:	b2ed      	uxtb	r5, r5
 8011100:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011104:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011108:	fb15 f504 	smulbb	r5, r5, r4
 801110c:	fa5f fe8e 	uxtb.w	lr, lr
 8011110:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011114:	fb0e 5507 	mla	r5, lr, r7, r5
 8011118:	fb1a fa04 	smulbb	sl, sl, r4
 801111c:	fa1f fc8c 	uxth.w	ip, ip
 8011120:	b2ad      	uxth	r5, r5
 8011122:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011126:	fb06 a607 	mla	r6, r6, r7, sl
 801112a:	f10c 0401 	add.w	r4, ip, #1
 801112e:	f105 0a01 	add.w	sl, r5, #1
 8011132:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011136:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801113a:	b2b6      	uxth	r6, r6
 801113c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011140:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011144:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011148:	f106 0a01 	add.w	sl, r6, #1
 801114c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011150:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011154:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011158:	ea4c 0c0a 	orr.w	ip, ip, sl
 801115c:	f820 c018 	strh.w	ip, [r0, r8, lsl #1]
 8011160:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011162:	4421      	add	r1, r4
 8011164:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011166:	f108 0801 	add.w	r8, r8, #1
 801116a:	4422      	add	r2, r4
 801116c:	e7a2      	b.n	80110b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801116e:	9c01      	ldr	r4, [sp, #4]
 8011170:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8011174:	f820 4018 	strh.w	r4, [r0, r8, lsl #1]
 8011178:	e7f2      	b.n	8011160 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 801117a:	b007      	add	sp, #28
 801117c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011180 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011184:	b085      	sub	sp, #20
 8011186:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011188:	9203      	str	r2, [sp, #12]
 801118a:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801118e:	9201      	str	r2, [sp, #4]
 8011190:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011194:	9100      	str	r1, [sp, #0]
 8011196:	6841      	ldr	r1, [r0, #4]
 8011198:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 801119c:	f9bd 8058 	ldrsh.w	r8, [sp, #88]	; 0x58
 80111a0:	fb01 2404 	mla	r4, r1, r4, r2
 80111a4:	6802      	ldr	r2, [r0, #0]
 80111a6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80111aa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80111ac:	fa1f fe85 	uxth.w	lr, r5
 80111b0:	6812      	ldr	r2, [r2, #0]
 80111b2:	9202      	str	r2, [sp, #8]
 80111b4:	43ed      	mvns	r5, r5
 80111b6:	b2ed      	uxtb	r5, r5
 80111b8:	9a00      	ldr	r2, [sp, #0]
 80111ba:	2a00      	cmp	r2, #0
 80111bc:	dc03      	bgt.n	80111c6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 80111be:	9a03      	ldr	r2, [sp, #12]
 80111c0:	2a00      	cmp	r2, #0
 80111c2:	f340 8117 	ble.w	80113f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 80111c6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80111c8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80111cc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80111ce:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80111d2:	2b00      	cmp	r3, #0
 80111d4:	dd0f      	ble.n	80111f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 80111d6:	1408      	asrs	r0, r1, #16
 80111d8:	d406      	bmi.n	80111e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80111da:	4540      	cmp	r0, r8
 80111dc:	da04      	bge.n	80111e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80111de:	1410      	asrs	r0, r2, #16
 80111e0:	d402      	bmi.n	80111e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80111e2:	9e01      	ldr	r6, [sp, #4]
 80111e4:	42b0      	cmp	r0, r6
 80111e6:	db07      	blt.n	80111f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80111e8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80111ea:	4401      	add	r1, r0
 80111ec:	9812      	ldr	r0, [sp, #72]	; 0x48
 80111ee:	3b01      	subs	r3, #1
 80111f0:	4402      	add	r2, r0
 80111f2:	3402      	adds	r4, #2
 80111f4:	e7ed      	b.n	80111d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52>
 80111f6:	d069      	beq.n	80112cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x14c>
 80111f8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80111fa:	1e58      	subs	r0, r3, #1
 80111fc:	fb06 1600 	mla	r6, r6, r0, r1
 8011200:	1436      	asrs	r6, r6, #16
 8011202:	d459      	bmi.n	80112b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8011204:	4546      	cmp	r6, r8
 8011206:	da57      	bge.n	80112b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8011208:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801120a:	fb06 2000 	mla	r0, r6, r0, r2
 801120e:	1400      	asrs	r0, r0, #16
 8011210:	d452      	bmi.n	80112b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8011212:	9e01      	ldr	r6, [sp, #4]
 8011214:	42b0      	cmp	r0, r6
 8011216:	da4f      	bge.n	80112b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8011218:	469a      	mov	sl, r3
 801121a:	46a3      	mov	fp, r4
 801121c:	f1ba 0f00 	cmp.w	sl, #0
 8011220:	dd50      	ble.n	80112c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x144>
 8011222:	140e      	asrs	r6, r1, #16
 8011224:	1410      	asrs	r0, r2, #16
 8011226:	fb08 6000 	mla	r0, r8, r0, r6
 801122a:	9e02      	ldr	r6, [sp, #8]
 801122c:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8011230:	f8bb 6000 	ldrh.w	r6, [fp]
 8011234:	1237      	asrs	r7, r6, #8
 8011236:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801123a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801123e:	fb17 f705 	smulbb	r7, r7, r5
 8011242:	ea4f 09e6 	mov.w	r9, r6, asr #3
 8011246:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801124a:	00f6      	lsls	r6, r6, #3
 801124c:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8011250:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011254:	10c7      	asrs	r7, r0, #3
 8011256:	b2f6      	uxtb	r6, r6
 8011258:	00c0      	lsls	r0, r0, #3
 801125a:	fb19 f905 	smulbb	r9, r9, r5
 801125e:	fb16 f605 	smulbb	r6, r6, r5
 8011262:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011266:	b2c0      	uxtb	r0, r0
 8011268:	fa1f fc8c 	uxth.w	ip, ip
 801126c:	fb07 970e 	mla	r7, r7, lr, r9
 8011270:	fb00 600e 	mla	r0, r0, lr, r6
 8011274:	b280      	uxth	r0, r0
 8011276:	b2bf      	uxth	r7, r7
 8011278:	f10c 0601 	add.w	r6, ip, #1
 801127c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8011280:	f107 0901 	add.w	r9, r7, #1
 8011284:	1c46      	adds	r6, r0, #1
 8011286:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801128a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801128e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011290:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011294:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011298:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801129c:	ea4c 0c06 	orr.w	ip, ip, r6
 80112a0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80112a4:	4401      	add	r1, r0
 80112a6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80112a8:	ea4c 0c09 	orr.w	ip, ip, r9
 80112ac:	f82b cb02 	strh.w	ip, [fp], #2
 80112b0:	4402      	add	r2, r0
 80112b2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80112b6:	e7b1      	b.n	801121c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80112b8:	f04f 0900 	mov.w	r9, #0
 80112bc:	eb03 0009 	add.w	r0, r3, r9
 80112c0:	2800      	cmp	r0, #0
 80112c2:	dc41      	bgt.n	8011348 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c8>
 80112c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80112c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80112cc:	9b00      	ldr	r3, [sp, #0]
 80112ce:	2b00      	cmp	r3, #0
 80112d0:	f340 8090 	ble.w	80113f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 80112d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80112d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80112dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80112e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80112e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80112e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80112ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80112ee:	eef0 6a62 	vmov.f32	s13, s5
 80112f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80112f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80112fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80112fe:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8011302:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011306:	eef0 6a43 	vmov.f32	s13, s6
 801130a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801130e:	ee12 2a90 	vmov	r2, s5
 8011312:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011316:	fb92 f3f3 	sdiv	r3, r2, r3
 801131a:	ee13 2a10 	vmov	r2, s6
 801131e:	9311      	str	r3, [sp, #68]	; 0x44
 8011320:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011322:	fb92 f3f3 	sdiv	r3, r2, r3
 8011326:	9312      	str	r3, [sp, #72]	; 0x48
 8011328:	9b00      	ldr	r3, [sp, #0]
 801132a:	9a03      	ldr	r2, [sp, #12]
 801132c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011330:	3b01      	subs	r3, #1
 8011332:	9300      	str	r3, [sp, #0]
 8011334:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8011338:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801133a:	eeb0 3a67 	vmov.f32	s6, s15
 801133e:	bf08      	it	eq
 8011340:	4613      	moveq	r3, r2
 8011342:	eef0 2a47 	vmov.f32	s5, s14
 8011346:	e737      	b.n	80111b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 8011348:	140e      	asrs	r6, r1, #16
 801134a:	d44c      	bmi.n	80113e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 801134c:	4546      	cmp	r6, r8
 801134e:	da4a      	bge.n	80113e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8011350:	1410      	asrs	r0, r2, #16
 8011352:	d448      	bmi.n	80113e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8011354:	9f01      	ldr	r7, [sp, #4]
 8011356:	42b8      	cmp	r0, r7
 8011358:	da45      	bge.n	80113e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 801135a:	fb08 6000 	mla	r0, r8, r0, r6
 801135e:	9e02      	ldr	r6, [sp, #8]
 8011360:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8011364:	f06f 0601 	mvn.w	r6, #1
 8011368:	fb06 fb09 	mul.w	fp, r6, r9
 801136c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011370:	f834 600b 	ldrh.w	r6, [r4, fp]
 8011374:	1237      	asrs	r7, r6, #8
 8011376:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801137a:	fb17 f705 	smulbb	r7, r7, r5
 801137e:	ea4f 0ae6 	mov.w	sl, r6, asr #3
 8011382:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011386:	00f6      	lsls	r6, r6, #3
 8011388:	fb0c 7c0e 	mla	ip, ip, lr, r7
 801138c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011390:	10c7      	asrs	r7, r0, #3
 8011392:	b2f6      	uxtb	r6, r6
 8011394:	00c0      	lsls	r0, r0, #3
 8011396:	fb1a fa05 	smulbb	sl, sl, r5
 801139a:	fb16 f605 	smulbb	r6, r6, r5
 801139e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80113a2:	b2c0      	uxtb	r0, r0
 80113a4:	fa1f fc8c 	uxth.w	ip, ip
 80113a8:	fb07 a70e 	mla	r7, r7, lr, sl
 80113ac:	fb00 600e 	mla	r0, r0, lr, r6
 80113b0:	b2bf      	uxth	r7, r7
 80113b2:	b280      	uxth	r0, r0
 80113b4:	f10c 0601 	add.w	r6, ip, #1
 80113b8:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 80113bc:	f107 0a01 	add.w	sl, r7, #1
 80113c0:	1c46      	adds	r6, r0, #1
 80113c2:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80113c6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80113ca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80113ce:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80113d2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80113d6:	ea4c 0c06 	orr.w	ip, ip, r6
 80113da:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80113de:	ea4c 0c0a 	orr.w	ip, ip, sl
 80113e2:	f824 c00b 	strh.w	ip, [r4, fp]
 80113e6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80113e8:	4401      	add	r1, r0
 80113ea:	9812      	ldr	r0, [sp, #72]	; 0x48
 80113ec:	f109 39ff 	add.w	r9, r9, #4294967295
 80113f0:	4402      	add	r2, r0
 80113f2:	e763      	b.n	80112bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x13c>
 80113f4:	b005      	add	sp, #20
 80113f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080113fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80113fa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113fe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011400:	9201      	str	r2, [sp, #4]
 8011402:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 8011406:	6844      	ldr	r4, [r0, #4]
 8011408:	6800      	ldr	r0, [r0, #0]
 801140a:	f9bd c050 	ldrsh.w	ip, [sp, #80]	; 0x50
 801140e:	f9bd e054 	ldrsh.w	lr, [sp, #84]	; 0x54
 8011412:	fb04 2505 	mla	r5, r4, r5, r2
 8011416:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801141a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801141c:	e9dd 760f 	ldrd	r7, r6, [sp, #60]	; 0x3c
 8011420:	6802      	ldr	r2, [r0, #0]
 8011422:	9200      	str	r2, [sp, #0]
 8011424:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011428:	2900      	cmp	r1, #0
 801142a:	dc03      	bgt.n	8011434 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 801142c:	9a01      	ldr	r2, [sp, #4]
 801142e:	2a00      	cmp	r2, #0
 8011430:	f340 8095 	ble.w	801155e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 8011434:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8011436:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 801143a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801143c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011440:	2b00      	cmp	r3, #0
 8011442:	dd0e      	ble.n	8011462 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8011444:	ea5f 4824 	movs.w	r8, r4, asr #16
 8011448:	d406      	bmi.n	8011458 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 801144a:	45e0      	cmp	r8, ip
 801144c:	da04      	bge.n	8011458 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 801144e:	ea5f 4820 	movs.w	r8, r0, asr #16
 8011452:	d401      	bmi.n	8011458 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8011454:	45f0      	cmp	r8, lr
 8011456:	db05      	blt.n	8011464 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011458:	443c      	add	r4, r7
 801145a:	4430      	add	r0, r6
 801145c:	3b01      	subs	r3, #1
 801145e:	3502      	adds	r5, #2
 8011460:	e7ee      	b.n	8011440 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 8011462:	d010      	beq.n	8011486 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8011464:	f103 38ff 	add.w	r8, r3, #4294967295
 8011468:	fb07 4908 	mla	r9, r7, r8, r4
 801146c:	ea5f 4929 	movs.w	r9, r9, asr #16
 8011470:	d53d      	bpl.n	80114ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8011472:	4698      	mov	r8, r3
 8011474:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 8011478:	f1b8 0f00 	cmp.w	r8, #0
 801147c:	dc55      	bgt.n	801152a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x130>
 801147e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011482:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011486:	2900      	cmp	r1, #0
 8011488:	dd69      	ble.n	801155e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 801148a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801148e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011492:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011496:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011498:	3901      	subs	r1, #1
 801149a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801149e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80114a2:	eeb0 6a62 	vmov.f32	s12, s5
 80114a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80114aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80114ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 80114b2:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 80114b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80114ba:	eeb0 6a43 	vmov.f32	s12, s6
 80114be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80114c2:	ee12 2a90 	vmov	r2, s5
 80114c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80114ca:	fb92 f7f3 	sdiv	r7, r2, r3
 80114ce:	ee13 2a10 	vmov	r2, s6
 80114d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80114d6:	fb92 f6f3 	sdiv	r6, r2, r3
 80114da:	9a01      	ldr	r2, [sp, #4]
 80114dc:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 80114e0:	bf08      	it	eq
 80114e2:	4613      	moveq	r3, r2
 80114e4:	eeb0 3a67 	vmov.f32	s6, s15
 80114e8:	eef0 2a47 	vmov.f32	s5, s14
 80114ec:	e79c      	b.n	8011428 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e>
 80114ee:	45e1      	cmp	r9, ip
 80114f0:	dabf      	bge.n	8011472 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80114f2:	fb06 0808 	mla	r8, r6, r8, r0
 80114f6:	ea5f 4828 	movs.w	r8, r8, asr #16
 80114fa:	d4ba      	bmi.n	8011472 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80114fc:	45f0      	cmp	r8, lr
 80114fe:	dab8      	bge.n	8011472 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011500:	4698      	mov	r8, r3
 8011502:	46aa      	mov	sl, r5
 8011504:	f1b8 0f00 	cmp.w	r8, #0
 8011508:	ddb9      	ble.n	801147e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 801150a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801150e:	ea4f 4b24 	mov.w	fp, r4, asr #16
 8011512:	fb0c b909 	mla	r9, ip, r9, fp
 8011516:	9a00      	ldr	r2, [sp, #0]
 8011518:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 801151c:	f82a 9b02 	strh.w	r9, [sl], #2
 8011520:	443c      	add	r4, r7
 8011522:	4430      	add	r0, r6
 8011524:	f108 38ff 	add.w	r8, r8, #4294967295
 8011528:	e7ec      	b.n	8011504 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 801152a:	ea5f 4a24 	movs.w	sl, r4, asr #16
 801152e:	d411      	bmi.n	8011554 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8011530:	45e2      	cmp	sl, ip
 8011532:	da0f      	bge.n	8011554 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8011534:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011538:	d40c      	bmi.n	8011554 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 801153a:	45f1      	cmp	r9, lr
 801153c:	da0a      	bge.n	8011554 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 801153e:	fb0c a909 	mla	r9, ip, r9, sl
 8011542:	9a00      	ldr	r2, [sp, #0]
 8011544:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 8011548:	f06f 0201 	mvn.w	r2, #1
 801154c:	fb02 f908 	mul.w	r9, r2, r8
 8011550:	f82b a009 	strh.w	sl, [fp, r9]
 8011554:	443c      	add	r4, r7
 8011556:	4430      	add	r0, r6
 8011558:	f108 38ff 	add.w	r8, r8, #4294967295
 801155c:	e78c      	b.n	8011478 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 801155e:	b003      	add	sp, #12
 8011560:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011564 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011564:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011568:	b087      	sub	sp, #28
 801156a:	468b      	mov	fp, r1
 801156c:	9204      	str	r2, [sp, #16]
 801156e:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8011572:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011574:	9201      	str	r2, [sp, #4]
 8011576:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 801157a:	9205      	str	r2, [sp, #20]
 801157c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011580:	6841      	ldr	r1, [r0, #4]
 8011582:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8011586:	fb01 2404 	mla	r4, r1, r4, r2
 801158a:	6802      	ldr	r2, [r0, #0]
 801158c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011590:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8011592:	6812      	ldr	r2, [r2, #0]
 8011594:	9203      	str	r2, [sp, #12]
 8011596:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801159a:	f1bb 0f00 	cmp.w	fp, #0
 801159e:	dc03      	bgt.n	80115a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 80115a0:	9a04      	ldr	r2, [sp, #16]
 80115a2:	2a00      	cmp	r2, #0
 80115a4:	f340 812c 	ble.w	8011800 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 80115a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80115aa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80115ae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80115b0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80115b4:	2b00      	cmp	r3, #0
 80115b6:	dd0f      	ble.n	80115d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80115b8:	1402      	asrs	r2, r0, #16
 80115ba:	d406      	bmi.n	80115ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 80115bc:	4542      	cmp	r2, r8
 80115be:	da04      	bge.n	80115ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 80115c0:	140a      	asrs	r2, r1, #16
 80115c2:	d402      	bmi.n	80115ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 80115c4:	9d01      	ldr	r5, [sp, #4]
 80115c6:	42aa      	cmp	r2, r5
 80115c8:	db07      	blt.n	80115da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 80115ca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80115cc:	4410      	add	r0, r2
 80115ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80115d0:	3b01      	subs	r3, #1
 80115d2:	4411      	add	r1, r2
 80115d4:	3402      	adds	r4, #2
 80115d6:	e7ed      	b.n	80115b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 80115d8:	d01a      	beq.n	8011610 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 80115da:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80115dc:	1e5a      	subs	r2, r3, #1
 80115de:	fb05 0502 	mla	r5, r5, r2, r0
 80115e2:	142d      	asrs	r5, r5, #16
 80115e4:	d40a      	bmi.n	80115fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80115e6:	4545      	cmp	r5, r8
 80115e8:	da08      	bge.n	80115fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80115ea:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80115ec:	fb05 1202 	mla	r2, r5, r2, r1
 80115f0:	1412      	asrs	r2, r2, #16
 80115f2:	d403      	bmi.n	80115fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80115f4:	9d01      	ldr	r5, [sp, #4]
 80115f6:	42aa      	cmp	r2, r5
 80115f8:	f2c0 80a6 	blt.w	8011748 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 80115fc:	f04f 0c00 	mov.w	ip, #0
 8011600:	eb03 020c 	add.w	r2, r3, ip
 8011604:	2a00      	cmp	r2, #0
 8011606:	dc3e      	bgt.n	8011686 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x122>
 8011608:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801160c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011610:	f1bb 0f00 	cmp.w	fp, #0
 8011614:	f340 80f4 	ble.w	8011800 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 8011618:	ee30 0a04 	vadd.f32	s0, s0, s8
 801161c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011620:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011624:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011626:	f1bb 0b01 	subs.w	fp, fp, #1
 801162a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801162e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011632:	eeb0 6a62 	vmov.f32	s12, s5
 8011636:	ee61 7a27 	vmul.f32	s15, s2, s15
 801163a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801163e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011642:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011646:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801164a:	eeb0 6a43 	vmov.f32	s12, s6
 801164e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011652:	ee12 2a90 	vmov	r2, s5
 8011656:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801165a:	fb92 f3f3 	sdiv	r3, r2, r3
 801165e:	ee13 2a10 	vmov	r2, s6
 8011662:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011666:	9313      	str	r3, [sp, #76]	; 0x4c
 8011668:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801166a:	fb92 f3f3 	sdiv	r3, r2, r3
 801166e:	9a04      	ldr	r2, [sp, #16]
 8011670:	9314      	str	r3, [sp, #80]	; 0x50
 8011672:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011676:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011678:	eeb0 3a67 	vmov.f32	s6, s15
 801167c:	bf08      	it	eq
 801167e:	4613      	moveq	r3, r2
 8011680:	eef0 2a47 	vmov.f32	s5, s14
 8011684:	e789      	b.n	801159a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 8011686:	1405      	asrs	r5, r0, #16
 8011688:	d457      	bmi.n	801173a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801168a:	4545      	cmp	r5, r8
 801168c:	da55      	bge.n	801173a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801168e:	140a      	asrs	r2, r1, #16
 8011690:	d453      	bmi.n	801173a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011692:	9e01      	ldr	r6, [sp, #4]
 8011694:	42b2      	cmp	r2, r6
 8011696:	da50      	bge.n	801173a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011698:	fb08 5202 	mla	r2, r8, r2, r5
 801169c:	9d03      	ldr	r5, [sp, #12]
 801169e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80116a2:	0e2e      	lsrs	r6, r5, #24
 80116a4:	d049      	beq.n	801173a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80116a6:	f06f 0201 	mvn.w	r2, #1
 80116aa:	fb02 f20c 	mul.w	r2, r2, ip
 80116ae:	9202      	str	r2, [sp, #8]
 80116b0:	f834 e002 	ldrh.w	lr, [r4, r2]
 80116b4:	9a05      	ldr	r2, [sp, #20]
 80116b6:	4356      	muls	r6, r2
 80116b8:	1c72      	adds	r2, r6, #1
 80116ba:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80116be:	1212      	asrs	r2, r2, #8
 80116c0:	fa1f f982 	uxth.w	r9, r2
 80116c4:	ea4f 272e 	mov.w	r7, lr, asr #8
 80116c8:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80116cc:	43d2      	mvns	r2, r2
 80116ce:	b2d2      	uxtb	r2, r2
 80116d0:	fb16 f609 	smulbb	r6, r6, r9
 80116d4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80116d8:	fb07 6702 	mla	r7, r7, r2, r6
 80116dc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80116e0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80116e4:	b2ed      	uxtb	r5, r5
 80116e6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80116ea:	fa5f fe8e 	uxtb.w	lr, lr
 80116ee:	fb15 f509 	smulbb	r5, r5, r9
 80116f2:	fb0e 5502 	mla	r5, lr, r2, r5
 80116f6:	b2bf      	uxth	r7, r7
 80116f8:	fb1a fa09 	smulbb	sl, sl, r9
 80116fc:	b2ad      	uxth	r5, r5
 80116fe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011702:	fb06 a602 	mla	r6, r6, r2, sl
 8011706:	1c7a      	adds	r2, r7, #1
 8011708:	f105 0a01 	add.w	sl, r5, #1
 801170c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011710:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011714:	b2b6      	uxth	r6, r6
 8011716:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801171a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801171e:	ea47 070a 	orr.w	r7, r7, sl
 8011722:	f106 0a01 	add.w	sl, r6, #1
 8011726:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801172a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801172e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011732:	9a02      	ldr	r2, [sp, #8]
 8011734:	ea47 070a 	orr.w	r7, r7, sl
 8011738:	52a7      	strh	r7, [r4, r2]
 801173a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801173c:	4410      	add	r0, r2
 801173e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011740:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011744:	4411      	add	r1, r2
 8011746:	e75b      	b.n	8011600 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8011748:	f04f 0e00 	mov.w	lr, #0
 801174c:	eba3 020e 	sub.w	r2, r3, lr
 8011750:	2a00      	cmp	r2, #0
 8011752:	f77f af59 	ble.w	8011608 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8011756:	1405      	asrs	r5, r0, #16
 8011758:	140a      	asrs	r2, r1, #16
 801175a:	fb08 5202 	mla	r2, r8, r2, r5
 801175e:	9d03      	ldr	r5, [sp, #12]
 8011760:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011764:	0e2e      	lsrs	r6, r5, #24
 8011766:	d044      	beq.n	80117f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28e>
 8011768:	9a05      	ldr	r2, [sp, #20]
 801176a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801176e:	4356      	muls	r6, r2
 8011770:	1c72      	adds	r2, r6, #1
 8011772:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011776:	1212      	asrs	r2, r2, #8
 8011778:	fa1f f982 	uxth.w	r9, r2
 801177c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011780:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011784:	43d2      	mvns	r2, r2
 8011786:	b2d2      	uxtb	r2, r2
 8011788:	fb16 f609 	smulbb	r6, r6, r9
 801178c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011790:	fb07 6702 	mla	r7, r7, r2, r6
 8011794:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011798:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801179c:	b2ed      	uxtb	r5, r5
 801179e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80117a2:	fa5f fc8c 	uxtb.w	ip, ip
 80117a6:	fb15 f509 	smulbb	r5, r5, r9
 80117aa:	fb0c 5502 	mla	r5, ip, r2, r5
 80117ae:	b2bf      	uxth	r7, r7
 80117b0:	fb1a fa09 	smulbb	sl, sl, r9
 80117b4:	b2ad      	uxth	r5, r5
 80117b6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80117ba:	fb06 a602 	mla	r6, r6, r2, sl
 80117be:	1c7a      	adds	r2, r7, #1
 80117c0:	f105 0a01 	add.w	sl, r5, #1
 80117c4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80117c8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80117cc:	b2b6      	uxth	r6, r6
 80117ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80117d2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80117d6:	ea47 070a 	orr.w	r7, r7, sl
 80117da:	f106 0a01 	add.w	sl, r6, #1
 80117de:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80117e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80117e6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80117ea:	ea47 070a 	orr.w	r7, r7, sl
 80117ee:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80117f2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80117f4:	4410      	add	r0, r2
 80117f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80117f8:	f10e 0e01 	add.w	lr, lr, #1
 80117fc:	4411      	add	r1, r2
 80117fe:	e7a5      	b.n	801174c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8011800:	b007      	add	sp, #28
 8011802:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08011808 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801180c:	b087      	sub	sp, #28
 801180e:	468b      	mov	fp, r1
 8011810:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8011812:	9205      	str	r2, [sp, #20]
 8011814:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8011818:	9201      	str	r2, [sp, #4]
 801181a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801181e:	6861      	ldr	r1, [r4, #4]
 8011820:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 8011824:	fb01 2000 	mla	r0, r1, r0, r2
 8011828:	6822      	ldr	r2, [r4, #0]
 801182a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801182e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8011830:	6812      	ldr	r2, [r2, #0]
 8011832:	9203      	str	r2, [sp, #12]
 8011834:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011838:	f1bb 0f00 	cmp.w	fp, #0
 801183c:	dc03      	bgt.n	8011846 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 801183e:	9a05      	ldr	r2, [sp, #20]
 8011840:	2a00      	cmp	r2, #0
 8011842:	f340 814b 	ble.w	8011adc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 8011846:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011848:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801184c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801184e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011852:	2b00      	cmp	r3, #0
 8011854:	dd0f      	ble.n	8011876 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8011856:	140c      	asrs	r4, r1, #16
 8011858:	d406      	bmi.n	8011868 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801185a:	454c      	cmp	r4, r9
 801185c:	da04      	bge.n	8011868 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801185e:	1414      	asrs	r4, r2, #16
 8011860:	d402      	bmi.n	8011868 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8011862:	9d01      	ldr	r5, [sp, #4]
 8011864:	42ac      	cmp	r4, r5
 8011866:	db07      	blt.n	8011878 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8011868:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801186a:	4421      	add	r1, r4
 801186c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801186e:	3b01      	subs	r3, #1
 8011870:	4422      	add	r2, r4
 8011872:	3002      	adds	r0, #2
 8011874:	e7ed      	b.n	8011852 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 8011876:	d018      	beq.n	80118aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa2>
 8011878:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801187a:	1e5c      	subs	r4, r3, #1
 801187c:	fb05 1504 	mla	r5, r5, r4, r1
 8011880:	142d      	asrs	r5, r5, #16
 8011882:	d40a      	bmi.n	801189a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8011884:	454d      	cmp	r5, r9
 8011886:	da08      	bge.n	801189a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8011888:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801188a:	fb05 2404 	mla	r4, r5, r4, r2
 801188e:	1424      	asrs	r4, r4, #16
 8011890:	d403      	bmi.n	801189a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8011892:	9d01      	ldr	r5, [sp, #4]
 8011894:	42ac      	cmp	r4, r5
 8011896:	f2c0 80bb 	blt.w	8011a10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x208>
 801189a:	2700      	movs	r7, #0
 801189c:	19dc      	adds	r4, r3, r7
 801189e:	2c00      	cmp	r4, #0
 80118a0:	dc3e      	bgt.n	8011920 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x118>
 80118a2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80118a6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80118aa:	f1bb 0f00 	cmp.w	fp, #0
 80118ae:	f340 8115 	ble.w	8011adc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 80118b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80118b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80118ba:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80118be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80118c0:	f1bb 0b01 	subs.w	fp, fp, #1
 80118c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80118c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80118cc:	eeb0 6a62 	vmov.f32	s12, s5
 80118d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80118d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80118d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80118dc:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80118e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80118e4:	eeb0 6a43 	vmov.f32	s12, s6
 80118e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80118ec:	ee12 2a90 	vmov	r2, s5
 80118f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80118f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80118f8:	ee13 2a10 	vmov	r2, s6
 80118fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011900:	9313      	str	r3, [sp, #76]	; 0x4c
 8011902:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011904:	fb92 f3f3 	sdiv	r3, r2, r3
 8011908:	9a05      	ldr	r2, [sp, #20]
 801190a:	9314      	str	r3, [sp, #80]	; 0x50
 801190c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011910:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011912:	eeb0 3a67 	vmov.f32	s6, s15
 8011916:	bf08      	it	eq
 8011918:	4613      	moveq	r3, r2
 801191a:	eef0 2a47 	vmov.f32	s5, s14
 801191e:	e78b      	b.n	8011838 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30>
 8011920:	140d      	asrs	r5, r1, #16
 8011922:	d45c      	bmi.n	80119de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011924:	454d      	cmp	r5, r9
 8011926:	da5a      	bge.n	80119de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011928:	1414      	asrs	r4, r2, #16
 801192a:	d458      	bmi.n	80119de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801192c:	9e01      	ldr	r6, [sp, #4]
 801192e:	42b4      	cmp	r4, r6
 8011930:	da55      	bge.n	80119de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011932:	fb09 5404 	mla	r4, r9, r4, r5
 8011936:	9d03      	ldr	r5, [sp, #12]
 8011938:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 801193c:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 8011940:	d04d      	beq.n	80119de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011942:	0a26      	lsrs	r6, r4, #8
 8011944:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8011948:	fa5f f58e 	uxtb.w	r5, lr
 801194c:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8011950:	9604      	str	r6, [sp, #16]
 8011952:	d04a      	beq.n	80119ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8011954:	f06f 0601 	mvn.w	r6, #1
 8011958:	437e      	muls	r6, r7
 801195a:	fa1f fa85 	uxth.w	sl, r5
 801195e:	f830 8006 	ldrh.w	r8, [r0, r6]
 8011962:	9602      	str	r6, [sp, #8]
 8011964:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011968:	43ed      	mvns	r5, r5
 801196a:	fa5f fc8c 	uxtb.w	ip, ip
 801196e:	b2ed      	uxtb	r5, r5
 8011970:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011974:	fb1c fc0a 	smulbb	ip, ip, sl
 8011978:	fb0e cc05 	mla	ip, lr, r5, ip
 801197c:	b2e4      	uxtb	r4, r4
 801197e:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 8011982:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011986:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801198a:	fa5f f888 	uxtb.w	r8, r8
 801198e:	fb14 f40a 	smulbb	r4, r4, sl
 8011992:	fb08 4405 	mla	r4, r8, r5, r4
 8011996:	b2a4      	uxth	r4, r4
 8011998:	fa1f fc8c 	uxth.w	ip, ip
 801199c:	fb16 f60a 	smulbb	r6, r6, sl
 80119a0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80119a4:	fb0e 6e05 	mla	lr, lr, r5, r6
 80119a8:	1c66      	adds	r6, r4, #1
 80119aa:	f10c 0501 	add.w	r5, ip, #1
 80119ae:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80119b2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80119b6:	fa1f fe8e 	uxth.w	lr, lr
 80119ba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80119be:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80119c2:	ea4c 0c06 	orr.w	ip, ip, r6
 80119c6:	f10e 0601 	add.w	r6, lr, #1
 80119ca:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 80119ce:	0976      	lsrs	r6, r6, #5
 80119d0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80119d4:	9c02      	ldr	r4, [sp, #8]
 80119d6:	ea4c 0c06 	orr.w	ip, ip, r6
 80119da:	f820 c004 	strh.w	ip, [r0, r4]
 80119de:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80119e0:	4421      	add	r1, r4
 80119e2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80119e4:	3f01      	subs	r7, #1
 80119e6:	4422      	add	r2, r4
 80119e8:	e758      	b.n	801189c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 80119ea:	4e3e      	ldr	r6, [pc, #248]	; (8011ae4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 80119ec:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80119f0:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 80119f4:	ea4c 0c04 	orr.w	ip, ip, r4
 80119f8:	9c04      	ldr	r4, [sp, #16]
 80119fa:	f06f 0501 	mvn.w	r5, #1
 80119fe:	00e6      	lsls	r6, r4, #3
 8011a00:	437d      	muls	r5, r7
 8011a02:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8011a06:	ea4c 0c04 	orr.w	ip, ip, r4
 8011a0a:	f820 c005 	strh.w	ip, [r0, r5]
 8011a0e:	e7e6      	b.n	80119de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011a10:	f04f 0800 	mov.w	r8, #0
 8011a14:	eba3 0408 	sub.w	r4, r3, r8
 8011a18:	2c00      	cmp	r4, #0
 8011a1a:	f77f af42 	ble.w	80118a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8011a1e:	140d      	asrs	r5, r1, #16
 8011a20:	1414      	asrs	r4, r2, #16
 8011a22:	fb09 5404 	mla	r4, r9, r4, r5
 8011a26:	9d03      	ldr	r5, [sp, #12]
 8011a28:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8011a2c:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8011a30:	d042      	beq.n	8011ab8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8011a32:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8011a36:	fa5f f58c 	uxtb.w	r5, ip
 8011a3a:	ea4f 4714 	mov.w	r7, r4, lsr #16
 8011a3e:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8011a42:	d040      	beq.n	8011ac6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8011a44:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 8011a48:	fa1f fa85 	uxth.w	sl, r5
 8011a4c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011a50:	43ed      	mvns	r5, r5
 8011a52:	b2ff      	uxtb	r7, r7
 8011a54:	b2ed      	uxtb	r5, r5
 8011a56:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011a5a:	fb17 f70a 	smulbb	r7, r7, sl
 8011a5e:	fb0c 7705 	mla	r7, ip, r5, r7
 8011a62:	b2e4      	uxtb	r4, r4
 8011a64:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8011a68:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011a6c:	fa5f fe8e 	uxtb.w	lr, lr
 8011a70:	fb14 f40a 	smulbb	r4, r4, sl
 8011a74:	fb0e 4405 	mla	r4, lr, r5, r4
 8011a78:	b2f6      	uxtb	r6, r6
 8011a7a:	b2bf      	uxth	r7, r7
 8011a7c:	fb16 f60a 	smulbb	r6, r6, sl
 8011a80:	b2a4      	uxth	r4, r4
 8011a82:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011a86:	fb0c 6c05 	mla	ip, ip, r5, r6
 8011a8a:	1c7d      	adds	r5, r7, #1
 8011a8c:	1c66      	adds	r6, r4, #1
 8011a8e:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8011a92:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011a96:	fa1f fc8c 	uxth.w	ip, ip
 8011a9a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011a9e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011aa2:	4337      	orrs	r7, r6
 8011aa4:	f10c 0601 	add.w	r6, ip, #1
 8011aa8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011aac:	0976      	lsrs	r6, r6, #5
 8011aae:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011ab2:	4337      	orrs	r7, r6
 8011ab4:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 8011ab8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011aba:	4421      	add	r1, r4
 8011abc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011abe:	f108 0801 	add.w	r8, r8, #1
 8011ac2:	4422      	add	r2, r4
 8011ac4:	e7a6      	b.n	8011a14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20c>
 8011ac6:	4d07      	ldr	r5, [pc, #28]	; (8011ae4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011ac8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011acc:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 8011ad0:	00f6      	lsls	r6, r6, #3
 8011ad2:	4327      	orrs	r7, r4
 8011ad4:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8011ad8:	4327      	orrs	r7, r4
 8011ada:	e7eb      	b.n	8011ab4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ac>
 8011adc:	b007      	add	sp, #28
 8011ade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ae2:	bf00      	nop
 8011ae4:	fffff800 	.word	0xfffff800

08011ae8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011ae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011aec:	b089      	sub	sp, #36	; 0x24
 8011aee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011af2:	9206      	str	r2, [sp, #24]
 8011af4:	f9bd 2068 	ldrsh.w	r2, [sp, #104]	; 0x68
 8011af8:	9202      	str	r2, [sp, #8]
 8011afa:	f9bd 206c 	ldrsh.w	r2, [sp, #108]	; 0x6c
 8011afe:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8011b00:	9203      	str	r2, [sp, #12]
 8011b02:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 8011b06:	9207      	str	r2, [sp, #28]
 8011b08:	e9dd 2518 	ldrd	r2, r5, [sp, #96]	; 0x60
 8011b0c:	6860      	ldr	r0, [r4, #4]
 8011b0e:	9101      	str	r1, [sp, #4]
 8011b10:	fb00 2505 	mla	r5, r0, r5, r2
 8011b14:	6822      	ldr	r2, [r4, #0]
 8011b16:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8011b1a:	9a02      	ldr	r2, [sp, #8]
 8011b1c:	3201      	adds	r2, #1
 8011b1e:	f022 0201 	bic.w	r2, r2, #1
 8011b22:	9204      	str	r2, [sp, #16]
 8011b24:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8011b26:	6812      	ldr	r2, [r2, #0]
 8011b28:	9205      	str	r2, [sp, #20]
 8011b2a:	9a01      	ldr	r2, [sp, #4]
 8011b2c:	2a00      	cmp	r2, #0
 8011b2e:	dc03      	bgt.n	8011b38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8011b30:	9a06      	ldr	r2, [sp, #24]
 8011b32:	2a00      	cmp	r2, #0
 8011b34:	f340 8153 	ble.w	8011dde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8011b38:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011b3a:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8011b3e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011b40:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011b44:	2b00      	cmp	r3, #0
 8011b46:	dd10      	ble.n	8011b6a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 8011b48:	1422      	asrs	r2, r4, #16
 8011b4a:	d407      	bmi.n	8011b5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8011b4c:	9e02      	ldr	r6, [sp, #8]
 8011b4e:	4296      	cmp	r6, r2
 8011b50:	dd04      	ble.n	8011b5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8011b52:	1402      	asrs	r2, r0, #16
 8011b54:	d402      	bmi.n	8011b5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8011b56:	9e03      	ldr	r6, [sp, #12]
 8011b58:	42b2      	cmp	r2, r6
 8011b5a:	db07      	blt.n	8011b6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 8011b5c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8011b5e:	4414      	add	r4, r2
 8011b60:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8011b62:	3b01      	subs	r3, #1
 8011b64:	4410      	add	r0, r2
 8011b66:	3502      	adds	r5, #2
 8011b68:	e7ec      	b.n	8011b44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5c>
 8011b6a:	d00f      	beq.n	8011b8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8011b6c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8011b6e:	1e5a      	subs	r2, r3, #1
 8011b70:	fb06 4602 	mla	r6, r6, r2, r4
 8011b74:	1436      	asrs	r6, r6, #16
 8011b76:	d545      	bpl.n	8011c04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 8011b78:	469a      	mov	sl, r3
 8011b7a:	46a9      	mov	r9, r5
 8011b7c:	f1ba 0f00 	cmp.w	sl, #0
 8011b80:	f300 80ba 	bgt.w	8011cf8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x210>
 8011b84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011b88:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011b8c:	9b01      	ldr	r3, [sp, #4]
 8011b8e:	2b00      	cmp	r3, #0
 8011b90:	f340 8125 	ble.w	8011dde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8011b94:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011b98:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011b9c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011ba0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011ba2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011ba6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011baa:	eeb0 6a62 	vmov.f32	s12, s5
 8011bae:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011bb2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011bb6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011bba:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 8011bbe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011bc2:	eeb0 6a43 	vmov.f32	s12, s6
 8011bc6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011bca:	ee12 2a90 	vmov	r2, s5
 8011bce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011bd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8011bd6:	ee13 2a10 	vmov	r2, s6
 8011bda:	9315      	str	r3, [sp, #84]	; 0x54
 8011bdc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011bde:	fb92 f3f3 	sdiv	r3, r2, r3
 8011be2:	9316      	str	r3, [sp, #88]	; 0x58
 8011be4:	9b01      	ldr	r3, [sp, #4]
 8011be6:	9a06      	ldr	r2, [sp, #24]
 8011be8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011bec:	3b01      	subs	r3, #1
 8011bee:	9301      	str	r3, [sp, #4]
 8011bf0:	ed8d 6a14 	vstr	s12, [sp, #80]	; 0x50
 8011bf4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011bf6:	eeb0 3a67 	vmov.f32	s6, s15
 8011bfa:	bf08      	it	eq
 8011bfc:	4613      	moveq	r3, r2
 8011bfe:	eef0 2a47 	vmov.f32	s5, s14
 8011c02:	e792      	b.n	8011b2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 8011c04:	9f02      	ldr	r7, [sp, #8]
 8011c06:	42b7      	cmp	r7, r6
 8011c08:	ddb6      	ble.n	8011b78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 8011c0a:	9e16      	ldr	r6, [sp, #88]	; 0x58
 8011c0c:	fb06 0202 	mla	r2, r6, r2, r0
 8011c10:	1412      	asrs	r2, r2, #16
 8011c12:	d4b1      	bmi.n	8011b78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 8011c14:	9e03      	ldr	r6, [sp, #12]
 8011c16:	42b2      	cmp	r2, r6
 8011c18:	daae      	bge.n	8011b78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 8011c1a:	f04f 0800 	mov.w	r8, #0
 8011c1e:	eba3 0208 	sub.w	r2, r3, r8
 8011c22:	2a00      	cmp	r2, #0
 8011c24:	ddae      	ble.n	8011b84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8011c26:	9904      	ldr	r1, [sp, #16]
 8011c28:	1422      	asrs	r2, r4, #16
 8011c2a:	1406      	asrs	r6, r0, #16
 8011c2c:	fb01 2606 	mla	r6, r1, r6, r2
 8011c30:	0872      	lsrs	r2, r6, #1
 8011c32:	9905      	ldr	r1, [sp, #20]
 8011c34:	5c8a      	ldrb	r2, [r1, r2]
 8011c36:	07f1      	lsls	r1, r6, #31
 8011c38:	bf54      	ite	pl
 8011c3a:	f002 020f 	andpl.w	r2, r2, #15
 8011c3e:	1112      	asrmi	r2, r2, #4
 8011c40:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011c44:	b2d2      	uxtb	r2, r2
 8011c46:	2a00      	cmp	r2, #0
 8011c48:	d04f      	beq.n	8011cea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8011c4a:	4966      	ldr	r1, [pc, #408]	; (8011de4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8011c4c:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8011c50:	680e      	ldr	r6, [r1, #0]
 8011c52:	9907      	ldr	r1, [sp, #28]
 8011c54:	434a      	muls	r2, r1
 8011c56:	1c57      	adds	r7, r2, #1
 8011c58:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8011c5c:	1212      	asrs	r2, r2, #8
 8011c5e:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8011c62:	fa1f fa82 	uxth.w	sl, r2
 8011c66:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011c6a:	43d2      	mvns	r2, r2
 8011c6c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011c70:	b2d2      	uxtb	r2, r2
 8011c72:	fb1c fc0a 	smulbb	ip, ip, sl
 8011c76:	f3c6 09cc 	ubfx	r9, r6, #3, #13
 8011c7a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011c7e:	495a      	ldr	r1, [pc, #360]	; (8011de8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>)
 8011c80:	fb07 c702 	mla	r7, r7, r2, ip
 8011c84:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011c88:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8011c8c:	fb19 f90a 	smulbb	r9, r9, sl
 8011c90:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011c94:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 8011c98:	fb0c 9c02 	mla	ip, ip, r2, r9
 8011c9c:	b2f6      	uxtb	r6, r6
 8011c9e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011ca2:	fa1f fc8c 	uxth.w	ip, ip
 8011ca6:	fa5f fe8e 	uxtb.w	lr, lr
 8011caa:	fb16 f60a 	smulbb	r6, r6, sl
 8011cae:	b2bf      	uxth	r7, r7
 8011cb0:	fb0e 6602 	mla	r6, lr, r2, r6
 8011cb4:	f10c 0901 	add.w	r9, ip, #1
 8011cb8:	b2b6      	uxth	r6, r6
 8011cba:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011cbe:	f107 0b01 	add.w	fp, r7, #1
 8011cc2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8011cc6:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8011cca:	f106 0e01 	add.w	lr, r6, #1
 8011cce:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8011cd2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011cd6:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8011cda:	ea4c 0c07 	orr.w	ip, ip, r7
 8011cde:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8011ce2:	ea4c 0c0e 	orr.w	ip, ip, lr
 8011ce6:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8011cea:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8011cec:	4414      	add	r4, r2
 8011cee:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8011cf0:	f108 0801 	add.w	r8, r8, #1
 8011cf4:	4410      	add	r0, r2
 8011cf6:	e792      	b.n	8011c1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x136>
 8011cf8:	1422      	asrs	r2, r4, #16
 8011cfa:	d467      	bmi.n	8011dcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8011cfc:	9e02      	ldr	r6, [sp, #8]
 8011cfe:	4296      	cmp	r6, r2
 8011d00:	dd64      	ble.n	8011dcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8011d02:	1406      	asrs	r6, r0, #16
 8011d04:	d462      	bmi.n	8011dcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8011d06:	9f03      	ldr	r7, [sp, #12]
 8011d08:	42be      	cmp	r6, r7
 8011d0a:	da5f      	bge.n	8011dcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8011d0c:	9f04      	ldr	r7, [sp, #16]
 8011d0e:	fb06 2607 	mla	r6, r6, r7, r2
 8011d12:	0872      	lsrs	r2, r6, #1
 8011d14:	9f05      	ldr	r7, [sp, #20]
 8011d16:	5cba      	ldrb	r2, [r7, r2]
 8011d18:	07f6      	lsls	r6, r6, #31
 8011d1a:	bf54      	ite	pl
 8011d1c:	f002 020f 	andpl.w	r2, r2, #15
 8011d20:	1112      	asrmi	r2, r2, #4
 8011d22:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011d26:	b2d2      	uxtb	r2, r2
 8011d28:	2a00      	cmp	r2, #0
 8011d2a:	d04f      	beq.n	8011dcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8011d2c:	9f07      	ldr	r7, [sp, #28]
 8011d2e:	4e2d      	ldr	r6, [pc, #180]	; (8011de4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8011d30:	f8b9 e000 	ldrh.w	lr, [r9]
 8011d34:	6836      	ldr	r6, [r6, #0]
 8011d36:	492c      	ldr	r1, [pc, #176]	; (8011de8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>)
 8011d38:	437a      	muls	r2, r7
 8011d3a:	1c57      	adds	r7, r2, #1
 8011d3c:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8011d40:	1212      	asrs	r2, r2, #8
 8011d42:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8011d46:	fa1f fb82 	uxth.w	fp, r2
 8011d4a:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011d4e:	43d2      	mvns	r2, r2
 8011d50:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011d54:	b2d2      	uxtb	r2, r2
 8011d56:	fb1c fc0b 	smulbb	ip, ip, fp
 8011d5a:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 8011d5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011d62:	fb07 c702 	mla	r7, r7, r2, ip
 8011d66:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011d6a:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8011d6e:	fb18 f80b 	smulbb	r8, r8, fp
 8011d72:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011d76:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 8011d7a:	fb0c 8c02 	mla	ip, ip, r2, r8
 8011d7e:	b2f6      	uxtb	r6, r6
 8011d80:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011d84:	fa1f fc8c 	uxth.w	ip, ip
 8011d88:	fa5f fe8e 	uxtb.w	lr, lr
 8011d8c:	fb16 f60b 	smulbb	r6, r6, fp
 8011d90:	b2bf      	uxth	r7, r7
 8011d92:	fb0e 6602 	mla	r6, lr, r2, r6
 8011d96:	f10c 0801 	add.w	r8, ip, #1
 8011d9a:	b2b6      	uxth	r6, r6
 8011d9c:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 8011da0:	f107 0801 	add.w	r8, r7, #1
 8011da4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8011da8:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8011dac:	f106 0e01 	add.w	lr, r6, #1
 8011db0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8011db4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011db8:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8011dbc:	ea4c 0c07 	orr.w	ip, ip, r7
 8011dc0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8011dc4:	ea4c 0c0e 	orr.w	ip, ip, lr
 8011dc8:	f8a9 c000 	strh.w	ip, [r9]
 8011dcc:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8011dce:	4414      	add	r4, r2
 8011dd0:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8011dd2:	f109 0902 	add.w	r9, r9, #2
 8011dd6:	4410      	add	r0, r2
 8011dd8:	f10a 3aff 	add.w	sl, sl, #4294967295
 8011ddc:	e6ce      	b.n	8011b7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8011dde:	b009      	add	sp, #36	; 0x24
 8011de0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011de4:	20026908 	.word	0x20026908
 8011de8:	0007fff8 	.word	0x0007fff8

08011dec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011df0:	b087      	sub	sp, #28
 8011df2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011df6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8011df8:	9205      	str	r2, [sp, #20]
 8011dfa:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8011dfe:	9201      	str	r2, [sp, #4]
 8011e00:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8011e04:	6860      	ldr	r0, [r4, #4]
 8011e06:	f9bd b060 	ldrsh.w	fp, [sp, #96]	; 0x60
 8011e0a:	9100      	str	r1, [sp, #0]
 8011e0c:	fb00 2505 	mla	r5, r0, r5, r2
 8011e10:	6822      	ldr	r2, [r4, #0]
 8011e12:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8011e16:	f10b 0201 	add.w	r2, fp, #1
 8011e1a:	f022 0201 	bic.w	r2, r2, #1
 8011e1e:	9203      	str	r2, [sp, #12]
 8011e20:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8011e22:	6812      	ldr	r2, [r2, #0]
 8011e24:	9204      	str	r2, [sp, #16]
 8011e26:	9a00      	ldr	r2, [sp, #0]
 8011e28:	2a00      	cmp	r2, #0
 8011e2a:	dc03      	bgt.n	8011e34 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 8011e2c:	9a05      	ldr	r2, [sp, #20]
 8011e2e:	2a00      	cmp	r2, #0
 8011e30:	f340 815c 	ble.w	80120ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>
 8011e34:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011e36:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8011e3a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011e3c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011e40:	2b00      	cmp	r3, #0
 8011e42:	dd0f      	ble.n	8011e64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011e44:	1422      	asrs	r2, r4, #16
 8011e46:	d406      	bmi.n	8011e56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011e48:	4593      	cmp	fp, r2
 8011e4a:	dd04      	ble.n	8011e56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011e4c:	1402      	asrs	r2, r0, #16
 8011e4e:	d402      	bmi.n	8011e56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011e50:	9e01      	ldr	r6, [sp, #4]
 8011e52:	42b2      	cmp	r2, r6
 8011e54:	db07      	blt.n	8011e66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 8011e56:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011e58:	4414      	add	r4, r2
 8011e5a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011e5c:	3b01      	subs	r3, #1
 8011e5e:	4410      	add	r0, r2
 8011e60:	3502      	adds	r5, #2
 8011e62:	e7ed      	b.n	8011e40 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8011e64:	d018      	beq.n	8011e98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 8011e66:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011e68:	1e5a      	subs	r2, r3, #1
 8011e6a:	fb06 4602 	mla	r6, r6, r2, r4
 8011e6e:	1436      	asrs	r6, r6, #16
 8011e70:	d40a      	bmi.n	8011e88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8011e72:	45b3      	cmp	fp, r6
 8011e74:	dd08      	ble.n	8011e88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8011e76:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8011e78:	fb06 0202 	mla	r2, r6, r2, r0
 8011e7c:	1412      	asrs	r2, r2, #16
 8011e7e:	d403      	bmi.n	8011e88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8011e80:	9e01      	ldr	r6, [sp, #4]
 8011e82:	42b2      	cmp	r2, r6
 8011e84:	f2c0 80bf 	blt.w	8012006 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21a>
 8011e88:	2700      	movs	r7, #0
 8011e8a:	19da      	adds	r2, r3, r7
 8011e8c:	2a00      	cmp	r2, #0
 8011e8e:	dc3f      	bgt.n	8011f10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x124>
 8011e90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011e94:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011e98:	9b00      	ldr	r3, [sp, #0]
 8011e9a:	2b00      	cmp	r3, #0
 8011e9c:	f340 8126 	ble.w	80120ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>
 8011ea0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011ea4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011ea8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011eac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011eae:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011eb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011eb6:	eeb0 6a62 	vmov.f32	s12, s5
 8011eba:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011ebe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011ec2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011ec6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011eca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011ece:	eeb0 6a43 	vmov.f32	s12, s6
 8011ed2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011ed6:	ee12 2a90 	vmov	r2, s5
 8011eda:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011ede:	fb92 f3f3 	sdiv	r3, r2, r3
 8011ee2:	ee13 2a10 	vmov	r2, s6
 8011ee6:	9313      	str	r3, [sp, #76]	; 0x4c
 8011ee8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011eea:	fb92 f3f3 	sdiv	r3, r2, r3
 8011eee:	9314      	str	r3, [sp, #80]	; 0x50
 8011ef0:	9b00      	ldr	r3, [sp, #0]
 8011ef2:	9a05      	ldr	r2, [sp, #20]
 8011ef4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011ef8:	3b01      	subs	r3, #1
 8011efa:	9300      	str	r3, [sp, #0]
 8011efc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011f00:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011f02:	eeb0 3a67 	vmov.f32	s6, s15
 8011f06:	bf08      	it	eq
 8011f08:	4613      	moveq	r3, r2
 8011f0a:	eef0 2a47 	vmov.f32	s5, s14
 8011f0e:	e78a      	b.n	8011e26 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8011f10:	1422      	asrs	r2, r4, #16
 8011f12:	d466      	bmi.n	8011fe2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011f14:	4593      	cmp	fp, r2
 8011f16:	dd64      	ble.n	8011fe2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011f18:	1406      	asrs	r6, r0, #16
 8011f1a:	d462      	bmi.n	8011fe2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011f1c:	9901      	ldr	r1, [sp, #4]
 8011f1e:	428e      	cmp	r6, r1
 8011f20:	da5f      	bge.n	8011fe2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011f22:	9903      	ldr	r1, [sp, #12]
 8011f24:	fb06 2601 	mla	r6, r6, r1, r2
 8011f28:	0872      	lsrs	r2, r6, #1
 8011f2a:	9904      	ldr	r1, [sp, #16]
 8011f2c:	5c8a      	ldrb	r2, [r1, r2]
 8011f2e:	07f6      	lsls	r6, r6, #31
 8011f30:	bf54      	ite	pl
 8011f32:	f002 020f 	andpl.w	r2, r2, #15
 8011f36:	1112      	asrmi	r2, r2, #4
 8011f38:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011f3c:	b2d2      	uxtb	r2, r2
 8011f3e:	2a00      	cmp	r2, #0
 8011f40:	d04f      	beq.n	8011fe2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011f42:	496c      	ldr	r1, [pc, #432]	; (80120f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x308>)
 8011f44:	680e      	ldr	r6, [r1, #0]
 8011f46:	496c      	ldr	r1, [pc, #432]	; (80120f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30c>)
 8011f48:	ea4f 2926 	mov.w	r9, r6, asr #8
 8011f4c:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 8011f50:	2aff      	cmp	r2, #255	; 0xff
 8011f52:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 8011f56:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8011f5a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011f5e:	b2f6      	uxtb	r6, r6
 8011f60:	d045      	beq.n	8011fee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8011f62:	f06f 0101 	mvn.w	r1, #1
 8011f66:	4379      	muls	r1, r7
 8011f68:	fa1f fa82 	uxth.w	sl, r2
 8011f6c:	f835 e001 	ldrh.w	lr, [r5, r1]
 8011f70:	9102      	str	r1, [sp, #8]
 8011f72:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011f76:	43d2      	mvns	r2, r2
 8011f78:	b2d2      	uxtb	r2, r2
 8011f7a:	fb19 f90a 	smulbb	r9, r9, sl
 8011f7e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011f82:	fb0c 9c02 	mla	ip, ip, r2, r9
 8011f86:	ea4f 09ee 	mov.w	r9, lr, asr #3
 8011f8a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011f8e:	fb18 f80a 	smulbb	r8, r8, sl
 8011f92:	fb09 8802 	mla	r8, r9, r2, r8
 8011f96:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011f9a:	fa1f f888 	uxth.w	r8, r8
 8011f9e:	fa5f fe8e 	uxtb.w	lr, lr
 8011fa2:	fb16 f60a 	smulbb	r6, r6, sl
 8011fa6:	fa1f fc8c 	uxth.w	ip, ip
 8011faa:	fb0e 6602 	mla	r6, lr, r2, r6
 8011fae:	f108 0901 	add.w	r9, r8, #1
 8011fb2:	b2b6      	uxth	r6, r6
 8011fb4:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 8011fb8:	f10c 0901 	add.w	r9, ip, #1
 8011fbc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011fc0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011fc4:	1c72      	adds	r2, r6, #1
 8011fc6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011fca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011fce:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8011fd2:	ea48 080c 	orr.w	r8, r8, ip
 8011fd6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011fda:	ea48 0806 	orr.w	r8, r8, r6
 8011fde:	f825 8001 	strh.w	r8, [r5, r1]
 8011fe2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011fe4:	4414      	add	r4, r2
 8011fe6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011fe8:	3f01      	subs	r7, #1
 8011fea:	4410      	add	r0, r2
 8011fec:	e74d      	b.n	8011e8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8011fee:	f06f 0201 	mvn.w	r2, #1
 8011ff2:	08f6      	lsrs	r6, r6, #3
 8011ff4:	fb02 fe07 	mul.w	lr, r2, r7
 8011ff8:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 8011ffc:	ea46 06c8 	orr.w	r6, r6, r8, lsl #3
 8012000:	f825 600e 	strh.w	r6, [r5, lr]
 8012004:	e7ed      	b.n	8011fe2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8012006:	f04f 0e00 	mov.w	lr, #0
 801200a:	eba3 020e 	sub.w	r2, r3, lr
 801200e:	2a00      	cmp	r2, #0
 8012010:	f77f af3e 	ble.w	8011e90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8012014:	9903      	ldr	r1, [sp, #12]
 8012016:	1422      	asrs	r2, r4, #16
 8012018:	1406      	asrs	r6, r0, #16
 801201a:	fb01 2606 	mla	r6, r1, r6, r2
 801201e:	0872      	lsrs	r2, r6, #1
 8012020:	9904      	ldr	r1, [sp, #16]
 8012022:	5c8a      	ldrb	r2, [r1, r2]
 8012024:	07f1      	lsls	r1, r6, #31
 8012026:	bf54      	ite	pl
 8012028:	f002 020f 	andpl.w	r2, r2, #15
 801202c:	1112      	asrmi	r2, r2, #4
 801202e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012032:	b2d2      	uxtb	r2, r2
 8012034:	2a00      	cmp	r2, #0
 8012036:	d04a      	beq.n	80120ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e2>
 8012038:	492e      	ldr	r1, [pc, #184]	; (80120f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x308>)
 801203a:	680e      	ldr	r6, [r1, #0]
 801203c:	492e      	ldr	r1, [pc, #184]	; (80120f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30c>)
 801203e:	ea4f 2926 	mov.w	r9, r6, asr #8
 8012042:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 8012046:	2aff      	cmp	r2, #255	; 0xff
 8012048:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 801204c:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8012050:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8012054:	b2f6      	uxtb	r6, r6
 8012056:	d041      	beq.n	80120dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f0>
 8012058:	f835 c01e 	ldrh.w	ip, [r5, lr, lsl #1]
 801205c:	fa1f fa82 	uxth.w	sl, r2
 8012060:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012064:	43d2      	mvns	r2, r2
 8012066:	b2d2      	uxtb	r2, r2
 8012068:	fb19 f90a 	smulbb	r9, r9, sl
 801206c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012070:	fb07 9702 	mla	r7, r7, r2, r9
 8012074:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8012078:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801207c:	fb18 f80a 	smulbb	r8, r8, sl
 8012080:	fb09 8802 	mla	r8, r9, r2, r8
 8012084:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012088:	fa1f f888 	uxth.w	r8, r8
 801208c:	fa5f fc8c 	uxtb.w	ip, ip
 8012090:	fb16 f60a 	smulbb	r6, r6, sl
 8012094:	b2bf      	uxth	r7, r7
 8012096:	fb0c 6602 	mla	r6, ip, r2, r6
 801209a:	f108 0901 	add.w	r9, r8, #1
 801209e:	b2b6      	uxth	r6, r6
 80120a0:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 80120a4:	f107 0901 	add.w	r9, r7, #1
 80120a8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80120ac:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80120b0:	1c72      	adds	r2, r6, #1
 80120b2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80120b6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80120ba:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80120be:	ea48 0807 	orr.w	r8, r8, r7
 80120c2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80120c6:	ea48 0806 	orr.w	r8, r8, r6
 80120ca:	f825 801e 	strh.w	r8, [r5, lr, lsl #1]
 80120ce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80120d0:	4414      	add	r4, r2
 80120d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80120d4:	f10e 0e01 	add.w	lr, lr, #1
 80120d8:	4410      	add	r0, r2
 80120da:	e796      	b.n	801200a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21e>
 80120dc:	08f6      	lsrs	r6, r6, #3
 80120de:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 80120e2:	ea46 06c8 	orr.w	r6, r6, r8, lsl #3
 80120e6:	f825 601e 	strh.w	r6, [r5, lr, lsl #1]
 80120ea:	e7f0      	b.n	80120ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e2>
 80120ec:	b007      	add	sp, #28
 80120ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80120f2:	bf00      	nop
 80120f4:	20026908 	.word	0x20026908
 80120f8:	0007fff8 	.word	0x0007fff8

080120fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80120fc:	4770      	bx	lr

080120fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80120fe:	4770      	bx	lr

08012100 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8012100:	4770      	bx	lr

08012102 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8012102:	4770      	bx	lr

08012104 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012104:	4770      	bx	lr

08012106 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012106:	4770      	bx	lr

08012108 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012108:	4770      	bx	lr

0801210a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801210a:	4770      	bx	lr

0801210c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801210c:	4770      	bx	lr

0801210e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801210e:	4770      	bx	lr

08012110 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012110:	4770      	bx	lr

08012112 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012112:	4770      	bx	lr

08012114 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012114:	4770      	bx	lr

08012116 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012116:	4770      	bx	lr

08012118 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012118:	4770      	bx	lr

0801211a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801211a:	4770      	bx	lr

0801211c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801211c:	4770      	bx	lr

0801211e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801211e:	4770      	bx	lr

08012120 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012120:	4770      	bx	lr

08012122 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012122:	4770      	bx	lr

08012124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012124:	4770      	bx	lr

08012126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8012126:	4770      	bx	lr

08012128 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012128:	4770      	bx	lr

0801212a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801212a:	4770      	bx	lr

0801212c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801212c:	4770      	bx	lr

0801212e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801212e:	4770      	bx	lr

08012130 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012130:	4770      	bx	lr

08012132 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012132:	4770      	bx	lr

08012134 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8012134:	b508      	push	{r3, lr}
 8012136:	4b06      	ldr	r3, [pc, #24]	; (8012150 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8012138:	8818      	ldrh	r0, [r3, #0]
 801213a:	b928      	cbnz	r0, 8012148 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 801213c:	4b05      	ldr	r3, [pc, #20]	; (8012154 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801213e:	4a06      	ldr	r2, [pc, #24]	; (8012158 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8012140:	4806      	ldr	r0, [pc, #24]	; (801215c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 8012142:	21d7      	movs	r1, #215	; 0xd7
 8012144:	f009 f894 	bl	801b270 <__assert_func>
 8012148:	0040      	lsls	r0, r0, #1
 801214a:	b280      	uxth	r0, r0
 801214c:	bd08      	pop	{r3, pc}
 801214e:	bf00      	nop
 8012150:	200268fa 	.word	0x200268fa
 8012154:	0801eeed 	.word	0x0801eeed
 8012158:	0801f473 	.word	0x0801f473
 801215c:	0801ef2f 	.word	0x0801ef2f

08012160 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8012160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012164:	b08d      	sub	sp, #52	; 0x34
 8012166:	460f      	mov	r7, r1
 8012168:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 801216c:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8012170:	4616      	mov	r6, r2
 8012172:	f1b9 0f00 	cmp.w	r9, #0
 8012176:	d046      	beq.n	8012206 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8012178:	6810      	ldr	r0, [r2, #0]
 801217a:	6851      	ldr	r1, [r2, #4]
 801217c:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8012344 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>
 8012180:	ad08      	add	r5, sp, #32
 8012182:	c503      	stmia	r5!, {r0, r1}
 8012184:	6818      	ldr	r0, [r3, #0]
 8012186:	6859      	ldr	r1, [r3, #4]
 8012188:	ad0a      	add	r5, sp, #40	; 0x28
 801218a:	c503      	stmia	r5!, {r0, r1}
 801218c:	a808      	add	r0, sp, #32
 801218e:	f7fb fca5 	bl	800dadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012192:	4631      	mov	r1, r6
 8012194:	a80a      	add	r0, sp, #40	; 0x28
 8012196:	f7fb fc89 	bl	800daac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801219a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801219e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80121a2:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 80121a6:	f8d8 0000 	ldr.w	r0, [r8]
 80121aa:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 80121ae:	fb16 2103 	smlabb	r1, r6, r3, r2
 80121b2:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80121b6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80121ba:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80121be:	440a      	add	r2, r1
 80121c0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80121c4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80121c8:	4413      	add	r3, r2
 80121ca:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80121ce:	6803      	ldr	r3, [r0, #0]
 80121d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80121d2:	4798      	blx	r3
 80121d4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80121d8:	d018      	beq.n	801220c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80121da:	f010 0f04 	tst.w	r0, #4
 80121de:	d019      	beq.n	8012214 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80121e0:	f8d8 0000 	ldr.w	r0, [r8]
 80121e4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80121e8:	6801      	ldr	r1, [r0, #0]
 80121ea:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80121ee:	e9cd 9403 	strd	r9, r4, [sp, #12]
 80121f2:	b2bf      	uxth	r7, r7
 80121f4:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 80121f8:	9402      	str	r4, [sp, #8]
 80121fa:	b2ad      	uxth	r5, r5
 80121fc:	9701      	str	r7, [sp, #4]
 80121fe:	9500      	str	r5, [sp, #0]
 8012200:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 8012202:	4631      	mov	r1, r6
 8012204:	47a0      	blx	r4
 8012206:	b00d      	add	sp, #52	; 0x34
 8012208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801220c:	b914      	cbnz	r4, 8012214 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801220e:	f010 0f01 	tst.w	r0, #1
 8012212:	e7e4      	b.n	80121de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8012214:	f8d8 0000 	ldr.w	r0, [r8]
 8012218:	6803      	ldr	r3, [r0, #0]
 801221a:	6a1b      	ldr	r3, [r3, #32]
 801221c:	4798      	blx	r3
 801221e:	4a48      	ldr	r2, [pc, #288]	; (8012340 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e0>)
 8012220:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8012224:	8814      	ldrh	r4, [r2, #0]
 8012226:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801222a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801222e:	fb01 3404 	mla	r4, r1, r4, r3
 8012232:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012236:	4692      	mov	sl, r2
 8012238:	d118      	bne.n	801226c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x10c>
 801223a:	ea4f 0b45 	mov.w	fp, r5, lsl #1
 801223e:	f04f 0900 	mov.w	r9, #0
 8012242:	f8d8 0000 	ldr.w	r0, [r8]
 8012246:	45b9      	cmp	r9, r7
 8012248:	6803      	ldr	r3, [r0, #0]
 801224a:	da73      	bge.n	8012334 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 801224c:	6add      	ldr	r5, [r3, #44]	; 0x2c
 801224e:	4632      	mov	r2, r6
 8012250:	465b      	mov	r3, fp
 8012252:	4621      	mov	r1, r4
 8012254:	47a8      	blx	r5
 8012256:	f8ba 3000 	ldrh.w	r3, [sl]
 801225a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801225e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8012262:	f109 0901 	add.w	r9, r9, #1
 8012266:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801226a:	e7ea      	b.n	8012242 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xe2>
 801226c:	f1c9 08ff 	rsb	r8, r9, #255	; 0xff
 8012270:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 8012274:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8012278:	f04f 0b00 	mov.w	fp, #0
 801227c:	fa1f f389 	uxth.w	r3, r9
 8012280:	fa1f f888 	uxth.w	r8, r8
 8012284:	9207      	str	r2, [sp, #28]
 8012286:	45bb      	cmp	fp, r7
 8012288:	da54      	bge.n	8012334 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 801228a:	f04f 0e00 	mov.w	lr, #0
 801228e:	45ae      	cmp	lr, r5
 8012290:	da41      	bge.n	8012316 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1b6>
 8012292:	f834 101e 	ldrh.w	r1, [r4, lr, lsl #1]
 8012296:	f836 201e 	ldrh.w	r2, [r6, lr, lsl #1]
 801229a:	1208      	asrs	r0, r1, #8
 801229c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80122a0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80122a4:	fb10 f008 	smulbb	r0, r0, r8
 80122a8:	ea4f 09e1 	mov.w	r9, r1, asr #3
 80122ac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80122b0:	00c9      	lsls	r1, r1, #3
 80122b2:	fb0c 0c03 	mla	ip, ip, r3, r0
 80122b6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80122ba:	10d0      	asrs	r0, r2, #3
 80122bc:	b2c9      	uxtb	r1, r1
 80122be:	00d2      	lsls	r2, r2, #3
 80122c0:	fa1f fc8c 	uxth.w	ip, ip
 80122c4:	fb19 f908 	smulbb	r9, r9, r8
 80122c8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80122cc:	b2d2      	uxtb	r2, r2
 80122ce:	fb11 f108 	smulbb	r1, r1, r8
 80122d2:	fb00 9003 	mla	r0, r0, r3, r9
 80122d6:	fb02 1203 	mla	r2, r2, r3, r1
 80122da:	f10c 0901 	add.w	r9, ip, #1
 80122de:	b292      	uxth	r2, r2
 80122e0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80122e4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 80122e8:	f102 0c01 	add.w	ip, r2, #1
 80122ec:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80122f0:	b280      	uxth	r0, r0
 80122f2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80122f6:	ea49 0c02 	orr.w	ip, r9, r2
 80122fa:	f100 0901 	add.w	r9, r0, #1
 80122fe:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 8012302:	0940      	lsrs	r0, r0, #5
 8012304:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8012308:	ea4c 0c00 	orr.w	ip, ip, r0
 801230c:	f824 c01e 	strh.w	ip, [r4, lr, lsl #1]
 8012310:	f10e 0e01 	add.w	lr, lr, #1
 8012314:	e7bb      	b.n	801228e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x12e>
 8012316:	9a07      	ldr	r2, [sp, #28]
 8012318:	8812      	ldrh	r2, [r2, #0]
 801231a:	1b52      	subs	r2, r2, r5
 801231c:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 8012320:	4414      	add	r4, r2
 8012322:	f9bd 2024 	ldrsh.w	r2, [sp, #36]	; 0x24
 8012326:	1b52      	subs	r2, r2, r5
 8012328:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 801232c:	4416      	add	r6, r2
 801232e:	f10b 0b01 	add.w	fp, fp, #1
 8012332:	e7a8      	b.n	8012286 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x126>
 8012334:	4b03      	ldr	r3, [pc, #12]	; (8012344 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>)
 8012336:	6818      	ldr	r0, [r3, #0]
 8012338:	6803      	ldr	r3, [r0, #0]
 801233a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801233c:	4798      	blx	r3
 801233e:	e762      	b.n	8012206 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8012340:	200268fa 	.word	0x200268fa
 8012344:	20026900 	.word	0x20026900

08012348 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012348:	b510      	push	{r4, lr}
 801234a:	2104      	movs	r1, #4
 801234c:	4604      	mov	r4, r0
 801234e:	f008 ff63 	bl	801b218 <_ZdlPvj>
 8012352:	4620      	mov	r0, r4
 8012354:	bd10      	pop	{r4, pc}

08012356 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012356:	b510      	push	{r4, lr}
 8012358:	2104      	movs	r1, #4
 801235a:	4604      	mov	r4, r0
 801235c:	f008 ff5c 	bl	801b218 <_ZdlPvj>
 8012360:	4620      	mov	r0, r4
 8012362:	bd10      	pop	{r4, pc}

08012364 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012364:	b510      	push	{r4, lr}
 8012366:	2104      	movs	r1, #4
 8012368:	4604      	mov	r4, r0
 801236a:	f008 ff55 	bl	801b218 <_ZdlPvj>
 801236e:	4620      	mov	r0, r4
 8012370:	bd10      	pop	{r4, pc}

08012372 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012372:	b510      	push	{r4, lr}
 8012374:	2104      	movs	r1, #4
 8012376:	4604      	mov	r4, r0
 8012378:	f008 ff4e 	bl	801b218 <_ZdlPvj>
 801237c:	4620      	mov	r0, r4
 801237e:	bd10      	pop	{r4, pc}

08012380 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012380:	b510      	push	{r4, lr}
 8012382:	2104      	movs	r1, #4
 8012384:	4604      	mov	r4, r0
 8012386:	f008 ff47 	bl	801b218 <_ZdlPvj>
 801238a:	4620      	mov	r0, r4
 801238c:	bd10      	pop	{r4, pc}

0801238e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801238e:	b510      	push	{r4, lr}
 8012390:	2104      	movs	r1, #4
 8012392:	4604      	mov	r4, r0
 8012394:	f008 ff40 	bl	801b218 <_ZdlPvj>
 8012398:	4620      	mov	r0, r4
 801239a:	bd10      	pop	{r4, pc}

0801239c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801239c:	b510      	push	{r4, lr}
 801239e:	2104      	movs	r1, #4
 80123a0:	4604      	mov	r4, r0
 80123a2:	f008 ff39 	bl	801b218 <_ZdlPvj>
 80123a6:	4620      	mov	r0, r4
 80123a8:	bd10      	pop	{r4, pc}

080123aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80123aa:	b510      	push	{r4, lr}
 80123ac:	2104      	movs	r1, #4
 80123ae:	4604      	mov	r4, r0
 80123b0:	f008 ff32 	bl	801b218 <_ZdlPvj>
 80123b4:	4620      	mov	r0, r4
 80123b6:	bd10      	pop	{r4, pc}

080123b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80123b8:	b510      	push	{r4, lr}
 80123ba:	2104      	movs	r1, #4
 80123bc:	4604      	mov	r4, r0
 80123be:	f008 ff2b 	bl	801b218 <_ZdlPvj>
 80123c2:	4620      	mov	r0, r4
 80123c4:	bd10      	pop	{r4, pc}

080123c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80123c6:	b510      	push	{r4, lr}
 80123c8:	2104      	movs	r1, #4
 80123ca:	4604      	mov	r4, r0
 80123cc:	f008 ff24 	bl	801b218 <_ZdlPvj>
 80123d0:	4620      	mov	r0, r4
 80123d2:	bd10      	pop	{r4, pc}

080123d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80123d4:	b510      	push	{r4, lr}
 80123d6:	2104      	movs	r1, #4
 80123d8:	4604      	mov	r4, r0
 80123da:	f008 ff1d 	bl	801b218 <_ZdlPvj>
 80123de:	4620      	mov	r0, r4
 80123e0:	bd10      	pop	{r4, pc}

080123e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80123e2:	b510      	push	{r4, lr}
 80123e4:	2104      	movs	r1, #4
 80123e6:	4604      	mov	r4, r0
 80123e8:	f008 ff16 	bl	801b218 <_ZdlPvj>
 80123ec:	4620      	mov	r0, r4
 80123ee:	bd10      	pop	{r4, pc}

080123f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80123f0:	b510      	push	{r4, lr}
 80123f2:	2104      	movs	r1, #4
 80123f4:	4604      	mov	r4, r0
 80123f6:	f008 ff0f 	bl	801b218 <_ZdlPvj>
 80123fa:	4620      	mov	r0, r4
 80123fc:	bd10      	pop	{r4, pc}

080123fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80123fe:	b510      	push	{r4, lr}
 8012400:	2104      	movs	r1, #4
 8012402:	4604      	mov	r4, r0
 8012404:	f008 ff08 	bl	801b218 <_ZdlPvj>
 8012408:	4620      	mov	r0, r4
 801240a:	bd10      	pop	{r4, pc}

0801240c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801240c:	b510      	push	{r4, lr}
 801240e:	2104      	movs	r1, #4
 8012410:	4604      	mov	r4, r0
 8012412:	f008 ff01 	bl	801b218 <_ZdlPvj>
 8012416:	4620      	mov	r0, r4
 8012418:	bd10      	pop	{r4, pc}

0801241a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801241a:	b510      	push	{r4, lr}
 801241c:	2104      	movs	r1, #4
 801241e:	4604      	mov	r4, r0
 8012420:	f008 fefa 	bl	801b218 <_ZdlPvj>
 8012424:	4620      	mov	r0, r4
 8012426:	bd10      	pop	{r4, pc}

08012428 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012428:	b510      	push	{r4, lr}
 801242a:	2104      	movs	r1, #4
 801242c:	4604      	mov	r4, r0
 801242e:	f008 fef3 	bl	801b218 <_ZdlPvj>
 8012432:	4620      	mov	r0, r4
 8012434:	bd10      	pop	{r4, pc}

08012436 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012436:	b510      	push	{r4, lr}
 8012438:	2104      	movs	r1, #4
 801243a:	4604      	mov	r4, r0
 801243c:	f008 feec 	bl	801b218 <_ZdlPvj>
 8012440:	4620      	mov	r0, r4
 8012442:	bd10      	pop	{r4, pc}

08012444 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012444:	b510      	push	{r4, lr}
 8012446:	2104      	movs	r1, #4
 8012448:	4604      	mov	r4, r0
 801244a:	f008 fee5 	bl	801b218 <_ZdlPvj>
 801244e:	4620      	mov	r0, r4
 8012450:	bd10      	pop	{r4, pc}

08012452 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012452:	b510      	push	{r4, lr}
 8012454:	2104      	movs	r1, #4
 8012456:	4604      	mov	r4, r0
 8012458:	f008 fede 	bl	801b218 <_ZdlPvj>
 801245c:	4620      	mov	r0, r4
 801245e:	bd10      	pop	{r4, pc}

08012460 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012460:	b510      	push	{r4, lr}
 8012462:	2104      	movs	r1, #4
 8012464:	4604      	mov	r4, r0
 8012466:	f008 fed7 	bl	801b218 <_ZdlPvj>
 801246a:	4620      	mov	r0, r4
 801246c:	bd10      	pop	{r4, pc}

0801246e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801246e:	b510      	push	{r4, lr}
 8012470:	2104      	movs	r1, #4
 8012472:	4604      	mov	r4, r0
 8012474:	f008 fed0 	bl	801b218 <_ZdlPvj>
 8012478:	4620      	mov	r0, r4
 801247a:	bd10      	pop	{r4, pc}

0801247c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801247c:	b510      	push	{r4, lr}
 801247e:	2104      	movs	r1, #4
 8012480:	4604      	mov	r4, r0
 8012482:	f008 fec9 	bl	801b218 <_ZdlPvj>
 8012486:	4620      	mov	r0, r4
 8012488:	bd10      	pop	{r4, pc}

0801248a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801248a:	b510      	push	{r4, lr}
 801248c:	2104      	movs	r1, #4
 801248e:	4604      	mov	r4, r0
 8012490:	f008 fec2 	bl	801b218 <_ZdlPvj>
 8012494:	4620      	mov	r0, r4
 8012496:	bd10      	pop	{r4, pc}

08012498 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8012498:	b510      	push	{r4, lr}
 801249a:	2104      	movs	r1, #4
 801249c:	4604      	mov	r4, r0
 801249e:	f008 febb 	bl	801b218 <_ZdlPvj>
 80124a2:	4620      	mov	r0, r4
 80124a4:	bd10      	pop	{r4, pc}

080124a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80124a6:	b510      	push	{r4, lr}
 80124a8:	2104      	movs	r1, #4
 80124aa:	4604      	mov	r4, r0
 80124ac:	f008 feb4 	bl	801b218 <_ZdlPvj>
 80124b0:	4620      	mov	r0, r4
 80124b2:	bd10      	pop	{r4, pc}

080124b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80124b4:	b510      	push	{r4, lr}
 80124b6:	2104      	movs	r1, #4
 80124b8:	4604      	mov	r4, r0
 80124ba:	f008 fead 	bl	801b218 <_ZdlPvj>
 80124be:	4620      	mov	r0, r4
 80124c0:	bd10      	pop	{r4, pc}

080124c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80124c2:	b510      	push	{r4, lr}
 80124c4:	2104      	movs	r1, #4
 80124c6:	4604      	mov	r4, r0
 80124c8:	f008 fea6 	bl	801b218 <_ZdlPvj>
 80124cc:	4620      	mov	r0, r4
 80124ce:	bd10      	pop	{r4, pc}

080124d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80124d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124d4:	460e      	mov	r6, r1
 80124d6:	b08b      	sub	sp, #44	; 0x2c
 80124d8:	4615      	mov	r5, r2
 80124da:	461c      	mov	r4, r3
 80124dc:	b323      	cbz	r3, 8012528 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 80124de:	4608      	mov	r0, r1
 80124e0:	f7fa f88c 	bl	800c5fc <_ZNK8touchgfx4Rect7isEmptyEv>
 80124e4:	bb00      	cbnz	r0, 8012528 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 80124e6:	6830      	ldr	r0, [r6, #0]
 80124e8:	6871      	ldr	r1, [r6, #4]
 80124ea:	4e55      	ldr	r6, [pc, #340]	; (8012640 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 80124ec:	ab08      	add	r3, sp, #32
 80124ee:	c303      	stmia	r3!, {r0, r1}
 80124f0:	a808      	add	r0, sp, #32
 80124f2:	f7fb faf3 	bl	800dadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80124f6:	6830      	ldr	r0, [r6, #0]
 80124f8:	6803      	ldr	r3, [r0, #0]
 80124fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80124fc:	4798      	blx	r3
 80124fe:	2cff      	cmp	r4, #255	; 0xff
 8012500:	d015      	beq.n	801252e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5e>
 8012502:	f010 0f08 	tst.w	r0, #8
 8012506:	d015      	beq.n	8012534 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x64>
 8012508:	6830      	ldr	r0, [r6, #0]
 801250a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801250e:	6801      	ldr	r1, [r0, #0]
 8012510:	9402      	str	r4, [sp, #8]
 8012512:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8012516:	9401      	str	r4, [sp, #4]
 8012518:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 801251c:	9400      	str	r4, [sp, #0]
 801251e:	6c8c      	ldr	r4, [r1, #72]	; 0x48
 8012520:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012524:	4629      	mov	r1, r5
 8012526:	47a0      	blx	r4
 8012528:	b00b      	add	sp, #44	; 0x2c
 801252a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801252e:	f010 0f02 	tst.w	r0, #2
 8012532:	e7e8      	b.n	8012506 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8012534:	6830      	ldr	r0, [r6, #0]
 8012536:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801253a:	6803      	ldr	r3, [r0, #0]
 801253c:	f9bd 9026 	ldrsh.w	r9, [sp, #38]	; 0x26
 8012540:	6a1b      	ldr	r3, [r3, #32]
 8012542:	4798      	blx	r3
 8012544:	4a3f      	ldr	r2, [pc, #252]	; (8012644 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x174>)
 8012546:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801254a:	8816      	ldrh	r6, [r2, #0]
 801254c:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012550:	2cff      	cmp	r4, #255	; 0xff
 8012552:	fb06 1303 	mla	r3, r6, r3, r1
 8012556:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801255a:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 801255e:	4616      	mov	r6, r2
 8012560:	ea28 71e8 	bic.w	r1, r8, r8, asr #31
 8012564:	d10a      	bne.n	801257c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xac>
 8012566:	0049      	lsls	r1, r1, #1
 8012568:	2200      	movs	r2, #0
 801256a:	454a      	cmp	r2, r9
 801256c:	da62      	bge.n	8012634 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x164>
 801256e:	2300      	movs	r3, #0
 8012570:	4543      	cmp	r3, r8
 8012572:	da58      	bge.n	8012626 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x156>
 8012574:	f820 5013 	strh.w	r5, [r0, r3, lsl #1]
 8012578:	3301      	adds	r3, #1
 801257a:	e7f9      	b.n	8012570 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>
 801257c:	122b      	asrs	r3, r5, #8
 801257e:	f1c4 07ff 	rsb	r7, r4, #255	; 0xff
 8012582:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8012586:	b2a4      	uxth	r4, r4
 8012588:	4363      	muls	r3, r4
 801258a:	9305      	str	r3, [sp, #20]
 801258c:	f3c5 06cc 	ubfx	r6, r5, #3, #13
 8012590:	00eb      	lsls	r3, r5, #3
 8012592:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012596:	b2db      	uxtb	r3, r3
 8012598:	0049      	lsls	r1, r1, #1
 801259a:	4366      	muls	r6, r4
 801259c:	4363      	muls	r3, r4
 801259e:	9106      	str	r1, [sp, #24]
 80125a0:	f04f 0c00 	mov.w	ip, #0
 80125a4:	b2bf      	uxth	r7, r7
 80125a6:	9207      	str	r2, [sp, #28]
 80125a8:	45cc      	cmp	ip, r9
 80125aa:	da43      	bge.n	8012634 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x164>
 80125ac:	4682      	mov	sl, r0
 80125ae:	f04f 0e00 	mov.w	lr, #0
 80125b2:	45c6      	cmp	lr, r8
 80125b4:	da2d      	bge.n	8012612 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x142>
 80125b6:	f8ba 2000 	ldrh.w	r2, [sl]
 80125ba:	9905      	ldr	r1, [sp, #20]
 80125bc:	1214      	asrs	r4, r2, #8
 80125be:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80125c2:	fb14 f407 	smulbb	r4, r4, r7
 80125c6:	440c      	add	r4, r1
 80125c8:	10d1      	asrs	r1, r2, #3
 80125ca:	00d2      	lsls	r2, r2, #3
 80125cc:	b2d2      	uxtb	r2, r2
 80125ce:	fb12 f207 	smulbb	r2, r2, r7
 80125d2:	b2a4      	uxth	r4, r4
 80125d4:	441a      	add	r2, r3
 80125d6:	b292      	uxth	r2, r2
 80125d8:	1c65      	adds	r5, r4, #1
 80125da:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80125de:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 80125e2:	fb11 f107 	smulbb	r1, r1, r7
 80125e6:	1c55      	adds	r5, r2, #1
 80125e8:	4431      	add	r1, r6
 80125ea:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 80125ee:	b289      	uxth	r1, r1
 80125f0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80125f4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80125f8:	4314      	orrs	r4, r2
 80125fa:	1c4a      	adds	r2, r1, #1
 80125fc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8012600:	0949      	lsrs	r1, r1, #5
 8012602:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012606:	430c      	orrs	r4, r1
 8012608:	f82a 4b02 	strh.w	r4, [sl], #2
 801260c:	f10e 0e01 	add.w	lr, lr, #1
 8012610:	e7cf      	b.n	80125b2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xe2>
 8012612:	9a07      	ldr	r2, [sp, #28]
 8012614:	9906      	ldr	r1, [sp, #24]
 8012616:	8812      	ldrh	r2, [r2, #0]
 8012618:	ebcb 0242 	rsb	r2, fp, r2, lsl #1
 801261c:	440a      	add	r2, r1
 801261e:	4410      	add	r0, r2
 8012620:	f10c 0c01 	add.w	ip, ip, #1
 8012624:	e7c0      	b.n	80125a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd8>
 8012626:	8833      	ldrh	r3, [r6, #0]
 8012628:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 801262c:	440b      	add	r3, r1
 801262e:	4418      	add	r0, r3
 8012630:	3201      	adds	r2, #1
 8012632:	e79a      	b.n	801256a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9a>
 8012634:	4b02      	ldr	r3, [pc, #8]	; (8012640 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8012636:	6818      	ldr	r0, [r3, #0]
 8012638:	6803      	ldr	r3, [r0, #0]
 801263a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801263c:	4798      	blx	r3
 801263e:	e773      	b.n	8012528 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8012640:	20026900 	.word	0x20026900
 8012644:	200268fa 	.word	0x200268fa

08012648 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8012648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801264c:	4d9b      	ldr	r5, [pc, #620]	; (80128bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 801264e:	4690      	mov	r8, r2
 8012650:	682a      	ldr	r2, [r5, #0]
 8012652:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8012656:	2a02      	cmp	r2, #2
 8012658:	b08f      	sub	sp, #60	; 0x3c
 801265a:	4604      	mov	r4, r0
 801265c:	4689      	mov	r9, r1
 801265e:	d106      	bne.n	801266e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8012660:	4b97      	ldr	r3, [pc, #604]	; (80128c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8012662:	4a98      	ldr	r2, [pc, #608]	; (80128c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8012664:	f240 21c2 	movw	r1, #706	; 0x2c2
 8012668:	4897      	ldr	r0, [pc, #604]	; (80128c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 801266a:	f008 fe01 	bl	801b270 <__assert_func>
 801266e:	ae0e      	add	r6, sp, #56	; 0x38
 8012670:	f826 3d24 	strh.w	r3, [r6, #-36]!
 8012674:	4630      	mov	r0, r6
 8012676:	f7fd facf 	bl	800fc18 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801267a:	6823      	ldr	r3, [r4, #0]
 801267c:	4607      	mov	r7, r0
 801267e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012680:	4620      	mov	r0, r4
 8012682:	4798      	blx	r3
 8012684:	4287      	cmp	r7, r0
 8012686:	d004      	beq.n	8012692 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8012688:	4b90      	ldr	r3, [pc, #576]	; (80128cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 801268a:	4a8e      	ldr	r2, [pc, #568]	; (80128c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 801268c:	f44f 7131 	mov.w	r1, #708	; 0x2c4
 8012690:	e7ea      	b.n	8012668 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012692:	4630      	mov	r0, r6
 8012694:	f7fd fa3c 	bl	800fb10 <_ZNK8touchgfx6Bitmap7getDataEv>
 8012698:	4607      	mov	r7, r0
 801269a:	b920      	cbnz	r0, 80126a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 801269c:	4b8c      	ldr	r3, [pc, #560]	; (80128d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x288>)
 801269e:	4a89      	ldr	r2, [pc, #548]	; (80128c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 80126a0:	f240 21c6 	movw	r1, #710	; 0x2c6
 80126a4:	e7e0      	b.n	8012668 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80126a6:	f8d8 0000 	ldr.w	r0, [r8]
 80126aa:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80126ae:	f9b8 a000 	ldrsh.w	sl, [r8]
 80126b2:	ab06      	add	r3, sp, #24
 80126b4:	c303      	stmia	r3!, {r0, r1}
 80126b6:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80126ba:	f8d9 0000 	ldr.w	r0, [r9]
 80126be:	f9b8 9002 	ldrsh.w	r9, [r8, #2]
 80126c2:	ab08      	add	r3, sp, #32
 80126c4:	c303      	stmia	r3!, {r0, r1}
 80126c6:	4630      	mov	r0, r6
 80126c8:	f7fd f91a 	bl	800f900 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80126cc:	4680      	mov	r8, r0
 80126ce:	4630      	mov	r0, r6
 80126d0:	f7fd f950 	bl	800f974 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80126d4:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80126d8:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 80126dc:	f10d 0920 	add.w	r9, sp, #32
 80126e0:	a806      	add	r0, sp, #24
 80126e2:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 80126e6:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 80126ea:	f7fb f9f7 	bl	800dadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80126ee:	4648      	mov	r0, r9
 80126f0:	f7fb f9f4 	bl	800dadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80126f4:	a80a      	add	r0, sp, #40	; 0x28
 80126f6:	f7fb f9f1 	bl	800dadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80126fa:	4e76      	ldr	r6, [pc, #472]	; (80128d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28c>)
 80126fc:	4b76      	ldr	r3, [pc, #472]	; (80128d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 80126fe:	f9b6 2000 	ldrsh.w	r2, [r6]
 8012702:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012706:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801270a:	2100      	movs	r1, #0
 801270c:	910c      	str	r1, [sp, #48]	; 0x30
 801270e:	4648      	mov	r0, r9
 8012710:	a90c      	add	r1, sp, #48	; 0x30
 8012712:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012716:	f7f9 ff2d 	bl	800c574 <_ZN8touchgfx4RectaNERKS0_>
 801271a:	4648      	mov	r0, r9
 801271c:	f7f9 ff6e 	bl	800c5fc <_ZNK8touchgfx4Rect7isEmptyEv>
 8012720:	2800      	cmp	r0, #0
 8012722:	f040 80bd 	bne.w	80128a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8012726:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 801272a:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 801272e:	4288      	cmp	r0, r1
 8012730:	db37      	blt.n	80127a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012732:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8012736:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801273a:	429a      	cmp	r2, r3
 801273c:	db31      	blt.n	80127a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 801273e:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
 8012742:	4460      	add	r0, ip
 8012744:	f8bd c01c 	ldrh.w	ip, [sp, #28]
 8012748:	4461      	add	r1, ip
 801274a:	b200      	sxth	r0, r0
 801274c:	b209      	sxth	r1, r1
 801274e:	4288      	cmp	r0, r1
 8012750:	dc27      	bgt.n	80127a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012752:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8012756:	440a      	add	r2, r1
 8012758:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 801275c:	440b      	add	r3, r1
 801275e:	b212      	sxth	r2, r2
 8012760:	b21b      	sxth	r3, r3
 8012762:	429a      	cmp	r2, r3
 8012764:	dc1d      	bgt.n	80127a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012766:	6823      	ldr	r3, [r4, #0]
 8012768:	4620      	mov	r0, r4
 801276a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801276c:	4798      	blx	r3
 801276e:	4682      	mov	sl, r0
 8012770:	6828      	ldr	r0, [r5, #0]
 8012772:	6803      	ldr	r3, [r0, #0]
 8012774:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012776:	4798      	blx	r3
 8012778:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801277c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012780:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8012784:	1a9b      	subs	r3, r3, r2
 8012786:	b29b      	uxth	r3, r3
 8012788:	b21c      	sxth	r4, r3
 801278a:	2c00      	cmp	r4, #0
 801278c:	dc0e      	bgt.n	80127ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x164>
 801278e:	bf1f      	itttt	ne
 8012790:	f8ad 2020 	strhne.w	r2, [sp, #32]
 8012794:	f8bd 2024 	ldrhne.w	r2, [sp, #36]	; 0x24
 8012798:	189b      	addne	r3, r3, r2
 801279a:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 801279e:	463c      	mov	r4, r7
 80127a0:	e00a      	b.n	80127b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x170>
 80127a2:	4b4e      	ldr	r3, [pc, #312]	; (80128dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x294>)
 80127a4:	4a47      	ldr	r2, [pc, #284]	; (80128c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 80127a6:	f44f 7135 	mov.w	r1, #724	; 0x2d4
 80127aa:	e75d      	b.n	8012668 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80127ac:	ebab 0303 	sub.w	r3, fp, r3
 80127b0:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 80127b4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80127b8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80127bc:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80127c0:	1a5b      	subs	r3, r3, r1
 80127c2:	b29b      	uxth	r3, r3
 80127c4:	b21a      	sxth	r2, r3
 80127c6:	2a00      	cmp	r2, #0
 80127c8:	dd4a      	ble.n	8012860 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x218>
 80127ca:	fb02 f20b 	mul.w	r2, r2, fp
 80127ce:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 80127d2:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 80127d6:	1ad3      	subs	r3, r2, r3
 80127d8:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80127dc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80127e0:	2b00      	cmp	r3, #0
 80127e2:	dd5d      	ble.n	80128a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80127e4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80127e8:	f1bc 0f00 	cmp.w	ip, #0
 80127ec:	dd58      	ble.n	80128a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80127ee:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 80127f2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80127f6:	fb0a f801 	mul.w	r8, sl, r1
 80127fa:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80127fe:	4480      	add	r8, r0
 8012800:	8830      	ldrh	r0, [r6, #0]
 8012802:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 8012806:	42b3      	cmp	r3, r6
 8012808:	bfa8      	it	ge
 801280a:	4633      	movge	r3, r6
 801280c:	1a82      	subs	r2, r0, r2
 801280e:	4293      	cmp	r3, r2
 8012810:	bfa8      	it	ge
 8012812:	4613      	movge	r3, r2
 8012814:	4a30      	ldr	r2, [pc, #192]	; (80128d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8012816:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 801281a:	8812      	ldrh	r2, [r2, #0]
 801281c:	4566      	cmp	r6, ip
 801281e:	eba2 0101 	sub.w	r1, r2, r1
 8012822:	bfa8      	it	ge
 8012824:	4666      	movge	r6, ip
 8012826:	428e      	cmp	r6, r1
 8012828:	4632      	mov	r2, r6
 801282a:	bfa8      	it	ge
 801282c:	460a      	movge	r2, r1
 801282e:	4298      	cmp	r0, r3
 8012830:	9202      	str	r2, [sp, #8]
 8012832:	d01e      	beq.n	8012872 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22a>
 8012834:	005b      	lsls	r3, r3, #1
 8012836:	9303      	str	r3, [sp, #12]
 8012838:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 801283c:	f04f 0900 	mov.w	r9, #0
 8012840:	9b02      	ldr	r3, [sp, #8]
 8012842:	454b      	cmp	r3, r9
 8012844:	dd2c      	ble.n	80128a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8012846:	6828      	ldr	r0, [r5, #0]
 8012848:	6803      	ldr	r3, [r0, #0]
 801284a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801284c:	4642      	mov	r2, r8
 801284e:	461e      	mov	r6, r3
 8012850:	4621      	mov	r1, r4
 8012852:	9b03      	ldr	r3, [sp, #12]
 8012854:	47b0      	blx	r6
 8012856:	44d0      	add	r8, sl
 8012858:	445c      	add	r4, fp
 801285a:	f109 0901 	add.w	r9, r9, #1
 801285e:	e7ef      	b.n	8012840 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f8>
 8012860:	bf1f      	itttt	ne
 8012862:	f8bd 2026 	ldrhne.w	r2, [sp, #38]	; 0x26
 8012866:	f8ad 1022 	strhne.w	r1, [sp, #34]	; 0x22
 801286a:	189b      	addne	r3, r3, r2
 801286c:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8012870:	e7b4      	b.n	80127dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x194>
 8012872:	4558      	cmp	r0, fp
 8012874:	d1de      	bne.n	8012834 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ec>
 8012876:	6828      	ldr	r0, [r5, #0]
 8012878:	6803      	ldr	r3, [r0, #0]
 801287a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801287c:	4798      	blx	r3
 801287e:	07c3      	lsls	r3, r0, #31
 8012880:	d512      	bpl.n	80128a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 8012882:	6828      	ldr	r0, [r5, #0]
 8012884:	9b02      	ldr	r3, [sp, #8]
 8012886:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 801288a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801288e:	6803      	ldr	r3, [r0, #0]
 8012890:	f8cd b000 	str.w	fp, [sp]
 8012894:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8012896:	e899 0006 	ldmia.w	r9, {r1, r2}
 801289a:	4623      	mov	r3, r4
 801289c:	47a8      	blx	r5
 801289e:	4607      	mov	r7, r0
 80128a0:	4638      	mov	r0, r7
 80128a2:	b00f      	add	sp, #60	; 0x3c
 80128a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128a8:	6828      	ldr	r0, [r5, #0]
 80128aa:	6803      	ldr	r3, [r0, #0]
 80128ac:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80128ae:	9b02      	ldr	r3, [sp, #8]
 80128b0:	4642      	mov	r2, r8
 80128b2:	fb03 f30a 	mul.w	r3, r3, sl
 80128b6:	4621      	mov	r1, r4
 80128b8:	47a8      	blx	r5
 80128ba:	e7f1      	b.n	80128a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80128bc:	20026900 	.word	0x20026900
 80128c0:	0801ecdf 	.word	0x0801ecdf
 80128c4:	0801f523 	.word	0x0801f523
 80128c8:	0801ed93 	.word	0x0801ed93
 80128cc:	0801edc5 	.word	0x0801edc5
 80128d0:	0801ee1a 	.word	0x0801ee1a
 80128d4:	200268fa 	.word	0x200268fa
 80128d8:	200268fc 	.word	0x200268fc
 80128dc:	0801ee58 	.word	0x0801ee58

080128e0 <_ZN8touchgfx8LCD16bppC1Ev>:
 80128e0:	2200      	movs	r2, #0
 80128e2:	4910      	ldr	r1, [pc, #64]	; (8012924 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80128e4:	6042      	str	r2, [r0, #4]
 80128e6:	6001      	str	r1, [r0, #0]
 80128e8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80128ec:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80128f0:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80128f4:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80128f8:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80128fc:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8012900:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8012904:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8012908:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801290c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8012910:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8012914:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8012918:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801291c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8012920:	4770      	bx	lr
 8012922:	bf00      	nop
 8012924:	0801f19c 	.word	0x0801f19c

08012928 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8012928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801292c:	460c      	mov	r4, r1
 801292e:	b08d      	sub	sp, #52	; 0x34
 8012930:	4682      	mov	sl, r0
 8012932:	6808      	ldr	r0, [r1, #0]
 8012934:	6849      	ldr	r1, [r1, #4]
 8012936:	469b      	mov	fp, r3
 8012938:	ab08      	add	r3, sp, #32
 801293a:	c303      	stmia	r3!, {r0, r1}
 801293c:	6810      	ldr	r0, [r2, #0]
 801293e:	6851      	ldr	r1, [r2, #4]
 8012940:	ab0a      	add	r3, sp, #40	; 0x28
 8012942:	c303      	stmia	r3!, {r0, r1}
 8012944:	a808      	add	r0, sp, #32
 8012946:	f7fb f8c9 	bl	800dadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801294a:	4621      	mov	r1, r4
 801294c:	a80a      	add	r0, sp, #40	; 0x28
 801294e:	f7fb f8ad 	bl	800daac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012952:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012956:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801295a:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801295e:	4c60      	ldr	r4, [pc, #384]	; (8012ae0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8012960:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8012964:	6820      	ldr	r0, [r4, #0]
 8012966:	f9bd 902e 	ldrsh.w	r9, [sp, #46]	; 0x2e
 801296a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801296e:	eb0a 0a81 	add.w	sl, sl, r1, lsl #2
 8012972:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8012976:	440a      	add	r2, r1
 8012978:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801297c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8012980:	4413      	add	r3, r2
 8012982:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012986:	6803      	ldr	r3, [r0, #0]
 8012988:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801298a:	4798      	blx	r3
 801298c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012990:	d119      	bne.n	80129c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8012992:	f010 0f20 	tst.w	r0, #32
 8012996:	6820      	ldr	r0, [r4, #0]
 8012998:	d018      	beq.n	80129cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801299a:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 801299e:	6801      	ldr	r1, [r0, #0]
 80129a0:	9402      	str	r4, [sp, #8]
 80129a2:	fa1f f489 	uxth.w	r4, r9
 80129a6:	9401      	str	r4, [sp, #4]
 80129a8:	fa1f f488 	uxth.w	r4, r8
 80129ac:	f8cd b00c 	str.w	fp, [sp, #12]
 80129b0:	9400      	str	r4, [sp, #0]
 80129b2:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 80129b4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80129b8:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80129bc:	4651      	mov	r1, sl
 80129be:	47a0      	blx	r4
 80129c0:	b00d      	add	sp, #52	; 0x34
 80129c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80129c6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80129ca:	e7e4      	b.n	8012996 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80129cc:	6803      	ldr	r3, [r0, #0]
 80129ce:	6a1b      	ldr	r3, [r3, #32]
 80129d0:	4798      	blx	r3
 80129d2:	4a44      	ldr	r2, [pc, #272]	; (8012ae4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1bc>)
 80129d4:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80129d8:	8813      	ldrh	r3, [r2, #0]
 80129da:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80129de:	9207      	str	r2, [sp, #28]
 80129e0:	fb04 1303 	mla	r3, r4, r3, r1
 80129e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80129e8:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 80129ec:	0099      	lsls	r1, r3, #2
 80129ee:	005b      	lsls	r3, r3, #1
 80129f0:	9106      	str	r1, [sp, #24]
 80129f2:	9305      	str	r3, [sp, #20]
 80129f4:	f04f 0c00 	mov.w	ip, #0
 80129f8:	45cc      	cmp	ip, r9
 80129fa:	da6b      	bge.n	8012ad4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1ac>
 80129fc:	2300      	movs	r3, #0
 80129fe:	4543      	cmp	r3, r8
 8012a00:	da55      	bge.n	8012aae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x186>
 8012a02:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
 8012a06:	0e25      	lsrs	r5, r4, #24
 8012a08:	d013      	beq.n	8012a32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8012a0a:	2dff      	cmp	r5, #255	; 0xff
 8012a0c:	ea4f 2714 	mov.w	r7, r4, lsr #8
 8012a10:	d111      	bne.n	8012a36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8012a12:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012a16:	d10e      	bne.n	8012a36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8012a18:	0962      	lsrs	r2, r4, #5
 8012a1a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8012a1e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012a22:	f027 0707 	bic.w	r7, r7, #7
 8012a26:	4317      	orrs	r7, r2
 8012a28:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012a2c:	433c      	orrs	r4, r7
 8012a2e:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 8012a32:	3301      	adds	r3, #1
 8012a34:	e7e3      	b.n	80129fe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd6>
 8012a36:	fb0b f505 	mul.w	r5, fp, r5
 8012a3a:	1c6a      	adds	r2, r5, #1
 8012a3c:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 8012a40:	eb02 2225 	add.w	r2, r2, r5, asr #8
 8012a44:	1212      	asrs	r2, r2, #8
 8012a46:	fa1f fe82 	uxth.w	lr, r2
 8012a4a:	120e      	asrs	r6, r1, #8
 8012a4c:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8012a50:	43d2      	mvns	r2, r2
 8012a52:	b2d2      	uxtb	r2, r2
 8012a54:	fb15 f50e 	smulbb	r5, r5, lr
 8012a58:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012a5c:	fb06 5602 	mla	r6, r6, r2, r5
 8012a60:	b2e4      	uxtb	r4, r4
 8012a62:	10cd      	asrs	r5, r1, #3
 8012a64:	00c9      	lsls	r1, r1, #3
 8012a66:	b2c9      	uxtb	r1, r1
 8012a68:	fb14 f40e 	smulbb	r4, r4, lr
 8012a6c:	fb01 4402 	mla	r4, r1, r2, r4
 8012a70:	b2ff      	uxtb	r7, r7
 8012a72:	b2b6      	uxth	r6, r6
 8012a74:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012a78:	b2a4      	uxth	r4, r4
 8012a7a:	fb17 f70e 	smulbb	r7, r7, lr
 8012a7e:	fb05 7702 	mla	r7, r5, r2, r7
 8012a82:	1c72      	adds	r2, r6, #1
 8012a84:	1c65      	adds	r5, r4, #1
 8012a86:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8012a8a:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 8012a8e:	b2bf      	uxth	r7, r7
 8012a90:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012a94:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8012a98:	432e      	orrs	r6, r5
 8012a9a:	1c7d      	adds	r5, r7, #1
 8012a9c:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8012aa0:	097f      	lsrs	r7, r7, #5
 8012aa2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8012aa6:	433e      	orrs	r6, r7
 8012aa8:	f820 6013 	strh.w	r6, [r0, r3, lsl #1]
 8012aac:	e7c1      	b.n	8012a32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8012aae:	9b07      	ldr	r3, [sp, #28]
 8012ab0:	9a05      	ldr	r2, [sp, #20]
 8012ab2:	881b      	ldrh	r3, [r3, #0]
 8012ab4:	eba3 0308 	sub.w	r3, r3, r8
 8012ab8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012abc:	4418      	add	r0, r3
 8012abe:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8012ac2:	9a06      	ldr	r2, [sp, #24]
 8012ac4:	eba3 0308 	sub.w	r3, r3, r8
 8012ac8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8012acc:	449a      	add	sl, r3
 8012ace:	f10c 0c01 	add.w	ip, ip, #1
 8012ad2:	e791      	b.n	80129f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd0>
 8012ad4:	4b02      	ldr	r3, [pc, #8]	; (8012ae0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8012ad6:	6818      	ldr	r0, [r3, #0]
 8012ad8:	6803      	ldr	r3, [r0, #0]
 8012ada:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012adc:	4798      	blx	r3
 8012ade:	e76f      	b.n	80129c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8012ae0:	20026900 	.word	0x20026900
 8012ae4:	200268fa 	.word	0x200268fa

08012ae8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8012ae8:	b570      	push	{r4, r5, r6, lr}
 8012aea:	9d04      	ldr	r5, [sp, #16]
 8012aec:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8012af0:	460c      	mov	r4, r1
 8012af2:	4619      	mov	r1, r3
 8012af4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012af8:	2a0c      	cmp	r2, #12
 8012afa:	d820      	bhi.n	8012b3e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8012afc:	e8df f002 	tbb	[pc, r2]
 8012b00:	18121807 	.word	0x18121807
 8012b04:	18181818 	.word	0x18181818
 8012b08:	18181818 	.word	0x18181818
 8012b0c:	18          	.byte	0x18
 8012b0d:	00          	.byte	0x00
 8012b0e:	6802      	ldr	r2, [r0, #0]
 8012b10:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8012b14:	6916      	ldr	r6, [r2, #16]
 8012b16:	462b      	mov	r3, r5
 8012b18:	460a      	mov	r2, r1
 8012b1a:	46b4      	mov	ip, r6
 8012b1c:	4621      	mov	r1, r4
 8012b1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b22:	4760      	bx	ip
 8012b24:	462a      	mov	r2, r5
 8012b26:	4620      	mov	r0, r4
 8012b28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b2c:	f7ff befc 	b.w	8012928 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012b30:	4b03      	ldr	r3, [pc, #12]	; (8012b40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8012b32:	4a04      	ldr	r2, [pc, #16]	; (8012b44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8012b34:	4804      	ldr	r0, [pc, #16]	; (8012b48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8012b36:	f240 21bb 	movw	r1, #699	; 0x2bb
 8012b3a:	f008 fb99 	bl	801b270 <__assert_func>
 8012b3e:	bd70      	pop	{r4, r5, r6, pc}
 8012b40:	0801eeb8 	.word	0x0801eeb8
 8012b44:	0801f5a9 	.word	0x0801f5a9
 8012b48:	0801ed93 	.word	0x0801ed93

08012b4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8012b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b50:	b093      	sub	sp, #76	; 0x4c
 8012b52:	880f      	ldrh	r7, [r1, #0]
 8012b54:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8012b58:	4681      	mov	r9, r0
 8012b5a:	4688      	mov	r8, r1
 8012b5c:	4615      	mov	r5, r2
 8012b5e:	b12f      	cbz	r7, 8012b6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8012b60:	4b71      	ldr	r3, [pc, #452]	; (8012d28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8012b62:	4a72      	ldr	r2, [pc, #456]	; (8012d2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8012b64:	4872      	ldr	r0, [pc, #456]	; (8012d30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8012b66:	21ec      	movs	r1, #236	; 0xec
 8012b68:	f008 fb82 	bl	801b270 <__assert_func>
 8012b6c:	6810      	ldr	r0, [r2, #0]
 8012b6e:	6851      	ldr	r1, [r2, #4]
 8012b70:	ac0e      	add	r4, sp, #56	; 0x38
 8012b72:	c403      	stmia	r4!, {r0, r1}
 8012b74:	6818      	ldr	r0, [r3, #0]
 8012b76:	6859      	ldr	r1, [r3, #4]
 8012b78:	ac10      	add	r4, sp, #64	; 0x40
 8012b7a:	c403      	stmia	r4!, {r0, r1}
 8012b7c:	a80e      	add	r0, sp, #56	; 0x38
 8012b7e:	f7fa ffad 	bl	800dadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012b82:	4629      	mov	r1, r5
 8012b84:	a810      	add	r0, sp, #64	; 0x40
 8012b86:	f7fa ff91 	bl	800daac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012b8a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012b8e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012b92:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012b96:	4d67      	ldr	r5, [pc, #412]	; (8012d34 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8012b98:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8012b9c:	6828      	ldr	r0, [r5, #0]
 8012b9e:	4c66      	ldr	r4, [pc, #408]	; (8012d38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ec>)
 8012ba0:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012ba4:	4489      	add	r9, r1
 8012ba6:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8012baa:	440a      	add	r2, r1
 8012bac:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012bb0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012bb4:	4413      	add	r3, r2
 8012bb6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8012bba:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8012bbe:	930a      	str	r3, [sp, #40]	; 0x28
 8012bc0:	6803      	ldr	r3, [r0, #0]
 8012bc2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012bc6:	4798      	blx	r3
 8012bc8:	2801      	cmp	r0, #1
 8012bca:	d11d      	bne.n	8012c08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbc>
 8012bcc:	220b      	movs	r2, #11
 8012bce:	9708      	str	r7, [sp, #32]
 8012bd0:	9207      	str	r2, [sp, #28]
 8012bd2:	8822      	ldrh	r2, [r4, #0]
 8012bd4:	f8cd a010 	str.w	sl, [sp, #16]
 8012bd8:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8012bdc:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8012be0:	9203      	str	r2, [sp, #12]
 8012be2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012be6:	9202      	str	r2, [sp, #8]
 8012be8:	fa1f f28b 	uxth.w	r2, fp
 8012bec:	9201      	str	r2, [sp, #4]
 8012bee:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8012bf2:	9200      	str	r2, [sp, #0]
 8012bf4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012bf8:	6828      	ldr	r0, [r5, #0]
 8012bfa:	4642      	mov	r2, r8
 8012bfc:	4649      	mov	r1, r9
 8012bfe:	f7fa f907 	bl	800ce10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8012c02:	b013      	add	sp, #76	; 0x4c
 8012c04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c08:	6828      	ldr	r0, [r5, #0]
 8012c0a:	6803      	ldr	r3, [r0, #0]
 8012c0c:	6a1b      	ldr	r3, [r3, #32]
 8012c0e:	4798      	blx	r3
 8012c10:	8823      	ldrh	r3, [r4, #0]
 8012c12:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8012c16:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012c1a:	fb01 2303 	mla	r3, r1, r3, r2
 8012c1e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012c22:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
 8012c26:	930b      	str	r3, [sp, #44]	; 0x2c
 8012c28:	005b      	lsls	r3, r3, #1
 8012c2a:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8012c2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012c30:	429f      	cmp	r7, r3
 8012c32:	da72      	bge.n	8012d1a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ce>
 8012c34:	2100      	movs	r1, #0
 8012c36:	4559      	cmp	r1, fp
 8012c38:	da5e      	bge.n	8012cf8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8012c3a:	f819 3001 	ldrb.w	r3, [r9, r1]
 8012c3e:	2204      	movs	r2, #4
 8012c40:	fb12 2303 	smlabb	r3, r2, r3, r2
 8012c44:	f858 2003 	ldr.w	r2, [r8, r3]
 8012c48:	0e15      	lsrs	r5, r2, #24
 8012c4a:	d013      	beq.n	8012c74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8012c4c:	2dff      	cmp	r5, #255	; 0xff
 8012c4e:	ea4f 2412 	mov.w	r4, r2, lsr #8
 8012c52:	d111      	bne.n	8012c78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8012c54:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8012c58:	d10e      	bne.n	8012c78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8012c5a:	0953      	lsrs	r3, r2, #5
 8012c5c:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8012c60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012c64:	f024 0407 	bic.w	r4, r4, #7
 8012c68:	431c      	orrs	r4, r3
 8012c6a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8012c6e:	4314      	orrs	r4, r2
 8012c70:	f820 4011 	strh.w	r4, [r0, r1, lsl #1]
 8012c74:	3101      	adds	r1, #1
 8012c76:	e7de      	b.n	8012c36 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xea>
 8012c78:	fb0a f505 	mul.w	r5, sl, r5
 8012c7c:	1c6b      	adds	r3, r5, #1
 8012c7e:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8012c82:	eb03 2325 	add.w	r3, r3, r5, asr #8
 8012c86:	121b      	asrs	r3, r3, #8
 8012c88:	fa1f fe83 	uxth.w	lr, r3
 8012c8c:	ea4f 262c 	mov.w	r6, ip, asr #8
 8012c90:	f3c2 4507 	ubfx	r5, r2, #16, #8
 8012c94:	43db      	mvns	r3, r3
 8012c96:	b2db      	uxtb	r3, r3
 8012c98:	fb15 f50e 	smulbb	r5, r5, lr
 8012c9c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012ca0:	fb06 5603 	mla	r6, r6, r3, r5
 8012ca4:	b2d2      	uxtb	r2, r2
 8012ca6:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8012caa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012cae:	fa5f fc8c 	uxtb.w	ip, ip
 8012cb2:	fb12 f20e 	smulbb	r2, r2, lr
 8012cb6:	fb0c 2203 	mla	r2, ip, r3, r2
 8012cba:	b2e4      	uxtb	r4, r4
 8012cbc:	b2b6      	uxth	r6, r6
 8012cbe:	fb14 f40e 	smulbb	r4, r4, lr
 8012cc2:	b292      	uxth	r2, r2
 8012cc4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012cc8:	fb05 4503 	mla	r5, r5, r3, r4
 8012ccc:	1c73      	adds	r3, r6, #1
 8012cce:	1c54      	adds	r4, r2, #1
 8012cd0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8012cd4:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8012cd8:	b2ad      	uxth	r5, r5
 8012cda:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8012cde:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8012ce2:	4326      	orrs	r6, r4
 8012ce4:	1c6c      	adds	r4, r5, #1
 8012ce6:	eb04 2415 	add.w	r4, r4, r5, lsr #8
 8012cea:	0964      	lsrs	r4, r4, #5
 8012cec:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8012cf0:	4326      	orrs	r6, r4
 8012cf2:	f820 6011 	strh.w	r6, [r0, r1, lsl #1]
 8012cf6:	e7bd      	b.n	8012c74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8012cf8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012cfa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8012cfc:	881b      	ldrh	r3, [r3, #0]
 8012cfe:	eba3 030b 	sub.w	r3, r3, fp
 8012d02:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012d06:	4418      	add	r0, r3
 8012d08:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8012d0c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012d0e:	eba3 030b 	sub.w	r3, r3, fp
 8012d12:	4413      	add	r3, r2
 8012d14:	4499      	add	r9, r3
 8012d16:	3701      	adds	r7, #1
 8012d18:	e789      	b.n	8012c2e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8012d1a:	4b06      	ldr	r3, [pc, #24]	; (8012d34 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8012d1c:	6818      	ldr	r0, [r3, #0]
 8012d1e:	6803      	ldr	r3, [r0, #0]
 8012d20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012d22:	4798      	blx	r3
 8012d24:	e76d      	b.n	8012c02 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb6>
 8012d26:	bf00      	nop
 8012d28:	0801ec8f 	.word	0x0801ec8f
 8012d2c:	0801f37a 	.word	0x0801f37a
 8012d30:	0801ed93 	.word	0x0801ed93
 8012d34:	20026900 	.word	0x20026900
 8012d38:	200268fa 	.word	0x200268fa

08012d3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8012d3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d40:	4614      	mov	r4, r2
 8012d42:	880a      	ldrh	r2, [r1, #0]
 8012d44:	b093      	sub	sp, #76	; 0x4c
 8012d46:	2a02      	cmp	r2, #2
 8012d48:	4606      	mov	r6, r0
 8012d4a:	4689      	mov	r9, r1
 8012d4c:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 8012d50:	d006      	beq.n	8012d60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8012d52:	4b7a      	ldr	r3, [pc, #488]	; (8012f3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8012d54:	4a7a      	ldr	r2, [pc, #488]	; (8012f40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8012d56:	487b      	ldr	r0, [pc, #492]	; (8012f44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x208>)
 8012d58:	f44f 71a3 	mov.w	r1, #326	; 0x146
 8012d5c:	f008 fa88 	bl	801b270 <__assert_func>
 8012d60:	2f00      	cmp	r7, #0
 8012d62:	d04b      	beq.n	8012dfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8012d64:	6820      	ldr	r0, [r4, #0]
 8012d66:	6861      	ldr	r1, [r4, #4]
 8012d68:	f8df a1e0 	ldr.w	sl, [pc, #480]	; 8012f4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>
 8012d6c:	ad0e      	add	r5, sp, #56	; 0x38
 8012d6e:	c503      	stmia	r5!, {r0, r1}
 8012d70:	6818      	ldr	r0, [r3, #0]
 8012d72:	6859      	ldr	r1, [r3, #4]
 8012d74:	ad10      	add	r5, sp, #64	; 0x40
 8012d76:	c503      	stmia	r5!, {r0, r1}
 8012d78:	a80e      	add	r0, sp, #56	; 0x38
 8012d7a:	f7fa feaf 	bl	800dadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012d7e:	4621      	mov	r1, r4
 8012d80:	a810      	add	r0, sp, #64	; 0x40
 8012d82:	f7fa fe93 	bl	800daac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012d86:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012d8a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012d8e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012d92:	f8da 0000 	ldr.w	r0, [sl]
 8012d96:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	; 0x44
 8012d9a:	f9bd 8046 	ldrsh.w	r8, [sp, #70]	; 0x46
 8012d9e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012da2:	1874      	adds	r4, r6, r1
 8012da4:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8012da8:	4e67      	ldr	r6, [pc, #412]	; (8012f48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x20c>)
 8012daa:	440a      	add	r2, r1
 8012dac:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012db0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012db4:	4413      	add	r3, r2
 8012db6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8012dba:	6803      	ldr	r3, [r0, #0]
 8012dbc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012dc0:	4798      	blx	r3
 8012dc2:	2801      	cmp	r0, #1
 8012dc4:	d11d      	bne.n	8012e02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 8012dc6:	2200      	movs	r2, #0
 8012dc8:	210b      	movs	r1, #11
 8012dca:	e9cd 1207 	strd	r1, r2, [sp, #28]
 8012dce:	8831      	ldrh	r1, [r6, #0]
 8012dd0:	9704      	str	r7, [sp, #16]
 8012dd2:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8012dd6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8012dda:	9203      	str	r2, [sp, #12]
 8012ddc:	fa1f f288 	uxth.w	r2, r8
 8012de0:	9202      	str	r2, [sp, #8]
 8012de2:	b2ad      	uxth	r5, r5
 8012de4:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8012de8:	9200      	str	r2, [sp, #0]
 8012dea:	9501      	str	r5, [sp, #4]
 8012dec:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012df0:	f8da 0000 	ldr.w	r0, [sl]
 8012df4:	464a      	mov	r2, r9
 8012df6:	4621      	mov	r1, r4
 8012df8:	f7fa f80a 	bl	800ce10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8012dfc:	b013      	add	sp, #76	; 0x4c
 8012dfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012e02:	f8da 0000 	ldr.w	r0, [sl]
 8012e06:	6803      	ldr	r3, [r0, #0]
 8012e08:	6a1b      	ldr	r3, [r3, #32]
 8012e0a:	4798      	blx	r3
 8012e0c:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012e10:	8833      	ldrh	r3, [r6, #0]
 8012e12:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8012e16:	fb01 2303 	mla	r3, r1, r3, r2
 8012e1a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012e1e:	2fff      	cmp	r7, #255	; 0xff
 8012e20:	f109 0304 	add.w	r3, r9, #4
 8012e24:	930a      	str	r3, [sp, #40]	; 0x28
 8012e26:	ea25 72e5 	bic.w	r2, r5, r5, asr #31
 8012e2a:	d111      	bne.n	8012e50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x114>
 8012e2c:	b212      	sxth	r2, r2
 8012e2e:	ea4f 0e42 	mov.w	lr, r2, lsl #1
 8012e32:	2100      	movs	r1, #0
 8012e34:	4541      	cmp	r1, r8
 8012e36:	da7a      	bge.n	8012f2e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8012e38:	2300      	movs	r3, #0
 8012e3a:	42ab      	cmp	r3, r5
 8012e3c:	da6b      	bge.n	8012f16 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1da>
 8012e3e:	f814 c003 	ldrb.w	ip, [r4, r3]
 8012e42:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8012e44:	f837 c01c 	ldrh.w	ip, [r7, ip, lsl #1]
 8012e48:	f820 c013 	strh.w	ip, [r0, r3, lsl #1]
 8012e4c:	3301      	adds	r3, #1
 8012e4e:	e7f4      	b.n	8012e3a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xfe>
 8012e50:	b213      	sxth	r3, r2
 8012e52:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8012e56:	930b      	str	r3, [sp, #44]	; 0x2c
 8012e58:	005b      	lsls	r3, r3, #1
 8012e5a:	930c      	str	r3, [sp, #48]	; 0x30
 8012e5c:	f04f 0900 	mov.w	r9, #0
 8012e60:	b2ba      	uxth	r2, r7
 8012e62:	fa1f fc8c 	uxth.w	ip, ip
 8012e66:	960d      	str	r6, [sp, #52]	; 0x34
 8012e68:	45c1      	cmp	r9, r8
 8012e6a:	da60      	bge.n	8012f2e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8012e6c:	46a3      	mov	fp, r4
 8012e6e:	4682      	mov	sl, r0
 8012e70:	ebab 0304 	sub.w	r3, fp, r4
 8012e74:	429d      	cmp	r5, r3
 8012e76:	dd3e      	ble.n	8012ef6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ba>
 8012e78:	f81b 3b01 	ldrb.w	r3, [fp], #1
 8012e7c:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8012e7e:	f8ba 1000 	ldrh.w	r1, [sl]
 8012e82:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012e86:	120e      	asrs	r6, r1, #8
 8012e88:	121f      	asrs	r7, r3, #8
 8012e8a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012e8e:	fb16 f60c 	smulbb	r6, r6, ip
 8012e92:	ea4f 0ee1 	mov.w	lr, r1, asr #3
 8012e96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012e9a:	00c9      	lsls	r1, r1, #3
 8012e9c:	fb07 6702 	mla	r7, r7, r2, r6
 8012ea0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8012ea4:	10de      	asrs	r6, r3, #3
 8012ea6:	b2c9      	uxtb	r1, r1
 8012ea8:	00db      	lsls	r3, r3, #3
 8012eaa:	fb1e fe0c 	smulbb	lr, lr, ip
 8012eae:	fb11 f10c 	smulbb	r1, r1, ip
 8012eb2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012eb6:	b2db      	uxtb	r3, r3
 8012eb8:	b2bf      	uxth	r7, r7
 8012eba:	fb06 e602 	mla	r6, r6, r2, lr
 8012ebe:	fb03 1302 	mla	r3, r3, r2, r1
 8012ec2:	b2b6      	uxth	r6, r6
 8012ec4:	b29b      	uxth	r3, r3
 8012ec6:	1c79      	adds	r1, r7, #1
 8012ec8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8012ecc:	f106 0e01 	add.w	lr, r6, #1
 8012ed0:	1c59      	adds	r1, r3, #1
 8012ed2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8012ed6:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8012eda:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012ede:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8012ee2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8012ee6:	430f      	orrs	r7, r1
 8012ee8:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8012eec:	ea47 070e 	orr.w	r7, r7, lr
 8012ef0:	f82a 7b02 	strh.w	r7, [sl], #2
 8012ef4:	e7bc      	b.n	8012e70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x134>
 8012ef6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012ef8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012efa:	881b      	ldrh	r3, [r3, #0]
 8012efc:	1b5b      	subs	r3, r3, r5
 8012efe:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8012f02:	4418      	add	r0, r3
 8012f04:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8012f08:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012f0a:	1b5b      	subs	r3, r3, r5
 8012f0c:	440b      	add	r3, r1
 8012f0e:	441c      	add	r4, r3
 8012f10:	f109 0901 	add.w	r9, r9, #1
 8012f14:	e7a8      	b.n	8012e68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x12c>
 8012f16:	8833      	ldrh	r3, [r6, #0]
 8012f18:	1b5b      	subs	r3, r3, r5
 8012f1a:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 8012f1e:	4418      	add	r0, r3
 8012f20:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8012f24:	1b5b      	subs	r3, r3, r5
 8012f26:	4413      	add	r3, r2
 8012f28:	441c      	add	r4, r3
 8012f2a:	3101      	adds	r1, #1
 8012f2c:	e782      	b.n	8012e34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xf8>
 8012f2e:	4b07      	ldr	r3, [pc, #28]	; (8012f4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>)
 8012f30:	6818      	ldr	r0, [r3, #0]
 8012f32:	6803      	ldr	r3, [r0, #0]
 8012f34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012f36:	4798      	blx	r3
 8012f38:	e760      	b.n	8012dfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8012f3a:	bf00      	nop
 8012f3c:	0801eb4d 	.word	0x0801eb4d
 8012f40:	0801f1e4 	.word	0x0801f1e4
 8012f44:	0801ed93 	.word	0x0801ed93
 8012f48:	200268fa 	.word	0x200268fa
 8012f4c:	20026900 	.word	0x20026900

08012f50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8012f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f54:	4616      	mov	r6, r2
 8012f56:	880a      	ldrh	r2, [r1, #0]
 8012f58:	b093      	sub	sp, #76	; 0x4c
 8012f5a:	2a01      	cmp	r2, #1
 8012f5c:	4681      	mov	r9, r0
 8012f5e:	4688      	mov	r8, r1
 8012f60:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8012f64:	d006      	beq.n	8012f74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 8012f66:	4b6c      	ldr	r3, [pc, #432]	; (8013118 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8012f68:	4a6c      	ldr	r2, [pc, #432]	; (801311c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 8012f6a:	486d      	ldr	r0, [pc, #436]	; (8013120 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>)
 8012f6c:	f240 11a1 	movw	r1, #417	; 0x1a1
 8012f70:	f008 f97e 	bl	801b270 <__assert_func>
 8012f74:	f1ba 0f00 	cmp.w	sl, #0
 8012f78:	d04a      	beq.n	8013010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8012f7a:	6830      	ldr	r0, [r6, #0]
 8012f7c:	6871      	ldr	r1, [r6, #4]
 8012f7e:	4d69      	ldr	r5, [pc, #420]	; (8013124 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 8012f80:	ac0e      	add	r4, sp, #56	; 0x38
 8012f82:	c403      	stmia	r4!, {r0, r1}
 8012f84:	6818      	ldr	r0, [r3, #0]
 8012f86:	6859      	ldr	r1, [r3, #4]
 8012f88:	ac10      	add	r4, sp, #64	; 0x40
 8012f8a:	c403      	stmia	r4!, {r0, r1}
 8012f8c:	a80e      	add	r0, sp, #56	; 0x38
 8012f8e:	f7fa fda5 	bl	800dadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012f92:	4631      	mov	r1, r6
 8012f94:	a810      	add	r0, sp, #64	; 0x40
 8012f96:	f7fa fd89 	bl	800daac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012f9a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012f9e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012fa2:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012fa6:	6828      	ldr	r0, [r5, #0]
 8012fa8:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
 8012fac:	4c5e      	ldr	r4, [pc, #376]	; (8013128 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8012fae:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012fb2:	4489      	add	r9, r1
 8012fb4:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8012fb8:	440a      	add	r2, r1
 8012fba:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012fbe:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012fc2:	4413      	add	r3, r2
 8012fc4:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8012fc8:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8012fcc:	930a      	str	r3, [sp, #40]	; 0x28
 8012fce:	6803      	ldr	r3, [r0, #0]
 8012fd0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012fd4:	4798      	blx	r3
 8012fd6:	2801      	cmp	r0, #1
 8012fd8:	d11d      	bne.n	8013016 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 8012fda:	220b      	movs	r2, #11
 8012fdc:	2100      	movs	r1, #0
 8012fde:	e9cd 2107 	strd	r2, r1, [sp, #28]
 8012fe2:	8822      	ldrh	r2, [r4, #0]
 8012fe4:	f8cd a010 	str.w	sl, [sp, #16]
 8012fe8:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8012fec:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8012ff0:	9203      	str	r2, [sp, #12]
 8012ff2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012ff6:	9202      	str	r2, [sp, #8]
 8012ff8:	b2b6      	uxth	r6, r6
 8012ffa:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8012ffe:	9200      	str	r2, [sp, #0]
 8013000:	9601      	str	r6, [sp, #4]
 8013002:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013006:	6828      	ldr	r0, [r5, #0]
 8013008:	4642      	mov	r2, r8
 801300a:	4649      	mov	r1, r9
 801300c:	f7f9 ff00 	bl	800ce10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8013010:	b013      	add	sp, #76	; 0x4c
 8013012:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013016:	6828      	ldr	r0, [r5, #0]
 8013018:	6803      	ldr	r3, [r0, #0]
 801301a:	6a1b      	ldr	r3, [r3, #32]
 801301c:	4798      	blx	r3
 801301e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8013022:	8823      	ldrh	r3, [r4, #0]
 8013024:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8013028:	940d      	str	r4, [sp, #52]	; 0x34
 801302a:	fb01 2303 	mla	r3, r1, r3, r2
 801302e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013032:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 8013036:	930b      	str	r3, [sp, #44]	; 0x2c
 8013038:	ea6f 010a 	mvn.w	r1, sl
 801303c:	005b      	lsls	r3, r3, #1
 801303e:	930c      	str	r3, [sp, #48]	; 0x30
 8013040:	f04f 0e00 	mov.w	lr, #0
 8013044:	b2c9      	uxtb	r1, r1
 8013046:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013048:	459e      	cmp	lr, r3
 801304a:	da5f      	bge.n	801310c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801304c:	2700      	movs	r7, #0
 801304e:	fa1f fb8a 	uxth.w	fp, sl
 8013052:	42b7      	cmp	r7, r6
 8013054:	da4a      	bge.n	80130ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 8013056:	f819 3007 	ldrb.w	r3, [r9, r7]
 801305a:	2203      	movs	r2, #3
 801305c:	2404      	movs	r4, #4
 801305e:	fb12 4303 	smlabb	r3, r2, r3, r4
 8013062:	eb08 0403 	add.w	r4, r8, r3
 8013066:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801306a:	78a2      	ldrb	r2, [r4, #2]
 801306c:	7865      	ldrb	r5, [r4, #1]
 801306e:	f818 c003 	ldrb.w	ip, [r8, r3]
 8013072:	d10c      	bne.n	801308e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x13e>
 8013074:	4b2d      	ldr	r3, [pc, #180]	; (801312c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8013076:	00ed      	lsls	r5, r5, #3
 8013078:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 801307c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013080:	432a      	orrs	r2, r5
 8013082:	ea42 02dc 	orr.w	r2, r2, ip, lsr #3
 8013086:	f820 2017 	strh.w	r2, [r0, r7, lsl #1]
 801308a:	3701      	adds	r7, #1
 801308c:	e7e1      	b.n	8013052 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x102>
 801308e:	f830 3017 	ldrh.w	r3, [r0, r7, lsl #1]
 8013092:	121c      	asrs	r4, r3, #8
 8013094:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8013098:	fb12 f20b 	smulbb	r2, r2, fp
 801309c:	fb04 2201 	mla	r2, r4, r1, r2
 80130a0:	10dc      	asrs	r4, r3, #3
 80130a2:	00db      	lsls	r3, r3, #3
 80130a4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80130a8:	b2db      	uxtb	r3, r3
 80130aa:	fb15 f50b 	smulbb	r5, r5, fp
 80130ae:	fb1c fc0b 	smulbb	ip, ip, fp
 80130b2:	b292      	uxth	r2, r2
 80130b4:	fb04 5501 	mla	r5, r4, r1, r5
 80130b8:	fb03 cc01 	mla	ip, r3, r1, ip
 80130bc:	b2ad      	uxth	r5, r5
 80130be:	fa1f fc8c 	uxth.w	ip, ip
 80130c2:	1c53      	adds	r3, r2, #1
 80130c4:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80130c8:	1c6c      	adds	r4, r5, #1
 80130ca:	f10c 0301 	add.w	r3, ip, #1
 80130ce:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80130d2:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 80130d6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80130da:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80130de:	096d      	lsrs	r5, r5, #5
 80130e0:	ea42 020c 	orr.w	r2, r2, ip
 80130e4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80130e8:	432a      	orrs	r2, r5
 80130ea:	e7cc      	b.n	8013086 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x136>
 80130ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80130ee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80130f0:	881b      	ldrh	r3, [r3, #0]
 80130f2:	1b9b      	subs	r3, r3, r6
 80130f4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80130f8:	4418      	add	r0, r3
 80130fa:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80130fe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013100:	1b9b      	subs	r3, r3, r6
 8013102:	4413      	add	r3, r2
 8013104:	4499      	add	r9, r3
 8013106:	f10e 0e01 	add.w	lr, lr, #1
 801310a:	e79c      	b.n	8013046 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf6>
 801310c:	4b05      	ldr	r3, [pc, #20]	; (8013124 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 801310e:	6818      	ldr	r0, [r3, #0]
 8013110:	6803      	ldr	r3, [r0, #0]
 8013112:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013114:	4798      	blx	r3
 8013116:	e77b      	b.n	8013010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8013118:	0801eb9b 	.word	0x0801eb9b
 801311c:	0801f26d 	.word	0x0801f26d
 8013120:	0801ed93 	.word	0x0801ed93
 8013124:	20026900 	.word	0x20026900
 8013128:	200268fa 	.word	0x200268fa
 801312c:	fffff800 	.word	0xfffff800

08013130 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8013130:	b430      	push	{r4, r5}
 8013132:	780d      	ldrb	r5, [r1, #0]
 8013134:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8013138:	2d01      	cmp	r5, #1
 801313a:	d00a      	beq.n	8013152 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801313c:	d305      	bcc.n	801314a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801313e:	2d02      	cmp	r5, #2
 8013140:	d10b      	bne.n	801315a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8013142:	9402      	str	r4, [sp, #8]
 8013144:	bc30      	pop	{r4, r5}
 8013146:	f7ff bdf9 	b.w	8012d3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801314a:	9402      	str	r4, [sp, #8]
 801314c:	bc30      	pop	{r4, r5}
 801314e:	f7ff bcfd 	b.w	8012b4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8013152:	9402      	str	r4, [sp, #8]
 8013154:	bc30      	pop	{r4, r5}
 8013156:	f7ff befb 	b.w	8012f50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801315a:	bc30      	pop	{r4, r5}
 801315c:	4770      	bx	lr
	...

08013160 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8013160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013164:	4605      	mov	r5, r0
 8013166:	b089      	sub	sp, #36	; 0x24
 8013168:	6810      	ldr	r0, [r2, #0]
 801316a:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 801316e:	460c      	mov	r4, r1
 8013170:	6851      	ldr	r1, [r2, #4]
 8013172:	ae04      	add	r6, sp, #16
 8013174:	c603      	stmia	r6!, {r0, r1}
 8013176:	6818      	ldr	r0, [r3, #0]
 8013178:	6859      	ldr	r1, [r3, #4]
 801317a:	ae06      	add	r6, sp, #24
 801317c:	4617      	mov	r7, r2
 801317e:	c603      	stmia	r6!, {r0, r1}
 8013180:	a804      	add	r0, sp, #16
 8013182:	f7fa fcab 	bl	800dadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013186:	4639      	mov	r1, r7
 8013188:	a806      	add	r0, sp, #24
 801318a:	f7fa fc8f 	bl	800daac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801318e:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8013192:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013196:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801319a:	f9bd 801c 	ldrsh.w	r8, [sp, #28]
 801319e:	fb11 2103 	smlabb	r1, r1, r3, r2
 80131a2:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 80131a6:	440c      	add	r4, r1
 80131a8:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 80131ac:	440a      	add	r2, r1
 80131ae:	f8ad 2018 	strh.w	r2, [sp, #24]
 80131b2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80131b6:	4413      	add	r3, r2
 80131b8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80131bc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80131c0:	9300      	str	r3, [sp, #0]
 80131c2:	4b80      	ldr	r3, [pc, #512]	; (80133c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 80131c4:	6818      	ldr	r0, [r3, #0]
 80131c6:	6803      	ldr	r3, [r0, #0]
 80131c8:	6a1b      	ldr	r3, [r3, #32]
 80131ca:	4798      	blx	r3
 80131cc:	4b7e      	ldr	r3, [pc, #504]	; (80133c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x268>)
 80131ce:	f9bd 601a 	ldrsh.w	r6, [sp, #26]
 80131d2:	881a      	ldrh	r2, [r3, #0]
 80131d4:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 80131d8:	fb06 1202 	mla	r2, r6, r2, r1
 80131dc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80131e0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80131e4:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
 80131e8:	b212      	sxth	r2, r2
 80131ea:	d117      	bne.n	801321c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xbc>
 80131ec:	9201      	str	r2, [sp, #4]
 80131ee:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 80131f2:	f04f 0a00 	mov.w	sl, #0
 80131f6:	9302      	str	r3, [sp, #8]
 80131f8:	9b00      	ldr	r3, [sp, #0]
 80131fa:	459a      	cmp	sl, r3
 80131fc:	f280 80d9 	bge.w	80133b2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 8013200:	2100      	movs	r1, #0
 8013202:	4541      	cmp	r1, r8
 8013204:	f280 80c1 	bge.w	801338a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x22a>
 8013208:	5c63      	ldrb	r3, [r4, r1]
 801320a:	b12b      	cbz	r3, 8013218 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 801320c:	2bff      	cmp	r3, #255	; 0xff
 801320e:	f835 e011 	ldrh.w	lr, [r5, r1, lsl #1]
 8013212:	d176      	bne.n	8013302 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x1a2>
 8013214:	f820 e011 	strh.w	lr, [r0, r1, lsl #1]
 8013218:	3101      	adds	r1, #1
 801321a:	e7f2      	b.n	8013202 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa2>
 801321c:	9202      	str	r2, [sp, #8]
 801321e:	0052      	lsls	r2, r2, #1
 8013220:	9201      	str	r2, [sp, #4]
 8013222:	f04f 0b00 	mov.w	fp, #0
 8013226:	9303      	str	r3, [sp, #12]
 8013228:	9b00      	ldr	r3, [sp, #0]
 801322a:	459b      	cmp	fp, r3
 801322c:	f280 80c1 	bge.w	80133b2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 8013230:	f04f 0c00 	mov.w	ip, #0
 8013234:	45c4      	cmp	ip, r8
 8013236:	da4f      	bge.n	80132d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x178>
 8013238:	f814 300c 	ldrb.w	r3, [r4, ip]
 801323c:	2b00      	cmp	r3, #0
 801323e:	d048      	beq.n	80132d2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 8013240:	fb09 f303 	mul.w	r3, r9, r3
 8013244:	1c5a      	adds	r2, r3, #1
 8013246:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801324a:	121b      	asrs	r3, r3, #8
 801324c:	d041      	beq.n	80132d2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 801324e:	f830 201c 	ldrh.w	r2, [r0, ip, lsl #1]
 8013252:	f835 e01c 	ldrh.w	lr, [r5, ip, lsl #1]
 8013256:	b29e      	uxth	r6, r3
 8013258:	1211      	asrs	r1, r2, #8
 801325a:	43db      	mvns	r3, r3
 801325c:	b2db      	uxtb	r3, r3
 801325e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013262:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013266:	fb11 f103 	smulbb	r1, r1, r3
 801326a:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801326e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013272:	00d2      	lsls	r2, r2, #3
 8013274:	fb07 1706 	mla	r7, r7, r6, r1
 8013278:	b2d2      	uxtb	r2, r2
 801327a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801327e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013282:	fb12 f203 	smulbb	r2, r2, r3
 8013286:	fa5f fe8e 	uxtb.w	lr, lr
 801328a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801328e:	fb0e 2206 	mla	r2, lr, r6, r2
 8013292:	fb1a fa03 	smulbb	sl, sl, r3
 8013296:	b2bf      	uxth	r7, r7
 8013298:	b292      	uxth	r2, r2
 801329a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801329e:	fb01 a106 	mla	r1, r1, r6, sl
 80132a2:	1c7b      	adds	r3, r7, #1
 80132a4:	f102 0a01 	add.w	sl, r2, #1
 80132a8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80132ac:	eb0a 2a12 	add.w	sl, sl, r2, lsr #8
 80132b0:	b289      	uxth	r1, r1
 80132b2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80132b6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80132ba:	ea47 070a 	orr.w	r7, r7, sl
 80132be:	f101 0a01 	add.w	sl, r1, #1
 80132c2:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 80132c6:	0949      	lsrs	r1, r1, #5
 80132c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80132cc:	430f      	orrs	r7, r1
 80132ce:	f820 701c 	strh.w	r7, [r0, ip, lsl #1]
 80132d2:	f10c 0c01 	add.w	ip, ip, #1
 80132d6:	e7ad      	b.n	8013234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xd4>
 80132d8:	9b03      	ldr	r3, [sp, #12]
 80132da:	9a01      	ldr	r2, [sp, #4]
 80132dc:	881b      	ldrh	r3, [r3, #0]
 80132de:	eba3 0308 	sub.w	r3, r3, r8
 80132e2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80132e6:	4418      	add	r0, r3
 80132e8:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80132ec:	eba3 0308 	sub.w	r3, r3, r8
 80132f0:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80132f4:	4415      	add	r5, r2
 80132f6:	9a02      	ldr	r2, [sp, #8]
 80132f8:	4413      	add	r3, r2
 80132fa:	441c      	add	r4, r3
 80132fc:	f10b 0b01 	add.w	fp, fp, #1
 8013300:	e792      	b.n	8013228 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xc8>
 8013302:	f830 2011 	ldrh.w	r2, [r0, r1, lsl #1]
 8013306:	b29f      	uxth	r7, r3
 8013308:	1216      	asrs	r6, r2, #8
 801330a:	43db      	mvns	r3, r3
 801330c:	b2db      	uxtb	r3, r3
 801330e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013312:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013316:	fb16 f603 	smulbb	r6, r6, r3
 801331a:	ea4f 09e2 	mov.w	r9, r2, asr #3
 801331e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013322:	00d2      	lsls	r2, r2, #3
 8013324:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013328:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801332c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013330:	b2d2      	uxtb	r2, r2
 8013332:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013336:	fa1f fc8c 	uxth.w	ip, ip
 801333a:	fb19 f903 	smulbb	r9, r9, r3
 801333e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013342:	fa5f fe8e 	uxtb.w	lr, lr
 8013346:	fb12 f203 	smulbb	r2, r2, r3
 801334a:	fb06 9607 	mla	r6, r6, r7, r9
 801334e:	fb0e 2207 	mla	r2, lr, r7, r2
 8013352:	f10c 0901 	add.w	r9, ip, #1
 8013356:	b292      	uxth	r2, r2
 8013358:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801335c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8013360:	f102 0c01 	add.w	ip, r2, #1
 8013364:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8013368:	b2b6      	uxth	r6, r6
 801336a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801336e:	ea49 0c02 	orr.w	ip, r9, r2
 8013372:	f106 0901 	add.w	r9, r6, #1
 8013376:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801337a:	0976      	lsrs	r6, r6, #5
 801337c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013380:	ea4c 0c06 	orr.w	ip, ip, r6
 8013384:	f820 c011 	strh.w	ip, [r0, r1, lsl #1]
 8013388:	e746      	b.n	8013218 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 801338a:	9b02      	ldr	r3, [sp, #8]
 801338c:	881b      	ldrh	r3, [r3, #0]
 801338e:	eba3 0308 	sub.w	r3, r3, r8
 8013392:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 8013396:	4418      	add	r0, r3
 8013398:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801339c:	eba3 0308 	sub.w	r3, r3, r8
 80133a0:	eb0b 0243 	add.w	r2, fp, r3, lsl #1
 80133a4:	4415      	add	r5, r2
 80133a6:	9a01      	ldr	r2, [sp, #4]
 80133a8:	4413      	add	r3, r2
 80133aa:	441c      	add	r4, r3
 80133ac:	f10a 0a01 	add.w	sl, sl, #1
 80133b0:	e722      	b.n	80131f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x98>
 80133b2:	4b04      	ldr	r3, [pc, #16]	; (80133c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 80133b4:	6818      	ldr	r0, [r3, #0]
 80133b6:	6803      	ldr	r3, [r0, #0]
 80133b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80133ba:	4798      	blx	r3
 80133bc:	b009      	add	sp, #36	; 0x24
 80133be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80133c2:	bf00      	nop
 80133c4:	20026900 	.word	0x20026900
 80133c8:	200268fa 	.word	0x200268fa

080133cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80133cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133d0:	b089      	sub	sp, #36	; 0x24
 80133d2:	4682      	mov	sl, r0
 80133d4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80133d8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80133da:	460d      	mov	r5, r1
 80133dc:	4691      	mov	r9, r2
 80133de:	4698      	mov	r8, r3
 80133e0:	b3ae      	cbz	r6, 801344e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80133e2:	4608      	mov	r0, r1
 80133e4:	f7fc fa8c 	bl	800f900 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80133e8:	4607      	mov	r7, r0
 80133ea:	4628      	mov	r0, r5
 80133ec:	f7fc fac2 	bl	800f974 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80133f0:	f8ad 000e 	strh.w	r0, [sp, #14]
 80133f4:	4628      	mov	r0, r5
 80133f6:	f8ad 9008 	strh.w	r9, [sp, #8]
 80133fa:	f8ad 800a 	strh.w	r8, [sp, #10]
 80133fe:	f8ad 700c 	strh.w	r7, [sp, #12]
 8013402:	f7fc fc09 	bl	800fc18 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013406:	b178      	cbz	r0, 8013428 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8013408:	4628      	mov	r0, r5
 801340a:	f7fc fc05 	bl	800fc18 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801340e:	2802      	cmp	r0, #2
 8013410:	d00a      	beq.n	8013428 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8013412:	4628      	mov	r0, r5
 8013414:	f7fc fc00 	bl	800fc18 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013418:	280b      	cmp	r0, #11
 801341a:	d005      	beq.n	8013428 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 801341c:	4b69      	ldr	r3, [pc, #420]	; (80135c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 801341e:	4a6a      	ldr	r2, [pc, #424]	; (80135c8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 8013420:	486a      	ldr	r0, [pc, #424]	; (80135cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 8013422:	214f      	movs	r1, #79	; 0x4f
 8013424:	f007 ff24 	bl	801b270 <__assert_func>
 8013428:	4628      	mov	r0, r5
 801342a:	f7fc fb71 	bl	800fb10 <_ZNK8touchgfx6Bitmap7getDataEv>
 801342e:	4607      	mov	r7, r0
 8013430:	4628      	mov	r0, r5
 8013432:	f7fc fb9f 	bl	800fb74 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8013436:	4681      	mov	r9, r0
 8013438:	4628      	mov	r0, r5
 801343a:	f7fc fbed 	bl	800fc18 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801343e:	2802      	cmp	r0, #2
 8013440:	d108      	bne.n	8013454 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8013442:	4633      	mov	r3, r6
 8013444:	4622      	mov	r2, r4
 8013446:	a902      	add	r1, sp, #8
 8013448:	4638      	mov	r0, r7
 801344a:	f7ff fa6d 	bl	8012928 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801344e:	b009      	add	sp, #36	; 0x24
 8013450:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013454:	4628      	mov	r0, r5
 8013456:	f7fc fbdf 	bl	800fc18 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801345a:	280b      	cmp	r0, #11
 801345c:	d107      	bne.n	801346e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 801345e:	9600      	str	r6, [sp, #0]
 8013460:	4623      	mov	r3, r4
 8013462:	aa02      	add	r2, sp, #8
 8013464:	4649      	mov	r1, r9
 8013466:	4638      	mov	r0, r7
 8013468:	f7ff fe62 	bl	8013130 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801346c:	e7ef      	b.n	801344e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801346e:	4628      	mov	r0, r5
 8013470:	f7fc fb14 	bl	800fa9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013474:	b950      	cbnz	r0, 801348c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8013476:	e9cd 6000 	strd	r6, r0, [sp]
 801347a:	f8da 3000 	ldr.w	r3, [sl]
 801347e:	aa02      	add	r2, sp, #8
 8013480:	691d      	ldr	r5, [r3, #16]
 8013482:	4639      	mov	r1, r7
 8013484:	4623      	mov	r3, r4
 8013486:	4650      	mov	r0, sl
 8013488:	47a8      	blx	r5
 801348a:	e7e0      	b.n	801344e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801348c:	f10d 0818 	add.w	r8, sp, #24
 8013490:	4629      	mov	r1, r5
 8013492:	4640      	mov	r0, r8
 8013494:	f7fc faa8 	bl	800f9e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013498:	e898 0003 	ldmia.w	r8, {r0, r1}
 801349c:	ad04      	add	r5, sp, #16
 801349e:	e885 0003 	stmia.w	r5, {r0, r1}
 80134a2:	4628      	mov	r0, r5
 80134a4:	4621      	mov	r1, r4
 80134a6:	f7f9 f865 	bl	800c574 <_ZN8touchgfx4RectaNERKS0_>
 80134aa:	4628      	mov	r0, r5
 80134ac:	f7f9 f8a6 	bl	800c5fc <_ZNK8touchgfx4Rect7isEmptyEv>
 80134b0:	b138      	cbz	r0, 80134c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 80134b2:	9600      	str	r6, [sp, #0]
 80134b4:	4623      	mov	r3, r4
 80134b6:	aa02      	add	r2, sp, #8
 80134b8:	4649      	mov	r1, r9
 80134ba:	4638      	mov	r0, r7
 80134bc:	f7ff fe50 	bl	8013160 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80134c0:	e7c5      	b.n	801344e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80134c2:	e9cd 6000 	strd	r6, r0, [sp]
 80134c6:	f8da 3000 	ldr.w	r3, [sl]
 80134ca:	aa02      	add	r2, sp, #8
 80134cc:	f8d3 b010 	ldr.w	fp, [r3, #16]
 80134d0:	4639      	mov	r1, r7
 80134d2:	462b      	mov	r3, r5
 80134d4:	4650      	mov	r0, sl
 80134d6:	47d8      	blx	fp
 80134d8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80134dc:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80134e0:	4293      	cmp	r3, r2
 80134e2:	dd13      	ble.n	801350c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 80134e4:	f9b4 0000 	ldrsh.w	r0, [r4]
 80134e8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80134ec:	f8ad 0018 	strh.w	r0, [sp, #24]
 80134f0:	1a9b      	subs	r3, r3, r2
 80134f2:	f8ad 201a 	strh.w	r2, [sp, #26]
 80134f6:	f8ad 101c 	strh.w	r1, [sp, #28]
 80134fa:	f8ad 301e 	strh.w	r3, [sp, #30]
 80134fe:	9600      	str	r6, [sp, #0]
 8013500:	4643      	mov	r3, r8
 8013502:	aa02      	add	r2, sp, #8
 8013504:	4649      	mov	r1, r9
 8013506:	4638      	mov	r0, r7
 8013508:	f7ff fe2a 	bl	8013160 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801350c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013510:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013514:	4293      	cmp	r3, r2
 8013516:	dd13      	ble.n	8013540 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8013518:	1a9b      	subs	r3, r3, r2
 801351a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801351e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013522:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013526:	f8ad 001a 	strh.w	r0, [sp, #26]
 801352a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801352e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013532:	9600      	str	r6, [sp, #0]
 8013534:	4643      	mov	r3, r8
 8013536:	aa02      	add	r2, sp, #8
 8013538:	4649      	mov	r1, r9
 801353a:	4638      	mov	r0, r7
 801353c:	f7ff fe10 	bl	8013160 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013540:	88a2      	ldrh	r2, [r4, #4]
 8013542:	8823      	ldrh	r3, [r4, #0]
 8013544:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013548:	4413      	add	r3, r2
 801354a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801354e:	440a      	add	r2, r1
 8013550:	b29b      	uxth	r3, r3
 8013552:	b292      	uxth	r2, r2
 8013554:	b211      	sxth	r1, r2
 8013556:	b218      	sxth	r0, r3
 8013558:	4288      	cmp	r0, r1
 801355a:	dd13      	ble.n	8013584 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 801355c:	1a9b      	subs	r3, r3, r2
 801355e:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013562:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 8013566:	f8ad 1018 	strh.w	r1, [sp, #24]
 801356a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801356e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013572:	9600      	str	r6, [sp, #0]
 8013574:	4643      	mov	r3, r8
 8013576:	aa02      	add	r2, sp, #8
 8013578:	4649      	mov	r1, r9
 801357a:	4638      	mov	r0, r7
 801357c:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013580:	f7ff fdee 	bl	8013160 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013584:	88e2      	ldrh	r2, [r4, #6]
 8013586:	8863      	ldrh	r3, [r4, #2]
 8013588:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801358c:	4413      	add	r3, r2
 801358e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013592:	440a      	add	r2, r1
 8013594:	b29b      	uxth	r3, r3
 8013596:	b292      	uxth	r2, r2
 8013598:	b211      	sxth	r1, r2
 801359a:	b218      	sxth	r0, r3
 801359c:	4288      	cmp	r0, r1
 801359e:	f77f af56 	ble.w	801344e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80135a2:	f9b4 5000 	ldrsh.w	r5, [r4]
 80135a6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80135aa:	f8ad 5018 	strh.w	r5, [sp, #24]
 80135ae:	1a9b      	subs	r3, r3, r2
 80135b0:	f8ad 301e 	strh.w	r3, [sp, #30]
 80135b4:	f8ad 101a 	strh.w	r1, [sp, #26]
 80135b8:	f8ad 001c 	strh.w	r0, [sp, #28]
 80135bc:	9600      	str	r6, [sp, #0]
 80135be:	4643      	mov	r3, r8
 80135c0:	e779      	b.n	80134b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 80135c2:	bf00      	nop
 80135c4:	0801ebe9 	.word	0x0801ebe9
 80135c8:	0801f2f6 	.word	0x0801f2f6
 80135cc:	0801ed93 	.word	0x0801ed93

080135d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80135d0:	b508      	push	{r3, lr}
 80135d2:	b180      	cbz	r0, 80135f6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 80135d4:	2902      	cmp	r1, #2
 80135d6:	d014      	beq.n	8013602 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 80135d8:	2903      	cmp	r1, #3
 80135da:	d01d      	beq.n	8013618 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 80135dc:	2901      	cmp	r1, #1
 80135de:	d101      	bne.n	80135e4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 80135e0:	2001      	movs	r0, #1
 80135e2:	bd08      	pop	{r3, pc}
 80135e4:	4b0e      	ldr	r3, [pc, #56]	; (8013620 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80135e6:	8818      	ldrh	r0, [r3, #0]
 80135e8:	b990      	cbnz	r0, 8013610 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80135ea:	4b0e      	ldr	r3, [pc, #56]	; (8013624 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 80135ec:	4a0e      	ldr	r2, [pc, #56]	; (8013628 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 80135ee:	480f      	ldr	r0, [pc, #60]	; (801362c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 80135f0:	21d7      	movs	r1, #215	; 0xd7
 80135f2:	f007 fe3d 	bl	801b270 <__assert_func>
 80135f6:	2902      	cmp	r1, #2
 80135f8:	d00e      	beq.n	8013618 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 80135fa:	2903      	cmp	r1, #3
 80135fc:	d0f2      	beq.n	80135e4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 80135fe:	2901      	cmp	r1, #1
 8013600:	d1ee      	bne.n	80135e0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8013602:	4b07      	ldr	r3, [pc, #28]	; (8013620 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013604:	8818      	ldrh	r0, [r3, #0]
 8013606:	2800      	cmp	r0, #0
 8013608:	d0ef      	beq.n	80135ea <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 801360a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801360e:	e7e8      	b.n	80135e2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013610:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013614:	4240      	negs	r0, r0
 8013616:	e7e4      	b.n	80135e2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013618:	f04f 30ff 	mov.w	r0, #4294967295
 801361c:	e7e1      	b.n	80135e2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801361e:	bf00      	nop
 8013620:	200268fa 	.word	0x200268fa
 8013624:	0801eeed 	.word	0x0801eeed
 8013628:	0801f473 	.word	0x0801f473
 801362c:	0801ef2f 	.word	0x0801ef2f

08013630 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8013630:	b508      	push	{r3, lr}
 8013632:	b180      	cbz	r0, 8013656 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8013634:	2902      	cmp	r1, #2
 8013636:	d014      	beq.n	8013662 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8013638:	2903      	cmp	r1, #3
 801363a:	d018      	beq.n	801366e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801363c:	2901      	cmp	r1, #1
 801363e:	d001      	beq.n	8013644 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013640:	2001      	movs	r0, #1
 8013642:	e013      	b.n	801366c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013644:	4b0e      	ldr	r3, [pc, #56]	; (8013680 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013646:	8818      	ldrh	r0, [r3, #0]
 8013648:	b970      	cbnz	r0, 8013668 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 801364a:	4b0e      	ldr	r3, [pc, #56]	; (8013684 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 801364c:	4a0e      	ldr	r2, [pc, #56]	; (8013688 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 801364e:	480f      	ldr	r0, [pc, #60]	; (801368c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8013650:	21d7      	movs	r1, #215	; 0xd7
 8013652:	f007 fe0d 	bl	801b270 <__assert_func>
 8013656:	2902      	cmp	r1, #2
 8013658:	d009      	beq.n	801366e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801365a:	2903      	cmp	r1, #3
 801365c:	d0f0      	beq.n	8013640 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 801365e:	2901      	cmp	r1, #1
 8013660:	d1f0      	bne.n	8013644 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013662:	f04f 30ff 	mov.w	r0, #4294967295
 8013666:	e001      	b.n	801366c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013668:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801366c:	bd08      	pop	{r3, pc}
 801366e:	4b04      	ldr	r3, [pc, #16]	; (8013680 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013670:	8818      	ldrh	r0, [r3, #0]
 8013672:	2800      	cmp	r0, #0
 8013674:	d0e9      	beq.n	801364a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8013676:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801367a:	4240      	negs	r0, r0
 801367c:	e7f6      	b.n	801366c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801367e:	bf00      	nop
 8013680:	200268fa 	.word	0x200268fa
 8013684:	0801eeed 	.word	0x0801eeed
 8013688:	0801f473 	.word	0x0801f473
 801368c:	0801ef2f 	.word	0x0801ef2f

08013690 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8013690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013694:	b097      	sub	sp, #92	; 0x5c
 8013696:	9109      	str	r1, [sp, #36]	; 0x24
 8013698:	a912      	add	r1, sp, #72	; 0x48
 801369a:	e881 000c 	stmia.w	r1, {r2, r3}
 801369e:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 80136a2:	9306      	str	r3, [sp, #24]
 80136a4:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 80136a8:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80136ac:	930e      	str	r3, [sp, #56]	; 0x38
 80136ae:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 80136b2:	930a      	str	r3, [sp, #40]	; 0x28
 80136b4:	7b4b      	ldrb	r3, [r1, #13]
 80136b6:	798f      	ldrb	r7, [r1, #6]
 80136b8:	f9bd 4080 	ldrsh.w	r4, [sp, #128]	; 0x80
 80136bc:	f8bd 6088 	ldrh.w	r6, [sp, #136]	; 0x88
 80136c0:	f8bd 508c 	ldrh.w	r5, [sp, #140]	; 0x8c
 80136c4:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 80136c8:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80136cc:	0158      	lsls	r0, r3, #5
 80136ce:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80136d2:	4338      	orrs	r0, r7
 80136d4:	9008      	str	r0, [sp, #32]
 80136d6:	f000 8149 	beq.w	801396c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 80136da:	011b      	lsls	r3, r3, #4
 80136dc:	79c8      	ldrb	r0, [r1, #7]
 80136de:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80136e2:	4303      	orrs	r3, r0
 80136e4:	9307      	str	r3, [sp, #28]
 80136e6:	f000 8141 	beq.w	801396c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 80136ea:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80136ee:	b29b      	uxth	r3, r3
 80136f0:	2e00      	cmp	r6, #0
 80136f2:	f000 80e5 	beq.w	80138c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x230>
 80136f6:	1af6      	subs	r6, r6, r3
 80136f8:	b2b6      	uxth	r6, r6
 80136fa:	0433      	lsls	r3, r6, #16
 80136fc:	d502      	bpl.n	8013704 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 80136fe:	1ba4      	subs	r4, r4, r6
 8013700:	b224      	sxth	r4, r4
 8013702:	2600      	movs	r6, #0
 8013704:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013708:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 801370c:	f8bd 7020 	ldrh.w	r7, [sp, #32]
 8013710:	428c      	cmp	r4, r1
 8013712:	b28b      	uxth	r3, r1
 8013714:	bfbf      	itttt	lt
 8013716:	18f6      	addlt	r6, r6, r3
 8013718:	1b34      	sublt	r4, r6, r4
 801371a:	b2a6      	uxthlt	r6, r4
 801371c:	460c      	movlt	r4, r1
 801371e:	8891      	ldrh	r1, [r2, #4]
 8013720:	440b      	add	r3, r1
 8013722:	b21b      	sxth	r3, r3
 8013724:	930d      	str	r3, [sp, #52]	; 0x34
 8013726:	88d3      	ldrh	r3, [r2, #6]
 8013728:	9a06      	ldr	r2, [sp, #24]
 801372a:	449a      	add	sl, r3
 801372c:	fa0f f38a 	sxth.w	r3, sl
 8013730:	930c      	str	r3, [sp, #48]	; 0x30
 8013732:	4bb5      	ldr	r3, [pc, #724]	; (8013a08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 8013734:	f8bd a01c 	ldrh.w	sl, [sp, #28]
 8013738:	f893 9000 	ldrb.w	r9, [r3]
 801373c:	f109 3cff 	add.w	ip, r9, #4294967295
 8013740:	f1dc 0300 	rsbs	r3, ip, #0
 8013744:	eb43 030c 	adc.w	r3, r3, ip
 8013748:	930b      	str	r3, [sp, #44]	; 0x2c
 801374a:	4621      	mov	r1, r4
 801374c:	465b      	mov	r3, fp
 801374e:	a812      	add	r0, sp, #72	; 0x48
 8013750:	f7fa f89d 	bl	800d88e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8013754:	4621      	mov	r1, r4
 8013756:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 801375a:	465b      	mov	r3, fp
 801375c:	9a06      	ldr	r2, [sp, #24]
 801375e:	a812      	add	r0, sp, #72	; 0x48
 8013760:	f7fa f8ad 	bl	800d8be <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8013764:	a916      	add	r1, sp, #88	; 0x58
 8013766:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801376a:	a815      	add	r0, sp, #84	; 0x54
 801376c:	f7fa f988 	bl	800da80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8013770:	f1bb 0f00 	cmp.w	fp, #0
 8013774:	f040 80a7 	bne.w	80138c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x236>
 8013778:	f1b9 0f01 	cmp.w	r9, #1
 801377c:	f040 80ab 	bne.w	80138d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x246>
 8013780:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013782:	2b00      	cmp	r3, #0
 8013784:	f040 80f7 	bne.w	8013976 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e6>
 8013788:	4ba0      	ldr	r3, [pc, #640]	; (8013a0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 801378a:	6818      	ldr	r0, [r3, #0]
 801378c:	6803      	ldr	r3, [r0, #0]
 801378e:	6a1b      	ldr	r3, [r3, #32]
 8013790:	4798      	blx	r3
 8013792:	4a9f      	ldr	r2, [pc, #636]	; (8013a10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8013794:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8013798:	8811      	ldrh	r1, [r2, #0]
 801379a:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 801379e:	fb01 2303 	mla	r3, r1, r3, r2
 80137a2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80137a6:	f04f 0901 	mov.w	r9, #1
 80137aa:	9307      	str	r3, [sp, #28]
 80137ac:	fa09 f308 	lsl.w	r3, r9, r8
 80137b0:	3b01      	subs	r3, #1
 80137b2:	b2db      	uxtb	r3, r3
 80137b4:	45c8      	cmp	r8, r9
 80137b6:	930f      	str	r3, [sp, #60]	; 0x3c
 80137b8:	f000 80df 	beq.w	801397a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ea>
 80137bc:	f1b8 0f02 	cmp.w	r8, #2
 80137c0:	f000 8153 	beq.w	8013a6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3da>
 80137c4:	f1b8 0f04 	cmp.w	r8, #4
 80137c8:	f000 8146 	beq.w	8013a58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c8>
 80137cc:	b906      	cbnz	r6, 80137d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x140>
 80137ce:	b175      	cbz	r5, 80137ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15e>
 80137d0:	fb17 6305 	smlabb	r3, r7, r5, r6
 80137d4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80137d6:	fb13 f308 	smulbb	r3, r3, r8
 80137da:	b29b      	uxth	r3, r3
 80137dc:	ebaa 0a05 	sub.w	sl, sl, r5
 80137e0:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 80137e4:	9226      	str	r2, [sp, #152]	; 0x98
 80137e6:	fa1f fa8a 	uxth.w	sl, sl
 80137ea:	f003 0507 	and.w	r5, r3, #7
 80137ee:	4659      	mov	r1, fp
 80137f0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80137f2:	f7ff feed 	bl	80135d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80137f6:	4659      	mov	r1, fp
 80137f8:	9010      	str	r0, [sp, #64]	; 0x40
 80137fa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80137fc:	f7ff ff18 	bl	8013630 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8013800:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013802:	9a06      	ldr	r2, [sp, #24]
 8013804:	1a9a      	subs	r2, r3, r2
 8013806:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013808:	1ba4      	subs	r4, r4, r6
 801380a:	1b1c      	subs	r4, r3, r4
 801380c:	9b08      	ldr	r3, [sp, #32]
 801380e:	4592      	cmp	sl, r2
 8013810:	bfa8      	it	ge
 8013812:	4692      	movge	sl, r2
 8013814:	429c      	cmp	r4, r3
 8013816:	bfd4      	ite	le
 8013818:	ebc6 0604 	rsble	r6, r6, r4
 801381c:	ebc6 0603 	rsbgt	r6, r6, r3
 8013820:	1bbf      	subs	r7, r7, r6
 8013822:	fb08 f307 	mul.w	r3, r8, r7
 8013826:	930b      	str	r3, [sp, #44]	; 0x2c
 8013828:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801382a:	781a      	ldrb	r2, [r3, #0]
 801382c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801382e:	1219      	asrs	r1, r3, #8
 8013830:	f001 03f8 	and.w	r3, r1, #248	; 0xf8
 8013834:	930c      	str	r3, [sp, #48]	; 0x30
 8013836:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013838:	f3c3 01cc 	ubfx	r1, r3, #3, #13
 801383c:	f001 03fc 	and.w	r3, r1, #252	; 0xfc
 8013840:	930d      	str	r3, [sp, #52]	; 0x34
 8013842:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013844:	00d9      	lsls	r1, r3, #3
 8013846:	f001 03f8 	and.w	r3, r1, #248	; 0xf8
 801384a:	930e      	str	r3, [sp, #56]	; 0x38
 801384c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801384e:	0059      	lsls	r1, r3, #1
 8013850:	fb03 0016 	mls	r0, r3, r6, r0
 8013854:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 8013858:	434b      	muls	r3, r1
 801385a:	9106      	str	r1, [sp, #24]
 801385c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801385e:	412a      	asrs	r2, r5
 8013860:	b289      	uxth	r1, r1
 8013862:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8013866:	b2d2      	uxtb	r2, r2
 8013868:	9110      	str	r1, [sp, #64]	; 0x40
 801386a:	9311      	str	r3, [sp, #68]	; 0x44
 801386c:	f1ba 0f00 	cmp.w	sl, #0
 8013870:	f340 80e4 	ble.w	8013a3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8013874:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8013878:	46b6      	mov	lr, r6
 801387a:	f1be 0f00 	cmp.w	lr, #0
 801387e:	f340 80c9 	ble.w	8013a14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>
 8013882:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013884:	4013      	ands	r3, r2
 8013886:	d009      	beq.n	801389c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x20c>
 8013888:	fb13 f309 	smulbb	r3, r3, r9
 801388c:	2bfe      	cmp	r3, #254	; 0xfe
 801388e:	dd77      	ble.n	8013980 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>
 8013890:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013892:	29ff      	cmp	r1, #255	; 0xff
 8013894:	d174      	bne.n	8013980 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>
 8013896:	9810      	ldr	r0, [sp, #64]	; 0x40
 8013898:	f8ac 0000 	strh.w	r0, [ip]
 801389c:	4445      	add	r5, r8
 801389e:	b2ad      	uxth	r5, r5
 80138a0:	2d07      	cmp	r5, #7
 80138a2:	bf81      	itttt	hi
 80138a4:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 80138a6:	785a      	ldrbhi	r2, [r3, #1]
 80138a8:	3301      	addhi	r3, #1
 80138aa:	9326      	strhi	r3, [sp, #152]	; 0x98
 80138ac:	9b06      	ldr	r3, [sp, #24]
 80138ae:	bf9a      	itte	ls
 80138b0:	fa42 f208 	asrls.w	r2, r2, r8
 80138b4:	b2d2      	uxtbls	r2, r2
 80138b6:	2500      	movhi	r5, #0
 80138b8:	449c      	add	ip, r3
 80138ba:	f10e 3eff 	add.w	lr, lr, #4294967295
 80138be:	e7dc      	b.n	801387a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ea>
 80138c0:	441c      	add	r4, r3
 80138c2:	b224      	sxth	r4, r4
 80138c4:	e71e      	b.n	8013704 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 80138c6:	f1bb 0f01 	cmp.w	fp, #1
 80138ca:	f47f af59 	bne.w	8013780 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80138ce:	f1b9 0f01 	cmp.w	r9, #1
 80138d2:	f47f af55 	bne.w	8013780 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80138d6:	f8df 9134 	ldr.w	r9, [pc, #308]	; 8013a0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 80138da:	f8d9 0000 	ldr.w	r0, [r9]
 80138de:	6803      	ldr	r3, [r0, #0]
 80138e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80138e2:	4798      	blx	r3
 80138e4:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 80138e8:	464a      	mov	r2, r9
 80138ea:	d006      	beq.n	80138fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 80138ec:	f1b8 0f04 	cmp.w	r8, #4
 80138f0:	d13f      	bne.n	8013972 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 80138f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80138f4:	3300      	adds	r3, #0
 80138f6:	bf18      	it	ne
 80138f8:	2301      	movne	r3, #1
 80138fa:	05c0      	lsls	r0, r0, #23
 80138fc:	f140 80a7 	bpl.w	8013a4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 8013900:	f1b8 0f08 	cmp.w	r8, #8
 8013904:	f040 80a3 	bne.w	8013a4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 8013908:	2b00      	cmp	r3, #0
 801390a:	bf0c      	ite	eq
 801390c:	f44f 7180 	moveq.w	r1, #256	; 0x100
 8013910:	2180      	movne	r1, #128	; 0x80
 8013912:	2e00      	cmp	r6, #0
 8013914:	f47f af34 	bne.w	8013780 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013918:	2d00      	cmp	r5, #0
 801391a:	f47f af31 	bne.w	8013780 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801391e:	9b08      	ldr	r3, [sp, #32]
 8013920:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013922:	18e3      	adds	r3, r4, r3
 8013924:	4283      	cmp	r3, r0
 8013926:	f73f af2b 	bgt.w	8013780 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801392a:	e9dd 0306 	ldrd	r0, r3, [sp, #24]
 801392e:	4403      	add	r3, r0
 8013930:	980c      	ldr	r0, [sp, #48]	; 0x30
 8013932:	4283      	cmp	r3, r0
 8013934:	f73f af24 	bgt.w	8013780 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013938:	6810      	ldr	r0, [r2, #0]
 801393a:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 801393e:	6804      	ldr	r4, [r0, #0]
 8013940:	9105      	str	r1, [sp, #20]
 8013942:	f1b8 0f08 	cmp.w	r8, #8
 8013946:	bf18      	it	ne
 8013948:	3701      	addne	r7, #1
 801394a:	990a      	ldr	r1, [sp, #40]	; 0x28
 801394c:	9104      	str	r1, [sp, #16]
 801394e:	bf18      	it	ne
 8013950:	f027 0701 	bicne.w	r7, r7, #1
 8013954:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013956:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 801395a:	bf18      	it	ne
 801395c:	b2bf      	uxthne	r7, r7
 801395e:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8013962:	e9cd 7a00 	strd	r7, sl, [sp]
 8013966:	9926      	ldr	r1, [sp, #152]	; 0x98
 8013968:	6c24      	ldr	r4, [r4, #64]	; 0x40
 801396a:	47a0      	blx	r4
 801396c:	b017      	add	sp, #92	; 0x5c
 801396e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013972:	2300      	movs	r3, #0
 8013974:	e7c1      	b.n	80138fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 8013976:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013978:	e70b      	b.n	8013792 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 801397a:	f04f 09ff 	mov.w	r9, #255	; 0xff
 801397e:	e725      	b.n	80137cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 8013980:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013982:	f8bc 4000 	ldrh.w	r4, [ip]
 8013986:	fb11 f303 	smulbb	r3, r1, r3
 801398a:	b29b      	uxth	r3, r3
 801398c:	1c59      	adds	r1, r3, #1
 801398e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8013992:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013996:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013998:	b29f      	uxth	r7, r3
 801399a:	1220      	asrs	r0, r4, #8
 801399c:	43db      	mvns	r3, r3
 801399e:	b2db      	uxtb	r3, r3
 80139a0:	fb11 f107 	smulbb	r1, r1, r7
 80139a4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80139a8:	fb00 1003 	mla	r0, r0, r3, r1
 80139ac:	b281      	uxth	r1, r0
 80139ae:	980d      	ldr	r0, [sp, #52]	; 0x34
 80139b0:	9108      	str	r1, [sp, #32]
 80139b2:	fb17 fb00 	smulbb	fp, r7, r0
 80139b6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80139b8:	10e1      	asrs	r1, r4, #3
 80139ba:	00e4      	lsls	r4, r4, #3
 80139bc:	fb17 f700 	smulbb	r7, r7, r0
 80139c0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80139c4:	b2e4      	uxtb	r4, r4
 80139c6:	fb01 b103 	mla	r1, r1, r3, fp
 80139ca:	fb04 7703 	mla	r7, r4, r3, r7
 80139ce:	9b08      	ldr	r3, [sp, #32]
 80139d0:	9808      	ldr	r0, [sp, #32]
 80139d2:	b2bf      	uxth	r7, r7
 80139d4:	3301      	adds	r3, #1
 80139d6:	f107 0b01 	add.w	fp, r7, #1
 80139da:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80139de:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 80139e2:	b289      	uxth	r1, r1
 80139e4:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80139e8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80139ec:	ea40 000b 	orr.w	r0, r0, fp
 80139f0:	f101 0b01 	add.w	fp, r1, #1
 80139f4:	eb0b 2b11 	add.w	fp, fp, r1, lsr #8
 80139f8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80139fc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013a00:	ea40 000b 	orr.w	r0, r0, fp
 8013a04:	e748      	b.n	8013898 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 8013a06:	bf00      	nop
 8013a08:	200268f8 	.word	0x200268f8
 8013a0c:	20026900 	.word	0x20026900
 8013a10:	200268fa 	.word	0x200268fa
 8013a14:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013a16:	b153      	cbz	r3, 8013a2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39e>
 8013a18:	441d      	add	r5, r3
 8013a1a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013a1c:	b2ad      	uxth	r5, r5
 8013a1e:	eb03 03d5 	add.w	r3, r3, r5, lsr #3
 8013a22:	f005 0507 	and.w	r5, r5, #7
 8013a26:	781a      	ldrb	r2, [r3, #0]
 8013a28:	9326      	str	r3, [sp, #152]	; 0x98
 8013a2a:	412a      	asrs	r2, r5
 8013a2c:	b2d2      	uxtb	r2, r2
 8013a2e:	9b07      	ldr	r3, [sp, #28]
 8013a30:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013a32:	440b      	add	r3, r1
 8013a34:	9307      	str	r3, [sp, #28]
 8013a36:	f10a 3aff 	add.w	sl, sl, #4294967295
 8013a3a:	e717      	b.n	801386c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1dc>
 8013a3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a3e:	2b00      	cmp	r3, #0
 8013a40:	d194      	bne.n	801396c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8013a42:	4b0b      	ldr	r3, [pc, #44]	; (8013a70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e0>)
 8013a44:	6818      	ldr	r0, [r3, #0]
 8013a46:	6803      	ldr	r3, [r0, #0]
 8013a48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013a4a:	4798      	blx	r3
 8013a4c:	e78e      	b.n	801396c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8013a4e:	2b00      	cmp	r3, #0
 8013a50:	f43f ae96 	beq.w	8013780 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013a54:	2180      	movs	r1, #128	; 0x80
 8013a56:	e75c      	b.n	8013912 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x282>
 8013a58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013a5a:	b11b      	cbz	r3, 8013a64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d4>
 8013a5c:	07fb      	lsls	r3, r7, #31
 8013a5e:	d501      	bpl.n	8013a64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d4>
 8013a60:	3701      	adds	r7, #1
 8013a62:	b2bf      	uxth	r7, r7
 8013a64:	f04f 0911 	mov.w	r9, #17
 8013a68:	e6b0      	b.n	80137cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 8013a6a:	f04f 0955 	mov.w	r9, #85	; 0x55
 8013a6e:	e6ad      	b.n	80137cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 8013a70:	20026900 	.word	0x20026900

08013a74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8013a74:	b538      	push	{r3, r4, r5, lr}
 8013a76:	4c15      	ldr	r4, [pc, #84]	; (8013acc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8013a78:	7823      	ldrb	r3, [r4, #0]
 8013a7a:	f3bf 8f5b 	dmb	ish
 8013a7e:	07da      	lsls	r2, r3, #31
 8013a80:	4605      	mov	r5, r0
 8013a82:	d40b      	bmi.n	8013a9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013a84:	4620      	mov	r0, r4
 8013a86:	f007 fbc9 	bl	801b21c <__cxa_guard_acquire>
 8013a8a:	b138      	cbz	r0, 8013a9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013a8c:	4620      	mov	r0, r4
 8013a8e:	f007 fbd1 	bl	801b234 <__cxa_guard_release>
 8013a92:	4a0f      	ldr	r2, [pc, #60]	; (8013ad0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013a94:	490f      	ldr	r1, [pc, #60]	; (8013ad4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8013a96:	4810      	ldr	r0, [pc, #64]	; (8013ad8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8013a98:	f007 fbb6 	bl	801b208 <__aeabi_atexit>
 8013a9c:	4c0f      	ldr	r4, [pc, #60]	; (8013adc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8013a9e:	7823      	ldrb	r3, [r4, #0]
 8013aa0:	f3bf 8f5b 	dmb	ish
 8013aa4:	07db      	lsls	r3, r3, #31
 8013aa6:	d40b      	bmi.n	8013ac0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8013aa8:	4620      	mov	r0, r4
 8013aaa:	f007 fbb7 	bl	801b21c <__cxa_guard_acquire>
 8013aae:	b138      	cbz	r0, 8013ac0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8013ab0:	4620      	mov	r0, r4
 8013ab2:	f007 fbbf 	bl	801b234 <__cxa_guard_release>
 8013ab6:	4a06      	ldr	r2, [pc, #24]	; (8013ad0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013ab8:	4909      	ldr	r1, [pc, #36]	; (8013ae0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8013aba:	480a      	ldr	r0, [pc, #40]	; (8013ae4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013abc:	f007 fba4 	bl	801b208 <__aeabi_atexit>
 8013ac0:	4b05      	ldr	r3, [pc, #20]	; (8013ad8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8013ac2:	612b      	str	r3, [r5, #16]
 8013ac4:	4b07      	ldr	r3, [pc, #28]	; (8013ae4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013ac6:	616b      	str	r3, [r5, #20]
 8013ac8:	bd38      	pop	{r3, r4, r5, pc}
 8013aca:	bf00      	nop
 8013acc:	200269ec 	.word	0x200269ec
 8013ad0:	20000000 	.word	0x20000000
 8013ad4:	0801212f 	.word	0x0801212f
 8013ad8:	20000060 	.word	0x20000060
 8013adc:	200269f0 	.word	0x200269f0
 8013ae0:	0801212d 	.word	0x0801212d
 8013ae4:	20000064 	.word	0x20000064

08013ae8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8013ae8:	b538      	push	{r3, r4, r5, lr}
 8013aea:	4c15      	ldr	r4, [pc, #84]	; (8013b40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8013aec:	7823      	ldrb	r3, [r4, #0]
 8013aee:	f3bf 8f5b 	dmb	ish
 8013af2:	07da      	lsls	r2, r3, #31
 8013af4:	4605      	mov	r5, r0
 8013af6:	d40b      	bmi.n	8013b10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013af8:	4620      	mov	r0, r4
 8013afa:	f007 fb8f 	bl	801b21c <__cxa_guard_acquire>
 8013afe:	b138      	cbz	r0, 8013b10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013b00:	4620      	mov	r0, r4
 8013b02:	f007 fb97 	bl	801b234 <__cxa_guard_release>
 8013b06:	4a0f      	ldr	r2, [pc, #60]	; (8013b44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013b08:	490f      	ldr	r1, [pc, #60]	; (8013b48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8013b0a:	4810      	ldr	r0, [pc, #64]	; (8013b4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013b0c:	f007 fb7c 	bl	801b208 <__aeabi_atexit>
 8013b10:	4c0f      	ldr	r4, [pc, #60]	; (8013b50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8013b12:	7823      	ldrb	r3, [r4, #0]
 8013b14:	f3bf 8f5b 	dmb	ish
 8013b18:	07db      	lsls	r3, r3, #31
 8013b1a:	d40b      	bmi.n	8013b34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013b1c:	4620      	mov	r0, r4
 8013b1e:	f007 fb7d 	bl	801b21c <__cxa_guard_acquire>
 8013b22:	b138      	cbz	r0, 8013b34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013b24:	4620      	mov	r0, r4
 8013b26:	f007 fb85 	bl	801b234 <__cxa_guard_release>
 8013b2a:	4a06      	ldr	r2, [pc, #24]	; (8013b44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013b2c:	4909      	ldr	r1, [pc, #36]	; (8013b54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8013b2e:	480a      	ldr	r0, [pc, #40]	; (8013b58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013b30:	f007 fb6a 	bl	801b208 <__aeabi_atexit>
 8013b34:	4b05      	ldr	r3, [pc, #20]	; (8013b4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013b36:	60ab      	str	r3, [r5, #8]
 8013b38:	4b07      	ldr	r3, [pc, #28]	; (8013b58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013b3a:	60eb      	str	r3, [r5, #12]
 8013b3c:	bd38      	pop	{r3, r4, r5, pc}
 8013b3e:	bf00      	nop
 8013b40:	200269c4 	.word	0x200269c4
 8013b44:	20000000 	.word	0x20000000
 8013b48:	08012133 	.word	0x08012133
 8013b4c:	20000038 	.word	0x20000038
 8013b50:	200269c8 	.word	0x200269c8
 8013b54:	08012131 	.word	0x08012131
 8013b58:	2000003c 	.word	0x2000003c

08013b5c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8013b5c:	b510      	push	{r4, lr}
 8013b5e:	4604      	mov	r4, r0
 8013b60:	f7ff ff88 	bl	8013a74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8013b64:	4620      	mov	r0, r4
 8013b66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013b6a:	f7ff bfbd 	b.w	8013ae8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08013b70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8013b70:	b538      	push	{r3, r4, r5, lr}
 8013b72:	4c15      	ldr	r4, [pc, #84]	; (8013bc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8013b74:	7823      	ldrb	r3, [r4, #0]
 8013b76:	f3bf 8f5b 	dmb	ish
 8013b7a:	07da      	lsls	r2, r3, #31
 8013b7c:	4605      	mov	r5, r0
 8013b7e:	d40b      	bmi.n	8013b98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013b80:	4620      	mov	r0, r4
 8013b82:	f007 fb4b 	bl	801b21c <__cxa_guard_acquire>
 8013b86:	b138      	cbz	r0, 8013b98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013b88:	4620      	mov	r0, r4
 8013b8a:	f007 fb53 	bl	801b234 <__cxa_guard_release>
 8013b8e:	4a0f      	ldr	r2, [pc, #60]	; (8013bcc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013b90:	490f      	ldr	r1, [pc, #60]	; (8013bd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8013b92:	4810      	ldr	r0, [pc, #64]	; (8013bd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013b94:	f007 fb38 	bl	801b208 <__aeabi_atexit>
 8013b98:	4c0f      	ldr	r4, [pc, #60]	; (8013bd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8013b9a:	7823      	ldrb	r3, [r4, #0]
 8013b9c:	f3bf 8f5b 	dmb	ish
 8013ba0:	07db      	lsls	r3, r3, #31
 8013ba2:	d40b      	bmi.n	8013bbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013ba4:	4620      	mov	r0, r4
 8013ba6:	f007 fb39 	bl	801b21c <__cxa_guard_acquire>
 8013baa:	b138      	cbz	r0, 8013bbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013bac:	4620      	mov	r0, r4
 8013bae:	f007 fb41 	bl	801b234 <__cxa_guard_release>
 8013bb2:	4a06      	ldr	r2, [pc, #24]	; (8013bcc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013bb4:	4909      	ldr	r1, [pc, #36]	; (8013bdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8013bb6:	480a      	ldr	r0, [pc, #40]	; (8013be0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013bb8:	f007 fb26 	bl	801b208 <__aeabi_atexit>
 8013bbc:	4b05      	ldr	r3, [pc, #20]	; (8013bd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013bbe:	622b      	str	r3, [r5, #32]
 8013bc0:	4b07      	ldr	r3, [pc, #28]	; (8013be0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013bc2:	626b      	str	r3, [r5, #36]	; 0x24
 8013bc4:	bd38      	pop	{r3, r4, r5, pc}
 8013bc6:	bf00      	nop
 8013bc8:	200269f4 	.word	0x200269f4
 8013bcc:	20000000 	.word	0x20000000
 8013bd0:	08012127 	.word	0x08012127
 8013bd4:	20000068 	.word	0x20000068
 8013bd8:	200269f8 	.word	0x200269f8
 8013bdc:	08012125 	.word	0x08012125
 8013be0:	2000006c 	.word	0x2000006c

08013be4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8013be4:	b538      	push	{r3, r4, r5, lr}
 8013be6:	4c15      	ldr	r4, [pc, #84]	; (8013c3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8013be8:	7823      	ldrb	r3, [r4, #0]
 8013bea:	f3bf 8f5b 	dmb	ish
 8013bee:	07da      	lsls	r2, r3, #31
 8013bf0:	4605      	mov	r5, r0
 8013bf2:	d40b      	bmi.n	8013c0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013bf4:	4620      	mov	r0, r4
 8013bf6:	f007 fb11 	bl	801b21c <__cxa_guard_acquire>
 8013bfa:	b138      	cbz	r0, 8013c0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013bfc:	4620      	mov	r0, r4
 8013bfe:	f007 fb19 	bl	801b234 <__cxa_guard_release>
 8013c02:	4a0f      	ldr	r2, [pc, #60]	; (8013c40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013c04:	490f      	ldr	r1, [pc, #60]	; (8013c44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8013c06:	4810      	ldr	r0, [pc, #64]	; (8013c48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013c08:	f007 fafe 	bl	801b208 <__aeabi_atexit>
 8013c0c:	4c0f      	ldr	r4, [pc, #60]	; (8013c4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8013c0e:	7823      	ldrb	r3, [r4, #0]
 8013c10:	f3bf 8f5b 	dmb	ish
 8013c14:	07db      	lsls	r3, r3, #31
 8013c16:	d40b      	bmi.n	8013c30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013c18:	4620      	mov	r0, r4
 8013c1a:	f007 faff 	bl	801b21c <__cxa_guard_acquire>
 8013c1e:	b138      	cbz	r0, 8013c30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013c20:	4620      	mov	r0, r4
 8013c22:	f007 fb07 	bl	801b234 <__cxa_guard_release>
 8013c26:	4a06      	ldr	r2, [pc, #24]	; (8013c40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013c28:	4909      	ldr	r1, [pc, #36]	; (8013c50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8013c2a:	480a      	ldr	r0, [pc, #40]	; (8013c54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013c2c:	f007 faec 	bl	801b208 <__aeabi_atexit>
 8013c30:	4b05      	ldr	r3, [pc, #20]	; (8013c48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013c32:	61ab      	str	r3, [r5, #24]
 8013c34:	4b07      	ldr	r3, [pc, #28]	; (8013c54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013c36:	61eb      	str	r3, [r5, #28]
 8013c38:	bd38      	pop	{r3, r4, r5, pc}
 8013c3a:	bf00      	nop
 8013c3c:	200269cc 	.word	0x200269cc
 8013c40:	20000000 	.word	0x20000000
 8013c44:	0801212b 	.word	0x0801212b
 8013c48:	20000040 	.word	0x20000040
 8013c4c:	200269d0 	.word	0x200269d0
 8013c50:	08012129 	.word	0x08012129
 8013c54:	20000044 	.word	0x20000044

08013c58 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8013c58:	b510      	push	{r4, lr}
 8013c5a:	4604      	mov	r4, r0
 8013c5c:	f7ff ff88 	bl	8013b70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8013c60:	4620      	mov	r0, r4
 8013c62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013c66:	f7ff bfbd 	b.w	8013be4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08013c6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8013c6c:	b538      	push	{r3, r4, r5, lr}
 8013c6e:	4c15      	ldr	r4, [pc, #84]	; (8013cc4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8013c70:	7823      	ldrb	r3, [r4, #0]
 8013c72:	f3bf 8f5b 	dmb	ish
 8013c76:	07da      	lsls	r2, r3, #31
 8013c78:	4605      	mov	r5, r0
 8013c7a:	d40b      	bmi.n	8013c94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013c7c:	4620      	mov	r0, r4
 8013c7e:	f007 facd 	bl	801b21c <__cxa_guard_acquire>
 8013c82:	b138      	cbz	r0, 8013c94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013c84:	4620      	mov	r0, r4
 8013c86:	f007 fad5 	bl	801b234 <__cxa_guard_release>
 8013c8a:	4a0f      	ldr	r2, [pc, #60]	; (8013cc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013c8c:	490f      	ldr	r1, [pc, #60]	; (8013ccc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8013c8e:	4810      	ldr	r0, [pc, #64]	; (8013cd0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013c90:	f007 faba 	bl	801b208 <__aeabi_atexit>
 8013c94:	4c0f      	ldr	r4, [pc, #60]	; (8013cd4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8013c96:	7823      	ldrb	r3, [r4, #0]
 8013c98:	f3bf 8f5b 	dmb	ish
 8013c9c:	07db      	lsls	r3, r3, #31
 8013c9e:	d40b      	bmi.n	8013cb8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013ca0:	4620      	mov	r0, r4
 8013ca2:	f007 fabb 	bl	801b21c <__cxa_guard_acquire>
 8013ca6:	b138      	cbz	r0, 8013cb8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013ca8:	4620      	mov	r0, r4
 8013caa:	f007 fac3 	bl	801b234 <__cxa_guard_release>
 8013cae:	4a06      	ldr	r2, [pc, #24]	; (8013cc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013cb0:	4909      	ldr	r1, [pc, #36]	; (8013cd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8013cb2:	480a      	ldr	r0, [pc, #40]	; (8013cdc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013cb4:	f007 faa8 	bl	801b208 <__aeabi_atexit>
 8013cb8:	4b05      	ldr	r3, [pc, #20]	; (8013cd0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013cba:	632b      	str	r3, [r5, #48]	; 0x30
 8013cbc:	4b07      	ldr	r3, [pc, #28]	; (8013cdc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013cbe:	636b      	str	r3, [r5, #52]	; 0x34
 8013cc0:	bd38      	pop	{r3, r4, r5, pc}
 8013cc2:	bf00      	nop
 8013cc4:	20026a04 	.word	0x20026a04
 8013cc8:	20000000 	.word	0x20000000
 8013ccc:	0801211f 	.word	0x0801211f
 8013cd0:	20000078 	.word	0x20000078
 8013cd4:	20026a08 	.word	0x20026a08
 8013cd8:	0801211d 	.word	0x0801211d
 8013cdc:	2000007c 	.word	0x2000007c

08013ce0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8013ce0:	b538      	push	{r3, r4, r5, lr}
 8013ce2:	4c15      	ldr	r4, [pc, #84]	; (8013d38 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8013ce4:	7823      	ldrb	r3, [r4, #0]
 8013ce6:	f3bf 8f5b 	dmb	ish
 8013cea:	07da      	lsls	r2, r3, #31
 8013cec:	4605      	mov	r5, r0
 8013cee:	d40b      	bmi.n	8013d08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013cf0:	4620      	mov	r0, r4
 8013cf2:	f007 fa93 	bl	801b21c <__cxa_guard_acquire>
 8013cf6:	b138      	cbz	r0, 8013d08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013cf8:	4620      	mov	r0, r4
 8013cfa:	f007 fa9b 	bl	801b234 <__cxa_guard_release>
 8013cfe:	4a0f      	ldr	r2, [pc, #60]	; (8013d3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013d00:	490f      	ldr	r1, [pc, #60]	; (8013d40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8013d02:	4810      	ldr	r0, [pc, #64]	; (8013d44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013d04:	f007 fa80 	bl	801b208 <__aeabi_atexit>
 8013d08:	4c0f      	ldr	r4, [pc, #60]	; (8013d48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8013d0a:	7823      	ldrb	r3, [r4, #0]
 8013d0c:	f3bf 8f5b 	dmb	ish
 8013d10:	07db      	lsls	r3, r3, #31
 8013d12:	d40b      	bmi.n	8013d2c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013d14:	4620      	mov	r0, r4
 8013d16:	f007 fa81 	bl	801b21c <__cxa_guard_acquire>
 8013d1a:	b138      	cbz	r0, 8013d2c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013d1c:	4620      	mov	r0, r4
 8013d1e:	f007 fa89 	bl	801b234 <__cxa_guard_release>
 8013d22:	4a06      	ldr	r2, [pc, #24]	; (8013d3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013d24:	4909      	ldr	r1, [pc, #36]	; (8013d4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8013d26:	480a      	ldr	r0, [pc, #40]	; (8013d50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013d28:	f007 fa6e 	bl	801b208 <__aeabi_atexit>
 8013d2c:	4b05      	ldr	r3, [pc, #20]	; (8013d44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013d2e:	62ab      	str	r3, [r5, #40]	; 0x28
 8013d30:	4b07      	ldr	r3, [pc, #28]	; (8013d50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013d32:	62eb      	str	r3, [r5, #44]	; 0x2c
 8013d34:	bd38      	pop	{r3, r4, r5, pc}
 8013d36:	bf00      	nop
 8013d38:	200269d4 	.word	0x200269d4
 8013d3c:	20000000 	.word	0x20000000
 8013d40:	08012123 	.word	0x08012123
 8013d44:	20000048 	.word	0x20000048
 8013d48:	200269d8 	.word	0x200269d8
 8013d4c:	08012121 	.word	0x08012121
 8013d50:	2000004c 	.word	0x2000004c

08013d54 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8013d54:	b510      	push	{r4, lr}
 8013d56:	4604      	mov	r4, r0
 8013d58:	f7ff ff88 	bl	8013c6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8013d5c:	4620      	mov	r0, r4
 8013d5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013d62:	f7ff bfbd 	b.w	8013ce0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08013d68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8013d68:	b538      	push	{r3, r4, r5, lr}
 8013d6a:	4c15      	ldr	r4, [pc, #84]	; (8013dc0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8013d6c:	7823      	ldrb	r3, [r4, #0]
 8013d6e:	f3bf 8f5b 	dmb	ish
 8013d72:	07da      	lsls	r2, r3, #31
 8013d74:	4605      	mov	r5, r0
 8013d76:	d40b      	bmi.n	8013d90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013d78:	4620      	mov	r0, r4
 8013d7a:	f007 fa4f 	bl	801b21c <__cxa_guard_acquire>
 8013d7e:	b138      	cbz	r0, 8013d90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013d80:	4620      	mov	r0, r4
 8013d82:	f007 fa57 	bl	801b234 <__cxa_guard_release>
 8013d86:	4a0f      	ldr	r2, [pc, #60]	; (8013dc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013d88:	490f      	ldr	r1, [pc, #60]	; (8013dc8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8013d8a:	4810      	ldr	r0, [pc, #64]	; (8013dcc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013d8c:	f007 fa3c 	bl	801b208 <__aeabi_atexit>
 8013d90:	4c0f      	ldr	r4, [pc, #60]	; (8013dd0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8013d92:	7823      	ldrb	r3, [r4, #0]
 8013d94:	f3bf 8f5b 	dmb	ish
 8013d98:	07db      	lsls	r3, r3, #31
 8013d9a:	d40b      	bmi.n	8013db4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013d9c:	4620      	mov	r0, r4
 8013d9e:	f007 fa3d 	bl	801b21c <__cxa_guard_acquire>
 8013da2:	b138      	cbz	r0, 8013db4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013da4:	4620      	mov	r0, r4
 8013da6:	f007 fa45 	bl	801b234 <__cxa_guard_release>
 8013daa:	4a06      	ldr	r2, [pc, #24]	; (8013dc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013dac:	4909      	ldr	r1, [pc, #36]	; (8013dd4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8013dae:	480a      	ldr	r0, [pc, #40]	; (8013dd8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013db0:	f007 fa2a 	bl	801b208 <__aeabi_atexit>
 8013db4:	4b05      	ldr	r3, [pc, #20]	; (8013dcc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013db6:	652b      	str	r3, [r5, #80]	; 0x50
 8013db8:	4b07      	ldr	r3, [pc, #28]	; (8013dd8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013dba:	656b      	str	r3, [r5, #84]	; 0x54
 8013dbc:	bd38      	pop	{r3, r4, r5, pc}
 8013dbe:	bf00      	nop
 8013dc0:	20026a0c 	.word	0x20026a0c
 8013dc4:	20000000 	.word	0x20000000
 8013dc8:	0801210f 	.word	0x0801210f
 8013dcc:	20000080 	.word	0x20000080
 8013dd0:	20026a10 	.word	0x20026a10
 8013dd4:	0801210d 	.word	0x0801210d
 8013dd8:	20000084 	.word	0x20000084

08013ddc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8013ddc:	b538      	push	{r3, r4, r5, lr}
 8013dde:	4c15      	ldr	r4, [pc, #84]	; (8013e34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8013de0:	7823      	ldrb	r3, [r4, #0]
 8013de2:	f3bf 8f5b 	dmb	ish
 8013de6:	07da      	lsls	r2, r3, #31
 8013de8:	4605      	mov	r5, r0
 8013dea:	d40b      	bmi.n	8013e04 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013dec:	4620      	mov	r0, r4
 8013dee:	f007 fa15 	bl	801b21c <__cxa_guard_acquire>
 8013df2:	b138      	cbz	r0, 8013e04 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013df4:	4620      	mov	r0, r4
 8013df6:	f007 fa1d 	bl	801b234 <__cxa_guard_release>
 8013dfa:	4a0f      	ldr	r2, [pc, #60]	; (8013e38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013dfc:	490f      	ldr	r1, [pc, #60]	; (8013e3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8013dfe:	4810      	ldr	r0, [pc, #64]	; (8013e40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013e00:	f007 fa02 	bl	801b208 <__aeabi_atexit>
 8013e04:	4c0f      	ldr	r4, [pc, #60]	; (8013e44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8013e06:	7823      	ldrb	r3, [r4, #0]
 8013e08:	f3bf 8f5b 	dmb	ish
 8013e0c:	07db      	lsls	r3, r3, #31
 8013e0e:	d40b      	bmi.n	8013e28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013e10:	4620      	mov	r0, r4
 8013e12:	f007 fa03 	bl	801b21c <__cxa_guard_acquire>
 8013e16:	b138      	cbz	r0, 8013e28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013e18:	4620      	mov	r0, r4
 8013e1a:	f007 fa0b 	bl	801b234 <__cxa_guard_release>
 8013e1e:	4a06      	ldr	r2, [pc, #24]	; (8013e38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013e20:	4909      	ldr	r1, [pc, #36]	; (8013e48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8013e22:	480a      	ldr	r0, [pc, #40]	; (8013e4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013e24:	f007 f9f0 	bl	801b208 <__aeabi_atexit>
 8013e28:	4b05      	ldr	r3, [pc, #20]	; (8013e40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013e2a:	64ab      	str	r3, [r5, #72]	; 0x48
 8013e2c:	4b07      	ldr	r3, [pc, #28]	; (8013e4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013e2e:	64eb      	str	r3, [r5, #76]	; 0x4c
 8013e30:	bd38      	pop	{r3, r4, r5, pc}
 8013e32:	bf00      	nop
 8013e34:	20026a14 	.word	0x20026a14
 8013e38:	20000000 	.word	0x20000000
 8013e3c:	08012113 	.word	0x08012113
 8013e40:	20000088 	.word	0x20000088
 8013e44:	20026a18 	.word	0x20026a18
 8013e48:	08012111 	.word	0x08012111
 8013e4c:	2000008c 	.word	0x2000008c

08013e50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8013e50:	b538      	push	{r3, r4, r5, lr}
 8013e52:	4c15      	ldr	r4, [pc, #84]	; (8013ea8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8013e54:	7823      	ldrb	r3, [r4, #0]
 8013e56:	f3bf 8f5b 	dmb	ish
 8013e5a:	07da      	lsls	r2, r3, #31
 8013e5c:	4605      	mov	r5, r0
 8013e5e:	d40b      	bmi.n	8013e78 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8013e60:	4620      	mov	r0, r4
 8013e62:	f007 f9db 	bl	801b21c <__cxa_guard_acquire>
 8013e66:	b138      	cbz	r0, 8013e78 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8013e68:	4620      	mov	r0, r4
 8013e6a:	f007 f9e3 	bl	801b234 <__cxa_guard_release>
 8013e6e:	4a0f      	ldr	r2, [pc, #60]	; (8013eac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8013e70:	490f      	ldr	r1, [pc, #60]	; (8013eb0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8013e72:	4810      	ldr	r0, [pc, #64]	; (8013eb4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8013e74:	f007 f9c8 	bl	801b208 <__aeabi_atexit>
 8013e78:	4c0f      	ldr	r4, [pc, #60]	; (8013eb8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8013e7a:	7823      	ldrb	r3, [r4, #0]
 8013e7c:	f3bf 8f5b 	dmb	ish
 8013e80:	07db      	lsls	r3, r3, #31
 8013e82:	d40b      	bmi.n	8013e9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8013e84:	4620      	mov	r0, r4
 8013e86:	f007 f9c9 	bl	801b21c <__cxa_guard_acquire>
 8013e8a:	b138      	cbz	r0, 8013e9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8013e8c:	4620      	mov	r0, r4
 8013e8e:	f007 f9d1 	bl	801b234 <__cxa_guard_release>
 8013e92:	4a06      	ldr	r2, [pc, #24]	; (8013eac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8013e94:	4909      	ldr	r1, [pc, #36]	; (8013ebc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8013e96:	480a      	ldr	r0, [pc, #40]	; (8013ec0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8013e98:	f007 f9b6 	bl	801b208 <__aeabi_atexit>
 8013e9c:	4b05      	ldr	r3, [pc, #20]	; (8013eb4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8013e9e:	642b      	str	r3, [r5, #64]	; 0x40
 8013ea0:	4b07      	ldr	r3, [pc, #28]	; (8013ec0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8013ea2:	646b      	str	r3, [r5, #68]	; 0x44
 8013ea4:	bd38      	pop	{r3, r4, r5, pc}
 8013ea6:	bf00      	nop
 8013ea8:	200269dc 	.word	0x200269dc
 8013eac:	20000000 	.word	0x20000000
 8013eb0:	08012117 	.word	0x08012117
 8013eb4:	20000050 	.word	0x20000050
 8013eb8:	200269e0 	.word	0x200269e0
 8013ebc:	08012115 	.word	0x08012115
 8013ec0:	20000054 	.word	0x20000054

08013ec4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8013ec4:	b538      	push	{r3, r4, r5, lr}
 8013ec6:	4c15      	ldr	r4, [pc, #84]	; (8013f1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8013ec8:	7823      	ldrb	r3, [r4, #0]
 8013eca:	f3bf 8f5b 	dmb	ish
 8013ece:	07da      	lsls	r2, r3, #31
 8013ed0:	4605      	mov	r5, r0
 8013ed2:	d40b      	bmi.n	8013eec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013ed4:	4620      	mov	r0, r4
 8013ed6:	f007 f9a1 	bl	801b21c <__cxa_guard_acquire>
 8013eda:	b138      	cbz	r0, 8013eec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013edc:	4620      	mov	r0, r4
 8013ede:	f007 f9a9 	bl	801b234 <__cxa_guard_release>
 8013ee2:	4a0f      	ldr	r2, [pc, #60]	; (8013f20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8013ee4:	490f      	ldr	r1, [pc, #60]	; (8013f24 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8013ee6:	4810      	ldr	r0, [pc, #64]	; (8013f28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8013ee8:	f007 f98e 	bl	801b208 <__aeabi_atexit>
 8013eec:	4c0f      	ldr	r4, [pc, #60]	; (8013f2c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8013eee:	7823      	ldrb	r3, [r4, #0]
 8013ef0:	f3bf 8f5b 	dmb	ish
 8013ef4:	07db      	lsls	r3, r3, #31
 8013ef6:	d40b      	bmi.n	8013f10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8013ef8:	4620      	mov	r0, r4
 8013efa:	f007 f98f 	bl	801b21c <__cxa_guard_acquire>
 8013efe:	b138      	cbz	r0, 8013f10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8013f00:	4620      	mov	r0, r4
 8013f02:	f007 f997 	bl	801b234 <__cxa_guard_release>
 8013f06:	4a06      	ldr	r2, [pc, #24]	; (8013f20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8013f08:	4909      	ldr	r1, [pc, #36]	; (8013f30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8013f0a:	480a      	ldr	r0, [pc, #40]	; (8013f34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8013f0c:	f007 f97c 	bl	801b208 <__aeabi_atexit>
 8013f10:	4b05      	ldr	r3, [pc, #20]	; (8013f28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8013f12:	63ab      	str	r3, [r5, #56]	; 0x38
 8013f14:	4b07      	ldr	r3, [pc, #28]	; (8013f34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8013f16:	63eb      	str	r3, [r5, #60]	; 0x3c
 8013f18:	bd38      	pop	{r3, r4, r5, pc}
 8013f1a:	bf00      	nop
 8013f1c:	200269fc 	.word	0x200269fc
 8013f20:	20000000 	.word	0x20000000
 8013f24:	0801211b 	.word	0x0801211b
 8013f28:	20000070 	.word	0x20000070
 8013f2c:	20026a00 	.word	0x20026a00
 8013f30:	08012119 	.word	0x08012119
 8013f34:	20000074 	.word	0x20000074

08013f38 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8013f38:	b510      	push	{r4, lr}
 8013f3a:	4604      	mov	r4, r0
 8013f3c:	f7ff ff14 	bl	8013d68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8013f40:	4620      	mov	r0, r4
 8013f42:	f7ff ff85 	bl	8013e50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8013f46:	4620      	mov	r0, r4
 8013f48:	f7ff ff48 	bl	8013ddc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8013f4c:	4620      	mov	r0, r4
 8013f4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013f52:	f7ff bfb7 	b.w	8013ec4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08013f58 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8013f58:	b538      	push	{r3, r4, r5, lr}
 8013f5a:	4c15      	ldr	r4, [pc, #84]	; (8013fb0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8013f5c:	7823      	ldrb	r3, [r4, #0]
 8013f5e:	f3bf 8f5b 	dmb	ish
 8013f62:	07da      	lsls	r2, r3, #31
 8013f64:	4605      	mov	r5, r0
 8013f66:	d40b      	bmi.n	8013f80 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8013f68:	4620      	mov	r0, r4
 8013f6a:	f007 f957 	bl	801b21c <__cxa_guard_acquire>
 8013f6e:	b138      	cbz	r0, 8013f80 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8013f70:	4620      	mov	r0, r4
 8013f72:	f007 f95f 	bl	801b234 <__cxa_guard_release>
 8013f76:	4a0f      	ldr	r2, [pc, #60]	; (8013fb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8013f78:	490f      	ldr	r1, [pc, #60]	; (8013fb8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8013f7a:	4810      	ldr	r0, [pc, #64]	; (8013fbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8013f7c:	f007 f944 	bl	801b208 <__aeabi_atexit>
 8013f80:	4c0f      	ldr	r4, [pc, #60]	; (8013fc0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8013f82:	7823      	ldrb	r3, [r4, #0]
 8013f84:	f3bf 8f5b 	dmb	ish
 8013f88:	07db      	lsls	r3, r3, #31
 8013f8a:	d40b      	bmi.n	8013fa4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8013f8c:	4620      	mov	r0, r4
 8013f8e:	f007 f945 	bl	801b21c <__cxa_guard_acquire>
 8013f92:	b138      	cbz	r0, 8013fa4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8013f94:	4620      	mov	r0, r4
 8013f96:	f007 f94d 	bl	801b234 <__cxa_guard_release>
 8013f9a:	4a06      	ldr	r2, [pc, #24]	; (8013fb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8013f9c:	4909      	ldr	r1, [pc, #36]	; (8013fc4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8013f9e:	480a      	ldr	r0, [pc, #40]	; (8013fc8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8013fa0:	f007 f932 	bl	801b208 <__aeabi_atexit>
 8013fa4:	4b05      	ldr	r3, [pc, #20]	; (8013fbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8013fa6:	662b      	str	r3, [r5, #96]	; 0x60
 8013fa8:	4b07      	ldr	r3, [pc, #28]	; (8013fc8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8013faa:	666b      	str	r3, [r5, #100]	; 0x64
 8013fac:	bd38      	pop	{r3, r4, r5, pc}
 8013fae:	bf00      	nop
 8013fb0:	200269e4 	.word	0x200269e4
 8013fb4:	20000000 	.word	0x20000000
 8013fb8:	08012107 	.word	0x08012107
 8013fbc:	20000058 	.word	0x20000058
 8013fc0:	200269e8 	.word	0x200269e8
 8013fc4:	08012105 	.word	0x08012105
 8013fc8:	2000005c 	.word	0x2000005c

08013fcc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8013fcc:	b538      	push	{r3, r4, r5, lr}
 8013fce:	4c15      	ldr	r4, [pc, #84]	; (8014024 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8013fd0:	7823      	ldrb	r3, [r4, #0]
 8013fd2:	f3bf 8f5b 	dmb	ish
 8013fd6:	07da      	lsls	r2, r3, #31
 8013fd8:	4605      	mov	r5, r0
 8013fda:	d40b      	bmi.n	8013ff4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013fdc:	4620      	mov	r0, r4
 8013fde:	f007 f91d 	bl	801b21c <__cxa_guard_acquire>
 8013fe2:	b138      	cbz	r0, 8013ff4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013fe4:	4620      	mov	r0, r4
 8013fe6:	f007 f925 	bl	801b234 <__cxa_guard_release>
 8013fea:	4a0f      	ldr	r2, [pc, #60]	; (8014028 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8013fec:	490f      	ldr	r1, [pc, #60]	; (801402c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8013fee:	4810      	ldr	r0, [pc, #64]	; (8014030 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8013ff0:	f007 f90a 	bl	801b208 <__aeabi_atexit>
 8013ff4:	4c0f      	ldr	r4, [pc, #60]	; (8014034 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8013ff6:	7823      	ldrb	r3, [r4, #0]
 8013ff8:	f3bf 8f5b 	dmb	ish
 8013ffc:	07db      	lsls	r3, r3, #31
 8013ffe:	d40b      	bmi.n	8014018 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8014000:	4620      	mov	r0, r4
 8014002:	f007 f90b 	bl	801b21c <__cxa_guard_acquire>
 8014006:	b138      	cbz	r0, 8014018 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8014008:	4620      	mov	r0, r4
 801400a:	f007 f913 	bl	801b234 <__cxa_guard_release>
 801400e:	4a06      	ldr	r2, [pc, #24]	; (8014028 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8014010:	4909      	ldr	r1, [pc, #36]	; (8014038 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8014012:	480a      	ldr	r0, [pc, #40]	; (801403c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8014014:	f007 f8f8 	bl	801b208 <__aeabi_atexit>
 8014018:	4b05      	ldr	r3, [pc, #20]	; (8014030 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801401a:	65ab      	str	r3, [r5, #88]	; 0x58
 801401c:	4b07      	ldr	r3, [pc, #28]	; (801403c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801401e:	65eb      	str	r3, [r5, #92]	; 0x5c
 8014020:	bd38      	pop	{r3, r4, r5, pc}
 8014022:	bf00      	nop
 8014024:	200269bc 	.word	0x200269bc
 8014028:	20000000 	.word	0x20000000
 801402c:	0801210b 	.word	0x0801210b
 8014030:	20000030 	.word	0x20000030
 8014034:	200269c0 	.word	0x200269c0
 8014038:	08012109 	.word	0x08012109
 801403c:	20000034 	.word	0x20000034

08014040 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8014040:	b510      	push	{r4, lr}
 8014042:	4604      	mov	r4, r0
 8014044:	f7ff ff88 	bl	8013f58 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8014048:	4620      	mov	r0, r4
 801404a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801404e:	f7ff bfbd 	b.w	8013fcc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08014054 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8014054:	b538      	push	{r3, r4, r5, lr}
 8014056:	4c15      	ldr	r4, [pc, #84]	; (80140ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8014058:	7823      	ldrb	r3, [r4, #0]
 801405a:	f3bf 8f5b 	dmb	ish
 801405e:	07da      	lsls	r2, r3, #31
 8014060:	4605      	mov	r5, r0
 8014062:	d40b      	bmi.n	801407c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014064:	4620      	mov	r0, r4
 8014066:	f007 f8d9 	bl	801b21c <__cxa_guard_acquire>
 801406a:	b138      	cbz	r0, 801407c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801406c:	4620      	mov	r0, r4
 801406e:	f007 f8e1 	bl	801b234 <__cxa_guard_release>
 8014072:	4a0f      	ldr	r2, [pc, #60]	; (80140b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014074:	490f      	ldr	r1, [pc, #60]	; (80140b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8014076:	4810      	ldr	r0, [pc, #64]	; (80140b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8014078:	f007 f8c6 	bl	801b208 <__aeabi_atexit>
 801407c:	4c0f      	ldr	r4, [pc, #60]	; (80140bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801407e:	7823      	ldrb	r3, [r4, #0]
 8014080:	f3bf 8f5b 	dmb	ish
 8014084:	07db      	lsls	r3, r3, #31
 8014086:	d40b      	bmi.n	80140a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014088:	4620      	mov	r0, r4
 801408a:	f007 f8c7 	bl	801b21c <__cxa_guard_acquire>
 801408e:	b138      	cbz	r0, 80140a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014090:	4620      	mov	r0, r4
 8014092:	f007 f8cf 	bl	801b234 <__cxa_guard_release>
 8014096:	4a06      	ldr	r2, [pc, #24]	; (80140b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014098:	4909      	ldr	r1, [pc, #36]	; (80140c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801409a:	480a      	ldr	r0, [pc, #40]	; (80140c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801409c:	f007 f8b4 	bl	801b208 <__aeabi_atexit>
 80140a0:	4b05      	ldr	r3, [pc, #20]	; (80140b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80140a2:	672b      	str	r3, [r5, #112]	; 0x70
 80140a4:	4b07      	ldr	r3, [pc, #28]	; (80140c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80140a6:	676b      	str	r3, [r5, #116]	; 0x74
 80140a8:	bd38      	pop	{r3, r4, r5, pc}
 80140aa:	bf00      	nop
 80140ac:	200269b4 	.word	0x200269b4
 80140b0:	20000000 	.word	0x20000000
 80140b4:	080120ff 	.word	0x080120ff
 80140b8:	20000028 	.word	0x20000028
 80140bc:	200269b8 	.word	0x200269b8
 80140c0:	080120fd 	.word	0x080120fd
 80140c4:	2000002c 	.word	0x2000002c

080140c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80140c8:	b538      	push	{r3, r4, r5, lr}
 80140ca:	4c15      	ldr	r4, [pc, #84]	; (8014120 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80140cc:	7823      	ldrb	r3, [r4, #0]
 80140ce:	f3bf 8f5b 	dmb	ish
 80140d2:	07da      	lsls	r2, r3, #31
 80140d4:	4605      	mov	r5, r0
 80140d6:	d40b      	bmi.n	80140f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80140d8:	4620      	mov	r0, r4
 80140da:	f007 f89f 	bl	801b21c <__cxa_guard_acquire>
 80140de:	b138      	cbz	r0, 80140f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80140e0:	4620      	mov	r0, r4
 80140e2:	f007 f8a7 	bl	801b234 <__cxa_guard_release>
 80140e6:	4a0f      	ldr	r2, [pc, #60]	; (8014124 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80140e8:	490f      	ldr	r1, [pc, #60]	; (8014128 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80140ea:	4810      	ldr	r0, [pc, #64]	; (801412c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80140ec:	f007 f88c 	bl	801b208 <__aeabi_atexit>
 80140f0:	4c0f      	ldr	r4, [pc, #60]	; (8014130 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80140f2:	7823      	ldrb	r3, [r4, #0]
 80140f4:	f3bf 8f5b 	dmb	ish
 80140f8:	07db      	lsls	r3, r3, #31
 80140fa:	d40b      	bmi.n	8014114 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80140fc:	4620      	mov	r0, r4
 80140fe:	f007 f88d 	bl	801b21c <__cxa_guard_acquire>
 8014102:	b138      	cbz	r0, 8014114 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014104:	4620      	mov	r0, r4
 8014106:	f007 f895 	bl	801b234 <__cxa_guard_release>
 801410a:	4a06      	ldr	r2, [pc, #24]	; (8014124 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801410c:	4909      	ldr	r1, [pc, #36]	; (8014134 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801410e:	480a      	ldr	r0, [pc, #40]	; (8014138 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8014110:	f007 f87a 	bl	801b208 <__aeabi_atexit>
 8014114:	4b05      	ldr	r3, [pc, #20]	; (801412c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8014116:	66ab      	str	r3, [r5, #104]	; 0x68
 8014118:	4b07      	ldr	r3, [pc, #28]	; (8014138 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801411a:	66eb      	str	r3, [r5, #108]	; 0x6c
 801411c:	bd38      	pop	{r3, r4, r5, pc}
 801411e:	bf00      	nop
 8014120:	200269ac 	.word	0x200269ac
 8014124:	20000000 	.word	0x20000000
 8014128:	08012103 	.word	0x08012103
 801412c:	20000020 	.word	0x20000020
 8014130:	200269b0 	.word	0x200269b0
 8014134:	08012101 	.word	0x08012101
 8014138:	20000024 	.word	0x20000024

0801413c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801413c:	b510      	push	{r4, lr}
 801413e:	4604      	mov	r4, r0
 8014140:	f7ff ff88 	bl	8014054 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8014144:	4620      	mov	r0, r4
 8014146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801414a:	f7ff bfbd 	b.w	80140c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801414e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801414e:	b510      	push	{r4, lr}
 8014150:	4604      	mov	r4, r0
 8014152:	f7ff fff3 	bl	801413c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8014156:	4620      	mov	r0, r4
 8014158:	f7ff ff72 	bl	8014040 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801415c:	4620      	mov	r0, r4
 801415e:	f7ff fdf9 	bl	8013d54 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8014162:	4620      	mov	r0, r4
 8014164:	f7ff fcfa 	bl	8013b5c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8014168:	4620      	mov	r0, r4
 801416a:	f7ff fd75 	bl	8013c58 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801416e:	4620      	mov	r0, r4
 8014170:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014174:	f7ff bee0 	b.w	8013f38 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08014178 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8014178:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801417c:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8014180:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8014184:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8014188:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801418c:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8014190:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8014194:	8808      	ldrh	r0, [r1, #0]
 8014196:	fb0e 4708 	mla	r7, lr, r8, r4
 801419a:	f1be 0f00 	cmp.w	lr, #0
 801419e:	eb02 0a07 	add.w	sl, r2, r7
 80141a2:	db37      	blt.n	8014214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80141a4:	45f3      	cmp	fp, lr
 80141a6:	dd35      	ble.n	8014214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80141a8:	2c00      	cmp	r4, #0
 80141aa:	db31      	blt.n	8014210 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80141ac:	45a0      	cmp	r8, r4
 80141ae:	dd2f      	ble.n	8014210 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80141b0:	5dd2      	ldrb	r2, [r2, r7]
 80141b2:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 80141b6:	1c62      	adds	r2, r4, #1
 80141b8:	d42f      	bmi.n	801421a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80141ba:	4590      	cmp	r8, r2
 80141bc:	dd2d      	ble.n	801421a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80141be:	b366      	cbz	r6, 801421a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80141c0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80141c4:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80141c8:	f11e 0e01 	adds.w	lr, lr, #1
 80141cc:	d429      	bmi.n	8014222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80141ce:	45f3      	cmp	fp, lr
 80141d0:	dd27      	ble.n	8014222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80141d2:	f1bc 0f00 	cmp.w	ip, #0
 80141d6:	f000 80a0 	beq.w	801431a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 80141da:	2c00      	cmp	r4, #0
 80141dc:	db1f      	blt.n	801421e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80141de:	45a0      	cmp	r8, r4
 80141e0:	dd1d      	ble.n	801421e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80141e2:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80141e6:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80141ea:	3401      	adds	r4, #1
 80141ec:	d41c      	bmi.n	8014228 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80141ee:	45a0      	cmp	r8, r4
 80141f0:	dd1a      	ble.n	8014228 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80141f2:	b1de      	cbz	r6, 801422c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80141f4:	44d0      	add	r8, sl
 80141f6:	f898 2001 	ldrb.w	r2, [r8, #1]
 80141fa:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80141fe:	2e0f      	cmp	r6, #15
 8014200:	d915      	bls.n	801422e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8014202:	4b49      	ldr	r3, [pc, #292]	; (8014328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8014204:	4a49      	ldr	r2, [pc, #292]	; (801432c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8014206:	484a      	ldr	r0, [pc, #296]	; (8014330 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8014208:	f240 3155 	movw	r1, #853	; 0x355
 801420c:	f007 f830 	bl	801b270 <__assert_func>
 8014210:	4681      	mov	r9, r0
 8014212:	e7d0      	b.n	80141b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8014214:	4607      	mov	r7, r0
 8014216:	4681      	mov	r9, r0
 8014218:	e7d6      	b.n	80141c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801421a:	4607      	mov	r7, r0
 801421c:	e7d4      	b.n	80141c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801421e:	4686      	mov	lr, r0
 8014220:	e7e3      	b.n	80141ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8014222:	4603      	mov	r3, r0
 8014224:	4686      	mov	lr, r0
 8014226:	e7ea      	b.n	80141fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8014228:	4603      	mov	r3, r0
 801422a:	e7e8      	b.n	80141fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801422c:	4603      	mov	r3, r0
 801422e:	f1bc 0f0f 	cmp.w	ip, #15
 8014232:	d8e6      	bhi.n	8014202 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014234:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8014238:	fb16 f80c 	smulbb	r8, r6, ip
 801423c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014240:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8014244:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8014248:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801424c:	ea44 0909 	orr.w	r9, r4, r9
 8014250:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8014254:	f1cc 0410 	rsb	r4, ip, #16
 8014258:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801425c:	1ba4      	subs	r4, r4, r6
 801425e:	041a      	lsls	r2, r3, #16
 8014260:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8014264:	ea4a 0707 	orr.w	r7, sl, r7
 8014268:	4377      	muls	r7, r6
 801426a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801426e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8014272:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014276:	fb04 7409 	mla	r4, r4, r9, r7
 801427a:	4313      	orrs	r3, r2
 801427c:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8014280:	fb08 4303 	mla	r3, r8, r3, r4
 8014284:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014288:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 801428c:	4322      	orrs	r2, r4
 801428e:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8014292:	fb0c 3202 	mla	r2, ip, r2, r3
 8014296:	0d53      	lsrs	r3, r2, #21
 8014298:	0952      	lsrs	r2, r2, #5
 801429a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801429e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80142a2:	431a      	orrs	r2, r3
 80142a4:	b293      	uxth	r3, r2
 80142a6:	b2af      	uxth	r7, r5
 80142a8:	1202      	asrs	r2, r0, #8
 80142aa:	43ed      	mvns	r5, r5
 80142ac:	b2ed      	uxtb	r5, r5
 80142ae:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80142b2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80142b6:	fb12 f205 	smulbb	r2, r2, r5
 80142ba:	10c6      	asrs	r6, r0, #3
 80142bc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80142c0:	fb0c 2c07 	mla	ip, ip, r7, r2
 80142c4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80142c8:	10da      	asrs	r2, r3, #3
 80142ca:	fb16 f605 	smulbb	r6, r6, r5
 80142ce:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80142d2:	fb02 6207 	mla	r2, r2, r7, r6
 80142d6:	b296      	uxth	r6, r2
 80142d8:	00c2      	lsls	r2, r0, #3
 80142da:	00dc      	lsls	r4, r3, #3
 80142dc:	b2d2      	uxtb	r2, r2
 80142de:	b2e4      	uxtb	r4, r4
 80142e0:	fb12 f205 	smulbb	r2, r2, r5
 80142e4:	fb04 2207 	mla	r2, r4, r7, r2
 80142e8:	fa1f fc8c 	uxth.w	ip, ip
 80142ec:	b292      	uxth	r2, r2
 80142ee:	f10c 0301 	add.w	r3, ip, #1
 80142f2:	1c50      	adds	r0, r2, #1
 80142f4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80142f8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80142fc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014300:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8014304:	4313      	orrs	r3, r2
 8014306:	1c72      	adds	r2, r6, #1
 8014308:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801430c:	0952      	lsrs	r2, r2, #5
 801430e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014312:	4313      	orrs	r3, r2
 8014314:	800b      	strh	r3, [r1, #0]
 8014316:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801431a:	2e0f      	cmp	r6, #15
 801431c:	f63f af71 	bhi.w	8014202 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014320:	4603      	mov	r3, r0
 8014322:	4686      	mov	lr, r0
 8014324:	e786      	b.n	8014234 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8014326:	bf00      	nop
 8014328:	0801eea7 	.word	0x0801eea7
 801432c:	0801f4ae 	.word	0x0801f4ae
 8014330:	0801ef2f 	.word	0x0801ef2f

08014334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014338:	ed2d 8b08 	vpush	{d8-d11}
 801433c:	b09b      	sub	sp, #108	; 0x6c
 801433e:	e9dd 982d 	ldrd	r9, r8, [sp, #180]	; 0xb4
 8014342:	9309      	str	r3, [sp, #36]	; 0x24
 8014344:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8014348:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 801434a:	930a      	str	r3, [sp, #40]	; 0x28
 801434c:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8014350:	930e      	str	r3, [sp, #56]	; 0x38
 8014352:	910d      	str	r1, [sp, #52]	; 0x34
 8014354:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8014358:	9018      	str	r0, [sp, #96]	; 0x60
 801435a:	6870      	ldr	r0, [r6, #4]
 801435c:	9217      	str	r2, [sp, #92]	; 0x5c
 801435e:	fb00 1303 	mla	r3, r0, r3, r1
 8014362:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8014364:	6831      	ldr	r1, [r6, #0]
 8014366:	6856      	ldr	r6, [r2, #4]
 8014368:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 801436c:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8014370:	6813      	ldr	r3, [r2, #0]
 8014372:	930c      	str	r3, [sp, #48]	; 0x30
 8014374:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014376:	43db      	mvns	r3, r3
 8014378:	b2db      	uxtb	r3, r3
 801437a:	eeb0 aa40 	vmov.f32	s20, s0
 801437e:	eef0 9a60 	vmov.f32	s19, s1
 8014382:	eeb0 9a41 	vmov.f32	s18, s2
 8014386:	eeb0 8a62 	vmov.f32	s16, s5
 801438a:	eef0 8a43 	vmov.f32	s17, s6
 801438e:	eef0 ba44 	vmov.f32	s23, s8
 8014392:	eeb0 ba64 	vmov.f32	s22, s9
 8014396:	eef0 aa45 	vmov.f32	s21, s10
 801439a:	3604      	adds	r6, #4
 801439c:	930b      	str	r3, [sp, #44]	; 0x2c
 801439e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80143a0:	2b00      	cmp	r3, #0
 80143a2:	dc03      	bgt.n	80143ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80143a4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80143a6:	2b00      	cmp	r3, #0
 80143a8:	f340 8215 	ble.w	80147d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 80143ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80143ae:	2b00      	cmp	r3, #0
 80143b0:	f340 8102 	ble.w	80145b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 80143b4:	ea5f 4229 	movs.w	r2, r9, asr #16
 80143b8:	ea4f 4328 	mov.w	r3, r8, asr #16
 80143bc:	d42c      	bmi.n	8014418 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80143be:	1c51      	adds	r1, r2, #1
 80143c0:	428c      	cmp	r4, r1
 80143c2:	dd2c      	ble.n	801441e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80143c4:	2b00      	cmp	r3, #0
 80143c6:	db2a      	blt.n	801441e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80143c8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80143ca:	1c59      	adds	r1, r3, #1
 80143cc:	4288      	cmp	r0, r1
 80143ce:	dd26      	ble.n	801441e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80143d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80143d2:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80143d4:	3b01      	subs	r3, #1
 80143d6:	fb02 9203 	mla	r2, r2, r3, r9
 80143da:	1412      	asrs	r2, r2, #16
 80143dc:	d429      	bmi.n	8014432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80143de:	3201      	adds	r2, #1
 80143e0:	4294      	cmp	r4, r2
 80143e2:	dd26      	ble.n	8014432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80143e4:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80143e6:	fb02 8303 	mla	r3, r2, r3, r8
 80143ea:	141b      	asrs	r3, r3, #16
 80143ec:	d421      	bmi.n	8014432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80143ee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80143f0:	3301      	adds	r3, #1
 80143f2:	429a      	cmp	r2, r3
 80143f4:	dd1d      	ble.n	8014432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80143f6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80143fa:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80143fe:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8014402:	9312      	str	r3, [sp, #72]	; 0x48
 8014404:	f1be 0f00 	cmp.w	lr, #0
 8014408:	f300 8138 	bgt.w	801467c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x348>
 801440c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801440e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8014412:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8014416:	e0d1      	b.n	80145bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x288>
 8014418:	1c51      	adds	r1, r2, #1
 801441a:	f040 80c3 	bne.w	80145a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 801441e:	42a2      	cmp	r2, r4
 8014420:	f280 80c0 	bge.w	80145a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8014424:	1c5f      	adds	r7, r3, #1
 8014426:	f2c0 80bd 	blt.w	80145a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 801442a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801442c:	4293      	cmp	r3, r2
 801442e:	f280 80b9 	bge.w	80145a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8014432:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8014436:	4657      	mov	r7, sl
 8014438:	f1bb 0f00 	cmp.w	fp, #0
 801443c:	dde6      	ble.n	801440c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 801443e:	ea5f 4229 	movs.w	r2, r9, asr #16
 8014442:	ea4f 4328 	mov.w	r3, r8, asr #16
 8014446:	f3c9 3003 	ubfx	r0, r9, #12, #4
 801444a:	f3c8 3103 	ubfx	r1, r8, #12, #4
 801444e:	f100 80fc 	bmi.w	801464a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x316>
 8014452:	f102 0c01 	add.w	ip, r2, #1
 8014456:	4564      	cmp	r4, ip
 8014458:	f340 80f9 	ble.w	801464e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 801445c:	2b00      	cmp	r3, #0
 801445e:	f2c0 80f6 	blt.w	801464e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8014462:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8014464:	f103 0c01 	add.w	ip, r3, #1
 8014468:	4565      	cmp	r5, ip
 801446a:	f340 80f0 	ble.w	801464e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 801446e:	fb03 2304 	mla	r3, r3, r4, r2
 8014472:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8014474:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014476:	441a      	add	r2, r3
 8014478:	5ceb      	ldrb	r3, [r5, r3]
 801447a:	f836 e013 	ldrh.w	lr, [r6, r3, lsl #1]
 801447e:	2800      	cmp	r0, #0
 8014480:	f000 80db 	beq.w	801463a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x306>
 8014484:	7853      	ldrb	r3, [r2, #1]
 8014486:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801448a:	9313      	str	r3, [sp, #76]	; 0x4c
 801448c:	b141      	cbz	r1, 80144a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 801448e:	1913      	adds	r3, r2, r4
 8014490:	5d12      	ldrb	r2, [r2, r4]
 8014492:	785b      	ldrb	r3, [r3, #1]
 8014494:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014498:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801449c:	9210      	str	r2, [sp, #64]	; 0x40
 801449e:	9314      	str	r3, [sp, #80]	; 0x50
 80144a0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80144a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80144a4:	fb10 f201 	smulbb	r2, r0, r1
 80144a8:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80144ac:	10d2      	asrs	r2, r2, #3
 80144ae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80144b2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80144b6:	ea4c 0c03 	orr.w	ip, ip, r3
 80144ba:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 80144be:	930f      	str	r3, [sp, #60]	; 0x3c
 80144c0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80144c2:	041b      	lsls	r3, r3, #16
 80144c4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80144c8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80144cc:	432b      	orrs	r3, r5
 80144ce:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80144d0:	4353      	muls	r3, r2
 80144d2:	fb05 330c 	mla	r3, r5, ip, r3
 80144d6:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80144da:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80144de:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80144e2:	ea4c 0e0e 	orr.w	lr, ip, lr
 80144e6:	f1c1 0c10 	rsb	ip, r1, #16
 80144ea:	ebac 0c00 	sub.w	ip, ip, r0
 80144ee:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80144f2:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80144f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80144f8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80144fa:	0418      	lsls	r0, r3, #16
 80144fc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014500:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014504:	4318      	orrs	r0, r3
 8014506:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801450a:	fb02 c200 	mla	r2, r2, r0, ip
 801450e:	0d53      	lsrs	r3, r2, #21
 8014510:	0952      	lsrs	r2, r2, #5
 8014512:	f8b7 c000 	ldrh.w	ip, [r7]
 8014516:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801451a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801451e:	431a      	orrs	r2, r3
 8014520:	b292      	uxth	r2, r2
 8014522:	ea4f 212c 	mov.w	r1, ip, asr #8
 8014526:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801452a:	1210      	asrs	r0, r2, #8
 801452c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014530:	fb11 f105 	smulbb	r1, r1, r5
 8014534:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8014538:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801453c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014540:	fb00 1003 	mla	r0, r0, r3, r1
 8014544:	fa5f fc8c 	uxtb.w	ip, ip
 8014548:	10d1      	asrs	r1, r2, #3
 801454a:	00d2      	lsls	r2, r2, #3
 801454c:	fb1c fc05 	smulbb	ip, ip, r5
 8014550:	b2d2      	uxtb	r2, r2
 8014552:	fb02 c203 	mla	r2, r2, r3, ip
 8014556:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801455a:	b280      	uxth	r0, r0
 801455c:	b292      	uxth	r2, r2
 801455e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014562:	fb1e fe05 	smulbb	lr, lr, r5
 8014566:	fb01 e103 	mla	r1, r1, r3, lr
 801456a:	f102 0c01 	add.w	ip, r2, #1
 801456e:	1c43      	adds	r3, r0, #1
 8014570:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8014574:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8014578:	b289      	uxth	r1, r1
 801457a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801457e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8014582:	4313      	orrs	r3, r2
 8014584:	1c4a      	adds	r2, r1, #1
 8014586:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801458a:	0949      	lsrs	r1, r1, #5
 801458c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014590:	430b      	orrs	r3, r1
 8014592:	803b      	strh	r3, [r7, #0]
 8014594:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8014596:	4499      	add	r9, r3
 8014598:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801459a:	3702      	adds	r7, #2
 801459c:	4498      	add	r8, r3
 801459e:	f10b 3bff 	add.w	fp, fp, #4294967295
 80145a2:	e749      	b.n	8014438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80145a4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80145a6:	4499      	add	r9, r3
 80145a8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80145aa:	4498      	add	r8, r3
 80145ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80145ae:	3b01      	subs	r3, #1
 80145b0:	9309      	str	r3, [sp, #36]	; 0x24
 80145b2:	f10a 0a02 	add.w	sl, sl, #2
 80145b6:	e6f9      	b.n	80143ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80145b8:	f47f af0a 	bne.w	80143d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80145bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80145be:	2b00      	cmp	r3, #0
 80145c0:	f340 8109 	ble.w	80147d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 80145c4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80145c8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80145cc:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80145d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80145d2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80145d6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80145da:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80145de:	eef0 6a48 	vmov.f32	s13, s16
 80145e2:	ee69 7a27 	vmul.f32	s15, s18, s15
 80145e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80145ea:	ee37 8a48 	vsub.f32	s16, s14, s16
 80145ee:	ee16 9a90 	vmov	r9, s13
 80145f2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80145f6:	eef0 6a68 	vmov.f32	s13, s17
 80145fa:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80145fe:	ee18 2a10 	vmov	r2, s16
 8014602:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014606:	fb92 f3f3 	sdiv	r3, r2, r3
 801460a:	ee18 2a90 	vmov	r2, s17
 801460e:	932f      	str	r3, [sp, #188]	; 0xbc
 8014610:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014612:	fb92 f3f3 	sdiv	r3, r2, r3
 8014616:	9330      	str	r3, [sp, #192]	; 0xc0
 8014618:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801461a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 801461c:	3b01      	subs	r3, #1
 801461e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014622:	930d      	str	r3, [sp, #52]	; 0x34
 8014624:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014626:	bf08      	it	eq
 8014628:	4613      	moveq	r3, r2
 801462a:	ee16 8a90 	vmov	r8, s13
 801462e:	9309      	str	r3, [sp, #36]	; 0x24
 8014630:	eef0 8a67 	vmov.f32	s17, s15
 8014634:	eeb0 8a47 	vmov.f32	s16, s14
 8014638:	e6b1      	b.n	801439e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801463a:	2900      	cmp	r1, #0
 801463c:	f43f af30 	beq.w	80144a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8014640:	5d13      	ldrb	r3, [r2, r4]
 8014642:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014646:	9310      	str	r3, [sp, #64]	; 0x40
 8014648:	e72a      	b.n	80144a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 801464a:	1c55      	adds	r5, r2, #1
 801464c:	d1a2      	bne.n	8014594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801464e:	4294      	cmp	r4, r2
 8014650:	dda0      	ble.n	8014594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8014652:	1c5d      	adds	r5, r3, #1
 8014654:	db9e      	blt.n	8014594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8014656:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8014658:	429d      	cmp	r5, r3
 801465a:	dd9b      	ble.n	8014594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801465c:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8014660:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014662:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014664:	9202      	str	r2, [sp, #8]
 8014666:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801466a:	e9cd 4300 	strd	r4, r3, [sp]
 801466e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014670:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014672:	4633      	mov	r3, r6
 8014674:	4639      	mov	r1, r7
 8014676:	f7ff fd7f 	bl	8014178 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801467a:	e78b      	b.n	8014594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801467c:	ea4f 4329 	mov.w	r3, r9, asr #16
 8014680:	ea4f 4228 	mov.w	r2, r8, asr #16
 8014684:	fb04 3202 	mla	r2, r4, r2, r3
 8014688:	990c      	ldr	r1, [sp, #48]	; 0x30
 801468a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801468c:	4413      	add	r3, r2
 801468e:	5c8a      	ldrb	r2, [r1, r2]
 8014690:	f3c9 3c03 	ubfx	ip, r9, #12, #4
 8014694:	f3c8 3003 	ubfx	r0, r8, #12, #4
 8014698:	f836 1012 	ldrh.w	r1, [r6, r2, lsl #1]
 801469c:	f1bc 0f00 	cmp.w	ip, #0
 80146a0:	f000 8091 	beq.w	80147c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x492>
 80146a4:	785a      	ldrb	r2, [r3, #1]
 80146a6:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80146aa:	9215      	str	r2, [sp, #84]	; 0x54
 80146ac:	b140      	cbz	r0, 80146c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 80146ae:	191a      	adds	r2, r3, r4
 80146b0:	5d1b      	ldrb	r3, [r3, r4]
 80146b2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80146b6:	9311      	str	r3, [sp, #68]	; 0x44
 80146b8:	7853      	ldrb	r3, [r2, #1]
 80146ba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80146be:	9316      	str	r3, [sp, #88]	; 0x58
 80146c0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80146c2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80146c4:	fb1c f200 	smulbb	r2, ip, r0
 80146c8:	041f      	lsls	r7, r3, #16
 80146ca:	10d2      	asrs	r2, r2, #3
 80146cc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80146d0:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80146d4:	431f      	orrs	r7, r3
 80146d6:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80146da:	9319      	str	r3, [sp, #100]	; 0x64
 80146dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80146de:	041b      	lsls	r3, r3, #16
 80146e0:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80146e4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80146e8:	ea43 030b 	orr.w	r3, r3, fp
 80146ec:	9d19      	ldr	r5, [sp, #100]	; 0x64
 80146ee:	4353      	muls	r3, r2
 80146f0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80146f4:	fb05 3707 	mla	r7, r5, r7, r3
 80146f8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80146fc:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014700:	ea43 0b01 	orr.w	fp, r3, r1
 8014704:	f1c0 0110 	rsb	r1, r0, #16
 8014708:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801470a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801470c:	eba1 0c0c 	sub.w	ip, r1, ip
 8014710:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014714:	fb0c 770b 	mla	r7, ip, fp, r7
 8014718:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801471c:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8014720:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014724:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014728:	ea4c 0c0b 	orr.w	ip, ip, fp
 801472c:	fb02 770c 	mla	r7, r2, ip, r7
 8014730:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014732:	0d79      	lsrs	r1, r7, #21
 8014734:	8812      	ldrh	r2, [r2, #0]
 8014736:	097f      	lsrs	r7, r7, #5
 8014738:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801473c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014740:	430f      	orrs	r7, r1
 8014742:	1211      	asrs	r1, r2, #8
 8014744:	b2bb      	uxth	r3, r7
 8014746:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801474a:	fb11 f105 	smulbb	r1, r1, r5
 801474e:	1218      	asrs	r0, r3, #8
 8014750:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014752:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014756:	fb00 1005 	mla	r0, r0, r5, r1
 801475a:	10d7      	asrs	r7, r2, #3
 801475c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801475e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014762:	fb17 f705 	smulbb	r7, r7, r5
 8014766:	10d9      	asrs	r1, r3, #3
 8014768:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801476a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801476e:	fb01 7105 	mla	r1, r1, r5, r7
 8014772:	00d2      	lsls	r2, r2, #3
 8014774:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8014776:	b2d2      	uxtb	r2, r2
 8014778:	fb12 f205 	smulbb	r2, r2, r5
 801477c:	00db      	lsls	r3, r3, #3
 801477e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014780:	b2db      	uxtb	r3, r3
 8014782:	b280      	uxth	r0, r0
 8014784:	fb03 2305 	mla	r3, r3, r5, r2
 8014788:	b29b      	uxth	r3, r3
 801478a:	b289      	uxth	r1, r1
 801478c:	1c42      	adds	r2, r0, #1
 801478e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8014792:	1c4f      	adds	r7, r1, #1
 8014794:	1c5a      	adds	r2, r3, #1
 8014796:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801479a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801479e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80147a2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80147a6:	0949      	lsrs	r1, r1, #5
 80147a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80147aa:	4310      	orrs	r0, r2
 80147ac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80147b0:	4308      	orrs	r0, r1
 80147b2:	f823 0b02 	strh.w	r0, [r3], #2
 80147b6:	930f      	str	r3, [sp, #60]	; 0x3c
 80147b8:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80147ba:	4499      	add	r9, r3
 80147bc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80147be:	f10e 3eff 	add.w	lr, lr, #4294967295
 80147c2:	4498      	add	r8, r3
 80147c4:	e61e      	b.n	8014404 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 80147c6:	2800      	cmp	r0, #0
 80147c8:	f43f af7a 	beq.w	80146c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 80147cc:	5d1b      	ldrb	r3, [r3, r4]
 80147ce:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80147d2:	9311      	str	r3, [sp, #68]	; 0x44
 80147d4:	e774      	b.n	80146c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 80147d6:	b01b      	add	sp, #108	; 0x6c
 80147d8:	ecbd 8b08 	vpop	{d8-d11}
 80147dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080147e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80147e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80147e4:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 80147e8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80147ec:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80147f0:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 80147f4:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80147f8:	8808      	ldrh	r0, [r1, #0]
 80147fa:	fb06 570e 	mla	r7, r6, lr, r5
 80147fe:	2e00      	cmp	r6, #0
 8014800:	eb02 0807 	add.w	r8, r2, r7
 8014804:	db38      	blt.n	8014878 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8014806:	45b1      	cmp	r9, r6
 8014808:	dd36      	ble.n	8014878 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801480a:	2d00      	cmp	r5, #0
 801480c:	db32      	blt.n	8014874 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801480e:	45ae      	cmp	lr, r5
 8014810:	dd30      	ble.n	8014874 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014812:	5dd2      	ldrb	r2, [r2, r7]
 8014814:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8014818:	1c6a      	adds	r2, r5, #1
 801481a:	d430      	bmi.n	801487e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801481c:	4596      	cmp	lr, r2
 801481e:	dd2e      	ble.n	801487e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014820:	b36c      	cbz	r4, 801487e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014822:	f898 2001 	ldrb.w	r2, [r8, #1]
 8014826:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801482a:	3601      	adds	r6, #1
 801482c:	d42b      	bmi.n	8014886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801482e:	45b1      	cmp	r9, r6
 8014830:	dd29      	ble.n	8014886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014832:	f1bc 0f00 	cmp.w	ip, #0
 8014836:	d028      	beq.n	801488a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8014838:	2d00      	cmp	r5, #0
 801483a:	db22      	blt.n	8014882 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801483c:	45ae      	cmp	lr, r5
 801483e:	dd20      	ble.n	8014882 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014840:	f818 600e 	ldrb.w	r6, [r8, lr]
 8014844:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8014848:	3501      	adds	r5, #1
 801484a:	d407      	bmi.n	801485c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801484c:	45ae      	cmp	lr, r5
 801484e:	dd05      	ble.n	801485c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014850:	b134      	cbz	r4, 8014860 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8014852:	44c6      	add	lr, r8
 8014854:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8014858:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801485c:	2c0f      	cmp	r4, #15
 801485e:	d802      	bhi.n	8014866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014860:	f1bc 0f0f 	cmp.w	ip, #15
 8014864:	d914      	bls.n	8014890 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8014866:	4b26      	ldr	r3, [pc, #152]	; (8014900 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8014868:	4a26      	ldr	r2, [pc, #152]	; (8014904 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 801486a:	4827      	ldr	r0, [pc, #156]	; (8014908 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 801486c:	f240 3155 	movw	r1, #853	; 0x355
 8014870:	f006 fcfe 	bl	801b270 <__assert_func>
 8014874:	4607      	mov	r7, r0
 8014876:	e7cf      	b.n	8014818 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8014878:	4602      	mov	r2, r0
 801487a:	4607      	mov	r7, r0
 801487c:	e7d5      	b.n	801482a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801487e:	4602      	mov	r2, r0
 8014880:	e7d3      	b.n	801482a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014882:	4606      	mov	r6, r0
 8014884:	e7e0      	b.n	8014848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8014886:	4606      	mov	r6, r0
 8014888:	e7e8      	b.n	801485c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801488a:	2c0f      	cmp	r4, #15
 801488c:	d8eb      	bhi.n	8014866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801488e:	4606      	mov	r6, r0
 8014890:	043d      	lsls	r5, r7, #16
 8014892:	fb14 f30c 	smulbb	r3, r4, ip
 8014896:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801489a:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801489e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80148a2:	10db      	asrs	r3, r3, #3
 80148a4:	432f      	orrs	r7, r5
 80148a6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80148aa:	f1cc 0510 	rsb	r5, ip, #16
 80148ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80148b2:	1b2d      	subs	r5, r5, r4
 80148b4:	ea4e 0202 	orr.w	r2, lr, r2
 80148b8:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80148bc:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80148c0:	4354      	muls	r4, r2
 80148c2:	fb05 4507 	mla	r5, r5, r7, r4
 80148c6:	0404      	lsls	r4, r0, #16
 80148c8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80148cc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80148d0:	4320      	orrs	r0, r4
 80148d2:	fb03 5400 	mla	r4, r3, r0, r5
 80148d6:	0430      	lsls	r0, r6, #16
 80148d8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80148dc:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80148e0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80148e4:	4330      	orrs	r0, r6
 80148e6:	fb03 4000 	mla	r0, r3, r0, r4
 80148ea:	0d43      	lsrs	r3, r0, #21
 80148ec:	0940      	lsrs	r0, r0, #5
 80148ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80148f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80148f6:	4318      	orrs	r0, r3
 80148f8:	8008      	strh	r0, [r1, #0]
 80148fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80148fe:	bf00      	nop
 8014900:	0801eea7 	.word	0x0801eea7
 8014904:	0801f4ae 	.word	0x0801f4ae
 8014908:	0801ef2f 	.word	0x0801ef2f

0801490c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801490c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014910:	ed2d 8b0a 	vpush	{d8-d12}
 8014914:	b095      	sub	sp, #84	; 0x54
 8014916:	e9dd 9629 	ldrd	r9, r6, [sp, #164]	; 0xa4
 801491a:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 801491c:	9306      	str	r3, [sp, #24]
 801491e:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8014922:	9109      	str	r1, [sp, #36]	; 0x24
 8014924:	9307      	str	r3, [sp, #28]
 8014926:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801492a:	9012      	str	r0, [sp, #72]	; 0x48
 801492c:	6878      	ldr	r0, [r7, #4]
 801492e:	9211      	str	r2, [sp, #68]	; 0x44
 8014930:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014932:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8014936:	fb00 1303 	mla	r3, r0, r3, r1
 801493a:	6839      	ldr	r1, [r7, #0]
 801493c:	6857      	ldr	r7, [r2, #4]
 801493e:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8014942:	6813      	ldr	r3, [r2, #0]
 8014944:	9308      	str	r3, [sp, #32]
 8014946:	eeb0 aa40 	vmov.f32	s20, s0
 801494a:	eef0 9a60 	vmov.f32	s19, s1
 801494e:	eeb0 9a41 	vmov.f32	s18, s2
 8014952:	eeb0 8a62 	vmov.f32	s16, s5
 8014956:	eef0 8a43 	vmov.f32	s17, s6
 801495a:	eeb0 ca44 	vmov.f32	s24, s8
 801495e:	eef0 ba64 	vmov.f32	s23, s9
 8014962:	eeb0 ba45 	vmov.f32	s22, s10
 8014966:	3704      	adds	r7, #4
 8014968:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 801496c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801496e:	2b00      	cmp	r3, #0
 8014970:	dc03      	bgt.n	801497a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8014972:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014974:	2b00      	cmp	r3, #0
 8014976:	f340 819a 	ble.w	8014cae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 801497a:	9b06      	ldr	r3, [sp, #24]
 801497c:	2b00      	cmp	r3, #0
 801497e:	f340 80c4 	ble.w	8014b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014982:	ea5f 4229 	movs.w	r2, r9, asr #16
 8014986:	ea4f 4326 	mov.w	r3, r6, asr #16
 801498a:	d429      	bmi.n	80149e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 801498c:	1c51      	adds	r1, r2, #1
 801498e:	428c      	cmp	r4, r1
 8014990:	dd29      	ble.n	80149e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8014992:	2b00      	cmp	r3, #0
 8014994:	db27      	blt.n	80149e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8014996:	9807      	ldr	r0, [sp, #28]
 8014998:	1c59      	adds	r1, r3, #1
 801499a:	4288      	cmp	r0, r1
 801499c:	dd23      	ble.n	80149e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 801499e:	9b06      	ldr	r3, [sp, #24]
 80149a0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80149a2:	3b01      	subs	r3, #1
 80149a4:	fb02 9203 	mla	r2, r2, r3, r9
 80149a8:	1412      	asrs	r2, r2, #16
 80149aa:	d425      	bmi.n	80149f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80149ac:	3201      	adds	r2, #1
 80149ae:	4294      	cmp	r4, r2
 80149b0:	dd22      	ble.n	80149f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80149b2:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80149b4:	fb02 6303 	mla	r3, r2, r3, r6
 80149b8:	141b      	asrs	r3, r3, #16
 80149ba:	d41d      	bmi.n	80149f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80149bc:	9a07      	ldr	r2, [sp, #28]
 80149be:	3301      	adds	r3, #1
 80149c0:	429a      	cmp	r2, r3
 80149c2:	dd19      	ble.n	80149f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80149c4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80149c8:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 80149cc:	f1b8 0f00 	cmp.w	r8, #0
 80149d0:	f300 80f8 	bgt.w	8014bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b8>
 80149d4:	9b06      	ldr	r3, [sp, #24]
 80149d6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80149da:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80149de:	e096      	b.n	8014b0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 80149e0:	1c51      	adds	r1, r2, #1
 80149e2:	f040 8088 	bne.w	8014af6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80149e6:	42a2      	cmp	r2, r4
 80149e8:	f280 8085 	bge.w	8014af6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80149ec:	1c5a      	adds	r2, r3, #1
 80149ee:	f2c0 8082 	blt.w	8014af6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80149f2:	9a07      	ldr	r2, [sp, #28]
 80149f4:	4293      	cmp	r3, r2
 80149f6:	da7e      	bge.n	8014af6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80149f8:	f8dd b018 	ldr.w	fp, [sp, #24]
 80149fc:	46d0      	mov	r8, sl
 80149fe:	f1bb 0f00 	cmp.w	fp, #0
 8014a02:	dde7      	ble.n	80149d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8014a04:	ea5f 4229 	movs.w	r2, r9, asr #16
 8014a08:	ea4f 4326 	mov.w	r3, r6, asr #16
 8014a0c:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8014a10:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8014a14:	f100 80c0 	bmi.w	8014b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8014a18:	f102 0c01 	add.w	ip, r2, #1
 8014a1c:	4564      	cmp	r4, ip
 8014a1e:	f340 80bd 	ble.w	8014b9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8014a22:	2b00      	cmp	r3, #0
 8014a24:	f2c0 80ba 	blt.w	8014b9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8014a28:	9d07      	ldr	r5, [sp, #28]
 8014a2a:	f103 0c01 	add.w	ip, r3, #1
 8014a2e:	4565      	cmp	r5, ip
 8014a30:	f340 80b4 	ble.w	8014b9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8014a34:	fb03 2304 	mla	r3, r3, r4, r2
 8014a38:	9d08      	ldr	r5, [sp, #32]
 8014a3a:	9a08      	ldr	r2, [sp, #32]
 8014a3c:	441a      	add	r2, r3
 8014a3e:	5ceb      	ldrb	r3, [r5, r3]
 8014a40:	f837 e013 	ldrh.w	lr, [r7, r3, lsl #1]
 8014a44:	2800      	cmp	r0, #0
 8014a46:	f000 809f 	beq.w	8014b88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27c>
 8014a4a:	7853      	ldrb	r3, [r2, #1]
 8014a4c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014a50:	930d      	str	r3, [sp, #52]	; 0x34
 8014a52:	b141      	cbz	r1, 8014a66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8014a54:	1913      	adds	r3, r2, r4
 8014a56:	5d12      	ldrb	r2, [r2, r4]
 8014a58:	785b      	ldrb	r3, [r3, #1]
 8014a5a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8014a5e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014a62:	920a      	str	r2, [sp, #40]	; 0x28
 8014a64:	930e      	str	r3, [sp, #56]	; 0x38
 8014a66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014a68:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014a6a:	fb10 f201 	smulbb	r2, r0, r1
 8014a6e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014a72:	10d2      	asrs	r2, r2, #3
 8014a74:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014a78:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014a7c:	ea4c 0c03 	orr.w	ip, ip, r3
 8014a80:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8014a84:	930c      	str	r3, [sp, #48]	; 0x30
 8014a86:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a88:	041b      	lsls	r3, r3, #16
 8014a8a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8014a8e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014a92:	432b      	orrs	r3, r5
 8014a94:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8014a96:	4353      	muls	r3, r2
 8014a98:	fb05 330c 	mla	r3, r5, ip, r3
 8014a9c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014aa0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014aa4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014aa8:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014aac:	f1c1 0c10 	rsb	ip, r1, #16
 8014ab0:	ebac 0c00 	sub.w	ip, ip, r0
 8014ab4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014ab8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014abc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014abe:	0418      	lsls	r0, r3, #16
 8014ac0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014ac4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014ac8:	4318      	orrs	r0, r3
 8014aca:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014ace:	fb02 c200 	mla	r2, r2, r0, ip
 8014ad2:	0d53      	lsrs	r3, r2, #21
 8014ad4:	0952      	lsrs	r2, r2, #5
 8014ad6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014ada:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014ade:	431a      	orrs	r2, r3
 8014ae0:	f8a8 2000 	strh.w	r2, [r8]
 8014ae4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014ae6:	4499      	add	r9, r3
 8014ae8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014aea:	f108 0802 	add.w	r8, r8, #2
 8014aee:	441e      	add	r6, r3
 8014af0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014af4:	e783      	b.n	80149fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014af6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014af8:	4499      	add	r9, r3
 8014afa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014afc:	441e      	add	r6, r3
 8014afe:	9b06      	ldr	r3, [sp, #24]
 8014b00:	3b01      	subs	r3, #1
 8014b02:	9306      	str	r3, [sp, #24]
 8014b04:	f10a 0a02 	add.w	sl, sl, #2
 8014b08:	e737      	b.n	801497a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8014b0a:	f47f af48 	bne.w	801499e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8014b0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014b10:	2b00      	cmp	r3, #0
 8014b12:	f340 80cc 	ble.w	8014cae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8014b16:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8014b1a:	ee79 9aab 	vadd.f32	s19, s19, s23
 8014b1e:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8014b22:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014b24:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8014b28:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014b2c:	eef0 6a48 	vmov.f32	s13, s16
 8014b30:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014b34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b38:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014b3c:	ee16 9a90 	vmov	r9, s13
 8014b40:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014b44:	eef0 6a68 	vmov.f32	s13, s17
 8014b48:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014b4c:	ee18 2a10 	vmov	r2, s16
 8014b50:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014b54:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b58:	ee18 2a90 	vmov	r2, s17
 8014b5c:	932b      	str	r3, [sp, #172]	; 0xac
 8014b5e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014b60:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b64:	932c      	str	r3, [sp, #176]	; 0xb0
 8014b66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014b68:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014b6a:	3b01      	subs	r3, #1
 8014b6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b70:	9309      	str	r3, [sp, #36]	; 0x24
 8014b72:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014b74:	bf08      	it	eq
 8014b76:	4613      	moveq	r3, r2
 8014b78:	ee16 6a90 	vmov	r6, s13
 8014b7c:	9306      	str	r3, [sp, #24]
 8014b7e:	eef0 8a67 	vmov.f32	s17, s15
 8014b82:	eeb0 8a47 	vmov.f32	s16, s14
 8014b86:	e6f1      	b.n	801496c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8014b88:	2900      	cmp	r1, #0
 8014b8a:	f43f af6c 	beq.w	8014a66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8014b8e:	5d13      	ldrb	r3, [r2, r4]
 8014b90:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014b94:	930a      	str	r3, [sp, #40]	; 0x28
 8014b96:	e766      	b.n	8014a66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8014b98:	1c55      	adds	r5, r2, #1
 8014b9a:	d1a3      	bne.n	8014ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014b9c:	4294      	cmp	r4, r2
 8014b9e:	dda1      	ble.n	8014ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014ba0:	1c5d      	adds	r5, r3, #1
 8014ba2:	db9f      	blt.n	8014ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014ba4:	9d07      	ldr	r5, [sp, #28]
 8014ba6:	429d      	cmp	r5, r3
 8014ba8:	dd9c      	ble.n	8014ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014baa:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8014bae:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8014bb2:	e9cd 4500 	strd	r4, r5, [sp]
 8014bb6:	463b      	mov	r3, r7
 8014bb8:	9a08      	ldr	r2, [sp, #32]
 8014bba:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014bbc:	4641      	mov	r1, r8
 8014bbe:	f7ff fe0f 	bl	80147e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8014bc2:	e78f      	b.n	8014ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014bc4:	ea4f 4329 	mov.w	r3, r9, asr #16
 8014bc8:	1432      	asrs	r2, r6, #16
 8014bca:	fb04 3202 	mla	r2, r4, r2, r3
 8014bce:	9908      	ldr	r1, [sp, #32]
 8014bd0:	9b08      	ldr	r3, [sp, #32]
 8014bd2:	4413      	add	r3, r2
 8014bd4:	5c8a      	ldrb	r2, [r1, r2]
 8014bd6:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 8014bda:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8014bde:	f837 1012 	ldrh.w	r1, [r7, r2, lsl #1]
 8014be2:	f1be 0f00 	cmp.w	lr, #0
 8014be6:	d05b      	beq.n	8014ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x394>
 8014be8:	785a      	ldrb	r2, [r3, #1]
 8014bea:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8014bee:	920f      	str	r2, [sp, #60]	; 0x3c
 8014bf0:	b140      	cbz	r0, 8014c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014bf2:	191a      	adds	r2, r3, r4
 8014bf4:	5d1b      	ldrb	r3, [r3, r4]
 8014bf6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014bfa:	930b      	str	r3, [sp, #44]	; 0x2c
 8014bfc:	7853      	ldrb	r3, [r2, #1]
 8014bfe:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014c02:	9310      	str	r3, [sp, #64]	; 0x40
 8014c04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014c06:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8014c08:	fb1e f200 	smulbb	r2, lr, r0
 8014c0c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014c10:	10d2      	asrs	r2, r2, #3
 8014c12:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014c16:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014c1a:	ea4c 0c03 	orr.w	ip, ip, r3
 8014c1e:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8014c22:	9313      	str	r3, [sp, #76]	; 0x4c
 8014c24:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c26:	041b      	lsls	r3, r3, #16
 8014c28:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8014c2c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014c30:	ea43 030b 	orr.w	r3, r3, fp
 8014c34:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014c36:	4353      	muls	r3, r2
 8014c38:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014c3c:	fb05 3c0c 	mla	ip, r5, ip, r3
 8014c40:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014c44:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014c48:	ea43 0b01 	orr.w	fp, r3, r1
 8014c4c:	f1c0 0110 	rsb	r1, r0, #16
 8014c50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014c52:	eba1 0e0e 	sub.w	lr, r1, lr
 8014c56:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8014c5a:	fb0e cc0b 	mla	ip, lr, fp, ip
 8014c5e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8014c62:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8014c66:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8014c6a:	ea4b 0e0e 	orr.w	lr, fp, lr
 8014c6e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014c72:	fb02 cc0e 	mla	ip, r2, lr, ip
 8014c76:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8014c7a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8014c7e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014c82:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8014c86:	ea43 0c0c 	orr.w	ip, r3, ip
 8014c8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c8c:	f823 cb02 	strh.w	ip, [r3], #2
 8014c90:	930c      	str	r3, [sp, #48]	; 0x30
 8014c92:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014c94:	4499      	add	r9, r3
 8014c96:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014c98:	f108 38ff 	add.w	r8, r8, #4294967295
 8014c9c:	441e      	add	r6, r3
 8014c9e:	e695      	b.n	80149cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8014ca0:	2800      	cmp	r0, #0
 8014ca2:	d0af      	beq.n	8014c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014ca4:	5d1b      	ldrb	r3, [r3, r4]
 8014ca6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014caa:	930b      	str	r3, [sp, #44]	; 0x2c
 8014cac:	e7aa      	b.n	8014c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014cae:	b015      	add	sp, #84	; 0x54
 8014cb0:	ecbd 8b0a 	vpop	{d8-d12}
 8014cb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014cb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8014cb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014cbc:	468b      	mov	fp, r1
 8014cbe:	8809      	ldrh	r1, [r1, #0]
 8014cc0:	b089      	sub	sp, #36	; 0x24
 8014cc2:	10cd      	asrs	r5, r1, #3
 8014cc4:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8014cc8:	ea4f 2921 	mov.w	r9, r1, asr #8
 8014ccc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014cd0:	00c9      	lsls	r1, r1, #3
 8014cd2:	9500      	str	r5, [sp, #0]
 8014cd4:	b2c9      	uxtb	r1, r1
 8014cd6:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8014cda:	9101      	str	r1, [sp, #4]
 8014cdc:	9900      	ldr	r1, [sp, #0]
 8014cde:	9202      	str	r2, [sp, #8]
 8014ce0:	fb04 650e 	mla	r5, r4, lr, r6
 8014ce4:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8014ce8:	eb02 0805 	add.w	r8, r2, r5
 8014cec:	0209      	lsls	r1, r1, #8
 8014cee:	9a01      	ldr	r2, [sp, #4]
 8014cf0:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8014cf4:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8014cf8:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8014cfc:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8014d00:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8014d04:	4311      	orrs	r1, r2
 8014d06:	2c00      	cmp	r4, #0
 8014d08:	9107      	str	r1, [sp, #28]
 8014d0a:	db43      	blt.n	8014d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014d0c:	45a2      	cmp	sl, r4
 8014d0e:	dd41      	ble.n	8014d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014d10:	2e00      	cmp	r6, #0
 8014d12:	db3d      	blt.n	8014d90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8014d14:	45b6      	cmp	lr, r6
 8014d16:	dd3b      	ble.n	8014d90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8014d18:	9a02      	ldr	r2, [sp, #8]
 8014d1a:	5d55      	ldrb	r5, [r2, r5]
 8014d1c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014d20:	441d      	add	r5, r3
 8014d22:	1c72      	adds	r2, r6, #1
 8014d24:	d439      	bmi.n	8014d9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014d26:	4596      	cmp	lr, r2
 8014d28:	dd37      	ble.n	8014d9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014d2a:	2f00      	cmp	r7, #0
 8014d2c:	d035      	beq.n	8014d9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014d2e:	f898 1001 	ldrb.w	r1, [r8, #1]
 8014d32:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8014d36:	4419      	add	r1, r3
 8014d38:	3401      	adds	r4, #1
 8014d3a:	d432      	bmi.n	8014da2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014d3c:	45a2      	cmp	sl, r4
 8014d3e:	dd30      	ble.n	8014da2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014d40:	b378      	cbz	r0, 8014da2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014d42:	2e00      	cmp	r6, #0
 8014d44:	db2b      	blt.n	8014d9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8014d46:	45b6      	cmp	lr, r6
 8014d48:	dd29      	ble.n	8014d9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8014d4a:	f818 400e 	ldrb.w	r4, [r8, lr]
 8014d4e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8014d52:	441c      	add	r4, r3
 8014d54:	3601      	adds	r6, #1
 8014d56:	d427      	bmi.n	8014da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014d58:	45b6      	cmp	lr, r6
 8014d5a:	dd25      	ble.n	8014da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014d5c:	b327      	cbz	r7, 8014da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014d5e:	44c6      	add	lr, r8
 8014d60:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8014d64:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014d68:	4413      	add	r3, r2
 8014d6a:	782a      	ldrb	r2, [r5, #0]
 8014d6c:	9202      	str	r2, [sp, #8]
 8014d6e:	780a      	ldrb	r2, [r1, #0]
 8014d70:	9203      	str	r2, [sp, #12]
 8014d72:	7822      	ldrb	r2, [r4, #0]
 8014d74:	9204      	str	r2, [sp, #16]
 8014d76:	2f0f      	cmp	r7, #15
 8014d78:	781a      	ldrb	r2, [r3, #0]
 8014d7a:	9205      	str	r2, [sp, #20]
 8014d7c:	d801      	bhi.n	8014d82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8014d7e:	280f      	cmp	r0, #15
 8014d80:	d914      	bls.n	8014dac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8014d82:	4b3f      	ldr	r3, [pc, #252]	; (8014e80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8014d84:	4a3f      	ldr	r2, [pc, #252]	; (8014e84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8014d86:	4840      	ldr	r0, [pc, #256]	; (8014e88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8014d88:	f240 3173 	movw	r1, #883	; 0x373
 8014d8c:	f006 fa70 	bl	801b270 <__assert_func>
 8014d90:	ad07      	add	r5, sp, #28
 8014d92:	e7c6      	b.n	8014d22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8014d94:	a907      	add	r1, sp, #28
 8014d96:	460d      	mov	r5, r1
 8014d98:	e7ce      	b.n	8014d38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014d9a:	a907      	add	r1, sp, #28
 8014d9c:	e7cc      	b.n	8014d38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014d9e:	ac07      	add	r4, sp, #28
 8014da0:	e7d8      	b.n	8014d54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8014da2:	ab07      	add	r3, sp, #28
 8014da4:	461c      	mov	r4, r3
 8014da6:	e7e0      	b.n	8014d6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014da8:	ab07      	add	r3, sp, #28
 8014daa:	e7de      	b.n	8014d6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014dac:	b2ba      	uxth	r2, r7
 8014dae:	b280      	uxth	r0, r0
 8014db0:	fb02 fa00 	mul.w	sl, r2, r0
 8014db4:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8014db8:	0112      	lsls	r2, r2, #4
 8014dba:	b280      	uxth	r0, r0
 8014dbc:	f891 8002 	ldrb.w	r8, [r1, #2]
 8014dc0:	7849      	ldrb	r1, [r1, #1]
 8014dc2:	78ae      	ldrb	r6, [r5, #2]
 8014dc4:	786d      	ldrb	r5, [r5, #1]
 8014dc6:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8014dca:	eba2 020a 	sub.w	r2, r2, sl
 8014dce:	b292      	uxth	r2, r2
 8014dd0:	ebae 0e00 	sub.w	lr, lr, r0
 8014dd4:	fa1f fe8e 	uxth.w	lr, lr
 8014dd8:	4351      	muls	r1, r2
 8014dda:	fb02 f808 	mul.w	r8, r2, r8
 8014dde:	fb0e 8806 	mla	r8, lr, r6, r8
 8014de2:	fb0e 1505 	mla	r5, lr, r5, r1
 8014de6:	78a6      	ldrb	r6, [r4, #2]
 8014de8:	7861      	ldrb	r1, [r4, #1]
 8014dea:	fa1f f78c 	uxth.w	r7, ip
 8014dee:	fb00 8806 	mla	r8, r0, r6, r8
 8014df2:	fb00 5501 	mla	r5, r0, r1, r5
 8014df6:	789e      	ldrb	r6, [r3, #2]
 8014df8:	7859      	ldrb	r1, [r3, #1]
 8014dfa:	9b00      	ldr	r3, [sp, #0]
 8014dfc:	ea6f 0c0c 	mvn.w	ip, ip
 8014e00:	fa5f fc8c 	uxtb.w	ip, ip
 8014e04:	fb0a 5101 	mla	r1, sl, r1, r5
 8014e08:	fb13 f50c 	smulbb	r5, r3, ip
 8014e0c:	9b03      	ldr	r3, [sp, #12]
 8014e0e:	435a      	muls	r2, r3
 8014e10:	9b02      	ldr	r3, [sp, #8]
 8014e12:	fb0e 2203 	mla	r2, lr, r3, r2
 8014e16:	9b04      	ldr	r3, [sp, #16]
 8014e18:	fb00 2003 	mla	r0, r0, r3, r2
 8014e1c:	9b05      	ldr	r3, [sp, #20]
 8014e1e:	fb0a 8606 	mla	r6, sl, r6, r8
 8014e22:	fb0a 0a03 	mla	sl, sl, r3, r0
 8014e26:	9b01      	ldr	r3, [sp, #4]
 8014e28:	fb19 f90c 	smulbb	r9, r9, ip
 8014e2c:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8014e30:	fb13 fc0c 	smulbb	ip, r3, ip
 8014e34:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014e38:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8014e3c:	fb06 9607 	mla	r6, r6, r7, r9
 8014e40:	fb01 5107 	mla	r1, r1, r7, r5
 8014e44:	fb0a c707 	mla	r7, sl, r7, ip
 8014e48:	b2b6      	uxth	r6, r6
 8014e4a:	b289      	uxth	r1, r1
 8014e4c:	b2bf      	uxth	r7, r7
 8014e4e:	f106 0901 	add.w	r9, r6, #1
 8014e52:	f107 0c01 	add.w	ip, r7, #1
 8014e56:	1c4d      	adds	r5, r1, #1
 8014e58:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8014e5c:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8014e60:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8014e64:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014e68:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8014e6c:	0949      	lsrs	r1, r1, #5
 8014e6e:	433e      	orrs	r6, r7
 8014e70:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014e74:	430e      	orrs	r6, r1
 8014e76:	f8ab 6000 	strh.w	r6, [fp]
 8014e7a:	b009      	add	sp, #36	; 0x24
 8014e7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e80:	0801eea7 	.word	0x0801eea7
 8014e84:	0801f405 	.word	0x0801f405
 8014e88:	0801ef2f 	.word	0x0801ef2f

08014e8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e90:	ed2d 8b08 	vpush	{d8-d11}
 8014e94:	b097      	sub	sp, #92	; 0x5c
 8014e96:	eeb0 aa40 	vmov.f32	s20, s0
 8014e9a:	9309      	str	r3, [sp, #36]	; 0x24
 8014e9c:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8014ea0:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8014ea2:	930b      	str	r3, [sp, #44]	; 0x2c
 8014ea4:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8014ea8:	9310      	str	r3, [sp, #64]	; 0x40
 8014eaa:	910f      	str	r1, [sp, #60]	; 0x3c
 8014eac:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8014eb0:	9015      	str	r0, [sp, #84]	; 0x54
 8014eb2:	6860      	ldr	r0, [r4, #4]
 8014eb4:	9213      	str	r2, [sp, #76]	; 0x4c
 8014eb6:	fb00 1303 	mla	r3, r0, r3, r1
 8014eba:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014ebc:	6821      	ldr	r1, [r4, #0]
 8014ebe:	6854      	ldr	r4, [r2, #4]
 8014ec0:	f9bd 50c0 	ldrsh.w	r5, [sp, #192]	; 0xc0
 8014ec4:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8014ec8:	930a      	str	r3, [sp, #40]	; 0x28
 8014eca:	6813      	ldr	r3, [r2, #0]
 8014ecc:	930e      	str	r3, [sp, #56]	; 0x38
 8014ece:	1d23      	adds	r3, r4, #4
 8014ed0:	9308      	str	r3, [sp, #32]
 8014ed2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014ed4:	43db      	mvns	r3, r3
 8014ed6:	b2db      	uxtb	r3, r3
 8014ed8:	eef0 9a60 	vmov.f32	s19, s1
 8014edc:	eeb0 9a41 	vmov.f32	s18, s2
 8014ee0:	eeb0 8a62 	vmov.f32	s16, s5
 8014ee4:	eef0 8a43 	vmov.f32	s17, s6
 8014ee8:	eef0 ba44 	vmov.f32	s23, s8
 8014eec:	eeb0 ba64 	vmov.f32	s22, s9
 8014ef0:	eef0 aa45 	vmov.f32	s21, s10
 8014ef4:	930c      	str	r3, [sp, #48]	; 0x30
 8014ef6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014ef8:	2b00      	cmp	r3, #0
 8014efa:	dc03      	bgt.n	8014f04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8014efc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014efe:	2b00      	cmp	r3, #0
 8014f00:	f340 825c 	ble.w	80153bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8014f04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f06:	2b00      	cmp	r3, #0
 8014f08:	f340 8127 	ble.w	801515a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ce>
 8014f0c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014f0e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014f10:	1412      	asrs	r2, r2, #16
 8014f12:	ea4f 4323 	mov.w	r3, r3, asr #16
 8014f16:	d430      	bmi.n	8014f7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8014f18:	1c51      	adds	r1, r2, #1
 8014f1a:	428d      	cmp	r5, r1
 8014f1c:	dd30      	ble.n	8014f80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8014f1e:	2b00      	cmp	r3, #0
 8014f20:	db2e      	blt.n	8014f80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8014f22:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014f24:	1c59      	adds	r1, r3, #1
 8014f26:	4288      	cmp	r0, r1
 8014f28:	dd2a      	ble.n	8014f80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8014f2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f2c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014f2e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014f30:	3b01      	subs	r3, #1
 8014f32:	fb02 1203 	mla	r2, r2, r3, r1
 8014f36:	1412      	asrs	r2, r2, #16
 8014f38:	d42c      	bmi.n	8014f94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014f3a:	3201      	adds	r2, #1
 8014f3c:	4295      	cmp	r5, r2
 8014f3e:	dd29      	ble.n	8014f94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014f40:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014f42:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014f44:	fb02 1303 	mla	r3, r2, r3, r1
 8014f48:	141b      	asrs	r3, r3, #16
 8014f4a:	d423      	bmi.n	8014f94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014f4c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014f4e:	3301      	adds	r3, #1
 8014f50:	429a      	cmp	r2, r3
 8014f52:	dd1f      	ble.n	8014f94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014f54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f56:	9311      	str	r3, [sp, #68]	; 0x44
 8014f58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014f5a:	930d      	str	r3, [sp, #52]	; 0x34
 8014f5c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8014f60:	9312      	str	r3, [sp, #72]	; 0x48
 8014f62:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014f64:	2b00      	cmp	r3, #0
 8014f66:	f300 8161 	bgt.w	801522c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a0>
 8014f6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f6c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014f6e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014f72:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014f76:	930a      	str	r3, [sp, #40]	; 0x28
 8014f78:	e0f1      	b.n	801515e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8014f7a:	1c51      	adds	r1, r2, #1
 8014f7c:	f040 80de 	bne.w	801513c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014f80:	42aa      	cmp	r2, r5
 8014f82:	f280 80db 	bge.w	801513c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014f86:	1c5f      	adds	r7, r3, #1
 8014f88:	f2c0 80d8 	blt.w	801513c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014f8c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014f8e:	4293      	cmp	r3, r2
 8014f90:	f280 80d4 	bge.w	801513c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014f94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f96:	9311      	str	r3, [sp, #68]	; 0x44
 8014f98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014f9a:	930d      	str	r3, [sp, #52]	; 0x34
 8014f9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014f9e:	2b00      	cmp	r3, #0
 8014fa0:	dde3      	ble.n	8014f6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8014fa2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014fa4:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8014fa6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014fa8:	141a      	asrs	r2, r3, #16
 8014faa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014fac:	1400      	asrs	r0, r0, #16
 8014fae:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014fb2:	f3c1 3103 	ubfx	r1, r1, #12, #4
 8014fb6:	f100 8120 	bmi.w	80151fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36e>
 8014fba:	1c46      	adds	r6, r0, #1
 8014fbc:	42b5      	cmp	r5, r6
 8014fbe:	f340 811e 	ble.w	80151fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8014fc2:	2a00      	cmp	r2, #0
 8014fc4:	f2c0 811b 	blt.w	80151fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8014fc8:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8014fca:	1c56      	adds	r6, r2, #1
 8014fcc:	42b7      	cmp	r7, r6
 8014fce:	f340 8116 	ble.w	80151fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8014fd2:	fb02 0005 	mla	r0, r2, r5, r0
 8014fd6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014fd8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014fda:	9c08      	ldr	r4, [sp, #32]
 8014fdc:	4402      	add	r2, r0
 8014fde:	5c30      	ldrb	r0, [r6, r0]
 8014fe0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014fe4:	9014      	str	r0, [sp, #80]	; 0x50
 8014fe6:	1826      	adds	r6, r4, r0
 8014fe8:	2b00      	cmp	r3, #0
 8014fea:	f000 80f7 	beq.w	80151dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x350>
 8014fee:	f892 e001 	ldrb.w	lr, [r2, #1]
 8014ff2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014ff6:	44a6      	add	lr, r4
 8014ff8:	2900      	cmp	r1, #0
 8014ffa:	f000 80f8 	beq.w	80151ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 8014ffe:	1950      	adds	r0, r2, r5
 8015000:	5d52      	ldrb	r2, [r2, r5]
 8015002:	7840      	ldrb	r0, [r0, #1]
 8015004:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015008:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801500c:	4422      	add	r2, r4
 801500e:	4420      	add	r0, r4
 8015010:	b29b      	uxth	r3, r3
 8015012:	b289      	uxth	r1, r1
 8015014:	fb03 fa01 	mul.w	sl, r3, r1
 8015018:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 801501c:	011b      	lsls	r3, r3, #4
 801501e:	b289      	uxth	r1, r1
 8015020:	f89e c002 	ldrb.w	ip, [lr, #2]
 8015024:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015028:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801502a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801502c:	f8b7 8000 	ldrh.w	r8, [r7]
 8015030:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 8015034:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 8015038:	eba3 030a 	sub.w	r3, r3, sl
 801503c:	b29b      	uxth	r3, r3
 801503e:	eba9 0901 	sub.w	r9, r9, r1
 8015042:	fa1f f989 	uxth.w	r9, r9
 8015046:	fb03 fc0c 	mul.w	ip, r3, ip
 801504a:	fb09 cc0b 	mla	ip, r9, fp, ip
 801504e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8015052:	fb01 cc0b 	mla	ip, r1, fp, ip
 8015056:	f890 b002 	ldrb.w	fp, [r0, #2]
 801505a:	fb0a cc0b 	mla	ip, sl, fp, ip
 801505e:	ea4f 2b28 	mov.w	fp, r8, asr #8
 8015062:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015066:	fb1b fb04 	smulbb	fp, fp, r4
 801506a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801506e:	fb0c bc07 	mla	ip, ip, r7, fp
 8015072:	f896 b001 	ldrb.w	fp, [r6, #1]
 8015076:	f89e 6001 	ldrb.w	r6, [lr, #1]
 801507a:	f89e e000 	ldrb.w	lr, [lr]
 801507e:	435e      	muls	r6, r3
 8015080:	fb09 660b 	mla	r6, r9, fp, r6
 8015084:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015088:	fb01 660b 	mla	r6, r1, fp, r6
 801508c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015090:	fb0a 660b 	mla	r6, sl, fp, r6
 8015094:	ea4f 0be8 	mov.w	fp, r8, asr #3
 8015098:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801509c:	fb1b fb04 	smulbb	fp, fp, r4
 80150a0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80150a4:	fb06 b607 	mla	r6, r6, r7, fp
 80150a8:	b2b4      	uxth	r4, r6
 80150aa:	9412      	str	r4, [sp, #72]	; 0x48
 80150ac:	9e08      	ldr	r6, [sp, #32]
 80150ae:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80150b0:	f816 b004 	ldrb.w	fp, [r6, r4]
 80150b4:	fb03 f30e 	mul.w	r3, r3, lr
 80150b8:	f892 e000 	ldrb.w	lr, [r2]
 80150bc:	fb09 330b 	mla	r3, r9, fp, r3
 80150c0:	fb01 330e 	mla	r3, r1, lr, r3
 80150c4:	f890 e000 	ldrb.w	lr, [r0]
 80150c8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80150cc:	fb0a 3e0e 	mla	lr, sl, lr, r3
 80150d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80150d2:	fa5f f888 	uxtb.w	r8, r8
 80150d6:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 80150da:	fb18 f803 	smulbb	r8, r8, r3
 80150de:	fb0e 8807 	mla	r8, lr, r7, r8
 80150e2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80150e4:	fa1f fc8c 	uxth.w	ip, ip
 80150e8:	fa1f f888 	uxth.w	r8, r8
 80150ec:	f103 0b01 	add.w	fp, r3, #1
 80150f0:	f10c 0201 	add.w	r2, ip, #1
 80150f4:	f108 0e01 	add.w	lr, r8, #1
 80150f8:	eb0b 2613 	add.w	r6, fp, r3, lsr #8
 80150fc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015100:	eb0e 2818 	add.w	r8, lr, r8, lsr #8
 8015104:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015108:	f3c8 28c4 	ubfx	r8, r8, #11, #5
 801510c:	0976      	lsrs	r6, r6, #5
 801510e:	ea4c 0c08 	orr.w	ip, ip, r8
 8015112:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015116:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015118:	ea4c 0606 	orr.w	r6, ip, r6
 801511c:	801e      	strh	r6, [r3, #0]
 801511e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015120:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015122:	3302      	adds	r3, #2
 8015124:	930d      	str	r3, [sp, #52]	; 0x34
 8015126:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015128:	4413      	add	r3, r2
 801512a:	9329      	str	r3, [sp, #164]	; 0xa4
 801512c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801512e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015130:	4413      	add	r3, r2
 8015132:	932a      	str	r3, [sp, #168]	; 0xa8
 8015134:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015136:	3b01      	subs	r3, #1
 8015138:	9311      	str	r3, [sp, #68]	; 0x44
 801513a:	e72f      	b.n	8014f9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 801513c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801513e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015140:	4413      	add	r3, r2
 8015142:	9329      	str	r3, [sp, #164]	; 0xa4
 8015144:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015146:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015148:	4413      	add	r3, r2
 801514a:	932a      	str	r3, [sp, #168]	; 0xa8
 801514c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801514e:	3b01      	subs	r3, #1
 8015150:	9309      	str	r3, [sp, #36]	; 0x24
 8015152:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015154:	3302      	adds	r3, #2
 8015156:	930a      	str	r3, [sp, #40]	; 0x28
 8015158:	e6d4      	b.n	8014f04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801515a:	f47f aee6 	bne.w	8014f2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 801515e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015160:	2b00      	cmp	r3, #0
 8015162:	f340 812b 	ble.w	80153bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8015166:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801516a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801516e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015172:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015174:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015178:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801517c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015180:	eef0 6a48 	vmov.f32	s13, s16
 8015184:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015188:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801518c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015190:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8015194:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015198:	eef0 6a68 	vmov.f32	s13, s17
 801519c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80151a0:	ee18 2a10 	vmov	r2, s16
 80151a4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80151a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80151ac:	ee18 2a90 	vmov	r2, s17
 80151b0:	932b      	str	r3, [sp, #172]	; 0xac
 80151b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80151b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80151b8:	932c      	str	r3, [sp, #176]	; 0xb0
 80151ba:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80151bc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80151be:	3b01      	subs	r3, #1
 80151c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80151c4:	930f      	str	r3, [sp, #60]	; 0x3c
 80151c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80151c8:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 80151cc:	bf08      	it	eq
 80151ce:	4613      	moveq	r3, r2
 80151d0:	9309      	str	r3, [sp, #36]	; 0x24
 80151d2:	eef0 8a67 	vmov.f32	s17, s15
 80151d6:	eeb0 8a47 	vmov.f32	s16, s14
 80151da:	e68c      	b.n	8014ef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80151dc:	b151      	cbz	r1, 80151f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 80151de:	5d52      	ldrb	r2, [r2, r5]
 80151e0:	9808      	ldr	r0, [sp, #32]
 80151e2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80151e6:	4402      	add	r2, r0
 80151e8:	4630      	mov	r0, r6
 80151ea:	46b6      	mov	lr, r6
 80151ec:	e710      	b.n	8015010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 80151ee:	4630      	mov	r0, r6
 80151f0:	4632      	mov	r2, r6
 80151f2:	e70d      	b.n	8015010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 80151f4:	4630      	mov	r0, r6
 80151f6:	4632      	mov	r2, r6
 80151f8:	e7f7      	b.n	80151ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x35e>
 80151fa:	1c46      	adds	r6, r0, #1
 80151fc:	d18f      	bne.n	801511e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80151fe:	4285      	cmp	r5, r0
 8015200:	dd8d      	ble.n	801511e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8015202:	1c54      	adds	r4, r2, #1
 8015204:	db8b      	blt.n	801511e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8015206:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015208:	4294      	cmp	r4, r2
 801520a:	dd88      	ble.n	801511e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 801520c:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8015210:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015212:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015214:	9002      	str	r0, [sp, #8]
 8015216:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801521a:	e9cd 5300 	strd	r5, r3, [sp]
 801521e:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 8015222:	9b08      	ldr	r3, [sp, #32]
 8015224:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015226:	f7ff fd47 	bl	8014cb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801522a:	e778      	b.n	801511e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 801522c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801522e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015230:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015232:	1410      	asrs	r0, r2, #16
 8015234:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015238:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801523a:	1412      	asrs	r2, r2, #16
 801523c:	fb05 2000 	mla	r0, r5, r0, r2
 8015240:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015242:	f814 a000 	ldrb.w	sl, [r4, r0]
 8015246:	4402      	add	r2, r0
 8015248:	9808      	ldr	r0, [sp, #32]
 801524a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801524e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015252:	eb00 060a 	add.w	r6, r0, sl
 8015256:	2b00      	cmp	r3, #0
 8015258:	f000 80a1 	beq.w	801539e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 801525c:	f892 c001 	ldrb.w	ip, [r2, #1]
 8015260:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8015264:	4484      	add	ip, r0
 8015266:	2900      	cmp	r1, #0
 8015268:	f000 80a2 	beq.w	80153b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 801526c:	1950      	adds	r0, r2, r5
 801526e:	5d52      	ldrb	r2, [r2, r5]
 8015270:	7840      	ldrb	r0, [r0, #1]
 8015272:	9c08      	ldr	r4, [sp, #32]
 8015274:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015278:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801527c:	4422      	add	r2, r4
 801527e:	4420      	add	r0, r4
 8015280:	b29b      	uxth	r3, r3
 8015282:	b289      	uxth	r1, r1
 8015284:	fb03 f901 	mul.w	r9, r3, r1
 8015288:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801528c:	011b      	lsls	r3, r3, #4
 801528e:	b289      	uxth	r1, r1
 8015290:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8015294:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015298:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801529a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801529e:	eba3 0309 	sub.w	r3, r3, r9
 80152a2:	b29b      	uxth	r3, r3
 80152a4:	eba8 0801 	sub.w	r8, r8, r1
 80152a8:	fa1f f888 	uxth.w	r8, r8
 80152ac:	435f      	muls	r7, r3
 80152ae:	fb08 770b 	mla	r7, r8, fp, r7
 80152b2:	f892 b002 	ldrb.w	fp, [r2, #2]
 80152b6:	f8b4 e000 	ldrh.w	lr, [r4]
 80152ba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80152bc:	fb01 770b 	mla	r7, r1, fp, r7
 80152c0:	f890 b002 	ldrb.w	fp, [r0, #2]
 80152c4:	fb09 770b 	mla	r7, r9, fp, r7
 80152c8:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80152cc:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80152d0:	fb1b fb04 	smulbb	fp, fp, r4
 80152d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80152d6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80152da:	fb07 b704 	mla	r7, r7, r4, fp
 80152de:	f896 b001 	ldrb.w	fp, [r6, #1]
 80152e2:	f89c 6001 	ldrb.w	r6, [ip, #1]
 80152e6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80152e8:	f89c c000 	ldrb.w	ip, [ip]
 80152ec:	435e      	muls	r6, r3
 80152ee:	fb08 660b 	mla	r6, r8, fp, r6
 80152f2:	f892 b001 	ldrb.w	fp, [r2, #1]
 80152f6:	fb01 660b 	mla	r6, r1, fp, r6
 80152fa:	f890 b001 	ldrb.w	fp, [r0, #1]
 80152fe:	fb09 660b 	mla	r6, r9, fp, r6
 8015302:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8015306:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801530a:	fb1b fb04 	smulbb	fp, fp, r4
 801530e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015310:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015314:	fb06 b604 	mla	r6, r6, r4, fp
 8015318:	9c08      	ldr	r4, [sp, #32]
 801531a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801531e:	fb03 f30c 	mul.w	r3, r3, ip
 8015322:	f892 c000 	ldrb.w	ip, [r2]
 8015326:	fb08 330a 	mla	r3, r8, sl, r3
 801532a:	fb01 330c 	mla	r3, r1, ip, r3
 801532e:	f890 c000 	ldrb.w	ip, [r0]
 8015332:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015336:	fb09 3c0c 	mla	ip, r9, ip, r3
 801533a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801533c:	fa5f fe8e 	uxtb.w	lr, lr
 8015340:	fb1e fe03 	smulbb	lr, lr, r3
 8015344:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015346:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801534a:	fb0c ec03 	mla	ip, ip, r3, lr
 801534e:	b2bf      	uxth	r7, r7
 8015350:	b2b6      	uxth	r6, r6
 8015352:	fa1f fc8c 	uxth.w	ip, ip
 8015356:	1c7b      	adds	r3, r7, #1
 8015358:	f10c 0201 	add.w	r2, ip, #1
 801535c:	f106 0b01 	add.w	fp, r6, #1
 8015360:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8015364:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8015368:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 801536c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015370:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015374:	0976      	lsrs	r6, r6, #5
 8015376:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015378:	4317      	orrs	r7, r2
 801537a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801537e:	4337      	orrs	r7, r6
 8015380:	f823 7b02 	strh.w	r7, [r3], #2
 8015384:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015386:	930d      	str	r3, [sp, #52]	; 0x34
 8015388:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801538a:	4413      	add	r3, r2
 801538c:	9329      	str	r3, [sp, #164]	; 0xa4
 801538e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015390:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015392:	4413      	add	r3, r2
 8015394:	932a      	str	r3, [sp, #168]	; 0xa8
 8015396:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015398:	3b01      	subs	r3, #1
 801539a:	9311      	str	r3, [sp, #68]	; 0x44
 801539c:	e5e1      	b.n	8014f62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801539e:	b151      	cbz	r1, 80153b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52a>
 80153a0:	5d52      	ldrb	r2, [r2, r5]
 80153a2:	9808      	ldr	r0, [sp, #32]
 80153a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80153a8:	4402      	add	r2, r0
 80153aa:	4630      	mov	r0, r6
 80153ac:	46b4      	mov	ip, r6
 80153ae:	e767      	b.n	8015280 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 80153b0:	4630      	mov	r0, r6
 80153b2:	4632      	mov	r2, r6
 80153b4:	e764      	b.n	8015280 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 80153b6:	4630      	mov	r0, r6
 80153b8:	4632      	mov	r2, r6
 80153ba:	e7f7      	b.n	80153ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>
 80153bc:	b017      	add	sp, #92	; 0x5c
 80153be:	ecbd 8b08 	vpop	{d8-d11}
 80153c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080153c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80153c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153cc:	880e      	ldrh	r6, [r1, #0]
 80153ce:	b085      	sub	sp, #20
 80153d0:	0230      	lsls	r0, r6, #8
 80153d2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80153d6:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 80153da:	0170      	lsls	r0, r6, #5
 80153dc:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80153e0:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80153e4:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 80153e8:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 80153ec:	00f6      	lsls	r6, r6, #3
 80153ee:	ea4b 0000 	orr.w	r0, fp, r0
 80153f2:	b2f6      	uxtb	r6, r6
 80153f4:	4691      	mov	r9, r2
 80153f6:	fb05 7a0c 	mla	sl, r5, ip, r7
 80153fa:	4306      	orrs	r6, r0
 80153fc:	2d00      	cmp	r5, #0
 80153fe:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8015402:	9603      	str	r6, [sp, #12]
 8015404:	eb09 0e0a 	add.w	lr, r9, sl
 8015408:	db42      	blt.n	8015490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 801540a:	45a8      	cmp	r8, r5
 801540c:	dd40      	ble.n	8015490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 801540e:	2f00      	cmp	r7, #0
 8015410:	db3c      	blt.n	801548c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8015412:	45bc      	cmp	ip, r7
 8015414:	dd3a      	ble.n	801548c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8015416:	f819 600a 	ldrb.w	r6, [r9, sl]
 801541a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801541e:	441e      	add	r6, r3
 8015420:	1c78      	adds	r0, r7, #1
 8015422:	d438      	bmi.n	8015496 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8015424:	4584      	cmp	ip, r0
 8015426:	dd36      	ble.n	8015496 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8015428:	b3aa      	cbz	r2, 8015496 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 801542a:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801542e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015432:	4418      	add	r0, r3
 8015434:	3501      	adds	r5, #1
 8015436:	d432      	bmi.n	801549e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8015438:	45a8      	cmp	r8, r5
 801543a:	dd30      	ble.n	801549e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 801543c:	b37c      	cbz	r4, 801549e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 801543e:	2f00      	cmp	r7, #0
 8015440:	db2b      	blt.n	801549a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8015442:	45bc      	cmp	ip, r7
 8015444:	dd29      	ble.n	801549a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8015446:	f81e 500c 	ldrb.w	r5, [lr, ip]
 801544a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801544e:	441d      	add	r5, r3
 8015450:	3701      	adds	r7, #1
 8015452:	d427      	bmi.n	80154a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8015454:	45bc      	cmp	ip, r7
 8015456:	dd25      	ble.n	80154a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8015458:	b322      	cbz	r2, 80154a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 801545a:	44f4      	add	ip, lr
 801545c:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8015460:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015464:	443b      	add	r3, r7
 8015466:	781f      	ldrb	r7, [r3, #0]
 8015468:	f896 a000 	ldrb.w	sl, [r6]
 801546c:	f890 b000 	ldrb.w	fp, [r0]
 8015470:	f895 9000 	ldrb.w	r9, [r5]
 8015474:	9700      	str	r7, [sp, #0]
 8015476:	2a0f      	cmp	r2, #15
 8015478:	d801      	bhi.n	801547e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 801547a:	2c0f      	cmp	r4, #15
 801547c:	d914      	bls.n	80154a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 801547e:	4b2c      	ldr	r3, [pc, #176]	; (8015530 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8015480:	4a2c      	ldr	r2, [pc, #176]	; (8015534 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8015482:	482d      	ldr	r0, [pc, #180]	; (8015538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8015484:	f240 3173 	movw	r1, #883	; 0x373
 8015488:	f005 fef2 	bl	801b270 <__assert_func>
 801548c:	ae03      	add	r6, sp, #12
 801548e:	e7c7      	b.n	8015420 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8015490:	a803      	add	r0, sp, #12
 8015492:	4606      	mov	r6, r0
 8015494:	e7ce      	b.n	8015434 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8015496:	a803      	add	r0, sp, #12
 8015498:	e7cc      	b.n	8015434 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 801549a:	ad03      	add	r5, sp, #12
 801549c:	e7d8      	b.n	8015450 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 801549e:	ab03      	add	r3, sp, #12
 80154a0:	461d      	mov	r5, r3
 80154a2:	e7e0      	b.n	8015466 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 80154a4:	ab03      	add	r3, sp, #12
 80154a6:	e7de      	b.n	8015466 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 80154a8:	b292      	uxth	r2, r2
 80154aa:	b2a4      	uxth	r4, r4
 80154ac:	fb02 f804 	mul.w	r8, r2, r4
 80154b0:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 80154b4:	0112      	lsls	r2, r2, #4
 80154b6:	b2a4      	uxth	r4, r4
 80154b8:	f890 e002 	ldrb.w	lr, [r0, #2]
 80154bc:	78b7      	ldrb	r7, [r6, #2]
 80154be:	7840      	ldrb	r0, [r0, #1]
 80154c0:	7876      	ldrb	r6, [r6, #1]
 80154c2:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 80154c6:	eba2 0208 	sub.w	r2, r2, r8
 80154ca:	b292      	uxth	r2, r2
 80154cc:	ebac 0c04 	sub.w	ip, ip, r4
 80154d0:	fa1f fc8c 	uxth.w	ip, ip
 80154d4:	fb02 fe0e 	mul.w	lr, r2, lr
 80154d8:	fb0c ee07 	mla	lr, ip, r7, lr
 80154dc:	78af      	ldrb	r7, [r5, #2]
 80154de:	fb04 ee07 	mla	lr, r4, r7, lr
 80154e2:	789f      	ldrb	r7, [r3, #2]
 80154e4:	785b      	ldrb	r3, [r3, #1]
 80154e6:	fb08 e707 	mla	r7, r8, r7, lr
 80154ea:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80154ee:	fb02 fe0b 	mul.w	lr, r2, fp
 80154f2:	4342      	muls	r2, r0
 80154f4:	7868      	ldrb	r0, [r5, #1]
 80154f6:	9701      	str	r7, [sp, #4]
 80154f8:	fb0c ee0a 	mla	lr, ip, sl, lr
 80154fc:	9f00      	ldr	r7, [sp, #0]
 80154fe:	fb0c 2206 	mla	r2, ip, r6, r2
 8015502:	fb04 ee09 	mla	lr, r4, r9, lr
 8015506:	fb04 2400 	mla	r4, r4, r0, r2
 801550a:	fb08 ee07 	mla	lr, r8, r7, lr
 801550e:	9f01      	ldr	r7, [sp, #4]
 8015510:	fb08 4803 	mla	r8, r8, r3, r4
 8015514:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8015518:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801551c:	ea47 070e 	orr.w	r7, r7, lr
 8015520:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015524:	ea47 0708 	orr.w	r7, r7, r8
 8015528:	800f      	strh	r7, [r1, #0]
 801552a:	b005      	add	sp, #20
 801552c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015530:	0801eea7 	.word	0x0801eea7
 8015534:	0801f405 	.word	0x0801f405
 8015538:	0801ef2f 	.word	0x0801ef2f

0801553c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801553c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015540:	ed2d 8b0a 	vpush	{d8-d12}
 8015544:	b091      	sub	sp, #68	; 0x44
 8015546:	eeb0 aa40 	vmov.f32	s20, s0
 801554a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801554c:	9307      	str	r3, [sp, #28]
 801554e:	f9bd 30b4 	ldrsh.w	r3, [sp, #180]	; 0xb4
 8015552:	910c      	str	r1, [sp, #48]	; 0x30
 8015554:	9309      	str	r3, [sp, #36]	; 0x24
 8015556:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801555a:	900f      	str	r0, [sp, #60]	; 0x3c
 801555c:	6860      	ldr	r0, [r4, #4]
 801555e:	920e      	str	r2, [sp, #56]	; 0x38
 8015560:	fb00 1303 	mla	r3, r0, r3, r1
 8015564:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015566:	6821      	ldr	r1, [r4, #0]
 8015568:	6854      	ldr	r4, [r2, #4]
 801556a:	f8dd b098 	ldr.w	fp, [sp, #152]	; 0x98
 801556e:	f9bd 50b0 	ldrsh.w	r5, [sp, #176]	; 0xb0
 8015572:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015576:	9308      	str	r3, [sp, #32]
 8015578:	6813      	ldr	r3, [r2, #0]
 801557a:	930a      	str	r3, [sp, #40]	; 0x28
 801557c:	eef0 9a60 	vmov.f32	s19, s1
 8015580:	eeb0 9a41 	vmov.f32	s18, s2
 8015584:	eeb0 8a62 	vmov.f32	s16, s5
 8015588:	eef0 8a43 	vmov.f32	s17, s6
 801558c:	eeb0 ca44 	vmov.f32	s24, s8
 8015590:	eef0 ba64 	vmov.f32	s23, s9
 8015594:	eeb0 ba45 	vmov.f32	s22, s10
 8015598:	3404      	adds	r4, #4
 801559a:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 801559e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80155a0:	2b00      	cmp	r3, #0
 80155a2:	dc03      	bgt.n	80155ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80155a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80155a6:	2b00      	cmp	r3, #0
 80155a8:	f340 81cb 	ble.w	8015942 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 80155ac:	9b07      	ldr	r3, [sp, #28]
 80155ae:	2b00      	cmp	r3, #0
 80155b0:	f340 80dd 	ble.w	801576e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x232>
 80155b4:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80155b6:	1412      	asrs	r2, r2, #16
 80155b8:	ea4f 432b 	mov.w	r3, fp, asr #16
 80155bc:	d42c      	bmi.n	8015618 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 80155be:	1c51      	adds	r1, r2, #1
 80155c0:	428d      	cmp	r5, r1
 80155c2:	dd2c      	ble.n	801561e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 80155c4:	2b00      	cmp	r3, #0
 80155c6:	db2a      	blt.n	801561e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 80155c8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80155ca:	1c59      	adds	r1, r3, #1
 80155cc:	4288      	cmp	r0, r1
 80155ce:	dd26      	ble.n	801561e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 80155d0:	9b07      	ldr	r3, [sp, #28]
 80155d2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80155d4:	9925      	ldr	r1, [sp, #148]	; 0x94
 80155d6:	3b01      	subs	r3, #1
 80155d8:	fb02 1203 	mla	r2, r2, r3, r1
 80155dc:	1412      	asrs	r2, r2, #16
 80155de:	d428      	bmi.n	8015632 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 80155e0:	3201      	adds	r2, #1
 80155e2:	4295      	cmp	r5, r2
 80155e4:	dd25      	ble.n	8015632 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 80155e6:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80155e8:	fb02 b303 	mla	r3, r2, r3, fp
 80155ec:	141b      	asrs	r3, r3, #16
 80155ee:	d420      	bmi.n	8015632 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 80155f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80155f2:	3301      	adds	r3, #1
 80155f4:	429a      	cmp	r2, r3
 80155f6:	dd1c      	ble.n	8015632 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 80155f8:	9b07      	ldr	r3, [sp, #28]
 80155fa:	930b      	str	r3, [sp, #44]	; 0x2c
 80155fc:	9b08      	ldr	r3, [sp, #32]
 80155fe:	930d      	str	r3, [sp, #52]	; 0x34
 8015600:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015602:	2b00      	cmp	r3, #0
 8015604:	f300 8116 	bgt.w	8015834 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8015608:	9b07      	ldr	r3, [sp, #28]
 801560a:	9a08      	ldr	r2, [sp, #32]
 801560c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015610:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015614:	9308      	str	r3, [sp, #32]
 8015616:	e0ac      	b.n	8015772 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x236>
 8015618:	1c51      	adds	r1, r2, #1
 801561a:	f040 809b 	bne.w	8015754 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 801561e:	42aa      	cmp	r2, r5
 8015620:	f280 8098 	bge.w	8015754 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8015624:	1c5a      	adds	r2, r3, #1
 8015626:	f2c0 8095 	blt.w	8015754 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 801562a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801562c:	4293      	cmp	r3, r2
 801562e:	f280 8091 	bge.w	8015754 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8015632:	9b07      	ldr	r3, [sp, #28]
 8015634:	930d      	str	r3, [sp, #52]	; 0x34
 8015636:	9b08      	ldr	r3, [sp, #32]
 8015638:	930b      	str	r3, [sp, #44]	; 0x2c
 801563a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801563c:	2b00      	cmp	r3, #0
 801563e:	dde3      	ble.n	8015608 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8015640:	9825      	ldr	r0, [sp, #148]	; 0x94
 8015642:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015644:	1400      	asrs	r0, r0, #16
 8015646:	ea4f 422b 	mov.w	r2, fp, asr #16
 801564a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801564e:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8015652:	f100 80d9 	bmi.w	8015808 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2cc>
 8015656:	1c46      	adds	r6, r0, #1
 8015658:	42b5      	cmp	r5, r6
 801565a:	f340 80d7 	ble.w	801580c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 801565e:	2a00      	cmp	r2, #0
 8015660:	f2c0 80d4 	blt.w	801580c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8015664:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8015666:	1c56      	adds	r6, r2, #1
 8015668:	42b7      	cmp	r7, r6
 801566a:	f340 80cf 	ble.w	801580c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 801566e:	fb02 0005 	mla	r0, r2, r5, r0
 8015672:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015674:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015676:	4402      	add	r2, r0
 8015678:	5c30      	ldrb	r0, [r6, r0]
 801567a:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801567e:	eb04 0c08 	add.w	ip, r4, r8
 8015682:	2b00      	cmp	r3, #0
 8015684:	f000 80b2 	beq.w	80157ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8015688:	7856      	ldrb	r6, [r2, #1]
 801568a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801568e:	4426      	add	r6, r4
 8015690:	2900      	cmp	r1, #0
 8015692:	f000 80b3 	beq.w	80157fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8015696:	1950      	adds	r0, r2, r5
 8015698:	5d52      	ldrb	r2, [r2, r5]
 801569a:	7840      	ldrb	r0, [r0, #1]
 801569c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80156a0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80156a4:	4422      	add	r2, r4
 80156a6:	4420      	add	r0, r4
 80156a8:	b29b      	uxth	r3, r3
 80156aa:	b289      	uxth	r1, r1
 80156ac:	fb03 f901 	mul.w	r9, r3, r1
 80156b0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80156b4:	011b      	lsls	r3, r3, #4
 80156b6:	b289      	uxth	r1, r1
 80156b8:	78b7      	ldrb	r7, [r6, #2]
 80156ba:	f89c a002 	ldrb.w	sl, [ip, #2]
 80156be:	f89c c001 	ldrb.w	ip, [ip, #1]
 80156c2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80156c6:	eba3 0309 	sub.w	r3, r3, r9
 80156ca:	b29b      	uxth	r3, r3
 80156cc:	ebae 0e01 	sub.w	lr, lr, r1
 80156d0:	fa1f fe8e 	uxth.w	lr, lr
 80156d4:	435f      	muls	r7, r3
 80156d6:	fb0e 770a 	mla	r7, lr, sl, r7
 80156da:	f892 a002 	ldrb.w	sl, [r2, #2]
 80156de:	fb01 770a 	mla	r7, r1, sl, r7
 80156e2:	f890 a002 	ldrb.w	sl, [r0, #2]
 80156e6:	fb09 7a0a 	mla	sl, r9, sl, r7
 80156ea:	f814 7008 	ldrb.w	r7, [r4, r8]
 80156ee:	f896 8000 	ldrb.w	r8, [r6]
 80156f2:	7876      	ldrb	r6, [r6, #1]
 80156f4:	fb03 f808 	mul.w	r8, r3, r8
 80156f8:	fb0e 8807 	mla	r8, lr, r7, r8
 80156fc:	7817      	ldrb	r7, [r2, #0]
 80156fe:	fb01 8807 	mla	r8, r1, r7, r8
 8015702:	7807      	ldrb	r7, [r0, #0]
 8015704:	fb09 8707 	mla	r7, r9, r7, r8
 8015708:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801570c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015710:	ea4a 0707 	orr.w	r7, sl, r7
 8015714:	4373      	muls	r3, r6
 8015716:	f892 a001 	ldrb.w	sl, [r2, #1]
 801571a:	fb0e 330c 	mla	r3, lr, ip, r3
 801571e:	fb01 310a 	mla	r1, r1, sl, r3
 8015722:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015726:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015728:	fb09 1a0a 	mla	sl, r9, sl, r1
 801572c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015730:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015734:	ea47 070a 	orr.w	r7, r7, sl
 8015738:	801f      	strh	r7, [r3, #0]
 801573a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801573c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801573e:	3302      	adds	r3, #2
 8015740:	930b      	str	r3, [sp, #44]	; 0x2c
 8015742:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015744:	4413      	add	r3, r2
 8015746:	9325      	str	r3, [sp, #148]	; 0x94
 8015748:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801574a:	449b      	add	fp, r3
 801574c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801574e:	3b01      	subs	r3, #1
 8015750:	930d      	str	r3, [sp, #52]	; 0x34
 8015752:	e772      	b.n	801563a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015754:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015756:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015758:	4413      	add	r3, r2
 801575a:	9325      	str	r3, [sp, #148]	; 0x94
 801575c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801575e:	449b      	add	fp, r3
 8015760:	9b07      	ldr	r3, [sp, #28]
 8015762:	3b01      	subs	r3, #1
 8015764:	9307      	str	r3, [sp, #28]
 8015766:	9b08      	ldr	r3, [sp, #32]
 8015768:	3302      	adds	r3, #2
 801576a:	9308      	str	r3, [sp, #32]
 801576c:	e71e      	b.n	80155ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801576e:	f47f af2f 	bne.w	80155d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8015772:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015774:	2b00      	cmp	r3, #0
 8015776:	f340 80e4 	ble.w	8015942 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 801577a:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801577e:	ee79 9aab 	vadd.f32	s19, s19, s23
 8015782:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8015786:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015788:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801578c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015790:	eef0 6a48 	vmov.f32	s13, s16
 8015794:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015798:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801579c:	ee37 8a48 	vsub.f32	s16, s14, s16
 80157a0:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80157a4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80157a8:	eef0 6a68 	vmov.f32	s13, s17
 80157ac:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80157b0:	ee18 2a10 	vmov	r2, s16
 80157b4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80157b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80157bc:	ee18 2a90 	vmov	r2, s17
 80157c0:	9327      	str	r3, [sp, #156]	; 0x9c
 80157c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80157c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80157c8:	9328      	str	r3, [sp, #160]	; 0xa0
 80157ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80157cc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80157ce:	3b01      	subs	r3, #1
 80157d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80157d4:	930c      	str	r3, [sp, #48]	; 0x30
 80157d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80157d8:	bf08      	it	eq
 80157da:	4613      	moveq	r3, r2
 80157dc:	ee16 ba90 	vmov	fp, s13
 80157e0:	9307      	str	r3, [sp, #28]
 80157e2:	eef0 8a67 	vmov.f32	s17, s15
 80157e6:	eeb0 8a47 	vmov.f32	s16, s14
 80157ea:	e6d8      	b.n	801559e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 80157ec:	b149      	cbz	r1, 8015802 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c6>
 80157ee:	5d52      	ldrb	r2, [r2, r5]
 80157f0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80157f4:	4422      	add	r2, r4
 80157f6:	4660      	mov	r0, ip
 80157f8:	4666      	mov	r6, ip
 80157fa:	e755      	b.n	80156a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80157fc:	4660      	mov	r0, ip
 80157fe:	4662      	mov	r2, ip
 8015800:	e752      	b.n	80156a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8015802:	4660      	mov	r0, ip
 8015804:	4662      	mov	r2, ip
 8015806:	e7f7      	b.n	80157f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8015808:	1c47      	adds	r7, r0, #1
 801580a:	d196      	bne.n	801573a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 801580c:	4285      	cmp	r5, r0
 801580e:	dd94      	ble.n	801573a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015810:	1c56      	adds	r6, r2, #1
 8015812:	db92      	blt.n	801573a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015814:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8015816:	4296      	cmp	r6, r2
 8015818:	dd8f      	ble.n	801573a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 801581a:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801581e:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8015822:	e9cd 5600 	strd	r5, r6, [sp]
 8015826:	4623      	mov	r3, r4
 8015828:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
 801582c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801582e:	f7ff fdcb 	bl	80153c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8015832:	e782      	b.n	801573a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015834:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8015836:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015838:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801583a:	1412      	asrs	r2, r2, #16
 801583c:	ea4f 402b 	mov.w	r0, fp, asr #16
 8015840:	fb05 2000 	mla	r0, r5, r0, r2
 8015844:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015846:	f816 8000 	ldrb.w	r8, [r6, r0]
 801584a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801584e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015852:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8015856:	4402      	add	r2, r0
 8015858:	eb04 0c08 	add.w	ip, r4, r8
 801585c:	2b00      	cmp	r3, #0
 801585e:	d062      	beq.n	8015926 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ea>
 8015860:	7856      	ldrb	r6, [r2, #1]
 8015862:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015866:	4426      	add	r6, r4
 8015868:	2900      	cmp	r1, #0
 801586a:	d064      	beq.n	8015936 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3fa>
 801586c:	1950      	adds	r0, r2, r5
 801586e:	5d52      	ldrb	r2, [r2, r5]
 8015870:	7840      	ldrb	r0, [r0, #1]
 8015872:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015876:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801587a:	4422      	add	r2, r4
 801587c:	4420      	add	r0, r4
 801587e:	b29b      	uxth	r3, r3
 8015880:	b289      	uxth	r1, r1
 8015882:	fb03 f901 	mul.w	r9, r3, r1
 8015886:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801588a:	011b      	lsls	r3, r3, #4
 801588c:	b289      	uxth	r1, r1
 801588e:	78b7      	ldrb	r7, [r6, #2]
 8015890:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015894:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015898:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801589c:	eba3 0309 	sub.w	r3, r3, r9
 80158a0:	b29b      	uxth	r3, r3
 80158a2:	ebae 0e01 	sub.w	lr, lr, r1
 80158a6:	fa1f fe8e 	uxth.w	lr, lr
 80158aa:	435f      	muls	r7, r3
 80158ac:	fb0e 770a 	mla	r7, lr, sl, r7
 80158b0:	f892 a002 	ldrb.w	sl, [r2, #2]
 80158b4:	fb01 770a 	mla	r7, r1, sl, r7
 80158b8:	f890 a002 	ldrb.w	sl, [r0, #2]
 80158bc:	fb09 7a0a 	mla	sl, r9, sl, r7
 80158c0:	f814 7008 	ldrb.w	r7, [r4, r8]
 80158c4:	f896 8000 	ldrb.w	r8, [r6]
 80158c8:	7876      	ldrb	r6, [r6, #1]
 80158ca:	fb03 f808 	mul.w	r8, r3, r8
 80158ce:	fb0e 8807 	mla	r8, lr, r7, r8
 80158d2:	7817      	ldrb	r7, [r2, #0]
 80158d4:	fb01 8807 	mla	r8, r1, r7, r8
 80158d8:	7807      	ldrb	r7, [r0, #0]
 80158da:	fb09 8707 	mla	r7, r9, r7, r8
 80158de:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80158e2:	4373      	muls	r3, r6
 80158e4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80158e8:	7856      	ldrb	r6, [r2, #1]
 80158ea:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80158ec:	ea4a 0707 	orr.w	r7, sl, r7
 80158f0:	fb0e 330c 	mla	r3, lr, ip, r3
 80158f4:	f890 a001 	ldrb.w	sl, [r0, #1]
 80158f8:	fb01 3306 	mla	r3, r1, r6, r3
 80158fc:	fb09 3a0a 	mla	sl, r9, sl, r3
 8015900:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015904:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015906:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801590a:	ea47 070a 	orr.w	r7, r7, sl
 801590e:	f823 7b02 	strh.w	r7, [r3], #2
 8015912:	930d      	str	r3, [sp, #52]	; 0x34
 8015914:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015916:	4413      	add	r3, r2
 8015918:	9325      	str	r3, [sp, #148]	; 0x94
 801591a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801591c:	449b      	add	fp, r3
 801591e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015920:	3b01      	subs	r3, #1
 8015922:	930b      	str	r3, [sp, #44]	; 0x2c
 8015924:	e66c      	b.n	8015600 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8015926:	b149      	cbz	r1, 801593c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x400>
 8015928:	5d52      	ldrb	r2, [r2, r5]
 801592a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801592e:	4422      	add	r2, r4
 8015930:	4660      	mov	r0, ip
 8015932:	4666      	mov	r6, ip
 8015934:	e7a3      	b.n	801587e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8015936:	4660      	mov	r0, ip
 8015938:	4662      	mov	r2, ip
 801593a:	e7a0      	b.n	801587e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 801593c:	4660      	mov	r0, ip
 801593e:	4662      	mov	r2, ip
 8015940:	e7f7      	b.n	8015932 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f6>
 8015942:	b011      	add	sp, #68	; 0x44
 8015944:	ecbd 8b0a 	vpop	{d8-d12}
 8015948:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801594c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801594c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015950:	8808      	ldrh	r0, [r1, #0]
 8015952:	b085      	sub	sp, #20
 8015954:	1206      	asrs	r6, r0, #8
 8015956:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801595a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801595e:	9600      	str	r6, [sp, #0]
 8015960:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015964:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8015968:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 801596c:	10c6      	asrs	r6, r0, #3
 801596e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015972:	9601      	str	r6, [sp, #4]
 8015974:	00c0      	lsls	r0, r0, #3
 8015976:	fb04 560c 	mla	r6, r4, ip, r5
 801597a:	b2c0      	uxtb	r0, r0
 801597c:	4692      	mov	sl, r2
 801597e:	eb02 0e06 	add.w	lr, r2, r6
 8015982:	9a00      	ldr	r2, [sp, #0]
 8015984:	9002      	str	r0, [sp, #8]
 8015986:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 801598a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 801598e:	9a01      	ldr	r2, [sp, #4]
 8015990:	2c00      	cmp	r4, #0
 8015992:	4698      	mov	r8, r3
 8015994:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8015998:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801599c:	db3e      	blt.n	8015a1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 801599e:	45a1      	cmp	r9, r4
 80159a0:	dd3c      	ble.n	8015a1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 80159a2:	2d00      	cmp	r5, #0
 80159a4:	db38      	blt.n	8015a18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 80159a6:	45ac      	cmp	ip, r5
 80159a8:	dd36      	ble.n	8015a18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 80159aa:	f81a 2006 	ldrb.w	r2, [sl, r6]
 80159ae:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 80159b2:	1c6e      	adds	r6, r5, #1
 80159b4:	d435      	bmi.n	8015a22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80159b6:	45b4      	cmp	ip, r6
 80159b8:	dd33      	ble.n	8015a22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80159ba:	b393      	cbz	r3, 8015a22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80159bc:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80159c0:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 80159c4:	3401      	adds	r4, #1
 80159c6:	d430      	bmi.n	8015a2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 80159c8:	45a1      	cmp	r9, r4
 80159ca:	dd2e      	ble.n	8015a2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 80159cc:	b36f      	cbz	r7, 8015a2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 80159ce:	2d00      	cmp	r5, #0
 80159d0:	db29      	blt.n	8015a26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 80159d2:	45ac      	cmp	ip, r5
 80159d4:	dd27      	ble.n	8015a26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 80159d6:	f81e 400c 	ldrb.w	r4, [lr, ip]
 80159da:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 80159de:	3501      	adds	r5, #1
 80159e0:	d407      	bmi.n	80159f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80159e2:	45ac      	cmp	ip, r5
 80159e4:	dd05      	ble.n	80159f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80159e6:	b123      	cbz	r3, 80159f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80159e8:	44f4      	add	ip, lr
 80159ea:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80159ee:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 80159f2:	2b0f      	cmp	r3, #15
 80159f4:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80159f8:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80159fc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8015a00:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8015a04:	d801      	bhi.n	8015a0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8015a06:	2f0f      	cmp	r7, #15
 8015a08:	d911      	bls.n	8015a2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe2>
 8015a0a:	4b7f      	ldr	r3, [pc, #508]	; (8015c08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>)
 8015a0c:	4a7f      	ldr	r2, [pc, #508]	; (8015c0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>)
 8015a0e:	4880      	ldr	r0, [pc, #512]	; (8015c10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8015a10:	f240 3173 	movw	r1, #883	; 0x373
 8015a14:	f005 fc2c 	bl	801b270 <__assert_func>
 8015a18:	4602      	mov	r2, r0
 8015a1a:	e7ca      	b.n	80159b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 8015a1c:	4606      	mov	r6, r0
 8015a1e:	4602      	mov	r2, r0
 8015a20:	e7d0      	b.n	80159c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8015a22:	4606      	mov	r6, r0
 8015a24:	e7ce      	b.n	80159c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8015a26:	4604      	mov	r4, r0
 8015a28:	e7d9      	b.n	80159de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x92>
 8015a2a:	4604      	mov	r4, r0
 8015a2c:	e7e1      	b.n	80159f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8015a2e:	b29b      	uxth	r3, r3
 8015a30:	b2bf      	uxth	r7, r7
 8015a32:	fb03 fe07 	mul.w	lr, r3, r7
 8015a36:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8015a3a:	011b      	lsls	r3, r3, #4
 8015a3c:	eba3 0c0e 	sub.w	ip, r3, lr
 8015a40:	b2bf      	uxth	r7, r7
 8015a42:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8015a46:	fa1f fc8c 	uxth.w	ip, ip
 8015a4a:	1bed      	subs	r5, r5, r7
 8015a4c:	b2ad      	uxth	r5, r5
 8015a4e:	fb0c f30a 	mul.w	r3, ip, sl
 8015a52:	fb05 330b 	mla	r3, r5, fp, r3
 8015a56:	fb07 3309 	mla	r3, r7, r9, r3
 8015a5a:	fb0e 3308 	mla	r3, lr, r8, r3
 8015a5e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015a62:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015a66:	9303      	str	r3, [sp, #12]
 8015a68:	d018      	beq.n	8015a9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x150>
 8015a6a:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8015a6e:	fb0b f303 	mul.w	r3, fp, r3
 8015a72:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015a76:	fb0b fb02 	mul.w	fp, fp, r2
 8015a7a:	0a1a      	lsrs	r2, r3, #8
 8015a7c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015a80:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8015a84:	441a      	add	r2, r3
 8015a86:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8015a8a:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8015a8e:	0a12      	lsrs	r2, r2, #8
 8015a90:	0a1b      	lsrs	r3, r3, #8
 8015a92:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015a96:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015a9a:	431a      	orrs	r2, r3
 8015a9c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015aa0:	d019      	beq.n	8015ad6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x18a>
 8015aa2:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015aa6:	fb0a fb0b 	mul.w	fp, sl, fp
 8015aaa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015aae:	fb0a fa06 	mul.w	sl, sl, r6
 8015ab2:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8015ab6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015aba:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015abe:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8015ac2:	445e      	add	r6, fp
 8015ac4:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8015ac8:	0a36      	lsrs	r6, r6, #8
 8015aca:	0a1b      	lsrs	r3, r3, #8
 8015acc:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015ad0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015ad4:	431e      	orrs	r6, r3
 8015ad6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015ada:	d019      	beq.n	8015b10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1c4>
 8015adc:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8015ae0:	fb09 fa0a 	mul.w	sl, r9, sl
 8015ae4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015ae8:	fb09 f904 	mul.w	r9, r9, r4
 8015aec:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8015af0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015af4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015af8:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8015afc:	4454      	add	r4, sl
 8015afe:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8015b02:	0a24      	lsrs	r4, r4, #8
 8015b04:	0a1b      	lsrs	r3, r3, #8
 8015b06:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015b0a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015b0e:	431c      	orrs	r4, r3
 8015b10:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015b14:	d019      	beq.n	8015b4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1fe>
 8015b16:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8015b1a:	fb08 f909 	mul.w	r9, r8, r9
 8015b1e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015b22:	fb08 f800 	mul.w	r8, r8, r0
 8015b26:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8015b2a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015b2e:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8015b32:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8015b36:	4448      	add	r0, r9
 8015b38:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8015b3c:	0a00      	lsrs	r0, r0, #8
 8015b3e:	0a1b      	lsrs	r3, r3, #8
 8015b40:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015b44:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015b48:	4318      	orrs	r0, r3
 8015b4a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015b4e:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8015b52:	fb0c f808 	mul.w	r8, ip, r8
 8015b56:	fb05 8803 	mla	r8, r5, r3, r8
 8015b5a:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8015b5e:	fb07 8803 	mla	r8, r7, r3, r8
 8015b62:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8015b66:	fb0e 8303 	mla	r3, lr, r3, r8
 8015b6a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015b6e:	fb0c f606 	mul.w	r6, ip, r6
 8015b72:	0a1b      	lsrs	r3, r3, #8
 8015b74:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015b78:	fb05 6202 	mla	r2, r5, r2, r6
 8015b7c:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8015b80:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8015b84:	fb07 2703 	mla	r7, r7, r3, r2
 8015b88:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8015b8c:	b295      	uxth	r5, r2
 8015b8e:	9a03      	ldr	r2, [sp, #12]
 8015b90:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8015b94:	436a      	muls	r2, r5
 8015b96:	fb0e 7303 	mla	r3, lr, r3, r7
 8015b9a:	1c50      	adds	r0, r2, #1
 8015b9c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8015ba0:	0a1b      	lsrs	r3, r3, #8
 8015ba2:	9a00      	ldr	r2, [sp, #0]
 8015ba4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015ba8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8015bac:	ea48 0303 	orr.w	r3, r8, r3
 8015bb0:	b2c0      	uxtb	r0, r0
 8015bb2:	fb12 f200 	smulbb	r2, r2, r0
 8015bb6:	0c1e      	lsrs	r6, r3, #16
 8015bb8:	fb06 2605 	mla	r6, r6, r5, r2
 8015bbc:	9a01      	ldr	r2, [sp, #4]
 8015bbe:	f3c3 2407 	ubfx	r4, r3, #8, #8
 8015bc2:	fb12 f200 	smulbb	r2, r2, r0
 8015bc6:	fb04 2205 	mla	r2, r4, r5, r2
 8015bca:	b294      	uxth	r4, r2
 8015bcc:	9a02      	ldr	r2, [sp, #8]
 8015bce:	b2db      	uxtb	r3, r3
 8015bd0:	fb12 f200 	smulbb	r2, r2, r0
 8015bd4:	fb03 2205 	mla	r2, r3, r5, r2
 8015bd8:	b2b6      	uxth	r6, r6
 8015bda:	b292      	uxth	r2, r2
 8015bdc:	1c73      	adds	r3, r6, #1
 8015bde:	1c50      	adds	r0, r2, #1
 8015be0:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8015be4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8015be8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015bec:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015bf0:	4313      	orrs	r3, r2
 8015bf2:	1c62      	adds	r2, r4, #1
 8015bf4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8015bf8:	0952      	lsrs	r2, r2, #5
 8015bfa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015bfe:	4313      	orrs	r3, r2
 8015c00:	800b      	strh	r3, [r1, #0]
 8015c02:	b005      	add	sp, #20
 8015c04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c08:	0801eea7 	.word	0x0801eea7
 8015c0c:	0801f405 	.word	0x0801f405
 8015c10:	0801ef2f 	.word	0x0801ef2f

08015c14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015c14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c18:	ed2d 8b08 	vpush	{d8-d11}
 8015c1c:	b09b      	sub	sp, #108	; 0x6c
 8015c1e:	eeb0 aa40 	vmov.f32	s20, s0
 8015c22:	9309      	str	r3, [sp, #36]	; 0x24
 8015c24:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8015c28:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 8015c2a:	9311      	str	r3, [sp, #68]	; 0x44
 8015c2c:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8015c30:	9114      	str	r1, [sp, #80]	; 0x50
 8015c32:	9317      	str	r3, [sp, #92]	; 0x5c
 8015c34:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8015c38:	9019      	str	r0, [sp, #100]	; 0x64
 8015c3a:	6868      	ldr	r0, [r5, #4]
 8015c3c:	9218      	str	r2, [sp, #96]	; 0x60
 8015c3e:	fb00 1303 	mla	r3, r0, r3, r1
 8015c42:	6829      	ldr	r1, [r5, #0]
 8015c44:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8015c46:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8015c4a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015c4e:	930c      	str	r3, [sp, #48]	; 0x30
 8015c50:	6813      	ldr	r3, [r2, #0]
 8015c52:	9313      	str	r3, [sp, #76]	; 0x4c
 8015c54:	6853      	ldr	r3, [r2, #4]
 8015c56:	3304      	adds	r3, #4
 8015c58:	eef0 9a60 	vmov.f32	s19, s1
 8015c5c:	eeb0 9a41 	vmov.f32	s18, s2
 8015c60:	eeb0 8a62 	vmov.f32	s16, s5
 8015c64:	eef0 8a43 	vmov.f32	s17, s6
 8015c68:	eef0 ba44 	vmov.f32	s23, s8
 8015c6c:	eeb0 ba64 	vmov.f32	s22, s9
 8015c70:	eef0 aa45 	vmov.f32	s21, s10
 8015c74:	9308      	str	r3, [sp, #32]
 8015c76:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015c78:	2b00      	cmp	r3, #0
 8015c7a:	dc03      	bgt.n	8015c84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8015c7c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015c7e:	2b00      	cmp	r3, #0
 8015c80:	f340 8363 	ble.w	801634a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8015c84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c86:	2b00      	cmp	r3, #0
 8015c88:	f340 81ad 	ble.w	8015fe6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d2>
 8015c8c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015c8e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015c90:	1412      	asrs	r2, r2, #16
 8015c92:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015c96:	d42f      	bmi.n	8015cf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8015c98:	1c51      	adds	r1, r2, #1
 8015c9a:	428c      	cmp	r4, r1
 8015c9c:	dd2f      	ble.n	8015cfe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8015c9e:	2b00      	cmp	r3, #0
 8015ca0:	db2d      	blt.n	8015cfe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8015ca2:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015ca4:	1c59      	adds	r1, r3, #1
 8015ca6:	4288      	cmp	r0, r1
 8015ca8:	dd29      	ble.n	8015cfe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8015caa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015cac:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015cae:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8015cb0:	3b01      	subs	r3, #1
 8015cb2:	fb02 1203 	mla	r2, r2, r3, r1
 8015cb6:	1412      	asrs	r2, r2, #16
 8015cb8:	d42b      	bmi.n	8015d12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015cba:	3201      	adds	r2, #1
 8015cbc:	4294      	cmp	r4, r2
 8015cbe:	dd28      	ble.n	8015d12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015cc0:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015cc2:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8015cc4:	fb02 1303 	mla	r3, r2, r3, r1
 8015cc8:	141b      	asrs	r3, r3, #16
 8015cca:	d422      	bmi.n	8015d12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015ccc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015cce:	3301      	adds	r3, #1
 8015cd0:	429a      	cmp	r2, r3
 8015cd2:	dd1e      	ble.n	8015d12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015cd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015cd6:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8015cda:	f8bd b05c 	ldrh.w	fp, [sp, #92]	; 0x5c
 8015cde:	9312      	str	r3, [sp, #72]	; 0x48
 8015ce0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015ce2:	2b00      	cmp	r3, #0
 8015ce4:	f300 81ea 	bgt.w	80160bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a8>
 8015ce8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015cea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015cec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015cf0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015cf4:	930c      	str	r3, [sp, #48]	; 0x30
 8015cf6:	e178      	b.n	8015fea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d6>
 8015cf8:	1c51      	adds	r1, r2, #1
 8015cfa:	f040 8165 	bne.w	8015fc8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8015cfe:	42a2      	cmp	r2, r4
 8015d00:	f280 8162 	bge.w	8015fc8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8015d04:	1c5f      	adds	r7, r3, #1
 8015d06:	f2c0 815f 	blt.w	8015fc8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8015d0a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015d0c:	4293      	cmp	r3, r2
 8015d0e:	f280 815b 	bge.w	8015fc8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8015d12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015d14:	9316      	str	r3, [sp, #88]	; 0x58
 8015d16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015d18:	9312      	str	r3, [sp, #72]	; 0x48
 8015d1a:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8015d1e:	9315      	str	r3, [sp, #84]	; 0x54
 8015d20:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8015d22:	2b00      	cmp	r3, #0
 8015d24:	dde0      	ble.n	8015ce8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8015d26:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015d28:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015d2a:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8015d2e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015d30:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015d34:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015d36:	1412      	asrs	r2, r2, #16
 8015d38:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015d3c:	f100 81a5 	bmi.w	801608a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x476>
 8015d40:	1c55      	adds	r5, r2, #1
 8015d42:	42ac      	cmp	r4, r5
 8015d44:	f340 81a3 	ble.w	801608e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8015d48:	2b00      	cmp	r3, #0
 8015d4a:	f2c0 81a0 	blt.w	801608e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8015d4e:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8015d50:	1c5d      	adds	r5, r3, #1
 8015d52:	42af      	cmp	r7, r5
 8015d54:	f340 819b 	ble.w	801608e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8015d58:	fb03 2304 	mla	r3, r3, r4, r2
 8015d5c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015d5e:	18d5      	adds	r5, r2, r3
 8015d60:	5cd3      	ldrb	r3, [r2, r3]
 8015d62:	9a08      	ldr	r2, [sp, #32]
 8015d64:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8015d68:	0e1f      	lsrs	r7, r3, #24
 8015d6a:	2800      	cmp	r0, #0
 8015d6c:	f000 817c 	beq.w	8016068 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x454>
 8015d70:	786a      	ldrb	r2, [r5, #1]
 8015d72:	9e08      	ldr	r6, [sp, #32]
 8015d74:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8015d78:	920d      	str	r2, [sp, #52]	; 0x34
 8015d7a:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8015d7e:	2900      	cmp	r1, #0
 8015d80:	f000 817d 	beq.w	801607e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46a>
 8015d84:	192a      	adds	r2, r5, r4
 8015d86:	5d2d      	ldrb	r5, [r5, r4]
 8015d88:	7852      	ldrb	r2, [r2, #1]
 8015d8a:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 8015d8e:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8015d92:	950a      	str	r5, [sp, #40]	; 0x28
 8015d94:	ea4f 6915 	mov.w	r9, r5, lsr #24
 8015d98:	920e      	str	r2, [sp, #56]	; 0x38
 8015d9a:	0e15      	lsrs	r5, r2, #24
 8015d9c:	b280      	uxth	r0, r0
 8015d9e:	b289      	uxth	r1, r1
 8015da0:	fb00 fa01 	mul.w	sl, r0, r1
 8015da4:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 8015da8:	0100      	lsls	r0, r0, #4
 8015daa:	eba0 080a 	sub.w	r8, r0, sl
 8015dae:	b289      	uxth	r1, r1
 8015db0:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8015db4:	fa1f f888 	uxth.w	r8, r8
 8015db8:	1a52      	subs	r2, r2, r1
 8015dba:	b292      	uxth	r2, r2
 8015dbc:	fb08 f00e 	mul.w	r0, r8, lr
 8015dc0:	fb02 0007 	mla	r0, r2, r7, r0
 8015dc4:	fb01 0009 	mla	r0, r1, r9, r0
 8015dc8:	fb0a 0005 	mla	r0, sl, r5, r0
 8015dcc:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8015dd0:	2800      	cmp	r0, #0
 8015dd2:	f000 80ea 	beq.w	8015faa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015dd6:	2fff      	cmp	r7, #255	; 0xff
 8015dd8:	d01a      	beq.n	8015e10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fc>
 8015dda:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8015dde:	fb07 fc0c 	mul.w	ip, r7, ip
 8015de2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015de6:	435f      	muls	r7, r3
 8015de8:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8015dec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015df0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015df4:	f507 7b80 	add.w	fp, r7, #256	; 0x100
 8015df8:	4463      	add	r3, ip
 8015dfa:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 8015dfe:	0a1b      	lsrs	r3, r3, #8
 8015e00:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8015e04:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015e08:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8015e0c:	ea43 030b 	orr.w	r3, r3, fp
 8015e10:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015e14:	d01e      	beq.n	8015e54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x240>
 8015e16:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8015e18:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015e1c:	fb0e fb0b 	mul.w	fp, lr, fp
 8015e20:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8015e24:	fb0e fe07 	mul.w	lr, lr, r7
 8015e28:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 8015e2c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015e30:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015e34:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8015e38:	44dc      	add	ip, fp
 8015e3a:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8015e3e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015e42:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015e46:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015e4a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8015e4e:	ea4c 060e 	orr.w	r6, ip, lr
 8015e52:	960d      	str	r6, [sp, #52]	; 0x34
 8015e54:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015e58:	d01e      	beq.n	8015e98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8015e5a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015e5c:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8015e60:	fb09 fe0e 	mul.w	lr, r9, lr
 8015e64:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8015e68:	fb09 f907 	mul.w	r9, r9, r7
 8015e6c:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8015e70:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015e74:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8015e78:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8015e7c:	44f4      	add	ip, lr
 8015e7e:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8015e82:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015e86:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015e8a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015e8e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8015e92:	ea4c 0609 	orr.w	r6, ip, r9
 8015e96:	960a      	str	r6, [sp, #40]	; 0x28
 8015e98:	2dff      	cmp	r5, #255	; 0xff
 8015e9a:	d01c      	beq.n	8015ed6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c2>
 8015e9c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015e9e:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8015ea2:	fb05 fe0e 	mul.w	lr, r5, lr
 8015ea6:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8015eaa:	437d      	muls	r5, r7
 8015eac:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8015eb0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015eb4:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8015eb8:	f505 7780 	add.w	r7, r5, #256	; 0x100
 8015ebc:	44f4      	add	ip, lr
 8015ebe:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 8015ec2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015ec6:	0a2d      	lsrs	r5, r5, #8
 8015ec8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015ecc:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8015ed0:	ea4c 0505 	orr.w	r5, ip, r5
 8015ed4:	950e      	str	r5, [sp, #56]	; 0x38
 8015ed6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015ed8:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015eda:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8015ede:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8015ee2:	fb08 f505 	mul.w	r5, r8, r5
 8015ee6:	fb02 5507 	mla	r5, r2, r7, r5
 8015eea:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 8015eee:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015ef0:	fb01 5507 	mla	r5, r1, r7, r5
 8015ef4:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 8015ef8:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8015efa:	fb0a 5507 	mla	r5, sl, r7, r5
 8015efe:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8015f02:	fb08 f807 	mul.w	r8, r8, r7
 8015f06:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015f0a:	fb02 8303 	mla	r3, r2, r3, r8
 8015f0e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015f10:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8015f12:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8015f16:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015f18:	fb01 330c 	mla	r3, r1, ip, r3
 8015f1c:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8015f20:	fb0a 3a01 	mla	sl, sl, r1, r3
 8015f24:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015f26:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8015f28:	881f      	ldrh	r7, [r3, #0]
 8015f2a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015f2c:	0a2d      	lsrs	r5, r5, #8
 8015f2e:	4343      	muls	r3, r0
 8015f30:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015f34:	1c58      	adds	r0, r3, #1
 8015f36:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8015f3a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015f3e:	ea45 050a 	orr.w	r5, r5, sl
 8015f42:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8015f46:	0c29      	lsrs	r1, r5, #16
 8015f48:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8015f4c:	123b      	asrs	r3, r7, #8
 8015f4e:	b2c0      	uxtb	r0, r0
 8015f50:	fb11 f102 	smulbb	r1, r1, r2
 8015f54:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8015f58:	fb03 1300 	mla	r3, r3, r0, r1
 8015f5c:	b299      	uxth	r1, r3
 8015f5e:	10fa      	asrs	r2, r7, #3
 8015f60:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8015f64:	fb13 f306 	smulbb	r3, r3, r6
 8015f68:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015f6c:	fb02 3200 	mla	r2, r2, r0, r3
 8015f70:	b2ed      	uxtb	r5, r5
 8015f72:	00fb      	lsls	r3, r7, #3
 8015f74:	b2db      	uxtb	r3, r3
 8015f76:	fb15 f506 	smulbb	r5, r5, r6
 8015f7a:	fb03 5500 	mla	r5, r3, r0, r5
 8015f7e:	b292      	uxth	r2, r2
 8015f80:	b2ad      	uxth	r5, r5
 8015f82:	1c4b      	adds	r3, r1, #1
 8015f84:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8015f88:	1c68      	adds	r0, r5, #1
 8015f8a:	1c51      	adds	r1, r2, #1
 8015f8c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8015f90:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015f94:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015f98:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015f9c:	0952      	lsrs	r2, r2, #5
 8015f9e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015fa2:	432b      	orrs	r3, r5
 8015fa4:	4313      	orrs	r3, r2
 8015fa6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015fa8:	8013      	strh	r3, [r2, #0]
 8015faa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015fac:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015fae:	3302      	adds	r3, #2
 8015fb0:	9312      	str	r3, [sp, #72]	; 0x48
 8015fb2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015fb4:	4413      	add	r3, r2
 8015fb6:	932d      	str	r3, [sp, #180]	; 0xb4
 8015fb8:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015fba:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015fbc:	4413      	add	r3, r2
 8015fbe:	932e      	str	r3, [sp, #184]	; 0xb8
 8015fc0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8015fc2:	3b01      	subs	r3, #1
 8015fc4:	9316      	str	r3, [sp, #88]	; 0x58
 8015fc6:	e6ab      	b.n	8015d20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10c>
 8015fc8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015fca:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015fcc:	4413      	add	r3, r2
 8015fce:	932d      	str	r3, [sp, #180]	; 0xb4
 8015fd0:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015fd2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015fd4:	4413      	add	r3, r2
 8015fd6:	932e      	str	r3, [sp, #184]	; 0xb8
 8015fd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015fda:	3b01      	subs	r3, #1
 8015fdc:	9309      	str	r3, [sp, #36]	; 0x24
 8015fde:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015fe0:	3302      	adds	r3, #2
 8015fe2:	930c      	str	r3, [sp, #48]	; 0x30
 8015fe4:	e64e      	b.n	8015c84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8015fe6:	f47f ae60 	bne.w	8015caa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8015fea:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015fec:	2b00      	cmp	r3, #0
 8015fee:	f340 81ac 	ble.w	801634a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8015ff2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015ff6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015ffa:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015ffe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016000:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016004:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016008:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801600c:	eef0 6a48 	vmov.f32	s13, s16
 8016010:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016014:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016018:	ee37 8a48 	vsub.f32	s16, s14, s16
 801601c:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8016020:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016024:	eef0 6a68 	vmov.f32	s13, s17
 8016028:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801602c:	ee18 2a10 	vmov	r2, s16
 8016030:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016034:	fb92 f3f3 	sdiv	r3, r2, r3
 8016038:	ee18 2a90 	vmov	r2, s17
 801603c:	932f      	str	r3, [sp, #188]	; 0xbc
 801603e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016040:	fb92 f3f3 	sdiv	r3, r2, r3
 8016044:	9330      	str	r3, [sp, #192]	; 0xc0
 8016046:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016048:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801604a:	3b01      	subs	r3, #1
 801604c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016050:	9314      	str	r3, [sp, #80]	; 0x50
 8016052:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016054:	edcd 6a2e 	vstr	s13, [sp, #184]	; 0xb8
 8016058:	bf08      	it	eq
 801605a:	4613      	moveq	r3, r2
 801605c:	9309      	str	r3, [sp, #36]	; 0x24
 801605e:	eef0 8a67 	vmov.f32	s17, s15
 8016062:	eeb0 8a47 	vmov.f32	s16, s14
 8016066:	e606      	b.n	8015c76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8016068:	b161      	cbz	r1, 8016084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 801606a:	5d2a      	ldrb	r2, [r5, r4]
 801606c:	9d08      	ldr	r5, [sp, #32]
 801606e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8016072:	920a      	str	r2, [sp, #40]	; 0x28
 8016074:	ea4f 6912 	mov.w	r9, r2, lsr #24
 8016078:	25ff      	movs	r5, #255	; 0xff
 801607a:	46ae      	mov	lr, r5
 801607c:	e68e      	b.n	8015d9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 801607e:	25ff      	movs	r5, #255	; 0xff
 8016080:	46a9      	mov	r9, r5
 8016082:	e68b      	b.n	8015d9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 8016084:	25ff      	movs	r5, #255	; 0xff
 8016086:	46a9      	mov	r9, r5
 8016088:	e7f7      	b.n	801607a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801608a:	1c56      	adds	r6, r2, #1
 801608c:	d18d      	bne.n	8015faa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801608e:	4294      	cmp	r4, r2
 8016090:	dd8b      	ble.n	8015faa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8016092:	1c5d      	adds	r5, r3, #1
 8016094:	db89      	blt.n	8015faa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8016096:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016098:	429d      	cmp	r5, r3
 801609a:	dd86      	ble.n	8015faa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801609c:	e9cd 3003 	strd	r3, r0, [sp, #12]
 80160a0:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80160a2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80160a4:	9202      	str	r2, [sp, #8]
 80160a6:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80160aa:	e9cd 4300 	strd	r4, r3, [sp]
 80160ae:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
 80160b2:	9b08      	ldr	r3, [sp, #32]
 80160b4:	9819      	ldr	r0, [sp, #100]	; 0x64
 80160b6:	f7ff fc49 	bl	801594c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80160ba:	e776      	b.n	8015faa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80160bc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80160be:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80160c0:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80160c4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80160c6:	1412      	asrs	r2, r2, #16
 80160c8:	f3c3 3003 	ubfx	r0, r3, #12, #4
 80160cc:	141b      	asrs	r3, r3, #16
 80160ce:	fb04 2303 	mla	r3, r4, r3, r2
 80160d2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80160d4:	18d5      	adds	r5, r2, r3
 80160d6:	5cd3      	ldrb	r3, [r2, r3]
 80160d8:	9a08      	ldr	r2, [sp, #32]
 80160da:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80160de:	0e1e      	lsrs	r6, r3, #24
 80160e0:	2900      	cmp	r1, #0
 80160e2:	f000 8121 	beq.w	8016328 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 80160e6:	786a      	ldrb	r2, [r5, #1]
 80160e8:	9f08      	ldr	r7, [sp, #32]
 80160ea:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80160ee:	920f      	str	r2, [sp, #60]	; 0x3c
 80160f0:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 80160f4:	2800      	cmp	r0, #0
 80160f6:	f000 8122 	beq.w	801633e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72a>
 80160fa:	192a      	adds	r2, r5, r4
 80160fc:	5d2d      	ldrb	r5, [r5, r4]
 80160fe:	7852      	ldrb	r2, [r2, #1]
 8016100:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 8016104:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8016108:	950b      	str	r5, [sp, #44]	; 0x2c
 801610a:	ea4f 6815 	mov.w	r8, r5, lsr #24
 801610e:	9210      	str	r2, [sp, #64]	; 0x40
 8016110:	0e15      	lsrs	r5, r2, #24
 8016112:	b289      	uxth	r1, r1
 8016114:	b280      	uxth	r0, r0
 8016116:	fb01 f900 	mul.w	r9, r1, r0
 801611a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801611e:	0109      	lsls	r1, r1, #4
 8016120:	eba1 0e09 	sub.w	lr, r1, r9
 8016124:	b280      	uxth	r0, r0
 8016126:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 801612a:	fa1f fe8e 	uxth.w	lr, lr
 801612e:	1a12      	subs	r2, r2, r0
 8016130:	b292      	uxth	r2, r2
 8016132:	fb0e f10c 	mul.w	r1, lr, ip
 8016136:	fb02 1106 	mla	r1, r2, r6, r1
 801613a:	fb00 1108 	mla	r1, r0, r8, r1
 801613e:	fb09 1105 	mla	r1, r9, r5, r1
 8016142:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016146:	2900      	cmp	r1, #0
 8016148:	f000 80e0 	beq.w	801630c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f8>
 801614c:	2eff      	cmp	r6, #255	; 0xff
 801614e:	d016      	beq.n	801617e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56a>
 8016150:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8016154:	4377      	muls	r7, r6
 8016156:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801615a:	435e      	muls	r6, r3
 801615c:	0a3b      	lsrs	r3, r7, #8
 801615e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016162:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016166:	443b      	add	r3, r7
 8016168:	f506 7780 	add.w	r7, r6, #256	; 0x100
 801616c:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8016170:	0a1b      	lsrs	r3, r3, #8
 8016172:	0a3f      	lsrs	r7, r7, #8
 8016174:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016178:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801617c:	433b      	orrs	r3, r7
 801617e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016182:	d01d      	beq.n	80161c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ac>
 8016184:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8016186:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016188:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801618c:	fb0c f606 	mul.w	r6, ip, r6
 8016190:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016194:	fb0c fc07 	mul.w	ip, ip, r7
 8016198:	0a37      	lsrs	r7, r6, #8
 801619a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801619e:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 80161a2:	4437      	add	r7, r6
 80161a4:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 80161a8:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 80161ac:	0a3f      	lsrs	r7, r7, #8
 80161ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80161b2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80161b6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80161ba:	ea47 060c 	orr.w	r6, r7, ip
 80161be:	960f      	str	r6, [sp, #60]	; 0x3c
 80161c0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80161c4:	d01d      	beq.n	8016202 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ee>
 80161c6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80161c8:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80161cc:	fb08 fc0c 	mul.w	ip, r8, ip
 80161d0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80161d4:	fb08 f806 	mul.w	r8, r8, r6
 80161d8:	ea4f 271c 	mov.w	r7, ip, lsr #8
 80161dc:	f508 7680 	add.w	r6, r8, #256	; 0x100
 80161e0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80161e4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80161e8:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 80161ec:	4467      	add	r7, ip
 80161ee:	0a3f      	lsrs	r7, r7, #8
 80161f0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80161f4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80161f8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80161fc:	ea47 0608 	orr.w	r6, r7, r8
 8016200:	960b      	str	r6, [sp, #44]	; 0x2c
 8016202:	2dff      	cmp	r5, #255	; 0xff
 8016204:	d01a      	beq.n	801623c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x628>
 8016206:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8016208:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 801620c:	fb05 fc0c 	mul.w	ip, r5, ip
 8016210:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016214:	4375      	muls	r5, r6
 8016216:	ea4f 271c 	mov.w	r7, ip, lsr #8
 801621a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801621e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016222:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8016226:	4467      	add	r7, ip
 8016228:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 801622c:	0a3f      	lsrs	r7, r7, #8
 801622e:	0a2d      	lsrs	r5, r5, #8
 8016230:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016234:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8016238:	433d      	orrs	r5, r7
 801623a:	9510      	str	r5, [sp, #64]	; 0x40
 801623c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801623e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016242:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8016246:	fb0e f505 	mul.w	r5, lr, r5
 801624a:	fb02 5506 	mla	r5, r2, r6, r5
 801624e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8016250:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016254:	fb00 5506 	mla	r5, r0, r6, r5
 8016258:	9e10      	ldr	r6, [sp, #64]	; 0x40
 801625a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801625e:	fb09 5506 	mla	r5, r9, r6, r5
 8016262:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8016264:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016268:	fb0e fe06 	mul.w	lr, lr, r6
 801626c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016270:	fb02 e303 	mla	r3, r2, r3, lr
 8016274:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016276:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 801627a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801627c:	fb00 3307 	mla	r3, r0, r7, r3
 8016280:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016284:	fb09 3c0c 	mla	ip, r9, ip, r3
 8016288:	fb01 f10b 	mul.w	r1, r1, fp
 801628c:	0a2d      	lsrs	r5, r5, #8
 801628e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016292:	f8ba 0000 	ldrh.w	r0, [sl]
 8016296:	1c4b      	adds	r3, r1, #1
 8016298:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801629c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80162a0:	ea45 050c 	orr.w	r5, r5, ip
 80162a4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80162a8:	1202      	asrs	r2, r0, #8
 80162aa:	0c2b      	lsrs	r3, r5, #16
 80162ac:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80162b0:	b2c9      	uxtb	r1, r1
 80162b2:	fb13 f30b 	smulbb	r3, r3, fp
 80162b6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80162ba:	fb02 3201 	mla	r2, r2, r1, r3
 80162be:	f3c5 2607 	ubfx	r6, r5, #8, #8
 80162c2:	10c3      	asrs	r3, r0, #3
 80162c4:	b2ed      	uxtb	r5, r5
 80162c6:	00c0      	lsls	r0, r0, #3
 80162c8:	b2c0      	uxtb	r0, r0
 80162ca:	fb15 f50b 	smulbb	r5, r5, fp
 80162ce:	fb00 5001 	mla	r0, r0, r1, r5
 80162d2:	b292      	uxth	r2, r2
 80162d4:	fb16 f60b 	smulbb	r6, r6, fp
 80162d8:	b280      	uxth	r0, r0
 80162da:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80162de:	fb03 6301 	mla	r3, r3, r1, r6
 80162e2:	1c51      	adds	r1, r2, #1
 80162e4:	1c46      	adds	r6, r0, #1
 80162e6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80162ea:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80162ee:	b29b      	uxth	r3, r3
 80162f0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80162f4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80162f8:	4332      	orrs	r2, r6
 80162fa:	1c5e      	adds	r6, r3, #1
 80162fc:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8016300:	095b      	lsrs	r3, r3, #5
 8016302:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016306:	431a      	orrs	r2, r3
 8016308:	f8aa 2000 	strh.w	r2, [sl]
 801630c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801630e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8016310:	4413      	add	r3, r2
 8016312:	932d      	str	r3, [sp, #180]	; 0xb4
 8016314:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8016316:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016318:	4413      	add	r3, r2
 801631a:	932e      	str	r3, [sp, #184]	; 0xb8
 801631c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801631e:	3b01      	subs	r3, #1
 8016320:	f10a 0a02 	add.w	sl, sl, #2
 8016324:	9312      	str	r3, [sp, #72]	; 0x48
 8016326:	e4db      	b.n	8015ce0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8016328:	b160      	cbz	r0, 8016344 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 801632a:	5d2a      	ldrb	r2, [r5, r4]
 801632c:	9d08      	ldr	r5, [sp, #32]
 801632e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8016332:	920b      	str	r2, [sp, #44]	; 0x2c
 8016334:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8016338:	25ff      	movs	r5, #255	; 0xff
 801633a:	46ac      	mov	ip, r5
 801633c:	e6e9      	b.n	8016112 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 801633e:	25ff      	movs	r5, #255	; 0xff
 8016340:	46a8      	mov	r8, r5
 8016342:	e6e6      	b.n	8016112 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8016344:	25ff      	movs	r5, #255	; 0xff
 8016346:	46a8      	mov	r8, r5
 8016348:	e7f7      	b.n	801633a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x726>
 801634a:	b01b      	add	sp, #108	; 0x6c
 801634c:	ecbd 8b08 	vpop	{d8-d11}
 8016350:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016354 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8016354:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016358:	8808      	ldrh	r0, [r1, #0]
 801635a:	b085      	sub	sp, #20
 801635c:	1206      	asrs	r6, r0, #8
 801635e:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8016362:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016366:	9600      	str	r6, [sp, #0]
 8016368:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801636c:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8016370:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8016374:	10c6      	asrs	r6, r0, #3
 8016376:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801637a:	9601      	str	r6, [sp, #4]
 801637c:	00c0      	lsls	r0, r0, #3
 801637e:	fb04 560c 	mla	r6, r4, ip, r5
 8016382:	b2c0      	uxtb	r0, r0
 8016384:	4692      	mov	sl, r2
 8016386:	eb02 0e06 	add.w	lr, r2, r6
 801638a:	9a00      	ldr	r2, [sp, #0]
 801638c:	9002      	str	r0, [sp, #8]
 801638e:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8016392:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8016396:	9a01      	ldr	r2, [sp, #4]
 8016398:	2c00      	cmp	r4, #0
 801639a:	4698      	mov	r8, r3
 801639c:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80163a0:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80163a4:	db3e      	blt.n	8016424 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 80163a6:	45a1      	cmp	r9, r4
 80163a8:	dd3c      	ble.n	8016424 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 80163aa:	2d00      	cmp	r5, #0
 80163ac:	db38      	blt.n	8016420 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 80163ae:	45ac      	cmp	ip, r5
 80163b0:	dd36      	ble.n	8016420 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 80163b2:	f81a 2006 	ldrb.w	r2, [sl, r6]
 80163b6:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 80163ba:	1c6e      	adds	r6, r5, #1
 80163bc:	d435      	bmi.n	801642a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 80163be:	45b4      	cmp	ip, r6
 80163c0:	dd33      	ble.n	801642a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 80163c2:	b393      	cbz	r3, 801642a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 80163c4:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80163c8:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 80163cc:	3401      	adds	r4, #1
 80163ce:	d430      	bmi.n	8016432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 80163d0:	45a1      	cmp	r9, r4
 80163d2:	dd2e      	ble.n	8016432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 80163d4:	b36f      	cbz	r7, 8016432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 80163d6:	2d00      	cmp	r5, #0
 80163d8:	db29      	blt.n	801642e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 80163da:	45ac      	cmp	ip, r5
 80163dc:	dd27      	ble.n	801642e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 80163de:	f81e 400c 	ldrb.w	r4, [lr, ip]
 80163e2:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 80163e6:	3501      	adds	r5, #1
 80163e8:	d407      	bmi.n	80163fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 80163ea:	45ac      	cmp	ip, r5
 80163ec:	dd05      	ble.n	80163fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 80163ee:	b123      	cbz	r3, 80163fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 80163f0:	44f4      	add	ip, lr
 80163f2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80163f6:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 80163fa:	2b0f      	cmp	r3, #15
 80163fc:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016400:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016404:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016408:	ea4f 6810 	mov.w	r8, r0, lsr #24
 801640c:	d801      	bhi.n	8016412 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 801640e:	2f0f      	cmp	r7, #15
 8016410:	d911      	bls.n	8016436 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016412:	4b79      	ldr	r3, [pc, #484]	; (80165f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>)
 8016414:	4a79      	ldr	r2, [pc, #484]	; (80165fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8016416:	487a      	ldr	r0, [pc, #488]	; (8016600 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8016418:	f240 3173 	movw	r1, #883	; 0x373
 801641c:	f004 ff28 	bl	801b270 <__assert_func>
 8016420:	4602      	mov	r2, r0
 8016422:	e7ca      	b.n	80163ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 8016424:	4606      	mov	r6, r0
 8016426:	4602      	mov	r2, r0
 8016428:	e7d0      	b.n	80163cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 801642a:	4606      	mov	r6, r0
 801642c:	e7ce      	b.n	80163cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 801642e:	4604      	mov	r4, r0
 8016430:	e7d9      	b.n	80163e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x92>
 8016432:	4604      	mov	r4, r0
 8016434:	e7e1      	b.n	80163fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8016436:	b29b      	uxth	r3, r3
 8016438:	b2bf      	uxth	r7, r7
 801643a:	fb03 fe07 	mul.w	lr, r3, r7
 801643e:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8016442:	011b      	lsls	r3, r3, #4
 8016444:	eba3 0c0e 	sub.w	ip, r3, lr
 8016448:	b2bf      	uxth	r7, r7
 801644a:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 801644e:	fa1f fc8c 	uxth.w	ip, ip
 8016452:	1bed      	subs	r5, r5, r7
 8016454:	b2ad      	uxth	r5, r5
 8016456:	fb0c f30a 	mul.w	r3, ip, sl
 801645a:	fb05 330b 	mla	r3, r5, fp, r3
 801645e:	fb07 3309 	mla	r3, r7, r9, r3
 8016462:	fb0e 3308 	mla	r3, lr, r8, r3
 8016466:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801646a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801646e:	9303      	str	r3, [sp, #12]
 8016470:	d018      	beq.n	80164a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 8016472:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8016476:	fb0b f303 	mul.w	r3, fp, r3
 801647a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801647e:	fb0b fb02 	mul.w	fp, fp, r2
 8016482:	0a1a      	lsrs	r2, r3, #8
 8016484:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016488:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801648c:	441a      	add	r2, r3
 801648e:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8016492:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8016496:	0a12      	lsrs	r2, r2, #8
 8016498:	0a1b      	lsrs	r3, r3, #8
 801649a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801649e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80164a2:	431a      	orrs	r2, r3
 80164a4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80164a8:	d019      	beq.n	80164de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x18a>
 80164aa:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80164ae:	fb0a fb0b 	mul.w	fp, sl, fp
 80164b2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80164b6:	fb0a fa06 	mul.w	sl, sl, r6
 80164ba:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80164be:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80164c2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80164c6:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 80164ca:	445e      	add	r6, fp
 80164cc:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80164d0:	0a36      	lsrs	r6, r6, #8
 80164d2:	0a1b      	lsrs	r3, r3, #8
 80164d4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80164d8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80164dc:	431e      	orrs	r6, r3
 80164de:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80164e2:	d019      	beq.n	8016518 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1c4>
 80164e4:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80164e8:	fb09 fa0a 	mul.w	sl, r9, sl
 80164ec:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80164f0:	fb09 f904 	mul.w	r9, r9, r4
 80164f4:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80164f8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80164fc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016500:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8016504:	4454      	add	r4, sl
 8016506:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 801650a:	0a24      	lsrs	r4, r4, #8
 801650c:	0a1b      	lsrs	r3, r3, #8
 801650e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016512:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016516:	431c      	orrs	r4, r3
 8016518:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801651c:	d019      	beq.n	8016552 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1fe>
 801651e:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8016522:	fb08 f909 	mul.w	r9, r8, r9
 8016526:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801652a:	fb08 f800 	mul.w	r8, r8, r0
 801652e:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8016532:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016536:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801653a:	f508 7380 	add.w	r3, r8, #256	; 0x100
 801653e:	4448      	add	r0, r9
 8016540:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8016544:	0a00      	lsrs	r0, r0, #8
 8016546:	0a1b      	lsrs	r3, r3, #8
 8016548:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801654c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016550:	4318      	orrs	r0, r3
 8016552:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016556:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801655a:	fb0c f808 	mul.w	r8, ip, r8
 801655e:	fb05 8803 	mla	r8, r5, r3, r8
 8016562:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8016566:	fb07 8803 	mla	r8, r7, r3, r8
 801656a:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801656e:	fb0e 8303 	mla	r3, lr, r3, r8
 8016572:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016576:	0a1b      	lsrs	r3, r3, #8
 8016578:	fb0c f606 	mul.w	r6, ip, r6
 801657c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016580:	fb05 6202 	mla	r2, r5, r2, r6
 8016584:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8016588:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 801658c:	fb07 2703 	mla	r7, r7, r3, r2
 8016590:	9a03      	ldr	r2, [sp, #12]
 8016592:	9c02      	ldr	r4, [sp, #8]
 8016594:	9d01      	ldr	r5, [sp, #4]
 8016596:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801659a:	fb0e 7303 	mla	r3, lr, r3, r7
 801659e:	43d0      	mvns	r0, r2
 80165a0:	9a00      	ldr	r2, [sp, #0]
 80165a2:	b2c0      	uxtb	r0, r0
 80165a4:	0a1b      	lsrs	r3, r3, #8
 80165a6:	4342      	muls	r2, r0
 80165a8:	4344      	muls	r4, r0
 80165aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80165ae:	ea48 0303 	orr.w	r3, r8, r3
 80165b2:	4345      	muls	r5, r0
 80165b4:	4620      	mov	r0, r4
 80165b6:	1c54      	adds	r4, r2, #1
 80165b8:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 80165bc:	0c1a      	lsrs	r2, r3, #16
 80165be:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80165c2:	4a10      	ldr	r2, [pc, #64]	; (8016604 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 80165c4:	ea02 2204 	and.w	r2, r2, r4, lsl #8
 80165c8:	1c44      	adds	r4, r0, #1
 80165ca:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 80165ce:	b2d8      	uxtb	r0, r3
 80165d0:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 80165d4:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80165d8:	1c68      	adds	r0, r5, #1
 80165da:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 80165de:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80165e2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80165e6:	00db      	lsls	r3, r3, #3
 80165e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80165ec:	4313      	orrs	r3, r2
 80165ee:	800b      	strh	r3, [r1, #0]
 80165f0:	b005      	add	sp, #20
 80165f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80165f6:	bf00      	nop
 80165f8:	0801eea7 	.word	0x0801eea7
 80165fc:	0801f405 	.word	0x0801f405
 8016600:	0801ef2f 	.word	0x0801ef2f
 8016604:	fffff800 	.word	0xfffff800

08016608 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8016608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801660c:	ed2d 8b08 	vpush	{d8-d11}
 8016610:	b097      	sub	sp, #92	; 0x5c
 8016612:	eeb0 aa40 	vmov.f32	s20, s0
 8016616:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 8016618:	9307      	str	r3, [sp, #28]
 801661a:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 801661e:	9112      	str	r1, [sp, #72]	; 0x48
 8016620:	930f      	str	r3, [sp, #60]	; 0x3c
 8016622:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8016626:	9015      	str	r0, [sp, #84]	; 0x54
 8016628:	6868      	ldr	r0, [r5, #4]
 801662a:	9214      	str	r2, [sp, #80]	; 0x50
 801662c:	fb00 1303 	mla	r3, r0, r3, r1
 8016630:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8016632:	6829      	ldr	r1, [r5, #0]
 8016634:	6855      	ldr	r5, [r2, #4]
 8016636:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 801663a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801663e:	930a      	str	r3, [sp, #40]	; 0x28
 8016640:	6813      	ldr	r3, [r2, #0]
 8016642:	9311      	str	r3, [sp, #68]	; 0x44
 8016644:	eef0 9a60 	vmov.f32	s19, s1
 8016648:	eeb0 9a41 	vmov.f32	s18, s2
 801664c:	eeb0 8a62 	vmov.f32	s16, s5
 8016650:	eef0 8a43 	vmov.f32	s17, s6
 8016654:	eef0 ba44 	vmov.f32	s23, s8
 8016658:	eeb0 ba64 	vmov.f32	s22, s9
 801665c:	eef0 aa45 	vmov.f32	s21, s10
 8016660:	3504      	adds	r5, #4
 8016662:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016664:	2b00      	cmp	r3, #0
 8016666:	dc03      	bgt.n	8016670 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8016668:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801666a:	2b00      	cmp	r3, #0
 801666c:	f340 834d 	ble.w	8016d0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8016670:	9b07      	ldr	r3, [sp, #28]
 8016672:	2b00      	cmp	r3, #0
 8016674:	f340 819c 	ble.w	80169b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a8>
 8016678:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801667a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801667c:	1412      	asrs	r2, r2, #16
 801667e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016682:	d42d      	bmi.n	80166e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8016684:	1c51      	adds	r1, r2, #1
 8016686:	428c      	cmp	r4, r1
 8016688:	dd2d      	ble.n	80166e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 801668a:	2b00      	cmp	r3, #0
 801668c:	db2b      	blt.n	80166e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 801668e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8016690:	1c59      	adds	r1, r3, #1
 8016692:	4288      	cmp	r0, r1
 8016694:	dd27      	ble.n	80166e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8016696:	9b07      	ldr	r3, [sp, #28]
 8016698:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801669a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801669c:	3b01      	subs	r3, #1
 801669e:	fb02 1203 	mla	r2, r2, r3, r1
 80166a2:	1412      	asrs	r2, r2, #16
 80166a4:	d429      	bmi.n	80166fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80166a6:	3201      	adds	r2, #1
 80166a8:	4294      	cmp	r4, r2
 80166aa:	dd26      	ble.n	80166fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80166ac:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80166ae:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80166b0:	fb02 1303 	mla	r3, r2, r3, r1
 80166b4:	141b      	asrs	r3, r3, #16
 80166b6:	d420      	bmi.n	80166fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80166b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80166ba:	3301      	adds	r3, #1
 80166bc:	429a      	cmp	r2, r3
 80166be:	dd1c      	ble.n	80166fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80166c0:	9b07      	ldr	r3, [sp, #28]
 80166c2:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 80166c6:	9310      	str	r3, [sp, #64]	; 0x40
 80166c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80166ca:	2b00      	cmp	r3, #0
 80166cc:	f300 81da 	bgt.w	8016a84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 80166d0:	9b07      	ldr	r3, [sp, #28]
 80166d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80166d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80166d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80166dc:	930a      	str	r3, [sp, #40]	; 0x28
 80166de:	e169      	b.n	80169b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 80166e0:	1c51      	adds	r1, r2, #1
 80166e2:	f040 8156 	bne.w	8016992 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 80166e6:	42a2      	cmp	r2, r4
 80166e8:	f280 8153 	bge.w	8016992 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 80166ec:	1c5a      	adds	r2, r3, #1
 80166ee:	f2c0 8150 	blt.w	8016992 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 80166f2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80166f4:	4293      	cmp	r3, r2
 80166f6:	f280 814c 	bge.w	8016992 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 80166fa:	9b07      	ldr	r3, [sp, #28]
 80166fc:	9313      	str	r3, [sp, #76]	; 0x4c
 80166fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016700:	9310      	str	r3, [sp, #64]	; 0x40
 8016702:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016704:	2b00      	cmp	r3, #0
 8016706:	dde3      	ble.n	80166d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8016708:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801670a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801670c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016710:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016712:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8016716:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016718:	1412      	asrs	r2, r2, #16
 801671a:	ea4f 4323 	mov.w	r3, r3, asr #16
 801671e:	f100 8198 	bmi.w	8016a52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44a>
 8016722:	1c56      	adds	r6, r2, #1
 8016724:	42b4      	cmp	r4, r6
 8016726:	f340 8196 	ble.w	8016a56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 801672a:	2b00      	cmp	r3, #0
 801672c:	f2c0 8193 	blt.w	8016a56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8016730:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016732:	1c5e      	adds	r6, r3, #1
 8016734:	42b7      	cmp	r7, r6
 8016736:	f340 818e 	ble.w	8016a56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 801673a:	fb03 2304 	mla	r3, r3, r4, r2
 801673e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016740:	18d6      	adds	r6, r2, r3
 8016742:	5cd3      	ldrb	r3, [r2, r3]
 8016744:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8016748:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801674c:	2900      	cmp	r1, #0
 801674e:	f000 8170 	beq.w	8016a32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42a>
 8016752:	7872      	ldrb	r2, [r6, #1]
 8016754:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8016758:	920b      	str	r2, [sp, #44]	; 0x2c
 801675a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801675e:	2800      	cmp	r0, #0
 8016760:	f000 8171 	beq.w	8016a46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43e>
 8016764:	1932      	adds	r2, r6, r4
 8016766:	5d36      	ldrb	r6, [r6, r4]
 8016768:	7852      	ldrb	r2, [r2, #1]
 801676a:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 801676e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8016772:	9608      	str	r6, [sp, #32]
 8016774:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016778:	920c      	str	r2, [sp, #48]	; 0x30
 801677a:	0e16      	lsrs	r6, r2, #24
 801677c:	b289      	uxth	r1, r1
 801677e:	b280      	uxth	r0, r0
 8016780:	fb01 fb00 	mul.w	fp, r1, r0
 8016784:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8016788:	0109      	lsls	r1, r1, #4
 801678a:	eba1 090b 	sub.w	r9, r1, fp
 801678e:	b280      	uxth	r0, r0
 8016790:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8016794:	fa1f f989 	uxth.w	r9, r9
 8016798:	1a12      	subs	r2, r2, r0
 801679a:	b292      	uxth	r2, r2
 801679c:	fb09 f108 	mul.w	r1, r9, r8
 80167a0:	fb02 110c 	mla	r1, r2, ip, r1
 80167a4:	fb00 110a 	mla	r1, r0, sl, r1
 80167a8:	fb0b 1106 	mla	r1, fp, r6, r1
 80167ac:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80167b0:	2900      	cmp	r1, #0
 80167b2:	f000 80df 	beq.w	8016974 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 80167b6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80167ba:	d01b      	beq.n	80167f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ec>
 80167bc:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80167c0:	fb0c fe0e 	mul.w	lr, ip, lr
 80167c4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80167c8:	fb0c fc03 	mul.w	ip, ip, r3
 80167cc:	ea4f 231e 	mov.w	r3, lr, lsr #8
 80167d0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80167d4:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80167d8:	4473      	add	r3, lr
 80167da:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 80167de:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 80167e2:	0a1b      	lsrs	r3, r3, #8
 80167e4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80167e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80167ec:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80167f0:	ea43 030e 	orr.w	r3, r3, lr
 80167f4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80167f8:	d01e      	beq.n	8016838 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 80167fa:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80167fc:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8016800:	fb08 fc0c 	mul.w	ip, r8, ip
 8016804:	f407 4e7f 	and.w	lr, r7, #65280	; 0xff00
 8016808:	fb08 f80e 	mul.w	r8, r8, lr
 801680c:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8016810:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016814:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016818:	44e6      	add	lr, ip
 801681a:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 801681e:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8016822:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016826:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801682a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801682e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8016832:	ea4e 0708 	orr.w	r7, lr, r8
 8016836:	970b      	str	r7, [sp, #44]	; 0x2c
 8016838:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801683c:	d01e      	beq.n	801687c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 801683e:	9f08      	ldr	r7, [sp, #32]
 8016840:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8016844:	fb0a f808 	mul.w	r8, sl, r8
 8016848:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 801684c:	fb0a fa0c 	mul.w	sl, sl, ip
 8016850:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8016854:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016858:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801685c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016860:	44c6      	add	lr, r8
 8016862:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016866:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801686a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801686e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016872:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016876:	ea4e 070a 	orr.w	r7, lr, sl
 801687a:	9708      	str	r7, [sp, #32]
 801687c:	2eff      	cmp	r6, #255	; 0xff
 801687e:	d01d      	beq.n	80168bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8016880:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8016882:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8016886:	fb06 f808 	mul.w	r8, r6, r8
 801688a:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 801688e:	fb06 f60c 	mul.w	r6, r6, ip
 8016892:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8016896:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801689a:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801689e:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 80168a2:	44c6      	add	lr, r8
 80168a4:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 80168a8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80168ac:	0a36      	lsrs	r6, r6, #8
 80168ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80168b2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80168b6:	ea4e 0606 	orr.w	r6, lr, r6
 80168ba:	960c      	str	r6, [sp, #48]	; 0x30
 80168bc:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80168be:	9f08      	ldr	r7, [sp, #32]
 80168c0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80168c4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80168c8:	fb09 f606 	mul.w	r6, r9, r6
 80168cc:	fb02 660c 	mla	r6, r2, ip, r6
 80168d0:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80168d4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80168d6:	fb00 660c 	mla	r6, r0, ip, r6
 80168da:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80168de:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80168e0:	fb0b 660c 	mla	r6, fp, ip, r6
 80168e4:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 80168e8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80168ec:	fb09 f90c 	mul.w	r9, r9, ip
 80168f0:	fb02 9303 	mla	r3, r2, r3, r9
 80168f4:	9a08      	ldr	r2, [sp, #32]
 80168f6:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 80168fa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80168fc:	fb00 330e 	mla	r3, r0, lr, r3
 8016900:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8016904:	fb0b 3b00 	mla	fp, fp, r0, r3
 8016908:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801690a:	881b      	ldrh	r3, [r3, #0]
 801690c:	43c9      	mvns	r1, r1
 801690e:	1218      	asrs	r0, r3, #8
 8016910:	b2c9      	uxtb	r1, r1
 8016912:	10da      	asrs	r2, r3, #3
 8016914:	0a36      	lsrs	r6, r6, #8
 8016916:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801691a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801691e:	00db      	lsls	r3, r3, #3
 8016920:	4348      	muls	r0, r1
 8016922:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016926:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801692a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801692e:	b2db      	uxtb	r3, r3
 8016930:	434b      	muls	r3, r1
 8016932:	ea46 060b 	orr.w	r6, r6, fp
 8016936:	434a      	muls	r2, r1
 8016938:	1c41      	adds	r1, r0, #1
 801693a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801693e:	0c30      	lsrs	r0, r6, #16
 8016940:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8016944:	494e      	ldr	r1, [pc, #312]	; (8016a80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>)
 8016946:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801694a:	1c59      	adds	r1, r3, #1
 801694c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8016950:	b2f3      	uxtb	r3, r6
 8016952:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8016956:	1c51      	adds	r1, r2, #1
 8016958:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801695c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8016960:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8016964:	00f6      	lsls	r6, r6, #3
 8016966:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 801696a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801696e:	431e      	orrs	r6, r3
 8016970:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016972:	801e      	strh	r6, [r3, #0]
 8016974:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016976:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016978:	3302      	adds	r3, #2
 801697a:	9310      	str	r3, [sp, #64]	; 0x40
 801697c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801697e:	4413      	add	r3, r2
 8016980:	9329      	str	r3, [sp, #164]	; 0xa4
 8016982:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016984:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016986:	4413      	add	r3, r2
 8016988:	932a      	str	r3, [sp, #168]	; 0xa8
 801698a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801698c:	3b01      	subs	r3, #1
 801698e:	9313      	str	r3, [sp, #76]	; 0x4c
 8016990:	e6b7      	b.n	8016702 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016992:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016994:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016996:	4413      	add	r3, r2
 8016998:	9329      	str	r3, [sp, #164]	; 0xa4
 801699a:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801699c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801699e:	4413      	add	r3, r2
 80169a0:	932a      	str	r3, [sp, #168]	; 0xa8
 80169a2:	9b07      	ldr	r3, [sp, #28]
 80169a4:	3b01      	subs	r3, #1
 80169a6:	9307      	str	r3, [sp, #28]
 80169a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80169aa:	3302      	adds	r3, #2
 80169ac:	930a      	str	r3, [sp, #40]	; 0x28
 80169ae:	e65f      	b.n	8016670 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80169b0:	f47f ae71 	bne.w	8016696 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 80169b4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80169b6:	2b00      	cmp	r3, #0
 80169b8:	f340 81a7 	ble.w	8016d0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 80169bc:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80169c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80169c4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80169c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80169ca:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80169ce:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80169d2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80169d6:	eef0 6a48 	vmov.f32	s13, s16
 80169da:	ee69 7a27 	vmul.f32	s15, s18, s15
 80169de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80169e2:	ee37 8a48 	vsub.f32	s16, s14, s16
 80169e6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80169ea:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80169ee:	eef0 6a68 	vmov.f32	s13, s17
 80169f2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80169f6:	ee18 2a10 	vmov	r2, s16
 80169fa:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80169fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a02:	ee18 2a90 	vmov	r2, s17
 8016a06:	932b      	str	r3, [sp, #172]	; 0xac
 8016a08:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016a0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a0e:	932c      	str	r3, [sp, #176]	; 0xb0
 8016a10:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016a12:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016a14:	3b01      	subs	r3, #1
 8016a16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016a1a:	9312      	str	r3, [sp, #72]	; 0x48
 8016a1c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016a1e:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8016a22:	bf08      	it	eq
 8016a24:	4613      	moveq	r3, r2
 8016a26:	9307      	str	r3, [sp, #28]
 8016a28:	eef0 8a67 	vmov.f32	s17, s15
 8016a2c:	eeb0 8a47 	vmov.f32	s16, s14
 8016a30:	e617      	b.n	8016662 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5a>
 8016a32:	b158      	cbz	r0, 8016a4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x444>
 8016a34:	5d32      	ldrb	r2, [r6, r4]
 8016a36:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8016a3a:	9208      	str	r2, [sp, #32]
 8016a3c:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8016a40:	26ff      	movs	r6, #255	; 0xff
 8016a42:	46b0      	mov	r8, r6
 8016a44:	e69a      	b.n	801677c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8016a46:	26ff      	movs	r6, #255	; 0xff
 8016a48:	46b2      	mov	sl, r6
 8016a4a:	e697      	b.n	801677c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8016a4c:	26ff      	movs	r6, #255	; 0xff
 8016a4e:	46b2      	mov	sl, r6
 8016a50:	e7f7      	b.n	8016a42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43a>
 8016a52:	1c57      	adds	r7, r2, #1
 8016a54:	d18e      	bne.n	8016974 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8016a56:	4294      	cmp	r4, r2
 8016a58:	dd8c      	ble.n	8016974 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8016a5a:	1c5e      	adds	r6, r3, #1
 8016a5c:	db8a      	blt.n	8016974 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8016a5e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8016a60:	429e      	cmp	r6, r3
 8016a62:	dd87      	ble.n	8016974 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8016a64:	e9cd 1004 	strd	r1, r0, [sp, #16]
 8016a68:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8016a6c:	e9cd 4600 	strd	r4, r6, [sp]
 8016a70:	462b      	mov	r3, r5
 8016a72:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
 8016a76:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016a78:	f7ff fc6c 	bl	8016354 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8016a7c:	e77a      	b.n	8016974 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8016a7e:	bf00      	nop
 8016a80:	fffff800 	.word	0xfffff800
 8016a84:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016a86:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8016a88:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016a8c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016a8e:	1409      	asrs	r1, r1, #16
 8016a90:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8016a94:	141b      	asrs	r3, r3, #16
 8016a96:	fb04 1303 	mla	r3, r4, r3, r1
 8016a9a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8016a9c:	18ce      	adds	r6, r1, r3
 8016a9e:	5ccb      	ldrb	r3, [r1, r3]
 8016aa0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8016aa4:	0e1f      	lsrs	r7, r3, #24
 8016aa6:	2a00      	cmp	r2, #0
 8016aa8:	f000 811f 	beq.w	8016cea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8016aac:	7871      	ldrb	r1, [r6, #1]
 8016aae:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8016ab2:	910d      	str	r1, [sp, #52]	; 0x34
 8016ab4:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8016ab8:	2800      	cmp	r0, #0
 8016aba:	f000 8120 	beq.w	8016cfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8016abe:	1931      	adds	r1, r6, r4
 8016ac0:	5d36      	ldrb	r6, [r6, r4]
 8016ac2:	7849      	ldrb	r1, [r1, #1]
 8016ac4:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8016ac8:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8016acc:	9609      	str	r6, [sp, #36]	; 0x24
 8016ace:	ea4f 6916 	mov.w	r9, r6, lsr #24
 8016ad2:	910e      	str	r1, [sp, #56]	; 0x38
 8016ad4:	0e0e      	lsrs	r6, r1, #24
 8016ad6:	b292      	uxth	r2, r2
 8016ad8:	b280      	uxth	r0, r0
 8016ada:	fb02 fa00 	mul.w	sl, r2, r0
 8016ade:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8016ae2:	0112      	lsls	r2, r2, #4
 8016ae4:	eba2 080a 	sub.w	r8, r2, sl
 8016ae8:	b280      	uxth	r0, r0
 8016aea:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8016aee:	fa1f f888 	uxth.w	r8, r8
 8016af2:	1a09      	subs	r1, r1, r0
 8016af4:	b289      	uxth	r1, r1
 8016af6:	fb08 f20e 	mul.w	r2, r8, lr
 8016afa:	fb01 2207 	mla	r2, r1, r7, r2
 8016afe:	fb00 2209 	mla	r2, r0, r9, r2
 8016b02:	fb0a 2206 	mla	r2, sl, r6, r2
 8016b06:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8016b0a:	9213      	str	r2, [sp, #76]	; 0x4c
 8016b0c:	2a00      	cmp	r2, #0
 8016b0e:	f000 80de 	beq.w	8016cce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c6>
 8016b12:	2fff      	cmp	r7, #255	; 0xff
 8016b14:	d01a      	beq.n	8016b4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 8016b16:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016b1a:	fb07 fc0c 	mul.w	ip, r7, ip
 8016b1e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016b22:	435f      	muls	r7, r3
 8016b24:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8016b28:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016b2c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016b30:	4463      	add	r3, ip
 8016b32:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8016b36:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8016b3a:	0a1b      	lsrs	r3, r3, #8
 8016b3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016b40:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016b44:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016b48:	ea43 030c 	orr.w	r3, r3, ip
 8016b4c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016b50:	d01f      	beq.n	8016b92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58a>
 8016b52:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8016b54:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016b56:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016b5a:	fb0e f707 	mul.w	r7, lr, r7
 8016b5e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016b62:	fb0e fe0c 	mul.w	lr, lr, ip
 8016b66:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016b6a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016b6e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016b72:	44bc      	add	ip, r7
 8016b74:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8016b78:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8016b7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016b80:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016b84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016b88:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016b8c:	ea4c 020e 	orr.w	r2, ip, lr
 8016b90:	920d      	str	r2, [sp, #52]	; 0x34
 8016b92:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016b96:	d01e      	beq.n	8016bd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ce>
 8016b98:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016b9a:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8016b9e:	fb09 fe0e 	mul.w	lr, r9, lr
 8016ba2:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8016ba6:	fb09 f907 	mul.w	r9, r9, r7
 8016baa:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8016bae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016bb2:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8016bb6:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8016bba:	44f4      	add	ip, lr
 8016bbc:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8016bc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016bc4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016bc8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016bcc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016bd0:	ea4c 0209 	orr.w	r2, ip, r9
 8016bd4:	9209      	str	r2, [sp, #36]	; 0x24
 8016bd6:	2eff      	cmp	r6, #255	; 0xff
 8016bd8:	d01c      	beq.n	8016c14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60c>
 8016bda:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016bdc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8016be0:	fb06 fe0e 	mul.w	lr, r6, lr
 8016be4:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8016be8:	437e      	muls	r6, r7
 8016bea:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8016bee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016bf2:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8016bf6:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8016bfa:	44f4      	add	ip, lr
 8016bfc:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8016c00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016c04:	0a36      	lsrs	r6, r6, #8
 8016c06:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016c0a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016c0e:	ea4c 0206 	orr.w	r2, ip, r6
 8016c12:	920e      	str	r2, [sp, #56]	; 0x38
 8016c14:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016c16:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 8016c1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016c1c:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8016c20:	fb08 f606 	mul.w	r6, r8, r6
 8016c24:	fb01 6607 	mla	r6, r1, r7, r6
 8016c28:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8016c2c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016c2e:	fb00 6607 	mla	r6, r0, r7, r6
 8016c32:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8016c36:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016c38:	fb0a 6607 	mla	r6, sl, r7, r6
 8016c3c:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8016c40:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016c42:	fb08 f807 	mul.w	r8, r8, r7
 8016c46:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016c4a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016c4e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016c50:	fb01 8303 	mla	r3, r1, r3, r8
 8016c54:	fb00 330c 	mla	r3, r0, ip, r3
 8016c58:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8016c5c:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8016c60:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016c62:	f8bb 3000 	ldrh.w	r3, [fp]
 8016c66:	43d2      	mvns	r2, r2
 8016c68:	1218      	asrs	r0, r3, #8
 8016c6a:	b2d2      	uxtb	r2, r2
 8016c6c:	0a36      	lsrs	r6, r6, #8
 8016c6e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016c72:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016c76:	4350      	muls	r0, r2
 8016c78:	10d9      	asrs	r1, r3, #3
 8016c7a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016c7e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016c82:	00db      	lsls	r3, r3, #3
 8016c84:	ea46 060e 	orr.w	r6, r6, lr
 8016c88:	1c47      	adds	r7, r0, #1
 8016c8a:	b2db      	uxtb	r3, r3
 8016c8c:	4353      	muls	r3, r2
 8016c8e:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8016c92:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016c96:	0c37      	lsrs	r7, r6, #16
 8016c98:	4351      	muls	r1, r2
 8016c9a:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8016c9e:	4a1d      	ldr	r2, [pc, #116]	; (8016d14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>)
 8016ca0:	1c5f      	adds	r7, r3, #1
 8016ca2:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8016ca6:	b2f7      	uxtb	r7, r6
 8016ca8:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8016cac:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8016cb0:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8016cb4:	1c4b      	adds	r3, r1, #1
 8016cb6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8016cba:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8016cbe:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 8016cc2:	00f6      	lsls	r6, r6, #3
 8016cc4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016cc8:	4330      	orrs	r0, r6
 8016cca:	f8ab 0000 	strh.w	r0, [fp]
 8016cce:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016cd0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016cd2:	4413      	add	r3, r2
 8016cd4:	9329      	str	r3, [sp, #164]	; 0xa4
 8016cd6:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016cd8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016cda:	4413      	add	r3, r2
 8016cdc:	932a      	str	r3, [sp, #168]	; 0xa8
 8016cde:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016ce0:	3b01      	subs	r3, #1
 8016ce2:	f10b 0b02 	add.w	fp, fp, #2
 8016ce6:	9310      	str	r3, [sp, #64]	; 0x40
 8016ce8:	e4ee      	b.n	80166c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8016cea:	b158      	cbz	r0, 8016d04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fc>
 8016cec:	5d31      	ldrb	r1, [r6, r4]
 8016cee:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8016cf2:	9109      	str	r1, [sp, #36]	; 0x24
 8016cf4:	ea4f 6911 	mov.w	r9, r1, lsr #24
 8016cf8:	26ff      	movs	r6, #255	; 0xff
 8016cfa:	46b6      	mov	lr, r6
 8016cfc:	e6eb      	b.n	8016ad6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8016cfe:	26ff      	movs	r6, #255	; 0xff
 8016d00:	46b1      	mov	r9, r6
 8016d02:	e6e8      	b.n	8016ad6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8016d04:	26ff      	movs	r6, #255	; 0xff
 8016d06:	46b1      	mov	r9, r6
 8016d08:	e7f7      	b.n	8016cfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f2>
 8016d0a:	b017      	add	sp, #92	; 0x5c
 8016d0c:	ecbd 8b08 	vpop	{d8-d11}
 8016d10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d14:	fffff800 	.word	0xfffff800

08016d18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8016d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d1c:	b087      	sub	sp, #28
 8016d1e:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8016d22:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8016d26:	9105      	str	r1, [sp, #20]
 8016d28:	fb00 e604 	mla	r6, r0, r4, lr
 8016d2c:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8016d30:	9102      	str	r1, [sp, #8]
 8016d32:	eb02 0146 	add.w	r1, r2, r6, lsl #1
 8016d36:	9103      	str	r1, [sp, #12]
 8016d38:	9905      	ldr	r1, [sp, #20]
 8016d3a:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8016d3e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8016d42:	8809      	ldrh	r1, [r1, #0]
 8016d44:	2800      	cmp	r0, #0
 8016d46:	eb03 0a06 	add.w	sl, r3, r6
 8016d4a:	f2c0 80ca 	blt.w	8016ee2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8016d4e:	4287      	cmp	r7, r0
 8016d50:	f340 80c7 	ble.w	8016ee2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8016d54:	f1be 0f00 	cmp.w	lr, #0
 8016d58:	f2c0 80bf 	blt.w	8016eda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8016d5c:	4574      	cmp	r4, lr
 8016d5e:	f340 80bc 	ble.w	8016eda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8016d62:	f813 c006 	ldrb.w	ip, [r3, r6]
 8016d66:	f832 9016 	ldrh.w	r9, [r2, r6, lsl #1]
 8016d6a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016d6e:	d01c      	beq.n	8016daa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x92>
 8016d70:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8016d74:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8016d78:	4372      	muls	r2, r6
 8016d7a:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8016d7e:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8016d82:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016d86:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016d8a:	fb0c f609 	mul.w	r6, ip, r9
 8016d8e:	eb03 0902 	add.w	r9, r3, r2
 8016d92:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8016d96:	f106 0820 	add.w	r8, r6, #32
 8016d9a:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8016d9e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016da2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016da6:	ea49 0908 	orr.w	r9, r9, r8
 8016daa:	fa1f f989 	uxth.w	r9, r9
 8016dae:	f11e 0301 	adds.w	r3, lr, #1
 8016db2:	f100 809b 	bmi.w	8016eec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8016db6:	429c      	cmp	r4, r3
 8016db8:	f340 8098 	ble.w	8016eec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8016dbc:	2d00      	cmp	r5, #0
 8016dbe:	f000 8095 	beq.w	8016eec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8016dc2:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8016dc6:	9b03      	ldr	r3, [sp, #12]
 8016dc8:	2eff      	cmp	r6, #255	; 0xff
 8016dca:	885b      	ldrh	r3, [r3, #2]
 8016dcc:	d01b      	beq.n	8016e06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xee>
 8016dce:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8016dd2:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8016dd6:	fb08 f202 	mul.w	r2, r8, r2
 8016dda:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016dde:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8016de2:	fb06 f803 	mul.w	r8, r6, r3
 8016de6:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8016dea:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016dee:	441a      	add	r2, r3
 8016df0:	f108 0320 	add.w	r3, r8, #32
 8016df4:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8016df8:	0a1b      	lsrs	r3, r3, #8
 8016dfa:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8016dfe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016e02:	ea4b 0303 	orr.w	r3, fp, r3
 8016e06:	b29b      	uxth	r3, r3
 8016e08:	9301      	str	r3, [sp, #4]
 8016e0a:	3001      	adds	r0, #1
 8016e0c:	d474      	bmi.n	8016ef8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8016e0e:	4287      	cmp	r7, r0
 8016e10:	dd72      	ble.n	8016ef8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8016e12:	9a02      	ldr	r2, [sp, #8]
 8016e14:	2a00      	cmp	r2, #0
 8016e16:	f000 8121 	beq.w	801705c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>
 8016e1a:	f1be 0f00 	cmp.w	lr, #0
 8016e1e:	db68      	blt.n	8016ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8016e20:	4574      	cmp	r4, lr
 8016e22:	dd66      	ble.n	8016ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8016e24:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8016e28:	9a03      	ldr	r2, [sp, #12]
 8016e2a:	2fff      	cmp	r7, #255	; 0xff
 8016e2c:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8016e30:	d01c      	beq.n	8016e6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x154>
 8016e32:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8016e36:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8016e3a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016e3e:	fb07 fb00 	mul.w	fp, r7, r0
 8016e42:	fb08 f802 	mul.w	r8, r8, r2
 8016e46:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8016e4a:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8016e4e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016e52:	4490      	add	r8, r2
 8016e54:	f10b 0220 	add.w	r2, fp, #32
 8016e58:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8016e5c:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8016e60:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8016e64:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016e68:	ea40 000b 	orr.w	r0, r0, fp
 8016e6c:	b280      	uxth	r0, r0
 8016e6e:	f11e 0e01 	adds.w	lr, lr, #1
 8016e72:	d446      	bmi.n	8016f02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8016e74:	4574      	cmp	r4, lr
 8016e76:	dd44      	ble.n	8016f02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8016e78:	2d00      	cmp	r5, #0
 8016e7a:	d045      	beq.n	8016f08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f0>
 8016e7c:	1c62      	adds	r2, r4, #1
 8016e7e:	9b03      	ldr	r3, [sp, #12]
 8016e80:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8016e84:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8016e88:	2cff      	cmp	r4, #255	; 0xff
 8016e8a:	d01c      	beq.n	8016ec6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ae>
 8016e8c:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8016e90:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016e94:	fb08 fe0e 	mul.w	lr, r8, lr
 8016e98:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8016e9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016ea0:	fb04 f802 	mul.w	r8, r4, r2
 8016ea4:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8016ea8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016eac:	4472      	add	r2, lr
 8016eae:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8016eb2:	f108 0a20 	add.w	sl, r8, #32
 8016eb6:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 8016eba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016ebe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016ec2:	ea42 020a 	orr.w	r2, r2, sl
 8016ec6:	b292      	uxth	r2, r2
 8016ec8:	2d0f      	cmp	r5, #15
 8016eca:	d91f      	bls.n	8016f0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f4>
 8016ecc:	4b67      	ldr	r3, [pc, #412]	; (801706c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x354>)
 8016ece:	4a68      	ldr	r2, [pc, #416]	; (8017070 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x358>)
 8016ed0:	4868      	ldr	r0, [pc, #416]	; (8017074 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x35c>)
 8016ed2:	f240 3173 	movw	r1, #883	; 0x373
 8016ed6:	f004 f9cb 	bl	801b270 <__assert_func>
 8016eda:	4689      	mov	r9, r1
 8016edc:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8016ee0:	e765      	b.n	8016dae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x96>
 8016ee2:	26ff      	movs	r6, #255	; 0xff
 8016ee4:	9101      	str	r1, [sp, #4]
 8016ee6:	4689      	mov	r9, r1
 8016ee8:	46b4      	mov	ip, r6
 8016eea:	e78e      	b.n	8016e0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8016eec:	9101      	str	r1, [sp, #4]
 8016eee:	26ff      	movs	r6, #255	; 0xff
 8016ef0:	e78b      	b.n	8016e0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8016ef2:	4608      	mov	r0, r1
 8016ef4:	27ff      	movs	r7, #255	; 0xff
 8016ef6:	e7ba      	b.n	8016e6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x156>
 8016ef8:	24ff      	movs	r4, #255	; 0xff
 8016efa:	460a      	mov	r2, r1
 8016efc:	4608      	mov	r0, r1
 8016efe:	4627      	mov	r7, r4
 8016f00:	e7e2      	b.n	8016ec8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8016f02:	460a      	mov	r2, r1
 8016f04:	24ff      	movs	r4, #255	; 0xff
 8016f06:	e7df      	b.n	8016ec8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8016f08:	460a      	mov	r2, r1
 8016f0a:	24ff      	movs	r4, #255	; 0xff
 8016f0c:	9b02      	ldr	r3, [sp, #8]
 8016f0e:	2b0f      	cmp	r3, #15
 8016f10:	d8dc      	bhi.n	8016ecc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8016f12:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8016f16:	fa1f f885 	uxth.w	r8, r5
 8016f1a:	fb08 fa0e 	mul.w	sl, r8, lr
 8016f1e:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8016f22:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8016f26:	9303      	str	r3, [sp, #12]
 8016f28:	fa1f f38e 	uxth.w	r3, lr
 8016f2c:	9304      	str	r3, [sp, #16]
 8016f2e:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8016f32:	9b02      	ldr	r3, [sp, #8]
 8016f34:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016f38:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8016f3c:	fb15 fe03 	smulbb	lr, r5, r3
 8016f40:	ea48 0809 	orr.w	r8, r8, r9
 8016f44:	f1c3 0910 	rsb	r9, r3, #16
 8016f48:	9b01      	ldr	r3, [sp, #4]
 8016f4a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016f4e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8016f52:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016f56:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016f5a:	eba9 0905 	sub.w	r9, r9, r5
 8016f5e:	ea4b 0303 	orr.w	r3, fp, r3
 8016f62:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8016f66:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8016f6a:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 8016f6e:	436b      	muls	r3, r5
 8016f70:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016f74:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016f78:	ea4b 0202 	orr.w	r2, fp, r2
 8016f7c:	fb09 3308 	mla	r3, r9, r8, r3
 8016f80:	fb0e 3302 	mla	r3, lr, r2, r3
 8016f84:	0402      	lsls	r2, r0, #16
 8016f86:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016f8a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016f8e:	4310      	orrs	r0, r2
 8016f90:	9a02      	ldr	r2, [sp, #8]
 8016f92:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 8016f96:	fb0e 3e00 	mla	lr, lr, r0, r3
 8016f9a:	9803      	ldr	r0, [sp, #12]
 8016f9c:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
 8016fa0:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8016fa4:	9804      	ldr	r0, [sp, #16]
 8016fa6:	1a2d      	subs	r5, r5, r0
 8016fa8:	9803      	ldr	r0, [sp, #12]
 8016faa:	eba0 000a 	sub.w	r0, r0, sl
 8016fae:	b280      	uxth	r0, r0
 8016fb0:	b2ad      	uxth	r5, r5
 8016fb2:	4346      	muls	r6, r0
 8016fb4:	9804      	ldr	r0, [sp, #16]
 8016fb6:	fb0c 6605 	mla	r6, ip, r5, r6
 8016fba:	fb00 6707 	mla	r7, r0, r7, r6
 8016fbe:	fb0a 7404 	mla	r4, sl, r4, r7
 8016fc2:	b292      	uxth	r2, r2
 8016fc4:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8016fc8:	4354      	muls	r4, r2
 8016fca:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8016fce:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8016fd2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016fd6:	f104 0a01 	add.w	sl, r4, #1
 8016fda:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016fde:	ea43 0e0e 	orr.w	lr, r3, lr
 8016fe2:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8016fe6:	fa1f f38e 	uxth.w	r3, lr
 8016fea:	1208      	asrs	r0, r1, #8
 8016fec:	ea6f 2414 	mvn.w	r4, r4, lsr #8
 8016ff0:	b2e4      	uxtb	r4, r4
 8016ff2:	121d      	asrs	r5, r3, #8
 8016ff4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016ff8:	fb10 f004 	smulbb	r0, r0, r4
 8016ffc:	10ce      	asrs	r6, r1, #3
 8016ffe:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017002:	00c9      	lsls	r1, r1, #3
 8017004:	fb05 0502 	mla	r5, r5, r2, r0
 8017008:	b2c9      	uxtb	r1, r1
 801700a:	10d8      	asrs	r0, r3, #3
 801700c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017010:	00db      	lsls	r3, r3, #3
 8017012:	fb16 f604 	smulbb	r6, r6, r4
 8017016:	b2db      	uxtb	r3, r3
 8017018:	fb11 f404 	smulbb	r4, r1, r4
 801701c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017020:	fb00 6002 	mla	r0, r0, r2, r6
 8017024:	fb03 4202 	mla	r2, r3, r2, r4
 8017028:	b2ad      	uxth	r5, r5
 801702a:	b292      	uxth	r2, r2
 801702c:	1c6b      	adds	r3, r5, #1
 801702e:	1c51      	adds	r1, r2, #1
 8017030:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8017034:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017038:	b280      	uxth	r0, r0
 801703a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801703e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017042:	4313      	orrs	r3, r2
 8017044:	1c42      	adds	r2, r0, #1
 8017046:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801704a:	0940      	lsrs	r0, r0, #5
 801704c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017050:	9a05      	ldr	r2, [sp, #20]
 8017052:	4303      	orrs	r3, r0
 8017054:	8013      	strh	r3, [r2, #0]
 8017056:	b007      	add	sp, #28
 8017058:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801705c:	2d0f      	cmp	r5, #15
 801705e:	f63f af35 	bhi.w	8016ecc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8017062:	24ff      	movs	r4, #255	; 0xff
 8017064:	460a      	mov	r2, r1
 8017066:	4608      	mov	r0, r1
 8017068:	4627      	mov	r7, r4
 801706a:	e752      	b.n	8016f12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1fa>
 801706c:	0801eea7 	.word	0x0801eea7
 8017070:	0801f405 	.word	0x0801f405
 8017074:	0801ef2f 	.word	0x0801ef2f

08017078 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017078:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801707c:	ed2d 8b08 	vpush	{d8-d11}
 8017080:	b099      	sub	sp, #100	; 0x64
 8017082:	eeb0 aa40 	vmov.f32	s20, s0
 8017086:	9308      	str	r3, [sp, #32]
 8017088:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 801708c:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 801708e:	930b      	str	r3, [sp, #44]	; 0x2c
 8017090:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8017094:	9314      	str	r3, [sp, #80]	; 0x50
 8017096:	9113      	str	r1, [sp, #76]	; 0x4c
 8017098:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801709c:	9017      	str	r0, [sp, #92]	; 0x5c
 801709e:	6870      	ldr	r0, [r6, #4]
 80170a0:	9216      	str	r2, [sp, #88]	; 0x58
 80170a2:	fb00 1303 	mla	r3, r0, r3, r1
 80170a6:	6831      	ldr	r1, [r6, #0]
 80170a8:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 80170aa:	f9bd 50c8 	ldrsh.w	r5, [sp, #200]	; 0xc8
 80170ae:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80170b2:	9309      	str	r3, [sp, #36]	; 0x24
 80170b4:	6813      	ldr	r3, [r2, #0]
 80170b6:	930c      	str	r3, [sp, #48]	; 0x30
 80170b8:	6853      	ldr	r3, [r2, #4]
 80170ba:	930d      	str	r3, [sp, #52]	; 0x34
 80170bc:	006b      	lsls	r3, r5, #1
 80170be:	9312      	str	r3, [sp, #72]	; 0x48
 80170c0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80170c4:	930a      	str	r3, [sp, #40]	; 0x28
 80170c6:	eef0 9a60 	vmov.f32	s19, s1
 80170ca:	eeb0 9a41 	vmov.f32	s18, s2
 80170ce:	eeb0 8a62 	vmov.f32	s16, s5
 80170d2:	eef0 8a43 	vmov.f32	s17, s6
 80170d6:	eef0 ba44 	vmov.f32	s23, s8
 80170da:	eeb0 ba64 	vmov.f32	s22, s9
 80170de:	eef0 aa45 	vmov.f32	s21, s10
 80170e2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80170e4:	2b00      	cmp	r3, #0
 80170e6:	dc03      	bgt.n	80170f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80170e8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80170ea:	2b00      	cmp	r3, #0
 80170ec:	f340 83bf 	ble.w	801786e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 80170f0:	9b08      	ldr	r3, [sp, #32]
 80170f2:	2b00      	cmp	r3, #0
 80170f4:	f340 81cb 	ble.w	801748e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x416>
 80170f8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80170fa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80170fc:	1412      	asrs	r2, r2, #16
 80170fe:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017102:	d42f      	bmi.n	8017164 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8017104:	1c51      	adds	r1, r2, #1
 8017106:	428d      	cmp	r5, r1
 8017108:	dd2f      	ble.n	801716a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801710a:	2b00      	cmp	r3, #0
 801710c:	db2d      	blt.n	801716a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801710e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017110:	1c59      	adds	r1, r3, #1
 8017112:	4288      	cmp	r0, r1
 8017114:	dd29      	ble.n	801716a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8017116:	9b08      	ldr	r3, [sp, #32]
 8017118:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801711a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801711c:	3b01      	subs	r3, #1
 801711e:	fb02 1203 	mla	r2, r2, r3, r1
 8017122:	1412      	asrs	r2, r2, #16
 8017124:	d42b      	bmi.n	801717e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8017126:	3201      	adds	r2, #1
 8017128:	4295      	cmp	r5, r2
 801712a:	dd28      	ble.n	801717e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 801712c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801712e:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8017130:	fb02 1303 	mla	r3, r2, r3, r1
 8017134:	141b      	asrs	r3, r3, #16
 8017136:	d422      	bmi.n	801717e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8017138:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801713a:	3301      	adds	r3, #1
 801713c:	429a      	cmp	r2, r3
 801713e:	dd1e      	ble.n	801717e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8017140:	9b08      	ldr	r3, [sp, #32]
 8017142:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8017146:	9315      	str	r3, [sp, #84]	; 0x54
 8017148:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801714c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801714e:	2b00      	cmp	r3, #0
 8017150:	f300 8217 	bgt.w	8017582 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50a>
 8017154:	9b08      	ldr	r3, [sp, #32]
 8017156:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801715a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801715c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017160:	9309      	str	r3, [sp, #36]	; 0x24
 8017162:	e196      	b.n	8017492 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 8017164:	1c57      	adds	r7, r2, #1
 8017166:	f040 8183 	bne.w	8017470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801716a:	42aa      	cmp	r2, r5
 801716c:	f280 8180 	bge.w	8017470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8017170:	1c5e      	adds	r6, r3, #1
 8017172:	f2c0 817d 	blt.w	8017470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8017176:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017178:	4293      	cmp	r3, r2
 801717a:	f280 8179 	bge.w	8017470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801717e:	9b08      	ldr	r3, [sp, #32]
 8017180:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8017182:	9315      	str	r3, [sp, #84]	; 0x54
 8017184:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017188:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801718a:	2b00      	cmp	r3, #0
 801718c:	dde2      	ble.n	8017154 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801718e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017190:	1419      	asrs	r1, r3, #16
 8017192:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017194:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017198:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801719a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801719e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80171a0:	141b      	asrs	r3, r3, #16
 80171a2:	f100 81d3 	bmi.w	801754c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d4>
 80171a6:	1c58      	adds	r0, r3, #1
 80171a8:	4285      	cmp	r5, r0
 80171aa:	f340 81d1 	ble.w	8017550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 80171ae:	2900      	cmp	r1, #0
 80171b0:	f2c0 81ce 	blt.w	8017550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 80171b4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80171b6:	1c48      	adds	r0, r1, #1
 80171b8:	4284      	cmp	r4, r0
 80171ba:	f340 81c9 	ble.w	8017550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 80171be:	fb01 3105 	mla	r1, r1, r5, r3
 80171c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80171c4:	fa1f fe82 	uxth.w	lr, r2
 80171c8:	eb03 0a01 	add.w	sl, r3, r1
 80171cc:	ea4f 100e 	mov.w	r0, lr, lsl #4
 80171d0:	f813 9001 	ldrb.w	r9, [r3, r1]
 80171d4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80171d8:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80171dc:	b29b      	uxth	r3, r3
 80171de:	f1bc 0f00 	cmp.w	ip, #0
 80171e2:	f000 8195 	beq.w	8017510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x498>
 80171e6:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80171ea:	940e      	str	r4, [sp, #56]	; 0x38
 80171ec:	eb0a 0b05 	add.w	fp, sl, r5
 80171f0:	fa1f fa8c 	uxth.w	sl, ip
 80171f4:	fb0a fe0e 	mul.w	lr, sl, lr
 80171f8:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80171fc:	fa1f fa8a 	uxth.w	sl, sl
 8017200:	eba0 000e 	sub.w	r0, r0, lr
 8017204:	eba3 030a 	sub.w	r3, r3, sl
 8017208:	b280      	uxth	r0, r0
 801720a:	fb08 f000 	mul.w	r0, r8, r0
 801720e:	b29b      	uxth	r3, r3
 8017210:	fb09 0303 	mla	r3, r9, r3, r0
 8017214:	980e      	ldr	r0, [sp, #56]	; 0x38
 8017216:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801721a:	940f      	str	r4, [sp, #60]	; 0x3c
 801721c:	fb0a 3300 	mla	r3, sl, r0, r3
 8017220:	fb0e 3304 	mla	r3, lr, r4, r3
 8017224:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017228:	2b00      	cmp	r3, #0
 801722a:	f000 8114 	beq.w	8017456 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 801722e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8017230:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017232:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017236:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801723a:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 801723e:	f000 816c 	beq.w	801751a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8017242:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017246:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801724a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801724e:	fb09 f101 	mul.w	r1, r9, r1
 8017252:	fb0a fe0e 	mul.w	lr, sl, lr
 8017256:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801725a:	f101 0b20 	add.w	fp, r1, #32
 801725e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017262:	44ce      	add	lr, r9
 8017264:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8017268:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801726c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017270:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017274:	ea4e 0909 	orr.w	r9, lr, r9
 8017278:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801727c:	8841      	ldrh	r1, [r0, #2]
 801727e:	d019      	beq.n	80172b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8017280:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017284:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017288:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801728c:	fb0a fe0e 	mul.w	lr, sl, lr
 8017290:	fb08 f801 	mul.w	r8, r8, r1
 8017294:	f108 0b20 	add.w	fp, r8, #32
 8017298:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 801729c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80172a0:	448e      	add	lr, r1
 80172a2:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 80172a6:	0a09      	lsrs	r1, r1, #8
 80172a8:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 80172ac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80172b0:	ea4a 0101 	orr.w	r1, sl, r1
 80172b4:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80172b8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80172bc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80172c0:	ea4e 0909 	orr.w	r9, lr, r9
 80172c4:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 80172c8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80172cc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80172d0:	ea4e 0e01 	orr.w	lr, lr, r1
 80172d4:	f1bc 0f00 	cmp.w	ip, #0
 80172d8:	f000 8121 	beq.w	801751e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 80172dc:	9912      	ldr	r1, [sp, #72]	; 0x48
 80172de:	eb00 0801 	add.w	r8, r0, r1
 80172e2:	5a41      	ldrh	r1, [r0, r1]
 80172e4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80172e6:	28ff      	cmp	r0, #255	; 0xff
 80172e8:	d019      	beq.n	801731e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 80172ea:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80172ec:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80172f0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80172f4:	fb04 fb01 	mul.w	fp, r4, r1
 80172f8:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80172fc:	fb0a fa00 	mul.w	sl, sl, r0
 8017300:	f10b 0020 	add.w	r0, fp, #32
 8017304:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8017308:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801730c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017310:	4451      	add	r1, sl
 8017312:	0a00      	lsrs	r0, r0, #8
 8017314:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017318:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801731c:	4301      	orrs	r1, r0
 801731e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017320:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8017324:	2cff      	cmp	r4, #255	; 0xff
 8017326:	d01a      	beq.n	801735e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e6>
 8017328:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 801732c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017330:	fb04 fb00 	mul.w	fp, r4, r0
 8017334:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017338:	fb0a fa08 	mul.w	sl, sl, r8
 801733c:	f10b 0820 	add.w	r8, fp, #32
 8017340:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8017344:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8017348:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801734c:	4450      	add	r0, sl
 801734e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017352:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8017356:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801735a:	ea40 0008 	orr.w	r0, r0, r8
 801735e:	fb1c f802 	smulbb	r8, ip, r2
 8017362:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8017366:	f1cc 0a10 	rsb	sl, ip, #16
 801736a:	ebaa 0a02 	sub.w	sl, sl, r2
 801736e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017372:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8017376:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 801737a:	fb0e f202 	mul.w	r2, lr, r2
 801737e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017382:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8017386:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801738a:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801738e:	fb09 220a 	mla	r2, r9, sl, r2
 8017392:	ea4b 0101 	orr.w	r1, fp, r1
 8017396:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801739a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801739e:	fb0c 2201 	mla	r2, ip, r1, r2
 80173a2:	ea4e 0000 	orr.w	r0, lr, r0
 80173a6:	fb08 2800 	mla	r8, r8, r0, r2
 80173aa:	ea4f 5258 	mov.w	r2, r8, lsr #21
 80173ae:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80173b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80173b6:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80173ba:	ea42 0808 	orr.w	r8, r2, r8
 80173be:	fa1f f288 	uxth.w	r2, r8
 80173c2:	2bff      	cmp	r3, #255	; 0xff
 80173c4:	d103      	bne.n	80173ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x356>
 80173c6:	9914      	ldr	r1, [sp, #80]	; 0x50
 80173c8:	29ff      	cmp	r1, #255	; 0xff
 80173ca:	f000 80bd 	beq.w	8017548 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d0>
 80173ce:	990a      	ldr	r1, [sp, #40]	; 0x28
 80173d0:	f8b7 c000 	ldrh.w	ip, [r7]
 80173d4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80173d6:	434b      	muls	r3, r1
 80173d8:	f103 0e01 	add.w	lr, r3, #1
 80173dc:	eb0e 2323 	add.w	r3, lr, r3, asr #8
 80173e0:	ea6f 2e23 	mvn.w	lr, r3, asr #8
 80173e4:	ea4f 202c 	mov.w	r0, ip, asr #8
 80173e8:	fa5f fe8e 	uxtb.w	lr, lr
 80173ec:	1213      	asrs	r3, r2, #8
 80173ee:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80173f2:	fb10 f00e 	smulbb	r0, r0, lr
 80173f6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80173fa:	fb03 0301 	mla	r3, r3, r1, r0
 80173fe:	b298      	uxth	r0, r3
 8017400:	ea4f 03ec 	mov.w	r3, ip, asr #3
 8017404:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017408:	10d1      	asrs	r1, r2, #3
 801740a:	fa5f fc8c 	uxtb.w	ip, ip
 801740e:	00d2      	lsls	r2, r2, #3
 8017410:	fb1c fc0e 	smulbb	ip, ip, lr
 8017414:	b2d2      	uxtb	r2, r2
 8017416:	fb02 c204 	mla	r2, r2, r4, ip
 801741a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801741e:	fb13 f30e 	smulbb	r3, r3, lr
 8017422:	b292      	uxth	r2, r2
 8017424:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017428:	fb01 3104 	mla	r1, r1, r4, r3
 801742c:	f102 0c01 	add.w	ip, r2, #1
 8017430:	1c43      	adds	r3, r0, #1
 8017432:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017436:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801743a:	b289      	uxth	r1, r1
 801743c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017440:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017444:	4313      	orrs	r3, r2
 8017446:	1c4a      	adds	r2, r1, #1
 8017448:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801744c:	0949      	lsrs	r1, r1, #5
 801744e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017452:	430b      	orrs	r3, r1
 8017454:	803b      	strh	r3, [r7, #0]
 8017456:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017458:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801745a:	4413      	add	r3, r2
 801745c:	932b      	str	r3, [sp, #172]	; 0xac
 801745e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017460:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017462:	441a      	add	r2, r3
 8017464:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017466:	922c      	str	r2, [sp, #176]	; 0xb0
 8017468:	3b01      	subs	r3, #1
 801746a:	3702      	adds	r7, #2
 801746c:	9315      	str	r3, [sp, #84]	; 0x54
 801746e:	e68b      	b.n	8017188 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8017470:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017472:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017474:	4413      	add	r3, r2
 8017476:	932b      	str	r3, [sp, #172]	; 0xac
 8017478:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801747a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801747c:	441a      	add	r2, r3
 801747e:	9b08      	ldr	r3, [sp, #32]
 8017480:	922c      	str	r2, [sp, #176]	; 0xb0
 8017482:	3b01      	subs	r3, #1
 8017484:	9308      	str	r3, [sp, #32]
 8017486:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017488:	3302      	adds	r3, #2
 801748a:	9309      	str	r3, [sp, #36]	; 0x24
 801748c:	e630      	b.n	80170f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801748e:	f47f ae42 	bne.w	8017116 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8017492:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017494:	2b00      	cmp	r3, #0
 8017496:	f340 81ea 	ble.w	801786e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 801749a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801749e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80174a2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80174a6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80174a8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80174ac:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80174b0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80174b4:	eef0 6a48 	vmov.f32	s13, s16
 80174b8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80174bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80174c0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80174c4:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 80174c8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80174cc:	eef0 6a68 	vmov.f32	s13, s17
 80174d0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80174d4:	ee18 2a10 	vmov	r2, s16
 80174d8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80174dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80174e0:	ee18 2a90 	vmov	r2, s17
 80174e4:	932d      	str	r3, [sp, #180]	; 0xb4
 80174e6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80174e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80174ec:	932e      	str	r3, [sp, #184]	; 0xb8
 80174ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80174f0:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80174f2:	3b01      	subs	r3, #1
 80174f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80174f8:	9313      	str	r3, [sp, #76]	; 0x4c
 80174fa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80174fc:	edcd 6a2c 	vstr	s13, [sp, #176]	; 0xb0
 8017500:	bf08      	it	eq
 8017502:	4613      	moveq	r3, r2
 8017504:	9308      	str	r3, [sp, #32]
 8017506:	eef0 8a67 	vmov.f32	s17, s15
 801750a:	eeb0 8a47 	vmov.f32	s16, s14
 801750e:	e5e8      	b.n	80170e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8017510:	fb08 f000 	mul.w	r0, r8, r0
 8017514:	fb09 0303 	mla	r3, r9, r3, r0
 8017518:	e684      	b.n	8017224 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ac>
 801751a:	4689      	mov	r9, r1
 801751c:	e6ac      	b.n	8017278 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x200>
 801751e:	f1c2 0010 	rsb	r0, r2, #16
 8017522:	fb0e f202 	mul.w	r2, lr, r2
 8017526:	fb09 2900 	mla	r9, r9, r0, r2
 801752a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801752e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017532:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017536:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801753a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801753e:	ea42 0909 	orr.w	r9, r2, r9
 8017542:	fa1f f289 	uxth.w	r2, r9
 8017546:	e73c      	b.n	80173c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8017548:	803a      	strh	r2, [r7, #0]
 801754a:	e784      	b.n	8017456 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 801754c:	1c5c      	adds	r4, r3, #1
 801754e:	d182      	bne.n	8017456 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017550:	429d      	cmp	r5, r3
 8017552:	dd80      	ble.n	8017456 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017554:	1c48      	adds	r0, r1, #1
 8017556:	f6ff af7e 	blt.w	8017456 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 801755a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801755c:	4288      	cmp	r0, r1
 801755e:	f77f af7a 	ble.w	8017456 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017562:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017564:	9302      	str	r3, [sp, #8]
 8017566:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017568:	e9cd 1203 	strd	r1, r2, [sp, #12]
 801756c:	e9cd c005 	strd	ip, r0, [sp, #20]
 8017570:	e9cd 5300 	strd	r5, r3, [sp]
 8017574:	4639      	mov	r1, r7
 8017576:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 801757a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801757c:	f7ff fbcc 	bl	8016d18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8017580:	e769      	b.n	8017456 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017582:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017584:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017588:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801758a:	141f      	asrs	r7, r3, #16
 801758c:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8017590:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017592:	141b      	asrs	r3, r3, #16
 8017594:	fb05 3707 	mla	r7, r5, r7, r3
 8017598:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801759a:	fa1f fc82 	uxth.w	ip, r2
 801759e:	eb03 0a07 	add.w	sl, r3, r7
 80175a2:	ea4f 110c 	mov.w	r1, ip, lsl #4
 80175a6:	f813 9007 	ldrb.w	r9, [r3, r7]
 80175aa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80175ae:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 80175b2:	b29b      	uxth	r3, r3
 80175b4:	2800      	cmp	r0, #0
 80175b6:	f000 813f 	beq.w	8017838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c0>
 80175ba:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80175be:	9410      	str	r4, [sp, #64]	; 0x40
 80175c0:	eb0a 0b05 	add.w	fp, sl, r5
 80175c4:	fa1f fa80 	uxth.w	sl, r0
 80175c8:	fb0a fc0c 	mul.w	ip, sl, ip
 80175cc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80175d0:	fa1f fa8a 	uxth.w	sl, sl
 80175d4:	eba1 010c 	sub.w	r1, r1, ip
 80175d8:	eba3 030a 	sub.w	r3, r3, sl
 80175dc:	b289      	uxth	r1, r1
 80175de:	fb08 f101 	mul.w	r1, r8, r1
 80175e2:	b29b      	uxth	r3, r3
 80175e4:	fb09 1303 	mla	r3, r9, r3, r1
 80175e8:	9910      	ldr	r1, [sp, #64]	; 0x40
 80175ea:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80175ee:	9411      	str	r4, [sp, #68]	; 0x44
 80175f0:	fb0a 3301 	mla	r3, sl, r1, r3
 80175f4:	fb0c 3304 	mla	r3, ip, r4, r3
 80175f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80175fc:	2b00      	cmp	r3, #0
 80175fe:	f000 810d 	beq.w	801781c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8017602:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017604:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017606:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801760a:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 801760e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8017612:	f000 8116 	beq.w	8017842 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ca>
 8017616:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801761a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801761e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017622:	fb09 f707 	mul.w	r7, r9, r7
 8017626:	fb0a fc0c 	mul.w	ip, sl, ip
 801762a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801762e:	f107 0b20 	add.w	fp, r7, #32
 8017632:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017636:	44cc      	add	ip, r9
 8017638:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801763c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017640:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017644:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017648:	ea4c 0909 	orr.w	r9, ip, r9
 801764c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017650:	884f      	ldrh	r7, [r1, #2]
 8017652:	d019      	beq.n	8017688 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x610>
 8017654:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017658:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801765c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017660:	fb08 f807 	mul.w	r8, r8, r7
 8017664:	fb0a fc0c 	mul.w	ip, sl, ip
 8017668:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801766c:	f108 0b20 	add.w	fp, r8, #32
 8017670:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017674:	44bc      	add	ip, r7
 8017676:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801767a:	0a3f      	lsrs	r7, r7, #8
 801767c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017680:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017684:	ea4c 0707 	orr.w	r7, ip, r7
 8017688:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801768c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017690:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017694:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017698:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801769c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80176a0:	ea4c 0909 	orr.w	r9, ip, r9
 80176a4:	ea4a 0707 	orr.w	r7, sl, r7
 80176a8:	2800      	cmp	r0, #0
 80176aa:	f000 80cc 	beq.w	8017846 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ce>
 80176ae:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80176b0:	eb01 0c04 	add.w	ip, r1, r4
 80176b4:	f831 8004 	ldrh.w	r8, [r1, r4]
 80176b8:	9910      	ldr	r1, [sp, #64]	; 0x40
 80176ba:	29ff      	cmp	r1, #255	; 0xff
 80176bc:	d01a      	beq.n	80176f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x67c>
 80176be:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80176c0:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 80176c4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80176c8:	fb04 fb08 	mul.w	fp, r4, r8
 80176cc:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80176d0:	fb0a fa01 	mul.w	sl, sl, r1
 80176d4:	f10b 0120 	add.w	r1, fp, #32
 80176d8:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 80176dc:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 80176e0:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80176e4:	44d0      	add	r8, sl
 80176e6:	0a09      	lsrs	r1, r1, #8
 80176e8:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 80176ec:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80176f0:	ea48 0801 	orr.w	r8, r8, r1
 80176f4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80176f6:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 80176fa:	2cff      	cmp	r4, #255	; 0xff
 80176fc:	d01a      	beq.n	8017734 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6bc>
 80176fe:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8017702:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017706:	fb04 fb01 	mul.w	fp, r4, r1
 801770a:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801770e:	fb0a fa0c 	mul.w	sl, sl, ip
 8017712:	f10b 0c20 	add.w	ip, fp, #32
 8017716:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 801771a:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 801771e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017722:	4451      	add	r1, sl
 8017724:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017728:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801772c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017730:	ea41 010c 	orr.w	r1, r1, ip
 8017734:	fb10 fc02 	smulbb	ip, r0, r2
 8017738:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801773c:	f1c0 0a10 	rsb	sl, r0, #16
 8017740:	ebaa 0a02 	sub.w	sl, sl, r2
 8017744:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8017748:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801774c:	437a      	muls	r2, r7
 801774e:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8017752:	040f      	lsls	r7, r1, #16
 8017754:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017758:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801775c:	fb09 220a 	mla	r2, r9, sl, r2
 8017760:	ea4b 0808 	orr.w	r8, fp, r8
 8017764:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8017768:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801776c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017770:	fb00 2208 	mla	r2, r0, r8, r2
 8017774:	4339      	orrs	r1, r7
 8017776:	fb0c 2201 	mla	r2, ip, r1, r2
 801777a:	ea4f 5952 	mov.w	r9, r2, lsr #21
 801777e:	0952      	lsrs	r2, r2, #5
 8017780:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017784:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017788:	ea49 0202 	orr.w	r2, r9, r2
 801778c:	2bff      	cmp	r3, #255	; 0xff
 801778e:	b292      	uxth	r2, r2
 8017790:	d102      	bne.n	8017798 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x720>
 8017792:	9914      	ldr	r1, [sp, #80]	; 0x50
 8017794:	29ff      	cmp	r1, #255	; 0xff
 8017796:	d067      	beq.n	8017868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f0>
 8017798:	990a      	ldr	r1, [sp, #40]	; 0x28
 801779a:	f8be 0000 	ldrh.w	r0, [lr]
 801779e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80177a0:	434b      	muls	r3, r1
 80177a2:	1c59      	adds	r1, r3, #1
 80177a4:	eb01 2323 	add.w	r3, r1, r3, asr #8
 80177a8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80177ac:	1201      	asrs	r1, r0, #8
 80177ae:	b2db      	uxtb	r3, r3
 80177b0:	1217      	asrs	r7, r2, #8
 80177b2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80177b6:	fb11 f103 	smulbb	r1, r1, r3
 80177ba:	ea4f 0ce0 	mov.w	ip, r0, asr #3
 80177be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80177c2:	00c0      	lsls	r0, r0, #3
 80177c4:	fb07 1704 	mla	r7, r7, r4, r1
 80177c8:	b2c0      	uxtb	r0, r0
 80177ca:	10d1      	asrs	r1, r2, #3
 80177cc:	00d2      	lsls	r2, r2, #3
 80177ce:	fb10 f003 	smulbb	r0, r0, r3
 80177d2:	b2d2      	uxtb	r2, r2
 80177d4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80177d8:	fb02 0204 	mla	r2, r2, r4, r0
 80177dc:	fb1c fc03 	smulbb	ip, ip, r3
 80177e0:	b2bf      	uxth	r7, r7
 80177e2:	b292      	uxth	r2, r2
 80177e4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80177e8:	fb01 c104 	mla	r1, r1, r4, ip
 80177ec:	1c7b      	adds	r3, r7, #1
 80177ee:	f102 0c01 	add.w	ip, r2, #1
 80177f2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80177f6:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 80177fa:	b289      	uxth	r1, r1
 80177fc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017800:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017804:	ea47 070c 	orr.w	r7, r7, ip
 8017808:	f101 0c01 	add.w	ip, r1, #1
 801780c:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8017810:	0949      	lsrs	r1, r1, #5
 8017812:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017816:	430f      	orrs	r7, r1
 8017818:	f8ae 7000 	strh.w	r7, [lr]
 801781c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801781e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017820:	4413      	add	r3, r2
 8017822:	932b      	str	r3, [sp, #172]	; 0xac
 8017824:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017826:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017828:	441a      	add	r2, r3
 801782a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801782c:	922c      	str	r2, [sp, #176]	; 0xb0
 801782e:	3b01      	subs	r3, #1
 8017830:	f10e 0e02 	add.w	lr, lr, #2
 8017834:	9315      	str	r3, [sp, #84]	; 0x54
 8017836:	e489      	b.n	801714c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8017838:	fb08 f101 	mul.w	r1, r8, r1
 801783c:	fb09 1303 	mla	r3, r9, r3, r1
 8017840:	e6da      	b.n	80175f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x580>
 8017842:	46b9      	mov	r9, r7
 8017844:	e702      	b.n	801764c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d4>
 8017846:	f1c2 0110 	rsb	r1, r2, #16
 801784a:	437a      	muls	r2, r7
 801784c:	fb09 2901 	mla	r9, r9, r1, r2
 8017850:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017854:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017858:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801785c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017860:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017864:	4302      	orrs	r2, r0
 8017866:	e791      	b.n	801778c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8017868:	f8ae 2000 	strh.w	r2, [lr]
 801786c:	e7d6      	b.n	801781c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 801786e:	b019      	add	sp, #100	; 0x64
 8017870:	ecbd 8b08 	vpop	{d8-d11}
 8017874:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017878 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8017878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801787c:	b087      	sub	sp, #28
 801787e:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8017882:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8017886:	9105      	str	r1, [sp, #20]
 8017888:	fb00 e604 	mla	r6, r0, r4, lr
 801788c:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8017890:	9102      	str	r1, [sp, #8]
 8017892:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 8017896:	9103      	str	r1, [sp, #12]
 8017898:	9905      	ldr	r1, [sp, #20]
 801789a:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 801789e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80178a2:	8809      	ldrh	r1, [r1, #0]
 80178a4:	2800      	cmp	r0, #0
 80178a6:	eb02 0a06 	add.w	sl, r2, r6
 80178aa:	f2c0 80ca 	blt.w	8017a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 80178ae:	4287      	cmp	r7, r0
 80178b0:	f340 80c7 	ble.w	8017a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 80178b4:	f1be 0f00 	cmp.w	lr, #0
 80178b8:	f2c0 80bf 	blt.w	8017a3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 80178bc:	4574      	cmp	r4, lr
 80178be:	f340 80bc 	ble.w	8017a3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 80178c2:	f812 c006 	ldrb.w	ip, [r2, r6]
 80178c6:	f833 9016 	ldrh.w	r9, [r3, r6, lsl #1]
 80178ca:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80178ce:	d01c      	beq.n	801790a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x92>
 80178d0:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 80178d4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80178d8:	4372      	muls	r2, r6
 80178da:	f64f 081f 	movw	r8, #63519	; 0xf81f
 80178de:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 80178e2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80178e6:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80178ea:	fb0c f609 	mul.w	r6, ip, r9
 80178ee:	eb03 0902 	add.w	r9, r3, r2
 80178f2:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 80178f6:	f106 0820 	add.w	r8, r6, #32
 80178fa:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 80178fe:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017902:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017906:	ea49 0908 	orr.w	r9, r9, r8
 801790a:	fa1f f989 	uxth.w	r9, r9
 801790e:	f11e 0301 	adds.w	r3, lr, #1
 8017912:	f100 809b 	bmi.w	8017a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8017916:	429c      	cmp	r4, r3
 8017918:	f340 8098 	ble.w	8017a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 801791c:	2d00      	cmp	r5, #0
 801791e:	f000 8095 	beq.w	8017a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8017922:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8017926:	9b03      	ldr	r3, [sp, #12]
 8017928:	2eff      	cmp	r6, #255	; 0xff
 801792a:	885b      	ldrh	r3, [r3, #2]
 801792c:	d01b      	beq.n	8017966 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xee>
 801792e:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8017932:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8017936:	fb08 f202 	mul.w	r2, r8, r2
 801793a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801793e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017942:	fb06 f803 	mul.w	r8, r6, r3
 8017946:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801794a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801794e:	441a      	add	r2, r3
 8017950:	f108 0320 	add.w	r3, r8, #32
 8017954:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8017958:	0a1b      	lsrs	r3, r3, #8
 801795a:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801795e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017962:	ea4b 0303 	orr.w	r3, fp, r3
 8017966:	b29b      	uxth	r3, r3
 8017968:	9301      	str	r3, [sp, #4]
 801796a:	3001      	adds	r0, #1
 801796c:	d474      	bmi.n	8017a58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 801796e:	4287      	cmp	r7, r0
 8017970:	dd72      	ble.n	8017a58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8017972:	9a02      	ldr	r2, [sp, #8]
 8017974:	2a00      	cmp	r2, #0
 8017976:	f000 8111 	beq.w	8017b9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>
 801797a:	f1be 0f00 	cmp.w	lr, #0
 801797e:	db68      	blt.n	8017a52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8017980:	4574      	cmp	r4, lr
 8017982:	dd66      	ble.n	8017a52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8017984:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8017988:	9a03      	ldr	r2, [sp, #12]
 801798a:	2fff      	cmp	r7, #255	; 0xff
 801798c:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8017990:	d01c      	beq.n	80179cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x154>
 8017992:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8017996:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801799a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801799e:	fb07 fb00 	mul.w	fp, r7, r0
 80179a2:	fb08 f802 	mul.w	r8, r8, r2
 80179a6:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80179aa:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 80179ae:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80179b2:	4490      	add	r8, r2
 80179b4:	f10b 0220 	add.w	r2, fp, #32
 80179b8:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 80179bc:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80179c0:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 80179c4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80179c8:	ea40 000b 	orr.w	r0, r0, fp
 80179cc:	b280      	uxth	r0, r0
 80179ce:	f11e 0e01 	adds.w	lr, lr, #1
 80179d2:	d446      	bmi.n	8017a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 80179d4:	4574      	cmp	r4, lr
 80179d6:	dd44      	ble.n	8017a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 80179d8:	2d00      	cmp	r5, #0
 80179da:	d045      	beq.n	8017a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f0>
 80179dc:	1c62      	adds	r2, r4, #1
 80179de:	9b03      	ldr	r3, [sp, #12]
 80179e0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80179e4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80179e8:	2cff      	cmp	r4, #255	; 0xff
 80179ea:	d01c      	beq.n	8017a26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ae>
 80179ec:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 80179f0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80179f4:	fb08 fe0e 	mul.w	lr, r8, lr
 80179f8:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 80179fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017a00:	fb04 f802 	mul.w	r8, r4, r2
 8017a04:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8017a08:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017a0c:	4472      	add	r2, lr
 8017a0e:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8017a12:	f108 0a20 	add.w	sl, r8, #32
 8017a16:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 8017a1a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017a1e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017a22:	ea42 020a 	orr.w	r2, r2, sl
 8017a26:	b292      	uxth	r2, r2
 8017a28:	2d0f      	cmp	r5, #15
 8017a2a:	d91f      	bls.n	8017a6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f4>
 8017a2c:	4b5f      	ldr	r3, [pc, #380]	; (8017bac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x334>)
 8017a2e:	4a60      	ldr	r2, [pc, #384]	; (8017bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x338>)
 8017a30:	4860      	ldr	r0, [pc, #384]	; (8017bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x33c>)
 8017a32:	f240 3173 	movw	r1, #883	; 0x373
 8017a36:	f003 fc1b 	bl	801b270 <__assert_func>
 8017a3a:	4689      	mov	r9, r1
 8017a3c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8017a40:	e765      	b.n	801790e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x96>
 8017a42:	26ff      	movs	r6, #255	; 0xff
 8017a44:	9101      	str	r1, [sp, #4]
 8017a46:	4689      	mov	r9, r1
 8017a48:	46b4      	mov	ip, r6
 8017a4a:	e78e      	b.n	801796a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8017a4c:	9101      	str	r1, [sp, #4]
 8017a4e:	26ff      	movs	r6, #255	; 0xff
 8017a50:	e78b      	b.n	801796a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8017a52:	4608      	mov	r0, r1
 8017a54:	27ff      	movs	r7, #255	; 0xff
 8017a56:	e7ba      	b.n	80179ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x156>
 8017a58:	24ff      	movs	r4, #255	; 0xff
 8017a5a:	460a      	mov	r2, r1
 8017a5c:	4608      	mov	r0, r1
 8017a5e:	4627      	mov	r7, r4
 8017a60:	e7e2      	b.n	8017a28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8017a62:	460a      	mov	r2, r1
 8017a64:	24ff      	movs	r4, #255	; 0xff
 8017a66:	e7df      	b.n	8017a28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8017a68:	460a      	mov	r2, r1
 8017a6a:	24ff      	movs	r4, #255	; 0xff
 8017a6c:	9b02      	ldr	r3, [sp, #8]
 8017a6e:	2b0f      	cmp	r3, #15
 8017a70:	d8dc      	bhi.n	8017a2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8017a72:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8017a76:	fa1f f885 	uxth.w	r8, r5
 8017a7a:	fb08 fa0e 	mul.w	sl, r8, lr
 8017a7e:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8017a82:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8017a86:	9303      	str	r3, [sp, #12]
 8017a88:	fa1f f38e 	uxth.w	r3, lr
 8017a8c:	9304      	str	r3, [sp, #16]
 8017a8e:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8017a92:	9b02      	ldr	r3, [sp, #8]
 8017a94:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017a98:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8017a9c:	fb15 fe03 	smulbb	lr, r5, r3
 8017aa0:	ea48 0809 	orr.w	r8, r8, r9
 8017aa4:	f1c3 0910 	rsb	r9, r3, #16
 8017aa8:	9b01      	ldr	r3, [sp, #4]
 8017aaa:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8017aae:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8017ab2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017ab6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017aba:	eba9 0905 	sub.w	r9, r9, r5
 8017abe:	ea4b 0303 	orr.w	r3, fp, r3
 8017ac2:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8017ac6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8017aca:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 8017ace:	436b      	muls	r3, r5
 8017ad0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017ad4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017ad8:	ea4b 0202 	orr.w	r2, fp, r2
 8017adc:	fb09 3308 	mla	r3, r9, r8, r3
 8017ae0:	fb0e 3302 	mla	r3, lr, r2, r3
 8017ae4:	0402      	lsls	r2, r0, #16
 8017ae6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017aea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017aee:	4310      	orrs	r0, r2
 8017af0:	9a02      	ldr	r2, [sp, #8]
 8017af2:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 8017af6:	9a03      	ldr	r2, [sp, #12]
 8017af8:	fb0e 3e00 	mla	lr, lr, r0, r3
 8017afc:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8017b00:	9a04      	ldr	r2, [sp, #16]
 8017b02:	1a80      	subs	r0, r0, r2
 8017b04:	9a03      	ldr	r2, [sp, #12]
 8017b06:	eba2 020a 	sub.w	r2, r2, sl
 8017b0a:	b292      	uxth	r2, r2
 8017b0c:	b280      	uxth	r0, r0
 8017b0e:	4356      	muls	r6, r2
 8017b10:	9a04      	ldr	r2, [sp, #16]
 8017b12:	fb0c 6600 	mla	r6, ip, r0, r6
 8017b16:	fb02 6707 	mla	r7, r2, r7, r6
 8017b1a:	fb0a 7404 	mla	r4, sl, r4, r7
 8017b1e:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8017b22:	1208      	asrs	r0, r1, #8
 8017b24:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017b28:	ea6f 2424 	mvn.w	r4, r4, asr #8
 8017b2c:	b2e4      	uxtb	r4, r4
 8017b2e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017b32:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017b36:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017b3a:	4360      	muls	r0, r4
 8017b3c:	ea43 0e0e 	orr.w	lr, r3, lr
 8017b40:	fa1f f38e 	uxth.w	r3, lr
 8017b44:	1c42      	adds	r2, r0, #1
 8017b46:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8017b4a:	1218      	asrs	r0, r3, #8
 8017b4c:	10cd      	asrs	r5, r1, #3
 8017b4e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017b52:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017b56:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017b5a:	4a17      	ldr	r2, [pc, #92]	; (8017bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x340>)
 8017b5c:	4365      	muls	r5, r4
 8017b5e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8017b62:	1c6a      	adds	r2, r5, #1
 8017b64:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017b68:	00c9      	lsls	r1, r1, #3
 8017b6a:	10da      	asrs	r2, r3, #3
 8017b6c:	b2c9      	uxtb	r1, r1
 8017b6e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017b72:	434c      	muls	r4, r1
 8017b74:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8017b78:	1c61      	adds	r1, r4, #1
 8017b7a:	00d2      	lsls	r2, r2, #3
 8017b7c:	00db      	lsls	r3, r3, #3
 8017b7e:	eb01 2414 	add.w	r4, r1, r4, lsr #8
 8017b82:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017b86:	b2db      	uxtb	r3, r3
 8017b88:	4302      	orrs	r2, r0
 8017b8a:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8017b8e:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 8017b92:	9a05      	ldr	r2, [sp, #20]
 8017b94:	8013      	strh	r3, [r2, #0]
 8017b96:	b007      	add	sp, #28
 8017b98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017b9c:	2d0f      	cmp	r5, #15
 8017b9e:	f63f af45 	bhi.w	8017a2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8017ba2:	24ff      	movs	r4, #255	; 0xff
 8017ba4:	460a      	mov	r2, r1
 8017ba6:	4608      	mov	r0, r1
 8017ba8:	4627      	mov	r7, r4
 8017baa:	e762      	b.n	8017a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1fa>
 8017bac:	0801eea7 	.word	0x0801eea7
 8017bb0:	0801f405 	.word	0x0801f405
 8017bb4:	0801ef2f 	.word	0x0801ef2f
 8017bb8:	fffff800 	.word	0xfffff800

08017bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bc0:	ed2d 8b08 	vpush	{d8-d11}
 8017bc4:	b095      	sub	sp, #84	; 0x54
 8017bc6:	eeb0 aa40 	vmov.f32	s20, s0
 8017bca:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8017bcc:	9306      	str	r3, [sp, #24]
 8017bce:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8017bd2:	9110      	str	r1, [sp, #64]	; 0x40
 8017bd4:	9308      	str	r3, [sp, #32]
 8017bd6:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8017bda:	9013      	str	r0, [sp, #76]	; 0x4c
 8017bdc:	6870      	ldr	r0, [r6, #4]
 8017bde:	9212      	str	r2, [sp, #72]	; 0x48
 8017be0:	fb00 1303 	mla	r3, r0, r3, r1
 8017be4:	6831      	ldr	r1, [r6, #0]
 8017be6:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8017be8:	f9bd 50b8 	ldrsh.w	r5, [sp, #184]	; 0xb8
 8017bec:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8017bf0:	9307      	str	r3, [sp, #28]
 8017bf2:	6813      	ldr	r3, [r2, #0]
 8017bf4:	9309      	str	r3, [sp, #36]	; 0x24
 8017bf6:	6853      	ldr	r3, [r2, #4]
 8017bf8:	930a      	str	r3, [sp, #40]	; 0x28
 8017bfa:	006b      	lsls	r3, r5, #1
 8017bfc:	eef0 9a60 	vmov.f32	s19, s1
 8017c00:	eeb0 9a41 	vmov.f32	s18, s2
 8017c04:	eeb0 8a62 	vmov.f32	s16, s5
 8017c08:	eef0 8a43 	vmov.f32	s17, s6
 8017c0c:	eef0 ba44 	vmov.f32	s23, s8
 8017c10:	eeb0 ba64 	vmov.f32	s22, s9
 8017c14:	eef0 aa45 	vmov.f32	s21, s10
 8017c18:	930f      	str	r3, [sp, #60]	; 0x3c
 8017c1a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017c1c:	2b00      	cmp	r3, #0
 8017c1e:	dc03      	bgt.n	8017c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8017c20:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017c22:	2b00      	cmp	r3, #0
 8017c24:	f340 83a3 	ble.w	801836e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8017c28:	9b06      	ldr	r3, [sp, #24]
 8017c2a:	2b00      	cmp	r3, #0
 8017c2c:	f340 81bc 	ble.w	8017fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ec>
 8017c30:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8017c32:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017c34:	1412      	asrs	r2, r2, #16
 8017c36:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017c3a:	d42f      	bmi.n	8017c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8017c3c:	1c51      	adds	r1, r2, #1
 8017c3e:	428d      	cmp	r5, r1
 8017c40:	dd2f      	ble.n	8017ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017c42:	2b00      	cmp	r3, #0
 8017c44:	db2d      	blt.n	8017ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017c46:	9808      	ldr	r0, [sp, #32]
 8017c48:	1c59      	adds	r1, r3, #1
 8017c4a:	4288      	cmp	r0, r1
 8017c4c:	dd29      	ble.n	8017ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017c4e:	9b06      	ldr	r3, [sp, #24]
 8017c50:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017c52:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8017c54:	3b01      	subs	r3, #1
 8017c56:	fb02 1203 	mla	r2, r2, r3, r1
 8017c5a:	1412      	asrs	r2, r2, #16
 8017c5c:	d42b      	bmi.n	8017cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017c5e:	3201      	adds	r2, #1
 8017c60:	4295      	cmp	r5, r2
 8017c62:	dd28      	ble.n	8017cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017c64:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017c66:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8017c68:	fb02 1303 	mla	r3, r2, r3, r1
 8017c6c:	141b      	asrs	r3, r3, #16
 8017c6e:	d422      	bmi.n	8017cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017c70:	9a08      	ldr	r2, [sp, #32]
 8017c72:	3301      	adds	r3, #1
 8017c74:	429a      	cmp	r2, r3
 8017c76:	dd1e      	ble.n	8017cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017c78:	9b06      	ldr	r3, [sp, #24]
 8017c7a:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8017c7e:	9311      	str	r3, [sp, #68]	; 0x44
 8017c80:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017c84:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017c86:	2b00      	cmp	r3, #0
 8017c88:	f300 8208 	bgt.w	801809c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e0>
 8017c8c:	9b06      	ldr	r3, [sp, #24]
 8017c8e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017c92:	9b07      	ldr	r3, [sp, #28]
 8017c94:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017c98:	9307      	str	r3, [sp, #28]
 8017c9a:	e187      	b.n	8017fac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f0>
 8017c9c:	1c57      	adds	r7, r2, #1
 8017c9e:	f040 8174 	bne.w	8017f8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8017ca2:	42aa      	cmp	r2, r5
 8017ca4:	f280 8171 	bge.w	8017f8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8017ca8:	1c5e      	adds	r6, r3, #1
 8017caa:	f2c0 816e 	blt.w	8017f8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8017cae:	9a08      	ldr	r2, [sp, #32]
 8017cb0:	4293      	cmp	r3, r2
 8017cb2:	f280 816a 	bge.w	8017f8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8017cb6:	9b06      	ldr	r3, [sp, #24]
 8017cb8:	9f07      	ldr	r7, [sp, #28]
 8017cba:	9311      	str	r3, [sp, #68]	; 0x44
 8017cbc:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017cc0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017cc2:	2b00      	cmp	r3, #0
 8017cc4:	dde2      	ble.n	8017c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8017cc6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017cc8:	1419      	asrs	r1, r3, #16
 8017cca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017ccc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017cd0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017cd2:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017cd6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017cd8:	141b      	asrs	r3, r3, #16
 8017cda:	f100 81c4 	bmi.w	8018066 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4aa>
 8017cde:	1c58      	adds	r0, r3, #1
 8017ce0:	4285      	cmp	r5, r0
 8017ce2:	f340 81c2 	ble.w	801806a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8017ce6:	2900      	cmp	r1, #0
 8017ce8:	f2c0 81bf 	blt.w	801806a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8017cec:	9c08      	ldr	r4, [sp, #32]
 8017cee:	1c48      	adds	r0, r1, #1
 8017cf0:	4284      	cmp	r4, r0
 8017cf2:	f340 81ba 	ble.w	801806a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8017cf6:	fb01 3105 	mla	r1, r1, r5, r3
 8017cfa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017cfc:	fa1f fe82 	uxth.w	lr, r2
 8017d00:	eb03 0a01 	add.w	sl, r3, r1
 8017d04:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8017d08:	f813 9001 	ldrb.w	r9, [r3, r1]
 8017d0c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017d10:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017d14:	b29b      	uxth	r3, r3
 8017d16:	f1bc 0f00 	cmp.w	ip, #0
 8017d1a:	f000 8186 	beq.w	801802a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46e>
 8017d1e:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8017d22:	940b      	str	r4, [sp, #44]	; 0x2c
 8017d24:	eb0a 0b05 	add.w	fp, sl, r5
 8017d28:	fa1f fa8c 	uxth.w	sl, ip
 8017d2c:	fb0a fe0e 	mul.w	lr, sl, lr
 8017d30:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017d34:	fa1f fa8a 	uxth.w	sl, sl
 8017d38:	eba0 000e 	sub.w	r0, r0, lr
 8017d3c:	eba3 030a 	sub.w	r3, r3, sl
 8017d40:	b280      	uxth	r0, r0
 8017d42:	fb08 f000 	mul.w	r0, r8, r0
 8017d46:	b29b      	uxth	r3, r3
 8017d48:	fb09 0303 	mla	r3, r9, r3, r0
 8017d4c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017d4e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017d52:	940c      	str	r4, [sp, #48]	; 0x30
 8017d54:	fb0a 3300 	mla	r3, sl, r0, r3
 8017d58:	fb0e 3304 	mla	r3, lr, r4, r3
 8017d5c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017d60:	2b00      	cmp	r3, #0
 8017d62:	f000 8105 	beq.w	8017f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017d66:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017d68:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017d6a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017d6e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017d72:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8017d76:	f000 815d 	beq.w	8018034 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>
 8017d7a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017d7e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017d82:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017d86:	fb09 f101 	mul.w	r1, r9, r1
 8017d8a:	fb0a fe0e 	mul.w	lr, sl, lr
 8017d8e:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8017d92:	f101 0b20 	add.w	fp, r1, #32
 8017d96:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017d9a:	44ce      	add	lr, r9
 8017d9c:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8017da0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017da4:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017da8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017dac:	ea4e 0909 	orr.w	r9, lr, r9
 8017db0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017db4:	8841      	ldrh	r1, [r0, #2]
 8017db6:	d019      	beq.n	8017dec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 8017db8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017dbc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017dc0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017dc4:	fb0a fe0e 	mul.w	lr, sl, lr
 8017dc8:	fb08 f801 	mul.w	r8, r8, r1
 8017dcc:	f108 0b20 	add.w	fp, r8, #32
 8017dd0:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8017dd4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017dd8:	448e      	add	lr, r1
 8017dda:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8017dde:	0a09      	lsrs	r1, r1, #8
 8017de0:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8017de4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017de8:	ea4a 0101 	orr.w	r1, sl, r1
 8017dec:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8017df0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017df4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017df8:	ea4e 0909 	orr.w	r9, lr, r9
 8017dfc:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8017e00:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017e04:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017e08:	ea4e 0e01 	orr.w	lr, lr, r1
 8017e0c:	f1bc 0f00 	cmp.w	ip, #0
 8017e10:	f000 8112 	beq.w	8018038 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8017e14:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8017e16:	eb00 0801 	add.w	r8, r0, r1
 8017e1a:	5a41      	ldrh	r1, [r0, r1]
 8017e1c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017e1e:	28ff      	cmp	r0, #255	; 0xff
 8017e20:	d019      	beq.n	8017e56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29a>
 8017e22:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017e24:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8017e28:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017e2c:	fb04 fb01 	mul.w	fp, r4, r1
 8017e30:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017e34:	fb0a fa00 	mul.w	sl, sl, r0
 8017e38:	f10b 0020 	add.w	r0, fp, #32
 8017e3c:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8017e40:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8017e44:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017e48:	4451      	add	r1, sl
 8017e4a:	0a00      	lsrs	r0, r0, #8
 8017e4c:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017e50:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017e54:	4301      	orrs	r1, r0
 8017e56:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017e58:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8017e5c:	2cff      	cmp	r4, #255	; 0xff
 8017e5e:	d01a      	beq.n	8017e96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2da>
 8017e60:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8017e64:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017e68:	fb04 fb00 	mul.w	fp, r4, r0
 8017e6c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017e70:	fb0a fa08 	mul.w	sl, sl, r8
 8017e74:	f10b 0820 	add.w	r8, fp, #32
 8017e78:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8017e7c:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8017e80:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017e84:	4450      	add	r0, sl
 8017e86:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017e8a:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8017e8e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017e92:	ea40 0008 	orr.w	r0, r0, r8
 8017e96:	fb1c f802 	smulbb	r8, ip, r2
 8017e9a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8017e9e:	f1cc 0a10 	rsb	sl, ip, #16
 8017ea2:	ebaa 0a02 	sub.w	sl, sl, r2
 8017ea6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017eaa:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8017eae:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8017eb2:	fb0e f202 	mul.w	r2, lr, r2
 8017eb6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017eba:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8017ebe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017ec2:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8017ec6:	fb09 220a 	mla	r2, r9, sl, r2
 8017eca:	ea4b 0101 	orr.w	r1, fp, r1
 8017ece:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017ed2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017ed6:	fb0c 2201 	mla	r2, ip, r1, r2
 8017eda:	ea4e 0000 	orr.w	r0, lr, r0
 8017ede:	fb08 2800 	mla	r8, r8, r0, r2
 8017ee2:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8017ee6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017eea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017eee:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8017ef2:	ea42 0808 	orr.w	r8, r2, r8
 8017ef6:	fa1f f288 	uxth.w	r2, r8
 8017efa:	2bff      	cmp	r3, #255	; 0xff
 8017efc:	f000 80b1 	beq.w	8018062 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8017f00:	f8b7 8000 	ldrh.w	r8, [r7]
 8017f04:	43db      	mvns	r3, r3
 8017f06:	ea4f 2028 	mov.w	r0, r8, asr #8
 8017f0a:	fa5f fe83 	uxtb.w	lr, r3
 8017f0e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017f12:	fb00 f00e 	mul.w	r0, r0, lr
 8017f16:	1c41      	adds	r1, r0, #1
 8017f18:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017f1c:	1210      	asrs	r0, r2, #8
 8017f1e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8017f22:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017f26:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8017f2a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017f2e:	495a      	ldr	r1, [pc, #360]	; (8018098 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4dc>)
 8017f30:	fb0c fc0e 	mul.w	ip, ip, lr
 8017f34:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8017f38:	f10c 0101 	add.w	r1, ip, #1
 8017f3c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8017f40:	10d1      	asrs	r1, r2, #3
 8017f42:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017f46:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8017f4a:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8017f4e:	b2db      	uxtb	r3, r3
 8017f50:	00c9      	lsls	r1, r1, #3
 8017f52:	fb03 f30e 	mul.w	r3, r3, lr
 8017f56:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017f5a:	4301      	orrs	r1, r0
 8017f5c:	1c58      	adds	r0, r3, #1
 8017f5e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8017f62:	00d3      	lsls	r3, r2, #3
 8017f64:	b2db      	uxtb	r3, r3
 8017f66:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017f6a:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8017f6e:	803b      	strh	r3, [r7, #0]
 8017f70:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017f72:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017f74:	4413      	add	r3, r2
 8017f76:	9327      	str	r3, [sp, #156]	; 0x9c
 8017f78:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017f7a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017f7c:	441a      	add	r2, r3
 8017f7e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017f80:	9228      	str	r2, [sp, #160]	; 0xa0
 8017f82:	3b01      	subs	r3, #1
 8017f84:	3702      	adds	r7, #2
 8017f86:	9311      	str	r3, [sp, #68]	; 0x44
 8017f88:	e69a      	b.n	8017cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8017f8a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017f8c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017f8e:	4413      	add	r3, r2
 8017f90:	9327      	str	r3, [sp, #156]	; 0x9c
 8017f92:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017f94:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017f96:	441a      	add	r2, r3
 8017f98:	9b06      	ldr	r3, [sp, #24]
 8017f9a:	9228      	str	r2, [sp, #160]	; 0xa0
 8017f9c:	3b01      	subs	r3, #1
 8017f9e:	9306      	str	r3, [sp, #24]
 8017fa0:	9b07      	ldr	r3, [sp, #28]
 8017fa2:	3302      	adds	r3, #2
 8017fa4:	9307      	str	r3, [sp, #28]
 8017fa6:	e63f      	b.n	8017c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8017fa8:	f47f ae51 	bne.w	8017c4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8017fac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017fae:	2b00      	cmp	r3, #0
 8017fb0:	f340 81dd 	ble.w	801836e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8017fb4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017fb8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017fbc:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017fc0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017fc2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017fc6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017fca:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017fce:	eef0 6a48 	vmov.f32	s13, s16
 8017fd2:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017fd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017fda:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017fde:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8017fe2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017fe6:	eef0 6a68 	vmov.f32	s13, s17
 8017fea:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017fee:	ee18 2a10 	vmov	r2, s16
 8017ff2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017ff6:	fb92 f3f3 	sdiv	r3, r2, r3
 8017ffa:	ee18 2a90 	vmov	r2, s17
 8017ffe:	9329      	str	r3, [sp, #164]	; 0xa4
 8018000:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018002:	fb92 f3f3 	sdiv	r3, r2, r3
 8018006:	932a      	str	r3, [sp, #168]	; 0xa8
 8018008:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801800a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801800c:	3b01      	subs	r3, #1
 801800e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018012:	9310      	str	r3, [sp, #64]	; 0x40
 8018014:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018016:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 801801a:	bf08      	it	eq
 801801c:	4613      	moveq	r3, r2
 801801e:	9306      	str	r3, [sp, #24]
 8018020:	eef0 8a67 	vmov.f32	s17, s15
 8018024:	eeb0 8a47 	vmov.f32	s16, s14
 8018028:	e5f7      	b.n	8017c1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 801802a:	fb08 f000 	mul.w	r0, r8, r0
 801802e:	fb09 0303 	mla	r3, r9, r3, r0
 8018032:	e693      	b.n	8017d5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1a0>
 8018034:	4689      	mov	r9, r1
 8018036:	e6bb      	b.n	8017db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 8018038:	f1c2 0010 	rsb	r0, r2, #16
 801803c:	fb0e f202 	mul.w	r2, lr, r2
 8018040:	fb09 2900 	mla	r9, r9, r0, r2
 8018044:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018048:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801804c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018050:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018054:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018058:	ea42 0909 	orr.w	r9, r2, r9
 801805c:	fa1f f289 	uxth.w	r2, r9
 8018060:	e74b      	b.n	8017efa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 8018062:	803a      	strh	r2, [r7, #0]
 8018064:	e784      	b.n	8017f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8018066:	1c5c      	adds	r4, r3, #1
 8018068:	d182      	bne.n	8017f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801806a:	429d      	cmp	r5, r3
 801806c:	dd80      	ble.n	8017f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801806e:	1c48      	adds	r0, r1, #1
 8018070:	f6ff af7e 	blt.w	8017f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8018074:	9808      	ldr	r0, [sp, #32]
 8018076:	4288      	cmp	r0, r1
 8018078:	f77f af7a 	ble.w	8017f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801807c:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018080:	e9cd 2c04 	strd	r2, ip, [sp, #16]
 8018084:	e9cd 5000 	strd	r5, r0, [sp]
 8018088:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 801808c:	4639      	mov	r1, r7
 801808e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018090:	f7ff fbf2 	bl	8017878 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8018094:	e76c      	b.n	8017f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8018096:	bf00      	nop
 8018098:	fffff800 	.word	0xfffff800
 801809c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801809e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80180a2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80180a4:	141f      	asrs	r7, r3, #16
 80180a6:	f3c3 3003 	ubfx	r0, r3, #12, #4
 80180aa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80180ac:	141b      	asrs	r3, r3, #16
 80180ae:	fb05 3707 	mla	r7, r5, r7, r3
 80180b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80180b4:	fa1f fc82 	uxth.w	ip, r2
 80180b8:	eb03 0a07 	add.w	sl, r3, r7
 80180bc:	ea4f 110c 	mov.w	r1, ip, lsl #4
 80180c0:	f813 9007 	ldrb.w	r9, [r3, r7]
 80180c4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80180c8:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 80180cc:	b29b      	uxth	r3, r3
 80180ce:	2800      	cmp	r0, #0
 80180d0:	f000 8132 	beq.w	8018338 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x77c>
 80180d4:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80180d8:	940d      	str	r4, [sp, #52]	; 0x34
 80180da:	eb0a 0b05 	add.w	fp, sl, r5
 80180de:	fa1f fa80 	uxth.w	sl, r0
 80180e2:	fb0a fc0c 	mul.w	ip, sl, ip
 80180e6:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80180ea:	fa1f fa8a 	uxth.w	sl, sl
 80180ee:	eba1 010c 	sub.w	r1, r1, ip
 80180f2:	eba3 030a 	sub.w	r3, r3, sl
 80180f6:	b289      	uxth	r1, r1
 80180f8:	fb08 f101 	mul.w	r1, r8, r1
 80180fc:	b29b      	uxth	r3, r3
 80180fe:	fb09 1303 	mla	r3, r9, r3, r1
 8018102:	990d      	ldr	r1, [sp, #52]	; 0x34
 8018104:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018108:	940e      	str	r4, [sp, #56]	; 0x38
 801810a:	fb0a 3301 	mla	r3, sl, r1, r3
 801810e:	fb0c 3304 	mla	r3, ip, r4, r3
 8018112:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018116:	2b00      	cmp	r3, #0
 8018118:	f000 8100 	beq.w	801831c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 801811c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801811e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018120:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018124:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8018128:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801812c:	f000 8109 	beq.w	8018342 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x786>
 8018130:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018134:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018138:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801813c:	fb09 f707 	mul.w	r7, r9, r7
 8018140:	fb0a fc0c 	mul.w	ip, sl, ip
 8018144:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8018148:	f107 0b20 	add.w	fp, r7, #32
 801814c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018150:	44cc      	add	ip, r9
 8018152:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8018156:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801815a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801815e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018162:	ea4c 0909 	orr.w	r9, ip, r9
 8018166:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801816a:	884f      	ldrh	r7, [r1, #2]
 801816c:	d019      	beq.n	80181a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e6>
 801816e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018172:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018176:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801817a:	fb08 f807 	mul.w	r8, r8, r7
 801817e:	fb0a fc0c 	mul.w	ip, sl, ip
 8018182:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8018186:	f108 0b20 	add.w	fp, r8, #32
 801818a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801818e:	44bc      	add	ip, r7
 8018190:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8018194:	0a3f      	lsrs	r7, r7, #8
 8018196:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801819a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801819e:	ea4c 0707 	orr.w	r7, ip, r7
 80181a2:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80181a6:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80181aa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80181ae:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80181b2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80181b6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80181ba:	ea4c 0909 	orr.w	r9, ip, r9
 80181be:	ea4a 0707 	orr.w	r7, sl, r7
 80181c2:	2800      	cmp	r0, #0
 80181c4:	f000 80bf 	beq.w	8018346 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78a>
 80181c8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80181ca:	eb01 0c04 	add.w	ip, r1, r4
 80181ce:	f831 8004 	ldrh.w	r8, [r1, r4]
 80181d2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80181d4:	29ff      	cmp	r1, #255	; 0xff
 80181d6:	d01a      	beq.n	801820e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x652>
 80181d8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80181da:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 80181de:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80181e2:	fb04 fb08 	mul.w	fp, r4, r8
 80181e6:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80181ea:	fb0a fa01 	mul.w	sl, sl, r1
 80181ee:	f10b 0120 	add.w	r1, fp, #32
 80181f2:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 80181f6:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 80181fa:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80181fe:	44d0      	add	r8, sl
 8018200:	0a09      	lsrs	r1, r1, #8
 8018202:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 8018206:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801820a:	ea48 0801 	orr.w	r8, r8, r1
 801820e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018210:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8018214:	2cff      	cmp	r4, #255	; 0xff
 8018216:	d01a      	beq.n	801824e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x692>
 8018218:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 801821c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018220:	fb04 fb01 	mul.w	fp, r4, r1
 8018224:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018228:	fb0a fa0c 	mul.w	sl, sl, ip
 801822c:	f10b 0c20 	add.w	ip, fp, #32
 8018230:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8018234:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8018238:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801823c:	4451      	add	r1, sl
 801823e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018242:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8018246:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801824a:	ea41 010c 	orr.w	r1, r1, ip
 801824e:	fb10 fc02 	smulbb	ip, r0, r2
 8018252:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8018256:	f1c0 0a10 	rsb	sl, r0, #16
 801825a:	ebaa 0a02 	sub.w	sl, sl, r2
 801825e:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8018262:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8018266:	437a      	muls	r2, r7
 8018268:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 801826c:	040f      	lsls	r7, r1, #16
 801826e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018272:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8018276:	fb09 220a 	mla	r2, r9, sl, r2
 801827a:	ea4b 0808 	orr.w	r8, fp, r8
 801827e:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8018282:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8018286:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801828a:	fb00 2208 	mla	r2, r0, r8, r2
 801828e:	4339      	orrs	r1, r7
 8018290:	fb0c 2201 	mla	r2, ip, r1, r2
 8018294:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8018298:	0952      	lsrs	r2, r2, #5
 801829a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801829e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80182a2:	ea49 0202 	orr.w	r2, r9, r2
 80182a6:	2bff      	cmp	r3, #255	; 0xff
 80182a8:	b292      	uxth	r2, r2
 80182aa:	d05d      	beq.n	8018368 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ac>
 80182ac:	f8be 8000 	ldrh.w	r8, [lr]
 80182b0:	4c31      	ldr	r4, [pc, #196]	; (8018378 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7bc>)
 80182b2:	43db      	mvns	r3, r3
 80182b4:	ea4f 2028 	mov.w	r0, r8, asr #8
 80182b8:	fa5f fc83 	uxtb.w	ip, r3
 80182bc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80182c0:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80182c4:	fb00 f00c 	mul.w	r0, r0, ip
 80182c8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80182cc:	fb07 f10c 	mul.w	r1, r7, ip
 80182d0:	1c47      	adds	r7, r0, #1
 80182d2:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80182d6:	1217      	asrs	r7, r2, #8
 80182d8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80182dc:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80182e0:	1c4f      	adds	r7, r1, #1
 80182e2:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 80182e6:	10d1      	asrs	r1, r2, #3
 80182e8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80182ec:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 80182f0:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 80182f4:	b2db      	uxtb	r3, r3
 80182f6:	00c9      	lsls	r1, r1, #3
 80182f8:	fb03 f30c 	mul.w	r3, r3, ip
 80182fc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018300:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8018304:	4308      	orrs	r0, r1
 8018306:	00d2      	lsls	r2, r2, #3
 8018308:	1c59      	adds	r1, r3, #1
 801830a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801830e:	b2d2      	uxtb	r2, r2
 8018310:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8018314:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8018318:	f8ae 0000 	strh.w	r0, [lr]
 801831c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801831e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018320:	4413      	add	r3, r2
 8018322:	9327      	str	r3, [sp, #156]	; 0x9c
 8018324:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8018326:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018328:	441a      	add	r2, r3
 801832a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801832c:	9228      	str	r2, [sp, #160]	; 0xa0
 801832e:	3b01      	subs	r3, #1
 8018330:	f10e 0e02 	add.w	lr, lr, #2
 8018334:	9311      	str	r3, [sp, #68]	; 0x44
 8018336:	e4a5      	b.n	8017c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8018338:	fb08 f101 	mul.w	r1, r8, r1
 801833c:	fb09 1303 	mla	r3, r9, r3, r1
 8018340:	e6e7      	b.n	8018112 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x556>
 8018342:	46b9      	mov	r9, r7
 8018344:	e70f      	b.n	8018166 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5aa>
 8018346:	f1c2 0110 	rsb	r1, r2, #16
 801834a:	437a      	muls	r2, r7
 801834c:	fb09 2901 	mla	r9, r9, r1, r2
 8018350:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018354:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018358:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801835c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018360:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018364:	4302      	orrs	r2, r0
 8018366:	e79e      	b.n	80182a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6ea>
 8018368:	f8ae 2000 	strh.w	r2, [lr]
 801836c:	e7d6      	b.n	801831c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 801836e:	b015      	add	sp, #84	; 0x54
 8018370:	ecbd 8b08 	vpop	{d8-d11}
 8018374:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018378:	fffff800 	.word	0xfffff800

0801837c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801837c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018380:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8018384:	fb0c 4e03 	mla	lr, ip, r3, r4
 8018388:	f1bc 0f00 	cmp.w	ip, #0
 801838c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8018390:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8018394:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8018398:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 801839c:	8808      	ldrh	r0, [r1, #0]
 801839e:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 80183a2:	db2f      	blt.n	8018404 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 80183a4:	45e2      	cmp	sl, ip
 80183a6:	dd2d      	ble.n	8018404 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 80183a8:	2c00      	cmp	r4, #0
 80183aa:	db29      	blt.n	8018400 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 80183ac:	42a3      	cmp	r3, r4
 80183ae:	dd27      	ble.n	8018400 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 80183b0:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 80183b4:	1c62      	adds	r2, r4, #1
 80183b6:	d428      	bmi.n	801840a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80183b8:	4293      	cmp	r3, r2
 80183ba:	dd26      	ble.n	801840a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80183bc:	b32f      	cbz	r7, 801840a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80183be:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 80183c2:	f11c 0c01 	adds.w	ip, ip, #1
 80183c6:	d424      	bmi.n	8018412 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 80183c8:	45e2      	cmp	sl, ip
 80183ca:	dd22      	ble.n	8018412 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 80183cc:	2e00      	cmp	r6, #0
 80183ce:	f000 809c 	beq.w	801850a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 80183d2:	2c00      	cmp	r4, #0
 80183d4:	db1b      	blt.n	801840e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80183d6:	42a3      	cmp	r3, r4
 80183d8:	dd19      	ble.n	801840e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80183da:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 80183de:	3401      	adds	r4, #1
 80183e0:	d41a      	bmi.n	8018418 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80183e2:	42a3      	cmp	r3, r4
 80183e4:	dd18      	ble.n	8018418 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80183e6:	b1cf      	cbz	r7, 801841c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 80183e8:	3301      	adds	r3, #1
 80183ea:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 80183ee:	2f0f      	cmp	r7, #15
 80183f0:	d915      	bls.n	801841e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 80183f2:	4b49      	ldr	r3, [pc, #292]	; (8018518 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 80183f4:	4a49      	ldr	r2, [pc, #292]	; (801851c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 80183f6:	484a      	ldr	r0, [pc, #296]	; (8018520 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 80183f8:	f240 3155 	movw	r1, #853	; 0x355
 80183fc:	f002 ff38 	bl	801b270 <__assert_func>
 8018400:	4681      	mov	r9, r0
 8018402:	e7d7      	b.n	80183b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8018404:	4686      	mov	lr, r0
 8018406:	4681      	mov	r9, r0
 8018408:	e7db      	b.n	80183c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801840a:	4686      	mov	lr, r0
 801840c:	e7d9      	b.n	80183c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801840e:	4684      	mov	ip, r0
 8018410:	e7e5      	b.n	80183de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8018412:	4603      	mov	r3, r0
 8018414:	4684      	mov	ip, r0
 8018416:	e7ea      	b.n	80183ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018418:	4603      	mov	r3, r0
 801841a:	e7e8      	b.n	80183ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 801841c:	4603      	mov	r3, r0
 801841e:	2e0f      	cmp	r6, #15
 8018420:	d8e7      	bhi.n	80183f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018422:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8018426:	fb17 f806 	smulbb	r8, r7, r6
 801842a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801842e:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8018432:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018436:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801843a:	ea44 0909 	orr.w	r9, r4, r9
 801843e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018442:	f1c6 0410 	rsb	r4, r6, #16
 8018446:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801844a:	1be4      	subs	r4, r4, r7
 801844c:	041a      	lsls	r2, r3, #16
 801844e:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8018452:	ea4a 0e0e 	orr.w	lr, sl, lr
 8018456:	fb07 fe0e 	mul.w	lr, r7, lr
 801845a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801845e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8018462:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018466:	fb04 e409 	mla	r4, r4, r9, lr
 801846a:	4313      	orrs	r3, r2
 801846c:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8018470:	fb08 4303 	mla	r3, r8, r3, r4
 8018474:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018478:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 801847c:	4322      	orrs	r2, r4
 801847e:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8018482:	fb06 3202 	mla	r2, r6, r2, r3
 8018486:	0d53      	lsrs	r3, r2, #21
 8018488:	0952      	lsrs	r2, r2, #5
 801848a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801848e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018492:	431a      	orrs	r2, r3
 8018494:	b293      	uxth	r3, r2
 8018496:	b2af      	uxth	r7, r5
 8018498:	1202      	asrs	r2, r0, #8
 801849a:	43ed      	mvns	r5, r5
 801849c:	b2ed      	uxtb	r5, r5
 801849e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80184a2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80184a6:	fb12 f205 	smulbb	r2, r2, r5
 80184aa:	10c6      	asrs	r6, r0, #3
 80184ac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80184b0:	fb0c 2c07 	mla	ip, ip, r7, r2
 80184b4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80184b8:	10da      	asrs	r2, r3, #3
 80184ba:	fb16 f605 	smulbb	r6, r6, r5
 80184be:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80184c2:	fb02 6207 	mla	r2, r2, r7, r6
 80184c6:	b296      	uxth	r6, r2
 80184c8:	00c2      	lsls	r2, r0, #3
 80184ca:	00dc      	lsls	r4, r3, #3
 80184cc:	b2d2      	uxtb	r2, r2
 80184ce:	b2e4      	uxtb	r4, r4
 80184d0:	fb12 f205 	smulbb	r2, r2, r5
 80184d4:	fb04 2207 	mla	r2, r4, r7, r2
 80184d8:	fa1f fc8c 	uxth.w	ip, ip
 80184dc:	b292      	uxth	r2, r2
 80184de:	f10c 0301 	add.w	r3, ip, #1
 80184e2:	1c50      	adds	r0, r2, #1
 80184e4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80184e8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80184ec:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80184f0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80184f4:	4313      	orrs	r3, r2
 80184f6:	1c72      	adds	r2, r6, #1
 80184f8:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80184fc:	0952      	lsrs	r2, r2, #5
 80184fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018502:	4313      	orrs	r3, r2
 8018504:	800b      	strh	r3, [r1, #0]
 8018506:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801850a:	2f0f      	cmp	r7, #15
 801850c:	f63f af71 	bhi.w	80183f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018510:	4603      	mov	r3, r0
 8018512:	4684      	mov	ip, r0
 8018514:	e785      	b.n	8018422 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8018516:	bf00      	nop
 8018518:	0801eea7 	.word	0x0801eea7
 801851c:	0801f4ae 	.word	0x0801f4ae
 8018520:	0801ef2f 	.word	0x0801ef2f

08018524 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018524:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018528:	ed2d 8b08 	vpush	{d8-d11}
 801852c:	b095      	sub	sp, #84	; 0x54
 801852e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8018532:	9306      	str	r3, [sp, #24]
 8018534:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8018538:	9212      	str	r2, [sp, #72]	; 0x48
 801853a:	9307      	str	r3, [sp, #28]
 801853c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801853e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8018542:	930c      	str	r3, [sp, #48]	; 0x30
 8018544:	910b      	str	r1, [sp, #44]	; 0x2c
 8018546:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801854a:	9013      	str	r0, [sp, #76]	; 0x4c
 801854c:	6850      	ldr	r0, [r2, #4]
 801854e:	6812      	ldr	r2, [r2, #0]
 8018550:	f9bd 70b8 	ldrsh.w	r7, [sp, #184]	; 0xb8
 8018554:	fb00 1303 	mla	r3, r0, r3, r1
 8018558:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801855c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801855e:	681b      	ldr	r3, [r3, #0]
 8018560:	9309      	str	r3, [sp, #36]	; 0x24
 8018562:	007b      	lsls	r3, r7, #1
 8018564:	930a      	str	r3, [sp, #40]	; 0x28
 8018566:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018568:	43db      	mvns	r3, r3
 801856a:	b2db      	uxtb	r3, r3
 801856c:	eeb0 aa40 	vmov.f32	s20, s0
 8018570:	eef0 9a60 	vmov.f32	s19, s1
 8018574:	eeb0 9a41 	vmov.f32	s18, s2
 8018578:	eeb0 8a62 	vmov.f32	s16, s5
 801857c:	eef0 8a43 	vmov.f32	s17, s6
 8018580:	eef0 ba44 	vmov.f32	s23, s8
 8018584:	eeb0 ba64 	vmov.f32	s22, s9
 8018588:	eef0 aa45 	vmov.f32	s21, s10
 801858c:	9308      	str	r3, [sp, #32]
 801858e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018590:	2b00      	cmp	r3, #0
 8018592:	dc03      	bgt.n	801859c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8018594:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018596:	2b00      	cmp	r3, #0
 8018598:	f340 81f3 	ble.w	8018982 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 801859c:	9b06      	ldr	r3, [sp, #24]
 801859e:	2b00      	cmp	r3, #0
 80185a0:	f340 80fa 	ble.w	8018798 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 80185a4:	1422      	asrs	r2, r4, #16
 80185a6:	ea4f 4326 	mov.w	r3, r6, asr #16
 80185aa:	d42b      	bmi.n	8018604 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 80185ac:	1c51      	adds	r1, r2, #1
 80185ae:	428f      	cmp	r7, r1
 80185b0:	dd2b      	ble.n	801860a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 80185b2:	2b00      	cmp	r3, #0
 80185b4:	db29      	blt.n	801860a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 80185b6:	9807      	ldr	r0, [sp, #28]
 80185b8:	1c59      	adds	r1, r3, #1
 80185ba:	4288      	cmp	r0, r1
 80185bc:	dd25      	ble.n	801860a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 80185be:	9b06      	ldr	r3, [sp, #24]
 80185c0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80185c2:	3b01      	subs	r3, #1
 80185c4:	fb02 4203 	mla	r2, r2, r3, r4
 80185c8:	1412      	asrs	r2, r2, #16
 80185ca:	d428      	bmi.n	801861e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80185cc:	3201      	adds	r2, #1
 80185ce:	4297      	cmp	r7, r2
 80185d0:	dd25      	ble.n	801861e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80185d2:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80185d4:	fb02 6303 	mla	r3, r2, r3, r6
 80185d8:	141b      	asrs	r3, r3, #16
 80185da:	d420      	bmi.n	801861e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80185dc:	9a07      	ldr	r2, [sp, #28]
 80185de:	3301      	adds	r3, #1
 80185e0:	429a      	cmp	r2, r3
 80185e2:	dd1c      	ble.n	801861e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80185e4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80185e8:	f8bd a030 	ldrh.w	sl, [sp, #48]	; 0x30
 80185ec:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80185f0:	f1b8 0f00 	cmp.w	r8, #0
 80185f4:	f300 8129 	bgt.w	801884a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x326>
 80185f8:	9b06      	ldr	r3, [sp, #24]
 80185fa:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80185fe:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8018602:	e0cb      	b.n	801879c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x278>
 8018604:	1c51      	adds	r1, r2, #1
 8018606:	f040 80bd 	bne.w	8018784 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801860a:	42ba      	cmp	r2, r7
 801860c:	f280 80ba 	bge.w	8018784 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8018610:	1c5a      	adds	r2, r3, #1
 8018612:	f2c0 80b7 	blt.w	8018784 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8018616:	9a07      	ldr	r2, [sp, #28]
 8018618:	4293      	cmp	r3, r2
 801861a:	f280 80b3 	bge.w	8018784 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801861e:	f8dd b018 	ldr.w	fp, [sp, #24]
 8018622:	46c8      	mov	r8, r9
 8018624:	f1bb 0f00 	cmp.w	fp, #0
 8018628:	dde6      	ble.n	80185f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 801862a:	1421      	asrs	r1, r4, #16
 801862c:	ea4f 4226 	mov.w	r2, r6, asr #16
 8018630:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018634:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018638:	f100 80ef 	bmi.w	801881a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 801863c:	f101 0c01 	add.w	ip, r1, #1
 8018640:	4567      	cmp	r7, ip
 8018642:	f340 80ec 	ble.w	801881e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8018646:	2a00      	cmp	r2, #0
 8018648:	f2c0 80e9 	blt.w	801881e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 801864c:	9d07      	ldr	r5, [sp, #28]
 801864e:	f102 0c01 	add.w	ip, r2, #1
 8018652:	4565      	cmp	r5, ip
 8018654:	f340 80e3 	ble.w	801881e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8018658:	fb02 1207 	mla	r2, r2, r7, r1
 801865c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801865e:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8018662:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8018666:	f8be 1002 	ldrh.w	r1, [lr, #2]
 801866a:	b138      	cbz	r0, 801867c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x158>
 801866c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801866e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8018670:	4472      	add	r2, lr
 8018672:	f83e 5005 	ldrh.w	r5, [lr, r5]
 8018676:	8852      	ldrh	r2, [r2, #2]
 8018678:	950e      	str	r5, [sp, #56]	; 0x38
 801867a:	920f      	str	r2, [sp, #60]	; 0x3c
 801867c:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8018680:	fb13 f200 	smulbb	r2, r3, r0
 8018684:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018688:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801868c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018690:	10d2      	asrs	r2, r2, #3
 8018692:	ea4e 0c0c 	orr.w	ip, lr, ip
 8018696:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801869a:	f1c0 0e10 	rsb	lr, r0, #16
 801869e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80186a2:	ebae 0e03 	sub.w	lr, lr, r3
 80186a6:	ea4a 0101 	orr.w	r1, sl, r1
 80186aa:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 80186ae:	4359      	muls	r1, r3
 80186b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80186b2:	9d08      	ldr	r5, [sp, #32]
 80186b4:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80186b8:	fb0e 1e0c 	mla	lr, lr, ip, r1
 80186bc:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80186c0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80186c4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80186c8:	ea4c 0c03 	orr.w	ip, ip, r3
 80186cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80186ce:	990e      	ldr	r1, [sp, #56]	; 0x38
 80186d0:	041b      	lsls	r3, r3, #16
 80186d2:	fb02 ec0c 	mla	ip, r2, ip, lr
 80186d6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80186da:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80186de:	ea43 030e 	orr.w	r3, r3, lr
 80186e2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80186e6:	fb02 c203 	mla	r2, r2, r3, ip
 80186ea:	0d53      	lsrs	r3, r2, #21
 80186ec:	0952      	lsrs	r2, r2, #5
 80186ee:	f8b8 c000 	ldrh.w	ip, [r8]
 80186f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80186f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80186fa:	431a      	orrs	r2, r3
 80186fc:	b292      	uxth	r2, r2
 80186fe:	ea4f 212c 	mov.w	r1, ip, asr #8
 8018702:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8018706:	1210      	asrs	r0, r2, #8
 8018708:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801870c:	fb11 f105 	smulbb	r1, r1, r5
 8018710:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8018714:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018718:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801871c:	fb00 1003 	mla	r0, r0, r3, r1
 8018720:	fa5f fc8c 	uxtb.w	ip, ip
 8018724:	10d1      	asrs	r1, r2, #3
 8018726:	00d2      	lsls	r2, r2, #3
 8018728:	fb1c fc05 	smulbb	ip, ip, r5
 801872c:	b2d2      	uxtb	r2, r2
 801872e:	fb02 c203 	mla	r2, r2, r3, ip
 8018732:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018736:	b280      	uxth	r0, r0
 8018738:	b292      	uxth	r2, r2
 801873a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801873e:	fb1e fe05 	smulbb	lr, lr, r5
 8018742:	fb01 e103 	mla	r1, r1, r3, lr
 8018746:	f102 0c01 	add.w	ip, r2, #1
 801874a:	1c43      	adds	r3, r0, #1
 801874c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018750:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8018754:	b289      	uxth	r1, r1
 8018756:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801875a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801875e:	4313      	orrs	r3, r2
 8018760:	1c4a      	adds	r2, r1, #1
 8018762:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018766:	0949      	lsrs	r1, r1, #5
 8018768:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801876c:	430b      	orrs	r3, r1
 801876e:	f8a8 3000 	strh.w	r3, [r8]
 8018772:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018774:	441c      	add	r4, r3
 8018776:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018778:	f108 0802 	add.w	r8, r8, #2
 801877c:	441e      	add	r6, r3
 801877e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018782:	e74f      	b.n	8018624 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8018784:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018786:	441c      	add	r4, r3
 8018788:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801878a:	441e      	add	r6, r3
 801878c:	9b06      	ldr	r3, [sp, #24]
 801878e:	3b01      	subs	r3, #1
 8018790:	9306      	str	r3, [sp, #24]
 8018792:	f109 0902 	add.w	r9, r9, #2
 8018796:	e701      	b.n	801859c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8018798:	f47f af11 	bne.w	80185be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801879c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801879e:	2b00      	cmp	r3, #0
 80187a0:	f340 80ef 	ble.w	8018982 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 80187a4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80187a8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80187ac:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80187b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80187b2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80187b6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80187ba:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80187be:	eef0 6a48 	vmov.f32	s13, s16
 80187c2:	ee69 7a27 	vmul.f32	s15, s18, s15
 80187c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80187ca:	ee37 8a48 	vsub.f32	s16, s14, s16
 80187ce:	ee16 4a90 	vmov	r4, s13
 80187d2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80187d6:	eef0 6a68 	vmov.f32	s13, s17
 80187da:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80187de:	ee18 2a10 	vmov	r2, s16
 80187e2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80187e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80187ea:	ee18 2a90 	vmov	r2, s17
 80187ee:	9329      	str	r3, [sp, #164]	; 0xa4
 80187f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80187f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80187f6:	932a      	str	r3, [sp, #168]	; 0xa8
 80187f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80187fa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80187fc:	3b01      	subs	r3, #1
 80187fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018802:	930b      	str	r3, [sp, #44]	; 0x2c
 8018804:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018806:	bf08      	it	eq
 8018808:	4613      	moveq	r3, r2
 801880a:	ee16 6a90 	vmov	r6, s13
 801880e:	9306      	str	r3, [sp, #24]
 8018810:	eef0 8a67 	vmov.f32	s17, s15
 8018814:	eeb0 8a47 	vmov.f32	s16, s14
 8018818:	e6b9      	b.n	801858e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801881a:	1c4d      	adds	r5, r1, #1
 801881c:	d1a9      	bne.n	8018772 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 801881e:	428f      	cmp	r7, r1
 8018820:	dda7      	ble.n	8018772 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018822:	1c55      	adds	r5, r2, #1
 8018824:	dba5      	blt.n	8018772 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018826:	9d07      	ldr	r5, [sp, #28]
 8018828:	4295      	cmp	r5, r2
 801882a:	dda2      	ble.n	8018772 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 801882c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801882e:	9101      	str	r1, [sp, #4]
 8018830:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8018834:	9b07      	ldr	r3, [sp, #28]
 8018836:	9300      	str	r3, [sp, #0]
 8018838:	e9cd 0504 	strd	r0, r5, [sp, #16]
 801883c:	463b      	mov	r3, r7
 801883e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018840:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018842:	4641      	mov	r1, r8
 8018844:	f7ff fd9a 	bl	801837c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8018848:	e793      	b.n	8018772 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 801884a:	1422      	asrs	r2, r4, #16
 801884c:	1431      	asrs	r1, r6, #16
 801884e:	fb07 2101 	mla	r1, r7, r1, r2
 8018852:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018854:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018856:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 801885a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801885e:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8018862:	8851      	ldrh	r1, [r2, #2]
 8018864:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018868:	f1be 0f00 	cmp.w	lr, #0
 801886c:	d006      	beq.n	801887c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 801886e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018870:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8018872:	1810      	adds	r0, r2, r0
 8018874:	5b52      	ldrh	r2, [r2, r5]
 8018876:	9210      	str	r2, [sp, #64]	; 0x40
 8018878:	8842      	ldrh	r2, [r0, #2]
 801887a:	9211      	str	r2, [sp, #68]	; 0x44
 801887c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8018880:	fb13 f20e 	smulbb	r2, r3, lr
 8018884:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018888:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801888c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018890:	10d2      	asrs	r2, r2, #3
 8018892:	ea40 000c 	orr.w	r0, r0, ip
 8018896:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801889a:	f1ce 0c10 	rsb	ip, lr, #16
 801889e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80188a2:	ebac 0c03 	sub.w	ip, ip, r3
 80188a6:	ea4b 0101 	orr.w	r1, fp, r1
 80188aa:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 80188ae:	4359      	muls	r1, r3
 80188b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80188b2:	9d08      	ldr	r5, [sp, #32]
 80188b4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80188b8:	fb0c 1c00 	mla	ip, ip, r0, r1
 80188bc:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80188c0:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 80188c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80188c6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80188ca:	ea4b 0000 	orr.w	r0, fp, r0
 80188ce:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80188d2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80188d6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80188da:	fb02 c000 	mla	r0, r2, r0, ip
 80188de:	ea4b 0b03 	orr.w	fp, fp, r3
 80188e2:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 80188e6:	fb02 0b0b 	mla	fp, r2, fp, r0
 80188ea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80188ec:	ea4f 515b 	mov.w	r1, fp, lsr #21
 80188f0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80188f4:	8812      	ldrh	r2, [r2, #0]
 80188f6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80188fa:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80188fe:	ea41 0b0b 	orr.w	fp, r1, fp
 8018902:	fa1f f38b 	uxth.w	r3, fp
 8018906:	1211      	asrs	r1, r2, #8
 8018908:	1218      	asrs	r0, r3, #8
 801890a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801890e:	fb11 f105 	smulbb	r1, r1, r5
 8018912:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8018916:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801891a:	00d2      	lsls	r2, r2, #3
 801891c:	fb00 100a 	mla	r0, r0, sl, r1
 8018920:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018924:	10d9      	asrs	r1, r3, #3
 8018926:	b2d2      	uxtb	r2, r2
 8018928:	00db      	lsls	r3, r3, #3
 801892a:	fb1c fc05 	smulbb	ip, ip, r5
 801892e:	fb12 f205 	smulbb	r2, r2, r5
 8018932:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018936:	b2db      	uxtb	r3, r3
 8018938:	b280      	uxth	r0, r0
 801893a:	fb01 c10a 	mla	r1, r1, sl, ip
 801893e:	fb03 230a 	mla	r3, r3, sl, r2
 8018942:	b29b      	uxth	r3, r3
 8018944:	b289      	uxth	r1, r1
 8018946:	1c42      	adds	r2, r0, #1
 8018948:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801894c:	f101 0c01 	add.w	ip, r1, #1
 8018950:	1c5a      	adds	r2, r3, #1
 8018952:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018956:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 801895a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801895e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018962:	0949      	lsrs	r1, r1, #5
 8018964:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018966:	4310      	orrs	r0, r2
 8018968:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801896c:	4308      	orrs	r0, r1
 801896e:	f823 0b02 	strh.w	r0, [r3], #2
 8018972:	930d      	str	r3, [sp, #52]	; 0x34
 8018974:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018976:	441c      	add	r4, r3
 8018978:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801897a:	f108 38ff 	add.w	r8, r8, #4294967295
 801897e:	441e      	add	r6, r3
 8018980:	e636      	b.n	80185f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8018982:	b015      	add	sp, #84	; 0x54
 8018984:	ecbd 8b08 	vpop	{d8-d11}
 8018988:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801898c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801898c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018990:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8018994:	fb06 5c03 	mla	ip, r6, r3, r5
 8018998:	2e00      	cmp	r6, #0
 801899a:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 801899e:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 80189a2:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 80189a6:	8808      	ldrh	r0, [r1, #0]
 80189a8:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80189ac:	db2e      	blt.n	8018a0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80189ae:	45b0      	cmp	r8, r6
 80189b0:	dd2c      	ble.n	8018a0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80189b2:	2d00      	cmp	r5, #0
 80189b4:	db28      	blt.n	8018a08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80189b6:	42ab      	cmp	r3, r5
 80189b8:	dd26      	ble.n	8018a08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80189ba:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 80189be:	1c6a      	adds	r2, r5, #1
 80189c0:	d427      	bmi.n	8018a12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80189c2:	4293      	cmp	r3, r2
 80189c4:	dd25      	ble.n	8018a12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80189c6:	b324      	cbz	r4, 8018a12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80189c8:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80189cc:	3601      	adds	r6, #1
 80189ce:	d424      	bmi.n	8018a1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80189d0:	45b0      	cmp	r8, r6
 80189d2:	dd22      	ble.n	8018a1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80189d4:	b31f      	cbz	r7, 8018a1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 80189d6:	2d00      	cmp	r5, #0
 80189d8:	db1d      	blt.n	8018a16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80189da:	42ab      	cmp	r3, r5
 80189dc:	dd1b      	ble.n	8018a16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80189de:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 80189e2:	3501      	adds	r5, #1
 80189e4:	d405      	bmi.n	80189f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80189e6:	42ab      	cmp	r3, r5
 80189e8:	dd03      	ble.n	80189f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80189ea:	b124      	cbz	r4, 80189f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 80189ec:	3301      	adds	r3, #1
 80189ee:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 80189f2:	2c0f      	cmp	r4, #15
 80189f4:	d801      	bhi.n	80189fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80189f6:	2f0f      	cmp	r7, #15
 80189f8:	d914      	bls.n	8018a24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 80189fa:	4b27      	ldr	r3, [pc, #156]	; (8018a98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 80189fc:	4a27      	ldr	r2, [pc, #156]	; (8018a9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 80189fe:	4828      	ldr	r0, [pc, #160]	; (8018aa0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8018a00:	f240 3155 	movw	r1, #853	; 0x355
 8018a04:	f002 fc34 	bl	801b270 <__assert_func>
 8018a08:	4684      	mov	ip, r0
 8018a0a:	e7d8      	b.n	80189be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8018a0c:	4602      	mov	r2, r0
 8018a0e:	4684      	mov	ip, r0
 8018a10:	e7dc      	b.n	80189cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8018a12:	4602      	mov	r2, r0
 8018a14:	e7da      	b.n	80189cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8018a16:	4606      	mov	r6, r0
 8018a18:	e7e3      	b.n	80189e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8018a1a:	4606      	mov	r6, r0
 8018a1c:	e7e9      	b.n	80189f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018a1e:	2c0f      	cmp	r4, #15
 8018a20:	d8eb      	bhi.n	80189fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8018a22:	4606      	mov	r6, r0
 8018a24:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8018a28:	fb14 f307 	smulbb	r3, r4, r7
 8018a2c:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8018a30:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8018a34:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018a38:	10db      	asrs	r3, r3, #3
 8018a3a:	ea45 0c0c 	orr.w	ip, r5, ip
 8018a3e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018a42:	f1c7 0510 	rsb	r5, r7, #16
 8018a46:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018a4a:	1b2d      	subs	r5, r5, r4
 8018a4c:	ea4e 0202 	orr.w	r2, lr, r2
 8018a50:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8018a54:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8018a58:	4354      	muls	r4, r2
 8018a5a:	fb05 450c 	mla	r5, r5, ip, r4
 8018a5e:	0404      	lsls	r4, r0, #16
 8018a60:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018a64:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018a68:	4320      	orrs	r0, r4
 8018a6a:	fb03 5400 	mla	r4, r3, r0, r5
 8018a6e:	0430      	lsls	r0, r6, #16
 8018a70:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018a74:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8018a78:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8018a7c:	4330      	orrs	r0, r6
 8018a7e:	fb07 4000 	mla	r0, r7, r0, r4
 8018a82:	0d43      	lsrs	r3, r0, #21
 8018a84:	0940      	lsrs	r0, r0, #5
 8018a86:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018a8a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018a8e:	4318      	orrs	r0, r3
 8018a90:	8008      	strh	r0, [r1, #0]
 8018a92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018a96:	bf00      	nop
 8018a98:	0801eea7 	.word	0x0801eea7
 8018a9c:	0801f4ae 	.word	0x0801f4ae
 8018aa0:	0801ef2f 	.word	0x0801ef2f

08018aa4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018aa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018aa8:	ed2d 8b0a 	vpush	{d8-d12}
 8018aac:	b093      	sub	sp, #76	; 0x4c
 8018aae:	461d      	mov	r5, r3
 8018ab0:	9210      	str	r2, [sp, #64]	; 0x40
 8018ab2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018ab4:	f9bd 20bc 	ldrsh.w	r2, [sp, #188]	; 0xbc
 8018ab8:	9208      	str	r2, [sp, #32]
 8018aba:	e9dd 272c 	ldrd	r2, r7, [sp, #176]	; 0xb0
 8018abe:	910b      	str	r1, [sp, #44]	; 0x2c
 8018ac0:	6859      	ldr	r1, [r3, #4]
 8018ac2:	681b      	ldr	r3, [r3, #0]
 8018ac4:	f9bd 80b8 	ldrsh.w	r8, [sp, #184]	; 0xb8
 8018ac8:	9011      	str	r0, [sp, #68]	; 0x44
 8018aca:	fb01 2707 	mla	r7, r1, r7, r2
 8018ace:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8018ad2:	9307      	str	r3, [sp, #28]
 8018ad4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018ad6:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8018ada:	681b      	ldr	r3, [r3, #0]
 8018adc:	9309      	str	r3, [sp, #36]	; 0x24
 8018ade:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018ae2:	eeb0 aa40 	vmov.f32	s20, s0
 8018ae6:	eef0 9a60 	vmov.f32	s19, s1
 8018aea:	eeb0 9a41 	vmov.f32	s18, s2
 8018aee:	eeb0 8a62 	vmov.f32	s16, s5
 8018af2:	eef0 8a43 	vmov.f32	s17, s6
 8018af6:	eeb0 ca44 	vmov.f32	s24, s8
 8018afa:	eef0 ba64 	vmov.f32	s23, s9
 8018afe:	eeb0 ba45 	vmov.f32	s22, s10
 8018b02:	930a      	str	r3, [sp, #40]	; 0x28
 8018b04:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8018b08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018b0a:	2b00      	cmp	r3, #0
 8018b0c:	dc03      	bgt.n	8018b16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8018b0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018b10:	2b00      	cmp	r3, #0
 8018b12:	f340 816c 	ble.w	8018dee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8018b16:	2d00      	cmp	r5, #0
 8018b18:	f340 80b6 	ble.w	8018c88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8018b1c:	1422      	asrs	r2, r4, #16
 8018b1e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018b22:	d428      	bmi.n	8018b76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd2>
 8018b24:	1c51      	adds	r1, r2, #1
 8018b26:	4588      	cmp	r8, r1
 8018b28:	dd27      	ble.n	8018b7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8018b2a:	2b00      	cmp	r3, #0
 8018b2c:	db25      	blt.n	8018b7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8018b2e:	9808      	ldr	r0, [sp, #32]
 8018b30:	1c59      	adds	r1, r3, #1
 8018b32:	4288      	cmp	r0, r1
 8018b34:	dd21      	ble.n	8018b7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8018b36:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018b38:	1e6b      	subs	r3, r5, #1
 8018b3a:	fb02 4203 	mla	r2, r2, r3, r4
 8018b3e:	1412      	asrs	r2, r2, #16
 8018b40:	d422      	bmi.n	8018b88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018b42:	3201      	adds	r2, #1
 8018b44:	4590      	cmp	r8, r2
 8018b46:	dd1f      	ble.n	8018b88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018b48:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018b4a:	fb02 6303 	mla	r3, r2, r3, r6
 8018b4e:	141b      	asrs	r3, r3, #16
 8018b50:	d41a      	bmi.n	8018b88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018b52:	9a08      	ldr	r2, [sp, #32]
 8018b54:	3301      	adds	r3, #1
 8018b56:	429a      	cmp	r2, r3
 8018b58:	dd16      	ble.n	8018b88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018b5a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8018b5e:	46a9      	mov	r9, r5
 8018b60:	f1b9 0f00 	cmp.w	r9, #0
 8018b64:	f300 80e4 	bgt.w	8018d30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8018b68:	9b07      	ldr	r3, [sp, #28]
 8018b6a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018b6e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018b72:	9307      	str	r3, [sp, #28]
 8018b74:	e08a      	b.n	8018c8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8018b76:	1c51      	adds	r1, r2, #1
 8018b78:	d17d      	bne.n	8018c76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8018b7a:	4542      	cmp	r2, r8
 8018b7c:	da7b      	bge.n	8018c76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8018b7e:	1c5a      	adds	r2, r3, #1
 8018b80:	db79      	blt.n	8018c76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8018b82:	9a08      	ldr	r2, [sp, #32]
 8018b84:	4293      	cmp	r3, r2
 8018b86:	da76      	bge.n	8018c76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8018b88:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8018b8c:	46aa      	mov	sl, r5
 8018b8e:	f1ba 0f00 	cmp.w	sl, #0
 8018b92:	dde9      	ble.n	8018b68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8018b94:	1421      	asrs	r1, r4, #16
 8018b96:	ea4f 4226 	mov.w	r2, r6, asr #16
 8018b9a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018b9e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018ba2:	f100 80b0 	bmi.w	8018d06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x262>
 8018ba6:	f101 0c01 	add.w	ip, r1, #1
 8018baa:	45e0      	cmp	r8, ip
 8018bac:	f340 80ad 	ble.w	8018d0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8018bb0:	2a00      	cmp	r2, #0
 8018bb2:	f2c0 80aa 	blt.w	8018d0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8018bb6:	9f08      	ldr	r7, [sp, #32]
 8018bb8:	f102 0c01 	add.w	ip, r2, #1
 8018bbc:	4567      	cmp	r7, ip
 8018bbe:	f340 80a4 	ble.w	8018d0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8018bc2:	fb02 1208 	mla	r2, r2, r8, r1
 8018bc6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018bc8:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8018bcc:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8018bd0:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8018bd4:	b138      	cbz	r0, 8018be6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x142>
 8018bd6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018bd8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018bda:	4472      	add	r2, lr
 8018bdc:	f83e 7007 	ldrh.w	r7, [lr, r7]
 8018be0:	8852      	ldrh	r2, [r2, #2]
 8018be2:	970c      	str	r7, [sp, #48]	; 0x30
 8018be4:	920d      	str	r2, [sp, #52]	; 0x34
 8018be6:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8018bea:	fb13 f200 	smulbb	r2, r3, r0
 8018bee:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018bf2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018bf6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018bfa:	10d2      	asrs	r2, r2, #3
 8018bfc:	ea4e 0c0c 	orr.w	ip, lr, ip
 8018c00:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018c04:	f1c0 0e10 	rsb	lr, r0, #16
 8018c08:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018c0c:	ebae 0e03 	sub.w	lr, lr, r3
 8018c10:	ea4b 0101 	orr.w	r1, fp, r1
 8018c14:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8018c18:	4359      	muls	r1, r3
 8018c1a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018c1c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8018c20:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8018c24:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018c28:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018c2c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018c30:	ea4c 0c03 	orr.w	ip, ip, r3
 8018c34:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018c36:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018c38:	041b      	lsls	r3, r3, #16
 8018c3a:	fb02 ec0c 	mla	ip, r2, ip, lr
 8018c3e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018c42:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018c46:	ea43 030e 	orr.w	r3, r3, lr
 8018c4a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8018c4e:	fb02 c203 	mla	r2, r2, r3, ip
 8018c52:	0d53      	lsrs	r3, r2, #21
 8018c54:	0952      	lsrs	r2, r2, #5
 8018c56:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018c5a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018c5e:	431a      	orrs	r2, r3
 8018c60:	f8a9 2000 	strh.w	r2, [r9]
 8018c64:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018c66:	441c      	add	r4, r3
 8018c68:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018c6a:	f109 0902 	add.w	r9, r9, #2
 8018c6e:	441e      	add	r6, r3
 8018c70:	f10a 3aff 	add.w	sl, sl, #4294967295
 8018c74:	e78b      	b.n	8018b8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8018c76:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018c78:	441c      	add	r4, r3
 8018c7a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018c7c:	441e      	add	r6, r3
 8018c7e:	9b07      	ldr	r3, [sp, #28]
 8018c80:	3302      	adds	r3, #2
 8018c82:	3d01      	subs	r5, #1
 8018c84:	9307      	str	r3, [sp, #28]
 8018c86:	e746      	b.n	8018b16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8018c88:	f47f af55 	bne.w	8018b36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8018c8c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018c8e:	2b00      	cmp	r3, #0
 8018c90:	f340 80ad 	ble.w	8018dee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8018c94:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8018c98:	ee79 9aab 	vadd.f32	s19, s19, s23
 8018c9c:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8018ca0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018ca2:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8018ca6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018caa:	eef0 6a48 	vmov.f32	s13, s16
 8018cae:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018cb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018cb6:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018cba:	ee16 4a90 	vmov	r4, s13
 8018cbe:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018cc2:	eef0 6a68 	vmov.f32	s13, s17
 8018cc6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018cca:	ee18 2a10 	vmov	r2, s16
 8018cce:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018cd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8018cd6:	ee18 2a90 	vmov	r2, s17
 8018cda:	9329      	str	r3, [sp, #164]	; 0xa4
 8018cdc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018cde:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ce2:	932a      	str	r3, [sp, #168]	; 0xa8
 8018ce4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018ce6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018ce8:	3b01      	subs	r3, #1
 8018cea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018cee:	930b      	str	r3, [sp, #44]	; 0x2c
 8018cf0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018cf2:	ee16 6a90 	vmov	r6, s13
 8018cf6:	bf14      	ite	ne
 8018cf8:	461d      	movne	r5, r3
 8018cfa:	4615      	moveq	r5, r2
 8018cfc:	eef0 8a67 	vmov.f32	s17, s15
 8018d00:	eeb0 8a47 	vmov.f32	s16, s14
 8018d04:	e700      	b.n	8018b08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8018d06:	1c4f      	adds	r7, r1, #1
 8018d08:	d1ac      	bne.n	8018c64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018d0a:	4588      	cmp	r8, r1
 8018d0c:	ddaa      	ble.n	8018c64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018d0e:	1c57      	adds	r7, r2, #1
 8018d10:	dba8      	blt.n	8018c64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018d12:	9f08      	ldr	r7, [sp, #32]
 8018d14:	4297      	cmp	r7, r2
 8018d16:	dda5      	ble.n	8018c64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018d18:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8018d1c:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8018d20:	9700      	str	r7, [sp, #0]
 8018d22:	4643      	mov	r3, r8
 8018d24:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018d26:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018d28:	4649      	mov	r1, r9
 8018d2a:	f7ff fe2f 	bl	801898c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8018d2e:	e799      	b.n	8018c64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018d30:	1422      	asrs	r2, r4, #16
 8018d32:	1431      	asrs	r1, r6, #16
 8018d34:	fb08 2101 	mla	r1, r8, r1, r2
 8018d38:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018d3a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018d3c:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8018d40:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018d44:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8018d48:	8851      	ldrh	r1, [r2, #2]
 8018d4a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018d4e:	f1be 0f00 	cmp.w	lr, #0
 8018d52:	d006      	beq.n	8018d62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8018d54:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018d56:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018d58:	1810      	adds	r0, r2, r0
 8018d5a:	5bd2      	ldrh	r2, [r2, r7]
 8018d5c:	920e      	str	r2, [sp, #56]	; 0x38
 8018d5e:	8842      	ldrh	r2, [r0, #2]
 8018d60:	920f      	str	r2, [sp, #60]	; 0x3c
 8018d62:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8018d66:	fb13 f20e 	smulbb	r2, r3, lr
 8018d6a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018d6e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018d72:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018d76:	10d2      	asrs	r2, r2, #3
 8018d78:	ea40 000c 	orr.w	r0, r0, ip
 8018d7c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018d80:	f1ce 0c10 	rsb	ip, lr, #16
 8018d84:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018d88:	ebac 0c03 	sub.w	ip, ip, r3
 8018d8c:	ea4a 0101 	orr.w	r1, sl, r1
 8018d90:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8018d94:	4359      	muls	r1, r3
 8018d96:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018d98:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018d9c:	fb0c 1c00 	mla	ip, ip, r0, r1
 8018da0:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8018da4:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8018da8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018daa:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018dac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018db0:	041b      	lsls	r3, r3, #16
 8018db2:	ea4a 0000 	orr.w	r0, sl, r0
 8018db6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018dba:	f421 6afc 	bic.w	sl, r1, #2016	; 0x7e0
 8018dbe:	fb02 c000 	mla	r0, r2, r0, ip
 8018dc2:	ea43 0a0a 	orr.w	sl, r3, sl
 8018dc6:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8018dca:	fb02 000a 	mla	r0, r2, sl, r0
 8018dce:	0d43      	lsrs	r3, r0, #21
 8018dd0:	0940      	lsrs	r0, r0, #5
 8018dd2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018dd6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018dda:	4318      	orrs	r0, r3
 8018ddc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018dde:	f82b 0b02 	strh.w	r0, [fp], #2
 8018de2:	441c      	add	r4, r3
 8018de4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018de6:	f109 39ff 	add.w	r9, r9, #4294967295
 8018dea:	441e      	add	r6, r3
 8018dec:	e6b8      	b.n	8018b60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xbc>
 8018dee:	b013      	add	sp, #76	; 0x4c
 8018df0:	ecbd 8b0a 	vpop	{d8-d12}
 8018df4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8018df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018dfc:	8808      	ldrh	r0, [r1, #0]
 8018dfe:	b085      	sub	sp, #20
 8018e00:	1206      	asrs	r6, r0, #8
 8018e02:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8018e06:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018e0a:	9600      	str	r6, [sp, #0]
 8018e0c:	10c6      	asrs	r6, r0, #3
 8018e0e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018e12:	9601      	str	r6, [sp, #4]
 8018e14:	00c0      	lsls	r0, r0, #3
 8018e16:	fb04 c603 	mla	r6, r4, r3, ip
 8018e1a:	b2c0      	uxtb	r0, r0
 8018e1c:	4691      	mov	r9, r2
 8018e1e:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8018e22:	9a00      	ldr	r2, [sp, #0]
 8018e24:	9002      	str	r0, [sp, #8]
 8018e26:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8018e2a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8018e2e:	9a01      	ldr	r2, [sp, #4]
 8018e30:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8018e34:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8018e38:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8018e3c:	2c00      	cmp	r4, #0
 8018e3e:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8018e42:	db3a      	blt.n	8018eba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8018e44:	45a0      	cmp	r8, r4
 8018e46:	dd38      	ble.n	8018eba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8018e48:	f1bc 0f00 	cmp.w	ip, #0
 8018e4c:	db33      	blt.n	8018eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8018e4e:	4563      	cmp	r3, ip
 8018e50:	dd31      	ble.n	8018eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8018e52:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8018e56:	f11c 0601 	adds.w	r6, ip, #1
 8018e5a:	d431      	bmi.n	8018ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8018e5c:	42b3      	cmp	r3, r6
 8018e5e:	dd2f      	ble.n	8018ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8018e60:	b375      	cbz	r5, 8018ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8018e62:	f8de 6004 	ldr.w	r6, [lr, #4]
 8018e66:	3401      	adds	r4, #1
 8018e68:	d42e      	bmi.n	8018ec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8018e6a:	45a0      	cmp	r8, r4
 8018e6c:	dd2c      	ble.n	8018ec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8018e6e:	b35f      	cbz	r7, 8018ec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8018e70:	f1bc 0f00 	cmp.w	ip, #0
 8018e74:	db26      	blt.n	8018ec4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8018e76:	4563      	cmp	r3, ip
 8018e78:	dd24      	ble.n	8018ec4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8018e7a:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8018e7e:	f11c 0c01 	adds.w	ip, ip, #1
 8018e82:	d405      	bmi.n	8018e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8018e84:	4563      	cmp	r3, ip
 8018e86:	dd03      	ble.n	8018e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8018e88:	b115      	cbz	r5, 8018e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8018e8a:	3301      	adds	r3, #1
 8018e8c:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8018e90:	2d0f      	cmp	r5, #15
 8018e92:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8018e96:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8018e9a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018e9e:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8018ea2:	d801      	bhi.n	8018ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 8018ea4:	2f0f      	cmp	r7, #15
 8018ea6:	d911      	bls.n	8018ecc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 8018ea8:	4b82      	ldr	r3, [pc, #520]	; (80190b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 8018eaa:	4a83      	ldr	r2, [pc, #524]	; (80190b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c0>)
 8018eac:	4883      	ldr	r0, [pc, #524]	; (80190bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c4>)
 8018eae:	f240 3173 	movw	r1, #883	; 0x373
 8018eb2:	f002 f9dd 	bl	801b270 <__assert_func>
 8018eb6:	4602      	mov	r2, r0
 8018eb8:	e7cd      	b.n	8018e56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8018eba:	4606      	mov	r6, r0
 8018ebc:	4602      	mov	r2, r0
 8018ebe:	e7d2      	b.n	8018e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8018ec0:	4606      	mov	r6, r0
 8018ec2:	e7d0      	b.n	8018e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8018ec4:	4604      	mov	r4, r0
 8018ec6:	e7da      	b.n	8018e7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x86>
 8018ec8:	4604      	mov	r4, r0
 8018eca:	e7e1      	b.n	8018e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8018ecc:	b2ab      	uxth	r3, r5
 8018ece:	b2bf      	uxth	r7, r7
 8018ed0:	fb03 fe07 	mul.w	lr, r3, r7
 8018ed4:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8018ed8:	011b      	lsls	r3, r3, #4
 8018eda:	eba3 0c0e 	sub.w	ip, r3, lr
 8018ede:	b2bf      	uxth	r7, r7
 8018ee0:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8018ee4:	fa1f fc8c 	uxth.w	ip, ip
 8018ee8:	1bed      	subs	r5, r5, r7
 8018eea:	b2ad      	uxth	r5, r5
 8018eec:	fb0c f30a 	mul.w	r3, ip, sl
 8018ef0:	fb05 330b 	mla	r3, r5, fp, r3
 8018ef4:	fb07 3309 	mla	r3, r7, r9, r3
 8018ef8:	fb0e 3308 	mla	r3, lr, r8, r3
 8018efc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018f00:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018f04:	9303      	str	r3, [sp, #12]
 8018f06:	d018      	beq.n	8018f3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 8018f08:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8018f0c:	fb0b f303 	mul.w	r3, fp, r3
 8018f10:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018f14:	fb0b fb02 	mul.w	fp, fp, r2
 8018f18:	0a1a      	lsrs	r2, r3, #8
 8018f1a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018f1e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8018f22:	441a      	add	r2, r3
 8018f24:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8018f28:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8018f2c:	0a12      	lsrs	r2, r2, #8
 8018f2e:	0a1b      	lsrs	r3, r3, #8
 8018f30:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018f34:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018f38:	431a      	orrs	r2, r3
 8018f3a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018f3e:	d019      	beq.n	8018f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 8018f40:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8018f44:	fb0a fb0b 	mul.w	fp, sl, fp
 8018f48:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018f4c:	fb0a fa06 	mul.w	sl, sl, r6
 8018f50:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8018f54:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018f58:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018f5c:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8018f60:	445e      	add	r6, fp
 8018f62:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8018f66:	0a36      	lsrs	r6, r6, #8
 8018f68:	0a1b      	lsrs	r3, r3, #8
 8018f6a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018f6e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018f72:	431e      	orrs	r6, r3
 8018f74:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018f78:	d019      	beq.n	8018fae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 8018f7a:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8018f7e:	fb09 fa0a 	mul.w	sl, r9, sl
 8018f82:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018f86:	fb09 f904 	mul.w	r9, r9, r4
 8018f8a:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8018f8e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018f92:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018f96:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8018f9a:	4454      	add	r4, sl
 8018f9c:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8018fa0:	0a24      	lsrs	r4, r4, #8
 8018fa2:	0a1b      	lsrs	r3, r3, #8
 8018fa4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018fa8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018fac:	431c      	orrs	r4, r3
 8018fae:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018fb2:	d019      	beq.n	8018fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 8018fb4:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8018fb8:	fb08 f909 	mul.w	r9, r8, r9
 8018fbc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018fc0:	fb08 f800 	mul.w	r8, r8, r0
 8018fc4:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8018fc8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018fcc:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8018fd0:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8018fd4:	4448      	add	r0, r9
 8018fd6:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8018fda:	0a00      	lsrs	r0, r0, #8
 8018fdc:	0a1b      	lsrs	r3, r3, #8
 8018fde:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018fe2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018fe6:	4318      	orrs	r0, r3
 8018fe8:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018fec:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018ff0:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8018ff4:	fb0c f808 	mul.w	r8, ip, r8
 8018ff8:	fb0c f606 	mul.w	r6, ip, r6
 8018ffc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019000:	fb05 6202 	mla	r2, r5, r2, r6
 8019004:	fb05 8803 	mla	r8, r5, r3, r8
 8019008:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801900c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019010:	fb07 8803 	mla	r8, r7, r3, r8
 8019014:	fb07 2704 	mla	r7, r7, r4, r2
 8019018:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801901c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019020:	fb0e 8303 	mla	r3, lr, r3, r8
 8019024:	fb0e 7e00 	mla	lr, lr, r0, r7
 8019028:	0a1b      	lsrs	r3, r3, #8
 801902a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801902e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019032:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8019036:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801903a:	ea43 0e0e 	orr.w	lr, r3, lr
 801903e:	9b03      	ldr	r3, [sp, #12]
 8019040:	b2a4      	uxth	r4, r4
 8019042:	4363      	muls	r3, r4
 8019044:	1c5a      	adds	r2, r3, #1
 8019046:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801904a:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801904e:	9b00      	ldr	r3, [sp, #0]
 8019050:	b2d2      	uxtb	r2, r2
 8019052:	ea4f 451e 	mov.w	r5, lr, lsr #16
 8019056:	fb13 f302 	smulbb	r3, r3, r2
 801905a:	fb05 3304 	mla	r3, r5, r4, r3
 801905e:	b29d      	uxth	r5, r3
 8019060:	9b01      	ldr	r3, [sp, #4]
 8019062:	f3ce 2007 	ubfx	r0, lr, #8, #8
 8019066:	fb13 f302 	smulbb	r3, r3, r2
 801906a:	fb00 3004 	mla	r0, r0, r4, r3
 801906e:	9b02      	ldr	r3, [sp, #8]
 8019070:	fa5f fe8e 	uxtb.w	lr, lr
 8019074:	fb13 f202 	smulbb	r2, r3, r2
 8019078:	fb0e 2e04 	mla	lr, lr, r4, r2
 801907c:	fa1f fe8e 	uxth.w	lr, lr
 8019080:	b280      	uxth	r0, r0
 8019082:	f10e 0201 	add.w	r2, lr, #1
 8019086:	1c6b      	adds	r3, r5, #1
 8019088:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801908c:	1c42      	adds	r2, r0, #1
 801908e:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8019092:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8019096:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801909a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801909e:	0952      	lsrs	r2, r2, #5
 80190a0:	ea43 030e 	orr.w	r3, r3, lr
 80190a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80190a8:	4313      	orrs	r3, r2
 80190aa:	800b      	strh	r3, [r1, #0]
 80190ac:	b005      	add	sp, #20
 80190ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190b2:	bf00      	nop
 80190b4:	0801eea7 	.word	0x0801eea7
 80190b8:	0801f405 	.word	0x0801f405
 80190bc:	0801ef2f 	.word	0x0801ef2f

080190c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80190c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190c4:	ed2d 8b08 	vpush	{d8-d11}
 80190c8:	b099      	sub	sp, #100	; 0x64
 80190ca:	eeb0 aa40 	vmov.f32	s20, s0
 80190ce:	9306      	str	r3, [sp, #24]
 80190d0:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 80190d4:	9307      	str	r3, [sp, #28]
 80190d6:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 80190da:	9216      	str	r2, [sp, #88]	; 0x58
 80190dc:	9310      	str	r3, [sp, #64]	; 0x40
 80190de:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80190e0:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 80190e4:	9113      	str	r1, [sp, #76]	; 0x4c
 80190e6:	9315      	str	r3, [sp, #84]	; 0x54
 80190e8:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80190ec:	9017      	str	r0, [sp, #92]	; 0x5c
 80190ee:	6850      	ldr	r0, [r2, #4]
 80190f0:	6812      	ldr	r2, [r2, #0]
 80190f2:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80190f4:	fb00 1303 	mla	r3, r0, r3, r1
 80190f8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80190fc:	930a      	str	r3, [sp, #40]	; 0x28
 80190fe:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019100:	681b      	ldr	r3, [r3, #0]
 8019102:	9312      	str	r3, [sp, #72]	; 0x48
 8019104:	9b07      	ldr	r3, [sp, #28]
 8019106:	009b      	lsls	r3, r3, #2
 8019108:	eef0 9a60 	vmov.f32	s19, s1
 801910c:	eeb0 9a41 	vmov.f32	s18, s2
 8019110:	eeb0 8a62 	vmov.f32	s16, s5
 8019114:	eef0 8a43 	vmov.f32	s17, s6
 8019118:	eef0 ba44 	vmov.f32	s23, s8
 801911c:	eeb0 ba64 	vmov.f32	s22, s9
 8019120:	eef0 aa45 	vmov.f32	s21, s10
 8019124:	930e      	str	r3, [sp, #56]	; 0x38
 8019126:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019128:	2b00      	cmp	r3, #0
 801912a:	dc03      	bgt.n	8019134 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 801912c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801912e:	2b00      	cmp	r3, #0
 8019130:	f340 8352 	ble.w	80197d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8019134:	9b06      	ldr	r3, [sp, #24]
 8019136:	2b00      	cmp	r3, #0
 8019138:	f340 81a8 	ble.w	801948c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3cc>
 801913c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801913e:	1412      	asrs	r2, r2, #16
 8019140:	ea4f 4324 	mov.w	r3, r4, asr #16
 8019144:	d430      	bmi.n	80191a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8019146:	9807      	ldr	r0, [sp, #28]
 8019148:	1c51      	adds	r1, r2, #1
 801914a:	4288      	cmp	r0, r1
 801914c:	dd2f      	ble.n	80191ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801914e:	2b00      	cmp	r3, #0
 8019150:	db2d      	blt.n	80191ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8019152:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019154:	1c59      	adds	r1, r3, #1
 8019156:	4288      	cmp	r0, r1
 8019158:	dd29      	ble.n	80191ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801915a:	9b06      	ldr	r3, [sp, #24]
 801915c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801915e:	992b      	ldr	r1, [sp, #172]	; 0xac
 8019160:	3b01      	subs	r3, #1
 8019162:	fb02 1203 	mla	r2, r2, r3, r1
 8019166:	1412      	asrs	r2, r2, #16
 8019168:	d42c      	bmi.n	80191c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801916a:	9907      	ldr	r1, [sp, #28]
 801916c:	3201      	adds	r2, #1
 801916e:	4291      	cmp	r1, r2
 8019170:	dd28      	ble.n	80191c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8019172:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8019174:	fb02 4303 	mla	r3, r2, r3, r4
 8019178:	141b      	asrs	r3, r3, #16
 801917a:	d423      	bmi.n	80191c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801917c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801917e:	3301      	adds	r3, #1
 8019180:	429a      	cmp	r2, r3
 8019182:	dd1f      	ble.n	80191c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8019184:	9b06      	ldr	r3, [sp, #24]
 8019186:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 801918a:	f8bd b054 	ldrh.w	fp, [sp, #84]	; 0x54
 801918e:	9311      	str	r3, [sp, #68]	; 0x44
 8019190:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019192:	2b00      	cmp	r3, #0
 8019194:	f300 81e3 	bgt.w	801955e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x49e>
 8019198:	9b06      	ldr	r3, [sp, #24]
 801919a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801919e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80191a0:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80191a4:	930a      	str	r3, [sp, #40]	; 0x28
 80191a6:	e173      	b.n	8019490 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d0>
 80191a8:	1c51      	adds	r1, r2, #1
 80191aa:	f040 8162 	bne.w	8019472 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80191ae:	9907      	ldr	r1, [sp, #28]
 80191b0:	428a      	cmp	r2, r1
 80191b2:	f280 815e 	bge.w	8019472 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80191b6:	1c5f      	adds	r7, r3, #1
 80191b8:	f2c0 815b 	blt.w	8019472 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80191bc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80191be:	4293      	cmp	r3, r2
 80191c0:	f280 8157 	bge.w	8019472 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80191c4:	9b06      	ldr	r3, [sp, #24]
 80191c6:	9314      	str	r3, [sp, #80]	; 0x50
 80191c8:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 80191cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80191ce:	9311      	str	r3, [sp, #68]	; 0x44
 80191d0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80191d2:	2b00      	cmp	r3, #0
 80191d4:	dde0      	ble.n	8019198 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 80191d6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80191d8:	f3c2 3003 	ubfx	r0, r2, #12, #4
 80191dc:	1412      	asrs	r2, r2, #16
 80191de:	ea4f 4324 	mov.w	r3, r4, asr #16
 80191e2:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80191e6:	f100 81a1 	bmi.w	801952c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46c>
 80191ea:	9e07      	ldr	r6, [sp, #28]
 80191ec:	1c55      	adds	r5, r2, #1
 80191ee:	42ae      	cmp	r6, r5
 80191f0:	f340 819e 	ble.w	8019530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80191f4:	2b00      	cmp	r3, #0
 80191f6:	f2c0 819b 	blt.w	8019530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80191fa:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80191fc:	1c5d      	adds	r5, r3, #1
 80191fe:	42ae      	cmp	r6, r5
 8019200:	f340 8196 	ble.w	8019530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8019204:	9d07      	ldr	r5, [sp, #28]
 8019206:	fb03 2305 	mla	r3, r3, r5, r2
 801920a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801920c:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8019210:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8019214:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019218:	2800      	cmp	r0, #0
 801921a:	f000 8178 	beq.w	801950e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 801921e:	686a      	ldr	r2, [r5, #4]
 8019220:	920b      	str	r2, [sp, #44]	; 0x2c
 8019222:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8019226:	2900      	cmp	r1, #0
 8019228:	f000 817a 	beq.w	8019520 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x460>
 801922c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801922e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8019230:	18aa      	adds	r2, r5, r2
 8019232:	59ad      	ldr	r5, [r5, r6]
 8019234:	6852      	ldr	r2, [r2, #4]
 8019236:	9508      	str	r5, [sp, #32]
 8019238:	ea4f 6a15 	mov.w	sl, r5, lsr #24
 801923c:	920c      	str	r2, [sp, #48]	; 0x30
 801923e:	0e15      	lsrs	r5, r2, #24
 8019240:	b280      	uxth	r0, r0
 8019242:	b289      	uxth	r1, r1
 8019244:	fb00 fb01 	mul.w	fp, r0, r1
 8019248:	ebcb 1101 	rsb	r1, fp, r1, lsl #4
 801924c:	0100      	lsls	r0, r0, #4
 801924e:	eba0 090b 	sub.w	r9, r0, fp
 8019252:	b289      	uxth	r1, r1
 8019254:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8019258:	fa1f f989 	uxth.w	r9, r9
 801925c:	1a52      	subs	r2, r2, r1
 801925e:	b292      	uxth	r2, r2
 8019260:	fb09 f008 	mul.w	r0, r9, r8
 8019264:	fb02 000c 	mla	r0, r2, ip, r0
 8019268:	fb01 000a 	mla	r0, r1, sl, r0
 801926c:	fb0b 0005 	mla	r0, fp, r5, r0
 8019270:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019274:	2800      	cmp	r0, #0
 8019276:	f000 80ef 	beq.w	8019458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801927a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801927e:	d01b      	beq.n	80192b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f8>
 8019280:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8019284:	fb0c fe0e 	mul.w	lr, ip, lr
 8019288:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801928c:	fb0c fc03 	mul.w	ip, ip, r3
 8019290:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8019294:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019298:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801929c:	4473      	add	r3, lr
 801929e:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 80192a2:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 80192a6:	0a1b      	lsrs	r3, r3, #8
 80192a8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80192ac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80192b0:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80192b4:	ea43 030e 	orr.w	r3, r3, lr
 80192b8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80192bc:	d01e      	beq.n	80192fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 80192be:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80192c0:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80192c4:	fb08 fc0c 	mul.w	ip, r8, ip
 80192c8:	f406 4e7f 	and.w	lr, r6, #65280	; 0xff00
 80192cc:	fb08 f80e 	mul.w	r8, r8, lr
 80192d0:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 80192d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80192d8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80192dc:	44e6      	add	lr, ip
 80192de:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 80192e2:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80192e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80192ea:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80192ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80192f2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80192f6:	ea4e 0608 	orr.w	r6, lr, r8
 80192fa:	960b      	str	r6, [sp, #44]	; 0x2c
 80192fc:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019300:	d01e      	beq.n	8019340 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x280>
 8019302:	9e08      	ldr	r6, [sp, #32]
 8019304:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019308:	fb0a f808 	mul.w	r8, sl, r8
 801930c:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8019310:	fb0a fa0c 	mul.w	sl, sl, ip
 8019314:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8019318:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801931c:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8019320:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019324:	44c6      	add	lr, r8
 8019326:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801932a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801932e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019332:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019336:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801933a:	ea4e 060a 	orr.w	r6, lr, sl
 801933e:	9608      	str	r6, [sp, #32]
 8019340:	2dff      	cmp	r5, #255	; 0xff
 8019342:	d01d      	beq.n	8019380 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8019344:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019346:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801934a:	fb05 f808 	mul.w	r8, r5, r8
 801934e:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8019352:	fb05 f50c 	mul.w	r5, r5, ip
 8019356:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801935a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801935e:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8019362:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8019366:	44c6      	add	lr, r8
 8019368:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801936c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019370:	0a2d      	lsrs	r5, r5, #8
 8019372:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019376:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801937a:	ea4e 0505 	orr.w	r5, lr, r5
 801937e:	950c      	str	r5, [sp, #48]	; 0x30
 8019380:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019382:	9e08      	ldr	r6, [sp, #32]
 8019384:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019388:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801938c:	fb09 f505 	mul.w	r5, r9, r5
 8019390:	fb02 550c 	mla	r5, r2, ip, r5
 8019394:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8019398:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801939a:	fb01 550c 	mla	r5, r1, ip, r5
 801939e:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80193a2:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80193a4:	fb0b 550c 	mla	r5, fp, ip, r5
 80193a8:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 80193ac:	fb09 f90c 	mul.w	r9, r9, ip
 80193b0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80193b4:	fb02 9303 	mla	r3, r2, r3, r9
 80193b8:	9a08      	ldr	r2, [sp, #32]
 80193ba:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 80193be:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80193c0:	fb01 330e 	mla	r3, r1, lr, r3
 80193c4:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80193c8:	fb0b 3b01 	mla	fp, fp, r1, r3
 80193cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80193ce:	0a2d      	lsrs	r5, r5, #8
 80193d0:	f8b3 c000 	ldrh.w	ip, [r3]
 80193d4:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80193d8:	fb00 f307 	mul.w	r3, r0, r7
 80193dc:	1c58      	adds	r0, r3, #1
 80193de:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80193e2:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 80193e6:	ea45 050b 	orr.w	r5, r5, fp
 80193ea:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80193ee:	0c29      	lsrs	r1, r5, #16
 80193f0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80193f4:	ea4f 232c 	mov.w	r3, ip, asr #8
 80193f8:	b2c0      	uxtb	r0, r0
 80193fa:	fb11 f107 	smulbb	r1, r1, r7
 80193fe:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8019402:	fb03 1300 	mla	r3, r3, r0, r1
 8019406:	b299      	uxth	r1, r3
 8019408:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801940c:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8019410:	fb13 f307 	smulbb	r3, r3, r7
 8019414:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019418:	fb02 3200 	mla	r2, r2, r0, r3
 801941c:	b2ed      	uxtb	r5, r5
 801941e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8019422:	b2db      	uxtb	r3, r3
 8019424:	fb15 f507 	smulbb	r5, r5, r7
 8019428:	fb03 5500 	mla	r5, r3, r0, r5
 801942c:	b292      	uxth	r2, r2
 801942e:	b2ad      	uxth	r5, r5
 8019430:	1c4b      	adds	r3, r1, #1
 8019432:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8019436:	1c68      	adds	r0, r5, #1
 8019438:	1c51      	adds	r1, r2, #1
 801943a:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801943e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019442:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8019446:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801944a:	0952      	lsrs	r2, r2, #5
 801944c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019450:	432b      	orrs	r3, r5
 8019452:	4313      	orrs	r3, r2
 8019454:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019456:	8013      	strh	r3, [r2, #0]
 8019458:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801945a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801945c:	3302      	adds	r3, #2
 801945e:	9311      	str	r3, [sp, #68]	; 0x44
 8019460:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019462:	4413      	add	r3, r2
 8019464:	932b      	str	r3, [sp, #172]	; 0xac
 8019466:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019468:	441c      	add	r4, r3
 801946a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801946c:	3b01      	subs	r3, #1
 801946e:	9314      	str	r3, [sp, #80]	; 0x50
 8019470:	e6ae      	b.n	80191d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8019472:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019474:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019476:	4413      	add	r3, r2
 8019478:	932b      	str	r3, [sp, #172]	; 0xac
 801947a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801947c:	441c      	add	r4, r3
 801947e:	9b06      	ldr	r3, [sp, #24]
 8019480:	3b01      	subs	r3, #1
 8019482:	9306      	str	r3, [sp, #24]
 8019484:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019486:	3302      	adds	r3, #2
 8019488:	930a      	str	r3, [sp, #40]	; 0x28
 801948a:	e653      	b.n	8019134 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 801948c:	f47f ae65 	bne.w	801915a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8019490:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019492:	2b00      	cmp	r3, #0
 8019494:	f340 81a0 	ble.w	80197d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8019498:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801949c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80194a0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80194a4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80194a6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80194aa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80194ae:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80194b2:	eef0 6a48 	vmov.f32	s13, s16
 80194b6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80194ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80194be:	ee37 8a48 	vsub.f32	s16, s14, s16
 80194c2:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 80194c6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80194ca:	eef0 6a68 	vmov.f32	s13, s17
 80194ce:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80194d2:	ee18 2a10 	vmov	r2, s16
 80194d6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80194da:	fb92 f3f3 	sdiv	r3, r2, r3
 80194de:	ee18 2a90 	vmov	r2, s17
 80194e2:	932d      	str	r3, [sp, #180]	; 0xb4
 80194e4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80194e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80194ea:	932e      	str	r3, [sp, #184]	; 0xb8
 80194ec:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80194ee:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80194f0:	3b01      	subs	r3, #1
 80194f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80194f6:	9313      	str	r3, [sp, #76]	; 0x4c
 80194f8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80194fa:	bf08      	it	eq
 80194fc:	4613      	moveq	r3, r2
 80194fe:	ee16 4a90 	vmov	r4, s13
 8019502:	9306      	str	r3, [sp, #24]
 8019504:	eef0 8a67 	vmov.f32	s17, s15
 8019508:	eeb0 8a47 	vmov.f32	s16, s14
 801950c:	e60b      	b.n	8019126 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 801950e:	b151      	cbz	r1, 8019526 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8019510:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019512:	58aa      	ldr	r2, [r5, r2]
 8019514:	9208      	str	r2, [sp, #32]
 8019516:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 801951a:	25ff      	movs	r5, #255	; 0xff
 801951c:	46a8      	mov	r8, r5
 801951e:	e68f      	b.n	8019240 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8019520:	25ff      	movs	r5, #255	; 0xff
 8019522:	46aa      	mov	sl, r5
 8019524:	e68c      	b.n	8019240 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8019526:	25ff      	movs	r5, #255	; 0xff
 8019528:	46aa      	mov	sl, r5
 801952a:	e7f7      	b.n	801951c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45c>
 801952c:	1c56      	adds	r6, r2, #1
 801952e:	d193      	bne.n	8019458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019530:	9d07      	ldr	r5, [sp, #28]
 8019532:	4295      	cmp	r5, r2
 8019534:	dd90      	ble.n	8019458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019536:	1c5d      	adds	r5, r3, #1
 8019538:	db8e      	blt.n	8019458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801953a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801953c:	429d      	cmp	r5, r3
 801953e:	dd8b      	ble.n	8019458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019540:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019542:	9201      	str	r2, [sp, #4]
 8019544:	e9cd 3002 	strd	r3, r0, [sp, #8]
 8019548:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801954a:	9300      	str	r3, [sp, #0]
 801954c:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8019550:	9b07      	ldr	r3, [sp, #28]
 8019552:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8019554:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
 8019558:	f7ff fc4e 	bl	8018df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801955c:	e77c      	b.n	8019458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801955e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019560:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019562:	9d07      	ldr	r5, [sp, #28]
 8019564:	1412      	asrs	r2, r2, #16
 8019566:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801956a:	1423      	asrs	r3, r4, #16
 801956c:	fb05 2303 	mla	r3, r5, r3, r2
 8019570:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019572:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8019576:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801957a:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801957e:	0e1e      	lsrs	r6, r3, #24
 8019580:	2900      	cmp	r1, #0
 8019582:	f000 811a 	beq.w	80197ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fa>
 8019586:	686a      	ldr	r2, [r5, #4]
 8019588:	920d      	str	r2, [sp, #52]	; 0x34
 801958a:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 801958e:	2800      	cmp	r0, #0
 8019590:	f000 811c 	beq.w	80197cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>
 8019594:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019596:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8019598:	18aa      	adds	r2, r5, r2
 801959a:	59ed      	ldr	r5, [r5, r7]
 801959c:	6852      	ldr	r2, [r2, #4]
 801959e:	9509      	str	r5, [sp, #36]	; 0x24
 80195a0:	ea4f 6815 	mov.w	r8, r5, lsr #24
 80195a4:	920f      	str	r2, [sp, #60]	; 0x3c
 80195a6:	0e15      	lsrs	r5, r2, #24
 80195a8:	b289      	uxth	r1, r1
 80195aa:	b280      	uxth	r0, r0
 80195ac:	fb01 f900 	mul.w	r9, r1, r0
 80195b0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80195b4:	0109      	lsls	r1, r1, #4
 80195b6:	eba1 0e09 	sub.w	lr, r1, r9
 80195ba:	b280      	uxth	r0, r0
 80195bc:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 80195c0:	fa1f fe8e 	uxth.w	lr, lr
 80195c4:	1a12      	subs	r2, r2, r0
 80195c6:	b292      	uxth	r2, r2
 80195c8:	fb0e f10c 	mul.w	r1, lr, ip
 80195cc:	fb02 1106 	mla	r1, r2, r6, r1
 80195d0:	fb00 1108 	mla	r1, r0, r8, r1
 80195d4:	fb09 1105 	mla	r1, r9, r5, r1
 80195d8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80195dc:	2900      	cmp	r1, #0
 80195de:	f000 80e0 	beq.w	80197a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 80195e2:	2eff      	cmp	r6, #255	; 0xff
 80195e4:	d016      	beq.n	8019614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x554>
 80195e6:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80195ea:	4377      	muls	r7, r6
 80195ec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80195f0:	435e      	muls	r6, r3
 80195f2:	0a3b      	lsrs	r3, r7, #8
 80195f4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80195f8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80195fc:	443b      	add	r3, r7
 80195fe:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8019602:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8019606:	0a1b      	lsrs	r3, r3, #8
 8019608:	0a3f      	lsrs	r7, r7, #8
 801960a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801960e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019612:	433b      	orrs	r3, r7
 8019614:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019618:	d01d      	beq.n	8019656 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 801961a:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 801961c:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801961e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019622:	fb0c f606 	mul.w	r6, ip, r6
 8019626:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801962a:	fb0c fc07 	mul.w	ip, ip, r7
 801962e:	0a37      	lsrs	r7, r6, #8
 8019630:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019634:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8019638:	4437      	add	r7, r6
 801963a:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 801963e:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8019642:	0a3f      	lsrs	r7, r7, #8
 8019644:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019648:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801964c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019650:	ea47 060c 	orr.w	r6, r7, ip
 8019654:	960d      	str	r6, [sp, #52]	; 0x34
 8019656:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801965a:	d01d      	beq.n	8019698 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d8>
 801965c:	9e09      	ldr	r6, [sp, #36]	; 0x24
 801965e:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8019662:	fb08 fc0c 	mul.w	ip, r8, ip
 8019666:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801966a:	fb08 f806 	mul.w	r8, r8, r6
 801966e:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8019672:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8019676:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801967a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801967e:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8019682:	4467      	add	r7, ip
 8019684:	0a3f      	lsrs	r7, r7, #8
 8019686:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801968a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801968e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019692:	ea47 0608 	orr.w	r6, r7, r8
 8019696:	9609      	str	r6, [sp, #36]	; 0x24
 8019698:	2dff      	cmp	r5, #255	; 0xff
 801969a:	d01a      	beq.n	80196d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x612>
 801969c:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801969e:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80196a2:	fb05 fc0c 	mul.w	ip, r5, ip
 80196a6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80196aa:	4375      	muls	r5, r6
 80196ac:	ea4f 271c 	mov.w	r7, ip, lsr #8
 80196b0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80196b4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80196b8:	f505 7680 	add.w	r6, r5, #256	; 0x100
 80196bc:	4467      	add	r7, ip
 80196be:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 80196c2:	0a3f      	lsrs	r7, r7, #8
 80196c4:	0a2d      	lsrs	r5, r5, #8
 80196c6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80196ca:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80196ce:	433d      	orrs	r5, r7
 80196d0:	950f      	str	r5, [sp, #60]	; 0x3c
 80196d2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80196d4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80196d8:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 80196dc:	fb0e f505 	mul.w	r5, lr, r5
 80196e0:	fb02 5506 	mla	r5, r2, r6, r5
 80196e4:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80196e6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80196ea:	fb00 5506 	mla	r5, r0, r6, r5
 80196ee:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80196f0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80196f4:	fb09 5506 	mla	r5, r9, r6, r5
 80196f8:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80196fa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80196fe:	fb0e fe06 	mul.w	lr, lr, r6
 8019702:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019706:	fb02 e303 	mla	r3, r2, r3, lr
 801970a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801970c:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8019710:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019712:	fb00 3307 	mla	r3, r0, r7, r3
 8019716:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801971a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801971e:	fb01 f10b 	mul.w	r1, r1, fp
 8019722:	0a2d      	lsrs	r5, r5, #8
 8019724:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019728:	f8ba 0000 	ldrh.w	r0, [sl]
 801972c:	1c4b      	adds	r3, r1, #1
 801972e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019732:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019736:	ea45 050c 	orr.w	r5, r5, ip
 801973a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801973e:	1202      	asrs	r2, r0, #8
 8019740:	0c2b      	lsrs	r3, r5, #16
 8019742:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8019746:	b2c9      	uxtb	r1, r1
 8019748:	fb13 f30b 	smulbb	r3, r3, fp
 801974c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019750:	fb02 3201 	mla	r2, r2, r1, r3
 8019754:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8019758:	10c3      	asrs	r3, r0, #3
 801975a:	b2ed      	uxtb	r5, r5
 801975c:	00c0      	lsls	r0, r0, #3
 801975e:	b2c0      	uxtb	r0, r0
 8019760:	fb15 f50b 	smulbb	r5, r5, fp
 8019764:	fb00 5001 	mla	r0, r0, r1, r5
 8019768:	b292      	uxth	r2, r2
 801976a:	fb16 f60b 	smulbb	r6, r6, fp
 801976e:	b280      	uxth	r0, r0
 8019770:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8019774:	fb03 6301 	mla	r3, r3, r1, r6
 8019778:	1c51      	adds	r1, r2, #1
 801977a:	1c46      	adds	r6, r0, #1
 801977c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019780:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8019784:	b29b      	uxth	r3, r3
 8019786:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801978a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801978e:	4332      	orrs	r2, r6
 8019790:	1c5e      	adds	r6, r3, #1
 8019792:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8019796:	095b      	lsrs	r3, r3, #5
 8019798:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801979c:	431a      	orrs	r2, r3
 801979e:	f8aa 2000 	strh.w	r2, [sl]
 80197a2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80197a4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80197a6:	4413      	add	r3, r2
 80197a8:	932b      	str	r3, [sp, #172]	; 0xac
 80197aa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80197ac:	441c      	add	r4, r3
 80197ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80197b0:	3b01      	subs	r3, #1
 80197b2:	f10a 0a02 	add.w	sl, sl, #2
 80197b6:	9311      	str	r3, [sp, #68]	; 0x44
 80197b8:	e4ea      	b.n	8019190 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 80197ba:	b150      	cbz	r0, 80197d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x712>
 80197bc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80197be:	58aa      	ldr	r2, [r5, r2]
 80197c0:	9209      	str	r2, [sp, #36]	; 0x24
 80197c2:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80197c6:	25ff      	movs	r5, #255	; 0xff
 80197c8:	46ac      	mov	ip, r5
 80197ca:	e6ed      	b.n	80195a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 80197cc:	25ff      	movs	r5, #255	; 0xff
 80197ce:	46a8      	mov	r8, r5
 80197d0:	e6ea      	b.n	80195a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 80197d2:	25ff      	movs	r5, #255	; 0xff
 80197d4:	46a8      	mov	r8, r5
 80197d6:	e7f7      	b.n	80197c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 80197d8:	b019      	add	sp, #100	; 0x64
 80197da:	ecbd 8b08 	vpop	{d8-d11}
 80197de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080197e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80197e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197e8:	8808      	ldrh	r0, [r1, #0]
 80197ea:	b085      	sub	sp, #20
 80197ec:	1206      	asrs	r6, r0, #8
 80197ee:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 80197f2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80197f6:	9600      	str	r6, [sp, #0]
 80197f8:	10c6      	asrs	r6, r0, #3
 80197fa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80197fe:	9601      	str	r6, [sp, #4]
 8019800:	00c0      	lsls	r0, r0, #3
 8019802:	fb04 c603 	mla	r6, r4, r3, ip
 8019806:	b2c0      	uxtb	r0, r0
 8019808:	4691      	mov	r9, r2
 801980a:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 801980e:	9a00      	ldr	r2, [sp, #0]
 8019810:	9002      	str	r0, [sp, #8]
 8019812:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8019816:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 801981a:	9a01      	ldr	r2, [sp, #4]
 801981c:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8019820:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8019824:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8019828:	2c00      	cmp	r4, #0
 801982a:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 801982e:	db3a      	blt.n	80198a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8019830:	45a0      	cmp	r8, r4
 8019832:	dd38      	ble.n	80198a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8019834:	f1bc 0f00 	cmp.w	ip, #0
 8019838:	db33      	blt.n	80198a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801983a:	4563      	cmp	r3, ip
 801983c:	dd31      	ble.n	80198a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801983e:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8019842:	f11c 0601 	adds.w	r6, ip, #1
 8019846:	d431      	bmi.n	80198ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8019848:	42b3      	cmp	r3, r6
 801984a:	dd2f      	ble.n	80198ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 801984c:	b375      	cbz	r5, 80198ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 801984e:	f8de 6004 	ldr.w	r6, [lr, #4]
 8019852:	3401      	adds	r4, #1
 8019854:	d42e      	bmi.n	80198b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8019856:	45a0      	cmp	r8, r4
 8019858:	dd2c      	ble.n	80198b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801985a:	b35f      	cbz	r7, 80198b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801985c:	f1bc 0f00 	cmp.w	ip, #0
 8019860:	db26      	blt.n	80198b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8019862:	4563      	cmp	r3, ip
 8019864:	dd24      	ble.n	80198b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8019866:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 801986a:	f11c 0c01 	adds.w	ip, ip, #1
 801986e:	d405      	bmi.n	801987c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8019870:	4563      	cmp	r3, ip
 8019872:	dd03      	ble.n	801987c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8019874:	b115      	cbz	r5, 801987c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8019876:	3301      	adds	r3, #1
 8019878:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 801987c:	2d0f      	cmp	r5, #15
 801987e:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019882:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8019886:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801988a:	ea4f 6810 	mov.w	r8, r0, lsr #24
 801988e:	d801      	bhi.n	8019894 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8019890:	2f0f      	cmp	r7, #15
 8019892:	d911      	bls.n	80198b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 8019894:	4b7b      	ldr	r3, [pc, #492]	; (8019a84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 8019896:	4a7c      	ldr	r2, [pc, #496]	; (8019a88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 8019898:	487c      	ldr	r0, [pc, #496]	; (8019a8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a8>)
 801989a:	f240 3173 	movw	r1, #883	; 0x373
 801989e:	f001 fce7 	bl	801b270 <__assert_func>
 80198a2:	4602      	mov	r2, r0
 80198a4:	e7cd      	b.n	8019842 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 80198a6:	4606      	mov	r6, r0
 80198a8:	4602      	mov	r2, r0
 80198aa:	e7d2      	b.n	8019852 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 80198ac:	4606      	mov	r6, r0
 80198ae:	e7d0      	b.n	8019852 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 80198b0:	4604      	mov	r4, r0
 80198b2:	e7da      	b.n	801986a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 80198b4:	4604      	mov	r4, r0
 80198b6:	e7e1      	b.n	801987c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 80198b8:	b2ab      	uxth	r3, r5
 80198ba:	b2bf      	uxth	r7, r7
 80198bc:	fb03 fe07 	mul.w	lr, r3, r7
 80198c0:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80198c4:	011b      	lsls	r3, r3, #4
 80198c6:	eba3 0c0e 	sub.w	ip, r3, lr
 80198ca:	b2bf      	uxth	r7, r7
 80198cc:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 80198d0:	fa1f fc8c 	uxth.w	ip, ip
 80198d4:	1bed      	subs	r5, r5, r7
 80198d6:	b2ad      	uxth	r5, r5
 80198d8:	fb0c f30a 	mul.w	r3, ip, sl
 80198dc:	fb05 330b 	mla	r3, r5, fp, r3
 80198e0:	fb07 3309 	mla	r3, r7, r9, r3
 80198e4:	fb0e 3308 	mla	r3, lr, r8, r3
 80198e8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80198ec:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80198f0:	9303      	str	r3, [sp, #12]
 80198f2:	d018      	beq.n	8019926 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 80198f4:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80198f8:	fb0b f303 	mul.w	r3, fp, r3
 80198fc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019900:	fb0b fb02 	mul.w	fp, fp, r2
 8019904:	0a1a      	lsrs	r2, r3, #8
 8019906:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801990a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801990e:	441a      	add	r2, r3
 8019910:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8019914:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8019918:	0a12      	lsrs	r2, r2, #8
 801991a:	0a1b      	lsrs	r3, r3, #8
 801991c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019920:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019924:	431a      	orrs	r2, r3
 8019926:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801992a:	d019      	beq.n	8019960 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 801992c:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8019930:	fb0a fb0b 	mul.w	fp, sl, fp
 8019934:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019938:	fb0a fa06 	mul.w	sl, sl, r6
 801993c:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8019940:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019944:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019948:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 801994c:	445e      	add	r6, fp
 801994e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8019952:	0a36      	lsrs	r6, r6, #8
 8019954:	0a1b      	lsrs	r3, r3, #8
 8019956:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801995a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801995e:	431e      	orrs	r6, r3
 8019960:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019964:	d019      	beq.n	801999a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 8019966:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801996a:	fb09 fa0a 	mul.w	sl, r9, sl
 801996e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019972:	fb09 f904 	mul.w	r9, r9, r4
 8019976:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801997a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801997e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019982:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8019986:	4454      	add	r4, sl
 8019988:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 801998c:	0a24      	lsrs	r4, r4, #8
 801998e:	0a1b      	lsrs	r3, r3, #8
 8019990:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019994:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019998:	431c      	orrs	r4, r3
 801999a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801999e:	d019      	beq.n	80199d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 80199a0:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 80199a4:	fb08 f909 	mul.w	r9, r8, r9
 80199a8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80199ac:	fb08 f800 	mul.w	r8, r8, r0
 80199b0:	ea4f 2019 	mov.w	r0, r9, lsr #8
 80199b4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80199b8:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80199bc:	f508 7380 	add.w	r3, r8, #256	; 0x100
 80199c0:	4448      	add	r0, r9
 80199c2:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80199c6:	0a00      	lsrs	r0, r0, #8
 80199c8:	0a1b      	lsrs	r3, r3, #8
 80199ca:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80199ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80199d2:	4318      	orrs	r0, r3
 80199d4:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80199d8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80199dc:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80199e0:	fb0c f808 	mul.w	r8, ip, r8
 80199e4:	fb0c f606 	mul.w	r6, ip, r6
 80199e8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80199ec:	fb05 8803 	mla	r8, r5, r3, r8
 80199f0:	fb05 6202 	mla	r2, r5, r2, r6
 80199f4:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 80199f8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80199fc:	fb07 8803 	mla	r8, r7, r3, r8
 8019a00:	fb07 2704 	mla	r7, r7, r4, r2
 8019a04:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8019a08:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019a0c:	fb0e 8303 	mla	r3, lr, r3, r8
 8019a10:	fb0e 7e00 	mla	lr, lr, r0, r7
 8019a14:	0a1b      	lsrs	r3, r3, #8
 8019a16:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019a1a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019a1e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019a22:	ea43 0e0e 	orr.w	lr, r3, lr
 8019a26:	9b03      	ldr	r3, [sp, #12]
 8019a28:	9800      	ldr	r0, [sp, #0]
 8019a2a:	9c01      	ldr	r4, [sp, #4]
 8019a2c:	9a02      	ldr	r2, [sp, #8]
 8019a2e:	43db      	mvns	r3, r3
 8019a30:	b2db      	uxtb	r3, r3
 8019a32:	4358      	muls	r0, r3
 8019a34:	435c      	muls	r4, r3
 8019a36:	435a      	muls	r2, r3
 8019a38:	1c43      	adds	r3, r0, #1
 8019a3a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019a3e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8019a42:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019a46:	4b12      	ldr	r3, [pc, #72]	; (8019a90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2ac>)
 8019a48:	ea03 2300 	and.w	r3, r3, r0, lsl #8
 8019a4c:	1c50      	adds	r0, r2, #1
 8019a4e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019a52:	fa5f f28e 	uxtb.w	r2, lr
 8019a56:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8019a5a:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8019a5e:	1c62      	adds	r2, r4, #1
 8019a60:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019a64:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8019a68:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8019a6c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019a70:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8019a74:	ea43 0e0e 	orr.w	lr, r3, lr
 8019a78:	f8a1 e000 	strh.w	lr, [r1]
 8019a7c:	b005      	add	sp, #20
 8019a7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019a82:	bf00      	nop
 8019a84:	0801eea7 	.word	0x0801eea7
 8019a88:	0801f405 	.word	0x0801f405
 8019a8c:	0801ef2f 	.word	0x0801ef2f
 8019a90:	fffff800 	.word	0xfffff800

08019a94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8019a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a98:	ed2d 8b08 	vpush	{d8-d11}
 8019a9c:	b097      	sub	sp, #92	; 0x5c
 8019a9e:	eeb0 aa40 	vmov.f32	s20, s0
 8019aa2:	9306      	str	r3, [sp, #24]
 8019aa4:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 8019aa8:	9307      	str	r3, [sp, #28]
 8019aaa:	9214      	str	r2, [sp, #80]	; 0x50
 8019aac:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8019ab0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019ab2:	9112      	str	r1, [sp, #72]	; 0x48
 8019ab4:	9310      	str	r3, [sp, #64]	; 0x40
 8019ab6:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8019aba:	9015      	str	r0, [sp, #84]	; 0x54
 8019abc:	6850      	ldr	r0, [r2, #4]
 8019abe:	6812      	ldr	r2, [r2, #0]
 8019ac0:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8019ac2:	fb00 1303 	mla	r3, r0, r3, r1
 8019ac6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019aca:	930a      	str	r3, [sp, #40]	; 0x28
 8019acc:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019ace:	681b      	ldr	r3, [r3, #0]
 8019ad0:	9311      	str	r3, [sp, #68]	; 0x44
 8019ad2:	9b07      	ldr	r3, [sp, #28]
 8019ad4:	009b      	lsls	r3, r3, #2
 8019ad6:	eef0 9a60 	vmov.f32	s19, s1
 8019ada:	eeb0 9a41 	vmov.f32	s18, s2
 8019ade:	eeb0 8a62 	vmov.f32	s16, s5
 8019ae2:	eef0 8a43 	vmov.f32	s17, s6
 8019ae6:	eef0 ba44 	vmov.f32	s23, s8
 8019aea:	eeb0 ba64 	vmov.f32	s22, s9
 8019aee:	eef0 aa45 	vmov.f32	s21, s10
 8019af2:	930e      	str	r3, [sp, #56]	; 0x38
 8019af4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019af6:	2b00      	cmp	r3, #0
 8019af8:	dc03      	bgt.n	8019b02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8019afa:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019afc:	2b00      	cmp	r3, #0
 8019afe:	f340 8361 	ble.w	801a1c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8019b02:	9b06      	ldr	r3, [sp, #24]
 8019b04:	2b00      	cmp	r3, #0
 8019b06:	f340 819b 	ble.w	8019e40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8019b0a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019b0c:	1412      	asrs	r2, r2, #16
 8019b0e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019b12:	d42e      	bmi.n	8019b72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8019b14:	9807      	ldr	r0, [sp, #28]
 8019b16:	1c51      	adds	r1, r2, #1
 8019b18:	4288      	cmp	r0, r1
 8019b1a:	dd2d      	ble.n	8019b78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019b1c:	2b00      	cmp	r3, #0
 8019b1e:	db2b      	blt.n	8019b78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019b20:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019b22:	1c59      	adds	r1, r3, #1
 8019b24:	4288      	cmp	r0, r1
 8019b26:	dd27      	ble.n	8019b78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019b28:	9b06      	ldr	r3, [sp, #24]
 8019b2a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019b2c:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8019b2e:	3b01      	subs	r3, #1
 8019b30:	fb02 1203 	mla	r2, r2, r3, r1
 8019b34:	1412      	asrs	r2, r2, #16
 8019b36:	d42a      	bmi.n	8019b8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8019b38:	9907      	ldr	r1, [sp, #28]
 8019b3a:	3201      	adds	r2, #1
 8019b3c:	4291      	cmp	r1, r2
 8019b3e:	dd26      	ble.n	8019b8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8019b40:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8019b42:	fb02 5303 	mla	r3, r2, r3, r5
 8019b46:	141b      	asrs	r3, r3, #16
 8019b48:	d421      	bmi.n	8019b8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8019b4a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019b4c:	3301      	adds	r3, #1
 8019b4e:	429a      	cmp	r2, r3
 8019b50:	dd1d      	ble.n	8019b8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8019b52:	9b06      	ldr	r3, [sp, #24]
 8019b54:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8019b58:	9313      	str	r3, [sp, #76]	; 0x4c
 8019b5a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019b5c:	2b00      	cmp	r3, #0
 8019b5e:	f300 81e3 	bgt.w	8019f28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x494>
 8019b62:	9b06      	ldr	r3, [sp, #24]
 8019b64:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019b68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019b6a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019b6e:	930a      	str	r3, [sp, #40]	; 0x28
 8019b70:	e168      	b.n	8019e44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b0>
 8019b72:	1c51      	adds	r1, r2, #1
 8019b74:	f040 8157 	bne.w	8019e26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8019b78:	9907      	ldr	r1, [sp, #28]
 8019b7a:	428a      	cmp	r2, r1
 8019b7c:	f280 8153 	bge.w	8019e26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8019b80:	1c5f      	adds	r7, r3, #1
 8019b82:	f2c0 8150 	blt.w	8019e26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8019b86:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019b88:	4293      	cmp	r3, r2
 8019b8a:	f280 814c 	bge.w	8019e26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8019b8e:	9b06      	ldr	r3, [sp, #24]
 8019b90:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019b92:	9313      	str	r3, [sp, #76]	; 0x4c
 8019b94:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019b96:	2b00      	cmp	r3, #0
 8019b98:	dde3      	ble.n	8019b62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 8019b9a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8019b9c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019b9e:	1409      	asrs	r1, r1, #16
 8019ba0:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019ba4:	f3c2 3203 	ubfx	r2, r2, #12, #4
 8019ba8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019bac:	f100 81a3 	bmi.w	8019ef6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x462>
 8019bb0:	9c07      	ldr	r4, [sp, #28]
 8019bb2:	1c4e      	adds	r6, r1, #1
 8019bb4:	42b4      	cmp	r4, r6
 8019bb6:	f340 81a0 	ble.w	8019efa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8019bba:	2b00      	cmp	r3, #0
 8019bbc:	f2c0 819d 	blt.w	8019efa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8019bc0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019bc2:	1c5e      	adds	r6, r3, #1
 8019bc4:	42b4      	cmp	r4, r6
 8019bc6:	f340 8198 	ble.w	8019efa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8019bca:	9c07      	ldr	r4, [sp, #28]
 8019bcc:	fb03 1304 	mla	r3, r3, r4, r1
 8019bd0:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019bd2:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8019bd6:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8019bda:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019bde:	2a00      	cmp	r2, #0
 8019be0:	f000 816f 	beq.w	8019ec2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8019be4:	6871      	ldr	r1, [r6, #4]
 8019be6:	910b      	str	r1, [sp, #44]	; 0x2c
 8019be8:	ea4f 6811 	mov.w	r8, r1, lsr #24
 8019bec:	2800      	cmp	r0, #0
 8019bee:	f000 8171 	beq.w	8019ed4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x440>
 8019bf2:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019bf4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019bf6:	1871      	adds	r1, r6, r1
 8019bf8:	5934      	ldr	r4, [r6, r4]
 8019bfa:	6849      	ldr	r1, [r1, #4]
 8019bfc:	9408      	str	r4, [sp, #32]
 8019bfe:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 8019c02:	910c      	str	r1, [sp, #48]	; 0x30
 8019c04:	0e0e      	lsrs	r6, r1, #24
 8019c06:	b292      	uxth	r2, r2
 8019c08:	b280      	uxth	r0, r0
 8019c0a:	fb02 fb00 	mul.w	fp, r2, r0
 8019c0e:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8019c12:	0112      	lsls	r2, r2, #4
 8019c14:	eba2 090b 	sub.w	r9, r2, fp
 8019c18:	b280      	uxth	r0, r0
 8019c1a:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8019c1e:	fa1f f989 	uxth.w	r9, r9
 8019c22:	1a09      	subs	r1, r1, r0
 8019c24:	b289      	uxth	r1, r1
 8019c26:	fb09 f208 	mul.w	r2, r9, r8
 8019c2a:	fb01 220c 	mla	r2, r1, ip, r2
 8019c2e:	fb00 220a 	mla	r2, r0, sl, r2
 8019c32:	fb0b 2206 	mla	r2, fp, r6, r2
 8019c36:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8019c3a:	2a00      	cmp	r2, #0
 8019c3c:	f000 80e8 	beq.w	8019e10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019c40:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019c44:	d01b      	beq.n	8019c7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8019c46:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8019c4a:	fb0c fe0e 	mul.w	lr, ip, lr
 8019c4e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019c52:	fb0c fc03 	mul.w	ip, ip, r3
 8019c56:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8019c5a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019c5e:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8019c62:	4473      	add	r3, lr
 8019c64:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8019c68:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8019c6c:	0a1b      	lsrs	r3, r3, #8
 8019c6e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019c72:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019c76:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019c7a:	ea43 030e 	orr.w	r3, r3, lr
 8019c7e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019c82:	d01e      	beq.n	8019cc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x22e>
 8019c84:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019c86:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019c8a:	fb08 fc0c 	mul.w	ip, r8, ip
 8019c8e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8019c92:	fb08 f80e 	mul.w	r8, r8, lr
 8019c96:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8019c9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c9e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019ca2:	44e6      	add	lr, ip
 8019ca4:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8019ca8:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8019cac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019cb0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019cb4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019cb8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019cbc:	ea4e 0408 	orr.w	r4, lr, r8
 8019cc0:	940b      	str	r4, [sp, #44]	; 0x2c
 8019cc2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019cc6:	d01e      	beq.n	8019d06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x272>
 8019cc8:	9c08      	ldr	r4, [sp, #32]
 8019cca:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8019cce:	fb0a f808 	mul.w	r8, sl, r8
 8019cd2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8019cd6:	fb0a fa0c 	mul.w	sl, sl, ip
 8019cda:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8019cde:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019ce2:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8019ce6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019cea:	44c6      	add	lr, r8
 8019cec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019cf0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019cf4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019cf8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019cfc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019d00:	ea4e 040a 	orr.w	r4, lr, sl
 8019d04:	9408      	str	r4, [sp, #32]
 8019d06:	2eff      	cmp	r6, #255	; 0xff
 8019d08:	d01d      	beq.n	8019d46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b2>
 8019d0a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019d0c:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8019d10:	fb06 f808 	mul.w	r8, r6, r8
 8019d14:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8019d18:	fb06 f60c 	mul.w	r6, r6, ip
 8019d1c:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8019d20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019d24:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8019d28:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8019d2c:	44c6      	add	lr, r8
 8019d2e:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8019d32:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019d36:	0a36      	lsrs	r6, r6, #8
 8019d38:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019d3c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019d40:	ea4e 0406 	orr.w	r4, lr, r6
 8019d44:	940c      	str	r4, [sp, #48]	; 0x30
 8019d46:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019d48:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 8019d4c:	9c08      	ldr	r4, [sp, #32]
 8019d4e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019d52:	fb09 f606 	mul.w	r6, r9, r6
 8019d56:	fb01 660c 	mla	r6, r1, ip, r6
 8019d5a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019d5e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019d60:	fb00 660c 	mla	r6, r0, ip, r6
 8019d64:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019d68:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019d6a:	fb0b 660c 	mla	r6, fp, ip, r6
 8019d6e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8019d72:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019d76:	fb09 f90c 	mul.w	r9, r9, ip
 8019d7a:	fb01 9303 	mla	r3, r1, r3, r9
 8019d7e:	9908      	ldr	r1, [sp, #32]
 8019d80:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 8019d84:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019d86:	fb00 330e 	mla	r3, r0, lr, r3
 8019d8a:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8019d8e:	fb0b 3b00 	mla	fp, fp, r0, r3
 8019d92:	0a36      	lsrs	r6, r6, #8
 8019d94:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8019d98:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019d9c:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8019da0:	ea46 060b 	orr.w	r6, r6, fp
 8019da4:	2aff      	cmp	r2, #255	; 0xff
 8019da6:	ea4f 2316 	mov.w	r3, r6, lsr #8
 8019daa:	f000 8099 	beq.w	8019ee0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44c>
 8019dae:	8839      	ldrh	r1, [r7, #0]
 8019db0:	43d2      	mvns	r2, r2
 8019db2:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8019db6:	fa5f fe82 	uxtb.w	lr, r2
 8019dba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019dbe:	fb0c fc0e 	mul.w	ip, ip, lr
 8019dc2:	10c8      	asrs	r0, r1, #3
 8019dc4:	00ca      	lsls	r2, r1, #3
 8019dc6:	f10c 0101 	add.w	r1, ip, #1
 8019dca:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8019dce:	ea4f 4c16 	mov.w	ip, r6, lsr #16
 8019dd2:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8019dd6:	b2d2      	uxtb	r2, r2
 8019dd8:	4952      	ldr	r1, [pc, #328]	; (8019f24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x490>)
 8019dda:	fb02 f20e 	mul.w	r2, r2, lr
 8019dde:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8019de2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019de6:	1c51      	adds	r1, r2, #1
 8019de8:	fb00 f00e 	mul.w	r0, r0, lr
 8019dec:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019df0:	b2f6      	uxtb	r6, r6
 8019df2:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8019df6:	1c42      	adds	r2, r0, #1
 8019df8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019dfc:	b2db      	uxtb	r3, r3
 8019dfe:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019e02:	00db      	lsls	r3, r3, #3
 8019e04:	ea4c 06d6 	orr.w	r6, ip, r6, lsr #3
 8019e08:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019e0c:	431e      	orrs	r6, r3
 8019e0e:	803e      	strh	r6, [r7, #0]
 8019e10:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019e12:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019e14:	441a      	add	r2, r3
 8019e16:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019e18:	9229      	str	r2, [sp, #164]	; 0xa4
 8019e1a:	441d      	add	r5, r3
 8019e1c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019e1e:	3b01      	subs	r3, #1
 8019e20:	3702      	adds	r7, #2
 8019e22:	9313      	str	r3, [sp, #76]	; 0x4c
 8019e24:	e6b6      	b.n	8019b94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8019e26:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019e28:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019e2a:	441a      	add	r2, r3
 8019e2c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019e2e:	9229      	str	r2, [sp, #164]	; 0xa4
 8019e30:	441d      	add	r5, r3
 8019e32:	9b06      	ldr	r3, [sp, #24]
 8019e34:	3b01      	subs	r3, #1
 8019e36:	9306      	str	r3, [sp, #24]
 8019e38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019e3a:	3302      	adds	r3, #2
 8019e3c:	930a      	str	r3, [sp, #40]	; 0x28
 8019e3e:	e660      	b.n	8019b02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8019e40:	f47f ae72 	bne.w	8019b28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8019e44:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019e46:	2b00      	cmp	r3, #0
 8019e48:	f340 81bc 	ble.w	801a1c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8019e4c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019e50:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019e54:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019e58:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019e5a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019e5e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019e62:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019e66:	eef0 6a48 	vmov.f32	s13, s16
 8019e6a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019e6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e72:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019e76:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8019e7a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019e7e:	eef0 6a68 	vmov.f32	s13, s17
 8019e82:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019e86:	ee18 2a10 	vmov	r2, s16
 8019e8a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019e8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e92:	ee18 2a90 	vmov	r2, s17
 8019e96:	932b      	str	r3, [sp, #172]	; 0xac
 8019e98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019e9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e9e:	932c      	str	r3, [sp, #176]	; 0xb0
 8019ea0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019ea2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019ea4:	3b01      	subs	r3, #1
 8019ea6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019eaa:	9312      	str	r3, [sp, #72]	; 0x48
 8019eac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019eae:	bf08      	it	eq
 8019eb0:	4613      	moveq	r3, r2
 8019eb2:	ee16 5a90 	vmov	r5, s13
 8019eb6:	9306      	str	r3, [sp, #24]
 8019eb8:	eef0 8a67 	vmov.f32	s17, s15
 8019ebc:	eeb0 8a47 	vmov.f32	s16, s14
 8019ec0:	e618      	b.n	8019af4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8019ec2:	b150      	cbz	r0, 8019eda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x446>
 8019ec4:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019ec6:	5871      	ldr	r1, [r6, r1]
 8019ec8:	9108      	str	r1, [sp, #32]
 8019eca:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8019ece:	26ff      	movs	r6, #255	; 0xff
 8019ed0:	46b0      	mov	r8, r6
 8019ed2:	e698      	b.n	8019c06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 8019ed4:	26ff      	movs	r6, #255	; 0xff
 8019ed6:	46b2      	mov	sl, r6
 8019ed8:	e695      	b.n	8019c06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 8019eda:	26ff      	movs	r6, #255	; 0xff
 8019edc:	46b2      	mov	sl, r6
 8019ede:	e7f7      	b.n	8019ed0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43c>
 8019ee0:	0972      	lsrs	r2, r6, #5
 8019ee2:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8019ee6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019eea:	f023 0307 	bic.w	r3, r3, #7
 8019eee:	4313      	orrs	r3, r2
 8019ef0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019ef4:	e78a      	b.n	8019e0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x378>
 8019ef6:	1c4e      	adds	r6, r1, #1
 8019ef8:	d18a      	bne.n	8019e10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019efa:	9c07      	ldr	r4, [sp, #28]
 8019efc:	428c      	cmp	r4, r1
 8019efe:	dd87      	ble.n	8019e10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019f00:	1c5c      	adds	r4, r3, #1
 8019f02:	db85      	blt.n	8019e10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019f04:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019f06:	429c      	cmp	r4, r3
 8019f08:	dd82      	ble.n	8019e10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019f0a:	e9cd 2003 	strd	r2, r0, [sp, #12]
 8019f0e:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8019f12:	9400      	str	r4, [sp, #0]
 8019f14:	9b07      	ldr	r3, [sp, #28]
 8019f16:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019f18:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019f1a:	4639      	mov	r1, r7
 8019f1c:	f7ff fc62 	bl	80197e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8019f20:	e776      	b.n	8019e10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019f22:	bf00      	nop
 8019f24:	fffff800 	.word	0xfffff800
 8019f28:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019f2a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8019f2c:	9c07      	ldr	r4, [sp, #28]
 8019f2e:	1409      	asrs	r1, r1, #16
 8019f30:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019f34:	142b      	asrs	r3, r5, #16
 8019f36:	fb04 1303 	mla	r3, r4, r3, r1
 8019f3a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019f3c:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8019f40:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8019f44:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019f48:	0e1f      	lsrs	r7, r3, #24
 8019f4a:	2a00      	cmp	r2, #0
 8019f4c:	f000 811d 	beq.w	801a18a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8019f50:	6871      	ldr	r1, [r6, #4]
 8019f52:	910d      	str	r1, [sp, #52]	; 0x34
 8019f54:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8019f58:	2800      	cmp	r0, #0
 8019f5a:	f000 811f 	beq.w	801a19c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8019f5e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019f60:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019f62:	1871      	adds	r1, r6, r1
 8019f64:	5934      	ldr	r4, [r6, r4]
 8019f66:	6849      	ldr	r1, [r1, #4]
 8019f68:	9409      	str	r4, [sp, #36]	; 0x24
 8019f6a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019f6e:	910f      	str	r1, [sp, #60]	; 0x3c
 8019f70:	0e0e      	lsrs	r6, r1, #24
 8019f72:	b292      	uxth	r2, r2
 8019f74:	b280      	uxth	r0, r0
 8019f76:	fb02 fb00 	mul.w	fp, r2, r0
 8019f7a:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8019f7e:	0112      	lsls	r2, r2, #4
 8019f80:	eba2 080b 	sub.w	r8, r2, fp
 8019f84:	b280      	uxth	r0, r0
 8019f86:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8019f8a:	fa1f f888 	uxth.w	r8, r8
 8019f8e:	1a09      	subs	r1, r1, r0
 8019f90:	b289      	uxth	r1, r1
 8019f92:	fb08 f20e 	mul.w	r2, r8, lr
 8019f96:	fb01 2207 	mla	r2, r1, r7, r2
 8019f9a:	fb00 2209 	mla	r2, r0, r9, r2
 8019f9e:	fb0b 2206 	mla	r2, fp, r6, r2
 8019fa2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8019fa6:	2a00      	cmp	r2, #0
 8019fa8:	f000 80e3 	beq.w	801a172 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 8019fac:	2fff      	cmp	r7, #255	; 0xff
 8019fae:	d01a      	beq.n	8019fe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x552>
 8019fb0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019fb4:	fb07 fc0c 	mul.w	ip, r7, ip
 8019fb8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019fbc:	435f      	muls	r7, r3
 8019fbe:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8019fc2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019fc6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019fca:	4463      	add	r3, ip
 8019fcc:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8019fd0:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8019fd4:	0a1b      	lsrs	r3, r3, #8
 8019fd6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019fda:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019fde:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019fe2:	ea43 030c 	orr.w	r3, r3, ip
 8019fe6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019fea:	d01e      	beq.n	801a02a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 8019fec:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019fee:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019ff2:	fb0e f707 	mul.w	r7, lr, r7
 8019ff6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8019ffa:	fb0e fe0c 	mul.w	lr, lr, ip
 8019ffe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a002:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a006:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a00a:	44bc      	add	ip, r7
 801a00c:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 801a010:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 801a014:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a018:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a01c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a020:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a024:	ea4c 040e 	orr.w	r4, ip, lr
 801a028:	940d      	str	r4, [sp, #52]	; 0x34
 801a02a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a02e:	d01e      	beq.n	801a06e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5da>
 801a030:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a032:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a036:	fb09 fe0e 	mul.w	lr, r9, lr
 801a03a:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801a03e:	fb09 f907 	mul.w	r9, r9, r7
 801a042:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801a046:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a04a:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801a04e:	f509 7780 	add.w	r7, r9, #256	; 0x100
 801a052:	44f4      	add	ip, lr
 801a054:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 801a058:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a05c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a060:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a064:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a068:	ea4c 0409 	orr.w	r4, ip, r9
 801a06c:	9409      	str	r4, [sp, #36]	; 0x24
 801a06e:	2eff      	cmp	r6, #255	; 0xff
 801a070:	d01c      	beq.n	801a0ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x618>
 801a072:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a074:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a078:	fb06 fe0e 	mul.w	lr, r6, lr
 801a07c:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801a080:	437e      	muls	r6, r7
 801a082:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801a086:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a08a:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801a08e:	f506 7780 	add.w	r7, r6, #256	; 0x100
 801a092:	44f4      	add	ip, lr
 801a094:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801a098:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a09c:	0a36      	lsrs	r6, r6, #8
 801a09e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a0a2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a0a6:	ea4c 0406 	orr.w	r4, ip, r6
 801a0aa:	940f      	str	r4, [sp, #60]	; 0x3c
 801a0ac:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a0ae:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 801a0b2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a0b4:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 801a0b8:	fb08 f606 	mul.w	r6, r8, r6
 801a0bc:	fb01 6607 	mla	r6, r1, r7, r6
 801a0c0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a0c4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a0c6:	fb00 6607 	mla	r6, r0, r7, r6
 801a0ca:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a0ce:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a0d0:	fb0b 6607 	mla	r6, fp, r7, r6
 801a0d4:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801a0d8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a0dc:	fb08 f807 	mul.w	r8, r8, r7
 801a0e0:	fb01 8303 	mla	r3, r1, r3, r8
 801a0e4:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a0e6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a0ea:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a0ec:	fb00 330c 	mla	r3, r0, ip, r3
 801a0f0:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 801a0f4:	fb0b 3e0e 	mla	lr, fp, lr, r3
 801a0f8:	0a36      	lsrs	r6, r6, #8
 801a0fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a0fe:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a102:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a106:	ea46 060e 	orr.w	r6, r6, lr
 801a10a:	2aff      	cmp	r2, #255	; 0xff
 801a10c:	ea4f 2316 	mov.w	r3, r6, lsr #8
 801a110:	d04a      	beq.n	801a1a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 801a112:	f8ba 1000 	ldrh.w	r1, [sl]
 801a116:	43d2      	mvns	r2, r2
 801a118:	120f      	asrs	r7, r1, #8
 801a11a:	fa5f fc82 	uxtb.w	ip, r2
 801a11e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a122:	fb07 f70c 	mul.w	r7, r7, ip
 801a126:	10c8      	asrs	r0, r1, #3
 801a128:	00ca      	lsls	r2, r1, #3
 801a12a:	1c79      	adds	r1, r7, #1
 801a12c:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 801a130:	0c37      	lsrs	r7, r6, #16
 801a132:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 801a136:	b2d2      	uxtb	r2, r2
 801a138:	4925      	ldr	r1, [pc, #148]	; (801a1d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x73c>)
 801a13a:	fb02 f20c 	mul.w	r2, r2, ip
 801a13e:	ea01 2707 	and.w	r7, r1, r7, lsl #8
 801a142:	1c51      	adds	r1, r2, #1
 801a144:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a148:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a14c:	b2f6      	uxtb	r6, r6
 801a14e:	fb00 f00c 	mul.w	r0, r0, ip
 801a152:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 801a156:	ea47 07d6 	orr.w	r7, r7, r6, lsr #3
 801a15a:	1c46      	adds	r6, r0, #1
 801a15c:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 801a160:	b2de      	uxtb	r6, r3
 801a162:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801a166:	00f6      	lsls	r6, r6, #3
 801a168:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a16c:	4337      	orrs	r7, r6
 801a16e:	f8aa 7000 	strh.w	r7, [sl]
 801a172:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a174:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a176:	441a      	add	r2, r3
 801a178:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a17a:	9229      	str	r2, [sp, #164]	; 0xa4
 801a17c:	441d      	add	r5, r3
 801a17e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a180:	3b01      	subs	r3, #1
 801a182:	f10a 0a02 	add.w	sl, sl, #2
 801a186:	9313      	str	r3, [sp, #76]	; 0x4c
 801a188:	e4e7      	b.n	8019b5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc6>
 801a18a:	b150      	cbz	r0, 801a1a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70e>
 801a18c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a18e:	5871      	ldr	r1, [r6, r1]
 801a190:	9109      	str	r1, [sp, #36]	; 0x24
 801a192:	ea4f 6911 	mov.w	r9, r1, lsr #24
 801a196:	26ff      	movs	r6, #255	; 0xff
 801a198:	46b6      	mov	lr, r6
 801a19a:	e6ea      	b.n	8019f72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801a19c:	26ff      	movs	r6, #255	; 0xff
 801a19e:	46b1      	mov	r9, r6
 801a1a0:	e6e7      	b.n	8019f72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801a1a2:	26ff      	movs	r6, #255	; 0xff
 801a1a4:	46b1      	mov	r9, r6
 801a1a6:	e7f7      	b.n	801a198 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x704>
 801a1a8:	0972      	lsrs	r2, r6, #5
 801a1aa:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801a1ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a1b2:	f023 0307 	bic.w	r3, r3, #7
 801a1b6:	4313      	orrs	r3, r2
 801a1b8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a1bc:	431e      	orrs	r6, r3
 801a1be:	f8aa 6000 	strh.w	r6, [sl]
 801a1c2:	e7d6      	b.n	801a172 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 801a1c4:	b017      	add	sp, #92	; 0x5c
 801a1c6:	ecbd 8b08 	vpop	{d8-d11}
 801a1ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1ce:	bf00      	nop
 801a1d0:	fffff800 	.word	0xfffff800

0801a1d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801a1d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a1d8:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801a1dc:	2c00      	cmp	r4, #0
 801a1de:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a1e2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a1e6:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a1ea:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a1ee:	fb04 ce03 	mla	lr, r4, r3, ip
 801a1f2:	db60      	blt.n	801a2b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a1f4:	45a1      	cmp	r9, r4
 801a1f6:	dd5e      	ble.n	801a2b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a1f8:	f1bc 0f00 	cmp.w	ip, #0
 801a1fc:	db59      	blt.n	801a2b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a1fe:	45e0      	cmp	r8, ip
 801a200:	dd57      	ble.n	801a2b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a202:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801a206:	f01e 0f01 	tst.w	lr, #1
 801a20a:	5c16      	ldrb	r6, [r2, r0]
 801a20c:	bf0c      	ite	eq
 801a20e:	f006 060f 	andeq.w	r6, r6, #15
 801a212:	1136      	asrne	r6, r6, #4
 801a214:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a218:	b2f6      	uxtb	r6, r6
 801a21a:	f11c 0001 	adds.w	r0, ip, #1
 801a21e:	d44d      	bmi.n	801a2bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a220:	4580      	cmp	r8, r0
 801a222:	dd4b      	ble.n	801a2bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a224:	2d00      	cmp	r5, #0
 801a226:	d04b      	beq.n	801a2c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801a228:	f10e 0a01 	add.w	sl, lr, #1
 801a22c:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801a230:	f01a 0f01 	tst.w	sl, #1
 801a234:	5c10      	ldrb	r0, [r2, r0]
 801a236:	bf0c      	ite	eq
 801a238:	f000 000f 	andeq.w	r0, r0, #15
 801a23c:	1100      	asrne	r0, r0, #4
 801a23e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a242:	b2c0      	uxtb	r0, r0
 801a244:	3401      	adds	r4, #1
 801a246:	d43f      	bmi.n	801a2c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a248:	45a1      	cmp	r9, r4
 801a24a:	dd3d      	ble.n	801a2c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a24c:	2f00      	cmp	r7, #0
 801a24e:	f000 80a0 	beq.w	801a392 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1be>
 801a252:	f1bc 0f00 	cmp.w	ip, #0
 801a256:	db35      	blt.n	801a2c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a258:	45e0      	cmp	r8, ip
 801a25a:	dd33      	ble.n	801a2c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a25c:	eb03 090e 	add.w	r9, r3, lr
 801a260:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801a264:	f019 0f01 	tst.w	r9, #1
 801a268:	5d14      	ldrb	r4, [r2, r4]
 801a26a:	bf0c      	ite	eq
 801a26c:	f004 040f 	andeq.w	r4, r4, #15
 801a270:	1124      	asrne	r4, r4, #4
 801a272:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a276:	b2e4      	uxtb	r4, r4
 801a278:	f11c 0c01 	adds.w	ip, ip, #1
 801a27c:	d427      	bmi.n	801a2ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a27e:	45e0      	cmp	r8, ip
 801a280:	dd25      	ble.n	801a2ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a282:	b335      	cbz	r5, 801a2d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801a284:	3301      	adds	r3, #1
 801a286:	449e      	add	lr, r3
 801a288:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a28c:	f01e 0f01 	tst.w	lr, #1
 801a290:	5cd2      	ldrb	r2, [r2, r3]
 801a292:	bf0c      	ite	eq
 801a294:	f002 020f 	andeq.w	r2, r2, #15
 801a298:	1112      	asrne	r2, r2, #4
 801a29a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a29e:	b2d3      	uxtb	r3, r2
 801a2a0:	2d0f      	cmp	r5, #15
 801a2a2:	d917      	bls.n	801a2d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801a2a4:	4b3d      	ldr	r3, [pc, #244]	; (801a39c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801a2a6:	4a3e      	ldr	r2, [pc, #248]	; (801a3a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801a2a8:	483e      	ldr	r0, [pc, #248]	; (801a3a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 801a2aa:	f240 3173 	movw	r1, #883	; 0x373
 801a2ae:	f000 ffdf 	bl	801b270 <__assert_func>
 801a2b2:	2600      	movs	r6, #0
 801a2b4:	e7b1      	b.n	801a21a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801a2b6:	2000      	movs	r0, #0
 801a2b8:	4606      	mov	r6, r0
 801a2ba:	e7c3      	b.n	801a244 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a2bc:	2000      	movs	r0, #0
 801a2be:	e7c1      	b.n	801a244 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a2c0:	4628      	mov	r0, r5
 801a2c2:	e7bf      	b.n	801a244 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a2c4:	2400      	movs	r4, #0
 801a2c6:	e7d7      	b.n	801a278 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801a2c8:	2300      	movs	r3, #0
 801a2ca:	461c      	mov	r4, r3
 801a2cc:	e7e8      	b.n	801a2a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a2ce:	2300      	movs	r3, #0
 801a2d0:	e7e6      	b.n	801a2a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a2d2:	462b      	mov	r3, r5
 801a2d4:	2f0f      	cmp	r7, #15
 801a2d6:	d8e5      	bhi.n	801a2a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801a2d8:	b2ad      	uxth	r5, r5
 801a2da:	b2bf      	uxth	r7, r7
 801a2dc:	fb05 fc07 	mul.w	ip, r5, r7
 801a2e0:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801a2e4:	012d      	lsls	r5, r5, #4
 801a2e6:	b2bf      	uxth	r7, r7
 801a2e8:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801a2ec:	eba5 050c 	sub.w	r5, r5, ip
 801a2f0:	1bd2      	subs	r2, r2, r7
 801a2f2:	b2ad      	uxth	r5, r5
 801a2f4:	b292      	uxth	r2, r2
 801a2f6:	4368      	muls	r0, r5
 801a2f8:	fb06 0002 	mla	r0, r6, r2, r0
 801a2fc:	fb07 0404 	mla	r4, r7, r4, r0
 801a300:	fb0c 4303 	mla	r3, ip, r3, r4
 801a304:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a308:	2b00      	cmp	r3, #0
 801a30a:	d040      	beq.n	801a38e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 801a30c:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 801a310:	4a25      	ldr	r2, [pc, #148]	; (801a3a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d4>)
 801a312:	4343      	muls	r3, r0
 801a314:	1c58      	adds	r0, r3, #1
 801a316:	6816      	ldr	r6, [r2, #0]
 801a318:	880a      	ldrh	r2, [r1, #0]
 801a31a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801a31e:	1200      	asrs	r0, r0, #8
 801a320:	b284      	uxth	r4, r0
 801a322:	1215      	asrs	r5, r2, #8
 801a324:	43c0      	mvns	r0, r0
 801a326:	b2c3      	uxtb	r3, r0
 801a328:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a32c:	1230      	asrs	r0, r6, #8
 801a32e:	fb15 f503 	smulbb	r5, r5, r3
 801a332:	10d7      	asrs	r7, r2, #3
 801a334:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a338:	fb00 5004 	mla	r0, r0, r4, r5
 801a33c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a340:	f3c6 05cc 	ubfx	r5, r6, #3, #13
 801a344:	00d2      	lsls	r2, r2, #3
 801a346:	fb17 f703 	smulbb	r7, r7, r3
 801a34a:	b2d2      	uxtb	r2, r2
 801a34c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a350:	00f6      	lsls	r6, r6, #3
 801a352:	fb05 7504 	mla	r5, r5, r4, r7
 801a356:	fb12 f303 	smulbb	r3, r2, r3
 801a35a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a35e:	fb06 3304 	mla	r3, r6, r4, r3
 801a362:	b2ad      	uxth	r5, r5
 801a364:	b29a      	uxth	r2, r3
 801a366:	b280      	uxth	r0, r0
 801a368:	1c6b      	adds	r3, r5, #1
 801a36a:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801a36e:	1c44      	adds	r4, r0, #1
 801a370:	095b      	lsrs	r3, r3, #5
 801a372:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801a376:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a37a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a37e:	4303      	orrs	r3, r0
 801a380:	1c50      	adds	r0, r2, #1
 801a382:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801a386:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a38a:	4313      	orrs	r3, r2
 801a38c:	800b      	strh	r3, [r1, #0]
 801a38e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a392:	2d0f      	cmp	r5, #15
 801a394:	d886      	bhi.n	801a2a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801a396:	463b      	mov	r3, r7
 801a398:	463c      	mov	r4, r7
 801a39a:	e79d      	b.n	801a2d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801a39c:	0801eea7 	.word	0x0801eea7
 801a3a0:	0801f405 	.word	0x0801f405
 801a3a4:	0801ef2f 	.word	0x0801ef2f
 801a3a8:	20026908 	.word	0x20026908

0801a3ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801a3ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3b0:	ed2d 8b08 	vpush	{d8-d11}
 801a3b4:	b099      	sub	sp, #100	; 0x64
 801a3b6:	e9dd 462b 	ldrd	r4, r6, [sp, #172]	; 0xac
 801a3ba:	9309      	str	r3, [sp, #36]	; 0x24
 801a3bc:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 801a3c0:	930a      	str	r3, [sp, #40]	; 0x28
 801a3c2:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 801a3c6:	9216      	str	r2, [sp, #88]	; 0x58
 801a3c8:	930b      	str	r3, [sp, #44]	; 0x2c
 801a3ca:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801a3cc:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 801a3d0:	910f      	str	r1, [sp, #60]	; 0x3c
 801a3d2:	9310      	str	r3, [sp, #64]	; 0x40
 801a3d4:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801a3d8:	9017      	str	r0, [sp, #92]	; 0x5c
 801a3da:	6850      	ldr	r0, [r2, #4]
 801a3dc:	6812      	ldr	r2, [r2, #0]
 801a3de:	fb00 1303 	mla	r3, r0, r3, r1
 801a3e2:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 801a3e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a3e8:	3301      	adds	r3, #1
 801a3ea:	f023 0301 	bic.w	r3, r3, #1
 801a3ee:	930c      	str	r3, [sp, #48]	; 0x30
 801a3f0:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a3f2:	681f      	ldr	r7, [r3, #0]
 801a3f4:	eeb0 aa40 	vmov.f32	s20, s0
 801a3f8:	eef0 9a60 	vmov.f32	s19, s1
 801a3fc:	eeb0 9a41 	vmov.f32	s18, s2
 801a400:	eeb0 8a62 	vmov.f32	s16, s5
 801a404:	eef0 8a43 	vmov.f32	s17, s6
 801a408:	eef0 ba44 	vmov.f32	s23, s8
 801a40c:	eeb0 ba64 	vmov.f32	s22, s9
 801a410:	eef0 aa45 	vmov.f32	s21, s10
 801a414:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a416:	2b00      	cmp	r3, #0
 801a418:	dc03      	bgt.n	801a422 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801a41a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a41c:	2b00      	cmp	r3, #0
 801a41e:	f340 826b 	ble.w	801a8f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54c>
 801a422:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a424:	2b00      	cmp	r3, #0
 801a426:	f340 811f 	ble.w	801a668 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 801a42a:	1422      	asrs	r2, r4, #16
 801a42c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a430:	d42d      	bmi.n	801a48e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801a432:	980a      	ldr	r0, [sp, #40]	; 0x28
 801a434:	1c51      	adds	r1, r2, #1
 801a436:	4288      	cmp	r0, r1
 801a438:	dd2c      	ble.n	801a494 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801a43a:	2b00      	cmp	r3, #0
 801a43c:	db2a      	blt.n	801a494 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801a43e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801a440:	1c59      	adds	r1, r3, #1
 801a442:	4288      	cmp	r0, r1
 801a444:	dd26      	ble.n	801a494 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801a446:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a448:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a44a:	3b01      	subs	r3, #1
 801a44c:	fb02 4203 	mla	r2, r2, r3, r4
 801a450:	1412      	asrs	r2, r2, #16
 801a452:	d42a      	bmi.n	801a4aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801a454:	990a      	ldr	r1, [sp, #40]	; 0x28
 801a456:	3201      	adds	r2, #1
 801a458:	4291      	cmp	r1, r2
 801a45a:	dd26      	ble.n	801a4aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801a45c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801a45e:	fb02 6303 	mla	r3, r2, r3, r6
 801a462:	141b      	asrs	r3, r3, #16
 801a464:	d421      	bmi.n	801a4aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801a466:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a468:	3301      	adds	r3, #1
 801a46a:	429a      	cmp	r2, r3
 801a46c:	dd1d      	ble.n	801a4aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801a46e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801a472:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801a476:	9311      	str	r3, [sp, #68]	; 0x44
 801a478:	46d1      	mov	r9, sl
 801a47a:	f1bb 0f00 	cmp.w	fp, #0
 801a47e:	f300 8163 	bgt.w	801a748 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x39c>
 801a482:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a484:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a488:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801a48c:	e0ee      	b.n	801a66c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 801a48e:	1c51      	adds	r1, r2, #1
 801a490:	f040 80e0 	bne.w	801a654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801a494:	990a      	ldr	r1, [sp, #40]	; 0x28
 801a496:	4291      	cmp	r1, r2
 801a498:	f340 80dc 	ble.w	801a654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801a49c:	1c5a      	adds	r2, r3, #1
 801a49e:	f2c0 80d9 	blt.w	801a654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801a4a2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a4a4:	4293      	cmp	r3, r2
 801a4a6:	f280 80d5 	bge.w	801a654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801a4aa:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801a4ae:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801a4b2:	9311      	str	r3, [sp, #68]	; 0x44
 801a4b4:	46d0      	mov	r8, sl
 801a4b6:	f1b9 0f00 	cmp.w	r9, #0
 801a4ba:	dde2      	ble.n	801a482 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801a4bc:	1420      	asrs	r0, r4, #16
 801a4be:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a4c2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a4c6:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a4ca:	f100 8122 	bmi.w	801a712 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 801a4ce:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801a4d0:	f100 0c01 	add.w	ip, r0, #1
 801a4d4:	4565      	cmp	r5, ip
 801a4d6:	f340 811e 	ble.w	801a716 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 801a4da:	2b00      	cmp	r3, #0
 801a4dc:	f2c0 811b 	blt.w	801a716 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 801a4e0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a4e2:	f103 0c01 	add.w	ip, r3, #1
 801a4e6:	4565      	cmp	r5, ip
 801a4e8:	f340 8115 	ble.w	801a716 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 801a4ec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a4ee:	fb03 0305 	mla	r3, r3, r5, r0
 801a4f2:	0858      	lsrs	r0, r3, #1
 801a4f4:	07dd      	lsls	r5, r3, #31
 801a4f6:	5c38      	ldrb	r0, [r7, r0]
 801a4f8:	bf54      	ite	pl
 801a4fa:	f000 000f 	andpl.w	r0, r0, #15
 801a4fe:	1100      	asrmi	r0, r0, #4
 801a500:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a504:	b2c0      	uxtb	r0, r0
 801a506:	2a00      	cmp	r2, #0
 801a508:	f000 80ef 	beq.w	801a6ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 801a50c:	f103 0e01 	add.w	lr, r3, #1
 801a510:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801a514:	f01e 0f01 	tst.w	lr, #1
 801a518:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a51c:	bf0c      	ite	eq
 801a51e:	f00c 0c0f 	andeq.w	ip, ip, #15
 801a522:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801a526:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a52a:	fa5f f58c 	uxtb.w	r5, ip
 801a52e:	9512      	str	r5, [sp, #72]	; 0x48
 801a530:	b1f9      	cbz	r1, 801a572 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801a532:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a534:	442b      	add	r3, r5
 801a536:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a53a:	07dd      	lsls	r5, r3, #31
 801a53c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a540:	bf54      	ite	pl
 801a542:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a546:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a54a:	3301      	adds	r3, #1
 801a54c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a550:	fa5f f58c 	uxtb.w	r5, ip
 801a554:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a558:	950d      	str	r5, [sp, #52]	; 0x34
 801a55a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a55e:	07dd      	lsls	r5, r3, #31
 801a560:	bf54      	ite	pl
 801a562:	f00c 030f 	andpl.w	r3, ip, #15
 801a566:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801a56a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a56e:	b2db      	uxtb	r3, r3
 801a570:	9313      	str	r3, [sp, #76]	; 0x4c
 801a572:	b292      	uxth	r2, r2
 801a574:	b289      	uxth	r1, r1
 801a576:	fb02 f301 	mul.w	r3, r2, r1
 801a57a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801a57e:	0112      	lsls	r2, r2, #4
 801a580:	b289      	uxth	r1, r1
 801a582:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801a586:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a588:	1ad2      	subs	r2, r2, r3
 801a58a:	ebac 0c01 	sub.w	ip, ip, r1
 801a58e:	b292      	uxth	r2, r2
 801a590:	436a      	muls	r2, r5
 801a592:	fa1f fc8c 	uxth.w	ip, ip
 801a596:	fb00 200c 	mla	r0, r0, ip, r2
 801a59a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a59c:	fb01 0102 	mla	r1, r1, r2, r0
 801a5a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a5a2:	fb03 1302 	mla	r3, r3, r2, r1
 801a5a6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a5aa:	2b00      	cmp	r3, #0
 801a5ac:	d049      	beq.n	801a642 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a5ae:	9910      	ldr	r1, [sp, #64]	; 0x40
 801a5b0:	4ac5      	ldr	r2, [pc, #788]	; (801a8c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801a5b2:	4dc6      	ldr	r5, [pc, #792]	; (801a8cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801a5b4:	f8d2 e000 	ldr.w	lr, [r2]
 801a5b8:	f8b8 2000 	ldrh.w	r2, [r8]
 801a5bc:	434b      	muls	r3, r1
 801a5be:	1c59      	adds	r1, r3, #1
 801a5c0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a5c4:	121b      	asrs	r3, r3, #8
 801a5c6:	b299      	uxth	r1, r3
 801a5c8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801a5cc:	43db      	mvns	r3, r3
 801a5ce:	b2db      	uxtb	r3, r3
 801a5d0:	ea4f 202e 	mov.w	r0, lr, asr #8
 801a5d4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a5d8:	fb1c fc03 	smulbb	ip, ip, r3
 801a5dc:	ea4f 0be2 	mov.w	fp, r2, asr #3
 801a5e0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a5e4:	fb00 c001 	mla	r0, r0, r1, ip
 801a5e8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a5ec:	f3ce 0ccc 	ubfx	ip, lr, #3, #13
 801a5f0:	fb1b fb03 	smulbb	fp, fp, r3
 801a5f4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a5f8:	00d2      	lsls	r2, r2, #3
 801a5fa:	fb0c bc01 	mla	ip, ip, r1, fp
 801a5fe:	b2d2      	uxtb	r2, r2
 801a600:	ea05 0ece 	and.w	lr, r5, lr, lsl #3
 801a604:	fb12 f303 	smulbb	r3, r2, r3
 801a608:	fa1f fc8c 	uxth.w	ip, ip
 801a60c:	fa5f fe8e 	uxtb.w	lr, lr
 801a610:	b280      	uxth	r0, r0
 801a612:	fb0e 3101 	mla	r1, lr, r1, r3
 801a616:	f10c 0201 	add.w	r2, ip, #1
 801a61a:	b289      	uxth	r1, r1
 801a61c:	1c43      	adds	r3, r0, #1
 801a61e:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 801a622:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a626:	0952      	lsrs	r2, r2, #5
 801a628:	1c4b      	adds	r3, r1, #1
 801a62a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a62e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a632:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a636:	4310      	orrs	r0, r2
 801a638:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801a63c:	4308      	orrs	r0, r1
 801a63e:	f8a8 0000 	strh.w	r0, [r8]
 801a642:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a644:	441c      	add	r4, r3
 801a646:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a648:	f108 0802 	add.w	r8, r8, #2
 801a64c:	441e      	add	r6, r3
 801a64e:	f109 39ff 	add.w	r9, r9, #4294967295
 801a652:	e730      	b.n	801a4b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 801a654:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a656:	441c      	add	r4, r3
 801a658:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a65a:	441e      	add	r6, r3
 801a65c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a65e:	3b01      	subs	r3, #1
 801a660:	9309      	str	r3, [sp, #36]	; 0x24
 801a662:	f10a 0a02 	add.w	sl, sl, #2
 801a666:	e6dc      	b.n	801a422 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801a668:	f47f aeed 	bne.w	801a446 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801a66c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a66e:	2b00      	cmp	r3, #0
 801a670:	f340 8142 	ble.w	801a8f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54c>
 801a674:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a678:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a67c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a680:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a682:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a686:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a68a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a68e:	eef0 6a48 	vmov.f32	s13, s16
 801a692:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a696:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a69a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a69e:	ee16 4a90 	vmov	r4, s13
 801a6a2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a6a6:	eef0 6a68 	vmov.f32	s13, s17
 801a6aa:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a6ae:	ee18 2a10 	vmov	r2, s16
 801a6b2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a6b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6ba:	ee18 2a90 	vmov	r2, s17
 801a6be:	932d      	str	r3, [sp, #180]	; 0xb4
 801a6c0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a6c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6c6:	932e      	str	r3, [sp, #184]	; 0xb8
 801a6c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a6ca:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801a6cc:	3b01      	subs	r3, #1
 801a6ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a6d2:	930f      	str	r3, [sp, #60]	; 0x3c
 801a6d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a6d6:	bf08      	it	eq
 801a6d8:	4613      	moveq	r3, r2
 801a6da:	ee16 6a90 	vmov	r6, s13
 801a6de:	9309      	str	r3, [sp, #36]	; 0x24
 801a6e0:	eef0 8a67 	vmov.f32	s17, s15
 801a6e4:	eeb0 8a47 	vmov.f32	s16, s14
 801a6e8:	e694      	b.n	801a414 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801a6ea:	2900      	cmp	r1, #0
 801a6ec:	f43f af41 	beq.w	801a572 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801a6f0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a6f2:	442b      	add	r3, r5
 801a6f4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a6f8:	07db      	lsls	r3, r3, #31
 801a6fa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a6fe:	bf54      	ite	pl
 801a700:	f00c 030f 	andpl.w	r3, ip, #15
 801a704:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801a708:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a70c:	b2db      	uxtb	r3, r3
 801a70e:	930d      	str	r3, [sp, #52]	; 0x34
 801a710:	e72f      	b.n	801a572 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801a712:	1c45      	adds	r5, r0, #1
 801a714:	d195      	bne.n	801a642 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a716:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801a718:	4285      	cmp	r5, r0
 801a71a:	dd92      	ble.n	801a642 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a71c:	1c5d      	adds	r5, r3, #1
 801a71e:	db90      	blt.n	801a642 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a720:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a722:	429d      	cmp	r5, r3
 801a724:	dd8d      	ble.n	801a642 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a726:	e9cd 3203 	strd	r3, r2, [sp, #12]
 801a72a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a72c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a72e:	9301      	str	r3, [sp, #4]
 801a730:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a732:	9002      	str	r0, [sp, #8]
 801a734:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801a738:	9300      	str	r3, [sp, #0]
 801a73a:	463a      	mov	r2, r7
 801a73c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a73e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801a740:	4641      	mov	r1, r8
 801a742:	f7ff fd47 	bl	801a1d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801a746:	e77c      	b.n	801a642 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a748:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a74a:	1422      	asrs	r2, r4, #16
 801a74c:	1433      	asrs	r3, r6, #16
 801a74e:	fb05 2303 	mla	r3, r5, r3, r2
 801a752:	085a      	lsrs	r2, r3, #1
 801a754:	07dd      	lsls	r5, r3, #31
 801a756:	5cba      	ldrb	r2, [r7, r2]
 801a758:	bf54      	ite	pl
 801a75a:	f002 020f 	andpl.w	r2, r2, #15
 801a75e:	1112      	asrmi	r2, r2, #4
 801a760:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a764:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801a768:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a76c:	b2d2      	uxtb	r2, r2
 801a76e:	2900      	cmp	r1, #0
 801a770:	f000 80ae 	beq.w	801a8d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 801a774:	f103 0e01 	add.w	lr, r3, #1
 801a778:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801a77c:	f01e 0f01 	tst.w	lr, #1
 801a780:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a784:	bf0c      	ite	eq
 801a786:	f00c 0c0f 	andeq.w	ip, ip, #15
 801a78a:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801a78e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a792:	fa5f f58c 	uxtb.w	r5, ip
 801a796:	9514      	str	r5, [sp, #80]	; 0x50
 801a798:	b300      	cbz	r0, 801a7dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801a79a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a79c:	442b      	add	r3, r5
 801a79e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a7a2:	07dd      	lsls	r5, r3, #31
 801a7a4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a7a8:	bf54      	ite	pl
 801a7aa:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a7ae:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a7b2:	3301      	adds	r3, #1
 801a7b4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a7b8:	fa5f f58c 	uxtb.w	r5, ip
 801a7bc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a7c0:	950e      	str	r5, [sp, #56]	; 0x38
 801a7c2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a7c6:	07dd      	lsls	r5, r3, #31
 801a7c8:	bf54      	ite	pl
 801a7ca:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a7ce:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a7d2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a7d6:	fa5f f38c 	uxtb.w	r3, ip
 801a7da:	9315      	str	r3, [sp, #84]	; 0x54
 801a7dc:	b289      	uxth	r1, r1
 801a7de:	b280      	uxth	r0, r0
 801a7e0:	fb01 f300 	mul.w	r3, r1, r0
 801a7e4:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801a7e8:	0109      	lsls	r1, r1, #4
 801a7ea:	b280      	uxth	r0, r0
 801a7ec:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801a7f0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a7f2:	1ac9      	subs	r1, r1, r3
 801a7f4:	ebac 0c00 	sub.w	ip, ip, r0
 801a7f8:	b289      	uxth	r1, r1
 801a7fa:	4369      	muls	r1, r5
 801a7fc:	fa1f fc8c 	uxth.w	ip, ip
 801a800:	fb02 120c 	mla	r2, r2, ip, r1
 801a804:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a806:	fb00 2001 	mla	r0, r0, r1, r2
 801a80a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801a80c:	fb03 0302 	mla	r3, r3, r2, r0
 801a810:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a814:	2b00      	cmp	r3, #0
 801a816:	d04d      	beq.n	801a8b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x508>
 801a818:	9910      	ldr	r1, [sp, #64]	; 0x40
 801a81a:	4a2b      	ldr	r2, [pc, #172]	; (801a8c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801a81c:	4d2b      	ldr	r5, [pc, #172]	; (801a8cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801a81e:	f8d2 e000 	ldr.w	lr, [r2]
 801a822:	f8b9 2000 	ldrh.w	r2, [r9]
 801a826:	434b      	muls	r3, r1
 801a828:	1c59      	adds	r1, r3, #1
 801a82a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a82e:	121b      	asrs	r3, r3, #8
 801a830:	b299      	uxth	r1, r3
 801a832:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801a836:	43db      	mvns	r3, r3
 801a838:	b2db      	uxtb	r3, r3
 801a83a:	ea4f 202e 	mov.w	r0, lr, asr #8
 801a83e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a842:	fb1c fc03 	smulbb	ip, ip, r3
 801a846:	ea4f 08e2 	mov.w	r8, r2, asr #3
 801a84a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a84e:	fb00 c001 	mla	r0, r0, r1, ip
 801a852:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a856:	f3ce 0ccc 	ubfx	ip, lr, #3, #13
 801a85a:	fb18 f803 	smulbb	r8, r8, r3
 801a85e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a862:	00d2      	lsls	r2, r2, #3
 801a864:	fb0c 8c01 	mla	ip, ip, r1, r8
 801a868:	ea05 0ece 	and.w	lr, r5, lr, lsl #3
 801a86c:	b2d2      	uxtb	r2, r2
 801a86e:	fa1f fc8c 	uxth.w	ip, ip
 801a872:	fa5f fe8e 	uxtb.w	lr, lr
 801a876:	fb12 f203 	smulbb	r2, r2, r3
 801a87a:	b280      	uxth	r0, r0
 801a87c:	fb0e 2201 	mla	r2, lr, r1, r2
 801a880:	f10c 0801 	add.w	r8, ip, #1
 801a884:	b292      	uxth	r2, r2
 801a886:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801a88a:	f100 0801 	add.w	r8, r0, #1
 801a88e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a892:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 801a896:	1c51      	adds	r1, r2, #1
 801a898:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a89c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a8a0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a8a4:	ea4c 0c00 	orr.w	ip, ip, r0
 801a8a8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a8ac:	ea4c 0c02 	orr.w	ip, ip, r2
 801a8b0:	f8a9 c000 	strh.w	ip, [r9]
 801a8b4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a8b6:	441c      	add	r4, r3
 801a8b8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a8ba:	f109 0902 	add.w	r9, r9, #2
 801a8be:	441e      	add	r6, r3
 801a8c0:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a8c4:	e5d9      	b.n	801a47a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 801a8c6:	bf00      	nop
 801a8c8:	20026908 	.word	0x20026908
 801a8cc:	0007fff8 	.word	0x0007fff8
 801a8d0:	2800      	cmp	r0, #0
 801a8d2:	d083      	beq.n	801a7dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801a8d4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a8d6:	442b      	add	r3, r5
 801a8d8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a8dc:	07db      	lsls	r3, r3, #31
 801a8de:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a8e2:	bf54      	ite	pl
 801a8e4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a8e8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a8ec:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a8f0:	fa5f f38c 	uxtb.w	r3, ip
 801a8f4:	930e      	str	r3, [sp, #56]	; 0x38
 801a8f6:	e771      	b.n	801a7dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801a8f8:	b019      	add	sp, #100	; 0x64
 801a8fa:	ecbd 8b08 	vpop	{d8-d11}
 801a8fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a902:	bf00      	nop

0801a904 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801a904:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a908:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801a90c:	2c00      	cmp	r4, #0
 801a90e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a912:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a916:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a91a:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a91e:	fb04 ce03 	mla	lr, r4, r3, ip
 801a922:	db60      	blt.n	801a9e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801a924:	45a1      	cmp	r9, r4
 801a926:	dd5e      	ble.n	801a9e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801a928:	f1bc 0f00 	cmp.w	ip, #0
 801a92c:	db59      	blt.n	801a9e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801a92e:	45e0      	cmp	r8, ip
 801a930:	dd57      	ble.n	801a9e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801a932:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801a936:	f01e 0f01 	tst.w	lr, #1
 801a93a:	5c16      	ldrb	r6, [r2, r0]
 801a93c:	bf0c      	ite	eq
 801a93e:	f006 060f 	andeq.w	r6, r6, #15
 801a942:	1136      	asrne	r6, r6, #4
 801a944:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a948:	b2f6      	uxtb	r6, r6
 801a94a:	f11c 0001 	adds.w	r0, ip, #1
 801a94e:	d44d      	bmi.n	801a9ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801a950:	4580      	cmp	r8, r0
 801a952:	dd4b      	ble.n	801a9ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801a954:	2d00      	cmp	r5, #0
 801a956:	d04b      	beq.n	801a9f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801a958:	f10e 0a01 	add.w	sl, lr, #1
 801a95c:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801a960:	f01a 0f01 	tst.w	sl, #1
 801a964:	5c10      	ldrb	r0, [r2, r0]
 801a966:	bf0c      	ite	eq
 801a968:	f000 000f 	andeq.w	r0, r0, #15
 801a96c:	1100      	asrne	r0, r0, #4
 801a96e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a972:	b2c0      	uxtb	r0, r0
 801a974:	3401      	adds	r4, #1
 801a976:	d43f      	bmi.n	801a9f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801a978:	45a1      	cmp	r9, r4
 801a97a:	dd3d      	ble.n	801a9f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801a97c:	2f00      	cmp	r7, #0
 801a97e:	f000 8099 	beq.w	801aab4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>
 801a982:	f1bc 0f00 	cmp.w	ip, #0
 801a986:	db35      	blt.n	801a9f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801a988:	45e0      	cmp	r8, ip
 801a98a:	dd33      	ble.n	801a9f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801a98c:	eb03 090e 	add.w	r9, r3, lr
 801a990:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801a994:	f019 0f01 	tst.w	r9, #1
 801a998:	5d14      	ldrb	r4, [r2, r4]
 801a99a:	bf0c      	ite	eq
 801a99c:	f004 040f 	andeq.w	r4, r4, #15
 801a9a0:	1124      	asrne	r4, r4, #4
 801a9a2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a9a6:	b2e4      	uxtb	r4, r4
 801a9a8:	f11c 0c01 	adds.w	ip, ip, #1
 801a9ac:	d427      	bmi.n	801a9fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801a9ae:	45e0      	cmp	r8, ip
 801a9b0:	dd25      	ble.n	801a9fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801a9b2:	b335      	cbz	r5, 801aa02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801a9b4:	3301      	adds	r3, #1
 801a9b6:	449e      	add	lr, r3
 801a9b8:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a9bc:	f01e 0f01 	tst.w	lr, #1
 801a9c0:	5cd2      	ldrb	r2, [r2, r3]
 801a9c2:	bf0c      	ite	eq
 801a9c4:	f002 020f 	andeq.w	r2, r2, #15
 801a9c8:	1112      	asrne	r2, r2, #4
 801a9ca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a9ce:	b2d3      	uxtb	r3, r2
 801a9d0:	2d0f      	cmp	r5, #15
 801a9d2:	d917      	bls.n	801aa04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801a9d4:	4b3a      	ldr	r3, [pc, #232]	; (801aac0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801a9d6:	4a3b      	ldr	r2, [pc, #236]	; (801aac4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801a9d8:	483b      	ldr	r0, [pc, #236]	; (801aac8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 801a9da:	f240 3173 	movw	r1, #883	; 0x373
 801a9de:	f000 fc47 	bl	801b270 <__assert_func>
 801a9e2:	2600      	movs	r6, #0
 801a9e4:	e7b1      	b.n	801a94a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801a9e6:	2000      	movs	r0, #0
 801a9e8:	4606      	mov	r6, r0
 801a9ea:	e7c3      	b.n	801a974 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a9ec:	2000      	movs	r0, #0
 801a9ee:	e7c1      	b.n	801a974 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a9f0:	4628      	mov	r0, r5
 801a9f2:	e7bf      	b.n	801a974 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a9f4:	2400      	movs	r4, #0
 801a9f6:	e7d7      	b.n	801a9a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801a9f8:	2300      	movs	r3, #0
 801a9fa:	461c      	mov	r4, r3
 801a9fc:	e7e8      	b.n	801a9d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801a9fe:	2300      	movs	r3, #0
 801aa00:	e7e6      	b.n	801a9d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801aa02:	462b      	mov	r3, r5
 801aa04:	2f0f      	cmp	r7, #15
 801aa06:	d8e5      	bhi.n	801a9d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801aa08:	b2ad      	uxth	r5, r5
 801aa0a:	b2bf      	uxth	r7, r7
 801aa0c:	fb05 fc07 	mul.w	ip, r5, r7
 801aa10:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801aa14:	012d      	lsls	r5, r5, #4
 801aa16:	b2bf      	uxth	r7, r7
 801aa18:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801aa1c:	eba5 050c 	sub.w	r5, r5, ip
 801aa20:	1bd2      	subs	r2, r2, r7
 801aa22:	b2ad      	uxth	r5, r5
 801aa24:	b292      	uxth	r2, r2
 801aa26:	4368      	muls	r0, r5
 801aa28:	fb06 0002 	mla	r0, r6, r2, r0
 801aa2c:	fb07 0404 	mla	r4, r7, r4, r0
 801aa30:	fb0c 4303 	mla	r3, ip, r3, r4
 801aa34:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801aa38:	2b00      	cmp	r3, #0
 801aa3a:	d039      	beq.n	801aab0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 801aa3c:	4a23      	ldr	r2, [pc, #140]	; (801aacc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c8>)
 801aa3e:	6816      	ldr	r6, [r2, #0]
 801aa40:	880a      	ldrh	r2, [r1, #0]
 801aa42:	b298      	uxth	r0, r3
 801aa44:	1215      	asrs	r5, r2, #8
 801aa46:	43db      	mvns	r3, r3
 801aa48:	b2db      	uxtb	r3, r3
 801aa4a:	1234      	asrs	r4, r6, #8
 801aa4c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801aa50:	fb15 f503 	smulbb	r5, r5, r3
 801aa54:	10d7      	asrs	r7, r2, #3
 801aa56:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801aa5a:	fb04 5400 	mla	r4, r4, r0, r5
 801aa5e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aa62:	f3c6 05cc 	ubfx	r5, r6, #3, #13
 801aa66:	fb17 f703 	smulbb	r7, r7, r3
 801aa6a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801aa6e:	00d2      	lsls	r2, r2, #3
 801aa70:	fb05 7500 	mla	r5, r5, r0, r7
 801aa74:	b2d2      	uxtb	r2, r2
 801aa76:	00f6      	lsls	r6, r6, #3
 801aa78:	fb12 f303 	smulbb	r3, r2, r3
 801aa7c:	b2ad      	uxth	r5, r5
 801aa7e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801aa82:	b2a4      	uxth	r4, r4
 801aa84:	fb06 3000 	mla	r0, r6, r0, r3
 801aa88:	1c6b      	adds	r3, r5, #1
 801aa8a:	b280      	uxth	r0, r0
 801aa8c:	1c62      	adds	r2, r4, #1
 801aa8e:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801aa92:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801aa96:	095b      	lsrs	r3, r3, #5
 801aa98:	1c42      	adds	r2, r0, #1
 801aa9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801aa9e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801aaa2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801aaa6:	4323      	orrs	r3, r4
 801aaa8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801aaac:	4303      	orrs	r3, r0
 801aaae:	800b      	strh	r3, [r1, #0]
 801aab0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801aab4:	2d0f      	cmp	r5, #15
 801aab6:	d88d      	bhi.n	801a9d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801aab8:	463b      	mov	r3, r7
 801aaba:	463c      	mov	r4, r7
 801aabc:	e7a4      	b.n	801aa08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801aabe:	bf00      	nop
 801aac0:	0801eea7 	.word	0x0801eea7
 801aac4:	0801f405 	.word	0x0801f405
 801aac8:	0801ef2f 	.word	0x0801ef2f
 801aacc:	20026908 	.word	0x20026908

0801aad0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801aad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aad4:	ed2d 8b08 	vpush	{d8-d11}
 801aad8:	b095      	sub	sp, #84	; 0x54
 801aada:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801aade:	9306      	str	r3, [sp, #24]
 801aae0:	f9bd 30b8 	ldrsh.w	r3, [sp, #184]	; 0xb8
 801aae4:	9307      	str	r3, [sp, #28]
 801aae6:	920d      	str	r2, [sp, #52]	; 0x34
 801aae8:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 801aaec:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801aaee:	910a      	str	r1, [sp, #40]	; 0x28
 801aaf0:	9308      	str	r3, [sp, #32]
 801aaf2:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801aaf6:	9013      	str	r0, [sp, #76]	; 0x4c
 801aaf8:	6850      	ldr	r0, [r2, #4]
 801aafa:	6812      	ldr	r2, [r2, #0]
 801aafc:	fb00 1303 	mla	r3, r0, r3, r1
 801ab00:	eb02 0b43 	add.w	fp, r2, r3, lsl #1
 801ab04:	9b07      	ldr	r3, [sp, #28]
 801ab06:	3301      	adds	r3, #1
 801ab08:	f023 0301 	bic.w	r3, r3, #1
 801ab0c:	9309      	str	r3, [sp, #36]	; 0x24
 801ab0e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ab10:	681f      	ldr	r7, [r3, #0]
 801ab12:	eeb0 aa40 	vmov.f32	s20, s0
 801ab16:	eef0 9a60 	vmov.f32	s19, s1
 801ab1a:	eeb0 9a41 	vmov.f32	s18, s2
 801ab1e:	eeb0 8a62 	vmov.f32	s16, s5
 801ab22:	eef0 8a43 	vmov.f32	s17, s6
 801ab26:	eef0 ba44 	vmov.f32	s23, s8
 801ab2a:	eeb0 ba64 	vmov.f32	s22, s9
 801ab2e:	eef0 aa45 	vmov.f32	s21, s10
 801ab32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ab34:	2b00      	cmp	r3, #0
 801ab36:	dc03      	bgt.n	801ab40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801ab38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ab3a:	2b00      	cmp	r3, #0
 801ab3c:	f340 8260 	ble.w	801b000 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801ab40:	9b06      	ldr	r3, [sp, #24]
 801ab42:	2b00      	cmp	r3, #0
 801ab44:	f340 811c 	ble.w	801ad80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801ab48:	1422      	asrs	r2, r4, #16
 801ab4a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ab4e:	d42d      	bmi.n	801abac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801ab50:	9807      	ldr	r0, [sp, #28]
 801ab52:	1c51      	adds	r1, r2, #1
 801ab54:	4288      	cmp	r0, r1
 801ab56:	dd2c      	ble.n	801abb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801ab58:	2b00      	cmp	r3, #0
 801ab5a:	db2a      	blt.n	801abb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801ab5c:	9808      	ldr	r0, [sp, #32]
 801ab5e:	1c59      	adds	r1, r3, #1
 801ab60:	4288      	cmp	r0, r1
 801ab62:	dd26      	ble.n	801abb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801ab64:	9b06      	ldr	r3, [sp, #24]
 801ab66:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ab68:	3b01      	subs	r3, #1
 801ab6a:	fb02 4203 	mla	r2, r2, r3, r4
 801ab6e:	1412      	asrs	r2, r2, #16
 801ab70:	d42a      	bmi.n	801abc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801ab72:	9907      	ldr	r1, [sp, #28]
 801ab74:	3201      	adds	r2, #1
 801ab76:	4291      	cmp	r1, r2
 801ab78:	dd26      	ble.n	801abc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801ab7a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ab7c:	fb02 6303 	mla	r3, r2, r3, r6
 801ab80:	141b      	asrs	r3, r3, #16
 801ab82:	d421      	bmi.n	801abc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801ab84:	9a08      	ldr	r2, [sp, #32]
 801ab86:	3301      	adds	r3, #1
 801ab88:	429a      	cmp	r2, r3
 801ab8a:	dd1d      	ble.n	801abc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801ab8c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801ab90:	f8dd a018 	ldr.w	sl, [sp, #24]
 801ab94:	930e      	str	r3, [sp, #56]	; 0x38
 801ab96:	46d8      	mov	r8, fp
 801ab98:	f1ba 0f00 	cmp.w	sl, #0
 801ab9c:	f300 8164 	bgt.w	801ae68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801aba0:	9b06      	ldr	r3, [sp, #24]
 801aba2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801aba6:	eb0b 0b45 	add.w	fp, fp, r5, lsl #1
 801abaa:	e0eb      	b.n	801ad84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 801abac:	1c51      	adds	r1, r2, #1
 801abae:	f040 80dd 	bne.w	801ad6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801abb2:	9907      	ldr	r1, [sp, #28]
 801abb4:	4291      	cmp	r1, r2
 801abb6:	f340 80d9 	ble.w	801ad6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801abba:	1c5a      	adds	r2, r3, #1
 801abbc:	f2c0 80d6 	blt.w	801ad6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801abc0:	9a08      	ldr	r2, [sp, #32]
 801abc2:	4293      	cmp	r3, r2
 801abc4:	f280 80d2 	bge.w	801ad6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801abc8:	f8dd 9018 	ldr.w	r9, [sp, #24]
 801abcc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801abd0:	46d8      	mov	r8, fp
 801abd2:	f1b9 0f00 	cmp.w	r9, #0
 801abd6:	dde3      	ble.n	801aba0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801abd8:	1420      	asrs	r0, r4, #16
 801abda:	ea4f 4326 	mov.w	r3, r6, asr #16
 801abde:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801abe2:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801abe6:	f100 8127 	bmi.w	801ae38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801abea:	9d07      	ldr	r5, [sp, #28]
 801abec:	f100 0c01 	add.w	ip, r0, #1
 801abf0:	4565      	cmp	r5, ip
 801abf2:	f340 8123 	ble.w	801ae3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801abf6:	2b00      	cmp	r3, #0
 801abf8:	f2c0 8120 	blt.w	801ae3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801abfc:	9d08      	ldr	r5, [sp, #32]
 801abfe:	f103 0c01 	add.w	ip, r3, #1
 801ac02:	4565      	cmp	r5, ip
 801ac04:	f340 811a 	ble.w	801ae3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801ac08:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ac0a:	fb03 0305 	mla	r3, r3, r5, r0
 801ac0e:	0858      	lsrs	r0, r3, #1
 801ac10:	07dd      	lsls	r5, r3, #31
 801ac12:	5c38      	ldrb	r0, [r7, r0]
 801ac14:	bf54      	ite	pl
 801ac16:	f000 000f 	andpl.w	r0, r0, #15
 801ac1a:	1100      	asrmi	r0, r0, #4
 801ac1c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ac20:	b2c0      	uxtb	r0, r0
 801ac22:	2a00      	cmp	r2, #0
 801ac24:	f000 80ed 	beq.w	801ae02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x332>
 801ac28:	f103 0e01 	add.w	lr, r3, #1
 801ac2c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801ac30:	f01e 0f01 	tst.w	lr, #1
 801ac34:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ac38:	bf0c      	ite	eq
 801ac3a:	f00c 0c0f 	andeq.w	ip, ip, #15
 801ac3e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801ac42:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ac46:	fa5f fc8c 	uxtb.w	ip, ip
 801ac4a:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 801ac4e:	b1f9      	cbz	r1, 801ac90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801ac50:	4453      	add	r3, sl
 801ac52:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ac56:	07dd      	lsls	r5, r3, #31
 801ac58:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ac5c:	bf54      	ite	pl
 801ac5e:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ac62:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ac66:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ac6a:	3301      	adds	r3, #1
 801ac6c:	fa5f fc8c 	uxtb.w	ip, ip
 801ac70:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 801ac74:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ac78:	07dd      	lsls	r5, r3, #31
 801ac7a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ac7e:	bf54      	ite	pl
 801ac80:	f00c 030f 	andpl.w	r3, ip, #15
 801ac84:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801ac88:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ac8c:	b2db      	uxtb	r3, r3
 801ac8e:	9310      	str	r3, [sp, #64]	; 0x40
 801ac90:	b292      	uxth	r2, r2
 801ac92:	b289      	uxth	r1, r1
 801ac94:	fb02 f301 	mul.w	r3, r2, r1
 801ac98:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ac9c:	0112      	lsls	r2, r2, #4
 801ac9e:	b289      	uxth	r1, r1
 801aca0:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801aca4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801aca6:	1ad2      	subs	r2, r2, r3
 801aca8:	ebac 0c01 	sub.w	ip, ip, r1
 801acac:	b292      	uxth	r2, r2
 801acae:	436a      	muls	r2, r5
 801acb0:	fa1f fc8c 	uxth.w	ip, ip
 801acb4:	fb00 200c 	mla	r0, r0, ip, r2
 801acb8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801acba:	fb01 0102 	mla	r1, r1, r2, r0
 801acbe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801acc0:	fb03 1302 	mla	r3, r3, r2, r1
 801acc4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801acc8:	2b00      	cmp	r3, #0
 801acca:	d046      	beq.n	801ad5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801accc:	4ac7      	ldr	r2, [pc, #796]	; (801afec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801acce:	49c8      	ldr	r1, [pc, #800]	; (801aff0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801acd0:	6812      	ldr	r2, [r2, #0]
 801acd2:	ea4f 2e22 	mov.w	lr, r2, asr #8
 801acd6:	f3c2 0ccc 	ubfx	ip, r2, #3, #13
 801acda:	ea01 02c2 	and.w	r2, r1, r2, lsl #3
 801acde:	b2d2      	uxtb	r2, r2
 801ace0:	2bff      	cmp	r3, #255	; 0xff
 801ace2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ace6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801acea:	4615      	mov	r5, r2
 801acec:	f000 809c 	beq.w	801ae28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 801acf0:	f8b8 0000 	ldrh.w	r0, [r8]
 801acf4:	b29a      	uxth	r2, r3
 801acf6:	1201      	asrs	r1, r0, #8
 801acf8:	43db      	mvns	r3, r3
 801acfa:	b2db      	uxtb	r3, r3
 801acfc:	fb1e fe02 	smulbb	lr, lr, r2
 801ad00:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ad04:	fb01 e103 	mla	r1, r1, r3, lr
 801ad08:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801ad0c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ad10:	fb1c fc02 	smulbb	ip, ip, r2
 801ad14:	fb0e cc03 	mla	ip, lr, r3, ip
 801ad18:	00c0      	lsls	r0, r0, #3
 801ad1a:	fa1f fc8c 	uxth.w	ip, ip
 801ad1e:	fb15 f202 	smulbb	r2, r5, r2
 801ad22:	b2c0      	uxtb	r0, r0
 801ad24:	b289      	uxth	r1, r1
 801ad26:	fb00 2303 	mla	r3, r0, r3, r2
 801ad2a:	f10c 0e01 	add.w	lr, ip, #1
 801ad2e:	b29b      	uxth	r3, r3
 801ad30:	1c4a      	adds	r2, r1, #1
 801ad32:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 801ad36:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ad3a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ad3e:	1c5a      	adds	r2, r3, #1
 801ad40:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801ad44:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ad48:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ad4c:	ea4c 0101 	orr.w	r1, ip, r1
 801ad50:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ad54:	4319      	orrs	r1, r3
 801ad56:	f8a8 1000 	strh.w	r1, [r8]
 801ad5a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ad5c:	441c      	add	r4, r3
 801ad5e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ad60:	f108 0802 	add.w	r8, r8, #2
 801ad64:	441e      	add	r6, r3
 801ad66:	f109 39ff 	add.w	r9, r9, #4294967295
 801ad6a:	e732      	b.n	801abd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x102>
 801ad6c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ad6e:	441c      	add	r4, r3
 801ad70:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ad72:	441e      	add	r6, r3
 801ad74:	9b06      	ldr	r3, [sp, #24]
 801ad76:	3b01      	subs	r3, #1
 801ad78:	9306      	str	r3, [sp, #24]
 801ad7a:	f10b 0b02 	add.w	fp, fp, #2
 801ad7e:	e6df      	b.n	801ab40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801ad80:	f47f aef0 	bne.w	801ab64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801ad84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ad86:	2b00      	cmp	r3, #0
 801ad88:	f340 813a 	ble.w	801b000 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801ad8c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801ad90:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ad94:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801ad98:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ad9a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801ad9e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801ada2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801ada6:	eef0 6a48 	vmov.f32	s13, s16
 801adaa:	ee69 7a27 	vmul.f32	s15, s18, s15
 801adae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801adb2:	ee37 8a48 	vsub.f32	s16, s14, s16
 801adb6:	ee16 4a90 	vmov	r4, s13
 801adba:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801adbe:	eef0 6a68 	vmov.f32	s13, s17
 801adc2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801adc6:	ee18 2a10 	vmov	r2, s16
 801adca:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801adce:	fb92 f3f3 	sdiv	r3, r2, r3
 801add2:	ee18 2a90 	vmov	r2, s17
 801add6:	9329      	str	r3, [sp, #164]	; 0xa4
 801add8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801adda:	fb92 f3f3 	sdiv	r3, r2, r3
 801adde:	932a      	str	r3, [sp, #168]	; 0xa8
 801ade0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ade2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ade4:	3b01      	subs	r3, #1
 801ade6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801adea:	930a      	str	r3, [sp, #40]	; 0x28
 801adec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801adee:	bf08      	it	eq
 801adf0:	4613      	moveq	r3, r2
 801adf2:	ee16 6a90 	vmov	r6, s13
 801adf6:	9306      	str	r3, [sp, #24]
 801adf8:	eef0 8a67 	vmov.f32	s17, s15
 801adfc:	eeb0 8a47 	vmov.f32	s16, s14
 801ae00:	e697      	b.n	801ab32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801ae02:	2900      	cmp	r1, #0
 801ae04:	f43f af44 	beq.w	801ac90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801ae08:	4453      	add	r3, sl
 801ae0a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ae0e:	07db      	lsls	r3, r3, #31
 801ae10:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ae14:	bf54      	ite	pl
 801ae16:	f00c 030f 	andpl.w	r3, ip, #15
 801ae1a:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801ae1e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ae22:	b2db      	uxtb	r3, r3
 801ae24:	930b      	str	r3, [sp, #44]	; 0x2c
 801ae26:	e733      	b.n	801ac90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801ae28:	08d2      	lsrs	r2, r2, #3
 801ae2a:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801ae2e:	ea4e 0ccc 	orr.w	ip, lr, ip, lsl #3
 801ae32:	f8a8 c000 	strh.w	ip, [r8]
 801ae36:	e790      	b.n	801ad5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801ae38:	1c45      	adds	r5, r0, #1
 801ae3a:	d18e      	bne.n	801ad5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801ae3c:	9d07      	ldr	r5, [sp, #28]
 801ae3e:	4285      	cmp	r5, r0
 801ae40:	dd8b      	ble.n	801ad5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801ae42:	1c5d      	adds	r5, r3, #1
 801ae44:	db89      	blt.n	801ad5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801ae46:	9d08      	ldr	r5, [sp, #32]
 801ae48:	429d      	cmp	r5, r3
 801ae4a:	dd86      	ble.n	801ad5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801ae4c:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801ae50:	9b07      	ldr	r3, [sp, #28]
 801ae52:	9300      	str	r3, [sp, #0]
 801ae54:	e9cd 2104 	strd	r2, r1, [sp, #16]
 801ae58:	9501      	str	r5, [sp, #4]
 801ae5a:	4653      	mov	r3, sl
 801ae5c:	463a      	mov	r2, r7
 801ae5e:	4641      	mov	r1, r8
 801ae60:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ae62:	f7ff fd4f 	bl	801a904 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801ae66:	e778      	b.n	801ad5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801ae68:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ae6a:	1422      	asrs	r2, r4, #16
 801ae6c:	1433      	asrs	r3, r6, #16
 801ae6e:	fb01 2303 	mla	r3, r1, r3, r2
 801ae72:	085a      	lsrs	r2, r3, #1
 801ae74:	07d9      	lsls	r1, r3, #31
 801ae76:	5cba      	ldrb	r2, [r7, r2]
 801ae78:	bf54      	ite	pl
 801ae7a:	f002 020f 	andpl.w	r2, r2, #15
 801ae7e:	1112      	asrmi	r2, r2, #4
 801ae80:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ae84:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ae88:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801ae8c:	b2d2      	uxtb	r2, r2
 801ae8e:	2800      	cmp	r0, #0
 801ae90:	f000 809b 	beq.w	801afca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fa>
 801ae94:	f103 0e01 	add.w	lr, r3, #1
 801ae98:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801ae9c:	f01e 0f01 	tst.w	lr, #1
 801aea0:	5c79      	ldrb	r1, [r7, r1]
 801aea2:	bf0c      	ite	eq
 801aea4:	f001 010f 	andeq.w	r1, r1, #15
 801aea8:	1109      	asrne	r1, r1, #4
 801aeaa:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801aeae:	b2c9      	uxtb	r1, r1
 801aeb0:	9111      	str	r1, [sp, #68]	; 0x44
 801aeb2:	f1bc 0f00 	cmp.w	ip, #0
 801aeb6:	d018      	beq.n	801aeea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801aeb8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801aeba:	440b      	add	r3, r1
 801aebc:	0859      	lsrs	r1, r3, #1
 801aebe:	07dd      	lsls	r5, r3, #31
 801aec0:	5c79      	ldrb	r1, [r7, r1]
 801aec2:	bf54      	ite	pl
 801aec4:	f001 010f 	andpl.w	r1, r1, #15
 801aec8:	1109      	asrmi	r1, r1, #4
 801aeca:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801aece:	b2c9      	uxtb	r1, r1
 801aed0:	3301      	adds	r3, #1
 801aed2:	910c      	str	r1, [sp, #48]	; 0x30
 801aed4:	0859      	lsrs	r1, r3, #1
 801aed6:	07dd      	lsls	r5, r3, #31
 801aed8:	5c79      	ldrb	r1, [r7, r1]
 801aeda:	bf54      	ite	pl
 801aedc:	f001 010f 	andpl.w	r1, r1, #15
 801aee0:	1109      	asrmi	r1, r1, #4
 801aee2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801aee6:	b2c9      	uxtb	r1, r1
 801aee8:	9112      	str	r1, [sp, #72]	; 0x48
 801aeea:	b280      	uxth	r0, r0
 801aeec:	fa1f fc8c 	uxth.w	ip, ip
 801aef0:	fb00 f30c 	mul.w	r3, r0, ip
 801aef4:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801aef8:	0100      	lsls	r0, r0, #4
 801aefa:	fa1f fc8c 	uxth.w	ip, ip
 801aefe:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801af02:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801af04:	1ac0      	subs	r0, r0, r3
 801af06:	eba1 010c 	sub.w	r1, r1, ip
 801af0a:	b280      	uxth	r0, r0
 801af0c:	b289      	uxth	r1, r1
 801af0e:	4368      	muls	r0, r5
 801af10:	fb02 0201 	mla	r2, r2, r1, r0
 801af14:	990c      	ldr	r1, [sp, #48]	; 0x30
 801af16:	fb0c 2c01 	mla	ip, ip, r1, r2
 801af1a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801af1c:	fb03 c302 	mla	r3, r3, r2, ip
 801af20:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801af24:	2b00      	cmp	r3, #0
 801af26:	d047      	beq.n	801afb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 801af28:	4a30      	ldr	r2, [pc, #192]	; (801afec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801af2a:	4931      	ldr	r1, [pc, #196]	; (801aff0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801af2c:	6812      	ldr	r2, [r2, #0]
 801af2e:	2bff      	cmp	r3, #255	; 0xff
 801af30:	ea4f 2e22 	mov.w	lr, r2, asr #8
 801af34:	f3c2 0ccc 	ubfx	ip, r2, #3, #13
 801af38:	ea01 02c2 	and.w	r2, r1, r2, lsl #3
 801af3c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801af40:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801af44:	b2d2      	uxtb	r2, r2
 801af46:	d055      	beq.n	801aff4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 801af48:	f8b8 0000 	ldrh.w	r0, [r8]
 801af4c:	fa1f f983 	uxth.w	r9, r3
 801af50:	1201      	asrs	r1, r0, #8
 801af52:	43db      	mvns	r3, r3
 801af54:	b2db      	uxtb	r3, r3
 801af56:	fb1e fe09 	smulbb	lr, lr, r9
 801af5a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801af5e:	fb01 e103 	mla	r1, r1, r3, lr
 801af62:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801af66:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801af6a:	fb1c fc09 	smulbb	ip, ip, r9
 801af6e:	fb0e cc03 	mla	ip, lr, r3, ip
 801af72:	00c0      	lsls	r0, r0, #3
 801af74:	fa1f fc8c 	uxth.w	ip, ip
 801af78:	b2c0      	uxtb	r0, r0
 801af7a:	fb12 f209 	smulbb	r2, r2, r9
 801af7e:	b289      	uxth	r1, r1
 801af80:	fb00 2203 	mla	r2, r0, r3, r2
 801af84:	f10c 0e01 	add.w	lr, ip, #1
 801af88:	b292      	uxth	r2, r2
 801af8a:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 801af8e:	f101 0e01 	add.w	lr, r1, #1
 801af92:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801af96:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 801af9a:	1c53      	adds	r3, r2, #1
 801af9c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801afa0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801afa4:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801afa8:	ea4c 0c01 	orr.w	ip, ip, r1
 801afac:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801afb0:	ea4c 0c02 	orr.w	ip, ip, r2
 801afb4:	f8a8 c000 	strh.w	ip, [r8]
 801afb8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801afba:	441c      	add	r4, r3
 801afbc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801afbe:	f108 0802 	add.w	r8, r8, #2
 801afc2:	441e      	add	r6, r3
 801afc4:	f10a 3aff 	add.w	sl, sl, #4294967295
 801afc8:	e5e6      	b.n	801ab98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 801afca:	f1bc 0f00 	cmp.w	ip, #0
 801afce:	d08c      	beq.n	801aeea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801afd0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801afd2:	440b      	add	r3, r1
 801afd4:	0859      	lsrs	r1, r3, #1
 801afd6:	07db      	lsls	r3, r3, #31
 801afd8:	5c79      	ldrb	r1, [r7, r1]
 801afda:	bf54      	ite	pl
 801afdc:	f001 010f 	andpl.w	r1, r1, #15
 801afe0:	1109      	asrmi	r1, r1, #4
 801afe2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801afe6:	b2c9      	uxtb	r1, r1
 801afe8:	910c      	str	r1, [sp, #48]	; 0x30
 801afea:	e77e      	b.n	801aeea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801afec:	20026908 	.word	0x20026908
 801aff0:	0007fff8 	.word	0x0007fff8
 801aff4:	08d2      	lsrs	r2, r2, #3
 801aff6:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801affa:	ea4e 0ccc 	orr.w	ip, lr, ip, lsl #3
 801affe:	e7d9      	b.n	801afb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e4>
 801b000:	b015      	add	sp, #84	; 0x54
 801b002:	ecbd 8b08 	vpop	{d8-d11}
 801b006:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b00a:	bf00      	nop

0801b00c <CRC_Lock>:
 801b00c:	b530      	push	{r4, r5, lr}
 801b00e:	4a1d      	ldr	r2, [pc, #116]	; (801b084 <CRC_Lock+0x78>)
 801b010:	6813      	ldr	r3, [r2, #0]
 801b012:	f023 0301 	bic.w	r3, r3, #1
 801b016:	6013      	str	r3, [r2, #0]
 801b018:	4b1b      	ldr	r3, [pc, #108]	; (801b088 <CRC_Lock+0x7c>)
 801b01a:	681a      	ldr	r2, [r3, #0]
 801b01c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801b020:	4022      	ands	r2, r4
 801b022:	f24c 2540 	movw	r5, #49728	; 0xc240
 801b026:	42aa      	cmp	r2, r5
 801b028:	d005      	beq.n	801b036 <CRC_Lock+0x2a>
 801b02a:	681b      	ldr	r3, [r3, #0]
 801b02c:	f24c 2270 	movw	r2, #49776	; 0xc270
 801b030:	4023      	ands	r3, r4
 801b032:	4293      	cmp	r3, r2
 801b034:	d11d      	bne.n	801b072 <CRC_Lock+0x66>
 801b036:	4b15      	ldr	r3, [pc, #84]	; (801b08c <CRC_Lock+0x80>)
 801b038:	681b      	ldr	r3, [r3, #0]
 801b03a:	b9d3      	cbnz	r3, 801b072 <CRC_Lock+0x66>
 801b03c:	4a14      	ldr	r2, [pc, #80]	; (801b090 <CRC_Lock+0x84>)
 801b03e:	6813      	ldr	r3, [r2, #0]
 801b040:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b044:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801b048:	d006      	beq.n	801b058 <CRC_Lock+0x4c>
 801b04a:	6813      	ldr	r3, [r2, #0]
 801b04c:	f240 4283 	movw	r2, #1155	; 0x483
 801b050:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b054:	4293      	cmp	r3, r2
 801b056:	d10c      	bne.n	801b072 <CRC_Lock+0x66>
 801b058:	4b0e      	ldr	r3, [pc, #56]	; (801b094 <CRC_Lock+0x88>)
 801b05a:	2201      	movs	r2, #1
 801b05c:	601a      	str	r2, [r3, #0]
 801b05e:	681a      	ldr	r2, [r3, #0]
 801b060:	2a00      	cmp	r2, #0
 801b062:	d1fc      	bne.n	801b05e <CRC_Lock+0x52>
 801b064:	4b0c      	ldr	r3, [pc, #48]	; (801b098 <CRC_Lock+0x8c>)
 801b066:	6018      	str	r0, [r3, #0]
 801b068:	6818      	ldr	r0, [r3, #0]
 801b06a:	1a43      	subs	r3, r0, r1
 801b06c:	4258      	negs	r0, r3
 801b06e:	4158      	adcs	r0, r3
 801b070:	bd30      	pop	{r4, r5, pc}
 801b072:	4b0a      	ldr	r3, [pc, #40]	; (801b09c <CRC_Lock+0x90>)
 801b074:	2201      	movs	r2, #1
 801b076:	601a      	str	r2, [r3, #0]
 801b078:	681a      	ldr	r2, [r3, #0]
 801b07a:	2a00      	cmp	r2, #0
 801b07c:	d1fc      	bne.n	801b078 <CRC_Lock+0x6c>
 801b07e:	4b08      	ldr	r3, [pc, #32]	; (801b0a0 <CRC_Lock+0x94>)
 801b080:	e7f1      	b.n	801b066 <CRC_Lock+0x5a>
 801b082:	bf00      	nop
 801b084:	e0002000 	.word	0xe0002000
 801b088:	e000ed00 	.word	0xe000ed00
 801b08c:	e0042000 	.word	0xe0042000
 801b090:	5c001000 	.word	0x5c001000
 801b094:	58024c08 	.word	0x58024c08
 801b098:	58024c00 	.word	0x58024c00
 801b09c:	40023008 	.word	0x40023008
 801b0a0:	40023000 	.word	0x40023000

0801b0a4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801b0a4:	6101      	str	r1, [r0, #16]
 801b0a6:	4770      	bx	lr

0801b0a8 <_ZN8touchgfx8Gestures4tickEv>:
 801b0a8:	7b83      	ldrb	r3, [r0, #14]
 801b0aa:	b14b      	cbz	r3, 801b0c0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801b0ac:	8903      	ldrh	r3, [r0, #8]
 801b0ae:	3301      	adds	r3, #1
 801b0b0:	b29b      	uxth	r3, r3
 801b0b2:	2b07      	cmp	r3, #7
 801b0b4:	8103      	strh	r3, [r0, #8]
 801b0b6:	bf81      	itttt	hi
 801b0b8:	2300      	movhi	r3, #0
 801b0ba:	8143      	strhhi	r3, [r0, #10]
 801b0bc:	8183      	strhhi	r3, [r0, #12]
 801b0be:	7383      	strbhi	r3, [r0, #14]
 801b0c0:	4770      	bx	lr
	...

0801b0c4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801b0c4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801b0c8:	4604      	mov	r4, r0
 801b0ca:	8880      	ldrh	r0, [r0, #4]
 801b0cc:	f8ad 0006 	strh.w	r0, [sp, #6]
 801b0d0:	4698      	mov	r8, r3
 801b0d2:	eba8 0000 	sub.w	r0, r8, r0
 801b0d6:	4b1c      	ldr	r3, [pc, #112]	; (801b148 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801b0d8:	9300      	str	r3, [sp, #0]
 801b0da:	b280      	uxth	r0, r0
 801b0dc:	2300      	movs	r3, #0
 801b0de:	f88d 3004 	strb.w	r3, [sp, #4]
 801b0e2:	b203      	sxth	r3, r0
 801b0e4:	2b00      	cmp	r3, #0
 801b0e6:	bfb8      	it	lt
 801b0e8:	4240      	neglt	r0, r0
 801b0ea:	4617      	mov	r7, r2
 801b0ec:	8aa2      	ldrh	r2, [r4, #20]
 801b0ee:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801b0f2:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b0f6:	bfb8      	it	lt
 801b0f8:	b203      	sxthlt	r3, r0
 801b0fa:	460e      	mov	r6, r1
 801b0fc:	4293      	cmp	r3, r2
 801b0fe:	88e1      	ldrh	r1, [r4, #6]
 801b100:	f8ad 1008 	strh.w	r1, [sp, #8]
 801b104:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b108:	dc08      	bgt.n	801b11c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801b10a:	1a69      	subs	r1, r5, r1
 801b10c:	b289      	uxth	r1, r1
 801b10e:	b20b      	sxth	r3, r1
 801b110:	2b00      	cmp	r3, #0
 801b112:	bfbc      	itt	lt
 801b114:	4249      	neglt	r1, r1
 801b116:	b20b      	sxthlt	r3, r1
 801b118:	429a      	cmp	r2, r3
 801b11a:	da13      	bge.n	801b144 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801b11c:	6920      	ldr	r0, [r4, #16]
 801b11e:	6803      	ldr	r3, [r0, #0]
 801b120:	4669      	mov	r1, sp
 801b122:	685b      	ldr	r3, [r3, #4]
 801b124:	4798      	blx	r3
 801b126:	eba8 0606 	sub.w	r6, r8, r6
 801b12a:	2300      	movs	r3, #0
 801b12c:	1bef      	subs	r7, r5, r7
 801b12e:	2001      	movs	r0, #1
 801b130:	8123      	strh	r3, [r4, #8]
 801b132:	8166      	strh	r6, [r4, #10]
 801b134:	81a7      	strh	r7, [r4, #12]
 801b136:	f8a4 8004 	strh.w	r8, [r4, #4]
 801b13a:	80e5      	strh	r5, [r4, #6]
 801b13c:	73a0      	strb	r0, [r4, #14]
 801b13e:	b004      	add	sp, #16
 801b140:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b144:	2000      	movs	r0, #0
 801b146:	e7fa      	b.n	801b13e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801b148:	0801e1e4 	.word	0x0801e1e4

0801b14c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801b14c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b14e:	461e      	mov	r6, r3
 801b150:	1e4b      	subs	r3, r1, #1
 801b152:	2b01      	cmp	r3, #1
 801b154:	b085      	sub	sp, #20
 801b156:	4604      	mov	r4, r0
 801b158:	460d      	mov	r5, r1
 801b15a:	4617      	mov	r7, r2
 801b15c:	d84b      	bhi.n	801b1f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801b15e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801b162:	1cd3      	adds	r3, r2, #3
 801b164:	b29b      	uxth	r3, r3
 801b166:	2b06      	cmp	r3, #6
 801b168:	d916      	bls.n	801b198 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801b16a:	f8df c098 	ldr.w	ip, [pc, #152]	; 801b204 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb8>
 801b16e:	f8cd c004 	str.w	ip, [sp, #4]
 801b172:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b176:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b17a:	6900      	ldr	r0, [r0, #16]
 801b17c:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b180:	f04f 0c00 	mov.w	ip, #0
 801b184:	f88d c008 	strb.w	ip, [sp, #8]
 801b188:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b18c:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b190:	6803      	ldr	r3, [r0, #0]
 801b192:	a901      	add	r1, sp, #4
 801b194:	689b      	ldr	r3, [r3, #8]
 801b196:	4798      	blx	r3
 801b198:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b19c:	1cd3      	adds	r3, r2, #3
 801b19e:	b29b      	uxth	r3, r3
 801b1a0:	2b06      	cmp	r3, #6
 801b1a2:	d916      	bls.n	801b1d2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b1a4:	f8df c05c 	ldr.w	ip, [pc, #92]	; 801b204 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb8>
 801b1a8:	f8cd c004 	str.w	ip, [sp, #4]
 801b1ac:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b1b0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b1b4:	6920      	ldr	r0, [r4, #16]
 801b1b6:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b1ba:	f04f 0c01 	mov.w	ip, #1
 801b1be:	f88d c008 	strb.w	ip, [sp, #8]
 801b1c2:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b1c6:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b1ca:	6803      	ldr	r3, [r0, #0]
 801b1cc:	a901      	add	r1, sp, #4
 801b1ce:	689b      	ldr	r3, [r3, #8]
 801b1d0:	4798      	blx	r3
 801b1d2:	4b0b      	ldr	r3, [pc, #44]	; (801b200 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb4>)
 801b1d4:	9301      	str	r3, [sp, #4]
 801b1d6:	6920      	ldr	r0, [r4, #16]
 801b1d8:	f88d 5008 	strb.w	r5, [sp, #8]
 801b1dc:	2300      	movs	r3, #0
 801b1de:	f8ad 700a 	strh.w	r7, [sp, #10]
 801b1e2:	f8ad 600c 	strh.w	r6, [sp, #12]
 801b1e6:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b1ea:	6803      	ldr	r3, [r0, #0]
 801b1ec:	a901      	add	r1, sp, #4
 801b1ee:	681b      	ldr	r3, [r3, #0]
 801b1f0:	4798      	blx	r3
 801b1f2:	b005      	add	sp, #20
 801b1f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b1f6:	2900      	cmp	r1, #0
 801b1f8:	d1eb      	bne.n	801b1d2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b1fa:	80a2      	strh	r2, [r4, #4]
 801b1fc:	80c6      	strh	r6, [r0, #6]
 801b1fe:	e7e8      	b.n	801b1d2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b200:	0801e1d0 	.word	0x0801e1d0
 801b204:	0801e1f8 	.word	0x0801e1f8

0801b208 <__aeabi_atexit>:
 801b208:	460b      	mov	r3, r1
 801b20a:	4601      	mov	r1, r0
 801b20c:	4618      	mov	r0, r3
 801b20e:	f000 b853 	b.w	801b2b8 <__cxa_atexit>

0801b212 <__cxa_pure_virtual>:
 801b212:	b508      	push	{r3, lr}
 801b214:	f000 f820 	bl	801b258 <_ZSt9terminatev>

0801b218 <_ZdlPvj>:
 801b218:	f000 b80f 	b.w	801b23a <_ZdlPv>

0801b21c <__cxa_guard_acquire>:
 801b21c:	6803      	ldr	r3, [r0, #0]
 801b21e:	07db      	lsls	r3, r3, #31
 801b220:	d406      	bmi.n	801b230 <__cxa_guard_acquire+0x14>
 801b222:	7843      	ldrb	r3, [r0, #1]
 801b224:	b103      	cbz	r3, 801b228 <__cxa_guard_acquire+0xc>
 801b226:	deff      	udf	#255	; 0xff
 801b228:	2301      	movs	r3, #1
 801b22a:	7043      	strb	r3, [r0, #1]
 801b22c:	4618      	mov	r0, r3
 801b22e:	4770      	bx	lr
 801b230:	2000      	movs	r0, #0
 801b232:	4770      	bx	lr

0801b234 <__cxa_guard_release>:
 801b234:	2301      	movs	r3, #1
 801b236:	6003      	str	r3, [r0, #0]
 801b238:	4770      	bx	lr

0801b23a <_ZdlPv>:
 801b23a:	f000 b88f 	b.w	801b35c <free>

0801b23e <_ZN10__cxxabiv111__terminateEPFvvE>:
 801b23e:	b508      	push	{r3, lr}
 801b240:	4780      	blx	r0
 801b242:	f000 f80e 	bl	801b262 <abort>
	...

0801b248 <_ZSt13get_terminatev>:
 801b248:	4b02      	ldr	r3, [pc, #8]	; (801b254 <_ZSt13get_terminatev+0xc>)
 801b24a:	6818      	ldr	r0, [r3, #0]
 801b24c:	f3bf 8f5b 	dmb	ish
 801b250:	4770      	bx	lr
 801b252:	bf00      	nop
 801b254:	20000090 	.word	0x20000090

0801b258 <_ZSt9terminatev>:
 801b258:	b508      	push	{r3, lr}
 801b25a:	f7ff fff5 	bl	801b248 <_ZSt13get_terminatev>
 801b25e:	f7ff ffee 	bl	801b23e <_ZN10__cxxabiv111__terminateEPFvvE>

0801b262 <abort>:
 801b262:	b508      	push	{r3, lr}
 801b264:	2006      	movs	r0, #6
 801b266:	f000 fc3d 	bl	801bae4 <raise>
 801b26a:	2001      	movs	r0, #1
 801b26c:	f7e7 f9f4 	bl	8002658 <_exit>

0801b270 <__assert_func>:
 801b270:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801b272:	461c      	mov	r4, r3
 801b274:	4b09      	ldr	r3, [pc, #36]	; (801b29c <__assert_func+0x2c>)
 801b276:	681b      	ldr	r3, [r3, #0]
 801b278:	4605      	mov	r5, r0
 801b27a:	68d8      	ldr	r0, [r3, #12]
 801b27c:	b152      	cbz	r2, 801b294 <__assert_func+0x24>
 801b27e:	4b08      	ldr	r3, [pc, #32]	; (801b2a0 <__assert_func+0x30>)
 801b280:	9100      	str	r1, [sp, #0]
 801b282:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801b286:	4907      	ldr	r1, [pc, #28]	; (801b2a4 <__assert_func+0x34>)
 801b288:	462b      	mov	r3, r5
 801b28a:	4622      	mov	r2, r4
 801b28c:	f000 f828 	bl	801b2e0 <fiprintf>
 801b290:	f7ff ffe7 	bl	801b262 <abort>
 801b294:	4b04      	ldr	r3, [pc, #16]	; (801b2a8 <__assert_func+0x38>)
 801b296:	461a      	mov	r2, r3
 801b298:	e7f2      	b.n	801b280 <__assert_func+0x10>
 801b29a:	bf00      	nop
 801b29c:	20000094 	.word	0x20000094
 801b2a0:	0801f640 	.word	0x0801f640
 801b2a4:	0801f64d 	.word	0x0801f64d
 801b2a8:	0801f67b 	.word	0x0801f67b

0801b2ac <atexit>:
 801b2ac:	2300      	movs	r3, #0
 801b2ae:	4601      	mov	r1, r0
 801b2b0:	461a      	mov	r2, r3
 801b2b2:	4618      	mov	r0, r3
 801b2b4:	f000 bd12 	b.w	801bcdc <__register_exitproc>

0801b2b8 <__cxa_atexit>:
 801b2b8:	b510      	push	{r4, lr}
 801b2ba:	4c05      	ldr	r4, [pc, #20]	; (801b2d0 <__cxa_atexit+0x18>)
 801b2bc:	4613      	mov	r3, r2
 801b2be:	b12c      	cbz	r4, 801b2cc <__cxa_atexit+0x14>
 801b2c0:	460a      	mov	r2, r1
 801b2c2:	4601      	mov	r1, r0
 801b2c4:	2002      	movs	r0, #2
 801b2c6:	f000 fd09 	bl	801bcdc <__register_exitproc>
 801b2ca:	bd10      	pop	{r4, pc}
 801b2cc:	4620      	mov	r0, r4
 801b2ce:	e7fc      	b.n	801b2ca <__cxa_atexit+0x12>
 801b2d0:	0801bcdd 	.word	0x0801bcdd

0801b2d4 <__errno>:
 801b2d4:	4b01      	ldr	r3, [pc, #4]	; (801b2dc <__errno+0x8>)
 801b2d6:	6818      	ldr	r0, [r3, #0]
 801b2d8:	4770      	bx	lr
 801b2da:	bf00      	nop
 801b2dc:	20000094 	.word	0x20000094

0801b2e0 <fiprintf>:
 801b2e0:	b40e      	push	{r1, r2, r3}
 801b2e2:	b503      	push	{r0, r1, lr}
 801b2e4:	4601      	mov	r1, r0
 801b2e6:	ab03      	add	r3, sp, #12
 801b2e8:	4805      	ldr	r0, [pc, #20]	; (801b300 <fiprintf+0x20>)
 801b2ea:	f853 2b04 	ldr.w	r2, [r3], #4
 801b2ee:	6800      	ldr	r0, [r0, #0]
 801b2f0:	9301      	str	r3, [sp, #4]
 801b2f2:	f000 f921 	bl	801b538 <_vfiprintf_r>
 801b2f6:	b002      	add	sp, #8
 801b2f8:	f85d eb04 	ldr.w	lr, [sp], #4
 801b2fc:	b003      	add	sp, #12
 801b2fe:	4770      	bx	lr
 801b300:	20000094 	.word	0x20000094

0801b304 <__libc_init_array>:
 801b304:	b570      	push	{r4, r5, r6, lr}
 801b306:	4e0d      	ldr	r6, [pc, #52]	; (801b33c <__libc_init_array+0x38>)
 801b308:	4c0d      	ldr	r4, [pc, #52]	; (801b340 <__libc_init_array+0x3c>)
 801b30a:	1ba4      	subs	r4, r4, r6
 801b30c:	10a4      	asrs	r4, r4, #2
 801b30e:	2500      	movs	r5, #0
 801b310:	42a5      	cmp	r5, r4
 801b312:	d109      	bne.n	801b328 <__libc_init_array+0x24>
 801b314:	4e0b      	ldr	r6, [pc, #44]	; (801b344 <__libc_init_array+0x40>)
 801b316:	4c0c      	ldr	r4, [pc, #48]	; (801b348 <__libc_init_array+0x44>)
 801b318:	f001 f96a 	bl	801c5f0 <_init>
 801b31c:	1ba4      	subs	r4, r4, r6
 801b31e:	10a4      	asrs	r4, r4, #2
 801b320:	2500      	movs	r5, #0
 801b322:	42a5      	cmp	r5, r4
 801b324:	d105      	bne.n	801b332 <__libc_init_array+0x2e>
 801b326:	bd70      	pop	{r4, r5, r6, pc}
 801b328:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801b32c:	4798      	blx	r3
 801b32e:	3501      	adds	r5, #1
 801b330:	e7ee      	b.n	801b310 <__libc_init_array+0xc>
 801b332:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801b336:	4798      	blx	r3
 801b338:	3501      	adds	r5, #1
 801b33a:	e7f2      	b.n	801b322 <__libc_init_array+0x1e>
 801b33c:	080337a0 	.word	0x080337a0
 801b340:	080337a0 	.word	0x080337a0
 801b344:	080337a0 	.word	0x080337a0
 801b348:	080337b4 	.word	0x080337b4

0801b34c <malloc>:
 801b34c:	4b02      	ldr	r3, [pc, #8]	; (801b358 <malloc+0xc>)
 801b34e:	4601      	mov	r1, r0
 801b350:	6818      	ldr	r0, [r3, #0]
 801b352:	f000 b86d 	b.w	801b430 <_malloc_r>
 801b356:	bf00      	nop
 801b358:	20000094 	.word	0x20000094

0801b35c <free>:
 801b35c:	4b02      	ldr	r3, [pc, #8]	; (801b368 <free+0xc>)
 801b35e:	4601      	mov	r1, r0
 801b360:	6818      	ldr	r0, [r3, #0]
 801b362:	f000 b817 	b.w	801b394 <_free_r>
 801b366:	bf00      	nop
 801b368:	20000094 	.word	0x20000094

0801b36c <memcpy>:
 801b36c:	b510      	push	{r4, lr}
 801b36e:	1e43      	subs	r3, r0, #1
 801b370:	440a      	add	r2, r1
 801b372:	4291      	cmp	r1, r2
 801b374:	d100      	bne.n	801b378 <memcpy+0xc>
 801b376:	bd10      	pop	{r4, pc}
 801b378:	f811 4b01 	ldrb.w	r4, [r1], #1
 801b37c:	f803 4f01 	strb.w	r4, [r3, #1]!
 801b380:	e7f7      	b.n	801b372 <memcpy+0x6>

0801b382 <memset>:
 801b382:	4402      	add	r2, r0
 801b384:	4603      	mov	r3, r0
 801b386:	4293      	cmp	r3, r2
 801b388:	d100      	bne.n	801b38c <memset+0xa>
 801b38a:	4770      	bx	lr
 801b38c:	f803 1b01 	strb.w	r1, [r3], #1
 801b390:	e7f9      	b.n	801b386 <memset+0x4>
	...

0801b394 <_free_r>:
 801b394:	b538      	push	{r3, r4, r5, lr}
 801b396:	4605      	mov	r5, r0
 801b398:	2900      	cmp	r1, #0
 801b39a:	d045      	beq.n	801b428 <_free_r+0x94>
 801b39c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801b3a0:	1f0c      	subs	r4, r1, #4
 801b3a2:	2b00      	cmp	r3, #0
 801b3a4:	bfb8      	it	lt
 801b3a6:	18e4      	addlt	r4, r4, r3
 801b3a8:	f000 fef3 	bl	801c192 <__malloc_lock>
 801b3ac:	4a1f      	ldr	r2, [pc, #124]	; (801b42c <_free_r+0x98>)
 801b3ae:	6813      	ldr	r3, [r2, #0]
 801b3b0:	4610      	mov	r0, r2
 801b3b2:	b933      	cbnz	r3, 801b3c2 <_free_r+0x2e>
 801b3b4:	6063      	str	r3, [r4, #4]
 801b3b6:	6014      	str	r4, [r2, #0]
 801b3b8:	4628      	mov	r0, r5
 801b3ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801b3be:	f000 bee9 	b.w	801c194 <__malloc_unlock>
 801b3c2:	42a3      	cmp	r3, r4
 801b3c4:	d90c      	bls.n	801b3e0 <_free_r+0x4c>
 801b3c6:	6821      	ldr	r1, [r4, #0]
 801b3c8:	1862      	adds	r2, r4, r1
 801b3ca:	4293      	cmp	r3, r2
 801b3cc:	bf04      	itt	eq
 801b3ce:	681a      	ldreq	r2, [r3, #0]
 801b3d0:	685b      	ldreq	r3, [r3, #4]
 801b3d2:	6063      	str	r3, [r4, #4]
 801b3d4:	bf04      	itt	eq
 801b3d6:	1852      	addeq	r2, r2, r1
 801b3d8:	6022      	streq	r2, [r4, #0]
 801b3da:	6004      	str	r4, [r0, #0]
 801b3dc:	e7ec      	b.n	801b3b8 <_free_r+0x24>
 801b3de:	4613      	mov	r3, r2
 801b3e0:	685a      	ldr	r2, [r3, #4]
 801b3e2:	b10a      	cbz	r2, 801b3e8 <_free_r+0x54>
 801b3e4:	42a2      	cmp	r2, r4
 801b3e6:	d9fa      	bls.n	801b3de <_free_r+0x4a>
 801b3e8:	6819      	ldr	r1, [r3, #0]
 801b3ea:	1858      	adds	r0, r3, r1
 801b3ec:	42a0      	cmp	r0, r4
 801b3ee:	d10b      	bne.n	801b408 <_free_r+0x74>
 801b3f0:	6820      	ldr	r0, [r4, #0]
 801b3f2:	4401      	add	r1, r0
 801b3f4:	1858      	adds	r0, r3, r1
 801b3f6:	4282      	cmp	r2, r0
 801b3f8:	6019      	str	r1, [r3, #0]
 801b3fa:	d1dd      	bne.n	801b3b8 <_free_r+0x24>
 801b3fc:	6810      	ldr	r0, [r2, #0]
 801b3fe:	6852      	ldr	r2, [r2, #4]
 801b400:	605a      	str	r2, [r3, #4]
 801b402:	4401      	add	r1, r0
 801b404:	6019      	str	r1, [r3, #0]
 801b406:	e7d7      	b.n	801b3b8 <_free_r+0x24>
 801b408:	d902      	bls.n	801b410 <_free_r+0x7c>
 801b40a:	230c      	movs	r3, #12
 801b40c:	602b      	str	r3, [r5, #0]
 801b40e:	e7d3      	b.n	801b3b8 <_free_r+0x24>
 801b410:	6820      	ldr	r0, [r4, #0]
 801b412:	1821      	adds	r1, r4, r0
 801b414:	428a      	cmp	r2, r1
 801b416:	bf04      	itt	eq
 801b418:	6811      	ldreq	r1, [r2, #0]
 801b41a:	6852      	ldreq	r2, [r2, #4]
 801b41c:	6062      	str	r2, [r4, #4]
 801b41e:	bf04      	itt	eq
 801b420:	1809      	addeq	r1, r1, r0
 801b422:	6021      	streq	r1, [r4, #0]
 801b424:	605c      	str	r4, [r3, #4]
 801b426:	e7c7      	b.n	801b3b8 <_free_r+0x24>
 801b428:	bd38      	pop	{r3, r4, r5, pc}
 801b42a:	bf00      	nop
 801b42c:	20026a1c 	.word	0x20026a1c

0801b430 <_malloc_r>:
 801b430:	b570      	push	{r4, r5, r6, lr}
 801b432:	1ccd      	adds	r5, r1, #3
 801b434:	f025 0503 	bic.w	r5, r5, #3
 801b438:	3508      	adds	r5, #8
 801b43a:	2d0c      	cmp	r5, #12
 801b43c:	bf38      	it	cc
 801b43e:	250c      	movcc	r5, #12
 801b440:	2d00      	cmp	r5, #0
 801b442:	4606      	mov	r6, r0
 801b444:	db01      	blt.n	801b44a <_malloc_r+0x1a>
 801b446:	42a9      	cmp	r1, r5
 801b448:	d903      	bls.n	801b452 <_malloc_r+0x22>
 801b44a:	230c      	movs	r3, #12
 801b44c:	6033      	str	r3, [r6, #0]
 801b44e:	2000      	movs	r0, #0
 801b450:	bd70      	pop	{r4, r5, r6, pc}
 801b452:	f000 fe9e 	bl	801c192 <__malloc_lock>
 801b456:	4a21      	ldr	r2, [pc, #132]	; (801b4dc <_malloc_r+0xac>)
 801b458:	6814      	ldr	r4, [r2, #0]
 801b45a:	4621      	mov	r1, r4
 801b45c:	b991      	cbnz	r1, 801b484 <_malloc_r+0x54>
 801b45e:	4c20      	ldr	r4, [pc, #128]	; (801b4e0 <_malloc_r+0xb0>)
 801b460:	6823      	ldr	r3, [r4, #0]
 801b462:	b91b      	cbnz	r3, 801b46c <_malloc_r+0x3c>
 801b464:	4630      	mov	r0, r6
 801b466:	f000 fb05 	bl	801ba74 <_sbrk_r>
 801b46a:	6020      	str	r0, [r4, #0]
 801b46c:	4629      	mov	r1, r5
 801b46e:	4630      	mov	r0, r6
 801b470:	f000 fb00 	bl	801ba74 <_sbrk_r>
 801b474:	1c43      	adds	r3, r0, #1
 801b476:	d124      	bne.n	801b4c2 <_malloc_r+0x92>
 801b478:	230c      	movs	r3, #12
 801b47a:	6033      	str	r3, [r6, #0]
 801b47c:	4630      	mov	r0, r6
 801b47e:	f000 fe89 	bl	801c194 <__malloc_unlock>
 801b482:	e7e4      	b.n	801b44e <_malloc_r+0x1e>
 801b484:	680b      	ldr	r3, [r1, #0]
 801b486:	1b5b      	subs	r3, r3, r5
 801b488:	d418      	bmi.n	801b4bc <_malloc_r+0x8c>
 801b48a:	2b0b      	cmp	r3, #11
 801b48c:	d90f      	bls.n	801b4ae <_malloc_r+0x7e>
 801b48e:	600b      	str	r3, [r1, #0]
 801b490:	50cd      	str	r5, [r1, r3]
 801b492:	18cc      	adds	r4, r1, r3
 801b494:	4630      	mov	r0, r6
 801b496:	f000 fe7d 	bl	801c194 <__malloc_unlock>
 801b49a:	f104 000b 	add.w	r0, r4, #11
 801b49e:	1d23      	adds	r3, r4, #4
 801b4a0:	f020 0007 	bic.w	r0, r0, #7
 801b4a4:	1ac3      	subs	r3, r0, r3
 801b4a6:	d0d3      	beq.n	801b450 <_malloc_r+0x20>
 801b4a8:	425a      	negs	r2, r3
 801b4aa:	50e2      	str	r2, [r4, r3]
 801b4ac:	e7d0      	b.n	801b450 <_malloc_r+0x20>
 801b4ae:	428c      	cmp	r4, r1
 801b4b0:	684b      	ldr	r3, [r1, #4]
 801b4b2:	bf16      	itet	ne
 801b4b4:	6063      	strne	r3, [r4, #4]
 801b4b6:	6013      	streq	r3, [r2, #0]
 801b4b8:	460c      	movne	r4, r1
 801b4ba:	e7eb      	b.n	801b494 <_malloc_r+0x64>
 801b4bc:	460c      	mov	r4, r1
 801b4be:	6849      	ldr	r1, [r1, #4]
 801b4c0:	e7cc      	b.n	801b45c <_malloc_r+0x2c>
 801b4c2:	1cc4      	adds	r4, r0, #3
 801b4c4:	f024 0403 	bic.w	r4, r4, #3
 801b4c8:	42a0      	cmp	r0, r4
 801b4ca:	d005      	beq.n	801b4d8 <_malloc_r+0xa8>
 801b4cc:	1a21      	subs	r1, r4, r0
 801b4ce:	4630      	mov	r0, r6
 801b4d0:	f000 fad0 	bl	801ba74 <_sbrk_r>
 801b4d4:	3001      	adds	r0, #1
 801b4d6:	d0cf      	beq.n	801b478 <_malloc_r+0x48>
 801b4d8:	6025      	str	r5, [r4, #0]
 801b4da:	e7db      	b.n	801b494 <_malloc_r+0x64>
 801b4dc:	20026a1c 	.word	0x20026a1c
 801b4e0:	20026a20 	.word	0x20026a20

0801b4e4 <__sfputc_r>:
 801b4e4:	6893      	ldr	r3, [r2, #8]
 801b4e6:	3b01      	subs	r3, #1
 801b4e8:	2b00      	cmp	r3, #0
 801b4ea:	b410      	push	{r4}
 801b4ec:	6093      	str	r3, [r2, #8]
 801b4ee:	da08      	bge.n	801b502 <__sfputc_r+0x1e>
 801b4f0:	6994      	ldr	r4, [r2, #24]
 801b4f2:	42a3      	cmp	r3, r4
 801b4f4:	db01      	blt.n	801b4fa <__sfputc_r+0x16>
 801b4f6:	290a      	cmp	r1, #10
 801b4f8:	d103      	bne.n	801b502 <__sfputc_r+0x1e>
 801b4fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b4fe:	f000 bb2d 	b.w	801bb5c <__swbuf_r>
 801b502:	6813      	ldr	r3, [r2, #0]
 801b504:	1c58      	adds	r0, r3, #1
 801b506:	6010      	str	r0, [r2, #0]
 801b508:	7019      	strb	r1, [r3, #0]
 801b50a:	4608      	mov	r0, r1
 801b50c:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b510:	4770      	bx	lr

0801b512 <__sfputs_r>:
 801b512:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b514:	4606      	mov	r6, r0
 801b516:	460f      	mov	r7, r1
 801b518:	4614      	mov	r4, r2
 801b51a:	18d5      	adds	r5, r2, r3
 801b51c:	42ac      	cmp	r4, r5
 801b51e:	d101      	bne.n	801b524 <__sfputs_r+0x12>
 801b520:	2000      	movs	r0, #0
 801b522:	e007      	b.n	801b534 <__sfputs_r+0x22>
 801b524:	463a      	mov	r2, r7
 801b526:	f814 1b01 	ldrb.w	r1, [r4], #1
 801b52a:	4630      	mov	r0, r6
 801b52c:	f7ff ffda 	bl	801b4e4 <__sfputc_r>
 801b530:	1c43      	adds	r3, r0, #1
 801b532:	d1f3      	bne.n	801b51c <__sfputs_r+0xa>
 801b534:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801b538 <_vfiprintf_r>:
 801b538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b53c:	460c      	mov	r4, r1
 801b53e:	b09d      	sub	sp, #116	; 0x74
 801b540:	4617      	mov	r7, r2
 801b542:	461d      	mov	r5, r3
 801b544:	4606      	mov	r6, r0
 801b546:	b118      	cbz	r0, 801b550 <_vfiprintf_r+0x18>
 801b548:	6983      	ldr	r3, [r0, #24]
 801b54a:	b90b      	cbnz	r3, 801b550 <_vfiprintf_r+0x18>
 801b54c:	f000 fd1a 	bl	801bf84 <__sinit>
 801b550:	4b7c      	ldr	r3, [pc, #496]	; (801b744 <_vfiprintf_r+0x20c>)
 801b552:	429c      	cmp	r4, r3
 801b554:	d158      	bne.n	801b608 <_vfiprintf_r+0xd0>
 801b556:	6874      	ldr	r4, [r6, #4]
 801b558:	89a3      	ldrh	r3, [r4, #12]
 801b55a:	0718      	lsls	r0, r3, #28
 801b55c:	d55e      	bpl.n	801b61c <_vfiprintf_r+0xe4>
 801b55e:	6923      	ldr	r3, [r4, #16]
 801b560:	2b00      	cmp	r3, #0
 801b562:	d05b      	beq.n	801b61c <_vfiprintf_r+0xe4>
 801b564:	2300      	movs	r3, #0
 801b566:	9309      	str	r3, [sp, #36]	; 0x24
 801b568:	2320      	movs	r3, #32
 801b56a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801b56e:	2330      	movs	r3, #48	; 0x30
 801b570:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801b574:	9503      	str	r5, [sp, #12]
 801b576:	f04f 0b01 	mov.w	fp, #1
 801b57a:	46b8      	mov	r8, r7
 801b57c:	4645      	mov	r5, r8
 801b57e:	f815 3b01 	ldrb.w	r3, [r5], #1
 801b582:	b10b      	cbz	r3, 801b588 <_vfiprintf_r+0x50>
 801b584:	2b25      	cmp	r3, #37	; 0x25
 801b586:	d154      	bne.n	801b632 <_vfiprintf_r+0xfa>
 801b588:	ebb8 0a07 	subs.w	sl, r8, r7
 801b58c:	d00b      	beq.n	801b5a6 <_vfiprintf_r+0x6e>
 801b58e:	4653      	mov	r3, sl
 801b590:	463a      	mov	r2, r7
 801b592:	4621      	mov	r1, r4
 801b594:	4630      	mov	r0, r6
 801b596:	f7ff ffbc 	bl	801b512 <__sfputs_r>
 801b59a:	3001      	adds	r0, #1
 801b59c:	f000 80c2 	beq.w	801b724 <_vfiprintf_r+0x1ec>
 801b5a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b5a2:	4453      	add	r3, sl
 801b5a4:	9309      	str	r3, [sp, #36]	; 0x24
 801b5a6:	f898 3000 	ldrb.w	r3, [r8]
 801b5aa:	2b00      	cmp	r3, #0
 801b5ac:	f000 80ba 	beq.w	801b724 <_vfiprintf_r+0x1ec>
 801b5b0:	2300      	movs	r3, #0
 801b5b2:	f04f 32ff 	mov.w	r2, #4294967295
 801b5b6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801b5ba:	9304      	str	r3, [sp, #16]
 801b5bc:	9307      	str	r3, [sp, #28]
 801b5be:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801b5c2:	931a      	str	r3, [sp, #104]	; 0x68
 801b5c4:	46a8      	mov	r8, r5
 801b5c6:	2205      	movs	r2, #5
 801b5c8:	f818 1b01 	ldrb.w	r1, [r8], #1
 801b5cc:	485e      	ldr	r0, [pc, #376]	; (801b748 <_vfiprintf_r+0x210>)
 801b5ce:	f7e4 fe17 	bl	8000200 <memchr>
 801b5d2:	9b04      	ldr	r3, [sp, #16]
 801b5d4:	bb78      	cbnz	r0, 801b636 <_vfiprintf_r+0xfe>
 801b5d6:	06d9      	lsls	r1, r3, #27
 801b5d8:	bf44      	itt	mi
 801b5da:	2220      	movmi	r2, #32
 801b5dc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801b5e0:	071a      	lsls	r2, r3, #28
 801b5e2:	bf44      	itt	mi
 801b5e4:	222b      	movmi	r2, #43	; 0x2b
 801b5e6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801b5ea:	782a      	ldrb	r2, [r5, #0]
 801b5ec:	2a2a      	cmp	r2, #42	; 0x2a
 801b5ee:	d02a      	beq.n	801b646 <_vfiprintf_r+0x10e>
 801b5f0:	9a07      	ldr	r2, [sp, #28]
 801b5f2:	46a8      	mov	r8, r5
 801b5f4:	2000      	movs	r0, #0
 801b5f6:	250a      	movs	r5, #10
 801b5f8:	4641      	mov	r1, r8
 801b5fa:	f811 3b01 	ldrb.w	r3, [r1], #1
 801b5fe:	3b30      	subs	r3, #48	; 0x30
 801b600:	2b09      	cmp	r3, #9
 801b602:	d969      	bls.n	801b6d8 <_vfiprintf_r+0x1a0>
 801b604:	b360      	cbz	r0, 801b660 <_vfiprintf_r+0x128>
 801b606:	e024      	b.n	801b652 <_vfiprintf_r+0x11a>
 801b608:	4b50      	ldr	r3, [pc, #320]	; (801b74c <_vfiprintf_r+0x214>)
 801b60a:	429c      	cmp	r4, r3
 801b60c:	d101      	bne.n	801b612 <_vfiprintf_r+0xda>
 801b60e:	68b4      	ldr	r4, [r6, #8]
 801b610:	e7a2      	b.n	801b558 <_vfiprintf_r+0x20>
 801b612:	4b4f      	ldr	r3, [pc, #316]	; (801b750 <_vfiprintf_r+0x218>)
 801b614:	429c      	cmp	r4, r3
 801b616:	bf08      	it	eq
 801b618:	68f4      	ldreq	r4, [r6, #12]
 801b61a:	e79d      	b.n	801b558 <_vfiprintf_r+0x20>
 801b61c:	4621      	mov	r1, r4
 801b61e:	4630      	mov	r0, r6
 801b620:	f000 faee 	bl	801bc00 <__swsetup_r>
 801b624:	2800      	cmp	r0, #0
 801b626:	d09d      	beq.n	801b564 <_vfiprintf_r+0x2c>
 801b628:	f04f 30ff 	mov.w	r0, #4294967295
 801b62c:	b01d      	add	sp, #116	; 0x74
 801b62e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b632:	46a8      	mov	r8, r5
 801b634:	e7a2      	b.n	801b57c <_vfiprintf_r+0x44>
 801b636:	4a44      	ldr	r2, [pc, #272]	; (801b748 <_vfiprintf_r+0x210>)
 801b638:	1a80      	subs	r0, r0, r2
 801b63a:	fa0b f000 	lsl.w	r0, fp, r0
 801b63e:	4318      	orrs	r0, r3
 801b640:	9004      	str	r0, [sp, #16]
 801b642:	4645      	mov	r5, r8
 801b644:	e7be      	b.n	801b5c4 <_vfiprintf_r+0x8c>
 801b646:	9a03      	ldr	r2, [sp, #12]
 801b648:	1d11      	adds	r1, r2, #4
 801b64a:	6812      	ldr	r2, [r2, #0]
 801b64c:	9103      	str	r1, [sp, #12]
 801b64e:	2a00      	cmp	r2, #0
 801b650:	db01      	blt.n	801b656 <_vfiprintf_r+0x11e>
 801b652:	9207      	str	r2, [sp, #28]
 801b654:	e004      	b.n	801b660 <_vfiprintf_r+0x128>
 801b656:	4252      	negs	r2, r2
 801b658:	f043 0302 	orr.w	r3, r3, #2
 801b65c:	9207      	str	r2, [sp, #28]
 801b65e:	9304      	str	r3, [sp, #16]
 801b660:	f898 3000 	ldrb.w	r3, [r8]
 801b664:	2b2e      	cmp	r3, #46	; 0x2e
 801b666:	d10e      	bne.n	801b686 <_vfiprintf_r+0x14e>
 801b668:	f898 3001 	ldrb.w	r3, [r8, #1]
 801b66c:	2b2a      	cmp	r3, #42	; 0x2a
 801b66e:	d138      	bne.n	801b6e2 <_vfiprintf_r+0x1aa>
 801b670:	9b03      	ldr	r3, [sp, #12]
 801b672:	1d1a      	adds	r2, r3, #4
 801b674:	681b      	ldr	r3, [r3, #0]
 801b676:	9203      	str	r2, [sp, #12]
 801b678:	2b00      	cmp	r3, #0
 801b67a:	bfb8      	it	lt
 801b67c:	f04f 33ff 	movlt.w	r3, #4294967295
 801b680:	f108 0802 	add.w	r8, r8, #2
 801b684:	9305      	str	r3, [sp, #20]
 801b686:	4d33      	ldr	r5, [pc, #204]	; (801b754 <_vfiprintf_r+0x21c>)
 801b688:	f898 1000 	ldrb.w	r1, [r8]
 801b68c:	2203      	movs	r2, #3
 801b68e:	4628      	mov	r0, r5
 801b690:	f7e4 fdb6 	bl	8000200 <memchr>
 801b694:	b140      	cbz	r0, 801b6a8 <_vfiprintf_r+0x170>
 801b696:	2340      	movs	r3, #64	; 0x40
 801b698:	1b40      	subs	r0, r0, r5
 801b69a:	fa03 f000 	lsl.w	r0, r3, r0
 801b69e:	9b04      	ldr	r3, [sp, #16]
 801b6a0:	4303      	orrs	r3, r0
 801b6a2:	f108 0801 	add.w	r8, r8, #1
 801b6a6:	9304      	str	r3, [sp, #16]
 801b6a8:	f898 1000 	ldrb.w	r1, [r8]
 801b6ac:	482a      	ldr	r0, [pc, #168]	; (801b758 <_vfiprintf_r+0x220>)
 801b6ae:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801b6b2:	2206      	movs	r2, #6
 801b6b4:	f108 0701 	add.w	r7, r8, #1
 801b6b8:	f7e4 fda2 	bl	8000200 <memchr>
 801b6bc:	2800      	cmp	r0, #0
 801b6be:	d037      	beq.n	801b730 <_vfiprintf_r+0x1f8>
 801b6c0:	4b26      	ldr	r3, [pc, #152]	; (801b75c <_vfiprintf_r+0x224>)
 801b6c2:	bb1b      	cbnz	r3, 801b70c <_vfiprintf_r+0x1d4>
 801b6c4:	9b03      	ldr	r3, [sp, #12]
 801b6c6:	3307      	adds	r3, #7
 801b6c8:	f023 0307 	bic.w	r3, r3, #7
 801b6cc:	3308      	adds	r3, #8
 801b6ce:	9303      	str	r3, [sp, #12]
 801b6d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b6d2:	444b      	add	r3, r9
 801b6d4:	9309      	str	r3, [sp, #36]	; 0x24
 801b6d6:	e750      	b.n	801b57a <_vfiprintf_r+0x42>
 801b6d8:	fb05 3202 	mla	r2, r5, r2, r3
 801b6dc:	2001      	movs	r0, #1
 801b6de:	4688      	mov	r8, r1
 801b6e0:	e78a      	b.n	801b5f8 <_vfiprintf_r+0xc0>
 801b6e2:	2300      	movs	r3, #0
 801b6e4:	f108 0801 	add.w	r8, r8, #1
 801b6e8:	9305      	str	r3, [sp, #20]
 801b6ea:	4619      	mov	r1, r3
 801b6ec:	250a      	movs	r5, #10
 801b6ee:	4640      	mov	r0, r8
 801b6f0:	f810 2b01 	ldrb.w	r2, [r0], #1
 801b6f4:	3a30      	subs	r2, #48	; 0x30
 801b6f6:	2a09      	cmp	r2, #9
 801b6f8:	d903      	bls.n	801b702 <_vfiprintf_r+0x1ca>
 801b6fa:	2b00      	cmp	r3, #0
 801b6fc:	d0c3      	beq.n	801b686 <_vfiprintf_r+0x14e>
 801b6fe:	9105      	str	r1, [sp, #20]
 801b700:	e7c1      	b.n	801b686 <_vfiprintf_r+0x14e>
 801b702:	fb05 2101 	mla	r1, r5, r1, r2
 801b706:	2301      	movs	r3, #1
 801b708:	4680      	mov	r8, r0
 801b70a:	e7f0      	b.n	801b6ee <_vfiprintf_r+0x1b6>
 801b70c:	ab03      	add	r3, sp, #12
 801b70e:	9300      	str	r3, [sp, #0]
 801b710:	4622      	mov	r2, r4
 801b712:	4b13      	ldr	r3, [pc, #76]	; (801b760 <_vfiprintf_r+0x228>)
 801b714:	a904      	add	r1, sp, #16
 801b716:	4630      	mov	r0, r6
 801b718:	f3af 8000 	nop.w
 801b71c:	f1b0 3fff 	cmp.w	r0, #4294967295
 801b720:	4681      	mov	r9, r0
 801b722:	d1d5      	bne.n	801b6d0 <_vfiprintf_r+0x198>
 801b724:	89a3      	ldrh	r3, [r4, #12]
 801b726:	065b      	lsls	r3, r3, #25
 801b728:	f53f af7e 	bmi.w	801b628 <_vfiprintf_r+0xf0>
 801b72c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801b72e:	e77d      	b.n	801b62c <_vfiprintf_r+0xf4>
 801b730:	ab03      	add	r3, sp, #12
 801b732:	9300      	str	r3, [sp, #0]
 801b734:	4622      	mov	r2, r4
 801b736:	4b0a      	ldr	r3, [pc, #40]	; (801b760 <_vfiprintf_r+0x228>)
 801b738:	a904      	add	r1, sp, #16
 801b73a:	4630      	mov	r0, r6
 801b73c:	f000 f888 	bl	801b850 <_printf_i>
 801b740:	e7ec      	b.n	801b71c <_vfiprintf_r+0x1e4>
 801b742:	bf00      	nop
 801b744:	0801f6d8 	.word	0x0801f6d8
 801b748:	0801f680 	.word	0x0801f680
 801b74c:	0801f6f8 	.word	0x0801f6f8
 801b750:	0801f6b8 	.word	0x0801f6b8
 801b754:	0801f686 	.word	0x0801f686
 801b758:	0801f68a 	.word	0x0801f68a
 801b75c:	00000000 	.word	0x00000000
 801b760:	0801b513 	.word	0x0801b513

0801b764 <_printf_common>:
 801b764:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b768:	4691      	mov	r9, r2
 801b76a:	461f      	mov	r7, r3
 801b76c:	688a      	ldr	r2, [r1, #8]
 801b76e:	690b      	ldr	r3, [r1, #16]
 801b770:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801b774:	4293      	cmp	r3, r2
 801b776:	bfb8      	it	lt
 801b778:	4613      	movlt	r3, r2
 801b77a:	f8c9 3000 	str.w	r3, [r9]
 801b77e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801b782:	4606      	mov	r6, r0
 801b784:	460c      	mov	r4, r1
 801b786:	b112      	cbz	r2, 801b78e <_printf_common+0x2a>
 801b788:	3301      	adds	r3, #1
 801b78a:	f8c9 3000 	str.w	r3, [r9]
 801b78e:	6823      	ldr	r3, [r4, #0]
 801b790:	0699      	lsls	r1, r3, #26
 801b792:	bf42      	ittt	mi
 801b794:	f8d9 3000 	ldrmi.w	r3, [r9]
 801b798:	3302      	addmi	r3, #2
 801b79a:	f8c9 3000 	strmi.w	r3, [r9]
 801b79e:	6825      	ldr	r5, [r4, #0]
 801b7a0:	f015 0506 	ands.w	r5, r5, #6
 801b7a4:	d107      	bne.n	801b7b6 <_printf_common+0x52>
 801b7a6:	f104 0a19 	add.w	sl, r4, #25
 801b7aa:	68e3      	ldr	r3, [r4, #12]
 801b7ac:	f8d9 2000 	ldr.w	r2, [r9]
 801b7b0:	1a9b      	subs	r3, r3, r2
 801b7b2:	42ab      	cmp	r3, r5
 801b7b4:	dc28      	bgt.n	801b808 <_printf_common+0xa4>
 801b7b6:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 801b7ba:	6822      	ldr	r2, [r4, #0]
 801b7bc:	3300      	adds	r3, #0
 801b7be:	bf18      	it	ne
 801b7c0:	2301      	movne	r3, #1
 801b7c2:	0692      	lsls	r2, r2, #26
 801b7c4:	d42d      	bmi.n	801b822 <_printf_common+0xbe>
 801b7c6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801b7ca:	4639      	mov	r1, r7
 801b7cc:	4630      	mov	r0, r6
 801b7ce:	47c0      	blx	r8
 801b7d0:	3001      	adds	r0, #1
 801b7d2:	d020      	beq.n	801b816 <_printf_common+0xb2>
 801b7d4:	6823      	ldr	r3, [r4, #0]
 801b7d6:	68e5      	ldr	r5, [r4, #12]
 801b7d8:	f8d9 2000 	ldr.w	r2, [r9]
 801b7dc:	f003 0306 	and.w	r3, r3, #6
 801b7e0:	2b04      	cmp	r3, #4
 801b7e2:	bf08      	it	eq
 801b7e4:	1aad      	subeq	r5, r5, r2
 801b7e6:	68a3      	ldr	r3, [r4, #8]
 801b7e8:	6922      	ldr	r2, [r4, #16]
 801b7ea:	bf0c      	ite	eq
 801b7ec:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801b7f0:	2500      	movne	r5, #0
 801b7f2:	4293      	cmp	r3, r2
 801b7f4:	bfc4      	itt	gt
 801b7f6:	1a9b      	subgt	r3, r3, r2
 801b7f8:	18ed      	addgt	r5, r5, r3
 801b7fa:	f04f 0900 	mov.w	r9, #0
 801b7fe:	341a      	adds	r4, #26
 801b800:	454d      	cmp	r5, r9
 801b802:	d11a      	bne.n	801b83a <_printf_common+0xd6>
 801b804:	2000      	movs	r0, #0
 801b806:	e008      	b.n	801b81a <_printf_common+0xb6>
 801b808:	2301      	movs	r3, #1
 801b80a:	4652      	mov	r2, sl
 801b80c:	4639      	mov	r1, r7
 801b80e:	4630      	mov	r0, r6
 801b810:	47c0      	blx	r8
 801b812:	3001      	adds	r0, #1
 801b814:	d103      	bne.n	801b81e <_printf_common+0xba>
 801b816:	f04f 30ff 	mov.w	r0, #4294967295
 801b81a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b81e:	3501      	adds	r5, #1
 801b820:	e7c3      	b.n	801b7aa <_printf_common+0x46>
 801b822:	18e1      	adds	r1, r4, r3
 801b824:	1c5a      	adds	r2, r3, #1
 801b826:	2030      	movs	r0, #48	; 0x30
 801b828:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801b82c:	4422      	add	r2, r4
 801b82e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801b832:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801b836:	3302      	adds	r3, #2
 801b838:	e7c5      	b.n	801b7c6 <_printf_common+0x62>
 801b83a:	2301      	movs	r3, #1
 801b83c:	4622      	mov	r2, r4
 801b83e:	4639      	mov	r1, r7
 801b840:	4630      	mov	r0, r6
 801b842:	47c0      	blx	r8
 801b844:	3001      	adds	r0, #1
 801b846:	d0e6      	beq.n	801b816 <_printf_common+0xb2>
 801b848:	f109 0901 	add.w	r9, r9, #1
 801b84c:	e7d8      	b.n	801b800 <_printf_common+0x9c>
	...

0801b850 <_printf_i>:
 801b850:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b854:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 801b858:	460c      	mov	r4, r1
 801b85a:	7e09      	ldrb	r1, [r1, #24]
 801b85c:	b085      	sub	sp, #20
 801b85e:	296e      	cmp	r1, #110	; 0x6e
 801b860:	4617      	mov	r7, r2
 801b862:	4606      	mov	r6, r0
 801b864:	4698      	mov	r8, r3
 801b866:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b868:	f000 80b3 	beq.w	801b9d2 <_printf_i+0x182>
 801b86c:	d822      	bhi.n	801b8b4 <_printf_i+0x64>
 801b86e:	2963      	cmp	r1, #99	; 0x63
 801b870:	d036      	beq.n	801b8e0 <_printf_i+0x90>
 801b872:	d80a      	bhi.n	801b88a <_printf_i+0x3a>
 801b874:	2900      	cmp	r1, #0
 801b876:	f000 80b9 	beq.w	801b9ec <_printf_i+0x19c>
 801b87a:	2958      	cmp	r1, #88	; 0x58
 801b87c:	f000 8083 	beq.w	801b986 <_printf_i+0x136>
 801b880:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801b884:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 801b888:	e032      	b.n	801b8f0 <_printf_i+0xa0>
 801b88a:	2964      	cmp	r1, #100	; 0x64
 801b88c:	d001      	beq.n	801b892 <_printf_i+0x42>
 801b88e:	2969      	cmp	r1, #105	; 0x69
 801b890:	d1f6      	bne.n	801b880 <_printf_i+0x30>
 801b892:	6820      	ldr	r0, [r4, #0]
 801b894:	6813      	ldr	r3, [r2, #0]
 801b896:	0605      	lsls	r5, r0, #24
 801b898:	f103 0104 	add.w	r1, r3, #4
 801b89c:	d52a      	bpl.n	801b8f4 <_printf_i+0xa4>
 801b89e:	681b      	ldr	r3, [r3, #0]
 801b8a0:	6011      	str	r1, [r2, #0]
 801b8a2:	2b00      	cmp	r3, #0
 801b8a4:	da03      	bge.n	801b8ae <_printf_i+0x5e>
 801b8a6:	222d      	movs	r2, #45	; 0x2d
 801b8a8:	425b      	negs	r3, r3
 801b8aa:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 801b8ae:	486f      	ldr	r0, [pc, #444]	; (801ba6c <_printf_i+0x21c>)
 801b8b0:	220a      	movs	r2, #10
 801b8b2:	e039      	b.n	801b928 <_printf_i+0xd8>
 801b8b4:	2973      	cmp	r1, #115	; 0x73
 801b8b6:	f000 809d 	beq.w	801b9f4 <_printf_i+0x1a4>
 801b8ba:	d808      	bhi.n	801b8ce <_printf_i+0x7e>
 801b8bc:	296f      	cmp	r1, #111	; 0x6f
 801b8be:	d020      	beq.n	801b902 <_printf_i+0xb2>
 801b8c0:	2970      	cmp	r1, #112	; 0x70
 801b8c2:	d1dd      	bne.n	801b880 <_printf_i+0x30>
 801b8c4:	6823      	ldr	r3, [r4, #0]
 801b8c6:	f043 0320 	orr.w	r3, r3, #32
 801b8ca:	6023      	str	r3, [r4, #0]
 801b8cc:	e003      	b.n	801b8d6 <_printf_i+0x86>
 801b8ce:	2975      	cmp	r1, #117	; 0x75
 801b8d0:	d017      	beq.n	801b902 <_printf_i+0xb2>
 801b8d2:	2978      	cmp	r1, #120	; 0x78
 801b8d4:	d1d4      	bne.n	801b880 <_printf_i+0x30>
 801b8d6:	2378      	movs	r3, #120	; 0x78
 801b8d8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801b8dc:	4864      	ldr	r0, [pc, #400]	; (801ba70 <_printf_i+0x220>)
 801b8de:	e055      	b.n	801b98c <_printf_i+0x13c>
 801b8e0:	6813      	ldr	r3, [r2, #0]
 801b8e2:	1d19      	adds	r1, r3, #4
 801b8e4:	681b      	ldr	r3, [r3, #0]
 801b8e6:	6011      	str	r1, [r2, #0]
 801b8e8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801b8ec:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801b8f0:	2301      	movs	r3, #1
 801b8f2:	e08c      	b.n	801ba0e <_printf_i+0x1be>
 801b8f4:	681b      	ldr	r3, [r3, #0]
 801b8f6:	6011      	str	r1, [r2, #0]
 801b8f8:	f010 0f40 	tst.w	r0, #64	; 0x40
 801b8fc:	bf18      	it	ne
 801b8fe:	b21b      	sxthne	r3, r3
 801b900:	e7cf      	b.n	801b8a2 <_printf_i+0x52>
 801b902:	6813      	ldr	r3, [r2, #0]
 801b904:	6825      	ldr	r5, [r4, #0]
 801b906:	1d18      	adds	r0, r3, #4
 801b908:	6010      	str	r0, [r2, #0]
 801b90a:	0628      	lsls	r0, r5, #24
 801b90c:	d501      	bpl.n	801b912 <_printf_i+0xc2>
 801b90e:	681b      	ldr	r3, [r3, #0]
 801b910:	e002      	b.n	801b918 <_printf_i+0xc8>
 801b912:	0668      	lsls	r0, r5, #25
 801b914:	d5fb      	bpl.n	801b90e <_printf_i+0xbe>
 801b916:	881b      	ldrh	r3, [r3, #0]
 801b918:	4854      	ldr	r0, [pc, #336]	; (801ba6c <_printf_i+0x21c>)
 801b91a:	296f      	cmp	r1, #111	; 0x6f
 801b91c:	bf14      	ite	ne
 801b91e:	220a      	movne	r2, #10
 801b920:	2208      	moveq	r2, #8
 801b922:	2100      	movs	r1, #0
 801b924:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801b928:	6865      	ldr	r5, [r4, #4]
 801b92a:	60a5      	str	r5, [r4, #8]
 801b92c:	2d00      	cmp	r5, #0
 801b92e:	f2c0 8095 	blt.w	801ba5c <_printf_i+0x20c>
 801b932:	6821      	ldr	r1, [r4, #0]
 801b934:	f021 0104 	bic.w	r1, r1, #4
 801b938:	6021      	str	r1, [r4, #0]
 801b93a:	2b00      	cmp	r3, #0
 801b93c:	d13d      	bne.n	801b9ba <_printf_i+0x16a>
 801b93e:	2d00      	cmp	r5, #0
 801b940:	f040 808e 	bne.w	801ba60 <_printf_i+0x210>
 801b944:	4665      	mov	r5, ip
 801b946:	2a08      	cmp	r2, #8
 801b948:	d10b      	bne.n	801b962 <_printf_i+0x112>
 801b94a:	6823      	ldr	r3, [r4, #0]
 801b94c:	07db      	lsls	r3, r3, #31
 801b94e:	d508      	bpl.n	801b962 <_printf_i+0x112>
 801b950:	6923      	ldr	r3, [r4, #16]
 801b952:	6862      	ldr	r2, [r4, #4]
 801b954:	429a      	cmp	r2, r3
 801b956:	bfde      	ittt	le
 801b958:	2330      	movle	r3, #48	; 0x30
 801b95a:	f805 3c01 	strble.w	r3, [r5, #-1]
 801b95e:	f105 35ff 	addle.w	r5, r5, #4294967295
 801b962:	ebac 0305 	sub.w	r3, ip, r5
 801b966:	6123      	str	r3, [r4, #16]
 801b968:	f8cd 8000 	str.w	r8, [sp]
 801b96c:	463b      	mov	r3, r7
 801b96e:	aa03      	add	r2, sp, #12
 801b970:	4621      	mov	r1, r4
 801b972:	4630      	mov	r0, r6
 801b974:	f7ff fef6 	bl	801b764 <_printf_common>
 801b978:	3001      	adds	r0, #1
 801b97a:	d14d      	bne.n	801ba18 <_printf_i+0x1c8>
 801b97c:	f04f 30ff 	mov.w	r0, #4294967295
 801b980:	b005      	add	sp, #20
 801b982:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b986:	4839      	ldr	r0, [pc, #228]	; (801ba6c <_printf_i+0x21c>)
 801b988:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 801b98c:	6813      	ldr	r3, [r2, #0]
 801b98e:	6821      	ldr	r1, [r4, #0]
 801b990:	1d1d      	adds	r5, r3, #4
 801b992:	681b      	ldr	r3, [r3, #0]
 801b994:	6015      	str	r5, [r2, #0]
 801b996:	060a      	lsls	r2, r1, #24
 801b998:	d50b      	bpl.n	801b9b2 <_printf_i+0x162>
 801b99a:	07ca      	lsls	r2, r1, #31
 801b99c:	bf44      	itt	mi
 801b99e:	f041 0120 	orrmi.w	r1, r1, #32
 801b9a2:	6021      	strmi	r1, [r4, #0]
 801b9a4:	b91b      	cbnz	r3, 801b9ae <_printf_i+0x15e>
 801b9a6:	6822      	ldr	r2, [r4, #0]
 801b9a8:	f022 0220 	bic.w	r2, r2, #32
 801b9ac:	6022      	str	r2, [r4, #0]
 801b9ae:	2210      	movs	r2, #16
 801b9b0:	e7b7      	b.n	801b922 <_printf_i+0xd2>
 801b9b2:	064d      	lsls	r5, r1, #25
 801b9b4:	bf48      	it	mi
 801b9b6:	b29b      	uxthmi	r3, r3
 801b9b8:	e7ef      	b.n	801b99a <_printf_i+0x14a>
 801b9ba:	4665      	mov	r5, ip
 801b9bc:	fbb3 f1f2 	udiv	r1, r3, r2
 801b9c0:	fb02 3311 	mls	r3, r2, r1, r3
 801b9c4:	5cc3      	ldrb	r3, [r0, r3]
 801b9c6:	f805 3d01 	strb.w	r3, [r5, #-1]!
 801b9ca:	460b      	mov	r3, r1
 801b9cc:	2900      	cmp	r1, #0
 801b9ce:	d1f5      	bne.n	801b9bc <_printf_i+0x16c>
 801b9d0:	e7b9      	b.n	801b946 <_printf_i+0xf6>
 801b9d2:	6813      	ldr	r3, [r2, #0]
 801b9d4:	6825      	ldr	r5, [r4, #0]
 801b9d6:	6961      	ldr	r1, [r4, #20]
 801b9d8:	1d18      	adds	r0, r3, #4
 801b9da:	6010      	str	r0, [r2, #0]
 801b9dc:	0628      	lsls	r0, r5, #24
 801b9de:	681b      	ldr	r3, [r3, #0]
 801b9e0:	d501      	bpl.n	801b9e6 <_printf_i+0x196>
 801b9e2:	6019      	str	r1, [r3, #0]
 801b9e4:	e002      	b.n	801b9ec <_printf_i+0x19c>
 801b9e6:	066a      	lsls	r2, r5, #25
 801b9e8:	d5fb      	bpl.n	801b9e2 <_printf_i+0x192>
 801b9ea:	8019      	strh	r1, [r3, #0]
 801b9ec:	2300      	movs	r3, #0
 801b9ee:	6123      	str	r3, [r4, #16]
 801b9f0:	4665      	mov	r5, ip
 801b9f2:	e7b9      	b.n	801b968 <_printf_i+0x118>
 801b9f4:	6813      	ldr	r3, [r2, #0]
 801b9f6:	1d19      	adds	r1, r3, #4
 801b9f8:	6011      	str	r1, [r2, #0]
 801b9fa:	681d      	ldr	r5, [r3, #0]
 801b9fc:	6862      	ldr	r2, [r4, #4]
 801b9fe:	2100      	movs	r1, #0
 801ba00:	4628      	mov	r0, r5
 801ba02:	f7e4 fbfd 	bl	8000200 <memchr>
 801ba06:	b108      	cbz	r0, 801ba0c <_printf_i+0x1bc>
 801ba08:	1b40      	subs	r0, r0, r5
 801ba0a:	6060      	str	r0, [r4, #4]
 801ba0c:	6863      	ldr	r3, [r4, #4]
 801ba0e:	6123      	str	r3, [r4, #16]
 801ba10:	2300      	movs	r3, #0
 801ba12:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801ba16:	e7a7      	b.n	801b968 <_printf_i+0x118>
 801ba18:	6923      	ldr	r3, [r4, #16]
 801ba1a:	462a      	mov	r2, r5
 801ba1c:	4639      	mov	r1, r7
 801ba1e:	4630      	mov	r0, r6
 801ba20:	47c0      	blx	r8
 801ba22:	3001      	adds	r0, #1
 801ba24:	d0aa      	beq.n	801b97c <_printf_i+0x12c>
 801ba26:	6823      	ldr	r3, [r4, #0]
 801ba28:	079b      	lsls	r3, r3, #30
 801ba2a:	d413      	bmi.n	801ba54 <_printf_i+0x204>
 801ba2c:	68e0      	ldr	r0, [r4, #12]
 801ba2e:	9b03      	ldr	r3, [sp, #12]
 801ba30:	4298      	cmp	r0, r3
 801ba32:	bfb8      	it	lt
 801ba34:	4618      	movlt	r0, r3
 801ba36:	e7a3      	b.n	801b980 <_printf_i+0x130>
 801ba38:	2301      	movs	r3, #1
 801ba3a:	464a      	mov	r2, r9
 801ba3c:	4639      	mov	r1, r7
 801ba3e:	4630      	mov	r0, r6
 801ba40:	47c0      	blx	r8
 801ba42:	3001      	adds	r0, #1
 801ba44:	d09a      	beq.n	801b97c <_printf_i+0x12c>
 801ba46:	3501      	adds	r5, #1
 801ba48:	68e3      	ldr	r3, [r4, #12]
 801ba4a:	9a03      	ldr	r2, [sp, #12]
 801ba4c:	1a9b      	subs	r3, r3, r2
 801ba4e:	42ab      	cmp	r3, r5
 801ba50:	dcf2      	bgt.n	801ba38 <_printf_i+0x1e8>
 801ba52:	e7eb      	b.n	801ba2c <_printf_i+0x1dc>
 801ba54:	2500      	movs	r5, #0
 801ba56:	f104 0919 	add.w	r9, r4, #25
 801ba5a:	e7f5      	b.n	801ba48 <_printf_i+0x1f8>
 801ba5c:	2b00      	cmp	r3, #0
 801ba5e:	d1ac      	bne.n	801b9ba <_printf_i+0x16a>
 801ba60:	7803      	ldrb	r3, [r0, #0]
 801ba62:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801ba66:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801ba6a:	e76c      	b.n	801b946 <_printf_i+0xf6>
 801ba6c:	0801f691 	.word	0x0801f691
 801ba70:	0801f6a2 	.word	0x0801f6a2

0801ba74 <_sbrk_r>:
 801ba74:	b538      	push	{r3, r4, r5, lr}
 801ba76:	4c06      	ldr	r4, [pc, #24]	; (801ba90 <_sbrk_r+0x1c>)
 801ba78:	2300      	movs	r3, #0
 801ba7a:	4605      	mov	r5, r0
 801ba7c:	4608      	mov	r0, r1
 801ba7e:	6023      	str	r3, [r4, #0]
 801ba80:	f7e6 fe62 	bl	8002748 <_sbrk>
 801ba84:	1c43      	adds	r3, r0, #1
 801ba86:	d102      	bne.n	801ba8e <_sbrk_r+0x1a>
 801ba88:	6823      	ldr	r3, [r4, #0]
 801ba8a:	b103      	cbz	r3, 801ba8e <_sbrk_r+0x1a>
 801ba8c:	602b      	str	r3, [r5, #0]
 801ba8e:	bd38      	pop	{r3, r4, r5, pc}
 801ba90:	2002700c 	.word	0x2002700c

0801ba94 <_raise_r>:
 801ba94:	291f      	cmp	r1, #31
 801ba96:	b538      	push	{r3, r4, r5, lr}
 801ba98:	4604      	mov	r4, r0
 801ba9a:	460d      	mov	r5, r1
 801ba9c:	d904      	bls.n	801baa8 <_raise_r+0x14>
 801ba9e:	2316      	movs	r3, #22
 801baa0:	6003      	str	r3, [r0, #0]
 801baa2:	f04f 30ff 	mov.w	r0, #4294967295
 801baa6:	bd38      	pop	{r3, r4, r5, pc}
 801baa8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801baaa:	b112      	cbz	r2, 801bab2 <_raise_r+0x1e>
 801baac:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801bab0:	b94b      	cbnz	r3, 801bac6 <_raise_r+0x32>
 801bab2:	4620      	mov	r0, r4
 801bab4:	f000 f830 	bl	801bb18 <_getpid_r>
 801bab8:	462a      	mov	r2, r5
 801baba:	4601      	mov	r1, r0
 801babc:	4620      	mov	r0, r4
 801babe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801bac2:	f000 b817 	b.w	801baf4 <_kill_r>
 801bac6:	2b01      	cmp	r3, #1
 801bac8:	d00a      	beq.n	801bae0 <_raise_r+0x4c>
 801baca:	1c59      	adds	r1, r3, #1
 801bacc:	d103      	bne.n	801bad6 <_raise_r+0x42>
 801bace:	2316      	movs	r3, #22
 801bad0:	6003      	str	r3, [r0, #0]
 801bad2:	2001      	movs	r0, #1
 801bad4:	e7e7      	b.n	801baa6 <_raise_r+0x12>
 801bad6:	2400      	movs	r4, #0
 801bad8:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801badc:	4628      	mov	r0, r5
 801bade:	4798      	blx	r3
 801bae0:	2000      	movs	r0, #0
 801bae2:	e7e0      	b.n	801baa6 <_raise_r+0x12>

0801bae4 <raise>:
 801bae4:	4b02      	ldr	r3, [pc, #8]	; (801baf0 <raise+0xc>)
 801bae6:	4601      	mov	r1, r0
 801bae8:	6818      	ldr	r0, [r3, #0]
 801baea:	f7ff bfd3 	b.w	801ba94 <_raise_r>
 801baee:	bf00      	nop
 801baf0:	20000094 	.word	0x20000094

0801baf4 <_kill_r>:
 801baf4:	b538      	push	{r3, r4, r5, lr}
 801baf6:	4c07      	ldr	r4, [pc, #28]	; (801bb14 <_kill_r+0x20>)
 801baf8:	2300      	movs	r3, #0
 801bafa:	4605      	mov	r5, r0
 801bafc:	4608      	mov	r0, r1
 801bafe:	4611      	mov	r1, r2
 801bb00:	6023      	str	r3, [r4, #0]
 801bb02:	f7e6 fd99 	bl	8002638 <_kill>
 801bb06:	1c43      	adds	r3, r0, #1
 801bb08:	d102      	bne.n	801bb10 <_kill_r+0x1c>
 801bb0a:	6823      	ldr	r3, [r4, #0]
 801bb0c:	b103      	cbz	r3, 801bb10 <_kill_r+0x1c>
 801bb0e:	602b      	str	r3, [r5, #0]
 801bb10:	bd38      	pop	{r3, r4, r5, pc}
 801bb12:	bf00      	nop
 801bb14:	2002700c 	.word	0x2002700c

0801bb18 <_getpid_r>:
 801bb18:	f7e6 bd86 	b.w	8002628 <_getpid>

0801bb1c <siprintf>:
 801bb1c:	b40e      	push	{r1, r2, r3}
 801bb1e:	b500      	push	{lr}
 801bb20:	b09c      	sub	sp, #112	; 0x70
 801bb22:	ab1d      	add	r3, sp, #116	; 0x74
 801bb24:	9002      	str	r0, [sp, #8]
 801bb26:	9006      	str	r0, [sp, #24]
 801bb28:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 801bb2c:	4809      	ldr	r0, [pc, #36]	; (801bb54 <siprintf+0x38>)
 801bb2e:	9107      	str	r1, [sp, #28]
 801bb30:	9104      	str	r1, [sp, #16]
 801bb32:	4909      	ldr	r1, [pc, #36]	; (801bb58 <siprintf+0x3c>)
 801bb34:	f853 2b04 	ldr.w	r2, [r3], #4
 801bb38:	9105      	str	r1, [sp, #20]
 801bb3a:	6800      	ldr	r0, [r0, #0]
 801bb3c:	9301      	str	r3, [sp, #4]
 801bb3e:	a902      	add	r1, sp, #8
 801bb40:	f000 fbaa 	bl	801c298 <_svfiprintf_r>
 801bb44:	9b02      	ldr	r3, [sp, #8]
 801bb46:	2200      	movs	r2, #0
 801bb48:	701a      	strb	r2, [r3, #0]
 801bb4a:	b01c      	add	sp, #112	; 0x70
 801bb4c:	f85d eb04 	ldr.w	lr, [sp], #4
 801bb50:	b003      	add	sp, #12
 801bb52:	4770      	bx	lr
 801bb54:	20000094 	.word	0x20000094
 801bb58:	ffff0208 	.word	0xffff0208

0801bb5c <__swbuf_r>:
 801bb5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bb5e:	460e      	mov	r6, r1
 801bb60:	4614      	mov	r4, r2
 801bb62:	4605      	mov	r5, r0
 801bb64:	b118      	cbz	r0, 801bb6e <__swbuf_r+0x12>
 801bb66:	6983      	ldr	r3, [r0, #24]
 801bb68:	b90b      	cbnz	r3, 801bb6e <__swbuf_r+0x12>
 801bb6a:	f000 fa0b 	bl	801bf84 <__sinit>
 801bb6e:	4b21      	ldr	r3, [pc, #132]	; (801bbf4 <__swbuf_r+0x98>)
 801bb70:	429c      	cmp	r4, r3
 801bb72:	d12a      	bne.n	801bbca <__swbuf_r+0x6e>
 801bb74:	686c      	ldr	r4, [r5, #4]
 801bb76:	69a3      	ldr	r3, [r4, #24]
 801bb78:	60a3      	str	r3, [r4, #8]
 801bb7a:	89a3      	ldrh	r3, [r4, #12]
 801bb7c:	071a      	lsls	r2, r3, #28
 801bb7e:	d52e      	bpl.n	801bbde <__swbuf_r+0x82>
 801bb80:	6923      	ldr	r3, [r4, #16]
 801bb82:	b363      	cbz	r3, 801bbde <__swbuf_r+0x82>
 801bb84:	6923      	ldr	r3, [r4, #16]
 801bb86:	6820      	ldr	r0, [r4, #0]
 801bb88:	1ac0      	subs	r0, r0, r3
 801bb8a:	6963      	ldr	r3, [r4, #20]
 801bb8c:	b2f6      	uxtb	r6, r6
 801bb8e:	4283      	cmp	r3, r0
 801bb90:	4637      	mov	r7, r6
 801bb92:	dc04      	bgt.n	801bb9e <__swbuf_r+0x42>
 801bb94:	4621      	mov	r1, r4
 801bb96:	4628      	mov	r0, r5
 801bb98:	f000 f98a 	bl	801beb0 <_fflush_r>
 801bb9c:	bb28      	cbnz	r0, 801bbea <__swbuf_r+0x8e>
 801bb9e:	68a3      	ldr	r3, [r4, #8]
 801bba0:	3b01      	subs	r3, #1
 801bba2:	60a3      	str	r3, [r4, #8]
 801bba4:	6823      	ldr	r3, [r4, #0]
 801bba6:	1c5a      	adds	r2, r3, #1
 801bba8:	6022      	str	r2, [r4, #0]
 801bbaa:	701e      	strb	r6, [r3, #0]
 801bbac:	6963      	ldr	r3, [r4, #20]
 801bbae:	3001      	adds	r0, #1
 801bbb0:	4283      	cmp	r3, r0
 801bbb2:	d004      	beq.n	801bbbe <__swbuf_r+0x62>
 801bbb4:	89a3      	ldrh	r3, [r4, #12]
 801bbb6:	07db      	lsls	r3, r3, #31
 801bbb8:	d519      	bpl.n	801bbee <__swbuf_r+0x92>
 801bbba:	2e0a      	cmp	r6, #10
 801bbbc:	d117      	bne.n	801bbee <__swbuf_r+0x92>
 801bbbe:	4621      	mov	r1, r4
 801bbc0:	4628      	mov	r0, r5
 801bbc2:	f000 f975 	bl	801beb0 <_fflush_r>
 801bbc6:	b190      	cbz	r0, 801bbee <__swbuf_r+0x92>
 801bbc8:	e00f      	b.n	801bbea <__swbuf_r+0x8e>
 801bbca:	4b0b      	ldr	r3, [pc, #44]	; (801bbf8 <__swbuf_r+0x9c>)
 801bbcc:	429c      	cmp	r4, r3
 801bbce:	d101      	bne.n	801bbd4 <__swbuf_r+0x78>
 801bbd0:	68ac      	ldr	r4, [r5, #8]
 801bbd2:	e7d0      	b.n	801bb76 <__swbuf_r+0x1a>
 801bbd4:	4b09      	ldr	r3, [pc, #36]	; (801bbfc <__swbuf_r+0xa0>)
 801bbd6:	429c      	cmp	r4, r3
 801bbd8:	bf08      	it	eq
 801bbda:	68ec      	ldreq	r4, [r5, #12]
 801bbdc:	e7cb      	b.n	801bb76 <__swbuf_r+0x1a>
 801bbde:	4621      	mov	r1, r4
 801bbe0:	4628      	mov	r0, r5
 801bbe2:	f000 f80d 	bl	801bc00 <__swsetup_r>
 801bbe6:	2800      	cmp	r0, #0
 801bbe8:	d0cc      	beq.n	801bb84 <__swbuf_r+0x28>
 801bbea:	f04f 37ff 	mov.w	r7, #4294967295
 801bbee:	4638      	mov	r0, r7
 801bbf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801bbf2:	bf00      	nop
 801bbf4:	0801f6d8 	.word	0x0801f6d8
 801bbf8:	0801f6f8 	.word	0x0801f6f8
 801bbfc:	0801f6b8 	.word	0x0801f6b8

0801bc00 <__swsetup_r>:
 801bc00:	4b32      	ldr	r3, [pc, #200]	; (801bccc <__swsetup_r+0xcc>)
 801bc02:	b570      	push	{r4, r5, r6, lr}
 801bc04:	681d      	ldr	r5, [r3, #0]
 801bc06:	4606      	mov	r6, r0
 801bc08:	460c      	mov	r4, r1
 801bc0a:	b125      	cbz	r5, 801bc16 <__swsetup_r+0x16>
 801bc0c:	69ab      	ldr	r3, [r5, #24]
 801bc0e:	b913      	cbnz	r3, 801bc16 <__swsetup_r+0x16>
 801bc10:	4628      	mov	r0, r5
 801bc12:	f000 f9b7 	bl	801bf84 <__sinit>
 801bc16:	4b2e      	ldr	r3, [pc, #184]	; (801bcd0 <__swsetup_r+0xd0>)
 801bc18:	429c      	cmp	r4, r3
 801bc1a:	d10f      	bne.n	801bc3c <__swsetup_r+0x3c>
 801bc1c:	686c      	ldr	r4, [r5, #4]
 801bc1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801bc22:	b29a      	uxth	r2, r3
 801bc24:	0715      	lsls	r5, r2, #28
 801bc26:	d42c      	bmi.n	801bc82 <__swsetup_r+0x82>
 801bc28:	06d0      	lsls	r0, r2, #27
 801bc2a:	d411      	bmi.n	801bc50 <__swsetup_r+0x50>
 801bc2c:	2209      	movs	r2, #9
 801bc2e:	6032      	str	r2, [r6, #0]
 801bc30:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801bc34:	81a3      	strh	r3, [r4, #12]
 801bc36:	f04f 30ff 	mov.w	r0, #4294967295
 801bc3a:	e03e      	b.n	801bcba <__swsetup_r+0xba>
 801bc3c:	4b25      	ldr	r3, [pc, #148]	; (801bcd4 <__swsetup_r+0xd4>)
 801bc3e:	429c      	cmp	r4, r3
 801bc40:	d101      	bne.n	801bc46 <__swsetup_r+0x46>
 801bc42:	68ac      	ldr	r4, [r5, #8]
 801bc44:	e7eb      	b.n	801bc1e <__swsetup_r+0x1e>
 801bc46:	4b24      	ldr	r3, [pc, #144]	; (801bcd8 <__swsetup_r+0xd8>)
 801bc48:	429c      	cmp	r4, r3
 801bc4a:	bf08      	it	eq
 801bc4c:	68ec      	ldreq	r4, [r5, #12]
 801bc4e:	e7e6      	b.n	801bc1e <__swsetup_r+0x1e>
 801bc50:	0751      	lsls	r1, r2, #29
 801bc52:	d512      	bpl.n	801bc7a <__swsetup_r+0x7a>
 801bc54:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801bc56:	b141      	cbz	r1, 801bc6a <__swsetup_r+0x6a>
 801bc58:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801bc5c:	4299      	cmp	r1, r3
 801bc5e:	d002      	beq.n	801bc66 <__swsetup_r+0x66>
 801bc60:	4630      	mov	r0, r6
 801bc62:	f7ff fb97 	bl	801b394 <_free_r>
 801bc66:	2300      	movs	r3, #0
 801bc68:	6363      	str	r3, [r4, #52]	; 0x34
 801bc6a:	89a3      	ldrh	r3, [r4, #12]
 801bc6c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801bc70:	81a3      	strh	r3, [r4, #12]
 801bc72:	2300      	movs	r3, #0
 801bc74:	6063      	str	r3, [r4, #4]
 801bc76:	6923      	ldr	r3, [r4, #16]
 801bc78:	6023      	str	r3, [r4, #0]
 801bc7a:	89a3      	ldrh	r3, [r4, #12]
 801bc7c:	f043 0308 	orr.w	r3, r3, #8
 801bc80:	81a3      	strh	r3, [r4, #12]
 801bc82:	6923      	ldr	r3, [r4, #16]
 801bc84:	b94b      	cbnz	r3, 801bc9a <__swsetup_r+0x9a>
 801bc86:	89a3      	ldrh	r3, [r4, #12]
 801bc88:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801bc8c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801bc90:	d003      	beq.n	801bc9a <__swsetup_r+0x9a>
 801bc92:	4621      	mov	r1, r4
 801bc94:	4630      	mov	r0, r6
 801bc96:	f000 fa23 	bl	801c0e0 <__smakebuf_r>
 801bc9a:	89a2      	ldrh	r2, [r4, #12]
 801bc9c:	f012 0301 	ands.w	r3, r2, #1
 801bca0:	d00c      	beq.n	801bcbc <__swsetup_r+0xbc>
 801bca2:	2300      	movs	r3, #0
 801bca4:	60a3      	str	r3, [r4, #8]
 801bca6:	6963      	ldr	r3, [r4, #20]
 801bca8:	425b      	negs	r3, r3
 801bcaa:	61a3      	str	r3, [r4, #24]
 801bcac:	6923      	ldr	r3, [r4, #16]
 801bcae:	b953      	cbnz	r3, 801bcc6 <__swsetup_r+0xc6>
 801bcb0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801bcb4:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 801bcb8:	d1ba      	bne.n	801bc30 <__swsetup_r+0x30>
 801bcba:	bd70      	pop	{r4, r5, r6, pc}
 801bcbc:	0792      	lsls	r2, r2, #30
 801bcbe:	bf58      	it	pl
 801bcc0:	6963      	ldrpl	r3, [r4, #20]
 801bcc2:	60a3      	str	r3, [r4, #8]
 801bcc4:	e7f2      	b.n	801bcac <__swsetup_r+0xac>
 801bcc6:	2000      	movs	r0, #0
 801bcc8:	e7f7      	b.n	801bcba <__swsetup_r+0xba>
 801bcca:	bf00      	nop
 801bccc:	20000094 	.word	0x20000094
 801bcd0:	0801f6d8 	.word	0x0801f6d8
 801bcd4:	0801f6f8 	.word	0x0801f6f8
 801bcd8:	0801f6b8 	.word	0x0801f6b8

0801bcdc <__register_exitproc>:
 801bcdc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801bce0:	4d2c      	ldr	r5, [pc, #176]	; (801bd94 <__register_exitproc+0xb8>)
 801bce2:	682c      	ldr	r4, [r5, #0]
 801bce4:	4607      	mov	r7, r0
 801bce6:	460e      	mov	r6, r1
 801bce8:	4691      	mov	r9, r2
 801bcea:	4698      	mov	r8, r3
 801bcec:	b934      	cbnz	r4, 801bcfc <__register_exitproc+0x20>
 801bcee:	4b2a      	ldr	r3, [pc, #168]	; (801bd98 <__register_exitproc+0xbc>)
 801bcf0:	4c2a      	ldr	r4, [pc, #168]	; (801bd9c <__register_exitproc+0xc0>)
 801bcf2:	602c      	str	r4, [r5, #0]
 801bcf4:	b113      	cbz	r3, 801bcfc <__register_exitproc+0x20>
 801bcf6:	681b      	ldr	r3, [r3, #0]
 801bcf8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801bcfc:	6863      	ldr	r3, [r4, #4]
 801bcfe:	2b1f      	cmp	r3, #31
 801bd00:	dd3d      	ble.n	801bd7e <__register_exitproc+0xa2>
 801bd02:	4b27      	ldr	r3, [pc, #156]	; (801bda0 <__register_exitproc+0xc4>)
 801bd04:	b91b      	cbnz	r3, 801bd0e <__register_exitproc+0x32>
 801bd06:	f04f 30ff 	mov.w	r0, #4294967295
 801bd0a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801bd0e:	208c      	movs	r0, #140	; 0x8c
 801bd10:	f7ff fb1c 	bl	801b34c <malloc>
 801bd14:	4604      	mov	r4, r0
 801bd16:	2800      	cmp	r0, #0
 801bd18:	d0f5      	beq.n	801bd06 <__register_exitproc+0x2a>
 801bd1a:	2300      	movs	r3, #0
 801bd1c:	682a      	ldr	r2, [r5, #0]
 801bd1e:	6002      	str	r2, [r0, #0]
 801bd20:	6043      	str	r3, [r0, #4]
 801bd22:	6028      	str	r0, [r5, #0]
 801bd24:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 801bd28:	b30f      	cbz	r7, 801bd6e <__register_exitproc+0x92>
 801bd2a:	f44f 7084 	mov.w	r0, #264	; 0x108
 801bd2e:	f7ff fb0d 	bl	801b34c <malloc>
 801bd32:	2800      	cmp	r0, #0
 801bd34:	d0e7      	beq.n	801bd06 <__register_exitproc+0x2a>
 801bd36:	2300      	movs	r3, #0
 801bd38:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801bd3c:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
 801bd40:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801bd44:	6862      	ldr	r2, [r4, #4]
 801bd46:	f840 9022 	str.w	r9, [r0, r2, lsl #2]
 801bd4a:	2301      	movs	r3, #1
 801bd4c:	4093      	lsls	r3, r2
 801bd4e:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 801bd52:	f8d0 2100 	ldr.w	r2, [r0, #256]	; 0x100
 801bd56:	431a      	orrs	r2, r3
 801bd58:	2f02      	cmp	r7, #2
 801bd5a:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 801bd5e:	f8c1 8080 	str.w	r8, [r1, #128]	; 0x80
 801bd62:	bf02      	ittt	eq
 801bd64:	f8d0 2104 	ldreq.w	r2, [r0, #260]	; 0x104
 801bd68:	4313      	orreq	r3, r2
 801bd6a:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801bd6e:	6863      	ldr	r3, [r4, #4]
 801bd70:	1c5a      	adds	r2, r3, #1
 801bd72:	3302      	adds	r3, #2
 801bd74:	6062      	str	r2, [r4, #4]
 801bd76:	2000      	movs	r0, #0
 801bd78:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801bd7c:	e7c5      	b.n	801bd0a <__register_exitproc+0x2e>
 801bd7e:	2f00      	cmp	r7, #0
 801bd80:	d0f5      	beq.n	801bd6e <__register_exitproc+0x92>
 801bd82:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801bd86:	2800      	cmp	r0, #0
 801bd88:	d1dc      	bne.n	801bd44 <__register_exitproc+0x68>
 801bd8a:	4b05      	ldr	r3, [pc, #20]	; (801bda0 <__register_exitproc+0xc4>)
 801bd8c:	2b00      	cmp	r3, #0
 801bd8e:	d0ba      	beq.n	801bd06 <__register_exitproc+0x2a>
 801bd90:	e7cb      	b.n	801bd2a <__register_exitproc+0x4e>
 801bd92:	bf00      	nop
 801bd94:	20026bb8 	.word	0x20026bb8
 801bd98:	0801f6b4 	.word	0x0801f6b4
 801bd9c:	20026b2c 	.word	0x20026b2c
 801bda0:	0801b34d 	.word	0x0801b34d

0801bda4 <__sflush_r>:
 801bda4:	898a      	ldrh	r2, [r1, #12]
 801bda6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801bdaa:	4605      	mov	r5, r0
 801bdac:	0710      	lsls	r0, r2, #28
 801bdae:	460c      	mov	r4, r1
 801bdb0:	d458      	bmi.n	801be64 <__sflush_r+0xc0>
 801bdb2:	684b      	ldr	r3, [r1, #4]
 801bdb4:	2b00      	cmp	r3, #0
 801bdb6:	dc05      	bgt.n	801bdc4 <__sflush_r+0x20>
 801bdb8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801bdba:	2b00      	cmp	r3, #0
 801bdbc:	dc02      	bgt.n	801bdc4 <__sflush_r+0x20>
 801bdbe:	2000      	movs	r0, #0
 801bdc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801bdc4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801bdc6:	2e00      	cmp	r6, #0
 801bdc8:	d0f9      	beq.n	801bdbe <__sflush_r+0x1a>
 801bdca:	2300      	movs	r3, #0
 801bdcc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801bdd0:	682f      	ldr	r7, [r5, #0]
 801bdd2:	6a21      	ldr	r1, [r4, #32]
 801bdd4:	602b      	str	r3, [r5, #0]
 801bdd6:	d032      	beq.n	801be3e <__sflush_r+0x9a>
 801bdd8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801bdda:	89a3      	ldrh	r3, [r4, #12]
 801bddc:	075a      	lsls	r2, r3, #29
 801bdde:	d505      	bpl.n	801bdec <__sflush_r+0x48>
 801bde0:	6863      	ldr	r3, [r4, #4]
 801bde2:	1ac0      	subs	r0, r0, r3
 801bde4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801bde6:	b10b      	cbz	r3, 801bdec <__sflush_r+0x48>
 801bde8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801bdea:	1ac0      	subs	r0, r0, r3
 801bdec:	2300      	movs	r3, #0
 801bdee:	4602      	mov	r2, r0
 801bdf0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801bdf2:	6a21      	ldr	r1, [r4, #32]
 801bdf4:	4628      	mov	r0, r5
 801bdf6:	47b0      	blx	r6
 801bdf8:	1c43      	adds	r3, r0, #1
 801bdfa:	89a3      	ldrh	r3, [r4, #12]
 801bdfc:	d106      	bne.n	801be0c <__sflush_r+0x68>
 801bdfe:	6829      	ldr	r1, [r5, #0]
 801be00:	291d      	cmp	r1, #29
 801be02:	d848      	bhi.n	801be96 <__sflush_r+0xf2>
 801be04:	4a29      	ldr	r2, [pc, #164]	; (801beac <__sflush_r+0x108>)
 801be06:	40ca      	lsrs	r2, r1
 801be08:	07d6      	lsls	r6, r2, #31
 801be0a:	d544      	bpl.n	801be96 <__sflush_r+0xf2>
 801be0c:	2200      	movs	r2, #0
 801be0e:	6062      	str	r2, [r4, #4]
 801be10:	04d9      	lsls	r1, r3, #19
 801be12:	6922      	ldr	r2, [r4, #16]
 801be14:	6022      	str	r2, [r4, #0]
 801be16:	d504      	bpl.n	801be22 <__sflush_r+0x7e>
 801be18:	1c42      	adds	r2, r0, #1
 801be1a:	d101      	bne.n	801be20 <__sflush_r+0x7c>
 801be1c:	682b      	ldr	r3, [r5, #0]
 801be1e:	b903      	cbnz	r3, 801be22 <__sflush_r+0x7e>
 801be20:	6560      	str	r0, [r4, #84]	; 0x54
 801be22:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801be24:	602f      	str	r7, [r5, #0]
 801be26:	2900      	cmp	r1, #0
 801be28:	d0c9      	beq.n	801bdbe <__sflush_r+0x1a>
 801be2a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801be2e:	4299      	cmp	r1, r3
 801be30:	d002      	beq.n	801be38 <__sflush_r+0x94>
 801be32:	4628      	mov	r0, r5
 801be34:	f7ff faae 	bl	801b394 <_free_r>
 801be38:	2000      	movs	r0, #0
 801be3a:	6360      	str	r0, [r4, #52]	; 0x34
 801be3c:	e7c0      	b.n	801bdc0 <__sflush_r+0x1c>
 801be3e:	2301      	movs	r3, #1
 801be40:	4628      	mov	r0, r5
 801be42:	47b0      	blx	r6
 801be44:	1c41      	adds	r1, r0, #1
 801be46:	d1c8      	bne.n	801bdda <__sflush_r+0x36>
 801be48:	682b      	ldr	r3, [r5, #0]
 801be4a:	2b00      	cmp	r3, #0
 801be4c:	d0c5      	beq.n	801bdda <__sflush_r+0x36>
 801be4e:	2b1d      	cmp	r3, #29
 801be50:	d001      	beq.n	801be56 <__sflush_r+0xb2>
 801be52:	2b16      	cmp	r3, #22
 801be54:	d101      	bne.n	801be5a <__sflush_r+0xb6>
 801be56:	602f      	str	r7, [r5, #0]
 801be58:	e7b1      	b.n	801bdbe <__sflush_r+0x1a>
 801be5a:	89a3      	ldrh	r3, [r4, #12]
 801be5c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801be60:	81a3      	strh	r3, [r4, #12]
 801be62:	e7ad      	b.n	801bdc0 <__sflush_r+0x1c>
 801be64:	690f      	ldr	r7, [r1, #16]
 801be66:	2f00      	cmp	r7, #0
 801be68:	d0a9      	beq.n	801bdbe <__sflush_r+0x1a>
 801be6a:	0793      	lsls	r3, r2, #30
 801be6c:	680e      	ldr	r6, [r1, #0]
 801be6e:	bf08      	it	eq
 801be70:	694b      	ldreq	r3, [r1, #20]
 801be72:	600f      	str	r7, [r1, #0]
 801be74:	bf18      	it	ne
 801be76:	2300      	movne	r3, #0
 801be78:	eba6 0807 	sub.w	r8, r6, r7
 801be7c:	608b      	str	r3, [r1, #8]
 801be7e:	f1b8 0f00 	cmp.w	r8, #0
 801be82:	dd9c      	ble.n	801bdbe <__sflush_r+0x1a>
 801be84:	4643      	mov	r3, r8
 801be86:	463a      	mov	r2, r7
 801be88:	6a21      	ldr	r1, [r4, #32]
 801be8a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801be8c:	4628      	mov	r0, r5
 801be8e:	47b0      	blx	r6
 801be90:	2800      	cmp	r0, #0
 801be92:	dc06      	bgt.n	801bea2 <__sflush_r+0xfe>
 801be94:	89a3      	ldrh	r3, [r4, #12]
 801be96:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801be9a:	81a3      	strh	r3, [r4, #12]
 801be9c:	f04f 30ff 	mov.w	r0, #4294967295
 801bea0:	e78e      	b.n	801bdc0 <__sflush_r+0x1c>
 801bea2:	4407      	add	r7, r0
 801bea4:	eba8 0800 	sub.w	r8, r8, r0
 801bea8:	e7e9      	b.n	801be7e <__sflush_r+0xda>
 801beaa:	bf00      	nop
 801beac:	20400001 	.word	0x20400001

0801beb0 <_fflush_r>:
 801beb0:	b538      	push	{r3, r4, r5, lr}
 801beb2:	690b      	ldr	r3, [r1, #16]
 801beb4:	4605      	mov	r5, r0
 801beb6:	460c      	mov	r4, r1
 801beb8:	b1db      	cbz	r3, 801bef2 <_fflush_r+0x42>
 801beba:	b118      	cbz	r0, 801bec4 <_fflush_r+0x14>
 801bebc:	6983      	ldr	r3, [r0, #24]
 801bebe:	b90b      	cbnz	r3, 801bec4 <_fflush_r+0x14>
 801bec0:	f000 f860 	bl	801bf84 <__sinit>
 801bec4:	4b0c      	ldr	r3, [pc, #48]	; (801bef8 <_fflush_r+0x48>)
 801bec6:	429c      	cmp	r4, r3
 801bec8:	d109      	bne.n	801bede <_fflush_r+0x2e>
 801beca:	686c      	ldr	r4, [r5, #4]
 801becc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801bed0:	b17b      	cbz	r3, 801bef2 <_fflush_r+0x42>
 801bed2:	4621      	mov	r1, r4
 801bed4:	4628      	mov	r0, r5
 801bed6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801beda:	f7ff bf63 	b.w	801bda4 <__sflush_r>
 801bede:	4b07      	ldr	r3, [pc, #28]	; (801befc <_fflush_r+0x4c>)
 801bee0:	429c      	cmp	r4, r3
 801bee2:	d101      	bne.n	801bee8 <_fflush_r+0x38>
 801bee4:	68ac      	ldr	r4, [r5, #8]
 801bee6:	e7f1      	b.n	801becc <_fflush_r+0x1c>
 801bee8:	4b05      	ldr	r3, [pc, #20]	; (801bf00 <_fflush_r+0x50>)
 801beea:	429c      	cmp	r4, r3
 801beec:	bf08      	it	eq
 801beee:	68ec      	ldreq	r4, [r5, #12]
 801bef0:	e7ec      	b.n	801becc <_fflush_r+0x1c>
 801bef2:	2000      	movs	r0, #0
 801bef4:	bd38      	pop	{r3, r4, r5, pc}
 801bef6:	bf00      	nop
 801bef8:	0801f6d8 	.word	0x0801f6d8
 801befc:	0801f6f8 	.word	0x0801f6f8
 801bf00:	0801f6b8 	.word	0x0801f6b8

0801bf04 <std>:
 801bf04:	2300      	movs	r3, #0
 801bf06:	b510      	push	{r4, lr}
 801bf08:	4604      	mov	r4, r0
 801bf0a:	e9c0 3300 	strd	r3, r3, [r0]
 801bf0e:	6083      	str	r3, [r0, #8]
 801bf10:	8181      	strh	r1, [r0, #12]
 801bf12:	6643      	str	r3, [r0, #100]	; 0x64
 801bf14:	81c2      	strh	r2, [r0, #14]
 801bf16:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801bf1a:	6183      	str	r3, [r0, #24]
 801bf1c:	4619      	mov	r1, r3
 801bf1e:	2208      	movs	r2, #8
 801bf20:	305c      	adds	r0, #92	; 0x5c
 801bf22:	f7ff fa2e 	bl	801b382 <memset>
 801bf26:	4b05      	ldr	r3, [pc, #20]	; (801bf3c <std+0x38>)
 801bf28:	6263      	str	r3, [r4, #36]	; 0x24
 801bf2a:	4b05      	ldr	r3, [pc, #20]	; (801bf40 <std+0x3c>)
 801bf2c:	62a3      	str	r3, [r4, #40]	; 0x28
 801bf2e:	4b05      	ldr	r3, [pc, #20]	; (801bf44 <std+0x40>)
 801bf30:	62e3      	str	r3, [r4, #44]	; 0x2c
 801bf32:	4b05      	ldr	r3, [pc, #20]	; (801bf48 <std+0x44>)
 801bf34:	6224      	str	r4, [r4, #32]
 801bf36:	6323      	str	r3, [r4, #48]	; 0x30
 801bf38:	bd10      	pop	{r4, pc}
 801bf3a:	bf00      	nop
 801bf3c:	0801c489 	.word	0x0801c489
 801bf40:	0801c4ab 	.word	0x0801c4ab
 801bf44:	0801c4e3 	.word	0x0801c4e3
 801bf48:	0801c507 	.word	0x0801c507

0801bf4c <_cleanup_r>:
 801bf4c:	4901      	ldr	r1, [pc, #4]	; (801bf54 <_cleanup_r+0x8>)
 801bf4e:	f000 b885 	b.w	801c05c <_fwalk_reent>
 801bf52:	bf00      	nop
 801bf54:	0801beb1 	.word	0x0801beb1

0801bf58 <__sfmoreglue>:
 801bf58:	b570      	push	{r4, r5, r6, lr}
 801bf5a:	1e4a      	subs	r2, r1, #1
 801bf5c:	2568      	movs	r5, #104	; 0x68
 801bf5e:	4355      	muls	r5, r2
 801bf60:	460e      	mov	r6, r1
 801bf62:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801bf66:	f7ff fa63 	bl	801b430 <_malloc_r>
 801bf6a:	4604      	mov	r4, r0
 801bf6c:	b140      	cbz	r0, 801bf80 <__sfmoreglue+0x28>
 801bf6e:	2100      	movs	r1, #0
 801bf70:	e9c0 1600 	strd	r1, r6, [r0]
 801bf74:	300c      	adds	r0, #12
 801bf76:	60a0      	str	r0, [r4, #8]
 801bf78:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801bf7c:	f7ff fa01 	bl	801b382 <memset>
 801bf80:	4620      	mov	r0, r4
 801bf82:	bd70      	pop	{r4, r5, r6, pc}

0801bf84 <__sinit>:
 801bf84:	6983      	ldr	r3, [r0, #24]
 801bf86:	b510      	push	{r4, lr}
 801bf88:	4604      	mov	r4, r0
 801bf8a:	bb33      	cbnz	r3, 801bfda <__sinit+0x56>
 801bf8c:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 801bf90:	6503      	str	r3, [r0, #80]	; 0x50
 801bf92:	4b12      	ldr	r3, [pc, #72]	; (801bfdc <__sinit+0x58>)
 801bf94:	4a12      	ldr	r2, [pc, #72]	; (801bfe0 <__sinit+0x5c>)
 801bf96:	681b      	ldr	r3, [r3, #0]
 801bf98:	6282      	str	r2, [r0, #40]	; 0x28
 801bf9a:	4298      	cmp	r0, r3
 801bf9c:	bf04      	itt	eq
 801bf9e:	2301      	moveq	r3, #1
 801bfa0:	6183      	streq	r3, [r0, #24]
 801bfa2:	f000 f81f 	bl	801bfe4 <__sfp>
 801bfa6:	6060      	str	r0, [r4, #4]
 801bfa8:	4620      	mov	r0, r4
 801bfaa:	f000 f81b 	bl	801bfe4 <__sfp>
 801bfae:	60a0      	str	r0, [r4, #8]
 801bfb0:	4620      	mov	r0, r4
 801bfb2:	f000 f817 	bl	801bfe4 <__sfp>
 801bfb6:	2200      	movs	r2, #0
 801bfb8:	60e0      	str	r0, [r4, #12]
 801bfba:	2104      	movs	r1, #4
 801bfbc:	6860      	ldr	r0, [r4, #4]
 801bfbe:	f7ff ffa1 	bl	801bf04 <std>
 801bfc2:	2201      	movs	r2, #1
 801bfc4:	2109      	movs	r1, #9
 801bfc6:	68a0      	ldr	r0, [r4, #8]
 801bfc8:	f7ff ff9c 	bl	801bf04 <std>
 801bfcc:	2202      	movs	r2, #2
 801bfce:	2112      	movs	r1, #18
 801bfd0:	68e0      	ldr	r0, [r4, #12]
 801bfd2:	f7ff ff97 	bl	801bf04 <std>
 801bfd6:	2301      	movs	r3, #1
 801bfd8:	61a3      	str	r3, [r4, #24]
 801bfda:	bd10      	pop	{r4, pc}
 801bfdc:	0801f67c 	.word	0x0801f67c
 801bfe0:	0801bf4d 	.word	0x0801bf4d

0801bfe4 <__sfp>:
 801bfe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bfe6:	4b1b      	ldr	r3, [pc, #108]	; (801c054 <__sfp+0x70>)
 801bfe8:	681e      	ldr	r6, [r3, #0]
 801bfea:	69b3      	ldr	r3, [r6, #24]
 801bfec:	4607      	mov	r7, r0
 801bfee:	b913      	cbnz	r3, 801bff6 <__sfp+0x12>
 801bff0:	4630      	mov	r0, r6
 801bff2:	f7ff ffc7 	bl	801bf84 <__sinit>
 801bff6:	3648      	adds	r6, #72	; 0x48
 801bff8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801bffc:	3b01      	subs	r3, #1
 801bffe:	d503      	bpl.n	801c008 <__sfp+0x24>
 801c000:	6833      	ldr	r3, [r6, #0]
 801c002:	b133      	cbz	r3, 801c012 <__sfp+0x2e>
 801c004:	6836      	ldr	r6, [r6, #0]
 801c006:	e7f7      	b.n	801bff8 <__sfp+0x14>
 801c008:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801c00c:	b16d      	cbz	r5, 801c02a <__sfp+0x46>
 801c00e:	3468      	adds	r4, #104	; 0x68
 801c010:	e7f4      	b.n	801bffc <__sfp+0x18>
 801c012:	2104      	movs	r1, #4
 801c014:	4638      	mov	r0, r7
 801c016:	f7ff ff9f 	bl	801bf58 <__sfmoreglue>
 801c01a:	6030      	str	r0, [r6, #0]
 801c01c:	2800      	cmp	r0, #0
 801c01e:	d1f1      	bne.n	801c004 <__sfp+0x20>
 801c020:	230c      	movs	r3, #12
 801c022:	603b      	str	r3, [r7, #0]
 801c024:	4604      	mov	r4, r0
 801c026:	4620      	mov	r0, r4
 801c028:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c02a:	4b0b      	ldr	r3, [pc, #44]	; (801c058 <__sfp+0x74>)
 801c02c:	6665      	str	r5, [r4, #100]	; 0x64
 801c02e:	e9c4 5500 	strd	r5, r5, [r4]
 801c032:	60a5      	str	r5, [r4, #8]
 801c034:	e9c4 3503 	strd	r3, r5, [r4, #12]
 801c038:	e9c4 5505 	strd	r5, r5, [r4, #20]
 801c03c:	2208      	movs	r2, #8
 801c03e:	4629      	mov	r1, r5
 801c040:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801c044:	f7ff f99d 	bl	801b382 <memset>
 801c048:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801c04c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801c050:	e7e9      	b.n	801c026 <__sfp+0x42>
 801c052:	bf00      	nop
 801c054:	0801f67c 	.word	0x0801f67c
 801c058:	ffff0001 	.word	0xffff0001

0801c05c <_fwalk_reent>:
 801c05c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c060:	4680      	mov	r8, r0
 801c062:	4689      	mov	r9, r1
 801c064:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801c068:	2600      	movs	r6, #0
 801c06a:	b914      	cbnz	r4, 801c072 <_fwalk_reent+0x16>
 801c06c:	4630      	mov	r0, r6
 801c06e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c072:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 801c076:	3f01      	subs	r7, #1
 801c078:	d501      	bpl.n	801c07e <_fwalk_reent+0x22>
 801c07a:	6824      	ldr	r4, [r4, #0]
 801c07c:	e7f5      	b.n	801c06a <_fwalk_reent+0xe>
 801c07e:	89ab      	ldrh	r3, [r5, #12]
 801c080:	2b01      	cmp	r3, #1
 801c082:	d907      	bls.n	801c094 <_fwalk_reent+0x38>
 801c084:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801c088:	3301      	adds	r3, #1
 801c08a:	d003      	beq.n	801c094 <_fwalk_reent+0x38>
 801c08c:	4629      	mov	r1, r5
 801c08e:	4640      	mov	r0, r8
 801c090:	47c8      	blx	r9
 801c092:	4306      	orrs	r6, r0
 801c094:	3568      	adds	r5, #104	; 0x68
 801c096:	e7ee      	b.n	801c076 <_fwalk_reent+0x1a>

0801c098 <__swhatbuf_r>:
 801c098:	b570      	push	{r4, r5, r6, lr}
 801c09a:	460e      	mov	r6, r1
 801c09c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c0a0:	2900      	cmp	r1, #0
 801c0a2:	b096      	sub	sp, #88	; 0x58
 801c0a4:	4614      	mov	r4, r2
 801c0a6:	461d      	mov	r5, r3
 801c0a8:	da07      	bge.n	801c0ba <__swhatbuf_r+0x22>
 801c0aa:	2300      	movs	r3, #0
 801c0ac:	602b      	str	r3, [r5, #0]
 801c0ae:	89b3      	ldrh	r3, [r6, #12]
 801c0b0:	061a      	lsls	r2, r3, #24
 801c0b2:	d410      	bmi.n	801c0d6 <__swhatbuf_r+0x3e>
 801c0b4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801c0b8:	e00e      	b.n	801c0d8 <__swhatbuf_r+0x40>
 801c0ba:	466a      	mov	r2, sp
 801c0bc:	f000 fa4a 	bl	801c554 <_fstat_r>
 801c0c0:	2800      	cmp	r0, #0
 801c0c2:	dbf2      	blt.n	801c0aa <__swhatbuf_r+0x12>
 801c0c4:	9a01      	ldr	r2, [sp, #4]
 801c0c6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801c0ca:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801c0ce:	425a      	negs	r2, r3
 801c0d0:	415a      	adcs	r2, r3
 801c0d2:	602a      	str	r2, [r5, #0]
 801c0d4:	e7ee      	b.n	801c0b4 <__swhatbuf_r+0x1c>
 801c0d6:	2340      	movs	r3, #64	; 0x40
 801c0d8:	2000      	movs	r0, #0
 801c0da:	6023      	str	r3, [r4, #0]
 801c0dc:	b016      	add	sp, #88	; 0x58
 801c0de:	bd70      	pop	{r4, r5, r6, pc}

0801c0e0 <__smakebuf_r>:
 801c0e0:	898b      	ldrh	r3, [r1, #12]
 801c0e2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801c0e4:	079d      	lsls	r5, r3, #30
 801c0e6:	4606      	mov	r6, r0
 801c0e8:	460c      	mov	r4, r1
 801c0ea:	d507      	bpl.n	801c0fc <__smakebuf_r+0x1c>
 801c0ec:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801c0f0:	6023      	str	r3, [r4, #0]
 801c0f2:	6123      	str	r3, [r4, #16]
 801c0f4:	2301      	movs	r3, #1
 801c0f6:	6163      	str	r3, [r4, #20]
 801c0f8:	b002      	add	sp, #8
 801c0fa:	bd70      	pop	{r4, r5, r6, pc}
 801c0fc:	ab01      	add	r3, sp, #4
 801c0fe:	466a      	mov	r2, sp
 801c100:	f7ff ffca 	bl	801c098 <__swhatbuf_r>
 801c104:	9900      	ldr	r1, [sp, #0]
 801c106:	4605      	mov	r5, r0
 801c108:	4630      	mov	r0, r6
 801c10a:	f7ff f991 	bl	801b430 <_malloc_r>
 801c10e:	b948      	cbnz	r0, 801c124 <__smakebuf_r+0x44>
 801c110:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c114:	059a      	lsls	r2, r3, #22
 801c116:	d4ef      	bmi.n	801c0f8 <__smakebuf_r+0x18>
 801c118:	f023 0303 	bic.w	r3, r3, #3
 801c11c:	f043 0302 	orr.w	r3, r3, #2
 801c120:	81a3      	strh	r3, [r4, #12]
 801c122:	e7e3      	b.n	801c0ec <__smakebuf_r+0xc>
 801c124:	4b0d      	ldr	r3, [pc, #52]	; (801c15c <__smakebuf_r+0x7c>)
 801c126:	62b3      	str	r3, [r6, #40]	; 0x28
 801c128:	89a3      	ldrh	r3, [r4, #12]
 801c12a:	6020      	str	r0, [r4, #0]
 801c12c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801c130:	81a3      	strh	r3, [r4, #12]
 801c132:	9b00      	ldr	r3, [sp, #0]
 801c134:	6163      	str	r3, [r4, #20]
 801c136:	9b01      	ldr	r3, [sp, #4]
 801c138:	6120      	str	r0, [r4, #16]
 801c13a:	b15b      	cbz	r3, 801c154 <__smakebuf_r+0x74>
 801c13c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c140:	4630      	mov	r0, r6
 801c142:	f000 fa19 	bl	801c578 <_isatty_r>
 801c146:	b128      	cbz	r0, 801c154 <__smakebuf_r+0x74>
 801c148:	89a3      	ldrh	r3, [r4, #12]
 801c14a:	f023 0303 	bic.w	r3, r3, #3
 801c14e:	f043 0301 	orr.w	r3, r3, #1
 801c152:	81a3      	strh	r3, [r4, #12]
 801c154:	89a3      	ldrh	r3, [r4, #12]
 801c156:	431d      	orrs	r5, r3
 801c158:	81a5      	strh	r5, [r4, #12]
 801c15a:	e7cd      	b.n	801c0f8 <__smakebuf_r+0x18>
 801c15c:	0801bf4d 	.word	0x0801bf4d

0801c160 <memmove>:
 801c160:	4288      	cmp	r0, r1
 801c162:	b510      	push	{r4, lr}
 801c164:	eb01 0302 	add.w	r3, r1, r2
 801c168:	d807      	bhi.n	801c17a <memmove+0x1a>
 801c16a:	1e42      	subs	r2, r0, #1
 801c16c:	4299      	cmp	r1, r3
 801c16e:	d00a      	beq.n	801c186 <memmove+0x26>
 801c170:	f811 4b01 	ldrb.w	r4, [r1], #1
 801c174:	f802 4f01 	strb.w	r4, [r2, #1]!
 801c178:	e7f8      	b.n	801c16c <memmove+0xc>
 801c17a:	4283      	cmp	r3, r0
 801c17c:	d9f5      	bls.n	801c16a <memmove+0xa>
 801c17e:	1881      	adds	r1, r0, r2
 801c180:	1ad2      	subs	r2, r2, r3
 801c182:	42d3      	cmn	r3, r2
 801c184:	d100      	bne.n	801c188 <memmove+0x28>
 801c186:	bd10      	pop	{r4, pc}
 801c188:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801c18c:	f801 4d01 	strb.w	r4, [r1, #-1]!
 801c190:	e7f7      	b.n	801c182 <memmove+0x22>

0801c192 <__malloc_lock>:
 801c192:	4770      	bx	lr

0801c194 <__malloc_unlock>:
 801c194:	4770      	bx	lr

0801c196 <_realloc_r>:
 801c196:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c198:	4607      	mov	r7, r0
 801c19a:	4614      	mov	r4, r2
 801c19c:	460e      	mov	r6, r1
 801c19e:	b921      	cbnz	r1, 801c1aa <_realloc_r+0x14>
 801c1a0:	4611      	mov	r1, r2
 801c1a2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801c1a6:	f7ff b943 	b.w	801b430 <_malloc_r>
 801c1aa:	b922      	cbnz	r2, 801c1b6 <_realloc_r+0x20>
 801c1ac:	f7ff f8f2 	bl	801b394 <_free_r>
 801c1b0:	4625      	mov	r5, r4
 801c1b2:	4628      	mov	r0, r5
 801c1b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c1b6:	f000 fa01 	bl	801c5bc <_malloc_usable_size_r>
 801c1ba:	42a0      	cmp	r0, r4
 801c1bc:	d20f      	bcs.n	801c1de <_realloc_r+0x48>
 801c1be:	4621      	mov	r1, r4
 801c1c0:	4638      	mov	r0, r7
 801c1c2:	f7ff f935 	bl	801b430 <_malloc_r>
 801c1c6:	4605      	mov	r5, r0
 801c1c8:	2800      	cmp	r0, #0
 801c1ca:	d0f2      	beq.n	801c1b2 <_realloc_r+0x1c>
 801c1cc:	4631      	mov	r1, r6
 801c1ce:	4622      	mov	r2, r4
 801c1d0:	f7ff f8cc 	bl	801b36c <memcpy>
 801c1d4:	4631      	mov	r1, r6
 801c1d6:	4638      	mov	r0, r7
 801c1d8:	f7ff f8dc 	bl	801b394 <_free_r>
 801c1dc:	e7e9      	b.n	801c1b2 <_realloc_r+0x1c>
 801c1de:	4635      	mov	r5, r6
 801c1e0:	e7e7      	b.n	801c1b2 <_realloc_r+0x1c>

0801c1e2 <__ssputs_r>:
 801c1e2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c1e6:	688e      	ldr	r6, [r1, #8]
 801c1e8:	429e      	cmp	r6, r3
 801c1ea:	4682      	mov	sl, r0
 801c1ec:	460c      	mov	r4, r1
 801c1ee:	4690      	mov	r8, r2
 801c1f0:	4699      	mov	r9, r3
 801c1f2:	d837      	bhi.n	801c264 <__ssputs_r+0x82>
 801c1f4:	898a      	ldrh	r2, [r1, #12]
 801c1f6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 801c1fa:	d031      	beq.n	801c260 <__ssputs_r+0x7e>
 801c1fc:	6825      	ldr	r5, [r4, #0]
 801c1fe:	6909      	ldr	r1, [r1, #16]
 801c200:	1a6f      	subs	r7, r5, r1
 801c202:	6965      	ldr	r5, [r4, #20]
 801c204:	2302      	movs	r3, #2
 801c206:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c20a:	fb95 f5f3 	sdiv	r5, r5, r3
 801c20e:	f109 0301 	add.w	r3, r9, #1
 801c212:	443b      	add	r3, r7
 801c214:	429d      	cmp	r5, r3
 801c216:	bf38      	it	cc
 801c218:	461d      	movcc	r5, r3
 801c21a:	0553      	lsls	r3, r2, #21
 801c21c:	d530      	bpl.n	801c280 <__ssputs_r+0x9e>
 801c21e:	4629      	mov	r1, r5
 801c220:	f7ff f906 	bl	801b430 <_malloc_r>
 801c224:	4606      	mov	r6, r0
 801c226:	b950      	cbnz	r0, 801c23e <__ssputs_r+0x5c>
 801c228:	230c      	movs	r3, #12
 801c22a:	f8ca 3000 	str.w	r3, [sl]
 801c22e:	89a3      	ldrh	r3, [r4, #12]
 801c230:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c234:	81a3      	strh	r3, [r4, #12]
 801c236:	f04f 30ff 	mov.w	r0, #4294967295
 801c23a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c23e:	463a      	mov	r2, r7
 801c240:	6921      	ldr	r1, [r4, #16]
 801c242:	f7ff f893 	bl	801b36c <memcpy>
 801c246:	89a3      	ldrh	r3, [r4, #12]
 801c248:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 801c24c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801c250:	81a3      	strh	r3, [r4, #12]
 801c252:	6126      	str	r6, [r4, #16]
 801c254:	6165      	str	r5, [r4, #20]
 801c256:	443e      	add	r6, r7
 801c258:	1bed      	subs	r5, r5, r7
 801c25a:	6026      	str	r6, [r4, #0]
 801c25c:	60a5      	str	r5, [r4, #8]
 801c25e:	464e      	mov	r6, r9
 801c260:	454e      	cmp	r6, r9
 801c262:	d900      	bls.n	801c266 <__ssputs_r+0x84>
 801c264:	464e      	mov	r6, r9
 801c266:	4632      	mov	r2, r6
 801c268:	4641      	mov	r1, r8
 801c26a:	6820      	ldr	r0, [r4, #0]
 801c26c:	f7ff ff78 	bl	801c160 <memmove>
 801c270:	68a3      	ldr	r3, [r4, #8]
 801c272:	1b9b      	subs	r3, r3, r6
 801c274:	60a3      	str	r3, [r4, #8]
 801c276:	6823      	ldr	r3, [r4, #0]
 801c278:	441e      	add	r6, r3
 801c27a:	6026      	str	r6, [r4, #0]
 801c27c:	2000      	movs	r0, #0
 801c27e:	e7dc      	b.n	801c23a <__ssputs_r+0x58>
 801c280:	462a      	mov	r2, r5
 801c282:	f7ff ff88 	bl	801c196 <_realloc_r>
 801c286:	4606      	mov	r6, r0
 801c288:	2800      	cmp	r0, #0
 801c28a:	d1e2      	bne.n	801c252 <__ssputs_r+0x70>
 801c28c:	6921      	ldr	r1, [r4, #16]
 801c28e:	4650      	mov	r0, sl
 801c290:	f7ff f880 	bl	801b394 <_free_r>
 801c294:	e7c8      	b.n	801c228 <__ssputs_r+0x46>
	...

0801c298 <_svfiprintf_r>:
 801c298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c29c:	461d      	mov	r5, r3
 801c29e:	898b      	ldrh	r3, [r1, #12]
 801c2a0:	061f      	lsls	r7, r3, #24
 801c2a2:	b09d      	sub	sp, #116	; 0x74
 801c2a4:	4680      	mov	r8, r0
 801c2a6:	460c      	mov	r4, r1
 801c2a8:	4616      	mov	r6, r2
 801c2aa:	d50f      	bpl.n	801c2cc <_svfiprintf_r+0x34>
 801c2ac:	690b      	ldr	r3, [r1, #16]
 801c2ae:	b96b      	cbnz	r3, 801c2cc <_svfiprintf_r+0x34>
 801c2b0:	2140      	movs	r1, #64	; 0x40
 801c2b2:	f7ff f8bd 	bl	801b430 <_malloc_r>
 801c2b6:	6020      	str	r0, [r4, #0]
 801c2b8:	6120      	str	r0, [r4, #16]
 801c2ba:	b928      	cbnz	r0, 801c2c8 <_svfiprintf_r+0x30>
 801c2bc:	230c      	movs	r3, #12
 801c2be:	f8c8 3000 	str.w	r3, [r8]
 801c2c2:	f04f 30ff 	mov.w	r0, #4294967295
 801c2c6:	e0c8      	b.n	801c45a <_svfiprintf_r+0x1c2>
 801c2c8:	2340      	movs	r3, #64	; 0x40
 801c2ca:	6163      	str	r3, [r4, #20]
 801c2cc:	2300      	movs	r3, #0
 801c2ce:	9309      	str	r3, [sp, #36]	; 0x24
 801c2d0:	2320      	movs	r3, #32
 801c2d2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801c2d6:	2330      	movs	r3, #48	; 0x30
 801c2d8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801c2dc:	9503      	str	r5, [sp, #12]
 801c2de:	f04f 0b01 	mov.w	fp, #1
 801c2e2:	4637      	mov	r7, r6
 801c2e4:	463d      	mov	r5, r7
 801c2e6:	f815 3b01 	ldrb.w	r3, [r5], #1
 801c2ea:	b10b      	cbz	r3, 801c2f0 <_svfiprintf_r+0x58>
 801c2ec:	2b25      	cmp	r3, #37	; 0x25
 801c2ee:	d13e      	bne.n	801c36e <_svfiprintf_r+0xd6>
 801c2f0:	ebb7 0a06 	subs.w	sl, r7, r6
 801c2f4:	d00b      	beq.n	801c30e <_svfiprintf_r+0x76>
 801c2f6:	4653      	mov	r3, sl
 801c2f8:	4632      	mov	r2, r6
 801c2fa:	4621      	mov	r1, r4
 801c2fc:	4640      	mov	r0, r8
 801c2fe:	f7ff ff70 	bl	801c1e2 <__ssputs_r>
 801c302:	3001      	adds	r0, #1
 801c304:	f000 80a4 	beq.w	801c450 <_svfiprintf_r+0x1b8>
 801c308:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c30a:	4453      	add	r3, sl
 801c30c:	9309      	str	r3, [sp, #36]	; 0x24
 801c30e:	783b      	ldrb	r3, [r7, #0]
 801c310:	2b00      	cmp	r3, #0
 801c312:	f000 809d 	beq.w	801c450 <_svfiprintf_r+0x1b8>
 801c316:	2300      	movs	r3, #0
 801c318:	f04f 32ff 	mov.w	r2, #4294967295
 801c31c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801c320:	9304      	str	r3, [sp, #16]
 801c322:	9307      	str	r3, [sp, #28]
 801c324:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801c328:	931a      	str	r3, [sp, #104]	; 0x68
 801c32a:	462f      	mov	r7, r5
 801c32c:	2205      	movs	r2, #5
 801c32e:	f817 1b01 	ldrb.w	r1, [r7], #1
 801c332:	4850      	ldr	r0, [pc, #320]	; (801c474 <_svfiprintf_r+0x1dc>)
 801c334:	f7e3 ff64 	bl	8000200 <memchr>
 801c338:	9b04      	ldr	r3, [sp, #16]
 801c33a:	b9d0      	cbnz	r0, 801c372 <_svfiprintf_r+0xda>
 801c33c:	06d9      	lsls	r1, r3, #27
 801c33e:	bf44      	itt	mi
 801c340:	2220      	movmi	r2, #32
 801c342:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801c346:	071a      	lsls	r2, r3, #28
 801c348:	bf44      	itt	mi
 801c34a:	222b      	movmi	r2, #43	; 0x2b
 801c34c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801c350:	782a      	ldrb	r2, [r5, #0]
 801c352:	2a2a      	cmp	r2, #42	; 0x2a
 801c354:	d015      	beq.n	801c382 <_svfiprintf_r+0xea>
 801c356:	9a07      	ldr	r2, [sp, #28]
 801c358:	462f      	mov	r7, r5
 801c35a:	2000      	movs	r0, #0
 801c35c:	250a      	movs	r5, #10
 801c35e:	4639      	mov	r1, r7
 801c360:	f811 3b01 	ldrb.w	r3, [r1], #1
 801c364:	3b30      	subs	r3, #48	; 0x30
 801c366:	2b09      	cmp	r3, #9
 801c368:	d94d      	bls.n	801c406 <_svfiprintf_r+0x16e>
 801c36a:	b1b8      	cbz	r0, 801c39c <_svfiprintf_r+0x104>
 801c36c:	e00f      	b.n	801c38e <_svfiprintf_r+0xf6>
 801c36e:	462f      	mov	r7, r5
 801c370:	e7b8      	b.n	801c2e4 <_svfiprintf_r+0x4c>
 801c372:	4a40      	ldr	r2, [pc, #256]	; (801c474 <_svfiprintf_r+0x1dc>)
 801c374:	1a80      	subs	r0, r0, r2
 801c376:	fa0b f000 	lsl.w	r0, fp, r0
 801c37a:	4318      	orrs	r0, r3
 801c37c:	9004      	str	r0, [sp, #16]
 801c37e:	463d      	mov	r5, r7
 801c380:	e7d3      	b.n	801c32a <_svfiprintf_r+0x92>
 801c382:	9a03      	ldr	r2, [sp, #12]
 801c384:	1d11      	adds	r1, r2, #4
 801c386:	6812      	ldr	r2, [r2, #0]
 801c388:	9103      	str	r1, [sp, #12]
 801c38a:	2a00      	cmp	r2, #0
 801c38c:	db01      	blt.n	801c392 <_svfiprintf_r+0xfa>
 801c38e:	9207      	str	r2, [sp, #28]
 801c390:	e004      	b.n	801c39c <_svfiprintf_r+0x104>
 801c392:	4252      	negs	r2, r2
 801c394:	f043 0302 	orr.w	r3, r3, #2
 801c398:	9207      	str	r2, [sp, #28]
 801c39a:	9304      	str	r3, [sp, #16]
 801c39c:	783b      	ldrb	r3, [r7, #0]
 801c39e:	2b2e      	cmp	r3, #46	; 0x2e
 801c3a0:	d10c      	bne.n	801c3bc <_svfiprintf_r+0x124>
 801c3a2:	787b      	ldrb	r3, [r7, #1]
 801c3a4:	2b2a      	cmp	r3, #42	; 0x2a
 801c3a6:	d133      	bne.n	801c410 <_svfiprintf_r+0x178>
 801c3a8:	9b03      	ldr	r3, [sp, #12]
 801c3aa:	1d1a      	adds	r2, r3, #4
 801c3ac:	681b      	ldr	r3, [r3, #0]
 801c3ae:	9203      	str	r2, [sp, #12]
 801c3b0:	2b00      	cmp	r3, #0
 801c3b2:	bfb8      	it	lt
 801c3b4:	f04f 33ff 	movlt.w	r3, #4294967295
 801c3b8:	3702      	adds	r7, #2
 801c3ba:	9305      	str	r3, [sp, #20]
 801c3bc:	4d2e      	ldr	r5, [pc, #184]	; (801c478 <_svfiprintf_r+0x1e0>)
 801c3be:	7839      	ldrb	r1, [r7, #0]
 801c3c0:	2203      	movs	r2, #3
 801c3c2:	4628      	mov	r0, r5
 801c3c4:	f7e3 ff1c 	bl	8000200 <memchr>
 801c3c8:	b138      	cbz	r0, 801c3da <_svfiprintf_r+0x142>
 801c3ca:	2340      	movs	r3, #64	; 0x40
 801c3cc:	1b40      	subs	r0, r0, r5
 801c3ce:	fa03 f000 	lsl.w	r0, r3, r0
 801c3d2:	9b04      	ldr	r3, [sp, #16]
 801c3d4:	4303      	orrs	r3, r0
 801c3d6:	3701      	adds	r7, #1
 801c3d8:	9304      	str	r3, [sp, #16]
 801c3da:	7839      	ldrb	r1, [r7, #0]
 801c3dc:	4827      	ldr	r0, [pc, #156]	; (801c47c <_svfiprintf_r+0x1e4>)
 801c3de:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801c3e2:	2206      	movs	r2, #6
 801c3e4:	1c7e      	adds	r6, r7, #1
 801c3e6:	f7e3 ff0b 	bl	8000200 <memchr>
 801c3ea:	2800      	cmp	r0, #0
 801c3ec:	d038      	beq.n	801c460 <_svfiprintf_r+0x1c8>
 801c3ee:	4b24      	ldr	r3, [pc, #144]	; (801c480 <_svfiprintf_r+0x1e8>)
 801c3f0:	bb13      	cbnz	r3, 801c438 <_svfiprintf_r+0x1a0>
 801c3f2:	9b03      	ldr	r3, [sp, #12]
 801c3f4:	3307      	adds	r3, #7
 801c3f6:	f023 0307 	bic.w	r3, r3, #7
 801c3fa:	3308      	adds	r3, #8
 801c3fc:	9303      	str	r3, [sp, #12]
 801c3fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c400:	444b      	add	r3, r9
 801c402:	9309      	str	r3, [sp, #36]	; 0x24
 801c404:	e76d      	b.n	801c2e2 <_svfiprintf_r+0x4a>
 801c406:	fb05 3202 	mla	r2, r5, r2, r3
 801c40a:	2001      	movs	r0, #1
 801c40c:	460f      	mov	r7, r1
 801c40e:	e7a6      	b.n	801c35e <_svfiprintf_r+0xc6>
 801c410:	2300      	movs	r3, #0
 801c412:	3701      	adds	r7, #1
 801c414:	9305      	str	r3, [sp, #20]
 801c416:	4619      	mov	r1, r3
 801c418:	250a      	movs	r5, #10
 801c41a:	4638      	mov	r0, r7
 801c41c:	f810 2b01 	ldrb.w	r2, [r0], #1
 801c420:	3a30      	subs	r2, #48	; 0x30
 801c422:	2a09      	cmp	r2, #9
 801c424:	d903      	bls.n	801c42e <_svfiprintf_r+0x196>
 801c426:	2b00      	cmp	r3, #0
 801c428:	d0c8      	beq.n	801c3bc <_svfiprintf_r+0x124>
 801c42a:	9105      	str	r1, [sp, #20]
 801c42c:	e7c6      	b.n	801c3bc <_svfiprintf_r+0x124>
 801c42e:	fb05 2101 	mla	r1, r5, r1, r2
 801c432:	2301      	movs	r3, #1
 801c434:	4607      	mov	r7, r0
 801c436:	e7f0      	b.n	801c41a <_svfiprintf_r+0x182>
 801c438:	ab03      	add	r3, sp, #12
 801c43a:	9300      	str	r3, [sp, #0]
 801c43c:	4622      	mov	r2, r4
 801c43e:	4b11      	ldr	r3, [pc, #68]	; (801c484 <_svfiprintf_r+0x1ec>)
 801c440:	a904      	add	r1, sp, #16
 801c442:	4640      	mov	r0, r8
 801c444:	f3af 8000 	nop.w
 801c448:	f1b0 3fff 	cmp.w	r0, #4294967295
 801c44c:	4681      	mov	r9, r0
 801c44e:	d1d6      	bne.n	801c3fe <_svfiprintf_r+0x166>
 801c450:	89a3      	ldrh	r3, [r4, #12]
 801c452:	065b      	lsls	r3, r3, #25
 801c454:	f53f af35 	bmi.w	801c2c2 <_svfiprintf_r+0x2a>
 801c458:	9809      	ldr	r0, [sp, #36]	; 0x24
 801c45a:	b01d      	add	sp, #116	; 0x74
 801c45c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c460:	ab03      	add	r3, sp, #12
 801c462:	9300      	str	r3, [sp, #0]
 801c464:	4622      	mov	r2, r4
 801c466:	4b07      	ldr	r3, [pc, #28]	; (801c484 <_svfiprintf_r+0x1ec>)
 801c468:	a904      	add	r1, sp, #16
 801c46a:	4640      	mov	r0, r8
 801c46c:	f7ff f9f0 	bl	801b850 <_printf_i>
 801c470:	e7ea      	b.n	801c448 <_svfiprintf_r+0x1b0>
 801c472:	bf00      	nop
 801c474:	0801f680 	.word	0x0801f680
 801c478:	0801f686 	.word	0x0801f686
 801c47c:	0801f68a 	.word	0x0801f68a
 801c480:	00000000 	.word	0x00000000
 801c484:	0801c1e3 	.word	0x0801c1e3

0801c488 <__sread>:
 801c488:	b510      	push	{r4, lr}
 801c48a:	460c      	mov	r4, r1
 801c48c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c490:	f000 f89c 	bl	801c5cc <_read_r>
 801c494:	2800      	cmp	r0, #0
 801c496:	bfab      	itete	ge
 801c498:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801c49a:	89a3      	ldrhlt	r3, [r4, #12]
 801c49c:	181b      	addge	r3, r3, r0
 801c49e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801c4a2:	bfac      	ite	ge
 801c4a4:	6563      	strge	r3, [r4, #84]	; 0x54
 801c4a6:	81a3      	strhlt	r3, [r4, #12]
 801c4a8:	bd10      	pop	{r4, pc}

0801c4aa <__swrite>:
 801c4aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c4ae:	461f      	mov	r7, r3
 801c4b0:	898b      	ldrh	r3, [r1, #12]
 801c4b2:	05db      	lsls	r3, r3, #23
 801c4b4:	4605      	mov	r5, r0
 801c4b6:	460c      	mov	r4, r1
 801c4b8:	4616      	mov	r6, r2
 801c4ba:	d505      	bpl.n	801c4c8 <__swrite+0x1e>
 801c4bc:	2302      	movs	r3, #2
 801c4be:	2200      	movs	r2, #0
 801c4c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c4c4:	f000 f868 	bl	801c598 <_lseek_r>
 801c4c8:	89a3      	ldrh	r3, [r4, #12]
 801c4ca:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c4ce:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801c4d2:	81a3      	strh	r3, [r4, #12]
 801c4d4:	4632      	mov	r2, r6
 801c4d6:	463b      	mov	r3, r7
 801c4d8:	4628      	mov	r0, r5
 801c4da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801c4de:	f000 b817 	b.w	801c510 <_write_r>

0801c4e2 <__sseek>:
 801c4e2:	b510      	push	{r4, lr}
 801c4e4:	460c      	mov	r4, r1
 801c4e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c4ea:	f000 f855 	bl	801c598 <_lseek_r>
 801c4ee:	1c43      	adds	r3, r0, #1
 801c4f0:	89a3      	ldrh	r3, [r4, #12]
 801c4f2:	bf15      	itete	ne
 801c4f4:	6560      	strne	r0, [r4, #84]	; 0x54
 801c4f6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801c4fa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801c4fe:	81a3      	strheq	r3, [r4, #12]
 801c500:	bf18      	it	ne
 801c502:	81a3      	strhne	r3, [r4, #12]
 801c504:	bd10      	pop	{r4, pc}

0801c506 <__sclose>:
 801c506:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c50a:	f000 b813 	b.w	801c534 <_close_r>
	...

0801c510 <_write_r>:
 801c510:	b538      	push	{r3, r4, r5, lr}
 801c512:	4c07      	ldr	r4, [pc, #28]	; (801c530 <_write_r+0x20>)
 801c514:	4605      	mov	r5, r0
 801c516:	4608      	mov	r0, r1
 801c518:	4611      	mov	r1, r2
 801c51a:	2200      	movs	r2, #0
 801c51c:	6022      	str	r2, [r4, #0]
 801c51e:	461a      	mov	r2, r3
 801c520:	f7e6 f8c1 	bl	80026a6 <_write>
 801c524:	1c43      	adds	r3, r0, #1
 801c526:	d102      	bne.n	801c52e <_write_r+0x1e>
 801c528:	6823      	ldr	r3, [r4, #0]
 801c52a:	b103      	cbz	r3, 801c52e <_write_r+0x1e>
 801c52c:	602b      	str	r3, [r5, #0]
 801c52e:	bd38      	pop	{r3, r4, r5, pc}
 801c530:	2002700c 	.word	0x2002700c

0801c534 <_close_r>:
 801c534:	b538      	push	{r3, r4, r5, lr}
 801c536:	4c06      	ldr	r4, [pc, #24]	; (801c550 <_close_r+0x1c>)
 801c538:	2300      	movs	r3, #0
 801c53a:	4605      	mov	r5, r0
 801c53c:	4608      	mov	r0, r1
 801c53e:	6023      	str	r3, [r4, #0]
 801c540:	f7e6 f8cd 	bl	80026de <_close>
 801c544:	1c43      	adds	r3, r0, #1
 801c546:	d102      	bne.n	801c54e <_close_r+0x1a>
 801c548:	6823      	ldr	r3, [r4, #0]
 801c54a:	b103      	cbz	r3, 801c54e <_close_r+0x1a>
 801c54c:	602b      	str	r3, [r5, #0]
 801c54e:	bd38      	pop	{r3, r4, r5, pc}
 801c550:	2002700c 	.word	0x2002700c

0801c554 <_fstat_r>:
 801c554:	b538      	push	{r3, r4, r5, lr}
 801c556:	4c07      	ldr	r4, [pc, #28]	; (801c574 <_fstat_r+0x20>)
 801c558:	2300      	movs	r3, #0
 801c55a:	4605      	mov	r5, r0
 801c55c:	4608      	mov	r0, r1
 801c55e:	4611      	mov	r1, r2
 801c560:	6023      	str	r3, [r4, #0]
 801c562:	f7e6 f8c8 	bl	80026f6 <_fstat>
 801c566:	1c43      	adds	r3, r0, #1
 801c568:	d102      	bne.n	801c570 <_fstat_r+0x1c>
 801c56a:	6823      	ldr	r3, [r4, #0]
 801c56c:	b103      	cbz	r3, 801c570 <_fstat_r+0x1c>
 801c56e:	602b      	str	r3, [r5, #0]
 801c570:	bd38      	pop	{r3, r4, r5, pc}
 801c572:	bf00      	nop
 801c574:	2002700c 	.word	0x2002700c

0801c578 <_isatty_r>:
 801c578:	b538      	push	{r3, r4, r5, lr}
 801c57a:	4c06      	ldr	r4, [pc, #24]	; (801c594 <_isatty_r+0x1c>)
 801c57c:	2300      	movs	r3, #0
 801c57e:	4605      	mov	r5, r0
 801c580:	4608      	mov	r0, r1
 801c582:	6023      	str	r3, [r4, #0]
 801c584:	f7e6 f8c7 	bl	8002716 <_isatty>
 801c588:	1c43      	adds	r3, r0, #1
 801c58a:	d102      	bne.n	801c592 <_isatty_r+0x1a>
 801c58c:	6823      	ldr	r3, [r4, #0]
 801c58e:	b103      	cbz	r3, 801c592 <_isatty_r+0x1a>
 801c590:	602b      	str	r3, [r5, #0]
 801c592:	bd38      	pop	{r3, r4, r5, pc}
 801c594:	2002700c 	.word	0x2002700c

0801c598 <_lseek_r>:
 801c598:	b538      	push	{r3, r4, r5, lr}
 801c59a:	4c07      	ldr	r4, [pc, #28]	; (801c5b8 <_lseek_r+0x20>)
 801c59c:	4605      	mov	r5, r0
 801c59e:	4608      	mov	r0, r1
 801c5a0:	4611      	mov	r1, r2
 801c5a2:	2200      	movs	r2, #0
 801c5a4:	6022      	str	r2, [r4, #0]
 801c5a6:	461a      	mov	r2, r3
 801c5a8:	f7e6 f8c0 	bl	800272c <_lseek>
 801c5ac:	1c43      	adds	r3, r0, #1
 801c5ae:	d102      	bne.n	801c5b6 <_lseek_r+0x1e>
 801c5b0:	6823      	ldr	r3, [r4, #0]
 801c5b2:	b103      	cbz	r3, 801c5b6 <_lseek_r+0x1e>
 801c5b4:	602b      	str	r3, [r5, #0]
 801c5b6:	bd38      	pop	{r3, r4, r5, pc}
 801c5b8:	2002700c 	.word	0x2002700c

0801c5bc <_malloc_usable_size_r>:
 801c5bc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801c5c0:	1f18      	subs	r0, r3, #4
 801c5c2:	2b00      	cmp	r3, #0
 801c5c4:	bfbc      	itt	lt
 801c5c6:	580b      	ldrlt	r3, [r1, r0]
 801c5c8:	18c0      	addlt	r0, r0, r3
 801c5ca:	4770      	bx	lr

0801c5cc <_read_r>:
 801c5cc:	b538      	push	{r3, r4, r5, lr}
 801c5ce:	4c07      	ldr	r4, [pc, #28]	; (801c5ec <_read_r+0x20>)
 801c5d0:	4605      	mov	r5, r0
 801c5d2:	4608      	mov	r0, r1
 801c5d4:	4611      	mov	r1, r2
 801c5d6:	2200      	movs	r2, #0
 801c5d8:	6022      	str	r2, [r4, #0]
 801c5da:	461a      	mov	r2, r3
 801c5dc:	f7e6 f846 	bl	800266c <_read>
 801c5e0:	1c43      	adds	r3, r0, #1
 801c5e2:	d102      	bne.n	801c5ea <_read_r+0x1e>
 801c5e4:	6823      	ldr	r3, [r4, #0]
 801c5e6:	b103      	cbz	r3, 801c5ea <_read_r+0x1e>
 801c5e8:	602b      	str	r3, [r5, #0]
 801c5ea:	bd38      	pop	{r3, r4, r5, pc}
 801c5ec:	2002700c 	.word	0x2002700c

0801c5f0 <_init>:
 801c5f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c5f2:	bf00      	nop
 801c5f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c5f6:	bc08      	pop	{r3}
 801c5f8:	469e      	mov	lr, r3
 801c5fa:	4770      	bx	lr

0801c5fc <_fini>:
 801c5fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c5fe:	bf00      	nop
 801c600:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c602:	bc08      	pop	{r3}
 801c604:	469e      	mov	lr, r3
 801c606:	4770      	bx	lr
